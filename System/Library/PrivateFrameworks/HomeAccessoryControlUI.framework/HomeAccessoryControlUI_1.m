uint64_t sub_23E0081CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D213B8, _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa);
}

_QWORD *sub_23E0081E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D21388);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00ABF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E0082EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D21380);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00B36C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E0083F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D21310, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
}

uint64_t sub_23E00840C(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 *v49;
  char *v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v49 = a1;
  v53 = sub_23E135130();
  v55 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_23E134E78();
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21328);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v42 - v9;
  v10 = *(_QWORD *)(a2 + 64);
  v44 = a2 + 64;
  v11 = 1 << *(_BYTE *)(a2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v45 = (unint64_t)(v11 + 63) >> 6;
  v43 = v45 - 1;
  v46 = a2;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v51 = 0;
  v16 = v55;
  if (!v13)
    goto LABEL_6;
LABEL_4:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v18 = (uint64_t)v50;
  v19 = v17 | (v51 << 6);
LABEL_5:
  v20 = v46;
  (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v8, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v54 + 72) * v19, v52);
  v21 = v55;
  v22 = *(_QWORD *)(v20 + 56) + *(_QWORD *)(v55 + 72) * v19;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21330);
  (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(&v8[*(int *)(v23 + 48)], v22, v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
  while (1)
  {
    sub_23DF89340((uint64_t)v8, v18, &qword_256D21328);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21330);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v18, 1, v29) == 1)
    {
      swift_release();
      return sub_23E1376A4();
    }
    v30 = v18 + *(int *)(v29 + 48);
    v31 = v15;
    v32 = v54;
    v33 = v47;
    v34 = v18;
    v35 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v47, v34, v52);
    v36 = v48;
    v37 = v30;
    v38 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v48, v37, v53);
    v39 = *((_QWORD *)v49 + 8);
    v40 = v49[1];
    v56 = *v49;
    v57 = v40;
    v41 = v49[3];
    v58 = v49[2];
    v59 = v41;
    v60 = v39;
    sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v35);
    sub_23DF73F28(&qword_256D21340, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DB00], MEMORY[0x24BE4DB10]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v38);
    result = sub_23E1376D4();
    v15 = result ^ v31;
    if (v13)
      goto LABEL_4;
LABEL_6:
    v18 = (uint64_t)v50;
    v24 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 < v45)
    {
      v25 = *(_QWORD *)(v44 + 8 * v24);
      if (v25)
        goto LABEL_9;
      v26 = v51 + 2;
      ++v51;
      if (v24 + 1 < v45)
      {
        v25 = *(_QWORD *)(v44 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_9:
          v13 = (v25 - 1) & v25;
          v19 = __clz(__rbit64(v25)) + (v24 << 6);
          v51 = v24;
          goto LABEL_5;
        }
        v27 = v24 + 2;
        v51 = v24 + 1;
        if (v24 + 2 < v45)
          break;
      }
    }
LABEL_21:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21330);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
    v13 = 0;
  }
  v25 = *(_QWORD *)(v44 + 8 * v27);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v45)
    {
      v51 = v43;
      goto LABEL_21;
    }
    v25 = *(_QWORD *)(v44 + 8 * v24);
    ++v27;
    if (v25)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t _s22HomeAccessoryControlUI06MatterC6SolverC6SourceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int16 *v32;
  char v33;
  unsigned __int16 *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_23E13552C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21318);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v42 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v42 - v18;
  if ((_s22HomeAccessoryControlUI06MatterC6SolverC10SourcePathV2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0)
    goto LABEL_21;
  v42 = v7;
  v20 = type metadata accessor for MatterControlSolver.Source(0);
  v21 = *(int *)(v20 + 20);
  v44 = a1;
  sub_23DF89C1C(a1 + v21, (uint64_t)v19, &qword_256D1EED8);
  v43 = (int *)v20;
  v22 = *(int *)(v20 + 20);
  v45 = a2;
  sub_23DF89C1C(a2 + v22, (uint64_t)v17, &qword_256D1EED8);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DF89C1C((uint64_t)v19, (uint64_t)v10, &qword_256D1EED8);
  sub_23DF89C1C((uint64_t)v17, v23, &qword_256D1EED8);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1EED8);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1EED8);
    if (v24(v23, 1, v4) == 1)
    {
      sub_23DF89C7C((uint64_t)v10, &qword_256D1EED8);
      goto LABEL_9;
    }
LABEL_7:
    sub_23DF89C7C((uint64_t)v10, &qword_256D21318);
    goto LABEL_21;
  }
  sub_23DF89C1C((uint64_t)v10, (uint64_t)v14, &qword_256D1EED8);
  if (v24(v23, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1EED8);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1EED8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    goto LABEL_7;
  }
  v25 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v42, v23, v4);
  sub_23DF73F28(&qword_256D21320, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E068], MEMORY[0x24BE4E080]);
  v26 = sub_23E137158();
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v25, v4);
  sub_23DF89C7C((uint64_t)v17, &qword_256D1EED8);
  sub_23DF89C7C((uint64_t)v19, &qword_256D1EED8);
  v27(v14, v4);
  sub_23DF89C7C((uint64_t)v10, &qword_256D1EED8);
  if ((v26 & 1) == 0)
    goto LABEL_21;
LABEL_9:
  v29 = v43;
  v28 = v44;
  v30 = v45;
  if ((sub_23E006CC0(*(_QWORD *)(v44 + v43[6]), *(_QWORD *)(v45 + v43[6])) & 1) == 0
    || *(unsigned __int8 *)(v28 + v29[7]) != *(unsigned __int8 *)(v30 + v29[7]))
  {
    goto LABEL_21;
  }
  v31 = v29[8];
  v32 = (unsigned __int16 *)(v28 + v31);
  v33 = *(_BYTE *)(v28 + v31 + 2);
  v34 = (unsigned __int16 *)(v30 + v31);
  v35 = *(unsigned __int8 *)(v30 + v31 + 2);
  if ((v33 & 1) != 0)
  {
    if (v35)
      goto LABEL_17;
LABEL_21:
    v40 = 0;
    return v40 & 1;
  }
  if (*v32 != *v34)
    LOBYTE(v35) = 1;
  if ((v35 & 1) != 0)
    goto LABEL_21;
LABEL_17:
  if ((MEMORY[0x242649700](v28 + v29[9], v30 + v29[9]) & 1) == 0)
    goto LABEL_21;
  v36 = v29[10];
  v37 = *(_QWORD *)(v28 + v36);
  v38 = *(_QWORD *)(v28 + v36 + 8);
  v39 = (_QWORD *)(v30 + v36);
  if (v37 == *v39 && v38 == v39[1])
    v40 = 1;
  else
    v40 = sub_23E137614();
  return v40 & 1;
}

uint64_t _s22HomeAccessoryControlUI06MatterC6SolverC10SourcePathV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_23E134E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21348);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  if ((sub_23E134FD4() & 1) == 0)
    goto LABEL_8;
  v31 = v7;
  v20 = a2;
  v21 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v22 = *(int *)(v21 + 20);
  v33 = a1;
  sub_23DF89C1C(a1 + v22, (uint64_t)v19, &qword_256D1EEE0);
  v32 = v21;
  sub_23DF89C1C(v20 + *(int *)(v21 + 20), (uint64_t)v17, &qword_256D1EEE0);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DF89C1C((uint64_t)v19, (uint64_t)v10, &qword_256D1EEE0);
  sub_23DF89C1C((uint64_t)v17, v23, &qword_256D1EEE0);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1EEE0);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1EEE0);
    if (v24(v23, 1, v4) == 1)
    {
      sub_23DF89C7C((uint64_t)v10, &qword_256D1EEE0);
LABEL_11:
      sub_23E09B208(*(_BYTE *)(v33 + *(int *)(v32 + 24)));
      return v25 & 1;
    }
    goto LABEL_7;
  }
  sub_23DF89C1C((uint64_t)v10, (uint64_t)v14, &qword_256D1EEE0);
  if (v24(v23, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1EEE0);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1EEE0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_23DF89C7C((uint64_t)v10, &qword_256D21348);
    goto LABEL_8;
  }
  v27 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v23, v4);
  sub_23DF73F28(&qword_256D1D778, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D560]);
  v28 = sub_23E137158();
  v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v27, v4);
  sub_23DF89C7C((uint64_t)v17, &qword_256D1EEE0);
  sub_23DF89C7C((uint64_t)v19, &qword_256D1EEE0);
  v29(v14, v4);
  sub_23DF89C7C((uint64_t)v10, &qword_256D1EEE0);
  if ((v28 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v25 = 0;
  return v25 & 1;
}

unint64_t sub_23E008F74()
{
  unint64_t result;

  result = qword_256D210A0;
  if (!qword_256D210A0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13C0FC, &type metadata for MatterControlSolver.SourcePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D210A0);
  }
  return result;
}

unint64_t sub_23E008FB8()
{
  unint64_t result;

  result = qword_256D210B8;
  if (!qword_256D210B8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for MatterControlSolver.ControlIdentifier, &type metadata for MatterControlSolver.ControlIdentifier);
    atomic_store(result, (unint64_t *)&qword_256D210B8);
  }
  return result;
}

unint64_t sub_23E008FFC()
{
  unint64_t result;

  result = qword_256D210D8;
  if (!qword_256D210D8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for MatterControlSolver.ControlIdentifier, &type metadata for MatterControlSolver.ControlIdentifier);
    atomic_store(result, (unint64_t *)&qword_256D210D8);
  }
  return result;
}

uint64_t type metadata accessor for MatterControlSolver.Source(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D21288);
}

unint64_t sub_23E009058()
{
  unint64_t result;

  result = qword_256D210E0;
  if (!qword_256D210E0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for MatterControlSolver.ControlIdentifier, &type metadata for MatterControlSolver.ControlIdentifier);
    atomic_store(result, (unint64_t *)&qword_256D210E0);
  }
  return result;
}

uint64_t sub_23E00909C()
{
  return sub_23DF73F28(&qword_256D210E8, type metadata accessor for MatterControlSolver.SourcePath, (uint64_t)&protocol conformance descriptor for MatterControlSolver.SourcePath);
}

uint64_t sub_23E0090C8()
{
  return sub_23DF73F28(&qword_256D210F0, type metadata accessor for MatterControlSolver.Source, (uint64_t)&protocol conformance descriptor for MatterControlSolver.Source);
}

uint64_t type metadata accessor for MatterControlSolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for MatterControlSolver()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for AccessoryControlsStyle.MaterialStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterControlSolver.ControlIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E0091FC + 4 * byte_23E13BD09[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E009230 + 4 * byte_23E13BD04[v4]))();
}

uint64_t sub_23E009230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E009238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E009240);
  return result;
}

uint64_t sub_23E00924C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E009254);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E009258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E009260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterControlSolver.ControlIdentifier()
{
  return &type metadata for MatterControlSolver.ControlIdentifier;
}

_QWORD *initializeBufferWithCopyOfBuffer for MatterControlSolver.SourcePath(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134FEC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E134E78();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for MatterControlSolver.SourcePath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23E134E78();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for MatterControlSolver.SourcePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E134E78();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for MatterControlSolver.SourcePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23E134E78();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for MatterControlSolver.SourcePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E134E78();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for MatterControlSolver.SourcePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23E134E78();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterControlSolver.SourcePath()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00988C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_23E134FEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 4)
    return v14 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MatterControlSolver.SourcePath()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E009940(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E134FEC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
  return result;
}

void sub_23E0099E8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E134FEC();
  if (v0 <= 0x3F)
  {
    sub_23DFB3D54(319, qword_256D211F8, (void (*)(uint64_t))MEMORY[0x24BE4D540]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MatterControlSolver.Source(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134FEC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23E134E78();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + *(int *)(v8 + 24)) = *((_BYTE *)a2 + *(int *)(v8 + 24));
    v16 = a3[5];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23E13552C();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *(_WORD *)v25 = *(_WORD *)v26;
    v25[2] = v26[2];
    v27 = (char *)a1 + v24;
    v28 = (char *)a2 + v24;
    v29 = sub_23E134E60();
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v27, v28, v29);
    v31 = a3[10];
    v32 = (_QWORD *)((char *)a1 + v31);
    v33 = (_QWORD *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MatterControlSolver.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(type metadata accessor for MatterControlSolver.SourcePath(0) + 20);
  v6 = sub_23E134E78();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23E13552C();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v11 = a1 + *(int *)(a2 + 36);
  v12 = sub_23E134E60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MatterControlSolver.Source(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23E134E78();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v14 = a3[5];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_23E13552C();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_WORD *)v23 = *(_WORD *)v24;
  *(_BYTE *)(v23 + 2) = *(_BYTE *)(v24 + 2);
  v25 = a1 + v22;
  v26 = a2 + v22;
  v27 = sub_23E134E60();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v25, v26, v27);
  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MatterControlSolver.Source(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23E134E78();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v17 = a3[5];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_23E13552C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_BYTE *)(v28 + 2);
  *(_WORD *)v27 = *(_WORD *)v28;
  *(_BYTE *)(v27 + 2) = v29;
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23E134E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = a3[10];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MatterControlSolver.Source(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23E134E78();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v14 = a3[5];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_23E13552C();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_WORD *)v23 = *(_WORD *)v24;
  *(_BYTE *)(v23 + 2) = *(_BYTE *)(v24 + 2);
  v25 = a1 + v22;
  v26 = a2 + v22;
  v27 = sub_23E134E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for MatterControlSolver.Source(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v8 = *(int *)(v7 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23E134E78();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
  v17 = a3[5];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_23E13552C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v26 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_WORD *)v27 = *(_WORD *)v28;
  *(_BYTE *)(v27 + 2) = *(_BYTE *)(v28 + 2);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23E134E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterControlSolver.Source()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00A6E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23E134E60();
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[9];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterControlSolver.Source()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00A7C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
        return result;
      }
      v10 = sub_23E134E60();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E00A88C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for MatterControlSolver.SourcePath(319);
  if (v0 <= 0x3F)
  {
    sub_23DFB3D54(319, qword_256D21298, (void (*)(uint64_t))MEMORY[0x24BE4E068]);
    if (v1 <= 0x3F)
    {
      sub_23E134E60();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t storeEnumTagSinglePayload for MatterControlSolver.SourcePath.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E00A9B0 + 4 * byte_23E13BD13[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E00A9E4 + 4 * byte_23E13BD0E[v4]))();
}

uint64_t sub_23E00A9E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E00A9EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E00A9F4);
  return result;
}

uint64_t sub_23E00AA00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E00AA08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E00AA0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E00AA14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterControlSolver.SourcePath.CodingKeys()
{
  return &type metadata for MatterControlSolver.SourcePath.CodingKeys;
}

unint64_t sub_23E00AA34()
{
  unint64_t result;

  result = qword_256D212E0;
  if (!qword_256D212E0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13C0D4, &type metadata for MatterControlSolver.SourcePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D212E0);
  }
  return result;
}

unint64_t sub_23E00AA7C()
{
  unint64_t result;

  result = qword_256D212E8;
  if (!qword_256D212E8)
  {
    result = MEMORY[0x24264C55C](&unk_23E13C044, &type metadata for MatterControlSolver.SourcePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D212E8);
  }
  return result;
}

unint64_t sub_23E00AAC4()
{
  unint64_t result;

  result = qword_256D212F0;
  if (!qword_256D212F0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13C06C, &type metadata for MatterControlSolver.SourcePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D212F0);
  }
  return result;
}

uint64_t sub_23E00AB08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

char *sub_23E00ABF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E00ACE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E00ADD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

char *sub_23E00AEC0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E00AFA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E00B094(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150;
  if (v2 || (sub_23E137614() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4B72657473756C63 && a2 == 0xEB00000000646E69 || (sub_23E137614() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496C6F72746E6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E137614();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23E00B224()
{
  unint64_t result;

  result = qword_256D21300;
  if (!qword_256D21300)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for MatterControlSolver.ControlIdentifier, &type metadata for MatterControlSolver.ControlIdentifier);
    atomic_store(result, (unint64_t *)&qword_256D21300);
  }
  return result;
}

uint64_t sub_23E00B268(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

char *sub_23E00B36C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E00B454(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E00B574()
{
  return sub_23E1360E4();
}

uint64_t sub_23E00B594(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23E135D60();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23E1360F0();
}

uint64_t AccessoryControlDecorationButton.config.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF73E10(v1, a1, type metadata accessor for AccessoryControlDecorationButton.Config);
}

uint64_t type metadata accessor for AccessoryControlDecorationButton.Config(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D21638);
}

uint64_t AccessoryControlDecorationButton.config.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23E00B650(a1, v1);
}

uint64_t sub_23E00B650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AccessoryControlDecorationButton.config.modify())()
{
  return CGPointMake;
}

unint64_t sub_23E00B6A4()
{
  uint64_t v0;
  unint64_t v2;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 40) + 8))
  {
    sub_23E137530();
    swift_bridgeObjectRelease();
    v2 = 0xD000000000000022;
    sub_23E1371D0();
  }
  else
  {
    sub_23E137530();
    swift_bridgeObjectRelease();
    v2 = 0xD00000000000002ELL;
    swift_bridgeObjectRetain();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t AccessoryControlDecorationButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unsigned __int8 v64;
  unsigned __int8 v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t *v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;

  v3 = sub_23E13660C();
  v138 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v137 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E136504();
  v135 = *(_QWORD *)(v5 - 8);
  v136 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v134 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_23E135D60();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v121 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v8);
  v120 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E135E74();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v108 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v107 = (uint64_t)&v105 - v14;
  v15 = type metadata accessor for AccessoryControlDecorationButton(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D213E8);
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v115 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D213F0);
  MEMORY[0x24BDAC7A8](v116);
  v20 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D213F8);
  MEMORY[0x24BDAC7A8](v117);
  v125 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21400);
  MEMORY[0x24BDAC7A8](v124);
  v126 = (uint64_t)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21408);
  MEMORY[0x24BDAC7A8](v129);
  v128 = (uint64_t)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21410);
  v131 = *(_QWORD *)(v24 - 8);
  v132 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v130 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21418);
  MEMORY[0x24BDAC7A8](v140);
  v133 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21420);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v141 = (char *)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21428);
  v28 = MEMORY[0x24BDAC7A8](v111);
  v110 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v109 = (char *)&v105 - v30;
  v31 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v32 = v1;
  v33 = *(_BYTE *)(v1 + *(int *)(v31 + 44)) == 1;
  v114 = a1;
  v139 = v3;
  v127 = v31;
  if (v33)
  {
    v105 = v11;
    v106 = v10;
    v34 = v1;
    v35 = v1 + *(int *)(v15 + 28);
    v36 = *(_QWORD *)v35;
    v37 = *(_QWORD *)(v35 + 8);
    v38 = *(_BYTE *)(v35 + 16);
    sub_23DFEB604(*(_QWORD *)v35, v37, v38);
    v39 = sub_23DF9CFB0(v36, v37, v38);
    v41 = v40;
    sub_23DF9D68C(v36, v37, v38);
    v32 = v34;
    sub_23DF73E10(v34, (uint64_t)v17, type metadata accessor for AccessoryControlDecorationButton);
    if (v39)
    {
      sub_23DF73E54((uint64_t)v17, type metadata accessor for AccessoryControlDecorationButton);
    }
    else
    {
      v43 = v107;
      sub_23DF9CD44(v107);
      sub_23DF73E54((uint64_t)v17, type metadata accessor for AccessoryControlDecorationButton);
      v44 = v105;
      v45 = v108;
      v46 = v106;
      (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v108, v43, v106);
      v47 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      v48 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v47, v45, v46);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v46);
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = sub_23DFED480;
      *(_QWORD *)(v41 + 24) = v48;
      v39 = (uint64_t)sub_23DFF9A98;
    }
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v39;
    *(_QWORD *)(v42 + 24) = v41;
  }
  else
  {
    v42 = swift_retain();
  }
  MEMORY[0x24BDAC7A8](v42);
  *(&v105 - 2) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21430);
  sub_23E00C8DC();
  v49 = v115;
  sub_23E136DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  sub_23E135DFC();
  v50 = sub_23E1367C8();
  v51 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v120, 1, 1, v50);
  v52 = sub_23E136804();
  sub_23DF89C7C(v51, &qword_256D1DBA0);
  KeyPath = swift_getKeyPath();
  v54 = v118;
  v55 = v119;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v20, v49, v119);
  v56 = (uint64_t *)&v20[*(int *)(v116 + 36)];
  *v56 = KeyPath;
  v56[1] = v52;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v55);
  v57 = swift_getKeyPath();
  v58 = v122;
  v59 = v121;
  v60 = v123;
  (*(void (**)(char *, _QWORD, uint64_t))(v122 + 104))(v121, *MEMORY[0x24BDEB3F0], v123);
  v61 = (uint64_t)v125;
  v62 = (uint64_t *)&v125[*(int *)(v117 + 36)];
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v60);
  *v62 = v57;
  sub_23DF89C1C((uint64_t)v20, v61, &qword_256D213F0);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
  sub_23DF89C7C((uint64_t)v20, &qword_256D213F0);
  LOBYTE(v60) = sub_23E136768();
  v64 = sub_23E136750();
  v65 = sub_23E136738();
  v66 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v60)
    v66 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v64)
    v66 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v65)
    v66 = sub_23E13675C();
  sub_23E135D00();
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v126;
  sub_23DF89C1C(v61, v126, &qword_256D213F8);
  v76 = v75 + *(int *)(v124 + 36);
  *(_BYTE *)v76 = v66;
  *(_QWORD *)(v76 + 8) = v68;
  *(_QWORD *)(v76 + 16) = v70;
  *(_QWORD *)(v76 + 24) = v72;
  *(_QWORD *)(v76 + 32) = v74;
  *(_BYTE *)(v76 + 40) = 0;
  sub_23DF89C7C(v61, &qword_256D213F8);
  v77 = v127;
  v78 = v32;
  v79 = *(_BYTE *)(v32 + *(int *)(v127 + 36));
  v80 = swift_getKeyPath();
  v81 = swift_allocObject();
  *(_BYTE *)(v81 + 16) = (v79 & 1) == 0;
  v82 = v128;
  sub_23DF89C1C(v75, v128, &qword_256D21400);
  v83 = v129;
  v84 = (uint64_t *)(v82 + *(int *)(v129 + 36));
  *v84 = v80;
  v84[1] = (uint64_t)sub_23E00E1AC;
  v84[2] = v81;
  sub_23DF89C7C(v75, &qword_256D21400);
  v85 = v134;
  sub_23E1364F8();
  v86 = sub_23E00E1C4();
  v87 = sub_23DF73F28(&qword_256D214D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0], MEMORY[0x24BDEF8B0]);
  v88 = v130;
  v89 = v136;
  sub_23E136978();
  (*(void (**)(char *, unint64_t))(v135 + 8))(v85, v89);
  sub_23DF89C7C(v82, &qword_256D21408);
  sub_23E00B6A4();
  v144 = v83;
  v145 = v89;
  v146 = v86;
  v147 = v87;
  swift_getOpaqueTypeConformance2();
  v90 = v132;
  v91 = (uint64_t)v133;
  sub_23E136AF8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v88, v90);
  v92 = v137;
  sub_23E1365E8();
  v93 = sub_23E00E3EC();
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v92, v139);
  sub_23DF89C7C(v91, &qword_256D21418);
  v94 = (uint64_t *)(v78 + *(int *)(v77 + 48));
  v95 = v94[1];
  if (v95)
  {
    v96 = *v94;
    v97 = v95;
  }
  else
  {
    v96 = 0;
    v97 = 0xE000000000000000;
  }
  v98 = v113;
  v99 = v112;
  v100 = (uint64_t)v110;
  v101 = (uint64_t)v109;
  v102 = v114;
  v144 = v96;
  v145 = v97;
  swift_bridgeObjectRetain();
  v142 = v140;
  v143 = v93;
  swift_getOpaqueTypeConformance2();
  sub_23DF8DC18();
  v103 = v141;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v103, v98);
  sub_23E135FC4();
  sub_23DF89C7C(v100, &qword_256D21428);
  return sub_23DF89340(v101, v102, &qword_256D21428);
}

uint64_t type metadata accessor for AccessoryControlDecorationButton(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D21590);
}

uint64_t sub_23E00C3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v53 = a1;
  v63 = a2;
  v62 = sub_23E135D60();
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21498);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23E136F90();
  v6 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21488);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21478);
  MEMORY[0x24BDAC7A8](v51);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21468);
  MEMORY[0x24BDAC7A8](v54);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21458);
  MEMORY[0x24BDAC7A8](v58);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21448);
  MEMORY[0x24BDAC7A8](v60);
  v56 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  swift_bridgeObjectRetain();
  v19 = sub_23E136CB4();
  sub_23E136F78();
  v57 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v20 = v64;
  v57(v5, v8, v64);
  sub_23DF89C1C((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 36), &qword_256D21498);
  *v11 = v19;
  swift_retain();
  sub_23DF89C7C((uint64_t)v5, &qword_256D21498);
  v55 = *(void (**)(char *, uint64_t))(v6 + 8);
  v55(v8, v20);
  swift_release();
  KeyPath = swift_getKeyPath();
  v22 = v59;
  v23 = v61;
  v24 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v61, *MEMORY[0x24BDEB400], v62);
  v25 = (uint64_t *)&v13[*(int *)(v51 + 36)];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)v25 + *(int *)(v26 + 28), v23, v24);
  *v25 = KeyPath;
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v13, &qword_256D21488);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  sub_23DF89C7C((uint64_t)v11, &qword_256D21488);
  LOBYTE(KeyPath) = sub_23E13672C();
  sub_23E135D00();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_23DF89C1C((uint64_t)v13, (uint64_t)v15, &qword_256D21478);
  v35 = &v15[*(int *)(v54 + 36)];
  *v35 = KeyPath;
  *((_QWORD *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_23DF89C7C((uint64_t)v13, &qword_256D21478);
  LOBYTE(KeyPath) = *(_BYTE *)(v53 + *(int *)(v52 + 32));
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v17, &qword_256D21468);
  v17[*(int *)(v58 + 36)] = KeyPath;
  sub_23DF89C7C((uint64_t)v15, &qword_256D21468);
  LOBYTE(v15) = sub_23E13672C();
  sub_23E135D00();
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v44 = v56;
  sub_23DF89C1C((uint64_t)v17, v56, &qword_256D21458);
  v45 = v44 + *(int *)(v60 + 36);
  *(_BYTE *)v45 = (_BYTE)v15;
  *(_QWORD *)(v45 + 8) = v37;
  *(_QWORD *)(v45 + 16) = v39;
  *(_QWORD *)(v45 + 24) = v41;
  *(_QWORD *)(v45 + 32) = v43;
  *(_BYTE *)(v45 + 40) = 0;
  sub_23DF89C7C((uint64_t)v17, &qword_256D21458);
  sub_23E136F78();
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21430);
  v47 = v63;
  v48 = v64;
  v49 = v63 + *(int *)(v46 + 36);
  v57((char *)v49, v8, v64);
  *(_WORD *)(v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20A88) + 56)) = 256;
  sub_23DF89C1C(v44, v47, &qword_256D21448);
  v55(v8, v48);
  return sub_23DF89C7C(v44, &qword_256D21448);
}

uint64_t sub_23E00C8D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E00C3D8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23E00C8DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21438;
  if (!qword_256D21438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21430);
    v2[0] = sub_23E00E260(&qword_256D21440, &qword_256D21448, (uint64_t (*)(void))sub_23E00C978);
    v2[1] = sub_23DF89B88(&qword_256D20A80, &qword_256D20A88, MEMORY[0x24BDF1330]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21438);
  }
  return result;
}

unint64_t sub_23E00C978()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21450;
  if (!qword_256D21450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21458);
    v2[0] = sub_23E00E260(&qword_256D21460, &qword_256D21468, (uint64_t (*)(void))sub_23E00C9FC);
    v2[1] = sub_23E00CB04();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21450);
  }
  return result;
}

unint64_t sub_23E00C9FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21470;
  if (!qword_256D21470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21478);
    v2[0] = sub_23E00CA80();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21470);
  }
  return result;
}

unint64_t sub_23E00CA80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D21480;
  if (!qword_256D21480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21488);
    v2 = sub_23DF89B88(&qword_256D21490, &qword_256D21498, MEMORY[0x24BDF0710]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D21480);
  }
  return result;
}

unint64_t sub_23E00CB04()
{
  unint64_t result;

  result = qword_256D214A0;
  if (!qword_256D214A0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlDecorationButton.BadgeModifier, &type metadata for AccessoryControlDecorationButton.BadgeModifier);
    atomic_store(result, (unint64_t *)&qword_256D214A0);
  }
  return result;
}

uint64_t AccessoryControlDecorationButton.Config.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AccessoryControlDecorationButton.Config.systemImageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlDecorationButton.Config.systemImageName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.systemImageName.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.alignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 24));
}

uint64_t AccessoryControlDecorationButton.Config.alignment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v6;

  result = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v6 = (_QWORD *)(v2 + *(int *)(result + 24));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.alignment.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t sub_23E00CCB4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_23E010950;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_23E00CD18(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)();
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)())(a2 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 28));
  swift_retain();
  result = swift_release();
  *v6 = sub_23E010950;
  v6[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t AccessoryControlDecorationButton.Config.action.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 28));
  swift_retain();
  return v1;
}

uint64_t AccessoryControlDecorationButton.Config.action.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 28));
  result = swift_release();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.action.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.showBadge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 32));
}

uint64_t AccessoryControlDecorationButton.Config.showBadge.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.showBadge.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.enabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 36));
}

uint64_t AccessoryControlDecorationButton.Config.enabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.enabled.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlDecorationButton.Config.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.accessibilityIdentifier.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.isCloseButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 44));
}

uint64_t AccessoryControlDecorationButton.Config.isCloseButton.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.isCloseButton.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlDecorationButton.Config.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.accessibilityLabel.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

uint64_t AccessoryControlDecorationButton.Config.leadsToDeviceDetailMessages.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccessoryControlDecorationButton.Config(0) + 52));
}

uint64_t AccessoryControlDecorationButton.Config.leadsToDeviceDetailMessages.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*AccessoryControlDecorationButton.Config.leadsToDeviceDetailMessages.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  return CGPointMake;
}

int *AccessoryControlDecorationButton.Config.init(systemImageName:alignment:action:showBadge:enabled:accessibilityIdentifier:accessibilityLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int *result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;

  sub_23E134C74();
  result = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v21 = result[10];
  v22 = result[12];
  v23 = (_QWORD *)(a9 + result[5]);
  *v23 = a1;
  v23[1] = a2;
  v24 = (_QWORD *)(a9 + result[6]);
  *v24 = a3;
  v24[1] = a4;
  v25 = (_QWORD *)(a9 + result[7]);
  *v25 = a5;
  v25[1] = a6;
  *(_BYTE *)(a9 + result[8]) = a7;
  *(_BYTE *)(a9 + result[9]) = a8;
  v26 = (_QWORD *)(a9 + v21);
  *v26 = a10;
  v26[1] = a11;
  *(_BYTE *)(a9 + result[11]) = 0;
  v27 = (_QWORD *)(a9 + v22);
  *v27 = a12;
  v27[1] = a13;
  *(_BYTE *)(a9 + result[13]) = 0;
  return result;
}

double static AccessoryControlDecorationButton.Config.settings(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  _QWORD *v17;
  double result;
  uint64_t *v19;

  v6 = sub_23E136FB4();
  v8 = v7;
  swift_retain();
  v9 = sub_23E1371A0();
  v11 = v10;
  sub_23E134C74();
  v12 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v13 = v12[10];
  v14 = v12[12];
  v15 = (char *)(a3 + v12[5]);
  strcpy(v15, "gearshape.fill");
  v15[15] = -18;
  v16 = (uint64_t *)(a3 + v12[6]);
  *v16 = v6;
  v16[1] = v8;
  v17 = (_QWORD *)(a3 + v12[7]);
  *v17 = a1;
  v17[1] = a2;
  *(_BYTE *)(a3 + v12[8]) = 0;
  *(_BYTE *)(a3 + v12[9]) = 1;
  result = 8.19148746e247;
  *(_OWORD *)(a3 + v13) = xmmword_23E13C160;
  *(_BYTE *)(a3 + v12[11]) = 0;
  v19 = (uint64_t *)(a3 + v14);
  *v19 = v9;
  v19[1] = v11;
  *(_BYTE *)(a3 + v12[13]) = 1;
  return result;
}

uint64_t static AccessoryControlDecorationButton.Config.close(customAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t result;

  v6 = sub_23E136FA8();
  v8 = v7;
  if (a1)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    v10 = sub_23E010950;
  }
  else
  {
    v9 = 0;
    v10 = (uint64_t (*)())CGPointMake;
  }
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  sub_23DF9765C(a1);
  v12 = sub_23E1371A0();
  v14 = v13;
  sub_23E134C74();
  v15 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v16 = v15[10];
  v17 = v15[12];
  v18 = (_QWORD *)(a3 + v15[5]);
  *v18 = 0x6B72616D78;
  v18[1] = 0xE500000000000000;
  v19 = (uint64_t *)(a3 + v15[6]);
  *v19 = v6;
  v19[1] = v8;
  v20 = (uint64_t (**)())(a3 + v15[7]);
  *v20 = sub_23E010950;
  v20[1] = (uint64_t (*)())v11;
  *(_BYTE *)(a3 + v15[8]) = 0;
  *(_BYTE *)(a3 + v15[9]) = 1;
  *(_OWORD *)(a3 + v16) = xmmword_23E13C170;
  v21 = v15[11];
  *(_BYTE *)(a3 + v21) = 0;
  v22 = (uint64_t *)(a3 + v17);
  *v22 = v12;
  v22[1] = v14;
  *(_BYTE *)(a3 + v15[13]) = 0;
  if (a1)
  {
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a1;
    *(_QWORD *)(v23 + 24) = a2;
    v24 = sub_23E010950;
  }
  else
  {
    v24 = 0;
  }
  sub_23DF9765C(a1);
  result = sub_23DF9D698((uint64_t)v24);
  *(_BYTE *)(a3 + v21) = a1 == 0;
  return result;
}

int *AccessoryControlDecorationButton.Config.with(alignment:image:showBadge:enabled:accessibilityIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10;
  int *result;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  sub_23DF73E10(v10, a9, type metadata accessor for AccessoryControlDecorationButton.Config);
  result = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v20 = result;
  *(_BYTE *)(a9 + result[8]) = a6;
  if ((a3 & 1) == 0)
  {
    v21 = (_QWORD *)(a9 + result[6]);
    *v21 = a1;
    v21[1] = a2;
  }
  if (a5)
  {
    v22 = (_QWORD *)(a9 + result[5]);
    swift_bridgeObjectRetain();
    result = (int *)swift_bridgeObjectRelease();
    *v22 = a4;
    v22[1] = a5;
  }
  if (a7 != 2)
    *(_BYTE *)(a9 + v20[9]) = a7 & 1;
  if (a10)
  {
    v23 = (_QWORD *)(a9 + v20[10]);
    swift_bridgeObjectRetain();
    result = (int *)swift_bridgeObjectRelease();
    *v23 = a8;
    v23[1] = a10;
  }
  v24 = v20[12];
  v25 = (uint64_t *)(v10 + v24);
  v26 = *(_QWORD *)(v10 + v24 + 8);
  if (v26)
  {
    v27 = *v25;
    v28 = (_QWORD *)(a9 + v24);
    swift_bridgeObjectRetain();
    result = (int *)swift_bridgeObjectRelease();
    *v28 = v27;
    v28[1] = v26;
  }
  return result;
}

uint64_t AccessoryControlDecorationButton.BadgeModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214F8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2 == 1)
  {
    v15 = sub_23E136FA8();
    v32 = v16;
    v33 = v15;
    v30 = sub_23E136BF4();
    sub_23E136FE4();
    sub_23E135E5C();
    v17 = v35;
    v18 = v36;
    v29 = v9;
    v19 = v37;
    v20 = a1;
    v21 = v38;
    v31 = v12;
    v22 = v6;
    v34 = a2;
    v24 = v39;
    v23 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v14, v20, v5);
    v25 = &v14[*(int *)(v12 + 36)];
    *(_QWORD *)v25 = v30;
    *((_WORD *)v25 + 4) = 256;
    *((_QWORD *)v25 + 2) = v17;
    v25[24] = v18;
    *((_QWORD *)v25 + 4) = v19;
    v25[40] = v21;
    *((_QWORD *)v25 + 6) = v24;
    *((_QWORD *)v25 + 7) = v23;
    v26 = v32;
    *((_QWORD *)v25 + 8) = v33;
    *((_QWORD *)v25 + 9) = v26;
    sub_23DF89C1C((uint64_t)v14, (uint64_t)v11, &qword_256D214F8);
    swift_storeEnumTagMultiPayload();
    sub_23E00E560();
    sub_23DF89B88(&qword_256D21508, &qword_256D214E8, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return sub_23DF89C7C((uint64_t)v14, &qword_256D214F8);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v28(v8, a1, v5);
    v28(v11, (uint64_t)v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_23E00E560();
    sub_23DF89B88(&qword_256D21508, &qword_256D214E8, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t AccessoryControlDecorationButton.OverlayModifier.configs.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 AccessoryControlDecorationButton.OverlayModifier.body(content:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 result;
  _BYTE v16[152];
  __n128 v17[9];
  __int128 v18;
  uint64_t v19;

  v5 = *(_QWORD *)(v2 + 8);
  v6 = sub_23E136FE4();
  v8 = v7;
  sub_23E00D9D8(v5, (uint64_t)v17);
  sub_23DF89340((uint64_t)v17, (uint64_t)v16, &qword_256D21520);
  sub_23DF89340((uint64_t)v16, (uint64_t)v17, &qword_256D21520);
  *((_QWORD *)&v18 + 1) = v6;
  v19 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  v10 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D21530) + 36);
  v11 = v18;
  *(__n128 *)(v10 + 128) = v17[8];
  *(_OWORD *)(v10 + 144) = v11;
  *(_QWORD *)(v10 + 160) = v19;
  v12 = v17[5];
  *(__n128 *)(v10 + 64) = v17[4];
  *(__n128 *)(v10 + 80) = v12;
  v13 = v17[7];
  *(__n128 *)(v10 + 96) = v17[6];
  *(__n128 *)(v10 + 112) = v13;
  v14 = v17[1];
  *(__n128 *)v10 = v17[0];
  *(__n128 *)(v10 + 16) = v14;
  result = v17[3];
  *(__n128 *)(v10 + 32) = v17[2];
  *(__n128 *)(v10 + 48) = result;
  return result;
}

uint64_t sub_23E00D9D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[9];
  uint64_t v19;
  _OWORD v20[9];
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[168];

  v4 = type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup(0);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  if (*(_QWORD *)(a1 + 16))
  {
    v17 = a2;
    v11 = *(unsigned __int8 *)(v8 + 80);
    sub_23DF73E10(a1 + ((v11 + 32) & ~v11), (uint64_t)&v15 - v9, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
    sub_23E136FCC();
    if ((sub_23E136FC0() & 1) != 0
      || (sub_23E136FE4(), (sub_23E136FC0() & 1) != 0)
      || (sub_23E136FD8(), (sub_23E136FC0() & 1) != 0)
      || (v16 = sub_23E136378(), sub_23E1362AC(), (sub_23E136FC0() & 1) != 0))
    {
      v12 = 0;
    }
    else
    {
      v16 = sub_23E136378();
      sub_23E1362B8();
      v12 = sub_23E136FC0() ^ 1;
    }
    sub_23DF73E10((uint64_t)v10, (uint64_t)v7, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
    v13 = swift_allocObject();
    sub_23DF89384((uint64_t)v7, v13 + ((v11 + 16) & ~v11), type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
    v22 = v12 & 1;
    v23 = 0;
    v24 = 1;
    v25 = sub_23E0104BC;
    v26 = v13;
    sub_23E04C77C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0);
    swift_release();
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
    v20[6] = v18[6];
    v20[7] = v18[7];
    v20[8] = v18[8];
    v21 = v19;
    v20[2] = v18[2];
    v20[3] = v18[3];
    v20[4] = v18[4];
    v20[5] = v18[5];
    v20[0] = v18[0];
    v20[1] = v18[1];
    CGPointMake(v20);
    sub_23DF89340((uint64_t)v20, (uint64_t)v27, &qword_256D21520);
    a2 = v17;
  }
  else
  {
    sub_23E0104F8((uint64_t)v20);
    sub_23DF89340((uint64_t)v20, (uint64_t)v27, &qword_256D21520);
  }
  return sub_23DF89340((uint64_t)v27, a2, &qword_256D21520);
}

uint64_t sub_23E00DCA4()
{
  type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup(0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21760);
  sub_23E134C80();
  type metadata accessor for AccessoryControlDecorationButton(0);
  sub_23DF89B88(&qword_256D21768, &qword_256D21760, MEMORY[0x24BEE12D8]);
  sub_23DF73F28(&qword_256D21770, type metadata accessor for AccessoryControlDecorationButton, (uint64_t)&protocol conformance descriptor for AccessoryControlDecorationButton);
  sub_23DF73F28(&qword_256D21778, type metadata accessor for AccessoryControlDecorationButton.Config, (uint64_t)&protocol conformance descriptor for AccessoryControlDecorationButton.Config);
  return sub_23E136F18();
}

uint64_t sub_23E00DDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD v18[2];

  v4 = sub_23E13684C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(a1, (uint64_t)v13, type metadata accessor for AccessoryControlDecorationButton.Config);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  swift_storeEnumTagMultiPayload();
  KeyPath = swift_getKeyPath();
  sub_23DF89384((uint64_t)v13, a2, type metadata accessor for AccessoryControlDecorationButton.Config);
  v15 = type metadata accessor for AccessoryControlDecorationButton(0);
  v18[1] = 0x4038000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF1848], v4);
  sub_23E00F3D0();
  sub_23E135DF0();
  result = sub_23DF89340((uint64_t)v10, a2 + *(int *)(v15 + 24), &qword_256D20830);
  v17 = a2 + *(int *)(v15 + 28);
  *(_QWORD *)v17 = KeyPath;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 0;
  return result;
}

__n128 sub_23E00DF7C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 result;
  _BYTE v16[152];
  __n128 v17[9];
  __int128 v18;
  uint64_t v19;

  v5 = *(_QWORD *)(v2 + 8);
  v6 = sub_23E136FE4();
  v8 = v7;
  sub_23E00D9D8(v5, (uint64_t)v17);
  sub_23DF89340((uint64_t)v17, (uint64_t)v16, &qword_256D21520);
  sub_23DF89340((uint64_t)v16, (uint64_t)v17, &qword_256D21520);
  *((_QWORD *)&v18 + 1) = v6;
  v19 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  v10 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D21530) + 36);
  v11 = v18;
  *(__n128 *)(v10 + 128) = v17[8];
  *(_OWORD *)(v10 + 144) = v11;
  *(_QWORD *)(v10 + 160) = v19;
  v12 = v17[5];
  *(__n128 *)(v10 + 64) = v17[4];
  *(__n128 *)(v10 + 80) = v12;
  v13 = v17[7];
  *(__n128 *)(v10 + 96) = v17[6];
  *(__n128 *)(v10 + 112) = v13;
  v14 = v17[1];
  *(__n128 *)v10 = v17[0];
  *(__n128 *)(v10 + 16) = v14;
  result = v17[3];
  *(__n128 *)(v10 + 32) = v17[2];
  *(__n128 *)(v10 + 48) = result;
  return result;
}

uint64_t sub_23E00E074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1361F8();
  *a1 = result;
  return result;
}

uint64_t sub_23E00E09C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1361F8();
  *a1 = result;
  return result;
}

uint64_t sub_23E00E0C4()
{
  swift_retain();
  return sub_23E136204();
}

uint64_t sub_23E00E0EC()
{
  swift_retain();
  return sub_23E136204();
}

uint64_t sub_23E00E114()
{
  return sub_23E1360E4();
}

uint64_t sub_23E00E138@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E13621C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23E00E164()
{
  return sub_23E136228();
}

_BYTE *sub_23E00E188(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_23E00E19C()
{
  return swift_deallocObject();
}

_BYTE *sub_23E00E1AC(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_23E00E1C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D214B0;
  if (!qword_256D214B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21408);
    v2[0] = sub_23E00E260(&qword_256D214B8, &qword_256D21400, (uint64_t (*)(void))sub_23E00E2CC);
    v2[1] = sub_23DF89B88(&qword_256D1FD50, &qword_256D1FD58, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D214B0);
  }
  return result;
}

uint64_t sub_23E00E260(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E00E2CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D214C0;
  if (!qword_256D214C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D213F8);
    v2[0] = sub_23E00E350();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D214C0);
  }
  return result;
}

unint64_t sub_23E00E350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D214C8;
  if (!qword_256D214C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D213F0);
    v2[0] = sub_23DF89B88(&qword_256D214D0, &qword_256D213E8, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D214C8);
  }
  return result;
}

unint64_t sub_23E00E3EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_256D214E0;
  if (!qword_256D214E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21418);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21408);
    v3 = sub_23E136504();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_23E00E1C4();
    v5[5] = sub_23DF73F28(&qword_256D214D8, v4, MEMORY[0x24BDEF8B0]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256D214E0);
  }
  return result;
}

uint64_t sub_23E00E4DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E135E74();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E00E53C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23E00E560()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21500;
  if (!qword_256D21500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D214F8);
    v2[0] = sub_23DF89B88(&qword_256D21508, &qword_256D214E8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D21510, &qword_256D21518, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21500);
  }
  return result;
}

uint64_t sub_23E00E5FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E00E60C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E00E61C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for AccessoryControlDecorationButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
    v14 = v8[7];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v18 = v8[10];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
    v22 = v8[12];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *((_BYTE *)a1 + v8[13]) = *((_BYTE *)a2 + v8[13]);
    v26 = a3[5];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    v30 = a3[6];
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v33 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      *v31 = *v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v35 = a3[7];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(_QWORD *)v37;
    v39 = *((_QWORD *)v37 + 1);
    v40 = v37[16];
    sub_23DFEB604(*(_QWORD *)v37, v39, v40);
    *(_QWORD *)v36 = v38;
    *((_QWORD *)v36 + 1) = v39;
    v36[16] = v40;
  }
  return a1;
}

uint64_t destroy for AccessoryControlDecorationButton(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for AccessoryControlDecorationButton.Config(0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + a2[5];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_23E135E74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return sub_23DF9D68C(*(_QWORD *)(a1 + a2[7]), *(_QWORD *)(a1 + a2[7] + 8), *(_BYTE *)(a1 + a2[7] + 16));
}

uint64_t initializeWithCopy for AccessoryControlDecorationButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  v13 = v7[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v17 = v7[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v21 = v7[12];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v25 = a3[5];
  v26 = a1 + v25;
  v27 = a2 + v25;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  v29 = a3[6];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_23E135E74();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    *v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v33 = a3[7];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *(_QWORD *)(v35 + 8);
  v38 = *(_BYTE *)(v35 + 16);
  sub_23DFEB604(*(_QWORD *)v35, v37, v38);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 8) = v37;
  *(_BYTE *)(v34 + 16) = v38;
  return a1;
}

uint64_t assignWithCopy for AccessoryControlDecorationButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = v7[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v18 = v7[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v21 = v7[12];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v24 = a3[5];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  if (a1 != a2)
  {
    v28 = a3[6];
    v29 = (_QWORD *)(a1 + v28);
    v30 = (_QWORD *)(a2 + v28);
    sub_23DF89C7C(a1 + v28, &qword_256D1E710);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = *(_QWORD *)(v34 + 8);
  v37 = *(_BYTE *)(v34 + 16);
  sub_23DFEB604(*(_QWORD *)v34, v36, v37);
  v38 = *(_QWORD *)v33;
  v39 = *(_QWORD *)(v33 + 8);
  v40 = *(_BYTE *)(v33 + 16);
  *(_QWORD *)v33 = v35;
  *(_QWORD *)(v33 + 8) = v36;
  *(_BYTE *)(v33 + 16) = v37;
  sub_23DF9D68C(v38, v39, v40);
  return a1;
}

uint64_t initializeWithTake for AccessoryControlDecorationButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23E135E74();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  return a1;
}

uint64_t assignWithTake for AccessoryControlDecorationButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  swift_release();
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v13 = v7[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v18 = v7[12];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v23 = a3[5];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  if (a1 != a2)
  {
    v27 = a3[6];
    v28 = (void *)(a1 + v27);
    v29 = (const void *)(a2 + v27);
    sub_23DF89C7C(a1 + v27, &qword_256D1E710);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_23E135E74();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
  }
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_BYTE *)(v34 + 16);
  v36 = *(_QWORD *)v33;
  v37 = *(_QWORD *)(v33 + 8);
  v38 = *(_BYTE *)(v33 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_BYTE *)(v33 + 16) = v35;
  sub_23DF9D68C(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlDecorationButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00F11C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v16;

  v6 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(unsigned __int8 *)(a1 + a3[7] + 16);
  if (v16 > 1)
    return (v16 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccessoryControlDecorationButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00F1FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_BYTE *)(a1 + a4[7] + 16) = -(char)a2;
  return result;
}

void sub_23E00F2D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for AccessoryControlDecorationButton.Config(319);
  if (v0 <= 0x3F)
  {
    sub_23E00F378();
    if (v1 <= 0x3F)
    {
      sub_23DFEC3F4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23E00F378()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D215A0)
  {
    sub_23E00F3D0();
    v0 = sub_23E135E08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D215A0);
  }
}

unint64_t sub_23E00F3D0()
{
  unint64_t result;

  result = qword_256D215A8[0];
  if (!qword_256D215A8[0])
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, qword_256D215A8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AccessoryControlDecorationButton.Config(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (_QWORD *)((char *)a1 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v18 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccessoryControlDecorationButton.Config(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccessoryControlDecorationButton.Config(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccessoryControlDecorationButton.Config(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v20 = a3[12];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for AccessoryControlDecorationButton.Config(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for AccessoryControlDecorationButton.Config(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  swift_release();
  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlDecorationButton.Config()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00F980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlDecorationButton.Config()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E00FA0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E134C80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E00FA88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11BinaryStateVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlDecorationButton.BadgeModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E00FC18 + 4 * byte_23E13C185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E00FC4C + 4 * byte_23E13C180[v4]))();
}

uint64_t sub_23E00FC4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E00FC54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E00FC5CLL);
  return result;
}

uint64_t sub_23E00FC68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E00FC70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E00FC74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E00FC7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlDecorationButton.BadgeModifier()
{
  return &type metadata for AccessoryControlDecorationButton.BadgeModifier;
}

uint64_t destroy for AccessoryControlDecorationButton.OverlayModifier()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s22HomeAccessoryControlUI32AccessoryControlDecorationButtonV15OverlayModifierVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AccessoryControlDecorationButton.OverlayModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for AccessoryControlDecorationButton.OverlayModifier(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlDecorationButton.OverlayModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlDecorationButton.OverlayModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlDecorationButton.OverlayModifier()
{
  return &type metadata for AccessoryControlDecorationButton.OverlayModifier;
}

unint64_t sub_23E00FE28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D21690;
  if (!qword_256D21690)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21428);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21418);
    v2[3] = sub_23E00E3EC();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21690);
  }
  return result;
}

unint64_t sub_23E00FED8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21698;
  if (!qword_256D21698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D216A0);
    v2[0] = sub_23E00E560();
    v2[1] = sub_23DF89B88(&qword_256D21508, &qword_256D214E8, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21698);
  }
  return result;
}

unint64_t sub_23E00FF60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D216A8;
  if (!qword_256D216A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21530);
    v2[0] = sub_23DF89B88(&qword_256D216B0, &qword_256D21528, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D216B8, qword_256D216C0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D216A8);
  }
  return result;
}

uint64_t *sub_23E00FFFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23E010090(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0100D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E01013C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E0101C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23E010228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E010294()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0102A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E01031C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E010328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E134C80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D21720);
}

uint64_t sub_23E0103B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E010434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup(0)
                                      - 8)
                          + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0104BC()
{
  type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup(0);
  return sub_23E00DCA4();
}

double sub_23E0104F8(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_23E010524(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t result;
  unint64_t v31;
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup(0);
  v47 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - v5;
  v46 = type metadata accessor for AccessoryControlDecorationButton.Config(0);
  MEMORY[0x24BDAC7A8](v46);
  v37 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v43 = *(_QWORD *)(a1 + 16);
  if (v43)
  {
    v12 = *(unsigned __int8 *)(v9 + 80);
    v41 = (v12 + 32) & ~v12;
    v42 = a1 + v41;
    v44 = *(_QWORD *)(v9 + 72);
    v39 = v12 | 7;
    v40 = v44 + v41;
    v36 = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    v14 = MEMORY[0x24BEE4AF8];
    v38 = xmmword_23E138050;
    v45 = v11;
    while (1)
    {
      sub_23DF73E10(v42 + v44 * v13, (uint64_t)v11, type metadata accessor for AccessoryControlDecorationButton.Config);
      v16 = *(_QWORD *)(v14 + 16);
      v49 = v13;
      if (v16)
      {
        v17 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        v18 = *(_QWORD *)(v47 + 72);
        swift_bridgeObjectRetain();
        v19 = 0;
        while (1)
        {
          sub_23DF73E10(v14 + v17, (uint64_t)v6, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
          v20 = sub_23E136FC0();
          sub_23DF73E54((uint64_t)v6, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
          if ((v20 & 1) != 0)
            break;
          ++v19;
          v17 += v18;
          if (v16 == v19)
            goto LABEL_11;
        }
        sub_23DF73E10((uint64_t)v45, v37, type metadata accessor for AccessoryControlDecorationButton.Config);
        result = swift_isUniquelyReferenced_nonNull_native();
        v27 = v14;
        if ((result & 1) == 0)
        {
          result = sub_23E09EE34(v14);
          v27 = result;
        }
        if (v19 >= *(_QWORD *)(v27 + 16))
        {
          __break(1u);
          return result;
        }
        v31 = v27 + *(int *)(v2 + 24);
        v32 = *(_QWORD *)(v31 + v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v31 + v17) = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v32 = sub_23E008050(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
          *(_QWORD *)(v31 + v17) = v32;
        }
        v35 = *(_QWORD *)(v32 + 16);
        v34 = *(_QWORD *)(v32 + 24);
        if (v35 >= v34 >> 1)
        {
          v32 = sub_23E008050(v34 > 1, v35 + 1, 1, v32);
          *(_QWORD *)(v31 + v17) = v32;
        }
        v15 = v49;
        *(_QWORD *)(v32 + 16) = v35 + 1;
        sub_23DF89384(v37, v32 + v41 + v35 * v44, type metadata accessor for AccessoryControlDecorationButton.Config);
        v11 = v45;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_11:
        v11 = v45;
        v21 = &v45[*(int *)(v46 + 24)];
        v22 = *(_QWORD *)v21;
        v23 = *((_QWORD *)v21 + 1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D213C0);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v38;
        sub_23DF73E10((uint64_t)v11, v24 + v41, type metadata accessor for AccessoryControlDecorationButton.Config);
        v25 = v48;
        sub_23E134C74();
        v26 = (_QWORD *)(v25 + *(int *)(v2 + 20));
        *v26 = v22;
        v26[1] = v23;
        *(_QWORD *)(v25 + *(int *)(v2 + 24)) = v24;
        v27 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_23E00803C(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
        v29 = *(_QWORD *)(v27 + 16);
        v28 = *(_QWORD *)(v27 + 24);
        if (v29 >= v28 >> 1)
          v27 = sub_23E00803C(v28 > 1, v29 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v29 + 1;
        sub_23DF89384(v48, v27+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v29, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
        v15 = v49;
      }
      v13 = v15 + 1;
      sub_23DF73E54((uint64_t)v11, type metadata accessor for AccessoryControlDecorationButton.Config);
      swift_bridgeObjectRelease();
      v14 = v27;
      if (v13 == v43)
      {
        swift_bridgeObjectRelease();
        return v27;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

ValueMetadata *_s14descr250ECA309O18RGBColorWheelSpaceVMa()
{
  return &_s14descr250ECA309O18RGBColorWheelSpaceVN;
}

uint64_t ValueThrottleModifier.Config.init(lowerLimit:upperLimit:initialValue:alignment:enabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  int *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;

  *a4 = a5;
  a4[1] = a6;
  v10 = (int *)type metadata accessor for ValueThrottleModifier.Config(0);
  v11 = (char *)a4 + v10[6];
  v12 = sub_23E13534C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  v13 = (char *)a4 + v10[7];
  v14 = sub_23E135520();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
  *((_BYTE *)a4 + v10[8]) = a3;
  return result;
}

uint64_t type metadata accessor for ValueThrottleModifier.Config(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D218C8);
}

uint64_t ValueThrottleModifier.init(config:updater:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  sub_23E136D8C();
  *(_QWORD *)a4 = v11;
  *(_BYTE *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = v13;
  *(_BYTE *)(a4 + 24) = v14;
  *(_QWORD *)(a4 + 32) = v15;
  *(_BYTE *)(a4 + 40) = v16;
  *(_BYTE *)(a4 + 41) = v17;
  *(_QWORD *)(a4 + 48) = v18;
  v8 = type metadata accessor for ValueThrottleModifier(0);
  result = sub_23DF89384(a1, a4 + *(int *)(v8 + 20), type metadata accessor for ValueThrottleModifier.Config);
  v10 = (_QWORD *)(a4 + *(int *)(v8 + 24));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t type metadata accessor for ValueThrottleModifier(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D21830);
}

uint64_t ValueThrottleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v41 = a1;
  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21780);
  v42 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21788);
  MEMORY[0x24BDAC7A8](v43);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21790);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21798);
  v11 = MEMORY[0x24BDAC7A8](v44);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v40 - v14;
  v16 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ValueThrottleModifier(0) + 20));
  if (*((_BYTE *)v16 + *(int *)(type metadata accessor for ValueThrottleModifier.Config(0) + 32)) == 1)
  {
    v17 = sub_23E136FE4();
    v40 = v15;
    v19 = v18;
    v20 = (uint64_t)&v10[*(int *)(v8 + 36)];
    sub_23E011014(v2, v20);
    v21 = (uint64_t *)(v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D217C0) + 36));
    *v21 = v17;
    v21[1] = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v10, v41, v3);
    v22 = *v16;
    v23 = v16[1];
    v24 = *(_BYTE *)(v2 + 8);
    v25 = *(_QWORD *)(v2 + 16);
    v26 = *(_BYTE *)(v2 + 24);
    v27 = *(_QWORD *)(v2 + 32);
    v28 = *(_BYTE *)(v2 + 40);
    v29 = *(_BYTE *)(v2 + 41);
    v30 = *(_QWORD *)(v2 + 48);
    v46 = *(_QWORD *)v2;
    v47 = v24;
    v48 = v25;
    v49 = v26;
    v50 = v27;
    v51 = v28;
    v52 = v29;
    v53 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
    sub_23E136D98();
    v31 = v54;
    LOBYTE(v20) = v55;
    v32 = sub_23E135514();
    v34 = v33;
    sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D21790);
    v35 = &v13[*(int *)(v44 + 36)];
    *(_QWORD *)v35 = v22;
    *((_QWORD *)v35 + 1) = v23;
    *((_QWORD *)v35 + 2) = v31;
    v35[24] = v20;
    *((_QWORD *)v35 + 4) = v32;
    *((_QWORD *)v35 + 5) = v34;
    sub_23DF89C7C((uint64_t)v10, &qword_256D21790);
    v36 = (uint64_t)v40;
    sub_23E011390((uint64_t)v13, (uint64_t)v40);
    sub_23DF89C1C(v36, (uint64_t)v7, &qword_256D21798);
    swift_storeEnumTagMultiPayload();
    sub_23E010EC8();
    sub_23DF89B88(&qword_256D217B0, &qword_256D21780, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return sub_23DF89C7C(v36, &qword_256D21798);
  }
  else
  {
    v38 = v42;
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
    v39(v5, v41, v3);
    v39(v7, (uint64_t)v5, v3);
    swift_storeEnumTagMultiPayload();
    sub_23E010EC8();
    sub_23DF89B88(&qword_256D217B0, &qword_256D21780, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v5, v3);
  }
}

unint64_t sub_23E010EC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D217A0;
  if (!qword_256D217A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21798);
    v2[0] = sub_23E010F34();
    v2[1] = sub_23E010FD0();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D217A0);
  }
  return result;
}

unint64_t sub_23E010F34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D217A8;
  if (!qword_256D217A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21790);
    v2[0] = sub_23DF89B88(&qword_256D217B0, &qword_256D21780, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D217B8, &qword_256D217C0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D217A8);
  }
  return result;
}

unint64_t sub_23E010FD0()
{
  unint64_t result;

  result = qword_256D217C8;
  if (!qword_256D217C8)
  {
    result = MEMORY[0x24264C55C](&unk_23E141188, &type metadata for ElasticEffectModifier);
    atomic_store(result, (unint64_t *)&qword_256D217C8);
  }
  return result;
}

uint64_t sub_23E011014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;

  v26 = a1;
  v32 = a2;
  v3 = type metadata accessor for ValueThrottleModifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E136498();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23E135D90();
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201B0);
  v12 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  v29 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201B8);
  v16 = *(_QWORD *)(v15 - 8);
  v30 = v15;
  v31 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23E136C30();
  v34 = 256;
  v35 = 0;
  sub_23E1365A0();
  sub_23E135D6C();
  sub_23E013CC0(a1, (uint64_t)v6);
  v19 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20 = swift_allocObject();
  sub_23DF89384((uint64_t)v6, v20 + v19, type metadata accessor for ValueThrottleModifier);
  sub_23DF73F28(&qword_256D201D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_23DF73F28(&qword_256D201D8, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  sub_23E136F30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  sub_23E013CC0(v26, (uint64_t)v6);
  v21 = swift_allocObject();
  sub_23DF89384((uint64_t)v6, v21 + v19, type metadata accessor for ValueThrottleModifier);
  sub_23DF89B88(&qword_256D201E0, &qword_256D201B0, MEMORY[0x24BDED570]);
  v22 = v28;
  sub_23E136F24();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v22);
  sub_23E135DA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D219A0);
  sub_23E013E4C();
  sub_23DF89B88(&qword_256D201F0, &qword_256D201B8, MEMORY[0x24BDEC410]);
  v23 = v30;
  sub_23E136AB0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v23);
  return swift_release();
}

uint64_t sub_23E011390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0113D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0113E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v3 = sub_23E13534C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (double *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E135D84();
  v8 = v7;
  sub_23E135D78();
  v10 = v9;
  v11 = type metadata accessor for ValueThrottleModifier(0);
  v12 = (uint64_t)a2 + *(int *)(v11 + 20);
  v13 = type metadata accessor for ValueThrottleModifier.Config(0);
  (*(void (**)(double *, uint64_t, uint64_t))(v4 + 16))(v6, v12 + *(int *)(v13 + 24), v3);
  v14 = (*(uint64_t (**)(double *, uint64_t))(v4 + 88))(v6, v3);
  v15 = *MEMORY[0x24BE4DD08];
  v27 = v11;
  if (v14 == v15)
  {
    (*(void (**)(double *, uint64_t))(v4 + 96))(v6, v3);
    sub_23E01306C(v10, *v6);
  }
  else
  {
    if (v14 != *MEMORY[0x24BE4DD00])
    {
      result = sub_23E137608();
      __break(1u);
      return result;
    }
    (*(void (**)(double *, uint64_t))(v4 + 96))(v6, v3);
    sub_23E01331C(v8, v10, *v6, v6[1]);
  }
  v16 = *a2;
  v17 = *((_BYTE *)a2 + 8);
  v18 = a2[2];
  v19 = *((_BYTE *)a2 + 24);
  v20 = a2[4];
  v21 = *((_BYTE *)a2 + 40);
  v22 = *((_BYTE *)a2 + 41);
  v28 = a2[6];
  v29 = v16;
  v30 = v17;
  v31 = v18;
  v32 = v19;
  v33 = v20;
  v34 = v21;
  v35 = v22;
  v36 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  result = sub_23E136D98();
  if ((v38 & 1) == 0)
  {
    v27 = *(uint64_t *)((char *)a2 + *(int *)(v27 + 24));
    v29 = v16;
    v30 = v17;
    v31 = v18;
    v32 = v19;
    v33 = v20;
    v34 = v21;
    v35 = v22;
    v36 = v28;
    sub_23E136D98();
    if ((v38 & 1) != 0)
    {
      v24 = 0;
      v25 = 2;
    }
    else
    {
      v26 = v37;
      v29 = v16;
      v30 = v17;
      v31 = v18;
      v32 = v19;
      v33 = v20;
      v34 = v21;
      v35 = v22;
      v36 = v28;
      sub_23E136D98();
      v25 = v39;
      v24 = v26;
      if (v39 == 2)
        v24 = 0;
      else
        v25 = v39 & 1;
    }
    v29 = v24;
    v30 = v25;
    return ((uint64_t (*)(uint64_t *))v27)(&v29);
  }
  return result;
}

uint64_t sub_23E01166C()
{
  uint64_t result;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  result = sub_23E136D98();
  if ((v2 & 1) == 0)
  {
    v1 = sub_23E137038();
    MEMORY[0x24BDAC7A8](v1);
    sub_23E135EEC();
    return swift_release();
  }
  return result;
}

uint64_t sub_23E01174C(uint64_t *a1)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(uint64_t *);
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;

  v20 = *(void (**)(uint64_t *))((char *)a1
                                         + *(int *)(type metadata accessor for ValueThrottleModifier(0) + 24));
  v2 = *((_BYTE *)a1 + 8);
  v3 = a1[2];
  v4 = *((_BYTE *)a1 + 24);
  v5 = a1[4];
  v6 = *((_BYTE *)a1 + 40);
  v7 = *((_BYTE *)a1 + 41);
  v8 = a1[6];
  v32 = *a1;
  v21 = v32;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  if ((v30 & 1) != 0)
  {
    v9 = 0;
    v10 = 2;
  }
  else
  {
    v21 = v32;
    v22 = v2;
    v23 = v3;
    v24 = v4;
    v25 = v5;
    v26 = v6;
    v27 = v7;
    v28 = v8;
    sub_23E136D98();
    v10 = v31;
    v9 = v29;
    if (v31 == 2)
      v9 = 0;
    else
      v10 = v31 & 1;
  }
  v21 = v9;
  v22 = v10;
  v20(&v21);
  v21 = v32;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  swift_retain();
  sub_23E136D98();
  v11 = v32;
  v21 = v32;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  sub_23E136DA4();
  swift_release();
  v21 = v11;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  swift_retain();
  sub_23E136D98();
  v21 = v11;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  sub_23E136DA4();
  swift_release();
  v12 = v32;
  v21 = v32;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  swift_retain();
  sub_23E136D98();
  v21 = v12;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v13 = v7;
  v27 = v7;
  v28 = v8;
  sub_23E136DA4();
  swift_release();
  v14 = v32;
  v21 = v32;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v13;
  v28 = v8;
  swift_retain();
  sub_23E136D98();
  v21 = v14;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v13;
  v28 = v8;
  sub_23E136DA4();
  swift_release();
  v21 = v32;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v13;
  v28 = v8;
  sub_23E136D98();
  if ((v30 & 1) != 0)
  {
    v15 = 0;
    v16 = 2;
  }
  else
  {
    v17 = v5;
    v18 = v29;
    v21 = v32;
    v22 = v2;
    v23 = v3;
    v24 = v4;
    v25 = v17;
    v26 = v6;
    v27 = v13;
    v28 = v8;
    sub_23E136D98();
    if (v31 == 2)
      v15 = 0;
    else
      v15 = v18;
    if (v31 == 2)
      v16 = 2;
    else
      v16 = v31 & 1;
  }
  v21 = v15;
  v22 = v16;
  return ((uint64_t (*)(uint64_t *))v20)(&v21);
}

_QWORD *initializeBufferWithCopyOfBuffer for ValueThrottleModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 26) = *(_OWORD *)((char *)a2 + 26);
    *(_QWORD *)(a1 + 48) = a2[6];
    v8 = *(int *)(a3 + 20);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ValueThrottleModifier.Config(0);
    v12 = v11[6];
    v26 = v9 + v12;
    v13 = v10 + v12;
    v14 = sub_23E13534C();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    v15(v26, v13, v14);
    v16 = v11[7];
    v17 = v9 + v16;
    v18 = v10 + v16;
    v19 = sub_23E135520();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
    v20 = *(int *)(a3 + 24);
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ValueThrottleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ValueThrottleModifier.Config(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 28);
  v9 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_release();
}

uint64_t initializeWithCopy for ValueThrottleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ValueThrottleModifier.Config(0);
  v10 = v9[6];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_23E13534C();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain();
  v14(v11, v12, v13);
  v15 = v9[7];
  v16 = v7 + v15;
  v17 = v8 + v15;
  v18 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
  v19 = *(int *)(a3 + 24);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ValueThrottleModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_retain();
  swift_release();
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t)a2 + v9;
  *v10 = *(uint64_t *)((char *)a2 + v9);
  v10[1] = *(uint64_t *)((char *)a2 + v9 + 8);
  v12 = (int *)type metadata accessor for ValueThrottleModifier.Config(0);
  v13 = v12[6];
  v14 = (char *)v10 + v13;
  v15 = v11 + v13;
  v16 = sub_23E13534C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = v12[7];
  v18 = (char *)v10 + v17;
  v19 = v11 + v17;
  v20 = sub_23E135520();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  *((_BYTE *)v10 + v12[8]) = *(_BYTE *)(v11 + v12[8]);
  v21 = *(int *)(a3 + 24);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ValueThrottleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ValueThrottleModifier.Config(0);
  v11 = v10[6];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[7];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ValueThrottleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ValueThrottleModifier.Config(0);
  v10 = v9[6];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = v9[7];
  v15 = v7 + v14;
  v16 = v8 + v14;
  v17 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ValueThrottleModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E012268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ValueThrottleModifier.Config(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ValueThrottleModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0122F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ValueThrottleModifier.Config(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E012370()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ValueThrottleModifier.Config(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ValueThrottleModifier.Config(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E13534C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23E135520();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for ValueThrottleModifier.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_23E135520();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_OWORD *initializeWithCopy for ValueThrottleModifier.Config(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E13534C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithCopy for ValueThrottleModifier.Config(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E13534C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for ValueThrottleModifier.Config(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E13534C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *assignWithTake for ValueThrottleModifier.Config(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E13534C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ValueThrottleModifier.Config()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0127D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v12;

  v6 = sub_23E13534C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_23E135520();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v12 >= 2)
    return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ValueThrottleModifier.Config()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E012890(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_23E13534C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_23E135520();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_BYTE *)(a1 + a4[8]) = a2 + 1;
  return result;
}

uint64_t sub_23E012930()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E13534C();
  if (v1 <= 0x3F)
  {
    result = sub_23E135520();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ValueThrottleModifier.Result(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ValueThrottleModifier.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E012A6C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23E012A84(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ValueThrottleModifier.Result()
{
  return &type metadata for ValueThrottleModifier.Result;
}

unint64_t sub_23E012AB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21910;
  if (!qword_256D21910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256D21918);
    v2[0] = sub_23E010EC8();
    v2[1] = sub_23DF89B88(&qword_256D217B0, &qword_256D21780, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21910);
  }
  return result;
}

uint64_t sub_23E012B34()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23E012B3C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E012BA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23E012C18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23E012C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_23E012C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_23E012C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_23E012CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_23E012CE8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E012D98 + 4 * byte_23E13C540[(v7 - 1)]))();
}

void sub_23E012DE8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for _HostingViewWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _HostingViewWrapper);
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ValueThrottleModifier.GestureValue(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 41) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ValueThrottleModifier.GestureValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueThrottleModifier.GestureValue()
{
  return &type metadata for ValueThrottleModifier.GestureValue;
}

uint64_t sub_23E01306C(double a1, double a2)
{
  sub_23E013508(a2);
  type metadata accessor for ValueThrottleModifier(0);
  type metadata accessor for ValueThrottleModifier.Config(0);
  sub_23E135514();
  sub_23E136FD8();
  sub_23E136FC0();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  sub_23E136DA4();
  swift_release();
  swift_retain();
  sub_23E136D98();
  sub_23E136DA4();
  swift_release();
  sub_23E137038();
  sub_23E135EEC();
  return swift_release();
}

uint64_t sub_23E01331C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v8;
  uint64_t v9;

  v5 = v4;
  v8 = sub_23E013668(v4, a1, a4, a3);
  sub_23E013818(a3, a4, v5, v8);
  type metadata accessor for ValueThrottleModifier(0);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  sub_23E136DA4();
  swift_release();
  v9 = sub_23E137038();
  MEMORY[0x24BDAC7A8](v9);
  sub_23E135EEC();
  return swift_release();
}

double sub_23E013508(double a1)
{
  double v3;
  char v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  if (v4 != 1)
    return v3;
  swift_retain();
  sub_23E136D98();
  sub_23E136DA4();
  swift_release();
  return a1;
}

BOOL sub_23E013668(uint64_t a1, double a2, double a3, double a4)
{
  double v8;
  _BOOL8 v9;
  char v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  if (v11 != 2)
    return v11 & 1;
  v8 = *(double *)(a1 + *(int *)(type metadata accessor for ValueThrottleModifier(0) + 20) + 8) - a2;
  v9 = vabdd_f64(v8, a3) >= vabdd_f64(v8, a4);
  swift_retain();
  sub_23E136D98();
  sub_23E136DA4();
  swift_release();
  return v9;
}

double sub_23E013818(double a1, double a2, uint64_t a3, char a4)
{
  double v8;
  char v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  if (v9 != 1)
    return v8;
  if ((a4 & 1) != 0)
    a2 = a1;
  swift_retain();
  sub_23E136D98();
  sub_23E136DA4();
  swift_release();
  return a2;
}

uint64_t sub_23E01398C()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D217D0);
  sub_23E136D98();
  sub_23E136DA4();
  return swift_release();
}

uint64_t sub_23E013AB4(uint64_t a1, uint64_t a2)
{
  return sub_23E013BBC(a2);
}

uint64_t sub_23E013ABC(uint64_t a1)
{
  return sub_23E013C4C(a1);
}

uint64_t sub_23E013AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24264C55C](&unk_23E13C6A8, a3);
  return sub_23E13645C();
}

uint64_t sub_23E013B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24264C55C](&unk_23E13C6A8, a3);
  return sub_23E136408();
}

void sub_23E013B7C(uint64_t a1)
{
  MEMORY[0x24264C55C](&unk_23E13C6A8, a1);
  sub_23E136450();
  __break(1u);
}

void sub_23E013BAC()
{
  JUMPOUT(0x24264C55CLL);
}

uint64_t sub_23E013BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135F70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  return sub_23E135F58();
}

uint64_t sub_23E013C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_23E135F64();
}

uint64_t sub_23E013CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ValueThrottleModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E013D08(uint64_t a1)
{
  return sub_23E013E00(a1, (uint64_t (*)(uint64_t, uint64_t))sub_23E0113E8);
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ValueThrottleModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ValueThrottleModifier.Config(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 28);
  v9 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E013DF4(uint64_t a1)
{
  return sub_23E013E00(a1, (uint64_t (*)(uint64_t, uint64_t))sub_23E01166C);
}

uint64_t sub_23E013E00(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ValueThrottleModifier(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_23E013E4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D219A8;
  if (!qword_256D219A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D219A0);
    v2[0] = sub_23DF89B88(&qword_256D219B0, &qword_256D219B8, MEMORY[0x24BDEB358]);
    v2[1] = sub_23DF89B88(&qword_256D219C0, &qword_256D219C8, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D219A8);
  }
  return result;
}

uint64_t sub_23E013EE8()
{
  uint64_t v0;

  return sub_23E01174C(*(uint64_t **)(v0 + 16));
}

uint64_t sub_23E013F00()
{
  return sub_23E01398C();
}

uint64_t storeEnumTagSinglePayload for ValueThrottleModifier.GestureValue.MovingPoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E013F68 + 4 * byte_23E13C553[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E013F9C + 4 * byte_23E13C54E[v4]))();
}

uint64_t sub_23E013F9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E013FA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E013FACLL);
  return result;
}

uint64_t sub_23E013FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E013FC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E013FC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E013FCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ValueThrottleModifier.GestureValue.MovingPoint()
{
  return &type metadata for ValueThrottleModifier.GestureValue.MovingPoint;
}

unint64_t sub_23E013FEC()
{
  unint64_t result;

  result = qword_256D219D0;
  if (!qword_256D219D0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13C784, &type metadata for ValueThrottleModifier.GestureValue.MovingPoint);
    atomic_store(result, (unint64_t *)&qword_256D219D0);
  }
  return result;
}

uint64_t sub_23E014030()
{
  return sub_23E013F00();
}

uint64_t sub_23E014044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a2;
  v32 = sub_23E1352BC();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219D8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E1353AC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v29 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v29 - v22;
  StaticService.staticEndpoint.getter((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_23DF89C7C((uint64_t)v7, &qword_256D219D8);
    v24 = type metadata accessor for MatterControlSolver.Source(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 1, 1, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    MatterControlSolver.Source.init(with:)((uint64_t)v12, (uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v25 = type metadata accessor for MatterControlSolver.Source(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v21, 0, 1, v25);
  }
  sub_23DF89340((uint64_t)v21, (uint64_t)v23, &qword_256D1EEE8);
  v26 = v30;
  v27 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v4, a1, v32);
  sub_23DF89C1C((uint64_t)v23, (uint64_t)v18, &qword_256D1EEE8);
  sub_23E014648(v4, (uint64_t)v18, v31);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v27);
  return sub_23DF89C7C((uint64_t)v23, &qword_256D1EEE8);
}

uint64_t HAPControlSolver.Source.has(characteristicKinds:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E1356DC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v27 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_5;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v22 >= v27)
      goto LABEL_22;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v27)
        goto LABEL_22;
      v23 = *(_QWORD *)(v26 + 8 * v17);
      if (!v23)
      {
        v17 = v22 + 2;
        if (v22 + 2 >= v27)
          goto LABEL_22;
        v23 = *(_QWORD *)(v26 + 8 * v17);
        if (!v23)
        {
          v24 = v22 + 3;
          if (v24 >= v27)
          {
LABEL_22:
            v25 = 1;
            goto LABEL_23;
          }
          v23 = *(_QWORD *)(v26 + 8 * v24);
          if (!v23)
          {
            while (1)
            {
              v17 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_25;
              if (v17 >= v27)
                goto LABEL_22;
              v23 = *(_QWORD *)(v26 + 8 * v17);
              ++v24;
              if (v23)
                goto LABEL_20;
            }
          }
          v17 = v24;
        }
      }
    }
LABEL_20:
    v15 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v6 + 72) * v19, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    type metadata accessor for HAPControlSolver.Source();
    sub_23E135A48();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v20 = sub_23E1359AC();
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v4, 1, v20);
    result = sub_23DF89C7C((uint64_t)v4, &qword_256D1D530);
    if (v21 == 1)
    {
      v25 = 0;
LABEL_23:
      swift_release();
      return v25;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HAPControlSolver.Source()
{
  uint64_t result;

  result = qword_256D21A70;
  if (!qword_256D21A70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HAPControlSolver.Source.targetHeatingCoolingMode.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E850]);
}

uint64_t HAPControlSolver.Source.currentTemperature.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E828]);
}

uint64_t HAPControlSolver.Source.targetTemperature.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E820]);
}

uint64_t HAPControlSolver.Source.heatingThreshold.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E818]);
}

uint64_t HAPControlSolver.Source.coolingThreshold.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E810]);
}

uint64_t HAPControlSolver.Source.targetHeaterCoolerState.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E840]);
}

uint64_t HAPControlSolver.Source.active.getter()
{
  type metadata accessor for HAPControlSolver.Source();
  return sub_23E135AB4();
}

uint64_t sub_23E014648@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  unint64_t v93;

  v80 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
  MEMORY[0x24BDAC7A8](v5);
  v79 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
  MEMORY[0x24BDAC7A8](v7);
  v90 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HAPControlSolver.Source();
  v89 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v88 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v87 = (uint64_t)&v76 - v12;
  v13 = sub_23E134C80();
  v83 = *(_QWORD *)(v13 - 8);
  v84 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E1352BC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v76 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v76 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5B8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135268();
  sub_23E1351A8();
  v85 = (int *)v9;
  v28 = a3;
  v77 = a3 + *(int *)(v9 + 24);
  sub_23E13513C();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v86 = a1;
  v29(v24, (uint64_t)a1, v15);
  v30 = sub_23E134E9C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v27, 1, v30);
  v82 = v16;
  if (v32 == 1)
  {
    sub_23E1351A8();
    v91 = *(void (**)(char *, uint64_t))(v16 + 8);
    v91(v24, v15);
    sub_23DF89C7C((uint64_t)v27, &qword_256D1D5B8);
  }
  else
  {
    v91 = *(void (**)(char *, uint64_t))(v16 + 8);
    v91(v24, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v77, v27, v30);
  }
  v33 = sub_23E13528C();
  v34 = v85;
  v35 = v28;
  v36 = (uint64_t *)(v28 + v85[7]);
  *v36 = v33;
  v36[1] = v37;
  v38 = sub_23E1351B4();
  v39 = (uint64_t *)(v28 + v34[8]);
  *v39 = v38;
  v39[1] = v40;
  sub_23E1351C0();
  *(_BYTE *)(v28 + v34[10]) = sub_23E13519C() & 1;
  sub_23E135178();
  *(_BYTE *)(v28 + v34[12]) = (sub_23E1352B0() & 1) == 0;
  v92 = 0x2D65636976726573;
  v93 = 0xE800000000000000;
  v41 = v78;
  sub_23E135268();
  sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E1375FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v41, v84);
  v42 = v93;
  v43 = (uint64_t *)(v35 + v34[13]);
  *v43 = v92;
  v43[1] = v42;
  v44 = sub_23E135208();
  v45 = v35 + v34[14];
  *(_QWORD *)v45 = v44;
  *(_BYTE *)(v45 + 8) = v46 & 1;
  v47 = sub_23E1351FC();
  v48 = *(_QWORD *)(v47 + 16);
  v49 = MEMORY[0x24BEE4AF8];
  v81 = v35;
  if (v48)
  {
    v92 = MEMORY[0x24BEE4AF8];
    sub_23E09E140(0, v48, 0);
    v50 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    v78 = (char *)v47;
    v51 = v47 + v50;
    v52 = *(_QWORD *)(v82 + 72);
    do
    {
      v29(v22, v51, v15);
      v29(v19, (uint64_t)v22, v15);
      v53 = type metadata accessor for MatterControlSolver.Source(0);
      v54 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v90, 1, 1, v53);
      sub_23E014648(v19, v54);
      v91(v22, v15);
      v55 = v92;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E140(0, *(_QWORD *)(v55 + 16) + 1, 1);
        v55 = v92;
      }
      v57 = *(_QWORD *)(v55 + 16);
      v56 = *(_QWORD *)(v55 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_23E09E140(v56 > 1, v57 + 1, 1);
        v55 = v92;
      }
      *(_QWORD *)(v55 + 16) = v57 + 1;
      sub_23DF89384(v87, v55+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v57, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v51 += v52;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    v35 = v81;
    v58 = v82;
    v49 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v55 = MEMORY[0x24BEE4AF8];
    v58 = v82;
  }
  *(_QWORD *)(v35 + v85[15]) = v55;
  v59 = sub_23E135148();
  v60 = *(_QWORD *)(v59 + 16);
  if (v60)
  {
    v92 = v49;
    v61 = v59;
    sub_23E09E140(0, v60, 0);
    v62 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v87 = v61;
    v63 = v61 + v62;
    v64 = *(_QWORD *)(v58 + 72);
    do
    {
      v29(v22, v63, v15);
      v29(v19, (uint64_t)v22, v15);
      v65 = type metadata accessor for MatterControlSolver.Source(0);
      v66 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v90, 1, 1, v65);
      sub_23E014648(v19, v66);
      v91(v22, v15);
      v67 = v92;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E140(0, *(_QWORD *)(v67 + 16) + 1, 1);
        v67 = v92;
      }
      v69 = *(_QWORD *)(v67 + 16);
      v68 = *(_QWORD *)(v67 + 24);
      v70 = (uint64_t)v88;
      if (v69 >= v68 >> 1)
      {
        sub_23E09E140(v68 > 1, v69 + 1, 1);
        v70 = (uint64_t)v88;
        v67 = v92;
      }
      *(_QWORD *)(v67 + 16) = v69 + 1;
      sub_23DF89384(v70, v67+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v69, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v63 += v64;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
    v35 = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    v67 = MEMORY[0x24BEE4AF8];
  }
  v71 = v85;
  *(_QWORD *)(v35 + v85[16]) = v67;
  v72 = v86;
  sub_23E13522C();
  sub_23E1351D8();
  v73 = v35 + v71[19];
  sub_23E135184();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v73, 0, 1, v84);
  v74 = (uint64_t)v79;
  sub_23E1351F0();
  v91(v72, v15);
  sub_23DF89340(v74, v35 + v71[20], &qword_256D219E8);
  return sub_23DF89340(v80, v35 + v71[21], &qword_256D1EEE8);
}

uint64_t sub_23E014DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v61[2];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1350D0();
  v71 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v61 - v10;
  v12 = (int *)type metadata accessor for HAPControlSolver.Source();
  v13 = *((_QWORD *)v12 - 1);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v70 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v69 = (uint64_t)v61 - v16;
  v17 = sub_23E134C80();
  v63 = *(_QWORD *)(v17 - 8);
  v64 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1350A0();
  sub_23E135028();
  sub_23E134FF8();
  v20 = sub_23E1350B8();
  v21 = (uint64_t *)(a2 + v12[7]);
  *v21 = v20;
  v21[1] = v22;
  v23 = sub_23E135040();
  v24 = (uint64_t *)(a2 + v12[8]);
  *v24 = v23;
  v24[1] = v25;
  sub_23E13504C();
  *(_BYTE *)(a2 + v12[10]) = 1;
  sub_23E135004();
  *(_BYTE *)(a2 + v12[12]) = (sub_23E1350C4() & 1) == 0;
  v72 = 0x2D65636976726573;
  v73 = 0xE800000000000000;
  v68 = (uint64_t)v19;
  sub_23E1350A0();
  sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v26 = v64;
  sub_23E1375FC();
  sub_23E1371D0();
  v27 = v71;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v68, v26);
  v28 = v73;
  v29 = (uint64_t *)(a2 + v12[13]);
  *v29 = v72;
  v29[1] = v28;
  v30 = sub_23E13507C();
  v65 = v12;
  v66 = a1;
  v31 = v12[14];
  v67 = a2;
  v32 = a2 + v31;
  *(_QWORD *)v32 = v30;
  *(_BYTE *)(v32 + 8) = v33 & 1;
  v34 = sub_23E135064();
  v35 = *(_QWORD *)(v34 + 16);
  v36 = MEMORY[0x24BEE4AF8];
  if (v35)
  {
    v72 = MEMORY[0x24BEE4AF8];
    sub_23E09E140(0, v35, 0);
    v37 = *(unsigned __int8 *)(v27 + 80);
    v61[1] = v34;
    v38 = v34 + ((v37 + 32) & ~v37);
    v68 = *(_QWORD *)(v27 + 72);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    do
    {
      v39(v11, v38, v6);
      v39(v9, (uint64_t)v11, v6);
      sub_23E014DD4(v9);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v6);
      v40 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E140(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v72;
      }
      v42 = *(_QWORD *)(v40 + 16);
      v41 = *(_QWORD *)(v40 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_23E09E140(v41 > 1, v42 + 1, 1);
        v40 = v72;
      }
      *(_QWORD *)(v40 + 16) = v42 + 1;
      sub_23DF89384(v69, v40+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v42, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v38 += v68;
      --v35;
      v27 = v71;
    }
    while (v35);
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v67 + v65[15]) = v40;
  v43 = sub_23E135070();
  v44 = *(_QWORD *)(v43 + 16);
  if (v44)
  {
    v72 = v36;
    sub_23E09E140(0, v44, 0);
    v45 = *(unsigned __int8 *)(v27 + 80);
    v68 = v43;
    v46 = v43 + ((v45 + 32) & ~v45);
    v69 = *(_QWORD *)(v27 + 72);
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    do
    {
      v47(v11, v46, v6);
      v47(v9, (uint64_t)v11, v6);
      sub_23E014DD4(v9);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v6);
      v48 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E140(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v48 = v72;
      }
      v50 = *(_QWORD *)(v48 + 16);
      v49 = *(_QWORD *)(v48 + 24);
      v51 = (uint64_t)v70;
      if (v50 >= v49 >> 1)
      {
        sub_23E09E140(v49 > 1, v50 + 1, 1);
        v51 = (uint64_t)v70;
        v48 = v72;
      }
      *(_QWORD *)(v48 + 16) = v50 + 1;
      sub_23DF89384(v51, v48+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v50, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v46 += v69;
      --v44;
      v27 = v71;
    }
    while (v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x24BEE4AF8];
  }
  v52 = v65;
  v53 = v67;
  *(_QWORD *)(v67 + v65[16]) = v48;
  v54 = v66;
  sub_23E135088();
  sub_23E135058();
  v55 = (uint64_t)v62;
  sub_23E135010();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v54, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v55, 0, 1, v64);
  sub_23DF89340(v55, v53 + v52[19], &qword_256D1D7E8);
  v56 = v53 + v52[20];
  v57 = sub_23E134FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
  v58 = v53 + v52[21];
  v59 = type metadata accessor for MatterControlSolver.Source(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
}

uint64_t StaticService.staticEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219D8);
  MEMORY[0x24BDAC7A8](v1);
  v44 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1358EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23E135730();
  v10 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v43 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E134FEC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1351F0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v19 = &qword_256D219E8;
    v20 = (uint64_t)v14;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_23E134DC4();
    v21 = (void *)sub_23E134DB8();
    sub_23E134D94();

    v22 = sub_23E1358E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v23 = sub_23E134FE0();
    if (*(_QWORD *)(v22 + 16))
    {
      v24 = sub_23DF84D74(v23);
      v26 = v44;
      v25 = v45;
      if ((v27 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v5, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v10 + 72) * v24, v45);
        v28 = 0;
      }
      else
      {
        v28 = 1;
      }
    }
    else
    {
      v28 = 1;
      v26 = v44;
      v25 = v45;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, v28, 1, v25);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v25) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v19 = &qword_256D219E0;
      v20 = (uint64_t)v5;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v5, v25);
      v29 = sub_23E135724();
      v30 = sub_23E134FC8();
      if (*(_QWORD *)(v29 + 16) && (v31 = sub_23DF84D40(v30), (v32 & 1) != 0))
      {
        v33 = v31;
        v34 = *(_QWORD *)(v29 + 56);
        v35 = sub_23E1353AC();
        v36 = *(_QWORD *)(v35 - 8);
        v37 = v34 + *(_QWORD *)(v36 + 72) * v33;
        v25 = v45;
        (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v26, v37, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v35);
      }
      else
      {
        v35 = sub_23E1353AC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v26, 1, 1, v35);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v25);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_23E1353AC();
      v38 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v26, 1, v35) != 1)
      {
        v42 = v46;
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v46, v26, v35);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v35);
      }
      v19 = &qword_256D219D8;
      v20 = (uint64_t)v26;
    }
  }
  sub_23DF89C7C(v20, v19);
  v39 = v46;
  v40 = sub_23E1353AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
}

uint64_t HAPControlSolver.Source.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD v45[2];
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v4 = sub_23E134FEC();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
  MEMORY[0x24BDAC7A8](v6);
  v48 = (uint64_t)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E134C80();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v53 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (uint64_t)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for HAPControlSolver.Source();
  v55 = *((_QWORD *)v13 - 1);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v45 - v17;
  v19 = sub_23E135334();
  v51 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v45[0] = (char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23DF73F28(&qword_256D1D570, v9, MEMORY[0x24BDCEA88]);
  v54 = v8;
  v45[1] = v24;
  sub_23E13711C();
  sub_23E134E9C();
  sub_23DF73F28(&qword_256D1D780, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8A8]);
  sub_23E13711C();
  sub_23E13711C();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v13[8] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  sub_23DF89C1C(v2 + v13[9], (uint64_t)v23, &qword_256D219F0);
  v25 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v23, 1, v19) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    v26 = v45[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v25 + 32))(v45[0], v23, v19);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D219F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCD8], MEMORY[0x24BE4DCE8]);
    sub_23E13711C();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v19);
  }
  sub_23E1376B0();
  sub_23E134E60();
  sub_23DF73F28(&qword_256D1EF00, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D520], MEMORY[0x24BE4D530]);
  sub_23E13711C();
  sub_23E1376A4();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + v13[14] + 8) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376A4();
  }
  v27 = *(_QWORD *)(v2 + v13[15]);
  sub_23E1376A4();
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v51 = v2;
    v29 = v27 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v30 = *(_QWORD *)(v55 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23DF73E10(v29, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      HAPControlSolver.Source.hash(into:)(a1);
      sub_23DF73E54((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v29 += v30;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    v2 = v51;
  }
  v31 = *(_QWORD *)(v2 + v13[16]);
  sub_23E1376A4();
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v33 = v2;
    v34 = v31 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v35 = *(_QWORD *)(v55 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23DF73E10(v34, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      HAPControlSolver.Source.hash(into:)(a1);
      sub_23DF73E54((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v34 += v35;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    v2 = v33;
  }
  sub_23E135ACC();
  sub_23DF73F28(&qword_256D21A00, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E898], MEMORY[0x24BE4E8A8]);
  sub_23E13711C();
  sub_23E135580();
  sub_23DF73F28(&qword_256D21A08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E0C8], MEMORY[0x24BE4E0D8]);
  sub_23E13711C();
  v36 = v52;
  sub_23DF89C1C(v2 + v13[19], v52, &qword_256D1D7E8);
  v38 = v53;
  v37 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v36, 1, v54) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    v39 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v46, v36, v37);
    sub_23E1376B0();
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
  }
  v41 = v49;
  v40 = v50;
  v42 = v48;
  sub_23DF89C1C(v2 + v13[20], v48, &qword_256D219E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    v43 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v47, v42, v40);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  }
  return sub_23DFAC9D4();
}

uint64_t HAPControlSolver.Source.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E137698();
  HAPControlSolver.Source.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E015FE8()
{
  _BYTE v1[72];

  sub_23E137698();
  HAPControlSolver.Source.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E016028()
{
  _BYTE v1[72];

  sub_23E137698();
  HAPControlSolver.Source.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E016060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;

  v3 = v2;
  v6 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v3, a2, type metadata accessor for Device.Control);
  v15 = type metadata accessor for Device.Control(0);
  sub_23DF73E10(v3 + *(int *)(v15 + 20), (uint64_t)v14, type metadata accessor for Device.Control.Kind);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8);
    v17 = (uint64_t)&v14[*(int *)(v16 + 48)];
    sub_23DF89340((uint64_t)v14, (uint64_t)v11, &qword_256D1D5D8);
    sub_23DF89384(v17, (uint64_t)v8, type metadata accessor for Device.Control.IncrementalConfig);
    v18 = &v8[*(int *)(v6 + 28)];
    v19 = sub_23E135520();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v18, a1, v19);
    v20 = a2 + *(int *)(v15 + 20);
    sub_23DF73E54(v20, type metadata accessor for Device.Control.Kind);
    v21 = v20 + *(int *)(v16 + 48);
    sub_23DF89340((uint64_t)v11, v20, &qword_256D1D5D8);
    sub_23DF73E10((uint64_t)v8, v21, type metadata accessor for Device.Control.IncrementalConfig);
    swift_storeEnumTagMultiPayload();
    v22 = (uint64_t)v8;
    v23 = type metadata accessor for Device.Control.IncrementalConfig;
  }
  else
  {
    v23 = type metadata accessor for Device.Control.Kind;
    v22 = (uint64_t)v14;
  }
  return sub_23DF73E54(v22, v23);
}

uint64_t sub_23E016284(uint64_t a1)
{
  return sub_23E0235D0(a1, MEMORY[0x24BE4E280]);
}

uint64_t sub_23E0162A0(uint64_t a1)
{
  return sub_23E0235D0(a1, MEMORY[0x24BE4E310]);
}

uint64_t sub_23E0162CC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v58 = a2;
  v70 = a3;
  v56 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v56);
  v57 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v7);
  v62 = (uint64_t *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v9);
  v64 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Device.Control(0);
  v68 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v63 = (uint64_t)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (uint64_t)&v55 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v17);
  v66 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23E1356DC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23E134E9C();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888];
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for HAPControlSolver.Source();
  v67 = a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BE4D7F8], v23);
  sub_23DF73F28(&qword_256D1D820, v24, MEMORY[0x24BE4D8B8]);
  sub_23E13723C();
  sub_23E13723C();
  v71 = v3;
  if (v74 == v72 && v75 == v73)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
  }
  else
  {
    v28 = sub_23E137614();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    if ((v28 & 1) == 0)
    {
LABEL_7:
      v33 = 1;
      v34 = v70;
      v36 = v68;
      v35 = v69;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, v33, 1, v35);
    }
  }
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
  v29(v22, *MEMORY[0x24BE4E258], v19);
  v30 = v67;
  v31 = sub_23E135AA8();
  v32 = *(void (**)(char *, uint64_t))(v20 + 8);
  v32(v22, v19);
  if (v31 != 2 && (v31 & 1) == 0)
    goto LABEL_7;
  v29(v22, *MEMORY[0x24BE4E368], v19);
  v37 = v66;
  sub_23E135A48();
  v32(v22, v19);
  v38 = v64;
  sub_23DF73E10(v30, v64, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v38, 0, 1);
  v39 = v65;
  sub_23E0AC544(v38, v37, v65);
  sub_23DF89C7C(v38, &qword_256D21B40);
  v36 = v68;
  v35 = v69;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v39, 1, v69) == 1)
  {
    sub_23DF89C7C(v37, &qword_256D1D530);
    sub_23DF89C7C(v39, &qword_256D1D5E0);
    v33 = 1;
    v34 = v70;
  }
  else
  {
    v40 = v58;
    v41 = v39;
    v42 = v61;
    sub_23DF89384(v41, v61, type metadata accessor for Device.Control);
    v43 = v62;
    sub_23DFF24D0(v62);
    v44 = v63;
    sub_23DF73E10(v42, v63, type metadata accessor for Device.Control);
    v45 = v59;
    sub_23DF73E10(v42 + *(int *)(v35 + 20), (uint64_t)v59, type metadata accessor for Device.Control.Kind);
    if (swift_getEnumCaseMultiPayload())
    {
      v46 = type metadata accessor for Device.Control.Kind;
      v47 = (uint64_t)v45;
    }
    else
    {
      v48 = *v45;
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
      v50 = (uint64_t)&v45[*(int *)(v49 + 48)];
      v51 = v57;
      sub_23DF89384(v50, v57, type metadata accessor for Device.Control.BinaryViewConfig);
      sub_23E023D28((uint64_t)v43, v51 + *(int *)(v56 + 24));
      v52 = (_BYTE *)(v63 + *(int *)(v35 + 20));
      sub_23DF73E54((uint64_t)v52, type metadata accessor for Device.Control.Kind);
      v53 = (uint64_t)&v52[*(int *)(v49 + 48)];
      *v52 = v48;
      v44 = v63;
      sub_23DF73E10(v51, v53, type metadata accessor for Device.Control.BinaryViewConfig);
      v42 = v61;
      v43 = v62;
      swift_storeEnumTagMultiPayload();
      v47 = v51;
      v46 = type metadata accessor for Device.Control.BinaryViewConfig;
    }
    sub_23DF73E54(v47, v46);
    sub_23DF73E54((uint64_t)v43, type metadata accessor for ControlTextModifier.Config);
    sub_23DF73E54(v42, type metadata accessor for Device.Control);
    sub_23DF89C7C(v66, &qword_256D1D530);
    sub_23DF89384(v44, v42, type metadata accessor for Device.Control);
    if (v40 != 5)
      *(_WORD *)(v42 + *(int *)(v35 + 36)) = v40;
    v34 = v70;
    sub_23DF89384(v42, v70, type metadata accessor for Device.Control);
    v33 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, v33, 1, v35);
}

uint64_t sub_23E016950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23E135B2C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E135B8C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v25 - v12;
  sub_23E1359A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23DF89C7C((uint64_t)v6, &qword_256D1F8F0);
    return sub_23E0E2608((uint64_t)&unk_250EC64A0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v11, v7) != *MEMORY[0x24BE4EA78])
  {
    v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v13, v7);
    v22(v11, v7);
    return sub_23E0E2608((uint64_t)&unk_250EC64A0);
  }
  (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
  v26 = v1;
  v27 = v0;
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v11, v0);
  v14 = sub_23E135AFC();
  v15 = *(_QWORD *)(v14 + 16);
  v25[1] = v14;
  if (v15)
  {
    v16 = (uint64_t *)(v14 + 32);
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v19 = *v16++;
      v18 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_23E007704(0, v17[2] + 1, 1, v17);
      v21 = v17[2];
      v20 = v17[3];
      if (v21 >= v20 >> 1)
        v17 = sub_23E007704((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
      v17[2] = v21 + 1;
      v17[v21 + 4] = v18;
      --v15;
    }
    while (v15);
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v23 = sub_23E073EE4((uint64_t)v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return v23;
}

uint64_t sub_23E016C18(uint64_t result, uint64_t *a2, unint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  v3 = a3[2];
  if (!v3)
    return 1;
  v4 = *(_QWORD *)result;
  v5 = *a2;
  v6 = a3[4];
  if (v6 == *(_QWORD *)result)
  {
    v7 = 0;
    v8 = 0;
    if (v4 == v5)
      return v7 < v8;
LABEL_11:
    v8 = 0;
    if (v3 <= 1)
      v10 = 1;
    else
      v10 = a3[2];
    v11 = v10 - 1;
    while (v3 - 1 != v8)
    {
      if (v11 == v8)
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      v12 = a3[v8++ + 5];
      if (v12 == v5)
        return v7 < v8;
    }
  }
  else
  {
    v7 = 0;
    while (v3 - 1 != v7)
    {
      v9 = a3[v7++ + 5];
      if (v9 == v4)
      {
        if (v6 != v5)
          goto LABEL_11;
        v8 = 0;
        return v7 < v8;
      }
    }
  }
  if (v6 == v5)
    return 0;
  v13 = v3 - 1;
  if (v3 <= 1)
    v3 = 1;
  v14 = v3 - 1;
  v15 = (uint64_t *)(a3 + 5);
  do
  {
    result = v13 == 0;
    if (!v13)
      break;
    if (!v14)
      goto LABEL_29;
    v16 = *v15++;
    --v14;
    --v13;
  }
  while (v16 != v5);
  return result;
}

uint64_t HAPControlSolver.Source.targetHumidifierDehumidifierState.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E870]);
}

uint64_t sub_23E016D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E1356DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v34 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v34 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v34 - v20;
  v22 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v22(v7, *MEMORY[0x24BE4E2E8], v4);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  v22(v7, *MEMORY[0x24BE4E2D0], v4);
  sub_23E135A48();
  v23(v7, v4);
  sub_23DF89C1C((uint64_t)v21, (uint64_t)v16, &qword_256D1D530);
  v24 = sub_23E1359AC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v16, 1, v24);
  v35 = v25;
  if (v27 == 1)
  {
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D530);
    v28 = sub_23E134C80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v3, 1, 1, v28);
  }
  else
  {
    sub_23E135988();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v24);
    v28 = sub_23E134C80();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v3, 0, 1, v28);
  }
  v29 = v37;
  sub_23DF89C1C((uint64_t)v19, (uint64_t)v13, &qword_256D1D530);
  sub_23E134C80();
  v30 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v3, 1, v28) == 1)
  {
    v31 = v36;
    sub_23DF89C1C((uint64_t)v13, v36, &qword_256D1D530);
    if (v26((char *)v31, 1, v24) == 1)
    {
      sub_23DF89C7C((uint64_t)v13, &qword_256D1D530);
      sub_23DF89C7C((uint64_t)v19, &qword_256D1D530);
      sub_23DF89C7C((uint64_t)v21, &qword_256D1D530);
      sub_23DF89C7C(v31, &qword_256D1D530);
      v32 = 1;
    }
    else
    {
      sub_23E135988();
      v29 = v37;
      sub_23DF89C7C((uint64_t)v13, &qword_256D1D530);
      sub_23DF89C7C((uint64_t)v19, &qword_256D1D530);
      sub_23DF89C7C((uint64_t)v21, &qword_256D1D530);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v31, v24);
      v32 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v29, v32, 1, v28);
    return sub_23DF89C7C((uint64_t)v3, &qword_256D1D7E8);
  }
  else
  {
    sub_23DF89C7C((uint64_t)v13, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v21, &qword_256D1D530);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v29, v3, v28);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v28);
  }
}

uint64_t sub_23E017138@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  char *v91;
  char *v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, _QWORD, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v110 = a4;
  v112 = a3;
  LODWORD(v111) = a2;
  v114 = a1;
  v116 = a5;
  v5 = sub_23E135520();
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v101 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Device.Control(0);
  v115 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v100 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v8);
  v104 = (uint64_t)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v105 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v102 = (char *)&v88 - v13;
  v109 = sub_23E1356DC();
  v107 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v106 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v103 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v108 = (char *)&v88 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v97 = (char *)&v88 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (void (*)(char *, uint64_t, uint64_t))((char *)&v88 - v22);
  v24 = sub_23E1359AC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v88 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v88 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v88 - v35;
  v37 = sub_23E134C80();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v88 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(v114, (uint64_t)v36, &qword_256D1D7E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
  {
    sub_23DF89C7C((uint64_t)v36, &qword_256D1D7E8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v116, 1, 1, v113);
  }
  v93 = v23;
  v91 = v28;
  v92 = v30;
  v42 = v110;
  v95 = v34;
  v96 = v25;
  v114 = v24;
  v44 = v115;
  v43 = v116;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v40, v36, v37);
  if ((v111 & 1) == 0)
  {
    sub_23E0ADBC8(v112, (uint64_t)v40, v43);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
    v50 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56);
    v51 = v43;
    return v50(v51, 0, 1, v113);
  }
  v94 = v37;
  v90 = v40;
  if (!v42)
  {
    v53 = v106;
    v52 = v107;
    v54 = *(void (**)(_QWORD))(v107 + 104);
    LODWORD(v110) = *MEMORY[0x24BE4E2E8];
    v55 = v109;
    v111 = (void (*)(char *, _QWORD, uint64_t))v54;
    v54(v106);
    type metadata accessor for HAPControlSolver.Source();
    v56 = (uint64_t)v93;
    sub_23E135A48();
    v89 = *(void (**)(char *, uint64_t))(v52 + 8);
    v89(v53, v55);
    v57 = v96;
    v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    if (v58(v56, 1, v114) == 1)
    {
      v45 = v38;
      sub_23DF89C7C(v56, &qword_256D1D530);
      v49 = (uint64_t)v102;
      v48 = v109;
      v46 = v107;
      v47 = v53;
LABEL_14:
      v111(v47, v110, v48);
      goto LABEL_15;
    }
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
    v93(v92, v56, v114);
    v59 = v109;
    v111(v53, *MEMORY[0x24BE4E2D0], v109);
    v60 = v97;
    sub_23E135A48();
    v61 = (uint64_t)v60;
    v89(v53, v59);
    v62 = v58((uint64_t)v60, 1, v114);
    v63 = v43;
    v64 = (uint64_t)v92;
    if (v62 == 1)
    {
      v45 = v38;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v92, v114);
      sub_23DF89C7C(v61, &qword_256D1D530);
      v49 = (uint64_t)v102;
      v48 = v109;
      v47 = v106;
      v46 = v107;
      goto LABEL_14;
    }
    v83 = (uint64_t)v91;
    v84 = v114;
    v93(v91, v61, v114);
    v85 = (uint64_t)v95;
    v86 = v94;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v95, v40, v94);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v85, 0, 1, v86);
    sub_23E0ADDAC(v112, v64, v83, v85, v63);
    sub_23DF89C7C(v85, &qword_256D1D7E8);
    v87 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v87(v83, v84);
    v87(v64, v84);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v86);
    v50 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56);
    v51 = v63;
    return v50(v51, 0, 1, v113);
  }
  v45 = v38;
  v47 = v106;
  v46 = v107;
  if (v42 == 1)
  {
    v48 = v109;
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v106, *MEMORY[0x24BE4E2D0], v109);
    v49 = (uint64_t)v102;
  }
  else
  {
    v49 = (uint64_t)v102;
    v48 = v109;
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v106, *MEMORY[0x24BE4E2E8], v109);
  }
LABEL_15:
  v65 = type metadata accessor for HAPControlSolver.Source();
  v66 = v112;
  v67 = (uint64_t)v108;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  v68 = v66;
  v69 = v104;
  sub_23DF73E10(v68, v104, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v70 = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v69, 0, 1, v65);
  v71 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v103, 1, 1, v114);
  v72 = (uint64_t)v95;
  v73 = v90;
  v74 = v94;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v95, v90, v94);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v72, 0, 1, v74);
  sub_23E0AC2E4(v69, v67, v71, v72, v49);
  sub_23DF89C7C(v72, &qword_256D1D7E8);
  sub_23DF89C7C(v71, &qword_256D1D530);
  sub_23DF89C7C(v69, &qword_256D21B40);
  v75 = v115;
  v76 = v113;
  v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v49, 1, v113);
  v78 = (uint64_t)v105;
  if (!v77)
  {
    v79 = v100;
    sub_23DF73E10(v49, v100, type metadata accessor for Device.Control);
    v80 = v98;
    v81 = v99;
    v82 = (uint64_t)v101;
    (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v101, *MEMORY[0x24BE4DF20], v99);
    sub_23E016060(v82, v78);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v81);
    v74 = v94;
    v67 = (uint64_t)v108;
    sub_23DF73E54(v79, type metadata accessor for Device.Control);
    v70 = 0;
  }
  sub_23DF89C7C(v67, &qword_256D1D530);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v73, v74);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v78, v70, 1, v76);
  sub_23E0253E4(v78, v49);
  return sub_23DF89340(v49, v116, &qword_256D1D5E0);
}

uint64_t sub_23E0179F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v39 = sub_23E135B2C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v34 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_23E1356DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E135B8C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v34 - v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE4E330], v1);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v18 = sub_23E1359AC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18) == 1)
  {
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D530);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_4:
    sub_23DF89C7C((uint64_t)v10, &qword_256D1F8F0);
    return sub_23E0E2394((uint64_t)&unk_250EC6440);
  }
  v36 = v17;
  sub_23E1359A0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_4;
  v22 = v36;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v10, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v22, v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) != *MEMORY[0x24BE4EA78])
  {
    v33 = *(void (**)(char *, uint64_t))(v12 + 8);
    v33(v22, v11);
    v33(v15, v11);
    return sub_23E0E2394((uint64_t)&unk_250EC6440);
  }
  v34 = v12;
  v35 = v11;
  (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
  v23 = v38;
  v24 = v39;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v38, v15, v39);
  v25 = sub_23E135AFC();
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v27 = (uint64_t *)(v25 + 32);
    v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v24 = v39;
    do
    {
      v30 = *v27++;
      v29 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_23E0075CC(0, v28[2] + 1, 1, v28);
      v32 = v28[2];
      v31 = v28[3];
      if (v32 >= v31 >> 1)
        v28 = sub_23E0075CC((_QWORD *)(v31 > 1), v32 + 1, 1, v28);
      v28[2] = v32 + 1;
      v28[v32 + 4] = v29;
      --v26;
      v23 = v38;
    }
    while (v26);
  }
  else
  {
    v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v20 = sub_23E073EA4((uint64_t)v28);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
  return v20;
}

uint64_t HAPControlSolver.Source.currentHeaterCoolerState.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E848]);
}

uint64_t HAPControlSolver.Source.currentHeatingCooling.getter()
{
  return sub_23E017E1C(MEMORY[0x24BE4E838]);
}

uint64_t sub_23E017E1C(uint64_t (*a1)(void))
{
  type metadata accessor for HAPControlSolver.Source();
  return a1();
}

uint64_t StaticAccessory.staticEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E1352BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1353B8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D1D5A0);
    v9 = sub_23E1353AC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    StaticService.staticEndpoint.getter(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_23E017F7C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E073DA8(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E017FFC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E017FFC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v153 = type metadata accessor for Device.ControlGroup(0);
  v146 = *(_QWORD *)(v153 - 8);
  v2 = MEMORY[0x24BDAC7A8](v153);
  v142 = (uint64_t)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v154 = (uint64_t)&v136 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v136 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v155 = (uint64_t)&v136 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v147 = (uint64_t)&v136 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v144 = (uint64_t)&v136 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v140 = (uint64_t)&v136 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v139 = (uint64_t)&v136 - v17;
  v18 = a1[1];
  result = sub_23E1375F0();
  if (result >= v18)
  {
    if (v18 < 0)
      goto LABEL_168;
    if (v18)
      return sub_23E018C40(0, v18, 1, a1);
    return result;
  }
  if (v18 >= 0)
    v20 = v18;
  else
    v20 = v18 + 1;
  if (v18 < -1)
    goto LABEL_176;
  v21 = v18;
  v137 = result;
  if (v18 < 2)
  {
    v25 = (char *)MEMORY[0x24BEE4AF8];
    v145 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
    v136 = MEMORY[0x24BEE4AF8];
    if (v18 != 1)
    {
      v28 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_135:
      if (v28 >= 2)
      {
        v129 = *a1;
        v130 = v148;
        do
        {
          v131 = v28 - 2;
          if (v28 < 2)
            goto LABEL_163;
          if (!v129)
            goto LABEL_175;
          v132 = *(_QWORD *)&v25[16 * v131 + 32];
          v133 = *(_QWORD *)&v25[16 * v28 + 24];
          sub_23E018F5C(v129 + *(_QWORD *)(v146 + 72) * v132, v129 + *(_QWORD *)(v146 + 72) * *(_QWORD *)&v25[16 * v28 + 16], v129 + *(_QWORD *)(v146 + 72) * v133, v145);
          if (v130)
            break;
          if (v133 < v132)
            goto LABEL_164;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v25 = sub_23E073D94((uint64_t)v25);
          if (v131 >= *((_QWORD *)v25 + 2))
            goto LABEL_165;
          v134 = &v25[16 * v131 + 32];
          *(_QWORD *)v134 = v132;
          *((_QWORD *)v134 + 1) = v133;
          v135 = *((_QWORD *)v25 + 2);
          if (v28 > v135)
            goto LABEL_166;
          memmove(&v25[16 * v28 + 16], &v25[16 * v28 + 32], 16 * (v135 - v28));
          *((_QWORD *)v25 + 2) = v135 - 1;
          v28 = v135 - 1;
        }
        while (v135 > 2);
      }
LABEL_146:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v136 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v22 = v20 >> 1;
    v23 = sub_23E13729C();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v146 + 80);
    v136 = v23;
    v145 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = v21;
  v27 = 0;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  v150 = a1;
  v151 = v8;
  while (1)
  {
    v29 = v27;
    v30 = v27 + 1;
    v143 = v27;
    v156 = v26;
    if (v27 + 1 >= v26)
    {
      ++v27;
      goto LABEL_58;
    }
    v31 = *a1;
    v32 = *(_QWORD *)(v146 + 72);
    v33 = v139;
    sub_23DF73E10(*a1 + v32 * v30, v139, type metadata accessor for Device.ControlGroup);
    v149 = v31;
    v157 = v32;
    sub_23DF73E10(v31 + v32 * v29, v140, type metadata accessor for Device.ControlGroup);
    v34 = *(int *)(v153 + 24);
    if (*(_QWORD *)(v33 + v34 + 8))
    {
      v35 = *(_QWORD *)(v33 + v34);
      v36 = *(_QWORD *)(v33 + v34 + 8);
    }
    else
    {
      v35 = 0;
      v36 = 0xE000000000000000;
    }
    v37 = (_QWORD *)(v140 + v34);
    if (v37[1])
    {
      v38 = v37[1];
      if (v35 != *v37)
        goto LABEL_26;
    }
    else
    {
      v38 = 0xE000000000000000;
      if (v35)
        goto LABEL_26;
    }
    if (v36 == v38)
    {
      LODWORD(v152) = 0;
      goto LABEL_27;
    }
LABEL_26:
    LODWORD(v152) = sub_23E137614();
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23DF73E54(v140, type metadata accessor for Device.ControlGroup);
    sub_23DF73E54(v139, type metadata accessor for Device.ControlGroup);
    v27 = v29 + 2;
    v26 = v156;
    if (v29 + 2 < v156)
    {
      v138 = v25;
      v39 = v157 * v30;
      v40 = v149;
      v41 = v157 * v27;
      while (1)
      {
        v42 = v144;
        sub_23DF73E10(v40 + v41, v144, type metadata accessor for Device.ControlGroup);
        sub_23DF73E10(v40 + v39, v147, type metadata accessor for Device.ControlGroup);
        v43 = *(int *)(v153 + 24);
        if (*(_QWORD *)(v42 + v43 + 8))
        {
          v44 = *(_QWORD *)(v42 + v43);
          v45 = *(_QWORD *)(v42 + v43 + 8);
        }
        else
        {
          v44 = 0;
          v45 = 0xE000000000000000;
        }
        v46 = (_QWORD *)(v147 + v43);
        if (v46[1])
        {
          v47 = v46[1];
          if (v44 != *v46)
            goto LABEL_38;
        }
        else
        {
          v47 = 0xE000000000000000;
          if (v44)
            goto LABEL_38;
        }
        if (v45 == v47)
        {
          v48 = 0;
          goto LABEL_39;
        }
LABEL_38:
        v48 = sub_23E137614();
LABEL_39:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23DF73E54(v147, type metadata accessor for Device.ControlGroup);
        sub_23DF73E54(v144, type metadata accessor for Device.ControlGroup);
        if (((v152 ^ v48) & 1) != 0)
        {
          a1 = v150;
          v8 = v151;
          v25 = v138;
          v29 = v143;
          v26 = v156;
          if ((v152 & 1) != 0)
            goto LABEL_45;
          goto LABEL_58;
        }
        ++v27;
        v40 += v157;
        v26 = v156;
        a1 = v150;
        v8 = v151;
        if (v156 == v27)
        {
          v27 = v156;
          v25 = v138;
          v29 = v143;
          break;
        }
      }
    }
    if ((v152 & 1) != 0)
    {
LABEL_45:
      if (v27 < v29)
        goto LABEL_169;
      if (v29 < v27)
      {
        v138 = v25;
        v49 = 0;
        v50 = v29;
        v51 = v157 * (v27 - 1);
        v52 = v27 * v157;
        v53 = v50;
        v54 = v50 * v157;
        do
        {
          if (v53 != v27 + v49 - 1)
          {
            v56 = v149;
            if (!v149)
              goto LABEL_174;
            v57 = v149 + v54;
            v152 = v149 + v51;
            sub_23DF89384(v149 + v54, v142, type metadata accessor for Device.ControlGroup);
            if (v54 < v51 || v57 >= v56 + v52)
            {
              v55 = v152;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v55 = v152;
              if (v54 != v51)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_23DF89384(v142, v55, type metadata accessor for Device.ControlGroup);
          }
          ++v53;
          --v49;
          v51 -= v157;
          v52 -= v157;
          v54 += v157;
        }
        while (v53 < v27 + v49);
        v25 = v138;
        v8 = v151;
        v29 = v143;
        v26 = v156;
      }
    }
LABEL_58:
    if (v27 >= v26)
      goto LABEL_84;
    if (__OFSUB__(v27, v29))
      goto LABEL_167;
    if (v27 - v29 >= v137)
      goto LABEL_84;
    if (__OFADD__(v29, v137))
      goto LABEL_170;
    v58 = v156;
    if (v29 + v137 < v156)
      v58 = v29 + v137;
    if (v58 < v29)
      break;
    if (v27 == v58)
      goto LABEL_84;
    v138 = v25;
    v59 = *(_QWORD *)(v146 + 72);
    v157 = v59 * (v27 - 1);
    v149 = v59;
    v156 = v27 * v59;
    v141 = v58;
    while (2)
    {
      v152 = v27;
      v60 = 0;
      v61 = v29;
      while (1)
      {
        v62 = *a1;
        v63 = v155;
        sub_23DF73E10(v156 + v60 + *a1, v155, type metadata accessor for Device.ControlGroup);
        sub_23DF73E10(v157 + v60 + v62, (uint64_t)v8, type metadata accessor for Device.ControlGroup);
        v64 = *(int *)(v153 + 24);
        v65 = (uint64_t *)(v63 + v64);
        v66 = *(_QWORD *)(v63 + v64 + 8);
        if (v66)
        {
          v67 = *v65;
          v68 = v66;
        }
        else
        {
          v67 = 0;
          v68 = 0xE000000000000000;
        }
        v69 = &v8[v64];
        if (*((_QWORD *)v69 + 1))
        {
          v70 = *((_QWORD *)v69 + 1);
          if (v67 != *(_QWORD *)v69)
            goto LABEL_79;
        }
        else
        {
          v70 = 0xE000000000000000;
          if (v67)
            goto LABEL_79;
        }
        if (v68 == v70)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          v8 = v151;
          sub_23DF73E54((uint64_t)v151, type metadata accessor for Device.ControlGroup);
          sub_23DF73E54(v155, type metadata accessor for Device.ControlGroup);
          goto LABEL_68;
        }
LABEL_79:
        v71 = sub_23E137614();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v151;
        sub_23DF73E54((uint64_t)v151, type metadata accessor for Device.ControlGroup);
        sub_23DF73E54(v155, type metadata accessor for Device.ControlGroup);
        if ((v71 & 1) == 0)
          break;
        a1 = v150;
        v72 = *v150;
        if (!*v150)
          goto LABEL_172;
        v73 = v72 + v157 + v60;
        sub_23DF89384(v72 + v156 + v60, v154, type metadata accessor for Device.ControlGroup);
        swift_arrayInitWithTakeFrontToBack();
        sub_23DF89384(v154, v73, type metadata accessor for Device.ControlGroup);
        v60 -= v149;
        if (v152 == ++v61)
          goto LABEL_68;
      }
      a1 = v150;
LABEL_68:
      v27 = v152 + 1;
      v157 += v149;
      v156 += v149;
      v29 = v143;
      if (v152 + 1 != v141)
        continue;
      break;
    }
    v27 = v141;
    v25 = v138;
LABEL_84:
    if (v27 < v29)
      goto LABEL_162;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_23E073A18(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v75 = *((_QWORD *)v25 + 2);
    v74 = *((_QWORD *)v25 + 3);
    v28 = v75 + 1;
    if (v75 >= v74 >> 1)
      v25 = sub_23E073A18((char *)(v74 > 1), v75 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v28;
    v76 = v25 + 32;
    v77 = &v25[16 * v75 + 32];
    *(_QWORD *)v77 = v29;
    *((_QWORD *)v77 + 1) = v27;
    if (v75)
    {
      v152 = v27;
      while (1)
      {
        v78 = v28 - 1;
        if (v28 >= 4)
        {
          v83 = &v76[16 * v28];
          v84 = *((_QWORD *)v83 - 8);
          v85 = *((_QWORD *)v83 - 7);
          v89 = __OFSUB__(v85, v84);
          v86 = v85 - v84;
          if (v89)
            goto LABEL_151;
          v88 = *((_QWORD *)v83 - 6);
          v87 = *((_QWORD *)v83 - 5);
          v89 = __OFSUB__(v87, v88);
          v81 = v87 - v88;
          v82 = v89;
          if (v89)
            goto LABEL_152;
          v90 = v28 - 2;
          v91 = &v76[16 * v28 - 32];
          v93 = *(_QWORD *)v91;
          v92 = *((_QWORD *)v91 + 1);
          v89 = __OFSUB__(v92, v93);
          v94 = v92 - v93;
          if (v89)
            goto LABEL_154;
          v89 = __OFADD__(v81, v94);
          v95 = v81 + v94;
          if (v89)
            goto LABEL_157;
          if (v95 >= v86)
          {
            v113 = &v76[16 * v78];
            v115 = *(_QWORD *)v113;
            v114 = *((_QWORD *)v113 + 1);
            v89 = __OFSUB__(v114, v115);
            v116 = v114 - v115;
            if (v89)
              goto LABEL_161;
            v106 = v81 < v116;
            goto LABEL_122;
          }
        }
        else
        {
          if (v28 != 3)
          {
            v107 = *((_QWORD *)v25 + 4);
            v108 = *((_QWORD *)v25 + 5);
            v89 = __OFSUB__(v108, v107);
            v100 = v108 - v107;
            v101 = v89;
            goto LABEL_116;
          }
          v80 = *((_QWORD *)v25 + 4);
          v79 = *((_QWORD *)v25 + 5);
          v89 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          v82 = v89;
        }
        if ((v82 & 1) != 0)
          goto LABEL_153;
        v90 = v28 - 2;
        v96 = &v76[16 * v28 - 32];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v99 = __OFSUB__(v97, v98);
        v100 = v97 - v98;
        v101 = v99;
        if (v99)
          goto LABEL_156;
        v102 = &v76[16 * v78];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v89 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v89)
          goto LABEL_159;
        if (__OFADD__(v100, v105))
          goto LABEL_160;
        if (v100 + v105 >= v81)
        {
          v106 = v81 < v105;
LABEL_122:
          if (v106)
            v78 = v90;
          goto LABEL_124;
        }
LABEL_116:
        if ((v101 & 1) != 0)
          goto LABEL_155;
        v109 = &v76[16 * v78];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v89 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v89)
          goto LABEL_158;
        if (v112 < v100)
          goto LABEL_14;
LABEL_124:
        v117 = v78 - 1;
        if (v78 - 1 >= v28)
        {
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
          goto LABEL_171;
        }
        v118 = *a1;
        if (!*a1)
          goto LABEL_173;
        v119 = v25;
        v120 = a1;
        v121 = &v76[16 * v117];
        v122 = *(_QWORD *)v121;
        v123 = v76;
        v124 = v78;
        v125 = &v76[16 * v78];
        v126 = *((_QWORD *)v125 + 1);
        v127 = v148;
        sub_23E018F5C(v118 + *(_QWORD *)(v146 + 72) * *(_QWORD *)v121, v118 + *(_QWORD *)(v146 + 72) * *(_QWORD *)v125, v118 + *(_QWORD *)(v146 + 72) * v126, v145);
        v148 = v127;
        if (v127)
          goto LABEL_146;
        if (v126 < v122)
          goto LABEL_148;
        if (v124 > *((_QWORD *)v119 + 2))
          goto LABEL_149;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v123[16 * v117 + 8] = v126;
        v128 = *((_QWORD *)v119 + 2);
        if (v124 >= v128)
          goto LABEL_150;
        v25 = v119;
        v28 = v128 - 1;
        memmove(v125, v125 + 16, 16 * (v128 - 1 - v124));
        v76 = v123;
        *((_QWORD *)v119 + 2) = v128 - 1;
        v8 = v151;
        v27 = v152;
        a1 = v120;
        if (v128 <= 2)
          goto LABEL_14;
      }
    }
    v28 = 1;
LABEL_14:
    v26 = a1[1];
    if (v27 >= v26)
      goto LABEL_135;
  }
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23E018C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;

  v41 = a4;
  v33 = a1;
  v38 = type metadata accessor for Device.ControlGroup(0);
  v6 = MEMORY[0x24BDAC7A8](v38);
  v39 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v31 - v13;
  v37 = a3;
  v32 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v16 = v15 * (v37 - 1);
    v35 = v15;
    v42 = v15 * v37;
    v34 = (char *)&v31 - v13;
LABEL_6:
    v17 = 0;
    v18 = v33;
    v36 = v16;
    while (1)
    {
      v19 = *v41;
      v40 = v42 + v17;
      sub_23DF73E10(v42 + v17 + v19, (uint64_t)v14, type metadata accessor for Device.ControlGroup);
      sub_23DF73E10(v16 + v17 + v19, (uint64_t)v10, type metadata accessor for Device.ControlGroup);
      v20 = *(int *)(v38 + 24);
      v21 = &v14[v20];
      v22 = *(_QWORD *)&v14[v20 + 8];
      if (v22)
      {
        v23 = *(_QWORD *)v21;
        v24 = v22;
      }
      else
      {
        v23 = 0;
        v24 = 0xE000000000000000;
      }
      v25 = (uint64_t)v10;
      v26 = &v10[v20];
      if (*((_QWORD *)v26 + 1))
      {
        v27 = *((_QWORD *)v26 + 1);
        if (v23 != *(_QWORD *)v26)
          goto LABEL_16;
      }
      else
      {
        v27 = 0xE000000000000000;
        if (v23)
          goto LABEL_16;
      }
      if (v24 == v27)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        v10 = (char *)v25;
        sub_23DF73E54(v25, type metadata accessor for Device.ControlGroup);
        v14 = v34;
        result = sub_23DF73E54((uint64_t)v34, type metadata accessor for Device.ControlGroup);
        v16 = v36;
LABEL_5:
        v16 += v35;
        v42 += v35;
        if (++v37 == v32)
          return result;
        goto LABEL_6;
      }
LABEL_16:
      v28 = sub_23E137614();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = (char *)v25;
      sub_23DF73E54(v25, type metadata accessor for Device.ControlGroup);
      v14 = v34;
      result = sub_23DF73E54((uint64_t)v34, type metadata accessor for Device.ControlGroup);
      v16 = v36;
      if ((v28 & 1) == 0)
        goto LABEL_5;
      v29 = *v41;
      if (!*v41)
      {
        __break(1u);
        return result;
      }
      v30 = v29 + v36 + v17;
      sub_23DF89384(v29 + v42 + v17, v39, type metadata accessor for Device.ControlGroup);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23DF89384(v39, v30, type metadata accessor for Device.ControlGroup);
      v17 -= v35;
      if (v37 == ++v18)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_23E018F5C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t result;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;

  v61 = type metadata accessor for Device.ControlGroup(0);
  v8 = MEMORY[0x24BDAC7A8](v61);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v60 = (unint64_t)&v53 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v53 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v53 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_80;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_81;
  v21 = (uint64_t)(a2 - a1) / v19;
  v64 = a1;
  v63 = a4;
  v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if (v22 < 0)
      goto LABEL_82;
    v24 = v22 * v19;
    if (a4 < a2 || a2 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v36 = a4 + v24;
    v62 = a4 + v24;
    v64 = a2;
    if (v24 < 1 || a1 >= a2)
    {
LABEL_78:
      sub_23E073B10(&v64, &v63, (uint64_t *)&v62);
      return 1;
    }
    v38 = -v19;
    v56 = a1;
    v57 = a4;
    v58 = v38;
    v54 = v10;
    while (1)
    {
      v39 = v60;
      sub_23DF73E10(v36 + v38, v60, type metadata accessor for Device.ControlGroup);
      v40 = a2 + v38;
      sub_23DF73E10(a2 + v38, (uint64_t)v10, type metadata accessor for Device.ControlGroup);
      v41 = *(int *)(v61 + 24);
      v42 = *(_QWORD *)(v39 + v41 + 8);
      v59 = a2;
      if (v42)
      {
        v43 = *(_QWORD *)(v39 + v41);
        v44 = v42;
      }
      else
      {
        v43 = 0;
        v44 = 0xE000000000000000;
      }
      v45 = &v10[v41];
      if (*((_QWORD *)v45 + 1))
      {
        v46 = *((_QWORD *)v45 + 1);
        if (v43 != *(_QWORD *)v45)
          goto LABEL_63;
      }
      else
      {
        v46 = 0xE000000000000000;
        if (v43)
          goto LABEL_63;
      }
      if (v44 != v46)
      {
LABEL_63:
        v47 = sub_23E137614();
        goto LABEL_64;
      }
      v47 = 0;
LABEL_64:
      v38 = v58;
      v48 = a3 + v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v54;
      sub_23DF73E54((uint64_t)v54, type metadata accessor for Device.ControlGroup);
      sub_23DF73E54(v60, type metadata accessor for Device.ControlGroup);
      if ((v47 & 1) != 0)
      {
        v49 = v56;
        if (a3 < v59 || v48 >= v59)
        {
          swift_arrayInitWithTakeFrontToBack();
          v50 = v57;
          v38 = v58;
        }
        else
        {
          v50 = v57;
          v38 = v58;
          if (a3 != v59)
            swift_arrayInitWithTakeBackToFront();
        }
        v64 += v38;
      }
      else
      {
        v51 = v62;
        v62 += v38;
        v49 = v56;
        v40 = v59;
        if (a3 < v51 || v48 >= v51)
        {
          swift_arrayInitWithTakeFrontToBack();
          v50 = v57;
        }
        else
        {
          v50 = v57;
          if (a3 != v51)
            swift_arrayInitWithTakeBackToFront();
        }
      }
      v36 = v62;
      if (v62 > v50)
      {
        a2 = v40;
        a3 = v48;
        if (v40 > v49)
          continue;
      }
      goto LABEL_78;
    }
  }
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v60 = a4 + v23;
    v62 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v59 = v19;
      v55 = a3;
      while (1)
      {
        sub_23DF73E10(a2, (uint64_t)v17, type metadata accessor for Device.ControlGroup);
        sub_23DF73E10(a4, (uint64_t)v15, type metadata accessor for Device.ControlGroup);
        v26 = *(int *)(v61 + 24);
        if (*(_QWORD *)&v17[v26 + 8])
        {
          v27 = *(_QWORD *)&v17[v26];
          v28 = *(_QWORD *)&v17[v26 + 8];
        }
        else
        {
          v27 = 0;
          v28 = 0xE000000000000000;
        }
        v29 = &v15[v26];
        if (*((_QWORD *)v29 + 1))
        {
          v30 = *((_QWORD *)v29 + 1);
          if (v27 != *(_QWORD *)v29)
            goto LABEL_32;
        }
        else
        {
          v30 = 0xE000000000000000;
          if (v27)
            goto LABEL_32;
        }
        if (v28 == v30)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          sub_23DF73E54((uint64_t)v15, type metadata accessor for Device.ControlGroup);
          sub_23DF73E54((uint64_t)v17, type metadata accessor for Device.ControlGroup);
LABEL_37:
          v32 = v64;
          v33 = v59;
          v35 = v63 + v59;
          if (v64 < v63 || v64 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v64 != v63)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v63 = v35;
          v34 = a2;
          goto LABEL_43;
        }
LABEL_32:
        v31 = sub_23E137614();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23DF73E54((uint64_t)v15, type metadata accessor for Device.ControlGroup);
        sub_23DF73E54((uint64_t)v17, type metadata accessor for Device.ControlGroup);
        if ((v31 & 1) == 0)
          goto LABEL_37;
        v32 = v64;
        v33 = v59;
        v34 = a2 + v59;
        if (v64 < a2 || v64 >= v34)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v64 == a2)
        {
          v32 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_43:
        v64 = v32 + v33;
        a4 = v63;
        if (v63 < v60)
        {
          a2 = v34;
          if (v34 < v55)
            continue;
        }
        goto LABEL_78;
      }
    }
    goto LABEL_78;
  }
LABEL_82:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

BOOL _s22HomeAccessoryControlUI16HAPControlSolverC6SourceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  int *v45;
  char v46;
  _BOOL8 result;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t *v66;
  _BYTE *v67;
  _BYTE *v68;
  void (*v69)(_BYTE *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char v75;
  uint64_t v76;
  _QWORD *v77;
  char v78;
  _QWORD *v79;
  int v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  char v91;
  void (*v92)(_BYTE *, uint64_t);
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  unsigned int (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  char v103;
  void (*v104)(_BYTE *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char v113;
  _BYTE v114[4];
  int v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  v4 = type metadata accessor for MatterControlSolver.Source(0);
  v123 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v114[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B08);
  MEMORY[0x24BDAC7A8](v122);
  v8 = &v114[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v114[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v125 = &v114[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v114[-v15];
  v134 = sub_23E134FEC();
  v130 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v121 = &v114[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B10);
  MEMORY[0x24BDAC7A8](v127);
  v133 = &v114[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v126 = &v114[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v131 = &v114[-v23];
  MEMORY[0x24BDAC7A8](v22);
  v132 = &v114[-v24];
  v139 = sub_23E134C80();
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v124 = &v114[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B18);
  MEMORY[0x24BDAC7A8](v136);
  v138 = &v114[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v135 = &v114[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = MEMORY[0x24BDAC7A8](v28);
  v140 = &v114[-v31];
  MEMORY[0x24BDAC7A8](v30);
  v141 = &v114[-v32];
  v145 = sub_23E135334();
  v143 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v142 = &v114[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B20);
  MEMORY[0x24BDAC7A8](v34);
  v144 = &v114[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v146 = &v114[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = &v114[-v40];
  MEMORY[0x24BDAC7A8](v39);
  v43 = &v114[-v42];
  if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
    return 0;
  v119 = v16;
  v117 = v12;
  v116 = v6;
  v118 = v4;
  v120 = v8;
  v128 = type metadata accessor for HAPControlSolver.Source();
  v129 = a1;
  v147 = a2;
  sub_23E134E9C();
  sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
  sub_23E13723C();
  sub_23E13723C();
  if (v150 == v148 && v151 == v149)
  {
    swift_bridgeObjectRelease_n();
    v44 = v129;
    v45 = (int *)v128;
  }
  else
  {
    v46 = sub_23E137614();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    v44 = v129;
    v45 = (int *)v128;
    if ((v46 & 1) == 0)
      return result;
  }
  sub_23E13723C();
  sub_23E13723C();
  if (v150 == v148 && v151 == v149)
  {
    swift_bridgeObjectRelease_n();
    v48 = v147;
  }
  else
  {
    v49 = sub_23E137614();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    v48 = v147;
    if ((v49 & 1) == 0)
      return result;
  }
  v50 = v45[7];
  v51 = *(_QWORD *)(v44 + v50);
  v52 = *(_QWORD *)(v44 + v50 + 8);
  v53 = (_QWORD *)(v48 + v50);
  if (v51 == *v53 && v52 == v53[1] || (v54 = sub_23E137614(), result = 0, (v54 & 1) != 0))
  {
    v55 = v45[8];
    v56 = (_QWORD *)(v44 + v55);
    v57 = *(_QWORD *)(v44 + v55 + 8);
    v58 = (_QWORD *)(v48 + v55);
    v59 = v58[1];
    if (v57)
    {
      if (!v59)
        return 0;
      if (*v56 != *v58 || v57 != v59)
      {
        v60 = sub_23E137614();
        result = 0;
        if ((v60 & 1) == 0)
          return result;
      }
    }
    else if (v59)
    {
      return 0;
    }
    sub_23DF89C1C(v44 + v45[9], (uint64_t)v43, &qword_256D219F0);
    sub_23DF89C1C(v48 + v45[9], (uint64_t)v41, &qword_256D219F0);
    v61 = v144;
    v62 = (uint64_t)&v144[*(int *)(v34 + 48)];
    sub_23DF89C1C((uint64_t)v43, (uint64_t)v144, &qword_256D219F0);
    sub_23DF89C1C((uint64_t)v41, v62, &qword_256D219F0);
    v63 = v143;
    v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
    v65 = v145;
    if (v64((uint64_t)v61, 1, v145) == 1)
    {
      sub_23DF89C7C((uint64_t)v41, &qword_256D219F0);
      sub_23DF89C7C((uint64_t)v43, &qword_256D219F0);
      if (v64(v62, 1, v65) == 1)
      {
        sub_23DF89C7C((uint64_t)v61, &qword_256D219F0);
        goto LABEL_28;
      }
    }
    else
    {
      sub_23DF89C1C((uint64_t)v61, (uint64_t)v146, &qword_256D219F0);
      if (v64(v62, 1, v65) != 1)
      {
        v68 = v142;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v63 + 32))(v142, v62, v65);
        sub_23DF73F28(&qword_256D21B30, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCD8], MEMORY[0x24BE4DCF0]);
        v115 = sub_23E137158();
        v69 = *(void (**)(_BYTE *, uint64_t))(v63 + 8);
        v69(v68, v65);
        sub_23DF89C7C((uint64_t)v41, &qword_256D219F0);
        sub_23DF89C7C((uint64_t)v43, &qword_256D219F0);
        v69(v146, v65);
        sub_23DF89C7C((uint64_t)v61, &qword_256D219F0);
        if ((v115 & 1) == 0)
          return 0;
LABEL_28:
        v70 = v147;
        if (*(unsigned __int8 *)(v44 + v45[10]) != *(unsigned __int8 *)(v147 + v45[10])
          || (MEMORY[0x242649700](v44 + v45[11], v147 + v45[11]) & 1) == 0
          || *(unsigned __int8 *)(v44 + v45[12]) != *(unsigned __int8 *)(v70 + v45[12]))
        {
          return 0;
        }
        v71 = v45[13];
        v72 = *(_QWORD *)(v44 + v71);
        v73 = *(_QWORD *)(v44 + v71 + 8);
        v74 = (_QWORD *)(v70 + v71);
        if (v72 != *v74 || v73 != v74[1])
        {
          v75 = sub_23E137614();
          result = 0;
          if ((v75 & 1) == 0)
            return result;
        }
        v76 = v45[14];
        v77 = (_QWORD *)(v44 + v76);
        v78 = *(_BYTE *)(v44 + v76 + 8);
        v79 = (_QWORD *)(v70 + v76);
        v80 = *(unsigned __int8 *)(v70 + v76 + 8);
        if ((v78 & 1) != 0)
        {
          if (!v80)
            return 0;
        }
        else
        {
          if (*v77 != *v79)
            LOBYTE(v80) = 1;
          if ((v80 & 1) != 0)
            return 0;
        }
        if ((sub_23E11CF44(*(_QWORD *)(v44 + v45[15]), *(_QWORD *)(v70 + v45[15])) & 1) == 0
          || (sub_23E11CF44(*(_QWORD *)(v44 + v45[16]), *(_QWORD *)(v70 + v45[16])) & 1) == 0
          || (sub_23E135A84() & 1) == 0
          || (sub_23E135574() & 1) == 0)
        {
          return 0;
        }
        v81 = v141;
        sub_23DF89C1C(v44 + v45[19], (uint64_t)v141, &qword_256D1D7E8);
        v82 = v140;
        sub_23DF89C1C(v70 + v45[19], (uint64_t)v140, &qword_256D1D7E8);
        v83 = v138;
        v84 = (uint64_t)&v138[*(int *)(v136 + 48)];
        sub_23DF89C1C((uint64_t)v81, (uint64_t)v138, &qword_256D1D7E8);
        sub_23DF89C1C((uint64_t)v82, v84, &qword_256D1D7E8);
        v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
        v86 = v139;
        if (v85((uint64_t)v83, 1, v139) == 1)
        {
          sub_23DF89C7C((uint64_t)v140, &qword_256D1D7E8);
          sub_23DF89C7C((uint64_t)v141, &qword_256D1D7E8);
          if (v85(v84, 1, v86) == 1)
          {
            sub_23DF89C7C((uint64_t)v83, &qword_256D1D7E8);
LABEL_53:
            v93 = v128;
            v94 = v132;
            sub_23DF89C1C(v129 + *(int *)(v128 + 80), (uint64_t)v132, &qword_256D219E8);
            v95 = v131;
            sub_23DF89C1C(v147 + *(int *)(v93 + 80), (uint64_t)v131, &qword_256D219E8);
            v96 = v133;
            v97 = (uint64_t)&v133[*(int *)(v127 + 48)];
            sub_23DF89C1C((uint64_t)v94, (uint64_t)v133, &qword_256D219E8);
            sub_23DF89C1C((uint64_t)v95, v97, &qword_256D219E8);
            v98 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
            if (v98((uint64_t)v96, 1, v134) == 1)
            {
              sub_23DF89C7C((uint64_t)v131, &qword_256D219E8);
              sub_23DF89C7C((uint64_t)v132, &qword_256D219E8);
              if (v98(v97, 1, v134) == 1)
              {
                sub_23DF89C7C((uint64_t)v133, &qword_256D219E8);
LABEL_60:
                v105 = v128;
                v106 = (uint64_t)v119;
                sub_23DF89C1C(v129 + *(int *)(v128 + 84), (uint64_t)v119, &qword_256D1EEE8);
                v107 = v125;
                sub_23DF89C1C(v147 + *(int *)(v105 + 84), (uint64_t)v125, &qword_256D1EEE8);
                v108 = (uint64_t)v120;
                v109 = (uint64_t)&v120[*(int *)(v122 + 48)];
                sub_23DF89C1C(v106, (uint64_t)v120, &qword_256D1EEE8);
                sub_23DF89C1C((uint64_t)v107, v109, &qword_256D1EEE8);
                v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
                if (v110(v108, 1, v118) == 1)
                {
                  sub_23DF89C7C((uint64_t)v125, &qword_256D1EEE8);
                  sub_23DF89C7C((uint64_t)v119, &qword_256D1EEE8);
                  if (v110(v109, 1, v118) == 1)
                  {
                    sub_23DF89C7C((uint64_t)v120, &qword_256D1EEE8);
                    return 1;
                  }
                  goto LABEL_65;
                }
                sub_23DF89C1C((uint64_t)v120, (uint64_t)v117, &qword_256D1EEE8);
                if (v110(v109, 1, v118) == 1)
                {
                  sub_23DF89C7C((uint64_t)v125, &qword_256D1EEE8);
                  sub_23DF89C7C((uint64_t)v119, &qword_256D1EEE8);
                  sub_23DF73E54((uint64_t)v117, type metadata accessor for MatterControlSolver.Source);
LABEL_65:
                  v66 = &qword_256D21B08;
                  v67 = v120;
                  goto LABEL_26;
                }
                v111 = (uint64_t)v116;
                sub_23DF89384(v109, (uint64_t)v116, type metadata accessor for MatterControlSolver.Source);
                v112 = (uint64_t)v117;
                v113 = static MatterControlSolver.Source.== infix(_:_:)((uint64_t)v117, v111);
                sub_23DF73E54(v111, type metadata accessor for MatterControlSolver.Source);
                sub_23DF89C7C((uint64_t)v125, &qword_256D1EEE8);
                sub_23DF89C7C((uint64_t)v119, &qword_256D1EEE8);
                sub_23DF73E54(v112, type metadata accessor for MatterControlSolver.Source);
                sub_23DF89C7C((uint64_t)v120, &qword_256D1EEE8);
                return (v113 & 1) != 0;
              }
            }
            else
            {
              sub_23DF89C1C((uint64_t)v133, (uint64_t)v126, &qword_256D219E8);
              if (v98(v97, 1, v134) != 1)
              {
                v99 = v130;
                v100 = v121;
                v101 = v134;
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v130 + 32))(v121, v97, v134);
                sub_23DF73F28(&qword_256D21B28, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA08]);
                v102 = v126;
                v103 = sub_23E137158();
                v104 = *(void (**)(_BYTE *, uint64_t))(v99 + 8);
                v104(v100, v101);
                sub_23DF89C7C((uint64_t)v131, &qword_256D219E8);
                sub_23DF89C7C((uint64_t)v132, &qword_256D219E8);
                v104(v102, v101);
                sub_23DF89C7C((uint64_t)v133, &qword_256D219E8);
                if ((v103 & 1) == 0)
                  return 0;
                goto LABEL_60;
              }
              sub_23DF89C7C((uint64_t)v131, &qword_256D219E8);
              sub_23DF89C7C((uint64_t)v132, &qword_256D219E8);
              (*(void (**)(_BYTE *, uint64_t))(v130 + 8))(v126, v134);
            }
            v66 = &qword_256D21B10;
            v67 = v133;
LABEL_26:
            sub_23DF89C7C((uint64_t)v67, v66);
            return 0;
          }
        }
        else
        {
          sub_23DF89C1C((uint64_t)v83, (uint64_t)v135, &qword_256D1D7E8);
          if (v85(v84, 1, v86) != 1)
          {
            v87 = v137;
            v88 = v124;
            v89 = v139;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v137 + 32))(v124, v84, v139);
            sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v90 = v135;
            v91 = sub_23E137158();
            v92 = *(void (**)(_BYTE *, uint64_t))(v87 + 8);
            v92(v88, v89);
            sub_23DF89C7C((uint64_t)v140, &qword_256D1D7E8);
            sub_23DF89C7C((uint64_t)v141, &qword_256D1D7E8);
            v92(v90, v89);
            sub_23DF89C7C((uint64_t)v138, &qword_256D1D7E8);
            if ((v91 & 1) == 0)
              return 0;
            goto LABEL_53;
          }
          sub_23DF89C7C((uint64_t)v140, &qword_256D1D7E8);
          sub_23DF89C7C((uint64_t)v141, &qword_256D1D7E8);
          (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v135, v139);
          v83 = v138;
        }
        v66 = &qword_256D21B18;
        v67 = v83;
        goto LABEL_26;
      }
      sub_23DF89C7C((uint64_t)v41, &qword_256D219F0);
      sub_23DF89C7C((uint64_t)v43, &qword_256D219F0);
      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v146, v65);
    }
    v66 = &qword_256D21B20;
    v67 = v61;
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_23E01A534()
{
  return sub_23DF73F28(&qword_256D21A10, (uint64_t (*)(uint64_t))type metadata accessor for HAPControlSolver.Source, (uint64_t)&protocol conformance descriptor for HAPControlSolver.Source);
}

char *_s6SourceVwCP(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, _QWORD, uint64_t, int *);
  void (*v91)(char *, char *);
  void (*v92)(char *, char *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    v94 = *(_QWORD *)(v7 - 8);
    v95 = v7;
    v91 = *(void (**)(char *, char *))(v94 + 16);
    v91(a1, a2);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23E134E9C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = &a1[v13];
    v16 = &a2[v13];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = &a1[v14];
    v19 = &a2[v14];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = a3[9];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23E135334();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v29 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v32 = sub_23E134E60();
    v92 = *(void (**)(char *, char *))(*(_QWORD *)(v32 - 8) + 16);
    v93 = v32;
    v92(v30, v31);
    v33 = a3[13];
    a1[a3[12]] = a2[a3[12]];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = a3[14];
    v38 = a3[15];
    v39 = &a1[v37];
    v40 = &a2[v37];
    v39[8] = v40[8];
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
    v41 = a3[17];
    *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v44 = sub_23E135ACC();
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(v42, v43, v44);
    v46 = a3[18];
    v47 = &a1[v46];
    v48 = &a2[v46];
    v49 = sub_23E135580();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    v50 = a3[19];
    v51 = &a1[v50];
    v52 = &a2[v50];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(&a2[v50], 1, v95))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v91)(v51, v52, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v51, 0, 1, v95);
    }
    v54 = a3[20];
    v55 = &a1[v54];
    v56 = &a2[v54];
    v57 = sub_23E134FEC();
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    v60 = a3[21];
    v61 = &a1[v60];
    v62 = &a2[v60];
    v63 = (int *)type metadata accessor for MatterControlSolver.Source(0);
    v64 = *((_QWORD *)v63 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v64 + 48))(v62, 1, v63))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v61, v62, v57);
      v66 = type metadata accessor for MatterControlSolver.SourcePath(0);
      v67 = *(int *)(v66 + 20);
      v68 = &v61[v67];
      v69 = &v62[v67];
      v70 = sub_23E134E78();
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      v61[*(int *)(v66 + 24)] = v62[*(int *)(v66 + 24)];
      v73 = v63[5];
      v74 = &v61[v73];
      v75 = &v62[v73];
      v76 = sub_23E13552C();
      v77 = *(_QWORD *)(v76 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      *(_QWORD *)&v61[v63[6]] = *(_QWORD *)&v62[v63[6]];
      v61[v63[7]] = v62[v63[7]];
      v79 = v63[8];
      v80 = &v61[v79];
      v81 = &v62[v79];
      v80[2] = v81[2];
      *(_WORD *)v80 = *(_WORD *)v81;
      v82 = v63[9];
      v83 = &v61[v82];
      v84 = &v62[v82];
      swift_bridgeObjectRetain();
      ((void (*)(char *, char *, uint64_t))v92)(v83, v84, v93);
      v85 = v63[10];
      v86 = &v61[v85];
      v87 = &v62[v85];
      v88 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = v88;
      v89 = *(void (**)(char *, _QWORD, uint64_t, int *))(v64 + 56);
      swift_bridgeObjectRetain();
      v89(v61, 0, 1, v63);
    }
  }
  return a1;
}

uint64_t _s6SourceVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  v8 = sub_23E134E9C();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[6], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[9];
  v11 = sub_23E135334();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = a1 + a2[11];
  v14 = sub_23E134E60();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
  v15(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = a1 + a2[17];
  v17 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = a1 + a2[18];
  v19 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = a1 + a2[19];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4))
    v6(v20, v4);
  v21 = a1 + a2[20];
  v22 = sub_23E134FEC();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = a1 + a2[21];
  v25 = type metadata accessor for MatterControlSolver.Source(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25);
  if (!(_DWORD)result)
  {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    v27 = v24 + *(int *)(type metadata accessor for MatterControlSolver.SourcePath(0) + 20);
    v28 = sub_23E134E78();
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v30 = v24 + *(int *)(v25 + 20);
    v31 = sub_23E13552C();
    v32 = *(_QWORD *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    swift_bridgeObjectRelease();
    v15(v24 + *(int *)(v25 + 36), v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6SourceVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, _QWORD, uint64_t, int *);
  void (*v89)(uint64_t, uint64_t);
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v6 = sub_23E134C80();
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  v89 = *(void (**)(uint64_t, uint64_t))(v92 + 16);
  v89(a1, a2);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E134E9C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[9];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_23E135334();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_23E134E60();
  v90 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v91 = v30;
  v90(v28, v29);
  v31 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[14];
  v36 = a3[15];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  v39 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = sub_23E135ACC();
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v40, v41, v42);
  v44 = a3[18];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = a3[19];
  v49 = (void *)(a1 + v48);
  v50 = (const void *)(a2 + v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(a2 + v48, 1, v93))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    ((void (*)(void *, const void *, uint64_t))v89)(v49, v50, v93);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v49, 0, 1, v93);
  }
  v52 = a3[20];
  v53 = (void *)(a1 + v52);
  v54 = (const void *)(a2 + v52);
  v55 = sub_23E134FEC();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v58 = a3[21];
  v59 = (char *)(a1 + v58);
  v60 = (char *)(a2 + v58);
  v61 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v62 = *((_QWORD *)v61 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v62 + 48))(v60, 1, v61))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v59, v60, v55);
    v64 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v65 = *(int *)(v64 + 20);
    v66 = &v59[v65];
    v67 = &v60[v65];
    v68 = sub_23E134E78();
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    v59[*(int *)(v64 + 24)] = v60[*(int *)(v64 + 24)];
    v71 = v61[5];
    v72 = &v59[v71];
    v73 = &v60[v71];
    v74 = sub_23E13552C();
    v75 = *(_QWORD *)(v74 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    *(_QWORD *)&v59[v61[6]] = *(_QWORD *)&v60[v61[6]];
    v59[v61[7]] = v60[v61[7]];
    v77 = v61[8];
    v78 = &v59[v77];
    v79 = &v60[v77];
    v78[2] = v79[2];
    *(_WORD *)v78 = *(_WORD *)v79;
    v80 = v61[9];
    v81 = &v59[v80];
    v82 = &v60[v80];
    swift_bridgeObjectRetain();
    ((void (*)(char *, char *, uint64_t))v90)(v81, v82, v91);
    v83 = v61[10];
    v84 = &v59[v83];
    v85 = &v60[v83];
    v86 = *((_QWORD *)v85 + 1);
    *(_QWORD *)v84 = *(_QWORD *)v85;
    *((_QWORD *)v84 + 1) = v86;
    v87 = *(void (**)(char *, _QWORD, uint64_t, int *))(v62 + 56);
    swift_bridgeObjectRetain();
    v87(v59, 0, 1, v61);
  }
  return a1;
}

uint64_t _s6SourceVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  int *v65;
  uint64_t v66;
  uint64_t (*v67)(_BYTE *, uint64_t, int *);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  __int16 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  void (*v103)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(char *, uint64_t, uint64_t);
  int v111;
  int v112;
  void (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v6 = sub_23E134C80();
  v127 = *(_QWORD *)(v6 - 8);
  v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 24);
  v123(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E134E9C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = sub_23E135334();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v11) = v23(v19, 1, v21);
  v24 = v23(v20, 1, v21);
  if ((_DWORD)v11)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_7:
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23E134E60();
  v125 = *(_QWORD *)(v29 - 8);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 24);
  v30(v27, v28, v29);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v31 = a3[13];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[14];
  v35 = a1 + v34;
  v36 = (uint64_t *)(a2 + v34);
  v37 = *v36;
  *(_BYTE *)(v35 + 8) = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[17];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  v42 = a3[18];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  v46 = a3[19];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  v50 = v49(a1 + v46, 1, v6);
  v51 = v49((uint64_t)v48, 1, v6);
  v126 = v29;
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v127 + 16))(v47, v48, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v47, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v127 + 8))(v47, v6);
LABEL_12:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_13;
  }
  v123((uint64_t)v47, (uint64_t)v48, v6);
LABEL_13:
  v53 = a3[20];
  v54 = (void *)(a1 + v53);
  v55 = (void *)(a2 + v53);
  v56 = sub_23E134FEC();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  v124 = v30;
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, void *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v60)
  {
    (*(void (**)(void *, uint64_t))(v57 + 8))(v54, v56);
LABEL_18:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v57 + 24))(v54, v55, v56);
LABEL_19:
  v62 = a3[21];
  v63 = (_BYTE *)(a1 + v62);
  v64 = (_BYTE *)(a2 + v62);
  v65 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v66 = *((_QWORD *)v65 - 1);
  v67 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (v69)
    {
      sub_23DF73E54((uint64_t)v63, type metadata accessor for MatterControlSolver.Source);
      goto LABEL_25;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 24))(v63, v64, v56);
    v128 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v78 = *(int *)(v128 + 20);
    v79 = &v63[v78];
    v80 = &v64[v78];
    v81 = sub_23E134E78();
    v82 = *(_QWORD *)(v81 - 8);
    v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
    v84 = v83(v79, 1, v81);
    v85 = v83(v80, 1, v81);
    if (v84)
    {
      if (!v85)
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v85)
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v79, v80, v81);
LABEL_40:
        v63[*(int *)(v128 + 24)] = v64[*(int *)(v128 + 24)];
        v105 = v65[5];
        v106 = &v63[v105];
        v107 = &v64[v105];
        v108 = sub_23E13552C();
        v109 = *(_QWORD *)(v108 - 8);
        v110 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48);
        v111 = v110(v106, 1, v108);
        v112 = v110(v107, 1, v108);
        if (v111)
        {
          v113 = v124;
          if (!v112)
          {
            (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, v107, v108);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
LABEL_46:
            *(_QWORD *)&v63[v65[6]] = *(_QWORD *)&v64[v65[6]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v63[v65[7]] = v64[v65[7]];
            v115 = v65[8];
            v116 = &v63[v115];
            v117 = &v64[v115];
            v118 = v117[2];
            *(_WORD *)v116 = *(_WORD *)v117;
            v116[2] = v118;
            v113((uint64_t)&v63[v65[9]], (uint64_t)&v64[v65[9]], v126);
            v119 = v65[10];
            v120 = &v63[v119];
            v121 = &v64[v119];
            *v120 = *v121;
            v120[1] = v121[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          v113 = v124;
          if (!v112)
          {
            (*(void (**)(char *, char *, uint64_t))(v109 + 24))(v106, v107, v108);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v109 + 8))(v106, v108);
        }
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v81);
    }
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    goto LABEL_40;
  }
  if (v69)
  {
LABEL_25:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 16))(v63, v64, v56);
  v70 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v71 = *(int *)(v70 + 20);
  v72 = &v63[v71];
  v73 = &v64[v71];
  v74 = sub_23E134E78();
  v75 = *(_QWORD *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  v63[*(int *)(v70 + 24)] = v64[*(int *)(v70 + 24)];
  v86 = v65[5];
  v87 = &v63[v86];
  v88 = &v64[v86];
  v89 = sub_23E13552C();
  v90 = *(_QWORD *)(v89 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
  }
  *(_QWORD *)&v63[v65[6]] = *(_QWORD *)&v64[v65[6]];
  v63[v65[7]] = v64[v65[7]];
  v92 = v65[8];
  v93 = &v63[v92];
  v94 = &v64[v92];
  v95 = *(_WORD *)v94;
  v93[2] = v94[2];
  *(_WORD *)v93 = v95;
  v96 = v65[9];
  v97 = &v63[v96];
  v98 = &v64[v96];
  v99 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
  swift_bridgeObjectRetain();
  v99(v97, v98, v126);
  v100 = v65[10];
  v101 = &v63[v100];
  v102 = &v64[v100];
  *v101 = *v102;
  v101[1] = v102[1];
  v103 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v66 + 56);
  swift_bridgeObjectRetain();
  v103(v63, 0, 1, v65);
  return a1;
}

uint64_t _s6SourceVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23E134E9C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[6], a2 + a3[6], v12);
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[9];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_23E135334();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23E134E60();
  v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v72(v22, v23, v24);
  v25 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  v26 = a3[14];
  v27 = a3[15];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v30 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  v34 = a3[18];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = a3[19];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v38, 1, v6))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v39, (uint64_t)v40, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
  }
  v42 = a3[20];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = sub_23E134FEC();
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v48 = a3[21];
  v49 = (char *)(a1 + v48);
  v50 = (char *)(a2 + v48);
  v51 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v52 = *((_QWORD *)v51 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v52 + 48))(v50, 1, v51))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v71 = v24;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v50, v45);
    v54 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v55 = *(int *)(v54 + 20);
    v56 = &v49[v55];
    v57 = &v50[v55];
    v58 = sub_23E134E78();
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    v49[*(int *)(v54 + 24)] = v50[*(int *)(v54 + 24)];
    v61 = v51[5];
    v62 = &v49[v61];
    v63 = &v50[v61];
    v64 = sub_23E13552C();
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    *(_QWORD *)&v49[v51[6]] = *(_QWORD *)&v50[v51[6]];
    v49[v51[7]] = v50[v51[7]];
    v67 = v51[8];
    v68 = &v49[v67];
    v69 = &v50[v67];
    v68[2] = v69[2];
    *(_WORD *)v68 = *(_WORD *)v69;
    v72((uint64_t)&v49[v51[9]], (uint64_t)&v50[v51[9]], v71);
    *(_OWORD *)&v49[v51[10]] = *(_OWORD *)&v50[v51[10]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v52 + 56))(v49, 0, 1, v51);
  }
  return a1;
}

uint64_t _s6SourceVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  int *v71;
  uint64_t v72;
  uint64_t (*v73)(_BYTE *, uint64_t, int *);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  int v108;
  int v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v121)(uint64_t, uint64_t, uint64_t);
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v6 = sub_23E134C80();
  v125 = *(_QWORD *)(v6 - 8);
  v121 = *(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 40);
  v121(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E134E9C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = sub_23E135334();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v11) = v27(v23, 1, v25);
  v28 = v27(v24, 1, v25);
  if ((_DWORD)v11)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_7:
  v30 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23E134E60();
  v123 = *(_QWORD *)(v33 - 8);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 40);
  v34(v31, v32, v33);
  v35 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[14];
  v41 = a3[15];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  v44 = a3[17];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
  v48 = a3[18];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
  v52 = a3[19];
  v53 = (void *)(a1 + v52);
  v54 = (const void *)(a2 + v52);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  v56 = v55(a1 + v52, 1, v6);
  v57 = v55((uint64_t)v54, 1, v6);
  v124 = v33;
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, const void *, uint64_t))(v125 + 32))(v53, v54, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v53, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v57)
  {
    (*(void (**)(void *, uint64_t))(v125 + 8))(v53, v6);
LABEL_12:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_13;
  }
  v121((uint64_t)v53, (uint64_t)v54, v6);
LABEL_13:
  v59 = a3[20];
  v60 = (void *)(a1 + v59);
  v61 = (void *)(a2 + v59);
  v62 = sub_23E134FEC();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64(v61, 1, v62);
  v122 = v34;
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v60, v61, v62);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
LABEL_18:
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v60, v61, v62);
LABEL_19:
  v68 = a3[21];
  v69 = (_BYTE *)(a1 + v68);
  v70 = (_BYTE *)(a2 + v68);
  v71 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v72 = *((_QWORD *)v71 - 1);
  v73 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (!v74)
  {
    if (v75)
    {
      sub_23DF73E54((uint64_t)v69, type metadata accessor for MatterControlSolver.Source);
      goto LABEL_25;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 40))(v69, v70, v62);
    v126 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v84 = *(int *)(v126 + 20);
    v85 = &v69[v84];
    v86 = &v70[v84];
    v87 = sub_23E134E78();
    v88 = *(_QWORD *)(v87 - 8);
    v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    v90 = v89(v85, 1, v87);
    v91 = v89(v86, 1, v87);
    if (v90)
    {
      if (!v91)
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v85, v86, v87);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v91)
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 40))(v85, v86, v87);
LABEL_40:
        v69[*(int *)(v126 + 24)] = v70[*(int *)(v126 + 24)];
        v102 = v71[5];
        v103 = &v69[v102];
        v104 = &v70[v102];
        v105 = sub_23E13552C();
        v106 = *(_QWORD *)(v105 - 8);
        v107 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48);
        v108 = v107(v103, 1, v105);
        v109 = v107(v104, 1, v105);
        if (v108)
        {
          v110 = v122;
          if (!v109)
          {
            (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v103, v104, v105);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
LABEL_46:
            *(_QWORD *)&v69[v71[6]] = *(_QWORD *)&v70[v71[6]];
            swift_bridgeObjectRelease();
            v69[v71[7]] = v70[v71[7]];
            v112 = v71[8];
            v113 = &v69[v112];
            v114 = &v70[v112];
            *(_WORD *)v113 = *(_WORD *)v114;
            v113[2] = v114[2];
            v110((uint64_t)&v69[v71[9]], (uint64_t)&v70[v71[9]], v124);
            v115 = v71[10];
            v116 = &v69[v115];
            v117 = (uint64_t *)&v70[v115];
            v119 = *v117;
            v118 = v117[1];
            *v116 = v119;
            v116[1] = v118;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          v110 = v122;
          if (!v109)
          {
            (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v103, v104, v105);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v106 + 8))(v103, v105);
        }
        v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v87);
    }
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_40;
  }
  if (v75)
  {
LABEL_25:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 32))(v69, v70, v62);
  v76 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v77 = *(int *)(v76 + 20);
  v78 = &v69[v77];
  v79 = &v70[v77];
  v80 = sub_23E134E78();
  v81 = *(_QWORD *)(v80 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v78, v79, v80);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  v69[*(int *)(v76 + 24)] = v70[*(int *)(v76 + 24)];
  v92 = v71[5];
  v93 = &v69[v92];
  v94 = &v70[v92];
  v95 = sub_23E13552C();
  v96 = *(_QWORD *)(v95 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v93, v94, v95);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
  }
  *(_QWORD *)&v69[v71[6]] = *(_QWORD *)&v70[v71[6]];
  v69[v71[7]] = v70[v71[7]];
  v98 = v71[8];
  v99 = &v69[v98];
  v100 = &v70[v98];
  v99[2] = v100[2];
  *(_WORD *)v99 = *(_WORD *)v100;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v123 + 32))(&v69[v71[9]], &v70[v71[9]], v124);
  *(_OWORD *)&v69[v71[10]] = *(_OWORD *)&v70[v71[10]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v72 + 56))(v69, 0, 1, v71);
  return a1;
}

uint64_t _s6SourceVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E01CA84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E134E9C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_22:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[9];
    }
    else
    {
      v17 = sub_23E134E60();
      v12 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v17;
        v13 = a3[11];
      }
      else
      {
        v18 = sub_23E135ACC();
        v12 = *(_QWORD *)(v18 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v18;
          v13 = a3[17];
        }
        else
        {
          v19 = sub_23E135580();
          v12 = *(_QWORD *)(v19 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v19;
            v13 = a3[18];
          }
          else
          {
            v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
            v12 = *(_QWORD *)(v20 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v20;
              v13 = a3[19];
            }
            else
            {
              v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
              v12 = *(_QWORD *)(v21 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v21;
                v13 = a3[20];
              }
              else
              {
                v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
                v12 = *(_QWORD *)(v8 - 8);
                v13 = a3[21];
              }
            }
          }
        }
      }
    }
    goto LABEL_22;
  }
  v14 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t _s6SourceVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E01CC48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_23E134C80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_23E134E9C();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
        return result;
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v17 = sub_23E134E60();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[11];
        }
        else
        {
          v18 = sub_23E135ACC();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[17];
          }
          else
          {
            v19 = sub_23E135580();
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[18];
            }
            else
            {
              v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[19];
              }
              else
              {
                v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[20];
                }
                else
                {
                  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
                  v14 = *(_QWORD *)(v10 - 8);
                  v15 = a4[21];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E01CDFC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_23E134C80();
  if (v0 <= 0x3F)
  {
    sub_23E134E9C();
    if (v1 <= 0x3F)
    {
      sub_23DFB3D54(319, &qword_256D21A80, (void (*)(uint64_t))MEMORY[0x24BE4DCD8]);
      if (v2 <= 0x3F)
      {
        sub_23E134E60();
        if (v3 <= 0x3F)
        {
          sub_23E135ACC();
          if (v4 <= 0x3F)
          {
            sub_23E135580();
            if (v5 <= 0x3F)
            {
              sub_23DFB3D54(319, &qword_256D21A88, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
              if (v6 <= 0x3F)
              {
                sub_23DFB3D54(319, &qword_256D21A90, (void (*)(uint64_t))MEMORY[0x24BE4D9E8]);
                if (v7 <= 0x3F)
                {
                  sub_23DFB3D54(319, qword_256D21A98, (void (*)(uint64_t))type metadata accessor for MatterControlSolver.Source);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

ValueMetadata *sub_23E01CFC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  ValueMetadata *result;
  int v9;
  uint64_t v10;

  v2 = sub_23E134E9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HAPControlSolver.Source();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v6 + 20), v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x24BE4D5C0])
    return &_s11AirPurifierVN;
  v9 = v7;
  if (v7 == *MEMORY[0x24BE4D7C8])
    return &_s28DoorWindowAndWindowConveringVN;
  if (v7 == *MEMORY[0x24BE4D7B8])
    return &_s3FanVN;
  if (v7 == *MEMORY[0x24BE4D808])
    return &_s6FaucetVN;
  if (v7 == *MEMORY[0x24BE4D6E0])
    return &_s10GarageDoorVN_0;
  if (v7 == *MEMORY[0x24BE4D610])
    return &_s12HeaterCoolerVN;
  if (v7 == *MEMORY[0x24BE4D778])
    return &_s10HumidifierVN;
  if (v7 == *MEMORY[0x24BE4D6F0])
    return &_s10IrrigationVN;
  if (v7 == *MEMORY[0x24BE4D878])
    return &_s9LightbulbVN_0;
  if (v7 == *MEMORY[0x24BE4D650])
    return &_s4LockVN;
  if (v7 == *MEMORY[0x24BE4D810])
    return &_s12OutletSwitchVN_0;
  if (v7 == *MEMORY[0x24BE4D688])
    return &_s14SecuritySystemVN;
  if (v7 == *MEMORY[0x24BE4D828])
    return &_s12OutletSwitchVN_0;
  if (v7 == *MEMORY[0x24BE4D590])
    return &_s10TelevisionVN;
  if (v7 == *MEMORY[0x24BE4D5A0])
    return &_s10ThermostatVN_0;
  if (v7 == *MEMORY[0x24BE4D7F8])
    return &_s5ValveVN_0;
  if (v7 == *MEMORY[0x24BE4D690])
    return &_s3FanVN;
  result = &_s28DoorWindowAndWindowConveringVN;
  if (v9 != *MEMORY[0x24BE4D830] && v9 != *MEMORY[0x24BE4D6A0])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return result;
}

ValueMetadata *_s11AirPurifierVMa()
{
  return &_s11AirPurifierVN;
}

ValueMetadata *_s3FanVMa()
{
  return &_s3FanVN;
}

ValueMetadata *_s6FaucetVMa()
{
  return &_s6FaucetVN;
}

ValueMetadata *_s10GarageDoorVMa_0()
{
  return &_s10GarageDoorVN_0;
}

ValueMetadata *_s10HumidifierVMa()
{
  return &_s10HumidifierVN;
}

ValueMetadata *_s10IrrigationVMa()
{
  return &_s10IrrigationVN;
}

ValueMetadata *_s9LightbulbVMa_0()
{
  return &_s9LightbulbVN_0;
}

ValueMetadata *_s4LockVMa()
{
  return &_s4LockVN;
}

ValueMetadata *_s12OutletSwitchVMa_0()
{
  return &_s12OutletSwitchVN_0;
}

ValueMetadata *_s14SecuritySystemVMa()
{
  return &_s14SecuritySystemVN;
}

ValueMetadata *_s10TelevisionVMa()
{
  return &_s10TelevisionVN;
}

ValueMetadata *_s5ValveVMa_0()
{
  return &_s5ValveVN_0;
}

ValueMetadata *_s28DoorWindowAndWindowConveringVMa()
{
  return &_s28DoorWindowAndWindowConveringVN;
}

uint64_t sub_23E01D3F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v31);
  v32 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1356DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  v16 = sub_23E1359AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE4E270], v6);
  type metadata accessor for HAPControlSolver.Source();
  v33 = a1;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23DF89C7C((uint64_t)v15, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v21 = type metadata accessor for Device.ControlGroup(0);
    v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
    v23 = (v22 + 32) & ~v22;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_23E138050;
    v24 = v20 + v23;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
    v25 = sub_23E134C80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v4, 1, 1, v25);
    v26 = v32;
    sub_23E0AC79C(v33, (uint64_t)v19, (uint64_t)v13, (uint64_t)v4, v32);
    sub_23DF89C7C((uint64_t)v4, &qword_256D1D7E8);
    sub_23DF89C7C((uint64_t)v13, &qword_256D1D530);
    swift_storeEnumTagMultiPayload();
    v27 = (_QWORD *)(v20 + v23 + *(int *)(v21 + 20));
    v28 = (_QWORD *)(v24 + *(int *)(v21 + 24));
    sub_23DF89384(v26, v24, type metadata accessor for Device.ControlGroup.LayoutType);
    *v27 = 0;
    v27[1] = 0;
    *v28 = 0;
    v28[1] = 0;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  return v20;
}

uint64_t sub_23E01D720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *);
  char v25;
  void (*v26)(char *, uint64_t);
  unsigned int v27;
  void (*v28)(char *);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;

  v116 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v116);
  v107 = (uint64_t *)((char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v109 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v109);
  v112 = (uint64_t *)((char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = sub_23E134C80();
  v119 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v118 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Device.Control(0);
  v114 = *(_QWORD *)(v113 - 8);
  v5 = MEMORY[0x24BDAC7A8](v113);
  v106 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v115 = (char *)&v95 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v111 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v121 = (uint64_t)&v95 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v12);
  v120 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E1359AC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v122 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23E1356DC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void (**)(char *))(v21 + 104);
  LODWORD(v108) = *MEMORY[0x24BE4E368];
  v24(v23);
  type metadata accessor for HAPControlSolver.Source();
  v117 = a1;
  v25 = sub_23E135AA8();
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v23, v20);
  if (v25 == 2)
    return MEMORY[0x24BEE4AF8];
  v27 = *MEMORY[0x24BE4E330];
  ((void (*)(char *, _QWORD, uint64_t))v24)(v23, *MEMORY[0x24BE4E330], v20);
  sub_23E135A48();
  v26(v23, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  v105 = v27;
  v28 = v24;
  v29 = v122;
  v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v122, v16, v17);
  v31 = MEMORY[0x24264A360](v30);
  if ((v32 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v29, v17);
    return MEMORY[0x24BEE4AF8];
  }
  v33 = v31;
  v103 = v18;
  v104 = v17;
  v34 = v120;
  v35 = v117;
  sub_23E016D24(v120);
  v36 = v25;
  v37 = v33;
  sub_23E017138(v34, v25 & 1, v35, v33, v121);
  v101 = sub_23E1371A0();
  v100 = v38;
  v99 = sub_23E1371A0();
  v97 = v39;
  v96 = sub_23E1371A0();
  v41 = v40;
  v42 = sub_23E1371A0();
  v102 = v43;
  v44 = sub_23E0179F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21358);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E13C150;
  v46 = v101;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v46;
  *(_QWORD *)(inited + 48) = v100;
  *(_OWORD *)(inited + 56) = xmmword_23E13C7B0;
  v47 = v97;
  *(_QWORD *)(inited + 72) = v99;
  *(_QWORD *)(inited + 80) = v47;
  *(_OWORD *)(inited + 88) = xmmword_23E13C7C0;
  *(_QWORD *)(inited + 104) = v96;
  *(_QWORD *)(inited + 112) = v41;
  *(_QWORD *)(inited + 120) = 0;
  v48 = (_QWORD *)sub_23E022FA0(inited, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v48 = sub_23E0075D8(0, v48[2] + 1, 1, v48);
  v50 = v48[2];
  v49 = v48[3];
  if (v50 >= v49 >> 1)
    v48 = sub_23E0075D8((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
  v48[2] = v50 + 1;
  v51 = &v48[4 * v50];
  v51[4] = 100;
  v51[5] = v42;
  v51[6] = v102;
  v51[7] = 0;
  if ((v36 & 1) != 0)
    v52 = v37;
  else
    v52 = 100;
  sub_23E135988();
  v53 = (uint64_t)v112;
  *v112 = v52;
  *(_BYTE *)(v53 + 8) = 0;
  *(_QWORD *)(v53 + 16) = v48;
  *(_BYTE *)(v53 + 24) = 1;
  swift_storeEnumTagMultiPayload();
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D610);
  v102 = swift_allocBox();
  v56 = v55;
  v100 = v55 + *(int *)(v54 + 48);
  v101 = *(int *)(v54 + 64);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
  v97 = *(int *)(v99 + 48);
  v98 = v28;
  ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v56, v108, v20);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v57 = *(unsigned __int8 *)(v119 + 80);
  v58 = v119;
  v59 = (v57 + 32) & ~v57;
  v96 = v57 | 7;
  v60 = swift_allocObject();
  v109 = xmmword_23E138050;
  *(_OWORD *)(v60 + 16) = xmmword_23E138050;
  v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
  v61 = v117;
  v62 = v110;
  v95(v60 + v59, v117, v110);
  v63 = sub_23E0E212C(v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v56 + v97) = v63;
  type metadata accessor for Device.Control.Source(0);
  swift_storeEnumTagMultiPayload();
  v99 = *(int *)(v99 + 48);
  v64 = v100;
  ((void (*)(uint64_t, _QWORD, uint64_t))v98)(v100, v105, v20);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = v109;
  v95(v65 + v59, v61, v62);
  v66 = sub_23E0E212C(v65);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v64 + v99) = v66;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v56 + v101) = 100;
  v67 = (int *)v113;
  v68 = (uint64_t)v115;
  *(_QWORD *)&v115[*(int *)(v113 + 24)] = v102;
  swift_storeEnumTagMultiPayload();
  v69 = (_QWORD *)(v68 + v67[8]);
  v70 = v67[10];
  (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v68, v118, v62);
  sub_23DF89384(v53, v68 + v67[5], type metadata accessor for Device.Control.Kind);
  *(_BYTE *)(v68 + v67[7]) = 0;
  *v69 = 0;
  v69[1] = 0;
  *(_WORD *)(v68 + v67[9]) = 1028;
  *(_BYTE *)(v68 + v70) = 11;
  *(_BYTE *)(v68 + v67[11]) = 1;
  v71 = v121;
  v72 = v111;
  sub_23DF89C1C(v121, v111, &qword_256D1D5E0);
  v73 = v114;
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v114 + 48))(v72, 1, v67) == 1)
  {
    sub_23DF89C7C(v72, &qword_256D1D5E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v74 = type metadata accessor for Device.ControlGroup(0);
    v75 = *(unsigned __int8 *)(*(_QWORD *)(v74 - 8) + 80);
    v76 = (v75 + 32) & ~v75;
    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = v109;
    v78 = v77 + v76;
    sub_23DF73E10(v68, v78, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v79 = (_QWORD *)(v78 + *(int *)(v74 + 20));
    v80 = (_QWORD *)(v78 + *(int *)(v74 + 24));
    *v79 = 0;
    v79[1] = 0;
    *v80 = 0;
    v80[1] = 0;
  }
  else
  {
    v82 = v106;
    sub_23DF89384(v72, v106, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v83 = type metadata accessor for Device.ControlGroup(0);
    v84 = *(unsigned __int8 *)(*(_QWORD *)(v83 - 8) + 80);
    v85 = (v84 + 32) & ~v84;
    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = v109;
    v86 = v77 + v85;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v87 = *(_QWORD *)(v73 + 72);
    v88 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_23E138410;
    v90 = v89 + v88;
    sub_23DF73E10(v82, v90, type metadata accessor for Device.Control);
    sub_23DF73E10(v68, v90 + v87, type metadata accessor for Device.Control);
    v91 = (uint64_t)v107;
    *v107 = v89;
    swift_storeEnumTagMultiPayload();
    v92 = *(int *)(v83 + 24);
    v93 = (_QWORD *)(v86 + *(int *)(v83 + 20));
    v94 = (_QWORD *)(v86 + v92);
    sub_23DF89384(v91, v86, type metadata accessor for Device.ControlGroup.LayoutType);
    *v93 = 0;
    v93[1] = 0;
    *v94 = 0;
    v94[1] = 0;
    sub_23DF73E54(v82, type metadata accessor for Device.Control);
  }
  sub_23DF73E54(v68, type metadata accessor for Device.Control);
  sub_23DF89C7C(v71, &qword_256D1D5E0);
  sub_23DF89C7C(v120, &qword_256D1D7E8);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v122, v104);
  return v77;
}

_QWORD *sub_23E01E29C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t);
  uint64_t v71;
  char v72;
  uint64_t v73;
  void (*v74)(char *, _QWORD, uint64_t);
  uint64_t v75;
  char *v76;
  char v77;
  void (*v78)(char *, uint64_t);
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  void (*v102)(char *, _QWORD, uint64_t);
  char v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 *v124;
  int EnumCaseMultiPayload;
  uint64_t v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  _QWORD v166[2];
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  unsigned int v174;
  unint64_t v175;
  unsigned int v176;
  char *v177;
  unsigned __int8 *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned int v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(char *, _QWORD, uint64_t);
  uint64_t v196;
  unsigned int (*v197)(uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  unsigned int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __int128 v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  _QWORD *v230[2];

  v172 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v172);
  v171 = (uint64_t)v166 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0C8);
  MEMORY[0x24BDAC7A8](v6);
  v168 = (char *)v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_23E134C20();
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v9 = (char *)v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v184);
  v183 = (_QWORD *)((char *)v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v186 = sub_23E1359AC();
  v185 = *(_QWORD *)(v186 - 8);
  MEMORY[0x24BDAC7A8](v186);
  v173 = (char *)v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v192 = (uint64_t)v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v202 = (uint64_t)v166 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v167 = (char *)v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v166 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v201 = (uint64_t)v166 - v22;
  v220 = sub_23E1356DC();
  v200 = *(_QWORD *)(v220 - 8);
  MEMORY[0x24BDAC7A8](v220);
  v219 = (char *)v166 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_23E134E9C();
  v24 = *(_QWORD *)(v217 - 8);
  MEMORY[0x24BDAC7A8](v217);
  v225 = (char *)v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v216 = (char *)v166 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v215 = (uint64_t)v166 - v32;
  v33 = type metadata accessor for Device.Control(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v191 = (uint64_t)v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v187 = (uint64_t)v166 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v182 = (uint64_t)v166 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v196 = (uint64_t)v166 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v181 = (uint64_t)v166 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v214 = (uint64_t)v166 - v45;
  v46 = __swift_instantiateConcreteTypeFromMangledName(qword_256D21B48);
  MEMORY[0x24BDAC7A8](v46);
  v213 = (char *)v166 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for Device.ControlGroup(0);
  v211 = *(_QWORD *)(v212 - 8);
  v48 = MEMORY[0x24BDAC7A8](v212);
  v210 = (uint64_t)v166 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v194 = (uint64_t)v166 - v50;
  v51 = type metadata accessor for HAPControlSolver.Source();
  v52 = MEMORY[0x24BDAC7A8](v51);
  v193 = (uint64_t)v166 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v180 = (uint64_t)v166 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v227 = (uint64_t)v166 - v58;
  v59 = *(_QWORD *)(a1 + *(int *)(v56 + 60));
  v60 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v59 + 16))
  {
    v65 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_56;
  }
  v224 = *(_QWORD *)(v59 + 16);
  v218 = v33;
  v190 = v29;
  v177 = v21;
  v166[0] = v9;
  v178 = (unsigned __int8 *)v5;
  v179 = v3;
  v61 = *(unsigned __int8 *)(v57 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = v59 + v62;
  v189 = v57;
  v64 = *(_QWORD *)(v57 + 72);
  v208 = v62;
  v207 = v64;
  v206 = v64 + v62;
  v205 = v61 | 7;
  v204 = *MEMORY[0x24BE4D7F8];
  v199 = *MEMORY[0x24BE4E258];
  v188 = *MEMORY[0x24BE4E368];
  v176 = *MEMORY[0x24BE4E360];
  v174 = *MEMORY[0x24BE4E2B0];
  v166[1] = v59;
  swift_bridgeObjectRetain_n();
  v203 = xmmword_23E138050;
  v175 = 0x800000023E144A10;
  v65 = v60;
  v209 = v24;
  v221 = v34;
  v226 = v51;
  do
  {
    v222 = v65;
    v223 = v63;
    v67 = v227;
    sub_23DF73E10(v63, v227, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B38);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v203;
    v69 = v68 + v208;
    sub_23DF73E10(v67, v68 + v208, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v70 = *(void (**)(char *, _QWORD, uint64_t))(v24 + 104);
    swift_bridgeObjectRetain();
    v71 = v217;
    v70(v225, v204, v217);
    sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
    sub_23E13723C();
    sub_23E13723C();
    if (v230[0] == v228 && v230[1] == v229)
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v225, v71);
    }
    else
    {
      v72 = sub_23E137614();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v225, v71);
      if ((v72 & 1) == 0)
        goto LABEL_11;
    }
    v73 = v200;
    v74 = *(void (**)(char *, _QWORD, uint64_t))(v200 + 104);
    v76 = v219;
    v75 = v220;
    v74(v219, v199, v220);
    v77 = sub_23E135AA8();
    v78 = *(void (**)(char *, uint64_t))(v73 + 8);
    v34 = v221;
    v78(v76, v75);
    if (v77 != 2 && (v77 & 1) == 0)
    {
LABEL_11:
      v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
      v80 = (uint64_t)v216;
      v81 = v218;
      v79((uint64_t)v216, 1, 1, v218);
      v82 = v226;
      v83 = MEMORY[0x24BEE4AF8];
LABEL_32:
      sub_23DF89C7C(v80, &qword_256D1D5E0);
      v135 = v83;
      goto LABEL_33;
    }
    v85 = v219;
    v84 = v220;
    v195 = v74;
    v74(v219, v188, v220);
    v86 = v201;
    sub_23E135A48();
    v78(v85, v84);
    v198 = v69;
    v87 = v202;
    sub_23DF73E10(v69, v202, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v88 = v189;
    v82 = v226;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v189 + 56))(v87, 0, 1, v226);
    v89 = v87;
    v90 = v192;
    sub_23DF89C1C(v89, v192, &qword_256D21B40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v90, 1, v82) == 1)
    {
      sub_23DF89C7C(v90, &qword_256D21B40);
LABEL_16:
      v95 = v221;
      v96 = (uint64_t)v190;
      v81 = v218;
      v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56);
      v97(v190, 1, 1, v218);
      goto LABEL_18;
    }
    v91 = v180;
    sub_23DF89384(v90, v180, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v92 = (uint64_t)v177;
    sub_23DF89C1C(v86, (uint64_t)v177, &qword_256D1D530);
    v93 = v185;
    v94 = v186;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v92, 1, v186) == 1)
    {
      sub_23DF73E54(v91, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23DF89C7C(v92, &qword_256D1D530);
      v86 = v201;
      v82 = v226;
      goto LABEL_16;
    }
    v98 = v91;
    v99 = v173;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v173, v92, v94);
    v96 = (uint64_t)v190;
    sub_23E0AD408(v98, (uint64_t)v190);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v99, v94);
    sub_23DF73E54(v98, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v95 = v221;
    v81 = v218;
    v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56);
    v97((char *)v96, 0, 1, v218);
    v86 = v201;
    v82 = v226;
LABEL_18:
    sub_23DF89C7C(v202, &qword_256D21B40);
    v197 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
    if (v197(v96, 1, v81) == 1)
    {
      sub_23DF89C7C(v86, &qword_256D1D530);
      sub_23DF89C7C(v96, &qword_256D1D5E0);
      v80 = (uint64_t)v216;
      v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v97;
      v97(v216, 1, 1, v81);
      v83 = MEMORY[0x24BEE4AF8];
      v34 = v221;
      goto LABEL_31;
    }
    sub_23DF89384(v96, v196, type metadata accessor for Device.Control);
    v101 = v219;
    v100 = v220;
    v102 = v195;
    v195(v219, v176, v220);
    v103 = sub_23E135AA8();
    v78(v101, v100);
    v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v97;
    if ((v103 & 1) != 0)
    {
      v105 = v219;
      v104 = v220;
      v102(v219, v174, v220);
      v106 = sub_23E135AC0();
      v108 = v107;
      v78(v105, v104);
      if ((v108 & 1) == 0)
      {
        v110 = v219;
        v109 = v220;
        v102(v219, v174, v220);
        v111 = (uint64_t)v167;
        sub_23E135A48();
        v78(v110, v109);
        v112 = v185;
        v113 = v186;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v111, 1, v186) == 1)
        {
          sub_23DF89C7C(v111, &qword_256D1D530);
          v114 = (uint64_t)v168;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v168, 1, 1, v170);
        }
        else
        {
          v115 = v111;
          v114 = (uint64_t)v168;
          sub_23E135970();
          (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v115, v113);
          v116 = v169;
          v117 = v170;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v169 + 56))(v114, 0, 1, v170);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v114, 1, v117) != 1)
          {
            v159 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 32);
            v160 = v166[0];
            v161 = v114;
            v162 = v170;
            v159((char *)v166[0], v161, v170);
            v163 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1D860);
            v119 = (uint64_t)v183;
            v164 = (char *)v183 + *(int *)(v163 + 48);
            *v183 = v106;
            v159(v164, v160, v162);
            goto LABEL_27;
          }
        }
        sub_23DF89C7C(v114, &qword_256D1F0C8);
      }
    }
    v118 = sub_23E1371A0();
    v119 = (uint64_t)v183;
    *v183 = v118;
    *(_QWORD *)(v119 + 8) = v120;
LABEL_27:
    swift_storeEnumTagMultiPayload();
    v121 = v196;
    v122 = v187;
    sub_23DF73E10(v196, v187, type metadata accessor for Device.Control);
    v123 = v218;
    v124 = v178;
    sub_23DF73E10(v121 + *(int *)(v218 + 20), (uint64_t)v178, type metadata accessor for Device.Control.Kind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v83 = MEMORY[0x24BEE4AF8];
    if (EnumCaseMultiPayload)
    {
      v126 = (uint64_t)v124;
      v127 = type metadata accessor for Device.Control.Kind;
    }
    else
    {
      LODWORD(v195) = *v124;
      v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
      v129 = v171;
      sub_23DF89384((uint64_t)&v124[*(int *)(v128 + 48)], v171, type metadata accessor for Device.Control.BinaryViewConfig);
      sub_23E023D28(v119, v129 + *(int *)(v172 + 24));
      v130 = (_BYTE *)(v187 + *(int *)(v123 + 20));
      sub_23DF73E54((uint64_t)v130, type metadata accessor for Device.Control.Kind);
      v131 = *(int *)(v128 + 48);
      v122 = v187;
      *v130 = (_BYTE)v195;
      sub_23DF73E10(v129, (uint64_t)&v130[v131], type metadata accessor for Device.Control.BinaryViewConfig);
      swift_storeEnumTagMultiPayload();
      v126 = v129;
      v83 = MEMORY[0x24BEE4AF8];
      v127 = type metadata accessor for Device.Control.BinaryViewConfig;
    }
    sub_23DF73E54(v126, v127);
    v132 = v122;
    v133 = v182;
    sub_23DF89384(v132, v182, type metadata accessor for Device.Control);
    sub_23DF73E54(v119, type metadata accessor for ControlTextModifier.Config);
    v134 = v196;
    sub_23DF73E54(v196, type metadata accessor for Device.Control);
    sub_23DF89C7C(v201, &qword_256D1D530);
    sub_23DF89384(v133, v134, type metadata accessor for Device.Control);
    v80 = (uint64_t)v216;
    sub_23DF89384(v134, (uint64_t)v216, type metadata accessor for Device.Control);
    v79(v80, 0, 1, v123);
    v81 = v123;
    v34 = v221;
    v82 = v226;
LABEL_31:
    if (v197(v80, 1, v81) == 1)
      goto LABEL_32;
    v146 = v80;
    v147 = v181;
    sub_23DF89384(v146, v181, type metadata accessor for Device.Control);
    sub_23DF89384(v147, v191, type metadata accessor for Device.Control);
    v135 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v135 = sub_23E007818(0, *(_QWORD *)(v83 + 16) + 1, 1, v83);
    v149 = *(_QWORD *)(v135 + 16);
    v148 = *(_QWORD *)(v135 + 24);
    if (v149 >= v148 >> 1)
      v135 = sub_23E007818(v148 > 1, v149 + 1, 1, v135);
    *(_QWORD *)(v135 + 16) = v149 + 1;
    sub_23DF89384(v191, v135+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v149, type metadata accessor for Device.Control);
    v81 = v218;
LABEL_33:
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if (*(_QWORD *)(v135 + 16))
    {
      v136 = v215;
      sub_23DF73E10(v135 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)), v215, type metadata accessor for Device.Control);
      v137 = 0;
      v24 = v209;
    }
    else
    {
      v137 = 1;
      v24 = v209;
      v136 = v215;
    }
    v139 = v212;
    v138 = (uint64_t)v213;
    v79(v136, v137, 1, v81);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v136, 1, v81) == 1)
    {
      sub_23DF89C7C(v136, &qword_256D1D5E0);
      v140 = v211;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v211 + 56))(v138, 1, 1, v139);
    }
    else
    {
      sub_23DF89384(v136, v214, type metadata accessor for Device.Control);
      v141 = (uint64_t *)(v227 + *(int *)(v82 + 32));
      v142 = *v141;
      v143 = v141[1];
      v144 = v193;
      sub_23DF73E10(v227, v193, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      if (v143)
      {
        v145 = v143;
      }
      else
      {
        v150 = (uint64_t *)(v144 + *(int *)(v82 + 28));
        v142 = *v150;
        v145 = v150[1];
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_23DF73E54(v144, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23DF89384(v214, v138, type metadata accessor for Device.Control);
      type metadata accessor for Device.ControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v151 = (uint64_t *)(v227 + *(int *)(v82 + 28));
      v152 = *v151;
      v153 = v151[1];
      v154 = (_QWORD *)(v138 + *(int *)(v139 + 20));
      v155 = (_QWORD *)(v138 + *(int *)(v139 + 24));
      *v154 = v142;
      v154[1] = v145;
      *v155 = v152;
      v155[1] = v153;
      v140 = v211;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v211 + 56))(v138, 0, 1, v139);
      swift_bridgeObjectRetain();
    }
    sub_23DF73E54(v227, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139) == 1)
    {
      sub_23DF89C7C(v138, qword_256D21B48);
      v65 = v222;
      v66 = v223;
    }
    else
    {
      v156 = v194;
      sub_23DF89384(v138, v194, type metadata accessor for Device.ControlGroup);
      sub_23DF89384(v156, v210, type metadata accessor for Device.ControlGroup);
      v65 = v222;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v65 = (_QWORD *)sub_23E0076E4(0, v65[2] + 1, 1, (unint64_t)v65);
      v66 = v223;
      v158 = v65[2];
      v157 = v65[3];
      if (v158 >= v157 >> 1)
        v65 = (_QWORD *)sub_23E0076E4(v157 > 1, v158 + 1, 1, (unint64_t)v65);
      v65[2] = v158 + 1;
      sub_23DF89384(v210, (uint64_t)v65+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(_QWORD *)(v140 + 72) * v158, type metadata accessor for Device.ControlGroup);
    }
    v63 = v66 + v207;
    --v224;
  }
  while (v224);
  swift_bridgeObjectRelease_n();
LABEL_56:
  v230[0] = v65;
  swift_bridgeObjectRetain();
  sub_23E017F7C(v230);
  swift_bridgeObjectRelease();
  return v230[0];
}

uint64_t sub_23E01F694(char *__src, char *a2, char *a3, char *__dst, unint64_t *a5)
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  char *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t result;
  char *v59;
  char *v60;
  char *v61;

  v6 = __dst;
  v7 = a3;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 5;
  v13 = a3 - a2;
  v14 = a3 - a2 + 31;
  if (a3 - a2 >= 0)
    v14 = a3 - a2;
  v15 = v14 >> 5;
  v61 = __src;
  v60 = __dst;
  if (v12 >= v14 >> 5)
  {
    if (v13 < -31)
      goto LABEL_88;
    if (__dst != a2 || &a2[32 * v15] <= __dst)
      memmove(__dst, a2, 32 * v15);
    v36 = &v6[32 * v15];
    v59 = v36;
    v61 = v8;
    if (v9 >= v8 || v13 < 32)
    {
LABEL_83:
      sub_23E073B1C((void **)&v61, (const void **)&v60, &v59);
      return 1;
    }
    v37 = a5[2];
    v38 = v37 - 1;
    if (v37 <= 1)
      v39 = 1;
    else
      v39 = a5[2];
    v40 = v39 - 1;
    v41 = a5 + 5;
    v42 = v8;
    while (1)
    {
      v43 = v7 - 32;
      v45 = *((_QWORD *)v42 - 4);
      v42 -= 32;
      v44 = v45;
      if (v37)
      {
        v46 = *((_QWORD *)v36 - 4);
        v47 = a5[4];
        if (v47 == v46)
        {
          if (v46 == v44)
            goto LABEL_67;
          v48 = 0;
LABEL_62:
          v50 = 0;
          while (v38 != v50)
          {
            if (v40 == v50)
            {
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
              goto LABEL_88;
            }
            v51 = v41[v50++];
            if (v51 == v44)
            {
              if (v48 <= v50 - 1)
                goto LABEL_78;
              goto LABEL_67;
            }
          }
        }
        else
        {
          v48 = 0;
          while (v38 != v48)
          {
            v49 = v41[v48++];
            if (v49 == v46)
            {
              if (v47 == v44)
                goto LABEL_67;
              goto LABEL_62;
            }
          }
        }
        v53 = (uint64_t *)(a5 + 5);
        v54 = v37 - 1;
        v55 = v40;
        if (v47 == v44)
        {
LABEL_67:
          v59 = v36 - 32;
          if (v7 < v36 || v43 >= v36 || v7 != v36)
          {
            v52 = *((_OWORD *)v36 - 1);
            *(_OWORD *)v43 = *((_OWORD *)v36 - 2);
            *((_OWORD *)v7 - 1) = v52;
          }
          v42 = v8;
          v36 -= 32;
          if (v8 <= v9)
            goto LABEL_83;
          goto LABEL_82;
        }
        while (v54)
        {
          if (!v55)
            goto LABEL_85;
          v56 = *v53++;
          --v55;
          --v54;
          if (v56 == v44)
            goto LABEL_67;
        }
      }
LABEL_78:
      if (v7 != v8 || v43 >= v8)
      {
        v57 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v43 = *(_OWORD *)v42;
        *((_OWORD *)v7 - 1) = v57;
      }
      v61 = v42;
      if (v42 <= v9)
        goto LABEL_83;
LABEL_82:
      v8 = v42;
      v7 -= 32;
      if (v36 <= v6)
        goto LABEL_83;
    }
  }
  if (v10 >= -31)
  {
    if (__dst != __src || &__src[32 * v12] <= __dst)
      memmove(__dst, __src, 32 * v12);
    v16 = &v6[32 * v12];
    v59 = v16;
    if (v8 < v7 && v10 >= 32)
    {
      v17 = a5[2];
      v18 = v17 - 1;
      if (v17 <= 1)
        v19 = 1;
      else
        v19 = a5[2];
      v20 = v19 - 1;
      v21 = a5 + 5;
      while (1)
      {
        if (!v17)
          goto LABEL_37;
        v22 = *(_QWORD *)v8;
        v23 = *(_QWORD *)v6;
        v24 = a5[4];
        if (v24 == *(_QWORD *)v8)
        {
          if (v22 == v23)
            goto LABEL_29;
          v25 = 0;
LABEL_24:
          v27 = 0;
          while (v18 != v27)
          {
            if (v20 == v27)
              goto LABEL_86;
            v28 = v21[v27++];
            if (v28 == v23)
            {
              if (v25 <= v27 - 1)
                goto LABEL_37;
              goto LABEL_29;
            }
          }
        }
        else
        {
          v25 = 0;
          while (v18 != v25)
          {
            v26 = v21[v25++];
            if (v26 == v22)
            {
              if (v24 == v23)
                goto LABEL_29;
              goto LABEL_24;
            }
          }
        }
        v31 = (uint64_t *)(a5 + 5);
        v32 = v17 - 1;
        v33 = v20;
        if (v24 != v23)
        {
          while (v32)
          {
            if (!v33)
              goto LABEL_87;
            v34 = *v31++;
            --v33;
            --v32;
            if (v34 == v23)
              goto LABEL_29;
          }
LABEL_37:
          v30 = v8 + 32;
          if (v9 < v8 || v9 >= v30 || v9 != v8)
          {
            v35 = *((_OWORD *)v8 + 1);
            *(_OWORD *)v9 = *(_OWORD *)v8;
            *((_OWORD *)v9 + 1) = v35;
          }
          goto LABEL_41;
        }
LABEL_29:
        if (v9 != v6)
        {
          v29 = *((_OWORD *)v6 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v6;
          *((_OWORD *)v9 + 1) = v29;
        }
        v6 += 32;
        v60 = v6;
        v30 = v8;
LABEL_41:
        v9 += 32;
        if (v6 < v16)
        {
          v8 = v30;
          if (v30 < v7)
            continue;
        }
        v61 = v9;
        goto LABEL_83;
      }
    }
    goto LABEL_83;
  }
LABEL_88:
  swift_bridgeObjectRelease();
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E01FA8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = a5[2];
    v7 = v6 - 1;
    if (v6 <= 1)
      v8 = 1;
    else
      v8 = a5[2];
    v9 = v8 - 1;
    v10 = a5 + 5;
LABEL_8:
    v11 = *(_QWORD *)(v5 + 32 * a3);
    v12 = a3;
    while (1)
    {
      v13 = v12 - 1;
      v14 = (uint64_t *)(v5 + 32 * (v12 - 1));
      if (v6)
      {
        v15 = *v14;
        v16 = a5[4];
        if (v16 == v11)
        {
          if (v11 == v15)
            goto LABEL_7;
          v17 = 0;
LABEL_17:
          v19 = 0;
          while (v7 != v19)
          {
            if (v9 == v19)
            {
              __break(1u);
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
            v20 = v10[v19++];
            if (v20 == v15)
            {
              if (v17 > v19 - 1)
                goto LABEL_7;
              goto LABEL_22;
            }
          }
        }
        else
        {
          v17 = 0;
          while (v7 != v17)
          {
            v18 = v10[v17++];
            if (v18 == v11)
            {
              if (v16 == v15)
                goto LABEL_7;
              goto LABEL_17;
            }
          }
        }
        v26 = (uint64_t *)(a5 + 5);
        v27 = v6 - 1;
        v28 = v9;
        if (v16 == v15)
        {
LABEL_7:
          if (++a3 == a2)
            return result;
          goto LABEL_8;
        }
        while (v27)
        {
          if (!v28)
            goto LABEL_31;
          v29 = *v26++;
          --v28;
          --v27;
          if (v29 == v15)
            goto LABEL_7;
        }
      }
LABEL_22:
      if (!v5)
        break;
      v21 = v5 + 32 * v12;
      v22 = *(_OWORD *)(v21 + 8);
      v23 = *(_QWORD *)(v21 + 24);
      v24 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v14;
      *(_OWORD *)(v21 + 16) = v24;
      *v14 = v11;
      v25 = v5 + 32 * v13;
      *(_OWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 24) = v23;
      v12 = v13;
      if (v13 == result)
        goto LABEL_7;
    }
LABEL_32:
    __break(1u);
  }
  return result;
}

uint64_t sub_23E01FBC8(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  unint64_t v125;
  char *v126;
  char *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  unint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *__dst;
  unint64_t *v147;
  char *v148;
  uint64_t v149;
  char *__srca;
  char *__src;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;

  v4 = a1[1];
  swift_bridgeObjectRetain_n();
  v5 = sub_23E1375F0();
  if (v5 < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
      goto LABEL_195;
    v147 = a2;
    v142 = v4;
    v140 = v5;
    v138 = a1;
    if (v4 < 2)
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
      v139 = MEMORY[0x24BEE4AF8];
      if (v4 != 1)
      {
        v74 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_147:
        if (v74 < 2)
          goto LABEL_160;
        v127 = (char *)*v138;
        __src = (char *)*v138;
        while (1)
        {
          v128 = v74 - 2;
          if (v74 < 2)
            goto LABEL_181;
          v129 = v158;
          if (!v127)
            goto LABEL_194;
          v149 = (uint64_t)v10;
          v130 = *(_QWORD *)&v10[16 * v128 + 32];
          v131 = *(_QWORD *)&v10[16 * v74 + 24];
          v132 = *(_QWORD *)&v10[16 * v74 + 16];
          v133 = &v127[32 * v130];
          v134 = &v127[32 * v132];
          v135 = &v127[32 * v131];
          swift_bridgeObjectRetain();
          sub_23E01F694(v133, v134, v135, __dst, v147);
          v158 = v129;
          if (v129)
            goto LABEL_159;
          swift_bridgeObjectRelease();
          if (v131 < v130)
            goto LABEL_182;
          v10 = (char *)v149;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_23E073D94(v149);
          if (v128 >= *((_QWORD *)v10 + 2))
            goto LABEL_183;
          v136 = &v10[16 * v128 + 32];
          *(_QWORD *)v136 = v130;
          *((_QWORD *)v136 + 1) = v131;
          v137 = *((_QWORD *)v10 + 2);
          if (v74 > v137)
            goto LABEL_184;
          memmove(&v10[16 * v74 + 16], &v10[16 * v74 + 32], 16 * (v137 - v74));
          *((_QWORD *)v10 + 2) = v137 - 1;
          v74 = v137 - 1;
          v127 = __src;
          if (v137 <= 2)
            goto LABEL_160;
        }
      }
    }
    else
    {
      v7 = v6 >> 1;
      v8 = sub_23E13729C();
      *(_QWORD *)(v8 + 16) = v7;
      v139 = v8;
      __dst = (char *)(v8 + 32);
    }
    v11 = 0;
    v12 = *a1;
    v141 = a2 + 5;
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v13 = v142;
    v145 = *a1;
LABEL_14:
    v14 = v11 + 1;
    if (v11 + 1 >= v13)
      goto LABEL_58;
    v15 = v12 + 32 * v14;
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    v155 = *(_OWORD *)v15;
    v156 = v16;
    v157 = v17;
    v18 = v12 + 32 * v11;
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 24);
    v152 = *(_OWORD *)v18;
    v153 = v19;
    v154 = v20;
    v21 = v158;
    v22 = sub_23E016C18((uint64_t)&v155, (uint64_t *)&v152, a2);
    v158 = v21;
    if (v21)
      goto LABEL_160;
    v14 = v11 + 2;
    if (v11 + 2 >= v13)
    {
      v12 = v145;
      goto LABEL_49;
    }
    v23 = a2[2];
    v24 = v23 - 1;
    if (v23 <= 1)
      v25 = 1;
    else
      v25 = a2[2];
    v26 = v25 - 1;
    v27 = *(_QWORD *)v15;
    v12 = v145;
LABEL_21:
    while (2)
    {
      while (2)
      {
        v28 = *(_QWORD *)(v145 + 32 * v14);
        if (v23)
        {
          v29 = a2[4];
          if (v29 == v28)
          {
            if (v28 != v27)
            {
              v30 = 0;
LABEL_31:
              v32 = 0;
              do
              {
                if (v24 == v32)
                  goto LABEL_38;
                if (v26 == v32)
                  goto LABEL_164;
                v33 = v141[v32++];
              }
              while (v33 != v27);
              if (((v22 ^ (v30 > v32 - 1)) & 1) != 0)
                goto LABEL_36;
              goto LABEL_49;
            }
LABEL_42:
            if ((v22 & 1) != 0)
              goto LABEL_50;
            ++v14;
            v27 = v28;
            if (v14 >= v13)
              goto LABEL_58;
            continue;
          }
          v30 = 0;
          while (v24 != v30)
          {
            v31 = v141[v30++];
            if (v31 == v28)
            {
              if (v29 != v27)
                goto LABEL_31;
              if ((v22 & 1) != 0)
                goto LABEL_50;
LABEL_36:
              ++v14;
              v27 = v28;
              if (v14 >= v13)
              {
LABEL_49:
                if ((v22 & 1) != 0)
                  goto LABEL_50;
LABEL_58:
                if (v14 >= v13)
                  goto LABEL_94;
                if (__OFSUB__(v14, v11))
                  goto LABEL_186;
                if (v14 - v11 >= v140)
                  goto LABEL_94;
                v48 = v11 + v140;
                if (__OFADD__(v11, v140))
                  goto LABEL_188;
                if (v48 >= v13)
                  v48 = v13;
                if (v48 < v11)
                {
LABEL_189:
                  __break(1u);
                  goto LABEL_190;
                }
                if (v14 == v48)
                  goto LABEL_94;
                v49 = a2[2];
                v50 = v49 - 1;
                if (v49 <= 1)
                  v51 = 1;
                else
                  v51 = a2[2];
                v52 = v51 - 1;
                while (2)
                {
                  v53 = *(_QWORD *)(v12 + 32 * v14);
                  v54 = v14;
LABEL_72:
                  v55 = v54 - 1;
                  v56 = v12 + 32 * (v54 - 1);
                  if (!v49)
                    goto LABEL_85;
                  v57 = *(_QWORD *)v56;
                  v58 = a2[4];
                  if (v58 == v53)
                  {
                    if (v53 == v57)
                      goto LABEL_70;
                    v59 = 0;
                    goto LABEL_80;
                  }
                  v59 = 0;
                  do
                  {
                    if (v50 == v59)
                    {
LABEL_88:
                      v68 = v141;
                      v69 = v49 - 1;
                      v70 = v52;
                      if (v58 == v57)
                        goto LABEL_70;
                      while (v69)
                      {
                        if (!v70)
                          goto LABEL_163;
                        v71 = *v68++;
                        --v70;
                        --v69;
                        if (v71 == v57)
                          goto LABEL_70;
                      }
LABEL_85:
                      if (!v12)
                        goto LABEL_192;
                      v63 = v12 + 32 * v54;
                      v64 = *(_OWORD *)(v63 + 8);
                      v65 = *(_QWORD *)(v63 + 24);
                      v66 = *(_OWORD *)(v56 + 16);
                      *(_OWORD *)v63 = *(_OWORD *)v56;
                      *(_OWORD *)(v63 + 16) = v66;
                      *(_QWORD *)v56 = v53;
                      v67 = v12 + 32 * v55;
                      *(_OWORD *)(v67 + 8) = v64;
                      *(_QWORD *)(v67 + 24) = v65;
                      v54 = v55;
                      if (v55 == v11)
                        goto LABEL_70;
                      goto LABEL_72;
                    }
                    v60 = v141[v59++];
                  }
                  while (v60 != v53);
                  if (v58 == v57)
                    goto LABEL_70;
LABEL_80:
                  v61 = 0;
                  while (2)
                  {
                    if (v50 == v61)
                      goto LABEL_88;
                    if (v52 == v61)
                    {
                      __break(1u);
LABEL_163:
                      __break(1u);
LABEL_164:
                      __break(1u);
LABEL_165:
                      __break(1u);
LABEL_166:
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
LABEL_171:
                      __break(1u);
LABEL_172:
                      __break(1u);
LABEL_173:
                      __break(1u);
LABEL_174:
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
LABEL_177:
                      __break(1u);
LABEL_178:
                      __break(1u);
LABEL_179:
                      __break(1u);
LABEL_180:
                      __break(1u);
LABEL_181:
                      __break(1u);
LABEL_182:
                      __break(1u);
LABEL_183:
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      __break(1u);
LABEL_188:
                      __break(1u);
                      goto LABEL_189;
                    }
                    v62 = v141[v61++];
                    if (v62 != v57)
                      continue;
                    break;
                  }
                  if (v59 <= v61 - 1)
                    goto LABEL_85;
LABEL_70:
                  if (++v14 != v48)
                    continue;
                  break;
                }
                v14 = v48;
LABEL_94:
                if (v14 < v11)
                  goto LABEL_185;
                v143 = v14;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v10 = sub_23E073A18(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
                v73 = *((_QWORD *)v10 + 2);
                v72 = *((_QWORD *)v10 + 3);
                v74 = v73 + 1;
                v12 = v145;
                if (v73 >= v72 >> 1)
                {
                  v126 = sub_23E073A18((char *)(v72 > 1), v73 + 1, 1, v10);
                  v12 = v145;
                  v10 = v126;
                }
                *((_QWORD *)v10 + 2) = v74;
                v144 = v10 + 32;
                v75 = &v10[16 * v73 + 32];
                *(_QWORD *)v75 = v11;
                *((_QWORD *)v75 + 1) = v14;
                if (v73)
                {
                  v76 = v10 + 32;
                  v148 = v10;
                  while (1)
                  {
                    v77 = v74 - 1;
                    if (v74 >= 4)
                    {
                      v82 = &v76[16 * v74];
                      v83 = *((_QWORD *)v82 - 8);
                      v84 = *((_QWORD *)v82 - 7);
                      v88 = __OFSUB__(v84, v83);
                      v85 = v84 - v83;
                      if (v88)
                        goto LABEL_170;
                      v87 = *((_QWORD *)v82 - 6);
                      v86 = *((_QWORD *)v82 - 5);
                      v88 = __OFSUB__(v86, v87);
                      v80 = v86 - v87;
                      v81 = v88;
                      if (v88)
                        goto LABEL_171;
                      v89 = v74 - 2;
                      v90 = &v76[16 * v74 - 32];
                      v92 = *(_QWORD *)v90;
                      v91 = *((_QWORD *)v90 + 1);
                      v88 = __OFSUB__(v91, v92);
                      v93 = v91 - v92;
                      if (v88)
                        goto LABEL_173;
                      v88 = __OFADD__(v80, v93);
                      v94 = v80 + v93;
                      if (v88)
                        goto LABEL_176;
                      if (v94 >= v85)
                      {
                        v112 = &v76[16 * v77];
                        v114 = *(_QWORD *)v112;
                        v113 = *((_QWORD *)v112 + 1);
                        v88 = __OFSUB__(v113, v114);
                        v115 = v113 - v114;
                        if (v88)
                          goto LABEL_180;
                        v105 = v80 < v115;
                        goto LABEL_132;
                      }
                    }
                    else
                    {
                      if (v74 != 3)
                      {
                        v106 = *((_QWORD *)v10 + 4);
                        v107 = *((_QWORD *)v10 + 5);
                        v88 = __OFSUB__(v107, v106);
                        v99 = v107 - v106;
                        v100 = v88;
                        goto LABEL_126;
                      }
                      v79 = *((_QWORD *)v10 + 4);
                      v78 = *((_QWORD *)v10 + 5);
                      v88 = __OFSUB__(v78, v79);
                      v80 = v78 - v79;
                      v81 = v88;
                    }
                    if ((v81 & 1) != 0)
                      goto LABEL_172;
                    v89 = v74 - 2;
                    v95 = &v76[16 * v74 - 32];
                    v97 = *(_QWORD *)v95;
                    v96 = *((_QWORD *)v95 + 1);
                    v98 = __OFSUB__(v96, v97);
                    v99 = v96 - v97;
                    v100 = v98;
                    if (v98)
                      goto LABEL_175;
                    v101 = &v76[16 * v77];
                    v103 = *(_QWORD *)v101;
                    v102 = *((_QWORD *)v101 + 1);
                    v88 = __OFSUB__(v102, v103);
                    v104 = v102 - v103;
                    if (v88)
                      goto LABEL_178;
                    if (__OFADD__(v99, v104))
                      goto LABEL_179;
                    if (v99 + v104 >= v80)
                    {
                      v105 = v80 < v104;
LABEL_132:
                      if (v105)
                        v77 = v89;
                      goto LABEL_134;
                    }
LABEL_126:
                    if ((v100 & 1) != 0)
                      goto LABEL_174;
                    v108 = &v76[16 * v77];
                    v110 = *(_QWORD *)v108;
                    v109 = *((_QWORD *)v108 + 1);
                    v88 = __OFSUB__(v109, v110);
                    v111 = v109 - v110;
                    if (v88)
                      goto LABEL_177;
                    if (v111 < v99)
                      goto LABEL_143;
LABEL_134:
                    v116 = v77 - 1;
                    if (v77 - 1 >= v74)
                      goto LABEL_166;
                    v117 = v158;
                    if (!v12)
                      goto LABEL_191;
                    v118 = &v76[16 * v116];
                    v119 = *(_QWORD *)v118;
                    v120 = v77;
                    v121 = &v76[16 * v77];
                    v122 = *((_QWORD *)v121 + 1);
                    __srca = (char *)(v12 + 32 * *(_QWORD *)v118);
                    v123 = (char *)(v12 + 32 * *(_QWORD *)v121);
                    v124 = (char *)(v12 + 32 * v122);
                    a2 = v147;
                    swift_bridgeObjectRetain();
                    sub_23E01F694(__srca, v123, v124, __dst, v147);
                    v158 = v117;
                    if (v117)
                    {
LABEL_159:
                      swift_bridgeObjectRelease();
LABEL_160:
                      swift_bridgeObjectRelease();
                      *(_QWORD *)(v139 + 16) = 0;
LABEL_161:
                      swift_bridgeObjectRelease_n();
                      return swift_bridgeObjectRelease();
                    }
                    swift_bridgeObjectRelease();
                    if (v122 < v119)
                      goto LABEL_167;
                    if (v120 > *((_QWORD *)v148 + 2))
                      goto LABEL_168;
                    *(_QWORD *)v118 = v119;
                    v76 = v144;
                    *(_QWORD *)&v144[16 * v116 + 8] = v122;
                    v125 = *((_QWORD *)v148 + 2);
                    if (v120 >= v125)
                      goto LABEL_169;
                    v10 = v148;
                    v74 = v125 - 1;
                    memmove(v121, v121 + 16, 16 * (v125 - 1 - v120));
                    *((_QWORD *)v148 + 2) = v125 - 1;
                    v12 = v145;
                    if (v125 <= 2)
                      goto LABEL_143;
                  }
                }
                v74 = 1;
LABEL_143:
                v13 = v142;
                v11 = v143;
                if (v143 >= v142)
                  goto LABEL_147;
                goto LABEL_14;
              }
              goto LABEL_21;
            }
          }
LABEL_38:
          v34 = v141;
          v35 = v23 - 1;
          v36 = v26;
          if (v29 == v27)
            goto LABEL_42;
          while (v35)
          {
            if (!v36)
              goto LABEL_165;
            v37 = *v34++;
            --v36;
            --v35;
            if (v37 == v27)
              goto LABEL_42;
          }
        }
        break;
      }
      if ((v22 & 1) == 0)
        goto LABEL_58;
      ++v14;
      v27 = v28;
      if (v14 >= v13)
      {
LABEL_50:
        if (v14 >= v11)
        {
          if (v11 < v14)
          {
            v38 = 32 * v14;
            v39 = 32 * v11;
            v40 = v14;
            v41 = v11;
            while (1)
            {
              if (v41 != --v40)
              {
                if (!v12)
                  goto LABEL_193;
                v42 = (_OWORD *)(v12 + v39);
                v43 = v12 + v38;
                v44 = *(_QWORD *)(v12 + v39 + 16);
                v45 = *(_QWORD *)(v12 + v39 + 24);
                v46 = *(_OWORD *)(v12 + v39);
                v47 = *(_OWORD *)(v12 + v38 - 16);
                *v42 = *(_OWORD *)(v12 + v38 - 32);
                v42[1] = v47;
                *(_OWORD *)(v43 - 32) = v46;
                *(_QWORD *)(v43 - 16) = v44;
                *(_QWORD *)(v43 - 8) = v45;
              }
              ++v41;
              v38 -= 32;
              v39 += 32;
              if (v41 >= v40)
                goto LABEL_58;
            }
          }
          goto LABEL_58;
        }
LABEL_190:
        __break(1u);
LABEL_191:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_192:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_193:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_194:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_195:
        swift_bridgeObjectRelease_n();
        result = sub_23E137560();
        __break(1u);
        return result;
      }
      continue;
    }
  }
  if (v4 < 0)
    goto LABEL_187;
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_23E01FA8C(0, v4, 1, a1, a2);
    if (v158)
      goto LABEL_161;
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23E020514(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_23E073DBC(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_23E01FBC8(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23E0205B4(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  int *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(void);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char v68;
  char *v69;
  int *v70;
  char *v71;
  uint64_t v72;
  char v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t);
  __int128 v125;
  unsigned int (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  _BYTE *v143;
  unsigned int v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, _QWORD, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v146 = a1;
  v135 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v135);
  v131 = (uint64_t *)((char *)&v123 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2 = sub_23E134E9C();
  v155 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v132 = (char *)&v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for HAPControlSolver.Source();
  v139 = *((_QWORD *)v4 - 1);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v141 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v123 - v7;
  v148 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v148);
  v149 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v140);
  v154 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_23E134C80();
  v145 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v153 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Device.Control(0);
  v129 = *(_QWORD *)(v137 - 8);
  v12 = MEMORY[0x24BDAC7A8](v137);
  v130 = (uint64_t)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v138 = (char *)&v123 - v14;
  v15 = sub_23E1356DC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v134 = (uint64_t)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v136 = (uint64_t)&v123 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v123 - v24;
  v26 = sub_23E1359AC();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v133 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v142 = (char *)&v123 - v30;
  v31 = *(void (**)(_QWORD))(v16 + 104);
  v144 = *MEMORY[0x24BE4E368];
  v156 = (void (*)(char *, _QWORD, uint64_t))v31;
  v31(v18);
  v143 = &v146[v4[17]];
  sub_23E135A48();
  v32 = *(void (**)(char *, uint64_t))(v16 + 8);
  v33 = v26;
  v152 = v15;
  v32(v18, v15);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v34((uint64_t)v25, 1, v33) != 1)
  {
    v126 = v34;
    v128 = v27;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
    v127 = v33;
    v124 = v36;
    v36(v142, (uint64_t)v25, v33);
    v37 = v152;
    v156(v18, v144, v152);
    v38 = sub_23E135AA8();
    v150 = v18;
    v151 = v32;
    v32(v18, v37);
    if (v38 == 2)
      v39 = 2;
    else
      v39 = v38 & 1;
    sub_23E135988();
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
    v41 = v154 + *(int *)(v40 + 48);
    *(_BYTE *)v154 = v39;
    v42 = (_QWORD *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28));
    v43 = (char *)v42 + *(int *)(type metadata accessor for IconDescriptor() + 20);
    v44 = *MEMORY[0x24BE4E598];
    v45 = sub_23E135910();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v43, v44, v45);
    *v42 = 0x7265776F70;
    v42[1] = 0xE500000000000000;
    sub_23DF73E10((uint64_t)v42, v41, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    v46 = sub_23E136C48();
    v47 = type metadata accessor for Device.Control.BinaryViewConfig(0);
    type metadata accessor for ControlTextModifier.Config(0);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v41 + *(int *)(v47 + 20)) = v46;
    swift_storeEnumTagMultiPayload();
    v140 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650) + 48);
    v48 = v149;
    v156(v149, v144, v152);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
    v49 = v145;
    v50 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    v51 = swift_allocObject();
    v125 = xmmword_23E138050;
    *(_OWORD *)(v51 + 16) = xmmword_23E138050;
    v52 = v146;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 16))(v51 + v50, v146, v147);
    v53 = sub_23E0E212C(v51);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)&v48[v140] = v53;
    swift_storeEnumTagMultiPayload();
    v54 = (int *)v137;
    v55 = &v138[*(int *)(v137 + 32)];
    v56 = *(int *)(v137 + 40);
    v57 = *(void (**)(void))(v49 + 32);
    v58 = v138;
    v57();
    sub_23DF89384(v154, (uint64_t)&v58[v54[5]], type metadata accessor for Device.Control.Kind);
    v59 = (uint64_t)v48;
    v60 = (uint64_t)v58;
    sub_23DF89384(v59, (uint64_t)&v58[v54[6]], type metadata accessor for Device.Control.Source);
    v58[v54[7]] = 0;
    *(_QWORD *)v55 = 0;
    *((_QWORD *)v55 + 1) = 0;
    *(_WORD *)&v58[v54[9]] = 514;
    v58[v56] = 12;
    v58[v54[11]] = 1;
    v61 = *(_QWORD *)&v52[v4[16]];
    v62 = *(_QWORD *)(v61 + 16);
    v63 = v156;
    if (!v62)
    {
      v147 = MEMORY[0x24BEE4AF8];
LABEL_30:
      v90 = v146;
      v91 = sub_23E13555C();
      v92 = v127;
      v93 = v136;
      v94 = v150;
      if (v91)
      {
        v95 = (unint64_t *)v91;
        v159 = v147;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23E020514(&v159, v95);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v147 = v159;
      }
      v96 = v152;
      v63(v94, *MEMORY[0x24BE4E288], v152);
      sub_23E135A48();
      v151(v94, v96);
      v97 = v134;
      sub_23DF89C1C(v93, v134, &qword_256D1D530);
      if (v126(v97, 1, v92) == 1)
      {
        swift_bridgeObjectRelease();
        sub_23DF89C7C(v97, &qword_256D1D530);
      }
      else
      {
        v98 = (uint64_t)v133;
        v124(v133, v97, v92);
        v99 = v147;
        if (*(_QWORD *)(v147 + 16))
        {
          v156(v94, v144, v96);
          v100 = sub_23E135AA8();
          v151(v94, v96);
          v159 = v99;
          LOBYTE(v160) = v100 & 1;
          v101 = v130;
          sub_23E0AD840(v90, v98, (uint64_t)&v159, v130);
          swift_bridgeObjectRelease();
          *(_BYTE *)(v101 + v54[10]) = 11;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
          v102 = type metadata accessor for Device.ControlGroup(0);
          v103 = *(unsigned __int8 *)(*(_QWORD *)(v102 - 8) + 80);
          v104 = (v103 + 32) & ~v103;
          v35 = swift_allocObject();
          *(_OWORD *)(v35 + 16) = v125;
          v105 = v35 + v104;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
          v106 = *(_QWORD *)(v129 + 72);
          v107 = v92;
          v108 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
          v109 = swift_allocObject();
          *(_OWORD *)(v109 + 16) = xmmword_23E138410;
          v110 = v109 + v108;
          sub_23DF73E10(v60, v110, type metadata accessor for Device.Control);
          sub_23DF73E10(v101, v110 + v106, type metadata accessor for Device.Control);
          v111 = (uint64_t)v131;
          *v131 = v109;
          swift_storeEnumTagMultiPayload();
          v112 = *(int *)(v102 + 24);
          v113 = (_QWORD *)(v105 + *(int *)(v102 + 20));
          v114 = (_QWORD *)(v105 + v112);
          sub_23DF89384(v111, v105, type metadata accessor for Device.ControlGroup.LayoutType);
          *v113 = 0;
          v113[1] = 0;
          *v114 = 0;
          v114[1] = 0;
          sub_23DF73E54(v101, type metadata accessor for Device.Control);
          v115 = *(void (**)(char *, uint64_t))(v128 + 8);
          v115(v133, v107);
          sub_23DF89C7C(v136, &qword_256D1D530);
          sub_23DF73E54(v60, type metadata accessor for Device.Control);
          v115(v142, v107);
          return v35;
        }
        (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v98, v92);
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v116 = type metadata accessor for Device.ControlGroup(0);
      v117 = *(unsigned __int8 *)(*(_QWORD *)(v116 - 8) + 80);
      v118 = (v117 + 32) & ~v117;
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v125;
      v119 = v35 + v118;
      sub_23DF73E10(v60, v119, type metadata accessor for Device.Control);
      swift_storeEnumTagMultiPayload();
      v120 = (_QWORD *)(v119 + *(int *)(v116 + 20));
      v121 = (_QWORD *)(v119 + *(int *)(v116 + 24));
      *v120 = 0;
      v120[1] = 0;
      *v121 = 0;
      v121[1] = 0;
      sub_23DF89C7C(v93, &qword_256D1D530);
      sub_23DF73E54(v60, type metadata accessor for Device.Control);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v142, v92);
      return v35;
    }
    v64 = v61 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
    v154 = *(_QWORD *)(v139 + 72);
    LODWORD(v153) = *MEMORY[0x24BE4D5D8];
    LODWORD(v148) = *MEMORY[0x24BE4E2F0];
    LODWORD(v145) = *MEMORY[0x24BE4E258];
    v123 = v61;
    swift_bridgeObjectRetain_n();
    v147 = MEMORY[0x24BEE4AF8];
    v65 = v155;
    v66 = v132;
    while (1)
    {
      sub_23DF73E10(v64, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v66, v153, v2);
      sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
      sub_23E13723C();
      sub_23E13723C();
      if (v159 == v157 && v160 == v158)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v2);
      }
      else
      {
        v68 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v2);
        if ((v68 & 1) == 0)
          goto LABEL_8;
      }
      v69 = &v8[v4[14]];
      if ((v69[8] & 1) == 0)
      {
        v149 = *(char **)v69;
        v70 = v4;
        v71 = v150;
        v72 = v152;
        v156(v150, v148, v152);
        v73 = sub_23E135AA8();
        v74 = v71;
        v4 = v70;
        v151(v74, v72);
        if ((v73 & 1) != 0)
        {
          v75 = v150;
          v76 = v152;
          v156(v150, v145, v152);
          v77 = sub_23E135AA8();
          v78 = v75;
          v4 = v70;
          v151(v78, v76);
          if ((v77 & 1) != 0)
          {
            v79 = (uint64_t *)&v8[v70[8]];
            v81 = *v79;
            v80 = v79[1];
            v82 = v141;
            sub_23DF73E10((uint64_t)v8, v141, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            if (v80)
            {
              v140 = v81;
              v139 = v80;
            }
            else
            {
              v83 = (uint64_t *)(v82 + v4[7]);
              v84 = v83[1];
              v140 = *v83;
              v139 = v84;
              swift_bridgeObjectRetain();
            }
            v85 = (_QWORD *)v147;
            swift_bridgeObjectRetain();
            sub_23DF73E54(v82, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            sub_23DF73E54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v85 = sub_23E0075D8(0, v85[2] + 1, 1, v85);
            v65 = v155;
            v87 = v85[2];
            v86 = v85[3];
            if (v87 >= v86 >> 1)
              v85 = sub_23E0075D8((_QWORD *)(v86 > 1), v87 + 1, 1, v85);
            v85[2] = v87 + 1;
            v147 = (uint64_t)v85;
            v88 = &v85[4 * v87];
            v89 = v140;
            v88[4] = v149;
            v88[5] = v89;
            v88[6] = v139;
            v88[7] = 0;
            goto LABEL_9;
          }
        }
      }
LABEL_8:
      sub_23DF73E54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v65 = v155;
LABEL_9:
      v64 += v154;
      --v62;
      v63 = v156;
      if (!v62)
      {
        swift_bridgeObjectRelease_n();
        v60 = (uint64_t)v138;
        v54 = (int *)v137;
        goto LABEL_30;
      }
    }
  }
  sub_23DF89C7C((uint64_t)v25, &qword_256D1D530);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E02141C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, _QWORD, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(uint64_t, uint64_t, uint64_t);
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t (*v167)(char *, uint64_t, uint64_t);
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;

  v153 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v153);
  v147 = (uint64_t *)((char *)&v139 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEC8);
  MEMORY[0x24BDAC7A8](v3);
  v144 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_23E135520();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v141 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for Device.Control(0);
  v171 = *(_QWORD *)(v162 - 8);
  v6 = MEMORY[0x24BDAC7A8](v162);
  v148 = (uint64_t)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v146 = (uint64_t)&v139 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v152 = (uint64_t)&v139 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v140 = (uint64_t)&v139 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v13);
  v151 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_23E1359AC();
  v170 = *(_QWORD *)(v161 - 8);
  v15 = MEMORY[0x24BDAC7A8](v161);
  v157 = (char *)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v145 = (char *)&v139 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v155 = (char *)&v139 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v160 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v165 = (char *)&v139 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v159 = (uint64_t)&v139 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v163 = (char *)&v139 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v154 = (uint64_t)&v139 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v164 = (uint64_t)&v139 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v173 = (uint64_t)&v139 - v33;
  v34 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23E1356DC();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v139 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v156 = (char *)&v139 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v150 = (uint64_t)&v139 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v158 = (uint64_t)&v139 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v172 = (uint64_t)&v139 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v169 = (uint64_t)&v139 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v139 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v56 = (char *)&v139 - v55;
  v57 = *(void (**)(char *, _QWORD, uint64_t))(v38 + 104);
  v57(v40, *MEMORY[0x24BE4E368], v37);
  v149 = v34;
  v58 = a1;
  sub_23E135A48();
  v59 = v170;
  v60 = *(void (**)(char *, uint64_t))(v38 + 8);
  v60(v40, v37);
  v61 = v58;
  v62 = v161;
  v166 = v61;
  sub_23DF73E10(v61, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v167 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  v63 = v167(v54, 1, v62);
  v168 = v56;
  if (v63 == 1)
  {
    v57(v40, *MEMORY[0x24BE4E238], v37);
    sub_23E135A48();
    v60(v40, v37);
    sub_23DF73E54((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    sub_23DF89C7C((uint64_t)v54, &qword_256D1D530);
  }
  else
  {
    sub_23DF73E54((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v54, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v62);
  }
  v64 = v62;
  v57(v40, *MEMORY[0x24BE4E268], v37);
  v65 = v169;
  sub_23E135A48();
  v60(v40, v37);
  v57(v40, *MEMORY[0x24BE4E2B8], v37);
  sub_23E135A48();
  v60(v40, v37);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56);
  v67 = v162;
  v66(v173, 1, 1, v162);
  v68 = v158;
  sub_23DF89C1C(v65, v158, &qword_256D1D530);
  v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v167;
  if (v167((char *)v68, 1, v62) == 1)
  {
    sub_23DF89C7C(v68, &qword_256D1D530);
    v70 = v150;
    sub_23DF89C1C((uint64_t)v168, v150, &qword_256D1D530);
    v71 = v69(v70, 1, v62);
    v72 = (uint64_t)v163;
    v73 = (uint64_t)v165;
    v74 = v166;
    v75 = v170;
    if (v71 == 1)
    {
      sub_23DF89C7C(v70, &qword_256D1D530);
      goto LABEL_12;
    }
    v92 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v145, v70, v64);
    v93 = v164;
    sub_23E0AD408(v74, v164);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v92, v64);
    v66(v93, 0, 1, v67);
    v91 = v93;
  }
  else
  {
    v75 = v170;
    v76 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v155, v68, v62);
    v77 = sub_23E134C80();
    v78 = 1;
    v79 = (uint64_t)v151;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v151, 1, 1, v77);
    v80 = v164;
    sub_23E0AC79C(v166, v76, (uint64_t)v168, v79, v164);
    sub_23DF89C7C(v79, &qword_256D1D7E8);
    v66(v80, 0, 1, v67);
    v81 = v173;
    sub_23E0253E4(v80, v173);
    v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v81, 1, v67);
    v72 = (uint64_t)v163;
    v73 = (uint64_t)v165;
    if (!v82)
    {
      v83 = v140;
      sub_23DF73E10(v173, v140, type metadata accessor for Device.Control);
      v84 = v142;
      v85 = (uint64_t)v141;
      v86 = v143;
      (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v141, *MEMORY[0x24BE4DF20], v143);
      sub_23E016060(v85, v154);
      v87 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
      v72 = (uint64_t)v163;
      v88 = v85;
      v76 = (uint64_t)v155;
      v89 = v86;
      v73 = (uint64_t)v165;
      v87(v88, v89);
      sub_23DF73E54(v83, type metadata accessor for Device.Control);
      v78 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v64);
    v90 = v154;
    v66(v154, v78, 1, v67);
    v91 = v90;
  }
  sub_23E0253E4(v91, v173);
LABEL_12:
  v94 = (uint64_t)v156;
  v95 = v157;
  v66(v72, 1, 1, v67);
  sub_23DF89C1C(v172, v94, &qword_256D1D530);
  if (v167((char *)v94, 1, v64) == 1)
  {
    sub_23DF89C7C(v94, &qword_256D1D530);
    v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
    v97 = v96(v173, 1, v67);
  }
  else
  {
    v98 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v95, v94, v64);
    v99 = v164;
    sub_23E0AD408(v166, v164);
    v66(v99, 0, 1, v67);
    sub_23E0253E4(v99, v72);
    v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
    if (v96(v72, 1, v67))
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v95, v64);
      v73 = v98;
    }
    else
    {
      v100 = type metadata accessor for IconDescriptor();
      v101 = v144;
      v102 = &v144[*(int *)(v100 + 20)];
      v103 = *MEMORY[0x24BE4E598];
      v104 = sub_23E135910();
      v105 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 104);
      v105(v102, v103, v104);
      *v101 = 0x6C632E776F727261;
      v101[1] = 0xEF657369776B636FLL;
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
      v107 = v72;
      v108 = (char *)v101 + *(int *)(v106 + 28);
      v109 = v103;
      v67 = v162;
      v105(&v108[*(int *)(v100 + 20)], v109, v104);
      *(_QWORD *)v108 = 0xD000000000000016;
      *((_QWORD *)v108 + 1) = 0x800000023E144DD0;
      v72 = v107;
      v73 = (uint64_t)v165;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v101, 0, 1, v106);
      sub_23E122DDC((uint64_t)v101);
      (*(void (**)(char *, uint64_t))(v170 + 8))(v95, v161);
    }
    v97 = v96(v173, 1, v67);
  }
  v110 = (uint64_t)v160;
  if (!v97)
    *(_BYTE *)(v173 + *(int *)(v67 + 28)) = 0;
  if (!v96(v72, 1, v67))
    *(_BYTE *)(v72 + *(int *)(v67 + 28)) = 1;
  if (!v96(v72, 1, v67))
    *(_WORD *)(v72 + *(int *)(v67 + 36)) = 0;
  v111 = v159;
  sub_23DF89C1C(v72, v159, &qword_256D1D5E0);
  if (v96(v111, 1, v67) == 1)
  {
    v73 = v111;
  }
  else
  {
    v112 = v152;
    sub_23DF89384(v111, v152, type metadata accessor for Device.Control);
    sub_23DF89C1C(v173, v73, &qword_256D1D5E0);
    if (v96(v73, 1, v67) != 1)
    {
      v122 = v171;
      v123 = v146;
      sub_23DF89384(v73, v146, type metadata accessor for Device.Control);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v124 = type metadata accessor for Device.ControlGroup(0);
      v125 = *(unsigned __int8 *)(*(_QWORD *)(v124 - 8) + 80);
      v126 = (v125 + 32) & ~v125;
      v113 = swift_allocObject();
      *(_OWORD *)(v113 + 16) = xmmword_23E138050;
      v127 = v113 + v126;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
      v128 = v72;
      v129 = *(_QWORD *)(v122 + 72);
      v130 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
      v131 = swift_allocObject();
      *(_OWORD *)(v131 + 16) = xmmword_23E138410;
      v132 = v131 + v130;
      sub_23DF73E10(v123, v132, type metadata accessor for Device.Control);
      v133 = v132 + v129;
      v72 = v128;
      sub_23DF73E10(v112, v133, type metadata accessor for Device.Control);
      v134 = (uint64_t)v147;
      *v147 = v131;
      swift_storeEnumTagMultiPayload();
      v135 = *(int *)(v124 + 24);
      v136 = (_QWORD *)(v127 + *(int *)(v124 + 20));
      v137 = (_QWORD *)(v127 + v135);
      sub_23DF89384(v134, v127, type metadata accessor for Device.ControlGroup.LayoutType);
      *v136 = 0;
      v136[1] = 0;
      *v137 = 0;
      v137[1] = 0;
      sub_23DF73E54(v123, type metadata accessor for Device.Control);
      v121 = v112;
      goto LABEL_32;
    }
    sub_23DF73E54(v112, type metadata accessor for Device.Control);
  }
  sub_23DF89C7C(v73, &qword_256D1D5E0);
  sub_23DF89C1C(v173, v110, &qword_256D1D5E0);
  if (v96(v110, 1, v67) != 1)
  {
    v114 = v148;
    sub_23DF89384(v110, v148, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v115 = type metadata accessor for Device.ControlGroup(0);
    v116 = *(unsigned __int8 *)(*(_QWORD *)(v115 - 8) + 80);
    v117 = (v116 + 32) & ~v116;
    v113 = swift_allocObject();
    *(_OWORD *)(v113 + 16) = xmmword_23E138050;
    v118 = v113 + v117;
    sub_23DF73E10(v114, v118, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v119 = (_QWORD *)(v118 + *(int *)(v115 + 20));
    v120 = (_QWORD *)(v118 + *(int *)(v115 + 24));
    *v119 = 0;
    v119[1] = 0;
    *v120 = 0;
    v120[1] = 0;
    v121 = v114;
LABEL_32:
    sub_23DF73E54(v121, type metadata accessor for Device.Control);
    goto LABEL_33;
  }
  sub_23DF89C7C(v110, &qword_256D1D5E0);
  v113 = MEMORY[0x24BEE4AF8];
LABEL_33:
  sub_23DF89C7C(v172, &qword_256D1D530);
  sub_23DF89C7C(v169, &qword_256D1D530);
  sub_23DF89C7C((uint64_t)v168, &qword_256D1D530);
  sub_23DF89C7C(v72, &qword_256D1D5E0);
  sub_23DF89C7C(v173, &qword_256D1D5E0);
  return v113;
}

uint64_t sub_23E0222A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t);
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;

  v128 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v128);
  v122 = (uint64_t *)((char *)&v112 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEC8);
  MEMORY[0x24BDAC7A8](v3);
  v121 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E135520();
  v119 = *(_QWORD *)(v5 - 8);
  v120 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v118 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v7);
  v126 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HAPControlSolver.Source();
  v134 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E1359AC();
  v130 = *(_QWORD *)(v12 - 8);
  v131 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v129 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v17);
  v133 = (uint64_t)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for Device.Control(0);
  v19 = *(_QWORD *)(v136 - 8);
  v20 = MEMORY[0x24BDAC7A8](v136);
  v117 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v127 = (uint64_t)&v112 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v132 = (uint64_t)&v112 - v24;
  v25 = sub_23E1356DC();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v125 = (char *)&v112 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v112 - v32;
  v34 = *MEMORY[0x24BE4E368];
  v124 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 104);
  v124(v28, v34, v25);
  v123 = a1 + *(int *)(v9 + 68);
  sub_23E135A48();
  v35 = *(void (**)(char *, uint64_t))(v26 + 8);
  v36 = v136;
  v35(v28, v25);
  v37 = a1;
  v38 = v9;
  v39 = v134;
  v135 = v37;
  sub_23DF73E10(v37, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v16, 0, 1, v38);
  v137 = v33;
  v40 = (uint64_t)v33;
  v41 = v133;
  sub_23E0AC544((uint64_t)v16, v40, v133);
  sub_23DF89C7C((uint64_t)v16, &qword_256D21B40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v41, 1, v36) == 1)
  {
    sub_23DF89C7C(v41, &qword_256D1D5E0);
    v42 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v115 = v35;
    v114 = v25;
    v43 = v39;
    v113 = v19;
    v44 = v41;
    v45 = v132;
    sub_23DF89384(v44, v132, type metadata accessor for Device.Control);
    v46 = *(_QWORD *)(v135 + *(int *)(v38 + 64));
    v47 = MEMORY[0x24BEE4AF8];
    v138 = MEMORY[0x24BEE4AF8];
    v48 = *(_QWORD *)(v46 + 16);
    v116 = v38;
    if (v48)
    {
      v49 = v46 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      v50 = *(_QWORD *)(v43 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_23DF73E10(v49, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v51 = sub_23E02141C((uint64_t)v11);
        sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        sub_23DF83F90(v51);
        v49 += v50;
        --v48;
      }
      while (v48);
      swift_bridgeObjectRelease();
      v47 = v138;
      v45 = v132;
    }
    v53 = v130;
    v52 = v131;
    v54 = (uint64_t)v129;
    v55 = (uint64_t)v125;
    v56 = (uint64_t)v126;
    v57 = v114;
    v124(v28, *MEMORY[0x24BE4E268], v114);
    sub_23E135A48();
    v115(v28, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v55, 1, v52) == 1)
    {
      sub_23DF89C7C(v55, &qword_256D1D530);
      if (*(_QWORD *)(v47 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
        v58 = type metadata accessor for Device.ControlGroup(0);
        v59 = *(unsigned __int8 *)(*(_QWORD *)(v58 - 8) + 80);
        v60 = (v59 + 32) & ~v59;
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_23E138050;
        v62 = v61 + v60;
        sub_23DF73E10(v45, v62, type metadata accessor for Device.Control);
        swift_storeEnumTagMultiPayload();
        v63 = (uint64_t *)(v135 + *(int *)(v116 + 28));
        v65 = *v63;
        v64 = v63[1];
        v66 = (_QWORD *)(v62 + *(int *)(v58 + 20));
        v67 = (_QWORD *)(v62 + *(int *)(v58 + 24));
        *v66 = 0;
        v66[1] = 0;
        *v67 = v65;
        v67[1] = v64;
        v138 = v61;
        swift_bridgeObjectRetain();
        sub_23DF83F90(v47);
        v42 = v138;
      }
      else
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
        v102 = type metadata accessor for Device.ControlGroup(0);
        v103 = *(unsigned __int8 *)(*(_QWORD *)(v102 - 8) + 80);
        v104 = (v103 + 32) & ~v103;
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_23E138050;
        v105 = v42 + v104;
        sub_23DF73E10(v45, v105, type metadata accessor for Device.Control);
        swift_storeEnumTagMultiPayload();
        v106 = (uint64_t *)(v135 + *(int *)(v116 + 28));
        v108 = *v106;
        v107 = v106[1];
        v109 = (_QWORD *)(v105 + *(int *)(v102 + 20));
        v110 = (_QWORD *)(v105 + *(int *)(v102 + 24));
        *v109 = 0;
        v109[1] = 0;
        *v110 = v108;
        v110[1] = v107;
        swift_bridgeObjectRetain();
      }
      v68 = v45;
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v54, v55, v52);
      v69 = sub_23E134C80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v56, 1, 1, v69);
      v70 = v45;
      v71 = v127;
      sub_23E0AC79C(v135, v54, (uint64_t)v137, v56, v127);
      sub_23DF89C7C(v56, &qword_256D1D7E8);
      v73 = (uint64_t)v118;
      v72 = v119;
      v74 = v120;
      (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v118, *MEMORY[0x24BE4DF20], v120);
      v75 = v117;
      sub_23E016060(v73, v117);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v74);
      sub_23DF73E54(v71, type metadata accessor for Device.Control);
      sub_23DF89384(v75, v71, type metadata accessor for Device.Control);
      *(_WORD *)(v70 + *(int *)(v136 + 36)) = 514;
      v76 = type metadata accessor for IconDescriptor();
      v77 = v121;
      v78 = &v121[*(int *)(v76 + 20)];
      v79 = *MEMORY[0x24BE4E598];
      v80 = sub_23E135910();
      v81 = v70;
      v82 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 104);
      v82(v78, v79, v80);
      *v77 = 0x7265776F70;
      v77[1] = 0xE500000000000000;
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
      v84 = (char *)v77 + *(int *)(v83 + 28);
      v82(&v84[*(int *)(v76 + 20)], v79, v80);
      *(_QWORD *)v84 = 0x7265776F70;
      *((_QWORD *)v84 + 1) = 0xE500000000000000;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v77, 0, 1, v83);
      v85 = v81;
      sub_23E122DDC((uint64_t)v77);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v86 = type metadata accessor for Device.ControlGroup(0);
      v87 = *(unsigned __int8 *)(*(_QWORD *)(v86 - 8) + 80);
      v88 = (v87 + 32) & ~v87;
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_23E138050;
      v89 = v42 + v88;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
      v90 = *(_QWORD *)(v113 + 72);
      v91 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
      v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = xmmword_23E138410;
      v93 = v92 + v91;
      v94 = v127;
      sub_23DF73E10(v127, v93, type metadata accessor for Device.Control);
      sub_23DF73E10(v85, v93 + v90, type metadata accessor for Device.Control);
      v95 = (uint64_t)v122;
      *v122 = v92;
      swift_storeEnumTagMultiPayload();
      v96 = (uint64_t *)(v135 + *(int *)(v116 + 28));
      v98 = *v96;
      v97 = v96[1];
      v99 = *(int *)(v86 + 24);
      v100 = (_QWORD *)(v89 + *(int *)(v86 + 20));
      v101 = (_QWORD *)(v89 + v99);
      sub_23DF89384(v95, v89, type metadata accessor for Device.ControlGroup.LayoutType);
      *v100 = 0;
      v100[1] = 0;
      *v101 = v98;
      v101[1] = v97;
      swift_bridgeObjectRetain();
      sub_23DF73E54(v94, type metadata accessor for Device.Control);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v131);
      v68 = v85;
    }
    sub_23DF73E54(v68, type metadata accessor for Device.Control);
  }
  sub_23DF89C7C((uint64_t)v137, &qword_256D1D530);
  return v42;
}

uint64_t sub_23E022CA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Device.Control(0);
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E1356DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE4E238], v10);
  v17 = type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_23DF73E10(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 0, 1, v17);
  sub_23E0AC544((uint64_t)v4, (uint64_t)v16, (uint64_t)v7);
  sub_23DF89C7C((uint64_t)v4, &qword_256D21B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v27) == 1)
  {
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D5E0);
    v18 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v19 = v26;
    sub_23DF89384((uint64_t)v7, v26, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v20 = type metadata accessor for Device.ControlGroup(0);
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v20 - 8) + 80);
    v22 = (v21 + 32) & ~v21;
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_23E138050;
    sub_23DF73E10(v19, v18 + v22, type metadata accessor for Device.Control);
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v23 = (_QWORD *)(v18 + v22 + *(int *)(v20 + 20));
    v24 = (_QWORD *)(v18 + v22 + *(int *)(v20 + 24));
    *v23 = 0;
    v23[1] = 0;
    *v24 = 0;
    v24[1] = 0;
    sub_23DF73E54(v19, type metadata accessor for Device.Control);
  }
  sub_23DF89C7C((uint64_t)v16, &qword_256D1D530);
  return v18;
}

uint64_t sub_23E022FA0(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v20 = result + 32;
    v5 = a2 + 56;
    v19 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v6 = v4 <= v2 ? v2 : v4;
      while (1)
      {
        if (v4 == v6)
        {
          __break(1u);
          return result;
        }
        v7 = v4++;
        if (*(_QWORD *)(a2 + 16))
        {
          v8 = v20 + 32 * v7;
          v21 = *(_OWORD *)v8;
          v9 = *(_QWORD *)(v8 + 16);
          v10 = *(_QWORD *)(v8 + 24);
          sub_23E137698();
          sub_23E1376A4();
          result = sub_23E1376D4();
          v11 = -1 << *(_BYTE *)(a2 + 32);
          v12 = result & ~v11;
          if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
            break;
        }
LABEL_6:
        if (v4 == v2)
          return v19;
      }
      v13 = *(_QWORD *)(a2 + 48);
      if (*(_QWORD *)(v13 + 8 * v12) != (_QWORD)v21)
        break;
LABEL_14:
      swift_retain();
      swift_bridgeObjectRetain();
      v15 = v19;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_23E09E16C(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v15 = v19;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        result = sub_23E09E16C(v16 > 1, v17 + 1, 1);
        v15 = v19;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      v19 = v15;
      v18 = v15 + 32 * v17;
      *(_OWORD *)(v18 + 32) = v21;
      *(_QWORD *)(v18 + 48) = v9;
      *(_QWORD *)(v18 + 56) = v10;
      if (v4 == v2)
        return v19;
    }
    v14 = ~v11;
    while (1)
    {
      v12 = (v12 + 1) & v14;
      if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_6;
      if (*(_QWORD *)(v13 + 8 * v12) == (_QWORD)v21)
        goto LABEL_14;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E02317C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v2 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v2);
  v45 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E1356DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E1359AC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE4E320], v4);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23DF89C7C((uint64_t)v10, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v41 = sub_23E016950();
    v42 = a1;
    v16 = sub_23E134E90();
    v40 = sub_23E1371A0();
    v39 = v17;
    v18 = sub_23E1371A0();
    v44 = v12;
    v20 = v19;
    v21 = sub_23E1371A0();
    v43 = v11;
    v22 = v21;
    v24 = v23;
    v25 = sub_23E1371A0();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21358);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = 0;
    *(_OWORD *)(inited + 16) = xmmword_23E13AE20;
    v29 = v39;
    *(_QWORD *)(inited + 40) = v40;
    *(_QWORD *)(inited + 48) = v29;
    *(_QWORD *)(inited + 56) = v16;
    *(_QWORD *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = v18;
    *(_QWORD *)(inited + 80) = v20;
    *(_QWORD *)(inited + 88) = v16;
    *(_QWORD *)(inited + 96) = 2;
    *(_QWORD *)(inited + 104) = v22;
    *(_QWORD *)(inited + 112) = v24;
    *(_QWORD *)(inited + 120) = v16;
    *(_QWORD *)(inited + 128) = 3;
    *(_QWORD *)(inited + 136) = v25;
    *(_QWORD *)(inited + 144) = v27;
    *(_QWORD *)(inited + 152) = 0;
    swift_retain_n();
    v30 = sub_23E022FA0(inited, v41);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    v46 = v30;
    v47 = 1;
    v31 = v45;
    sub_23E0AD840(v42, (uint64_t)v14, (uint64_t)&v46, v45);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v32 = type metadata accessor for Device.ControlGroup(0);
    v33 = *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80);
    v34 = (v33 + 32) & ~v33;
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_23E138050;
    sub_23DF73E10(v31, v15 + v34, type metadata accessor for Device.Control);
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v35 = (_QWORD *)(v15 + v34 + *(int *)(v32 + 20));
    v36 = (_QWORD *)(v15 + v34 + *(int *)(v32 + 24));
    *v35 = 0;
    v35[1] = 0;
    *v36 = 0;
    v36[1] = 0;
    swift_release();
    sub_23DF73E54(v31, type metadata accessor for Device.Control);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v43);
  }
  return v15;
}

uint64_t sub_23E0235D0(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1356DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E1359AC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *a2, v6);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v18 = type metadata accessor for Device.ControlGroup(0);
    v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
    v20 = (v19 + 32) & ~v19;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_23E138050;
    v21 = v17 + v20;
    sub_23E0AD408(a1, (uint64_t)v5);
    swift_storeEnumTagMultiPayload();
    v22 = (_QWORD *)(v17 + v20 + *(int *)(v18 + 20));
    v23 = (_QWORD *)(v21 + *(int *)(v18 + 24));
    sub_23DF89384((uint64_t)v5, v21, type metadata accessor for Device.ControlGroup.LayoutType);
    *v22 = 0;
    v22[1] = 0;
    *v23 = 0;
    v23[1] = 0;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v17;
}

unint64_t sub_23E023834(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v25 = (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v24 = (uint64_t)v22 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x24BEE4AF8];
  v13 = *a2;
  v14 = *(_QWORD *)(type metadata accessor for HAPControlSolver.Source() - 8);
  v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v22[1] = a1;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x24BEE4AF8];
  v23 = v7;
  do
  {
    sub_23E0162CC(v15, v13, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_23DF89C7C((uint64_t)v6, &qword_256D1D5E0);
    }
    else
    {
      v18 = v24;
      sub_23DF89384((uint64_t)v6, v24, type metadata accessor for Device.Control);
      sub_23DF89384(v18, v25, type metadata accessor for Device.Control);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_23E007818(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_23E007818(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_23DF89384(v25, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20, type metadata accessor for Device.Control);
      v7 = v23;
    }
    v15 += v16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23E023A78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  __int128 v26;
  unsigned __int16 v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B38);
  v9 = type metadata accessor for HAPControlSolver.Source();
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject();
  v26 = xmmword_23E138050;
  *(_OWORD *)(v12 + 16) = xmmword_23E138050;
  sub_23DF73E10(a1, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v27 = 5;
  v13 = sub_23E023834(v12, &v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (*(_QWORD *)(v13 + 16))
  {
    sub_23DF73E10(v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v4, type metadata accessor for Device.Control);
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v14, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D1D5E0);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23DF89384((uint64_t)v4, (uint64_t)v8, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v16 = type metadata accessor for Device.ControlGroup(0);
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
    v18 = (v17 + 32) & ~v17;
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v26;
    v19 = v15 + v18;
    sub_23DF73E10((uint64_t)v8, v19, type metadata accessor for Device.Control);
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v20 = (uint64_t *)(a1 + *(int *)(v9 + 28));
    v22 = *v20;
    v21 = v20[1];
    v23 = (_QWORD *)(v19 + *(int *)(v16 + 20));
    v24 = (_QWORD *)(v19 + *(int *)(v16 + 24));
    *v23 = 0;
    v23[1] = 0;
    *v24 = v22;
    v24[1] = v21;
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control);
  }
  return v15;
}

uint64_t sub_23E023D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTextModifier.Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E023D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v58 = a1;
  v1 = sub_23E135520();
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control(0);
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v48 - v10;
  v11 = sub_23E1356DC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v59 = (uint64_t)&v48 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v48 - v24;
  v26 = type metadata accessor for HAPControlSolver.Source();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(v58, (uint64_t)v25, &qword_256D21B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_23DF89C7C((uint64_t)v25, &qword_256D21B40);
  }
  else
  {
    sub_23DF89384((uint64_t)v25, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE4E2A8], v11);
    v30 = v59;
    sub_23E135A48();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_23DF73E10((uint64_t)v29, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    v31 = sub_23E1359AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
    v32 = sub_23E134C80();
    v33 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v56, 1, 1, v32);
    v34 = v57;
    sub_23E0AC2E4((uint64_t)v23, v30, (uint64_t)v18, v33, v57);
    sub_23DF89C7C(v33, &qword_256D1D7E8);
    sub_23DF89C7C((uint64_t)v18, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v23, &qword_256D21B40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v34, 1, v55) != 1)
    {
      v36 = v53;
      sub_23DF89384(v34, v53, type metadata accessor for Device.Control);
      v38 = (uint64_t)v50;
      v37 = v51;
      v39 = v52;
      (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, *MEMORY[0x24BE4DF20], v52);
      v40 = v49;
      sub_23E016060(v38, v49);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
      sub_23DF73E54(v36, type metadata accessor for Device.Control);
      sub_23DF89384(v40, v36, type metadata accessor for Device.Control);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v41 = type metadata accessor for Device.ControlGroup(0);
      v42 = *(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80);
      v43 = (v42 + 32) & ~v42;
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_23E138050;
      v44 = v35 + v43;
      sub_23DF73E10(v36, v44, type metadata accessor for Device.Control);
      type metadata accessor for Device.ControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v45 = (_QWORD *)(v44 + *(int *)(v41 + 20));
      v46 = (_QWORD *)(v44 + *(int *)(v41 + 24));
      *v45 = 0;
      v45[1] = 0;
      *v46 = 0;
      v46[1] = 0;
      sub_23DF73E54(v36, type metadata accessor for Device.Control);
      sub_23DF89C7C(v59, &qword_256D1D530);
      sub_23DF73E54((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      return v35;
    }
    sub_23DF89C7C(v34, &qword_256D1D5E0);
    sub_23DF89C7C(v59, &qword_256D1D530);
    sub_23DF73E54((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E0242D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD v58[2];
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[4];

  v80[2] = *MEMORY[0x24BDAC8D0];
  v68 = sub_23E134E9C();
  v70 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v77 = (char *)v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for HAPControlSolver.Source();
  v74 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v71 = (uint64_t)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v58 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for Device.Control(0);
  v13 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v72 = (uint64_t)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E1356DC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BE4E368], v15);
  sub_23E135A48();
  v22 = v15;
  v23 = v74;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v22);
  sub_23DF73E10(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v24((uint64_t)v9, 0, 1, v3);
  v73 = v21;
  sub_23E0AC544((uint64_t)v9, (uint64_t)v21, (uint64_t)v12);
  sub_23DF89C7C((uint64_t)v9, &qword_256D21B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v76) == 1)
  {
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D5E0);
    v25 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v67 = v24;
    v26 = v72;
    sub_23DF89384((uint64_t)v12, v72, type metadata accessor for Device.Control);
    v27 = *(_QWORD *)(a1 + *(int *)(v3 + 64));
    LOWORD(v80[0]) = 256;
    v28 = sub_23E023834(v27, (unsigned __int16 *)v80);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v30 = type metadata accessor for Device.ControlGroup(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(_QWORD *)(v31 + 72);
    v33 = *(unsigned __int8 *)(v31 + 80);
    v34 = (v33 + 32) & ~v33;
    v64 = v29;
    v62 = v34 + v32;
    v61 = v33 | 7;
    v35 = swift_allocObject();
    v59 = xmmword_23E138050;
    *(_OWORD *)(v35 + 16) = xmmword_23E138050;
    v66 = v35;
    v63 = v34;
    v36 = v35 + v34;
    *(_QWORD *)(v35 + v34) = v28;
    v60 = type metadata accessor for Device.ControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v37 = *(int *)(v30 + 20);
    v38 = *(int *)(v30 + 24);
    v65 = v30;
    v39 = (_QWORD *)(v36 + v37);
    v40 = (_QWORD *)(v36 + v38);
    *v39 = 0;
    v39[1] = 0;
    *v40 = 0;
    v40[1] = 0;
    v41 = *(_QWORD *)(v27 + 16);
    if (v41)
    {
      v42 = v27 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
      LODWORD(v76) = *MEMORY[0x24BE4D610];
      v74 = *(_QWORD *)(v23 + 72);
      v58[1] = v27;
      swift_bridgeObjectRetain();
      v44 = (uint64_t)v69;
      v43 = v70;
      v45 = v68;
      v75 = v3;
      while (1)
      {
        sub_23DF73E10(v42, v44, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v46 = v44;
        v47 = v77;
        (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v77, v76, v45);
        sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
        sub_23E13723C();
        sub_23E13723C();
        if (v80[0] == v78 && v80[1] == v79)
          break;
        v49 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v45);
        if ((v49 & 1) != 0)
          goto LABEL_14;
        sub_23DF73E54(v44, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v3 = v75;
        v42 += v74;
        if (!--v41)
        {
          v50 = 1;
          v51 = v71;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v45);
LABEL_14:
      v51 = v71;
      sub_23DF89384(v46, v71, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v50 = 0;
      v3 = v75;
LABEL_15:
      v26 = v72;
    }
    else
    {
      swift_bridgeObjectRetain();
      v50 = 1;
      v51 = v71;
    }
    v67(v51, v50, 1, v3);
    swift_bridgeObjectRelease();
    v52 = sub_23E023D6C(v51);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v59;
    v54 = v53 + v63;
    sub_23DF73E10(v26, v53 + v63, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v55 = (_QWORD *)(v54 + *(int *)(v65 + 20));
    v56 = (_QWORD *)(v54 + *(int *)(v65 + 24));
    *v55 = 0;
    v55[1] = 0;
    *v56 = 0;
    v56[1] = 0;
    v80[0] = v53;
    sub_23DF83F90(v52);
    sub_23DF83F90(v66);
    v25 = v80[0];
    sub_23DF89C7C(v51, &qword_256D21B40);
    sub_23DF73E54(v26, type metadata accessor for Device.Control);
  }
  sub_23DF89C7C((uint64_t)v73, &qword_256D1D530);
  return v25;
}

uint64_t sub_23E024940(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, _QWORD, uint64_t);
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;

  v120 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v120);
  v114 = (uint64_t *)((char *)&v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Device.Control(0);
  v4 = *(_QWORD *)(v3 - 8);
  v125 = v3;
  v126 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v115 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v113 = (uint64_t)&v113 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v119 = (uint64_t)&v113 - v9;
  v118 = sub_23E135520();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v11);
  v124 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v13);
  v123 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v121 = (uint64_t)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v130 = (char *)&v113 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v129 = (uint64_t)&v113 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v132 = (char *)&v113 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v127 = (uint64_t)&v113 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v128 = (uint64_t)&v113 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v135 = (uint64_t)&v113 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v134 = (uint64_t)&v113 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v122 = (char *)&v113 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v133 = (uint64_t)&v113 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v113 - v36;
  v38 = sub_23E1356DC();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v113 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v113 - v46;
  v48 = *(void (**)(char *, _QWORD, uint64_t))(v39 + 104);
  v48(v41, *MEMORY[0x24BE4E230], v38);
  v49 = type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  v50 = *(void (**)(char *, uint64_t))(v39 + 8);
  v50(v41, v38);
  v48(v41, *MEMORY[0x24BE4E238], v38);
  sub_23E135A48();
  v51 = a1;
  v52 = (uint64_t)v123;
  v50(v41, v38);
  v53 = v125;
  v139 = v37;
  sub_23E0ABED0(v51, (uint64_t)v37);
  v136 = v51;
  v54 = v51;
  v55 = (uint64_t)v122;
  sub_23DF73E10(v54, v52, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v56 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v137 = v49;
  v56(v52, 0, 1, v49);
  v57 = sub_23E134C80();
  v58 = (uint64_t)v124;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v124, 1, 1, v57);
  v131 = v47;
  v138 = v45;
  v59 = (uint64_t)v45;
  v60 = v126;
  sub_23E0AC2E4(v52, (uint64_t)v47, v59, v58, v55);
  sub_23DF89C7C(v58, &qword_256D1D7E8);
  sub_23DF89C7C(v52, &qword_256D21B40);
  v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  if (v61(v55, 1, v53) == 1)
  {
    sub_23DF89C7C(v55, &qword_256D1D5E0);
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    v63 = v133;
    v62(v133, 1, 1, v53);
  }
  else
  {
    v64 = v117;
    v65 = (uint64_t)v116;
    v66 = v118;
    (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v116, *MEMORY[0x24BE4DF20], v118);
    v67 = v133;
    sub_23E016060(v65, v133);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v66);
    sub_23DF73E54(v55, type metadata accessor for Device.Control);
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    v62(v67, 0, 1, v53);
    v63 = v67;
  }
  sub_23DF73E10(v136, v52, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v56(v52, 0, 1, v137);
  v68 = v134;
  sub_23E0AC544(v52, (uint64_t)v138, v134);
  sub_23DF89C7C(v52, &qword_256D21B40);
  v69 = v128;
  sub_23DF89C1C(v63, v128, &qword_256D1D5E0);
  v70 = v127;
  sub_23DF89C1C(v68, v127, &qword_256D1D5E0);
  v71 = v61(v69, 1, v53);
  v72 = v53;
  v73 = (uint64_t)v132;
  if (v71 == 1)
  {
    v74 = v69;
    v75 = v135;
    sub_23DF89340(v70, v135, &qword_256D1D5E0);
    sub_23DF89C7C(v74, &qword_256D1D5E0);
  }
  else
  {
    sub_23DF89C7C(v70, &qword_256D1D5E0);
    v76 = v69;
    v75 = v135;
    sub_23DF89384(v76, v135, type metadata accessor for Device.Control);
    v62(v75, 0, 1, v72);
  }
  v77 = (uint64_t)v130;
  sub_23DF89C1C((uint64_t)v139, v73, &qword_256D1D5E0);
  if (!v61(v75, 1, v72))
    *(_BYTE *)(v75 + *(int *)(v72 + 28)) = 0;
  if (!v61(v73, 1, v72))
    *(_BYTE *)(v73 + *(int *)(v72 + 28)) = 1;
  v78 = v129;
  sub_23DF89C1C(v75, v129, &qword_256D1D5E0);
  if (v61(v78, 1, v72) == 1)
  {
    v77 = v78;
  }
  else
  {
    v79 = v119;
    sub_23DF89384(v78, v119, type metadata accessor for Device.Control);
    sub_23DF89C1C(v73, v77, &qword_256D1D5E0);
    if (v61(v77, 1, v72) != 1)
    {
      v95 = v77;
      v96 = v113;
      sub_23DF89384(v95, v113, type metadata accessor for Device.Control);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v97 = type metadata accessor for Device.ControlGroup(0);
      v98 = *(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80);
      v99 = (v98 + 32) & ~v98;
      v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_23E138050;
      v100 = v81 + v99;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
      v101 = *(_QWORD *)(v60 + 72);
      v102 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      v103 = swift_allocObject();
      *(_OWORD *)(v103 + 16) = xmmword_23E138410;
      v104 = v103 + v102;
      sub_23DF73E10(v79, v104, type metadata accessor for Device.Control);
      sub_23DF73E10(v96, v104 + v101, type metadata accessor for Device.Control);
      v105 = (uint64_t)v114;
      *v114 = v103;
      swift_storeEnumTagMultiPayload();
      v106 = (uint64_t *)(v136 + *(int *)(v137 + 28));
      v108 = *v106;
      v107 = v106[1];
      v109 = *(int *)(v97 + 24);
      v110 = (_QWORD *)(v100 + *(int *)(v97 + 20));
      v111 = (_QWORD *)(v100 + v109);
      sub_23DF89384(v105, v100, type metadata accessor for Device.ControlGroup.LayoutType);
      *v110 = 0;
      v110[1] = 0;
      *v111 = v108;
      v111[1] = v107;
      v63 = v133;
      v68 = v134;
      v75 = v135;
      swift_bridgeObjectRetain();
      sub_23DF73E54(v96, type metadata accessor for Device.Control);
      v94 = v79;
      goto LABEL_19;
    }
    sub_23DF73E54(v79, type metadata accessor for Device.Control);
  }
  sub_23DF89C7C(v77, &qword_256D1D5E0);
  v80 = v121;
  sub_23DF89C1C(v75, v121, &qword_256D1D5E0);
  if (v61(v80, 1, v72) != 1)
  {
    v82 = v80;
    v83 = v63;
    v84 = v115;
    sub_23DF89384(v82, v115, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v85 = type metadata accessor for Device.ControlGroup(0);
    v86 = *(unsigned __int8 *)(*(_QWORD *)(v85 - 8) + 80);
    v87 = (v86 + 32) & ~v86;
    v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_23E138050;
    v88 = v81 + v87;
    sub_23DF73E10(v84, v88, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v89 = (uint64_t *)(v136 + *(int *)(v137 + 28));
    v91 = *v89;
    v90 = v89[1];
    v92 = (_QWORD *)(v88 + *(int *)(v85 + 20));
    v93 = (_QWORD *)(v88 + *(int *)(v85 + 24));
    *v92 = 0;
    v92[1] = 0;
    *v93 = v91;
    v93[1] = v90;
    swift_bridgeObjectRetain();
    v94 = v84;
    v63 = v83;
LABEL_19:
    sub_23DF73E54(v94, type metadata accessor for Device.Control);
    goto LABEL_20;
  }
  sub_23DF89C7C(v80, &qword_256D1D5E0);
  v81 = MEMORY[0x24BEE4AF8];
LABEL_20:
  sub_23DF89C7C(v68, &qword_256D1D5E0);
  sub_23DF89C7C(v63, &qword_256D1D5E0);
  sub_23DF89C7C((uint64_t)v139, &qword_256D1D5E0);
  sub_23DF89C7C((uint64_t)v138, &qword_256D1D530);
  sub_23DF89C7C((uint64_t)v131, &qword_256D1D530);
  sub_23DF89C7C(v73, &qword_256D1D5E0);
  sub_23DF89C7C(v75, &qword_256D1D5E0);
  return v81;
}

uint64_t sub_23E0253E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s3FanVMa_0()
{
  return &_s3FanVN_0;
}

uint64_t sub_23E02543C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  unint64_t v34;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21BA0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E1356DC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  sub_23E025750(a3, a2, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_23DF89C7C((uint64_t)v13, &qword_256D21BA0);
    v19 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a4, 1, 1, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject();
    v33 = xmmword_23E138050;
    *(_OWORD *)(v24 + 16) = xmmword_23E138050;
    v25 = v24 + v23 + *(int *)(v21 + 48);
    (*(void (**)(void))(v15 + 16))();
    *(_QWORD *)(v25 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v25 = v18;
    v34 = sub_23E0ECA08(v24);
    v26 = sub_23E135538();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
    v27 = sub_23E134C80();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v33;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 16))(v30 + v29, a3, v27);
    v31 = sub_23E0E212C(v30);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *a4 = v34;
    a4[1] = 0;
    v32 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    sub_23DF73D88((uint64_t)v10, (uint64_t)a4 + *(int *)(v32 + 24));
    *(unint64_t *)((char *)a4 + *(int *)(v32 + 28)) = v31;
    return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a4, 0, 1, v32);
  }
}

uint64_t sub_23E025750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  void (*v45)(_BYTE *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  int v48;
  _QWORD *v49;
  void (*v50)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _QWORD *v78;
  void (*v79)(_BYTE *, uint64_t);
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_BYTE *, _QWORD, uint64_t, uint64_t);
  _BYTE *v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  char v91;
  uint64_t v92;
  _QWORD *v93;
  void (*v94)(_BYTE *, uint64_t);
  _BYTE *v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  char v99;
  void (*v100)(_BYTE *, uint64_t);
  _BYTE v102[12];
  int v103;
  _BYTE *v104;
  _BYTE *v105;
  unsigned int v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  void (*v112)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v120)(_BYTE *, uint64_t, uint64_t);
  void (*v121)(_BYTE *, uint64_t);
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  void (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v130 = a2;
  v128 = a3;
  v4 = sub_23E134C80();
  v123 = *(_QWORD **)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v110 = &v102[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B18);
  v6 = MEMORY[0x24BDAC7A8](v129);
  v108 = &v102[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  v125 = &v102[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v102[-v10];
  v12 = sub_23E1356DC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v102[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v107 = &v102[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v114 = &v102[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v22 = &v102[-v21];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v104 = &v102[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v113 = &v102[-v27];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v109 = &v102[-v29];
  v30 = MEMORY[0x24BDAC7A8](v28);
  v105 = &v102[-v31];
  v32 = MEMORY[0x24BDAC7A8](v30);
  v126 = &v102[-v33];
  v34 = MEMORY[0x24BDAC7A8](v32);
  v116 = &v102[-v35];
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = &v102[-v37];
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = &v102[-v40];
  MEMORY[0x24BDAC7A8](v39);
  v43 = &v102[-v42];
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104);
  v106 = *MEMORY[0x24BE4E238];
  v127 = v44;
  ((void (*)(_BYTE *))v44)(v15);
  v122 = a1 + *(int *)(type metadata accessor for HAPControlSolver.Source() + 68);
  sub_23E135A48();
  v117 = v12;
  v118 = v13;
  v45 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v115 = v15;
  v121 = v45;
  v45(v15, v12);
  v46 = sub_23E1359AC();
  v47 = *(_QWORD *)(v46 - 8);
  v120 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48);
  v48 = v120(v22, 1, v46);
  v124 = v46;
  v111 = v47;
  if (v48 == 1)
  {
    sub_23DF89C7C((uint64_t)v22, &qword_256D1D530);
    v49 = v123;
    v50 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v123[7];
    v50(v43, 1, 1, v4);
  }
  else
  {
    sub_23E135988();
    (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v22, v46);
    v49 = v123;
    v50 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v123[7];
    v50(v43, 0, 1, v4);
  }
  v51 = (uint64_t)v38;
  v52 = (uint64_t)v125;
  v119 = (void (*)(_BYTE *, uint64_t, uint64_t))v49[2];
  v119(v41, v130, v4);
  v50(v41, 0, 1, v4);
  v53 = (uint64_t)&v11[*(int *)(v129 + 48)];
  sub_23DF89C1C((uint64_t)v43, (uint64_t)v11, &qword_256D1D7E8);
  sub_23DF89C1C((uint64_t)v41, v53, &qword_256D1D7E8);
  v54 = (_QWORD *)v49[6];
  v55 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v54)(v11, 1, v4);
  v123 = v54;
  if (v55 == 1)
  {
    sub_23DF89C7C((uint64_t)v41, &qword_256D1D7E8);
    sub_23DF89C7C((uint64_t)v43, &qword_256D1D7E8);
    v56 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v54)(v53, 1, v4);
    v57 = v126;
    if (v56 == 1)
    {
      sub_23DF89C7C((uint64_t)v11, &qword_256D1D7E8);
      v58 = v117;
      v59 = v127;
LABEL_22:
      v81 = v128;
      v82 = v106;
LABEL_32:
      v59(v81, v82, v58);
LABEL_35:
      v89 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v128, v89, 1, v58);
    }
    goto LABEL_9;
  }
  sub_23DF89C1C((uint64_t)v11, v51, &qword_256D1D7E8);
  v60 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v54)(v53, 1, v4);
  v61 = v51;
  v57 = v126;
  if (v60 == 1)
  {
    sub_23DF89C7C((uint64_t)v41, &qword_256D1D7E8);
    sub_23DF89C7C((uint64_t)v43, &qword_256D1D7E8);
    ((void (*)(uint64_t, uint64_t))v49[1])(v61, v4);
LABEL_9:
    sub_23DF89C7C((uint64_t)v11, &qword_256D21B18);
    v58 = v117;
    v59 = v127;
    goto LABEL_10;
  }
  v77 = v110;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v49[4])(v110, v53, v4);
  sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v103 = sub_23E137158();
  v112 = v50;
  v78 = v49;
  v79 = (void (*)(_BYTE *, uint64_t))v49[1];
  v80 = v77;
  v52 = (uint64_t)v125;
  v79(v80, v4);
  sub_23DF89C7C((uint64_t)v41, &qword_256D1D7E8);
  sub_23DF89C7C((uint64_t)v43, &qword_256D1D7E8);
  v79((_BYTE *)v61, v4);
  v49 = v78;
  v50 = v112;
  sub_23DF89C7C((uint64_t)v11, &qword_256D1D7E8);
  v58 = v117;
  v59 = v127;
  if ((v103 & 1) != 0)
    goto LABEL_22;
LABEL_10:
  v62 = v115;
  LODWORD(v125) = *MEMORY[0x24BE4E368];
  ((void (*)(_BYTE *))v59)(v115);
  v63 = (uint64_t)v114;
  sub_23E135A48();
  v121(v62, v58);
  v64 = v124;
  if (v120((_BYTE *)v63, 1, v124) == 1)
  {
    sub_23DF89C7C(v63, &qword_256D1D530);
    v65 = 1;
    v66 = v116;
  }
  else
  {
    v67 = v63;
    v66 = v116;
    sub_23E135988();
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v67, v64);
    v65 = 0;
  }
  v50(v66, v65, 1, v4);
  v119(v57, v130, v4);
  v112 = v50;
  v50(v57, 0, 1, v4);
  v68 = v52 + *(int *)(v129 + 48);
  sub_23DF89C1C((uint64_t)v66, v52, &qword_256D1D7E8);
  sub_23DF89C1C((uint64_t)v57, v68, &qword_256D1D7E8);
  v69 = (uint64_t)v66;
  v70 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v123;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v123)(v52, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v57, &qword_256D1D7E8);
    sub_23DF89C7C(v69, &qword_256D1D7E8);
    if (v70(v68, 1, v4) == 1)
    {
      sub_23DF89C7C(v52, &qword_256D1D7E8);
      v59 = v127;
LABEL_31:
      v81 = v128;
      v82 = v125;
      goto LABEL_32;
    }
    goto LABEL_18;
  }
  v71 = v105;
  sub_23DF89C1C(v52, (uint64_t)v105, &qword_256D1D7E8);
  if (v70(v68, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v126, &qword_256D1D7E8);
    sub_23DF89C7C((uint64_t)v116, &qword_256D1D7E8);
    ((void (*)(_BYTE *, uint64_t))v49[1])(v71, v4);
LABEL_18:
    sub_23DF89C7C(v52, &qword_256D21B18);
    v72 = v124;
    v59 = v127;
    v73 = (uint64_t)v109;
    goto LABEL_19;
  }
  v90 = v110;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v49[4])(v110, v68, v4);
  sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v91 = sub_23E137158();
  v92 = v52;
  v93 = v49;
  v94 = (void (*)(_BYTE *, uint64_t))v49[1];
  v95 = v90;
  v73 = (uint64_t)v109;
  v94(v95, v4);
  sub_23DF89C7C((uint64_t)v126, &qword_256D1D7E8);
  sub_23DF89C7C((uint64_t)v116, &qword_256D1D7E8);
  v94(v71, v4);
  v49 = v93;
  sub_23DF89C7C(v92, &qword_256D1D7E8);
  v72 = v124;
  v59 = v127;
  if ((v91 & 1) != 0)
    goto LABEL_31;
LABEL_19:
  v74 = *MEMORY[0x24BE4E2B8];
  v59((uint64_t)v62, v74, v58);
  v75 = (uint64_t)v107;
  sub_23E135A48();
  v121(v62, v58);
  if (v120((_BYTE *)v75, 1, v72) == 1)
  {
    sub_23DF89C7C(v75, &qword_256D1D530);
    v76 = 1;
  }
  else
  {
    sub_23E135988();
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v75, v72);
    v76 = 0;
  }
  v83 = (uint64_t)v108;
  v84 = v112;
  v85 = v113;
  v112((_BYTE *)v73, v76, 1, v4);
  v119(v85, v130, v4);
  v84(v85, 0, 1, v4);
  v86 = v83 + *(int *)(v129 + 48);
  sub_23DF89C1C(v73, v83, &qword_256D1D7E8);
  sub_23DF89C1C((uint64_t)v85, v86, &qword_256D1D7E8);
  v87 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v123;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v123)(v83, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v85, &qword_256D1D7E8);
    sub_23DF89C7C(v73, &qword_256D1D7E8);
    if (v87(v86, 1, v4) == 1)
    {
      sub_23DF89C7C(v83, &qword_256D1D7E8);
LABEL_34:
      v127(v128, v74, v58);
      goto LABEL_35;
    }
  }
  else
  {
    v88 = v104;
    sub_23DF89C1C(v83, (uint64_t)v104, &qword_256D1D7E8);
    if (v87(v86, 1, v4) != 1)
    {
      v96 = v73;
      v97 = v88;
      v98 = v110;
      ((void (*)(_BYTE *, uint64_t, uint64_t))v49[4])(v110, v86, v4);
      sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v99 = sub_23E137158();
      v100 = (void (*)(_BYTE *, uint64_t))v49[1];
      v100(v98, v4);
      sub_23DF89C7C((uint64_t)v113, &qword_256D1D7E8);
      sub_23DF89C7C(v96, &qword_256D1D7E8);
      v100(v97, v4);
      sub_23DF89C7C(v83, &qword_256D1D7E8);
      if ((v99 & 1) == 0)
      {
        v89 = 1;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v128, v89, 1, v58);
      }
      goto LABEL_34;
    }
    sub_23DF89C7C((uint64_t)v113, &qword_256D1D7E8);
    sub_23DF89C7C(v73, &qword_256D1D7E8);
    ((void (*)(_BYTE *, uint64_t))v49[1])(v88, v4);
  }
  sub_23DF89C7C(v83, &qword_256D21B18);
  v89 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v128, v89, 1, v58);
}

uint64_t sub_23E026318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  double v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  void (*v22)(unint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t *v51;
  __int128 v52;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1356DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E13534C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (double *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  if ((*(unsigned int (**)(double *, uint64_t))(v14 + 88))(v16, v13) == *MEMORY[0x24BE4DD08])
  {
    (*(void (**)(double *, uint64_t))(v14 + 96))(v16, v13);
    v17 = *v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F8);
    v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v19 = swift_allocObject();
    v52 = xmmword_23E138050;
    *(_OWORD *)(v19 + 16) = xmmword_23E138050;
    v20 = v19 + v18;
    v21 = *MEMORY[0x24BE4E238];
    v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 104);
    v22(v20, *MEMORY[0x24BE4E238], v9);
    v23 = sub_23E0E23A0(v19);
    v51 = a3;
    v24 = v12;
    v25 = a2;
    v26 = v23;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v50 = v8;
    v27 = v25;
    LOBYTE(v19) = HAPControlSolver.Source.has(characteristicKinds:)(v26);
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      v28 = v21;
    else
      v28 = *MEMORY[0x24BE4E368];
    v22((unint64_t)v24, v28, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(_QWORD *)(v30 + 72);
    v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_23E138410;
    v34 = v33 + v32;
    v35 = v34 + *(int *)(v29 + 48);
    v22(v34, *MEMORY[0x24BE4E268], v9);
    *(_QWORD *)(v35 + 24) = MEMORY[0x24BEE13C8];
    *(double *)v35 = v17;
    v36 = v34 + v31 + *(int *)(v29 + 48);
    (*(void (**)(void))(v10 + 16))();
    *(_QWORD *)(v36 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v36 = v17 > 0.0;
    v49 = sub_23E0ECA08(v33);
    v37 = sub_23E135538();
    v38 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v50, 1, 1, v37);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
    v39 = sub_23E134C80();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v52;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 16))(v42 + v41, v27, v39);
    v43 = sub_23E0E212C(v42);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v24, v9);
    v44 = v51;
    *v51 = v49;
    v44[1] = 0;
    v45 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    sub_23DF73D88(v38, (uint64_t)v44 + *(int *)(v45 + 24));
    *(unint64_t *)((char *)v44 + *(int *)(v45 + 28)) = v43;
    return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v14 + 8))(v16, v13);
    v47 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a3, 1, 1, v47);
  }
}

uint64_t sub_23E026760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  unsigned int v62;
  void (*v63)(_QWORD);
  uint64_t v64;
  char v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t, int *);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  char v89;
  char *v90;
  uint64_t v91;
  double v92;
  char v93;
  char v94;
  double *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  unsigned int (*v133)(uint64_t, uint64_t, int *);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v189;
  char *v190;
  unsigned int v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t (*v196)(uint64_t, uint64_t, uint64_t);
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  double *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  void (*v222)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  void (*v232)(char *, uint64_t);
  uint64_t v233;
  uint64_t v234;
  __int128 v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;

  v242 = a1;
  v226 = type metadata accessor for AccessoryControlInfo(0);
  v237 = *(_QWORD *)(v226 - 8);
  v1 = MEMORY[0x24BDAC7A8](v226);
  v194 = (uint64_t)&v189 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v193 = (uint64_t)&v189 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v229 = (char *)&v189 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEC8);
  MEMORY[0x24BDAC7A8](v6);
  v190 = (char *)&v189 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v217);
  v218 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for AccessoryControlInfo.State(0);
  v9 = MEMORY[0x24BDAC7A8](v210);
  v212 = (uint64_t)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v195 = (uint64_t)&v189 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v215 = (uint64_t)&v189 - v13;
  v216 = sub_23E134C80();
  v214 = *(_QWORD *)(v216 - 8);
  MEMORY[0x24BDAC7A8](v216);
  v213 = (char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_23E135958();
  v205 = *(_QWORD *)(v206 - 8);
  MEMORY[0x24BDAC7A8](v206);
  v203 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_23E13534C();
  v202 = *(_QWORD *)(v204 - 8);
  MEMORY[0x24BDAC7A8](v204);
  v201 = (double *)((char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v208 = type metadata accessor for Device.Control.IncrementalState(0);
  v207 = *(_QWORD *)(v208 - 8);
  MEMORY[0x24BDAC7A8](v208);
  v209 = (char *)&v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_23E135520();
  v199 = *(_QWORD *)(v200 - 8);
  MEMORY[0x24BDAC7A8](v200);
  v198 = (char *)&v189 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v19);
  v225 = (uint64_t)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23E1359AC();
  v22 = *(_QWORD *)(v21 - 8);
  v238 = v21;
  v239 = v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v211 = (char *)&v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v192 = (char *)&v189 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v197 = (char *)&v189 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v219 = (uint64_t)&v189 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v228 = (char *)&v189 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v227 = (uint64_t)&v189 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v230 = (char *)&v189 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v231 = (char *)&v189 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v240 = (uint64_t)&v189 - v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v223 = (char *)&v189 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v196 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v189 - v44);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v224 = (uint64_t)&v189 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v241 = (uint64_t)&v189 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v189 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v236 = (char *)&v189 - v52;
  v53 = sub_23E1356DC();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v57 = (char *)&v189 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v55);
  v59 = (char *)&v189 - v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F8);
  v60 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v61 = swift_allocObject();
  v235 = xmmword_23E138050;
  *(_OWORD *)(v61 + 16) = xmmword_23E138050;
  v62 = *MEMORY[0x24BE4E238];
  v63 = *(void (**)(_QWORD))(v54 + 104);
  ((void (*)(unint64_t, _QWORD, uint64_t))v63)(v61 + v60, *MEMORY[0x24BE4E238], v53);
  v64 = sub_23E0E23A0(v61);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v65 = HAPControlSolver.Source.has(characteristicKinds:)(v64);
  swift_bridgeObjectRelease();
  v66 = (v65 & 1) == 0;
  v67 = (uint64_t)v236;
  if (v66)
    v68 = *MEMORY[0x24BE4E368];
  else
    v68 = v62;
  ((void (*)(char *, uint64_t, uint64_t))v63)(v59, v68, v53);
  v234 = type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  v191 = *MEMORY[0x24BE4E268];
  v63(v57);
  sub_23E135A48();
  v69 = *(void (**)(char *, uint64_t))(v54 + 8);
  v69(v57, v53);
  ((void (*)(char *, _QWORD, uint64_t))v63)(v57, *MEMORY[0x24BE4E2B8], v53);
  sub_23E135A48();
  v232 = v69;
  v233 = v53;
  v70 = v53;
  v71 = v239;
  v69(v57, v70);
  v72 = v238;
  v73 = (int *)v226;
  v222 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v237 + 56);
  v222(v240, 1, 1, v226);
  v221 = v51;
  v74 = v224;
  sub_23DF89C1C((uint64_t)v51, v224, &qword_256D1D530);
  v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v76 = v75(v74, 1, v72);
  v220 = v59;
  if (v76 == 1)
  {
    v77 = v242;
    sub_23DF89C7C(v74, &qword_256D1D530);
    v78 = (uint64_t)v196;
    sub_23DF89C1C(v67, (uint64_t)v196, &qword_256D1D530);
    v79 = v72;
    if (v75(v78, 1, v72) == 1)
    {
      sub_23DF89C7C(v78, &qword_256D1D530);
      v80 = (uint64_t)v230;
      v81 = v237;
      v82 = (uint64_t)v223;
      v83 = (void (*)(char *, uint64_t, uint64_t, int *))v222;
      v222((uint64_t)v230, 1, 1, (uint64_t)v73);
    }
    else
    {
      v118 = v239;
      v119 = (uint64_t)v192;
      (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v192, v78, v72);
      type metadata accessor for AccessoryControlSolver.HAP();
      v120 = (uint64_t)v218;
      swift_storeEnumTagMultiPayload();
      v121 = v215;
      sub_23E12C404(v77, v119, v215);
      sub_23DF73E54(v120, type metadata accessor for ControlTextModifier.Config);
      v196 = v75;
      v122 = v213;
      sub_23E135988();
      sub_23DF73E10(v121, v195, type metadata accessor for AccessoryControlInfo.State);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
      v123 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
      v124 = (v123 + 32) & ~v123;
      v125 = swift_allocObject();
      *(_OWORD *)(v125 + 16) = v235;
      sub_23DF73E10(v77, v125 + v124, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23DF73E54(v121, type metadata accessor for AccessoryControlInfo.State);
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v119, v79);
      v126 = (uint64_t *)(v77 + *(int *)(v234 + 52));
      v128 = *v126;
      v127 = v126[1];
      v129 = (uint64_t)v231;
      v130 = &v231[v73[7]];
      v131 = v73[9];
      v132 = v122;
      v75 = v196;
      (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v231, v132, v216);
      sub_23DF89384(v195, v129 + v73[5], type metadata accessor for AccessoryControlInfo.State);
      *(_QWORD *)(v129 + v73[11]) = v125;
      *(_BYTE *)(v129 + v73[6]) = 0;
      *(_QWORD *)v130 = v128;
      *((_QWORD *)v130 + 1) = v127;
      *(_WORD *)(v129 + v73[8]) = 1027;
      *(_BYTE *)(v129 + v131) = 12;
      *(_BYTE *)(v129 + v73[10]) = 1;
      v83 = (void (*)(char *, uint64_t, uint64_t, int *))v222;
      v222(v129, 0, 1, (uint64_t)v73);
      swift_bridgeObjectRetain();
      sub_23E027C0C(v129, v240);
      v80 = (uint64_t)v230;
      v81 = v237;
      v82 = (uint64_t)v223;
      v83(v230, 1, 1, v73);
    }
  }
  else
  {
    v196 = v75;
    v84 = v197;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v197, v74, v72);
    v85 = v199;
    v86 = (uint64_t)v198;
    v87 = v200;
    (*(void (**)(char *, _QWORD, uint64_t))(v199 + 104))(v198, *MEMORY[0x24BE4DF20], v200);
    v88 = 0.0;
    sub_23E0ABBCC(v242, v86, v225, 0.0, 100.0, 1.0);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v87);
    v89 = sub_23E135AA8();
    v90 = v84;
    if (v89 == 2 || (v89 & 1) != 0)
    {
      v91 = v233;
      ((void (*)(char *, _QWORD, uint64_t))v63)(v57, v191, v233);
      v92 = COERCE_DOUBLE(sub_23E135AC0());
      v94 = v93;
      v232(v57, v91);
      if ((v94 & 1) != 0)
        v88 = 0.0;
      else
        v88 = v92;
    }
    v95 = v201;
    *v201 = v88;
    v96 = v202;
    v97 = v204;
    (*(void (**)(double *, _QWORD, uint64_t))(v202 + 104))(v95, *MEMORY[0x24BE4DD08], v204);
    v98 = v203;
    sub_23E135964();
    v99 = sub_23E13594C();
    (*(void (**)(char *, uint64_t))(v205 + 8))(v98, v206);
    v100 = (uint64_t)v209;
    (*(void (**)(char *, double *, uint64_t))(v96 + 32))(v209, v95, v97);
    v101 = v208;
    *(_BYTE *)(v100 + *(int *)(v208 + 20)) = v99 & 1;
    v102 = v90;
    v103 = v213;
    sub_23E135988();
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30);
    v105 = v215;
    v106 = v215 + *(int *)(v104 + 48);
    v107 = v225;
    sub_23DF73E10(v225, v215, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E10(v100, v106, type metadata accessor for Device.Control.IncrementalState);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v207 + 56))(v106, 0, 1, v101);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v108 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v109 = (v108 + 32) & ~v108;
    v110 = swift_allocObject();
    *(_OWORD *)(v110 + 16) = v235;
    v111 = v242;
    sub_23DF73E10(v242, v110 + v109, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    sub_23DF73E54(v100, type metadata accessor for Device.Control.IncrementalState);
    sub_23DF73E54(v107, type metadata accessor for Device.Control.IncrementalConfig);
    v79 = v238;
    (*(void (**)(char *, uint64_t))(v239 + 8))(v102, v238);
    v112 = (uint64_t *)(v111 + *(int *)(v234 + 52));
    v114 = *v112;
    v113 = v112[1];
    v115 = (uint64_t)v231;
    v116 = &v231[v73[7]];
    v117 = v73[9];
    (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v231, v103, v216);
    sub_23DF89384(v105, v115 + v73[5], type metadata accessor for AccessoryControlInfo.State);
    *(_QWORD *)(v115 + v73[11]) = v110;
    *(_BYTE *)(v115 + v73[6]) = 0;
    *(_QWORD *)v116 = v114;
    *((_QWORD *)v116 + 1) = v113;
    *(_WORD *)(v115 + v73[8]) = 1028;
    *(_BYTE *)(v115 + v117) = 12;
    *(_BYTE *)(v115 + v73[10]) = 1;
    v83 = (void (*)(char *, uint64_t, uint64_t, int *))v222;
    v222(v115, 0, 1, (uint64_t)v73);
    swift_bridgeObjectRetain();
    sub_23E027C0C(v115, v240);
    v80 = (uint64_t)v230;
    v81 = v237;
    v82 = (uint64_t)v223;
    v75 = v196;
    v83(v230, 1, 1, v73);
  }
  sub_23DF89C1C(v241, v82, &qword_256D1D530);
  if (v75(v82, 1, v79) == 1)
  {
    sub_23DF89C7C(v82, &qword_256D1D530);
    v133 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v81 + 48);
  }
  else
  {
    v134 = (uint64_t)v211;
    (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v211, v82, v79);
    type metadata accessor for AccessoryControlSolver.HAP();
    v135 = (uint64_t)v218;
    swift_storeEnumTagMultiPayload();
    v136 = v212;
    v137 = v242;
    sub_23E12C404(v242, v134, v212);
    sub_23DF73E54(v135, type metadata accessor for ControlTextModifier.Config);
    v138 = (uint64_t)v231;
    sub_23E135988();
    sub_23DF73E10(v136, v138 + v73[5], type metadata accessor for AccessoryControlInfo.State);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v139 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v140 = (v139 + 32) & ~v139;
    v141 = swift_allocObject();
    *(_OWORD *)(v141 + 16) = v235;
    sub_23DF73E10(v137, v141 + v140, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v142 = (uint64_t *)(v137 + *(int *)(v234 + 52));
    v143 = *v142;
    v144 = v142[1];
    v145 = (_QWORD *)(v138 + v73[7]);
    v146 = v73[9];
    *(_QWORD *)(v138 + v73[11]) = v141;
    *(_BYTE *)(v138 + v73[6]) = 0;
    *v145 = v143;
    v145[1] = v144;
    *(_WORD *)(v138 + v73[8]) = 1028;
    *(_BYTE *)(v138 + v146) = 12;
    *(_BYTE *)(v138 + v73[10]) = 1;
    v83((char *)v138, 0, 1, v73);
    swift_bridgeObjectRetain();
    sub_23E027C0C(v138, v80);
    v133 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v81 + 48);
    if (v133(v80, 1, v73))
    {
      sub_23DF73E54(v136, type metadata accessor for AccessoryControlInfo.State);
      (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v134, v238);
    }
    else
    {
      v147 = type metadata accessor for IconDescriptor();
      v148 = v134;
      v149 = v190;
      v150 = &v190[*(int *)(v147 + 20)];
      v151 = *MEMORY[0x24BE4E598];
      v152 = sub_23E135910();
      v153 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 104);
      v153(v150, v151, v152);
      *v149 = 0x6C632E776F727261;
      v149[1] = 0xEF657369776B636FLL;
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
      v155 = (char *)v149 + *(int *)(v154 + 28);
      v153(&v155[*(int *)(v147 + 20)], v151, v152);
      *(_QWORD *)v155 = 0xD000000000000016;
      *((_QWORD *)v155 + 1) = 0x800000023E144DD0;
      v80 = (uint64_t)v230;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 56))(v149, 0, 1, v154);
      sub_23DFAC324((uint64_t)v149);
      sub_23DF73E54(v212, type metadata accessor for AccessoryControlInfo.State);
      (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v148, v238);
    }
  }
  v156 = (uint64_t)v229;
  v157 = v240;
  v158 = v133(v240, 1, v73);
  v159 = (uint64_t)v228;
  if (!v158)
    *(_BYTE *)(v157 + v73[6]) = 0;
  if (!v133(v80, 1, v73))
    *(_BYTE *)(v80 + v73[6]) = 1;
  if (!v133(v80, 1, v73))
    *(_WORD *)(v80 + v73[8]) = 0;
  v160 = v227;
  sub_23DF89C1C(v80, v227, &qword_256D1F300);
  if (v133(v160, 1, v73) == 1)
  {
    v159 = v160;
  }
  else
  {
    sub_23DF89384(v160, v156, type metadata accessor for AccessoryControlInfo);
    sub_23DF89C1C(v157, v159, &qword_256D1F300);
    if (v133(v159, 1, v73) != 1)
    {
      v174 = v193;
      sub_23DF89384(v159, v193, type metadata accessor for AccessoryControlInfo);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
      v175 = type metadata accessor for AccessoryControlGroup(0);
      v176 = *(unsigned __int8 *)(*(_QWORD *)(v175 - 8) + 80);
      v177 = (v176 + 32) & ~v176;
      v162 = swift_allocObject();
      *(_OWORD *)(v162 + 16) = v235;
      v178 = v162 + v177;
      v179 = v178 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      sub_23DF73E10(v174, v178, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E10(v156, v179, type metadata accessor for AccessoryControlInfo);
      type metadata accessor for AccessoryControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v180 = (uint64_t *)(v242 + *(int *)(v234 + 28));
      v182 = *v180;
      v181 = v180[1];
      v183 = (_QWORD *)(v178 + *(int *)(v175 + 24));
      v184 = (_QWORD *)(v178 + *(int *)(v175 + 20));
      *v184 = v182;
      v184[1] = v181;
      *v183 = 0;
      v183[1] = 0;
      swift_bridgeObjectRetain();
      sub_23DF73E54(v174, type metadata accessor for AccessoryControlInfo);
      v173 = v156;
      goto LABEL_34;
    }
    sub_23DF73E54(v156, type metadata accessor for AccessoryControlInfo);
  }
  sub_23DF89C7C(v159, &qword_256D1F300);
  v161 = v219;
  sub_23DF89C1C(v157, v219, &qword_256D1F300);
  if (v133(v161, 1, v73) != 1)
  {
    v163 = v194;
    sub_23DF89384(v161, v194, type metadata accessor for AccessoryControlInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v164 = type metadata accessor for AccessoryControlGroup(0);
    v165 = *(unsigned __int8 *)(*(_QWORD *)(v164 - 8) + 80);
    v166 = (v165 + 32) & ~v165;
    v162 = swift_allocObject();
    *(_OWORD *)(v162 + 16) = v235;
    v167 = v162 + v166;
    sub_23DF73E10(v163, v167, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v168 = (uint64_t *)(v242 + *(int *)(v234 + 28));
    v170 = *v168;
    v169 = v168[1];
    v171 = (_QWORD *)(v167 + *(int *)(v164 + 24));
    v172 = (_QWORD *)(v167 + *(int *)(v164 + 20));
    *v172 = v170;
    v172[1] = v169;
    *v171 = 0;
    v171[1] = 0;
    swift_bridgeObjectRetain();
    v173 = v163;
LABEL_34:
    sub_23DF73E54(v173, type metadata accessor for AccessoryControlInfo);
    goto LABEL_35;
  }
  sub_23DF89C7C(v161, &qword_256D1F300);
  v162 = MEMORY[0x24BEE4AF8];
LABEL_35:
  v185 = (uint64_t)v221;
  v186 = (uint64_t)v236;
  v187 = v220;
  sub_23DF89C7C(v241, &qword_256D1D530);
  sub_23DF89C7C(v185, &qword_256D1D530);
  sub_23DF89C7C(v186, &qword_256D1D530);
  v232(v187, v233);
  sub_23DF89C7C(v80, &qword_256D1F300);
  sub_23DF89C7C(v157, &qword_256D1F300);
  return v162;
}

uint64_t sub_23E027C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for IconCircleView(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_23DF985F0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
}

uint64_t initializeWithCopy for IconCircleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 88);
  v11 = *(_BYTE *)(a2 + 89);
  swift_retain();
  swift_retain();
  sub_23DF98590(v14, v4, v5, v6, v7, v8, v9, v13, v10, v11);
  *(_QWORD *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v13;
  *(_BYTE *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 89) = v11;
  return a1;
}

uint64_t assignWithCopy for IconCircleView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v23;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v2 + 16);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v8 = *(_QWORD *)(v2 + 56);
  v9 = *(_QWORD *)(v2 + 64);
  v10 = *(_QWORD *)(v2 + 72);
  v11 = *(_QWORD *)(v2 + 80);
  v23 = *(_BYTE *)(v2 + 88);
  LOBYTE(v2) = *(_BYTE *)(v2 + 89);
  sub_23DF98590(v4, v5, v6, v7, v8, v9, v10, v11, v23, v2);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_BYTE *)(a1 + 88);
  v21 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v23;
  *(_BYTE *)(a1 + 89) = v2;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for IconCircleView(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(_BYTE *)(a2 + 88);
  v5 = *(_BYTE *)(a2 + 89);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_BYTE *)(a1 + 88);
  v15 = *(_BYTE *)(a1 + 89);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v4;
  *(_BYTE *)(a1 + 89) = v5;
  sub_23DF985F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconCircleView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 90))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IconCircleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 90) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconCircleView()
{
  return &type metadata for IconCircleView;
}

uint64_t sub_23E027FD8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23E027FE8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v17 = *(_QWORD *)(v1 + 80);
  v8 = *(_BYTE *)(v1 + 88);
  v9 = *(_BYTE *)(v1 + 89);
  v23 = *(_QWORD *)(v1 + 24);
  v24 = v2;
  v25 = v3;
  v26 = v4;
  v15 = v3;
  v16 = v7;
  v27 = v5;
  v28 = v6;
  v29 = v7;
  v30 = v17;
  v10 = v7;
  v31 = v8;
  v32 = v9;
  swift_retain();
  swift_retain();
  sub_23DF98590(v23, v2, v3, v4, v5, v6, v10, v17, v8, v9);
  v11 = v23;
  sub_23DF98590(v23, v2, v15, v4, v5, v6, v10, v17, v8, v9);
  sub_23DF9C754((uint64_t)&v19);
  sub_23DF985F0(v11, v2, v15, v4, v5, v6, v16, v17, v8, v9);
  swift_release();
  swift_release();
  sub_23DF985F0(v11, v2, v15, v4, v5, v6, v16, v17, v8, v9);
  if (v22 == 1)
  {
    swift_retain();
    swift_retain();
  }
  else
  {
    swift_retain();
    swift_getKeyPath();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21BA8);
  sub_23E0283F8();
  sub_23E02843C();
  sub_23E136480();
  result = *(double *)&v19;
  v13 = v20;
  v14 = v21;
  *(_OWORD *)a1 = v19;
  *(_QWORD *)(a1 + 16) = v13;
  *(_BYTE *)(a1 + 24) = v14;
  return result;
}

double sub_23E02822C@<D0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  double result;
  __int128 v4;
  char v5;

  if ((*v1 & 1) == 0)
  {
    swift_getKeyPath();
    swift_retain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21BA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21BD8);
  sub_23E02843C();
  sub_23E0287C0();
  sub_23E136480();
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return result;
}

id sub_23E0282F0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_controlCenterTertiaryCapturingMaterial);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_23E028328()
{
  sub_23E0288D0();
  return sub_23E13645C();
}

uint64_t sub_23E028378()
{
  sub_23E0288D0();
  return sub_23E136408();
}

void sub_23E0283C8()
{
  sub_23E0288D0();
  sub_23E136450();
  __break(1u);
}

unint64_t sub_23E0283F8()
{
  unint64_t result;

  result = qword_256D21BB0;
  if (!qword_256D21BB0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CB98, &type metadata for IconCircleView.ControlCenterMaterialView);
    atomic_store(result, (unint64_t *)&qword_256D21BB0);
  }
  return result;
}

unint64_t sub_23E02843C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21BB8;
  if (!qword_256D21BB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21BA8);
    v2[0] = sub_23DFE19B4();
    v2[1] = sub_23DF89B88(&qword_256D20100, &qword_256D20108, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21BB8);
  }
  return result;
}

uint64_t destroy for IconCircleView.ControlCenterMaterialView()
{
  swift_release();
  return swift_release();
}

uint64_t _s22HomeAccessoryControlUI14IconCircleViewV25ControlCenterMaterialViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IconCircleView.ControlCenterMaterialView(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for IconCircleView.ControlCenterMaterialView(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IconCircleView.ControlCenterMaterialView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IconCircleView.ControlCenterMaterialView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconCircleView.ControlCenterMaterialView()
{
  return &type metadata for IconCircleView.ControlCenterMaterialView;
}

uint64_t storeEnumTagSinglePayload for IconCircleView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E0286B4 + 4 * byte_23E13CA65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E0286E8 + 4 * byte_23E13CA60[v4]))();
}

uint64_t sub_23E0286E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0286F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E0286F8);
  return result;
}

uint64_t sub_23E028704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E02870CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E028710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E028718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IconCircleView.Style()
{
  return &type metadata for IconCircleView.Style;
}

uint64_t sub_23E028734()
{
  return sub_23DF98488(&qword_256D21BC0, &qword_256D21BC8, (uint64_t (*)(void))sub_23E0283F8, (uint64_t (*)(void))sub_23E02843C);
}

unint64_t sub_23E02876C()
{
  unint64_t result;

  result = qword_256D21BD0;
  if (!qword_256D21BD0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CB70, &type metadata for IconCircleView.Style);
    atomic_store(result, (unint64_t *)&qword_256D21BD0);
  }
  return result;
}

uint64_t sub_23E0287B0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E0287C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21BE0;
  if (!qword_256D21BE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21BD8);
    v2[0] = sub_23E028844();
    v2[1] = sub_23DF89B88(&qword_256D21BF0, &qword_256D21BF8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21BE0);
  }
  return result;
}

unint64_t sub_23E028844()
{
  unint64_t result;

  result = qword_256D21BE8;
  if (!qword_256D21BE8)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CC88, &type metadata for IconCircleView.ControlCenterMaterialView.MaterialView);
    atomic_store(result, (unint64_t *)&qword_256D21BE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for IconCircleView.ControlCenterMaterialView.MaterialView()
{
  return &type metadata for IconCircleView.ControlCenterMaterialView.MaterialView;
}

uint64_t sub_23E028898()
{
  return sub_23DF98488(&qword_256D21C00, &qword_256D21C08, (uint64_t (*)(void))sub_23E02843C, (uint64_t (*)(void))sub_23E0287C0);
}

unint64_t sub_23E0288D0()
{
  unint64_t result;

  result = qword_256D21C10;
  if (!qword_256D21C10)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CBF8, &type metadata for IconCircleView.ControlCenterMaterialView.MaterialView);
    atomic_store(result, (unint64_t *)&qword_256D21C10);
  }
  return result;
}

ValueMetadata *_s9SprinklerVMa()
{
  return &_s9SprinklerVN;
}

uint64_t sub_23E028924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(char *, _QWORD, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = a2;
  v3 = sub_23E134C80();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryControlInfo.State(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v58 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (uint64_t)&v48 - v8;
  v9 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v11);
  v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E1359AC();
  v56 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E1356DC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23E134E9C();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888];
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for HAPControlSolver.Source();
  v60 = a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BE4D7F8], v19);
  sub_23DF73F28(&qword_256D1D820, v20, MEMORY[0x24BE4D8B8]);
  sub_23E13723C();
  sub_23E13723C();
  if (v64 == v62 && v65 == v63)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
  }
  else
  {
    v24 = sub_23E137614();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
    if ((v24 & 1) == 0)
    {
LABEL_9:
      v31 = type metadata accessor for AccessoryControlInfo(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v61, 1, 1, v31);
    }
  }
  v25 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 104);
  v25(v18, *MEMORY[0x24BE4E258], v15);
  v26 = sub_23E135AA8();
  v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v18, v15);
  if (v26 != 2 && (v26 & 1) == 0)
    goto LABEL_9;
  v25(v18, *MEMORY[0x24BE4E368], v15);
  v28 = (uint64_t)v55;
  sub_23E135A48();
  v27(v18, v15);
  v30 = v56;
  v29 = v57;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v28, 1, v57) == 1)
  {
    sub_23DF89C7C(v28, &qword_256D1D530);
    goto LABEL_9;
  }
  v33 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v49, v28, v29);
  v34 = v50;
  v35 = v60;
  sub_23DFF24D0(v50);
  type metadata accessor for AccessoryControlSolver.HAP();
  v36 = v51;
  sub_23E12C404(v35, v33, v51);
  v37 = v52;
  sub_23E135988();
  sub_23DF73E10(v36, v58, type metadata accessor for AccessoryControlInfo.State);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v38 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_23E138050;
  sub_23DF73E10(v35, v40 + v39, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF73E54(v36, type metadata accessor for AccessoryControlInfo.State);
  sub_23DF73E54((uint64_t)v34, type metadata accessor for ControlTextModifier.Config);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
  v41 = *(int *)(v59 + 52);
  LOBYTE(v34) = *(_BYTE *)(v35 + *(int *)(v59 + 48));
  v43 = *(_QWORD *)(v35 + v41);
  v42 = *(_QWORD *)(v35 + v41 + 8);
  v44 = (int *)type metadata accessor for AccessoryControlInfo(0);
  v45 = v61;
  v46 = (_QWORD *)(v61 + v44[7]);
  v47 = v44[9];
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v61, v37, v54);
  sub_23DF89384(v58, v45 + v44[5], type metadata accessor for AccessoryControlInfo.State);
  *(_QWORD *)(v45 + v44[11]) = v40;
  *(_BYTE *)(v45 + v44[6]) = (_BYTE)v34;
  *v46 = v43;
  v46[1] = v42;
  *(_WORD *)(v45 + v44[8]) = 1027;
  *(_BYTE *)(v45 + v47) = 12;
  *(_BYTE *)(v45 + v44[10]) = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v44 - 1) + 56))(v45, 0, 1, v44);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E028EAC(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for HAPControlSolver.Source() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E073E34(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E028F2C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E028F2C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  BOOL v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;

  v152 = type metadata accessor for HAPControlSolver.Source();
  v147 = *(_QWORD *)(v152 - 8);
  v2 = MEMORY[0x24BDAC7A8](v152);
  v143 = (uint64_t)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v153 = (uint64_t)&v135 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v135 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v135 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v145 = (uint64_t)&v135 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v144 = (uint64_t)&v135 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v140 = (uint64_t)&v135 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v139 = (uint64_t)&v135 - v18;
  v156 = a1;
  v19 = a1[1];
  result = sub_23E1375F0();
  if (result >= v19)
  {
    if (v19 < 0)
      goto LABEL_154;
    if (v19)
      return sub_23E0299D8(0, v19, 1, v156);
    return result;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_162;
  v149 = v11;
  v150 = v8;
  v137 = result;
  if (v19 < 2)
  {
    v25 = (char *)MEMORY[0x24BEE4AF8];
    v146 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
    v136 = MEMORY[0x24BEE4AF8];
    if (v19 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_120:
      v127 = v25;
      if (v27 >= 2)
      {
        v128 = *v156;
        do
        {
          v129 = v27 - 2;
          if (v27 < 2)
            goto LABEL_149;
          if (!v128)
            goto LABEL_161;
          v130 = *(_QWORD *)&v127[16 * v129 + 32];
          v131 = *(_QWORD *)&v127[16 * v27 + 24];
          v132 = v148;
          sub_23E029C4C(v128 + *(_QWORD *)(v147 + 72) * v130, v128 + *(_QWORD *)(v147 + 72) * *(_QWORD *)&v127[16 * v27 + 16], v128 + *(_QWORD *)(v147 + 72) * v131, v146);
          v148 = v132;
          if (v132)
            break;
          if (v131 < v130)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v127 = sub_23E073D94((uint64_t)v127);
          if (v129 >= *((_QWORD *)v127 + 2))
            goto LABEL_151;
          v133 = &v127[16 * v129 + 32];
          *(_QWORD *)v133 = v130;
          *((_QWORD *)v133 + 1) = v131;
          v134 = *((_QWORD *)v127 + 2);
          if (v27 > v134)
            goto LABEL_152;
          memmove(&v127[16 * v27 + 16], &v127[16 * v27 + 32], 16 * (v134 - v27));
          *((_QWORD *)v127 + 2) = v134 - 1;
          v27 = v134 - 1;
        }
        while (v134 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v136 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_23E13729C();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v147 + 80);
    v136 = v23;
    v146 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = 0;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v28 = v26;
    v29 = v26 + 1;
    if (v26 + 1 >= v19)
      break;
    v30 = *v156;
    v31 = *(_QWORD *)(v147 + 72);
    v32 = v139;
    sub_23DF73E10(*v156 + v31 * v29, v139, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v151 = v30;
    v155 = v31;
    v33 = v30 + v31 * v28;
    v34 = v140;
    sub_23DF73E10(v33, v140, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v35 = *(int *)(v152 + 28);
    v36 = *(_QWORD *)(v32 + v35);
    v37 = *(_QWORD *)(v32 + v35 + 8);
    v38 = (_QWORD *)(v34 + v35);
    if (v36 == *v38 && v37 == v38[1])
      LODWORD(v154) = 0;
    else
      LODWORD(v154) = sub_23E137614();
    sub_23DF73E54(v140, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    sub_23DF73E54(v139, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v26 = v28 + 2;
    if (v28 + 2 < v19)
    {
      v40 = v28;
      v138 = v25;
      v41 = v155 * v29;
      v42 = v151;
      v43 = v155 * v26;
      while (1)
      {
        v44 = v144;
        sub_23DF73E10(v42 + v43, v144, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v45 = v145;
        sub_23DF73E10(v42 + v41, v145, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v46 = *(int *)(v152 + 28);
        v47 = *(_QWORD *)(v44 + v46);
        v48 = *(_QWORD *)(v44 + v46 + 8);
        v49 = (_QWORD *)(v45 + v46);
        v50 = v47 == *v49 && v48 == v49[1];
        v51 = v50 ? 0 : sub_23E137614();
        sub_23DF73E54(v145, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        sub_23DF73E54(v144, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        if (((v154 ^ v51) & 1) != 0)
          break;
        v42 += v155;
        if (v19 == ++v26)
        {
          v26 = v19;
          break;
        }
      }
      v25 = v138;
      v28 = v40;
    }
    if ((v154 & 1) == 0)
      goto LABEL_48;
    if (v26 < v28)
      goto LABEL_155;
    if (v28 >= v26)
      goto LABEL_48;
    v154 = v19;
    v138 = v25;
    v52 = 0;
    v53 = v155 * (v26 - 1);
    v54 = v28;
    v55 = v26 * v155;
    v56 = v54;
    v142 = v54;
    v57 = v54 * v155;
    v58 = (uint64_t)v150;
    do
    {
      if (v56 != v26 + v52 - 1)
      {
        v59 = v151;
        if (!v151)
          goto LABEL_160;
        v60 = v151 + v57;
        sub_23DF89384(v151 + v57, v143, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        if (v57 < v53 || v60 >= v59 + v55)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 != v53)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_23DF89384(v143, v59 + v53, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v58 = (uint64_t)v150;
      }
      ++v56;
      --v52;
      v53 -= v155;
      v55 -= v155;
      v57 += v155;
    }
    while (v56 < v26 + v52);
    v25 = v138;
    v19 = v154;
    v28 = v142;
    if (v26 < v154)
      goto LABEL_49;
LABEL_72:
    if (v26 < v28)
      goto LABEL_148;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_23E073A18(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v75 = *((_QWORD *)v25 + 2);
    v74 = *((_QWORD *)v25 + 3);
    v27 = v75 + 1;
    v76 = v28;
    if (v75 >= v74 >> 1)
      v25 = sub_23E073A18((char *)(v74 > 1), v75 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v77 = v25 + 32;
    v78 = &v25[16 * v75 + 32];
    *(_QWORD *)v78 = v76;
    *((_QWORD *)v78 + 1) = v26;
    if (v75)
    {
      while (1)
      {
        v79 = v27 - 1;
        if (v27 >= 4)
        {
          v84 = &v77[16 * v27];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_137;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_138;
          v91 = v27 - 2;
          v92 = &v77[16 * v27 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_140;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_143;
          if (v96 >= v87)
          {
            v114 = &v77[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_147;
            v107 = v82 < v117;
            goto LABEL_109;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v108 = *((_QWORD *)v25 + 4);
            v109 = *((_QWORD *)v25 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_103;
          }
          v81 = *((_QWORD *)v25 + 4);
          v80 = *((_QWORD *)v25 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_139;
        v91 = v27 - 2;
        v97 = &v77[16 * v27 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_142;
        v103 = &v77[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_145;
        if (__OFADD__(v101, v106))
          goto LABEL_146;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_109:
          if (v107)
            v79 = v91;
          goto LABEL_111;
        }
LABEL_103:
        if ((v102 & 1) != 0)
          goto LABEL_141;
        v110 = &v77[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_144;
        if (v113 < v101)
          goto LABEL_14;
LABEL_111:
        v118 = v79 - 1;
        if (v79 - 1 >= v27)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v156)
          goto LABEL_159;
        v119 = v26;
        v120 = v25;
        v121 = &v77[16 * v118];
        v122 = *(_QWORD *)v121;
        v123 = &v77[16 * v79];
        v124 = *((_QWORD *)v123 + 1);
        v125 = v148;
        sub_23E029C4C(*v156 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v121, *v156 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v123, *v156 + *(_QWORD *)(v147 + 72) * v124, v146);
        v148 = v125;
        if (v125)
          goto LABEL_131;
        if (v124 < v122)
          goto LABEL_134;
        if (v79 > *((_QWORD *)v120 + 2))
          goto LABEL_135;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v77[16 * v118 + 8] = v124;
        v126 = *((_QWORD *)v120 + 2);
        if (v79 >= v126)
          goto LABEL_136;
        v25 = v120;
        v27 = v126 - 1;
        memmove(&v77[16 * v79], v123 + 16, 16 * (v126 - 1 - v79));
        *((_QWORD *)v120 + 2) = v126 - 1;
        v26 = v119;
        if (v126 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    v19 = v156[1];
    if (v26 >= v19)
      goto LABEL_120;
  }
  ++v26;
LABEL_48:
  v58 = (uint64_t)v150;
  if (v26 >= v19)
    goto LABEL_72;
LABEL_49:
  if (__OFSUB__(v26, v28))
    goto LABEL_153;
  if (v26 - v28 >= v137)
    goto LABEL_72;
  if (__OFADD__(v28, v137))
    goto LABEL_156;
  if (v28 + v137 >= v19)
    v61 = v19;
  else
    v61 = v28 + v137;
  if (v61 >= v28)
  {
    if (v26 != v61)
    {
      v138 = v25;
      v151 = *(_QWORD *)(v147 + 72);
      v154 = v26 * v151;
      v155 = v151 * (v26 - 1);
      v141 = v61;
      v142 = v28;
      do
      {
        v62 = 0;
        v63 = v28;
        while (1)
        {
          v64 = *v156;
          v65 = (uint64_t)v149;
          sub_23DF73E10(v154 + v62 + *v156, (uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          sub_23DF73E10(v155 + v62 + v64, v58, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          v66 = *(int *)(v152 + 28);
          v67 = *(_QWORD *)(v65 + v66);
          v68 = *(_QWORD *)(v65 + v66 + 8);
          v69 = (_QWORD *)(v58 + v66);
          if (v67 == *v69 && v68 == v69[1])
            break;
          v71 = sub_23E137614();
          sub_23DF73E54(v58, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          sub_23DF73E54(v65, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          if ((v71 & 1) == 0)
            goto LABEL_59;
          v72 = *v156;
          if (!*v156)
            goto LABEL_158;
          v73 = v72 + v155 + v62;
          sub_23DF89384(v72 + v154 + v62, v153, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          swift_arrayInitWithTakeFrontToBack();
          sub_23DF89384(v153, v73, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          v58 = (uint64_t)v150;
          v62 -= v151;
          if (v26 == ++v63)
            goto LABEL_59;
        }
        sub_23DF73E54(v58, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        sub_23DF73E54(v65, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
LABEL_59:
        ++v26;
        v155 += v151;
        v154 += v151;
        v28 = v142;
      }
      while (v26 != v141);
      v26 = v141;
      v25 = v138;
    }
    goto LABEL_72;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23E0299D8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a1;
  v36 = type metadata accessor for HAPControlSolver.Source();
  v7 = MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v30 - v14;
  v35 = a3;
  v31 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v39 = v16 * (v35 - 1);
    v34 = v16;
    v38 = v16 * v35;
    v33 = (char *)&v30 - v14;
LABEL_6:
    v17 = 0;
    v18 = v32;
    while (1)
    {
      v19 = *a4;
      sub_23DF73E10(v38 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23DF73E10(v39 + v17 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v20 = *(int *)(v36 + 28);
      v21 = *(_QWORD *)&v15[v20];
      v22 = *(_QWORD *)&v15[v20 + 8];
      v23 = &v11[v20];
      if (v21 == *(_QWORD *)v23 && v22 == *((_QWORD *)v23 + 1))
      {
        sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        result = sub_23DF73E54((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
LABEL_5:
        v39 += v34;
        v38 += v34;
        if (++v35 == v31)
          return result;
        goto LABEL_6;
      }
      v25 = sub_23E137614();
      sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      result = sub_23DF73E54((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      if ((v25 & 1) == 0)
        goto LABEL_5;
      v26 = *a4;
      if (!*a4)
        break;
      v27 = v11;
      v28 = a4;
      v29 = v26 + v39 + v17;
      sub_23DF89384(v26 + v38 + v17, v37, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23DF89384(v37, v29, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v17 -= v34;
      ++v18;
      a4 = v28;
      v11 = v27;
      v15 = v33;
      if (v35 == v18)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E029C4C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  v54 = type metadata accessor for HAPControlSolver.Source();
  v8 = MEMORY[0x24BDAC7A8](v54);
  v53 = (unint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t)&v51 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v51 - v16;
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v21 = (uint64_t)(a2 - a1) / v18;
  v57 = a1;
  v56 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v35 = a4 + v24;
      v55 = a4 + v24;
      v57 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v37 = -v19;
        do
        {
          v38 = a1;
          v39 = v52;
          sub_23DF73E10(v35 + v37, v52, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          v40 = a2 + v37;
          v41 = v53;
          sub_23DF73E10(a2 + v37, v53, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          v42 = *(int *)(v54 + 28);
          v43 = *(_QWORD *)(v39 + v42);
          v44 = *(_QWORD *)(v39 + v42 + 8);
          v45 = (_QWORD *)(v41 + v42);
          if (v43 == *v45 && v44 == v45[1])
            v47 = 0;
          else
            v47 = sub_23E137614();
          v48 = a3 + v37;
          sub_23DF73E54(v53, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          sub_23DF73E54(v52, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          if ((v47 & 1) != 0)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v57 += v37;
          }
          else
          {
            v49 = v55;
            v55 += v37;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              v40 = a2;
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != v49)
                swift_arrayInitWithTakeBackToFront();
              v40 = a2;
            }
          }
          v35 = v55;
          if (v55 <= a4)
            break;
          a2 = v40;
          a3 += v37;
        }
        while (v40 > a1);
      }
LABEL_70:
      sub_23E073C7C(&v57, &v56, (uint64_t *)&v55);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v53 = a4 + v23;
    v55 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_23DF73E10(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        sub_23DF73E10(a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        v26 = *(int *)(v54 + 28);
        v27 = *(_QWORD *)&v17[v26];
        v28 = *(_QWORD *)&v17[v26 + 8];
        v29 = &v14[v26];
        if (v27 == *(_QWORD *)v29 && v28 == *((_QWORD *)v29 + 1))
          break;
        v31 = sub_23E137614();
        sub_23DF73E54((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        sub_23DF73E54((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        if ((v31 & 1) == 0)
          goto LABEL_32;
        v32 = v57;
        v33 = a2 + v19;
        if (v57 < a2 || v57 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          v32 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v57 = v32 + v19;
        a4 = v56;
        if (v56 < v53)
        {
          a2 = v33;
          if (v33 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_23DF73E54((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23DF73E54((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
LABEL_32:
      v32 = v57;
      v34 = v56 + v19;
      if (v57 < v56 || v57 >= v34)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v57 != v56)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v56 = v34;
      v33 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E02A190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryControlInfo(0);
  v39 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (uint64_t)v33 - v8;
  v9 = type metadata accessor for HAPControlSolver.Source();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD **)(a1 + *(int *)(v11 + 60));
  if (!v14[2])
    v14 = *(_QWORD **)(a1 + *(int *)(v9 + 64));
  v40 = v14;
  swift_bridgeObjectRetain_n();
  sub_23E028EAC(&v40);
  v34 = v9;
  v35 = a1;
  swift_bridgeObjectRelease();
  v15 = v40[2];
  if (v15)
  {
    v16 = (char *)v40 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v33[1] = v40;
    swift_retain();
    v18 = MEMORY[0x24BEE4AF8];
    v36 = v5;
    do
    {
      sub_23DF73E10((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23E028924((uint64_t)v13, (uint64_t)v4);
      sub_23DF73E54((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v4, 1, v5) == 1)
      {
        sub_23DF89C7C((uint64_t)v4, &qword_256D1F300);
      }
      else
      {
        v19 = v37;
        sub_23DF89384((uint64_t)v4, v37, type metadata accessor for AccessoryControlInfo);
        sub_23DF89384(v19, v38, type metadata accessor for AccessoryControlInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_23E007B80(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
        v21 = *(_QWORD *)(v18 + 16);
        v20 = *(_QWORD *)(v18 + 24);
        if (v21 >= v20 >> 1)
          v18 = sub_23E007B80(v20 > 1, v21 + 1, 1, v18);
        *(_QWORD *)(v18 + 16) = v21 + 1;
        sub_23DF89384(v38, v18+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v21, type metadata accessor for AccessoryControlInfo);
        v5 = v36;
      }
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_release_n();
  }
  else
  {
    swift_release();
    v18 = MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
  v22 = type metadata accessor for AccessoryControlGroup(0);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_23E138050;
  v26 = (unint64_t *)(v25 + v24);
  *v26 = v18;
  type metadata accessor for AccessoryControlGroup.LayoutType(0);
  swift_storeEnumTagMultiPayload();
  v27 = (uint64_t *)(v35 + *(int *)(v34 + 28));
  v29 = *v27;
  v28 = v27[1];
  v30 = (unint64_t *)((char *)v26 + *(int *)(v22 + 24));
  v31 = (unint64_t *)((char *)v26 + *(int *)(v22 + 20));
  *v31 = v29;
  v31[1] = v28;
  *v30 = 0;
  v30[1] = 0;
  swift_bridgeObjectRetain();
  return v25;
}

uint64_t sub_23E02A534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unsigned int v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v3 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (uint64_t)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (uint64_t)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v7);
  v54 = (uint64_t)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v9 = MEMORY[0x24BDAC7A8](v60);
  v63 = (uint64_t)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)v53 - v11;
  v12 = type metadata accessor for Device.Control.Kind(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)v53 - v16;
  v17 = type metadata accessor for Device.Control(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  if (v21)
  {
    v53[1] = v1;
    v67 = MEMORY[0x24BEE4AF8];
    sub_23E09E1AC(0, v21, 0);
    v65 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v23 = a1 + v65;
    v64 = *(_QWORD *)(v18 + 72);
    v58 = *MEMORY[0x24BE4E598];
    v24 = (uint64_t)v61;
    v66 = v17;
    while (1)
    {
      sub_23DF73E10(v23, (uint64_t)v20, type metadata accessor for Device.Control);
      v25 = &v20[*(int *)(v17 + 20)];
      sub_23DF73E10((uint64_t)v25, v24, type metadata accessor for Device.Control.Kind);
      if (!swift_getEnumCaseMultiPayload())
        break;
      sub_23DF73E54(v24, type metadata accessor for Device.Control.Kind);
LABEL_12:
      v22 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E1AC(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v67;
      }
      v50 = *(_QWORD *)(v22 + 16);
      v49 = *(_QWORD *)(v22 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_23E09E1AC(v49 > 1, v50 + 1, 1);
        v22 = v67;
      }
      *(_QWORD *)(v22 + 16) = v50 + 1;
      v51 = v64;
      sub_23DF89384((uint64_t)v20, v22 + v65 + v50 * v64, type metadata accessor for Device.Control);
      v23 += v51;
      --v21;
      v17 = v66;
      if (!v21)
        return v22;
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
    sub_23DF73E54(v24 + *(int *)(v62 + 48), type metadata accessor for Device.Control.BinaryViewConfig);
    *(_WORD *)&v20[*(int *)(v17 + 36)] = 514;
    v26 = v15;
    v27 = v12;
    v28 = (uint64_t)v59;
    v29 = &v59[*(int *)(v60 + 28)];
    v30 = &v29[*(int *)(type metadata accessor for IconDescriptor() + 20)];
    v31 = sub_23E135910();
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v58, v31);
    *(_QWORD *)v29 = 0x7265776F70;
    *((_QWORD *)v29 + 1) = 0xE500000000000000;
    v32 = (uint64_t)v29;
    v33 = type metadata accessor for Device.Control.Kind;
    sub_23DF73E10(v32, v28, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    v34 = v28;
    v12 = v27;
    v15 = v26;
    sub_23DF89340(v34, v63, &qword_256D1D858);
    sub_23DF73E10((uint64_t)v25, (uint64_t)v26, type metadata accessor for Device.Control.Kind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8);
      v42 = (unsigned __int8 *)&v26[*(int *)(v41 + 48)];
      v43 = (uint64_t)v26;
      v44 = v55;
      sub_23DF89340(v43, v55, &qword_256D1D5D8);
      v45 = (uint64_t)v42;
      v46 = v56;
      sub_23DF89384(v45, v56, type metadata accessor for Device.Control.IncrementalConfig);
      sub_23DFB3DA0(v63, v46);
      sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.Kind);
      v47 = &v25[*(int *)(v41 + 48)];
      sub_23DF89340(v44, (uint64_t)v25, &qword_256D1D5D8);
      v48 = (uint64_t)v47;
      v33 = type metadata accessor for Device.Control.IncrementalConfig;
      sub_23DF73E10(v46, v48, type metadata accessor for Device.Control.IncrementalConfig);
      swift_storeEnumTagMultiPayload();
      v39 = v46;
    }
    else
    {
      if (!EnumCaseMultiPayload)
      {
        v57 = *v26;
        v36 = v62;
        v37 = v54;
        sub_23DF89384((uint64_t)&v26[*(int *)(v62 + 48)], v54, type metadata accessor for Device.Control.BinaryViewConfig);
        sub_23DFB3DA0(v63, v37);
        sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.Kind);
        v38 = (uint64_t)&v25[*(int *)(v36 + 48)];
        *v25 = v57;
        sub_23DF73E10(v37, v38, type metadata accessor for Device.Control.BinaryViewConfig);
        swift_storeEnumTagMultiPayload();
        v39 = v37;
        v40 = type metadata accessor for Device.Control.BinaryViewConfig;
LABEL_11:
        sub_23DF73E54(v39, v40);
        v24 = (uint64_t)v61;
        goto LABEL_12;
      }
      sub_23DF89C7C(v63, &qword_256D1D858);
      v39 = (uint64_t)v26;
    }
    v40 = v33;
    goto LABEL_11;
  }
  return v22;
}

uint64_t sub_23E02AAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v39 = sub_23E134C80();
  v38 = *(_QWORD *)(v39 - 8);
  v5 = MEMORY[0x24BDAC7A8](v39);
  v37 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)v34 - v7;
  v8 = sub_23E1352BC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v34 - v13;
  v15 = sub_23E1351CC();
  if ((v15 & 0x10000) != 0 || (LOWORD(v16) = v15, v17 = sub_23E1351CC(), (v17 & 0x10000) != 0))
  {
    v16 = sub_23E1352B0();
    if (((v16 ^ sub_23E1352B0()) & 1) == 0)
    {
      v34[1] = v2;
      v35 = sub_23E1351B4();
      v19 = v18;
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v20(v14, a1, v8);
      if (!v19)
      {
        v35 = sub_23E13528C();
        v19 = v21;
      }
      v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v14, v8);
      v23 = sub_23E1351B4();
      v25 = v24;
      v20(v12, a2, v8);
      if (!v25)
      {
        v23 = sub_23E13528C();
        v25 = v26;
      }
      v22(v12, v8);
      if (v35 == v23 && v19 == v25)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        if ((sub_23E137614() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v16) = 1;
          return v16 & 1;
        }
        v27 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
        {
          LOBYTE(v16) = 0;
          return v16 & 1;
        }
      }
      v28 = v36;
      sub_23E135268();
      v29 = v37;
      sub_23E135268();
      LOBYTE(v16) = MEMORY[0x242649514](v28, v29);
      v30 = *(void (**)(char *, uint64_t))(v38 + 8);
      v31 = v29;
      v32 = v39;
      v30(v31, v39);
      v30(v28, v32);
    }
  }
  else
  {
    LOBYTE(v16) = (unsigned __int16)v16 < (unsigned __int16)v17;
  }
  return v16 & 1;
}

uint64_t HAPControlSolver.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t HAPControlSolver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HAPControlSolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for HAPControlSolver()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23E02ADB8(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_23E02AE48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  unsigned __int16 v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  char *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  void (*v96)(_QWORD, _QWORD, _QWORD);
  uint64_t *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  unsigned __int16 v104;
  uint64_t v105;
  char v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  int v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char *v127;
  char *v128;
  char *v129;
  void (*v130)(char *, uint64_t);
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  void (*v137)(char *, uint64_t, uint64_t);
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  BOOL v156;
  unint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  char v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  BOOL v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  unint64_t v201;
  void (*v202)(uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  unint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;

  v2 = sub_23E134C80();
  v219 = *(_QWORD *)(v2 - 8);
  v220 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v218 = (char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v217 = (char *)&v203 - v5;
  v6 = sub_23E1352BC();
  v235 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v213 = (char *)&v203 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v230 = (char *)&v203 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v203 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v223 = (char *)&v203 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v203 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v203 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v210 = (char *)&v203 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v211 = (char *)&v203 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v215 = (char *)&v203 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v203 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v203 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v203 - v34;
  v36 = a1[1];
  result = sub_23E1375F0();
  if (result >= v36)
  {
    if (v36 < 0)
      goto LABEL_182;
    if (v36)
      return sub_23E02DB88(0, v36, 1, a1);
    return result;
  }
  if (v36 >= 0)
    v38 = v36;
  else
    v38 = v36 + 1;
  if (v36 < -1)
    goto LABEL_190;
  v236 = v6;
  v222 = v13;
  v209 = v30;
  v207 = result;
  v225 = a1;
  if (v36 < 2)
  {
    v216 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v235 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v235 + 80));
    v204 = MEMORY[0x24BEE4AF8];
    if (v36 != 1)
    {
      v44 = (char *)MEMORY[0x24BEE4AF8];
      v140 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_146:
      if (v140 >= 2)
      {
        v194 = *v225;
        v195 = v235;
        do
        {
          v196 = v140 - 2;
          if (v140 < 2)
            goto LABEL_176;
          if (!v194)
            goto LABEL_189;
          v197 = *(_QWORD *)&v44[16 * v196 + 32];
          v198 = *(_QWORD *)&v44[16 * v140 + 24];
          v199 = v221;
          sub_23E02E7E0(v194 + *(_QWORD *)(v195 + 72) * v197, v194 + *(_QWORD *)(v195 + 72) * *(_QWORD *)&v44[16 * v140 + 16], (char *)(v194 + *(_QWORD *)(v195 + 72) * v198), v216);
          v221 = v199;
          if (v199)
            break;
          if (v198 < v197)
            goto LABEL_178;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v44 = sub_23E073D94((uint64_t)v44);
          if (v196 >= *((_QWORD *)v44 + 2))
            goto LABEL_179;
          v200 = &v44[16 * v196 + 32];
          *(_QWORD *)v200 = v197;
          *((_QWORD *)v200 + 1) = v198;
          v201 = *((_QWORD *)v44 + 2);
          if (v140 > v201)
            goto LABEL_180;
          memmove(&v44[16 * v140 + 16], &v44[16 * v140 + 32], 16 * (v201 - v140));
          *((_QWORD *)v44 + 2) = v201 - 1;
          v140 = v201 - 1;
        }
        while (v201 > 2);
      }
LABEL_159:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v204 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v39 = 1;
    v205 = v35;
    v206 = v33;
  }
  else
  {
    v39 = v36;
    v205 = v35;
    v206 = v33;
    v40 = v38 >> 1;
    v41 = sub_23E13729C();
    *(_QWORD *)(v41 + 16) = v40;
    v42 = (*(unsigned __int8 *)(v235 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v235 + 80);
    v204 = v41;
    v216 = v41 + v42;
  }
  v43 = 0;
  v44 = (char *)MEMORY[0x24BEE4AF8];
  v45 = v18;
  v224 = v18;
  v227 = v21;
  v46 = v39;
  while (1)
  {
    v47 = v43;
    v48 = v43 + 1;
    v233 = v46;
    if (v43 + 1 >= v46)
    {
      ++v43;
      v55 = v236;
      goto LABEL_56;
    }
    v49 = *v225;
    v50 = v235;
    v51 = *(_QWORD *)(v235 + 72);
    v231 = v48;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 16);
    v53 = v47;
    v54 = (uint64_t)v205;
    v55 = v236;
    v52(v205, v49 + v51 * v48, v236);
    v212 = v49;
    v234 = v51;
    v56 = v49 + v51 * v53;
    v57 = (uint64_t)v206;
    v52(v206, v56, v55);
    v58 = v221;
    LODWORD(v232) = sub_23E02AAB0(v54, v57);
    v221 = v58;
    if (v58)
    {
      v202 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      v202(v57, v55);
      v202(v54, v55);
      goto LABEL_159;
    }
    v59 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v59(v57, v55);
    v59(v54, v55);
    v43 = v53 + 2;
    v46 = v233;
    v47 = v53;
    if (v53 + 2 >= v233)
    {
      v21 = v227;
      v45 = v224;
      if ((v232 & 1) == 0)
        goto LABEL_56;
      goto LABEL_43;
    }
    v214 = v53;
    v208 = v44;
    v231 *= v234;
    v60 = v212;
    v229 = v234 * v43;
    v21 = v227;
    v61 = v215;
    v62 = v209;
LABEL_18:
    v52(v62, v60 + v229, v55);
    v52(v61, v60 + v231, v55);
    v63 = sub_23E1351CC();
    if ((v63 & 0x10000) == 0)
    {
      v64 = v63;
      v65 = sub_23E1351CC();
      if ((v65 & 0x10000) == 0)
      {
        v66 = v64 < (unsigned __int16)v65;
        goto LABEL_35;
      }
    }
    v66 = sub_23E1352B0();
    if (((v66 ^ sub_23E1352B0()) & 1) == 0)
    {
      v228 = sub_23E1351B4();
      v68 = v67;
      v69 = v211;
      v70 = v236;
      v52(v211, (uint64_t)v62, v236);
      v226 = v43;
      if (!v68)
      {
        v71 = sub_23E13528C();
        v69 = v211;
        v70 = v236;
        v228 = v71;
        v68 = v72;
      }
      v59((uint64_t)v69, v70);
      v73 = v215;
      v74 = sub_23E1351B4();
      v76 = v75;
      v77 = v210;
      v52(v210, (uint64_t)v73, v70);
      if (!v76)
      {
        v74 = sub_23E13528C();
        v76 = v78;
      }
      v59((uint64_t)v77, v236);
      v61 = v215;
      v62 = v209;
      if (v228 == v74 && v68 == v76)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
      if ((sub_23E137614() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v66 = 1;
      }
      else
      {
        v85 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v85 & 1) != 0)
        {
          v66 = 0;
        }
        else
        {
LABEL_29:
          v79 = v217;
          sub_23E135268();
          v80 = v218;
          sub_23E135268();
          v66 = MEMORY[0x242649514](v79, v80);
          v81 = *(void (**)(char *, uint64_t))(v219 + 8);
          v82 = v80;
          v83 = v220;
          v81(v82, v220);
          v84 = v79;
          v61 = v215;
          v81(v84, v83);
        }
      }
      v43 = v226;
      v21 = v227;
    }
LABEL_35:
    v55 = v236;
    v59((uint64_t)v61, v236);
    v59((uint64_t)v62, v55);
    if (((v232 ^ v66) & 1) == 0)
      break;
    v44 = v208;
    v45 = v224;
    v47 = v214;
    v46 = v233;
    if ((v232 & 1) != 0)
      goto LABEL_43;
LABEL_56:
    if (v43 >= v46)
      goto LABEL_93;
    if (__OFSUB__(v43, v47))
      goto LABEL_181;
    if (v43 - v47 >= v207)
      goto LABEL_93;
    if (__OFADD__(v47, v207))
      goto LABEL_183;
    v95 = v233;
    if (v47 + v207 < v233)
      v95 = v47 + v207;
    if (v95 < v47)
    {
LABEL_184:
      __break(1u);
      goto LABEL_185;
    }
    if (v43 == v95)
      goto LABEL_93;
    v214 = v47;
    v208 = v44;
    v96 = *(void (**)(_QWORD, _QWORD, _QWORD))(v235 + 16);
    v228 = *(_QWORD *)(v235 + 72);
    v229 = (uint64_t)v96;
    v233 = v43 * v228;
    v234 = v228 * (v43 - 1);
    v97 = v225;
    v212 = v95;
    while (2)
    {
      v99 = 0;
      v100 = v214;
      v226 = v43;
      while (1)
      {
        v101 = *v97;
        v232 = v233 + v99;
        v102 = (void (*)(char *, uint64_t, uint64_t))v229;
        ((void (*)(char *, uint64_t, uint64_t))v229)(v21, v233 + v99 + v101, v55);
        v231 = v234 + v99;
        v102(v45, v234 + v99 + v101, v55);
        v103 = sub_23E1351CC();
        if ((v103 & 0x10000) == 0)
        {
          v104 = v103;
          v105 = sub_23E1351CC();
          if ((v105 & 0x10000) == 0)
          {
            v106 = v104 < (unsigned __int16)v105;
            v107 = v45;
            v108 = *(void (**)(char *, uint64_t))(v235 + 8);
            goto LABEL_89;
          }
        }
        v109 = sub_23E1352B0();
        if (((v109 ^ sub_23E1352B0()) & 1) != 0)
        {
          v98 = v45;
          v108 = *(void (**)(char *, uint64_t))(v235 + 8);
          if ((v109 & 1) == 0)
            goto LABEL_66;
          goto LABEL_86;
        }
        v110 = sub_23E1351B4();
        v111 = v21;
        v113 = v112;
        v114 = v223;
        v115 = v236;
        ((void (*)(char *, char *, uint64_t))v229)(v223, v111, v236);
        v116 = v45;
        if (!v113)
        {
          v117 = sub_23E13528C();
          v115 = v236;
          v110 = v117;
          v113 = v118;
        }
        v108 = *(void (**)(char *, uint64_t))(v235 + 8);
        v108(v114, v115);
        v119 = sub_23E1351B4();
        v120 = v116;
        v122 = v121;
        v123 = v222;
        ((void (*)(char *, char *, uint64_t))v229)(v222, v120, v115);
        if (!v122)
        {
          v119 = sub_23E13528C();
          v122 = v124;
        }
        v108(v123, v236);
        if (v110 == v119 && v113 == v122)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_88;
        }
        if ((sub_23E137614() & 1) == 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v98 = v224;
        v97 = v225;
        v43 = v226;
        v21 = v227;
LABEL_86:
        v125 = v236;
        v108(v98, v236);
        v108(v21, v125);
LABEL_90:
        v135 = *v97;
        if (!*v97)
          goto LABEL_186;
        v136 = (char *)(v135 + v234 + v99);
        v137 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 32);
        v137(v230, v135 + v233 + v99, v236);
        swift_arrayInitWithTakeFrontToBack();
        v55 = v236;
        v137(v136, (uint64_t)v230, v236);
        v99 -= v228;
        ++v100;
        v45 = v98;
        if (v43 == v100)
          goto LABEL_68;
      }
      v126 = sub_23E137614();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v126 & 1) == 0)
      {
LABEL_88:
        v127 = v217;
        v128 = v227;
        sub_23E135268();
        v129 = v218;
        v107 = v224;
        sub_23E135268();
        v106 = MEMORY[0x242649514](v127, v129);
        v130 = *(void (**)(char *, uint64_t))(v219 + 8);
        v131 = v129;
        v132 = v220;
        v130(v131, v220);
        v133 = v127;
        v21 = v128;
        v130(v133, v132);
        v97 = v225;
        v43 = v226;
LABEL_89:
        v98 = v107;
        v134 = v107;
        v55 = v236;
        v108(v134, v236);
        v108(v21, v55);
        if ((v106 & 1) == 0)
          goto LABEL_67;
        goto LABEL_90;
      }
      v98 = v224;
      v97 = v225;
      v43 = v226;
      v21 = v227;
LABEL_66:
      v55 = v236;
      v108(v98, v236);
      v108(v21, v55);
LABEL_67:
      v45 = v98;
LABEL_68:
      ++v43;
      v234 += v228;
      v233 += v228;
      if (v43 != v212)
        continue;
      break;
    }
    v43 = v212;
    v44 = v208;
    v47 = v214;
LABEL_93:
    if (v43 < v47)
      goto LABEL_177;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v44 = sub_23E073A18(0, *((_QWORD *)v44 + 2) + 1, 1, v44);
    v139 = *((_QWORD *)v44 + 2);
    v138 = *((_QWORD *)v44 + 3);
    v140 = v139 + 1;
    if (v139 >= v138 >> 1)
      v44 = sub_23E073A18((char *)(v138 > 1), v139 + 1, 1, v44);
    *((_QWORD *)v44 + 2) = v140;
    v141 = v44 + 32;
    v142 = &v44[16 * v139 + 32];
    *(_QWORD *)v142 = v47;
    *((_QWORD *)v142 + 1) = v43;
    if (v139)
    {
      v143 = v44 + 32;
      while (1)
      {
        v144 = v45;
        v145 = v140 - 1;
        if (v140 >= 4)
        {
          v150 = &v143[16 * v140];
          v151 = *((_QWORD *)v150 - 8);
          v152 = *((_QWORD *)v150 - 7);
          v156 = __OFSUB__(v152, v151);
          v153 = v152 - v151;
          if (v156)
            goto LABEL_165;
          v155 = *((_QWORD *)v150 - 6);
          v154 = *((_QWORD *)v150 - 5);
          v156 = __OFSUB__(v154, v155);
          v148 = v154 - v155;
          v149 = v156;
          if (v156)
            goto LABEL_166;
          v157 = v140 - 2;
          v158 = &v143[16 * v140 - 32];
          v160 = *(_QWORD *)v158;
          v159 = *((_QWORD *)v158 + 1);
          v156 = __OFSUB__(v159, v160);
          v161 = v159 - v160;
          if (v156)
            goto LABEL_168;
          v156 = __OFADD__(v148, v161);
          v162 = v148 + v161;
          if (v156)
            goto LABEL_171;
          if (v162 >= v153)
          {
            v180 = &v143[16 * v145];
            v182 = *(_QWORD *)v180;
            v181 = *((_QWORD *)v180 + 1);
            v156 = __OFSUB__(v181, v182);
            v183 = v181 - v182;
            if (v156)
              goto LABEL_175;
            v173 = v148 < v183;
            goto LABEL_131;
          }
        }
        else
        {
          if (v140 != 3)
          {
            v174 = *((_QWORD *)v44 + 4);
            v175 = *((_QWORD *)v44 + 5);
            v156 = __OFSUB__(v175, v174);
            v167 = v175 - v174;
            v168 = v156;
            goto LABEL_125;
          }
          v147 = *((_QWORD *)v44 + 4);
          v146 = *((_QWORD *)v44 + 5);
          v156 = __OFSUB__(v146, v147);
          v148 = v146 - v147;
          v149 = v156;
        }
        if ((v149 & 1) != 0)
          goto LABEL_167;
        v157 = v140 - 2;
        v163 = &v143[16 * v140 - 32];
        v165 = *(_QWORD *)v163;
        v164 = *((_QWORD *)v163 + 1);
        v166 = __OFSUB__(v164, v165);
        v167 = v164 - v165;
        v168 = v166;
        if (v166)
          goto LABEL_170;
        v169 = &v143[16 * v145];
        v171 = *(_QWORD *)v169;
        v170 = *((_QWORD *)v169 + 1);
        v156 = __OFSUB__(v170, v171);
        v172 = v170 - v171;
        if (v156)
          goto LABEL_173;
        if (__OFADD__(v167, v172))
          goto LABEL_174;
        if (v167 + v172 >= v148)
        {
          v173 = v148 < v172;
LABEL_131:
          if (v173)
            v145 = v157;
          goto LABEL_133;
        }
LABEL_125:
        if ((v168 & 1) != 0)
          goto LABEL_169;
        v176 = &v143[16 * v145];
        v178 = *(_QWORD *)v176;
        v177 = *((_QWORD *)v176 + 1);
        v156 = __OFSUB__(v177, v178);
        v179 = v177 - v178;
        if (v156)
          goto LABEL_172;
        if (v179 < v167)
        {
          v45 = v144;
          goto LABEL_142;
        }
LABEL_133:
        v184 = v43;
        v185 = v145 - 1;
        if (v145 - 1 >= v140)
        {
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (!*v225)
          goto LABEL_187;
        v186 = v44;
        v187 = &v143[16 * v185];
        v188 = v143;
        v189 = *(_QWORD *)v187;
        v190 = &v188[16 * v145];
        v191 = *((_QWORD *)v190 + 1);
        v192 = v221;
        sub_23E02E7E0(*v225 + *(_QWORD *)(v235 + 72) * *(_QWORD *)v187, *v225 + *(_QWORD *)(v235 + 72) * *(_QWORD *)v190, (char *)(*v225 + *(_QWORD *)(v235 + 72) * v191), v216);
        v221 = v192;
        if (v192)
          goto LABEL_159;
        if (v191 < v189)
          goto LABEL_162;
        if (v145 > *((_QWORD *)v186 + 2))
          goto LABEL_163;
        *(_QWORD *)v187 = v189;
        *(_QWORD *)&v141[16 * v185 + 8] = v191;
        v193 = *((_QWORD *)v186 + 2);
        if (v145 >= v193)
          goto LABEL_164;
        v143 = v141;
        v44 = v186;
        v140 = v193 - 1;
        memmove(v190, v190 + 16, 16 * (v193 - 1 - v145));
        *((_QWORD *)v186 + 2) = v193 - 1;
        v173 = v193 > 2;
        v45 = v224;
        v21 = v227;
        v43 = v184;
        if (!v173)
          goto LABEL_142;
      }
    }
    v140 = 1;
LABEL_142:
    v46 = v225[1];
    if (v43 >= v46)
      goto LABEL_146;
  }
  ++v43;
  v60 += v234;
  v46 = v233;
  if (v233 != v43)
    goto LABEL_18;
  v43 = v233;
  v44 = v208;
  v45 = v224;
  v47 = v214;
  if ((v232 & 1) == 0)
    goto LABEL_56;
LABEL_43:
  if (v43 >= v47)
  {
    if (v47 < v43)
    {
      v208 = v44;
      v86 = 0;
      v87 = v234 * (v43 - 1);
      v88 = v43;
      v89 = v43 * v234;
      v214 = v47;
      v90 = v47 * v234;
      v226 = v88;
      do
      {
        if (v47 != v88 + v86 - 1)
        {
          v91 = v212;
          if (!v212)
            goto LABEL_188;
          v92 = v212 + v90;
          v93 = (char *)(v212 + v87);
          v94 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 32);
          v94(v213, v212 + v90, v236);
          if (v90 < v87 || v92 >= v91 + v89)
          {
            v55 = v236;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v55 = v236;
            if (v90 != v87)
              swift_arrayInitWithTakeBackToFront();
          }
          v94(v93, (uint64_t)v213, v55);
          v21 = v227;
        }
        ++v47;
        --v86;
        v88 = v226;
        v87 -= v234;
        v89 -= v234;
        v90 += v234;
      }
      while (v47 < v226 + v86);
      v44 = v208;
      v45 = v224;
      v43 = v226;
      v47 = v214;
      v46 = v233;
    }
    goto LABEL_56;
  }
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23E02BEC0(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  uint64_t v140;
  char **v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v3 = sub_23E134C80();
  v145 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v131 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v142 = (char *)&v127 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v139 = (char *)&v127 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v138 = (char *)&v127 - v10;
  v11 = (uint64_t)a1[1];
  result = sub_23E1375F0();
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      return sub_23E02E07C(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v141 = a1;
  v128 = result;
  v134 = v1;
  if (v11 < 2)
  {
    v17 = (char *)MEMORY[0x24BEE4AF8];
    v133 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v127 = MEMORY[0x24BEE4AF8];
    if (v11 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_107:
      if (v19 >= 2)
      {
        v120 = *v141;
        do
        {
          v121 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v120)
            goto LABEL_148;
          v122 = *(_QWORD *)&v17[16 * v121 + 32];
          v123 = *(_QWORD *)&v17[16 * v19 + 24];
          v124 = v134;
          sub_23E02ED88((unint64_t)&v120[*(_QWORD *)(v145 + 72) * v122], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * v123], v133);
          v134 = v124;
          if (v124)
            break;
          if (v123 < v122)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_23E073D94((uint64_t)v17);
          if (v121 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v125 = &v17[16 * v121 + 32];
          *(_QWORD *)v125 = v122;
          *((_QWORD *)v125 + 1) = v123;
          v126 = *((_QWORD *)v17 + 2);
          if (v19 > v126)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v126 - v19));
          *((_QWORD *)v17 + 2) = v126 - 1;
          v19 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_23E13729C();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v145 + 80);
    v127 = v15;
    v133 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v132 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v134;
      goto LABEL_58;
    }
    v22 = *v141;
    v143 = v11;
    v23 = v145;
    v24 = *(_QWORD *)(v145 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 16);
    v26 = v138;
    v25(v138, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v139;
    v25(v139, v27, v3);
    v140 = sub_23DF73F28(&qword_256D21D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
    LODWORD(v137) = sub_23E137140();
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v132;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v135 = v31;
    v144 = v24;
    if (v20 + 2 >= v143)
    {
      v41 = v134;
      v40 = v143;
      v39 = v24;
      if ((v137 & 1) == 0)
        break;
    }
    else
    {
      v129 = v17;
      v136 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v138;
        v25(v138, &v33[v34], v3);
        v37 = v139;
        v25(v139, &v33[v136], v3);
        v38 = sub_23E137140();
        v29(v37, v3);
        v29(v36, v3);
        if (((v137 ^ v38) & 1) != 0)
        {
          v41 = v134;
          v17 = v129;
          v32 = v35;
          v20 = v132;
          v40 = v143;
          v39 = v144;
          if ((v137 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v144;
        v33 += v144;
      }
      while (v143 != v35 + 1);
      v40 = v143;
      v32 = v143;
      v41 = v134;
      v17 = v129;
      v20 = v132;
      if ((v137 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v129 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v141;
    v140 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v135)
          goto LABEL_147;
        v48 = v41;
        v49 = &v135[v46];
        v50 = &v135[v43];
        v137 = *(char **)(v145 + 32);
        ((void (*)(char *, char *, uint64_t))v137)(v131, &v135[v46], v3);
        if (v46 < v43 || v49 >= &v135[v44])
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(char *, char *, uint64_t))v137)(v50, v131, v3);
        v41 = v48;
        v32 = v140;
        v47 = v141;
        v39 = v144;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v129;
    v20 = v132;
    v40 = v143;
    if (v32 < v143)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v134 = v41;
    v140 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_23E073A18(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v69 = *((_QWORD *)v17 + 2);
    v68 = *((_QWORD *)v17 + 3);
    v19 = v69 + 1;
    if (v69 >= v68 >> 1)
      v17 = sub_23E073A18((char *)(v68 > 1), v69 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v70 = v17 + 32;
    v71 = &v17[16 * v69 + 32];
    v72 = v140;
    *(_QWORD *)v71 = v20;
    *((_QWORD *)v71 + 1) = v72;
    if (v69)
    {
      while (1)
      {
        v73 = v19 - 1;
        if (v19 >= 4)
        {
          v78 = &v70[16 * v19];
          v79 = *((_QWORD *)v78 - 8);
          v80 = *((_QWORD *)v78 - 7);
          v84 = __OFSUB__(v80, v79);
          v81 = v80 - v79;
          if (v84)
            goto LABEL_124;
          v83 = *((_QWORD *)v78 - 6);
          v82 = *((_QWORD *)v78 - 5);
          v84 = __OFSUB__(v82, v83);
          v76 = v82 - v83;
          v77 = v84;
          if (v84)
            goto LABEL_125;
          v85 = v19 - 2;
          v86 = &v70[16 * v19 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v84 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v84)
            goto LABEL_127;
          v84 = __OFADD__(v76, v89);
          v90 = v76 + v89;
          if (v84)
            goto LABEL_130;
          if (v90 >= v81)
          {
            v108 = &v70[16 * v73];
            v110 = *(_QWORD *)v108;
            v109 = *((_QWORD *)v108 + 1);
            v84 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v84)
              goto LABEL_134;
            v101 = v76 < v111;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v102 = *((_QWORD *)v17 + 4);
            v103 = *((_QWORD *)v17 + 5);
            v84 = __OFSUB__(v103, v102);
            v95 = v103 - v102;
            v96 = v84;
            goto LABEL_89;
          }
          v75 = *((_QWORD *)v17 + 4);
          v74 = *((_QWORD *)v17 + 5);
          v84 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          v77 = v84;
        }
        if ((v77 & 1) != 0)
          goto LABEL_126;
        v85 = v19 - 2;
        v91 = &v70[16 * v19 - 32];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v94 = __OFSUB__(v92, v93);
        v95 = v92 - v93;
        v96 = v94;
        if (v94)
          goto LABEL_129;
        v97 = &v70[16 * v73];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v84 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v84)
          goto LABEL_132;
        if (__OFADD__(v95, v100))
          goto LABEL_133;
        if (v95 + v100 >= v76)
        {
          v101 = v76 < v100;
LABEL_95:
          if (v101)
            v73 = v85;
          goto LABEL_97;
        }
LABEL_89:
        if ((v96 & 1) != 0)
          goto LABEL_128;
        v104 = &v70[16 * v73];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v84 = __OFSUB__(v105, v106);
        v107 = v105 - v106;
        if (v84)
          goto LABEL_131;
        if (v107 < v95)
          goto LABEL_14;
LABEL_97:
        v112 = v73 - 1;
        if (v73 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v141)
          goto LABEL_146;
        v113 = v17;
        v114 = &v70[16 * v112];
        v115 = *(_QWORD *)v114;
        v116 = &v70[16 * v73];
        v117 = *((_QWORD *)v116 + 1);
        v118 = v134;
        sub_23E02ED88((unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v114], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v116], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * v117], v133);
        v134 = v118;
        if (v118)
          goto LABEL_118;
        if (v117 < v115)
          goto LABEL_121;
        if (v73 > *((_QWORD *)v113 + 2))
          goto LABEL_122;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v70[16 * v112 + 8] = v117;
        v119 = *((_QWORD *)v113 + 2);
        if (v73 >= v119)
          goto LABEL_123;
        v17 = v113;
        v19 = v119 - 1;
        memmove(&v70[16 * v73], v116 + 16, 16 * (v119 - 1 - v73));
        *((_QWORD *)v113 + 2) = v119 - 1;
        if (v119 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (uint64_t)v141[1];
    v18 = v140;
    if (v140 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v141;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v128)
    goto LABEL_58;
  if (__OFADD__(v20, v128))
    goto LABEL_143;
  if (v20 + v128 >= v40)
    v51 = v40;
  else
    v51 = v20 + v128;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v129 = v17;
      v130 = v51;
      v52 = *(_QWORD *)(v145 + 72);
      v53 = *(char **)(v145 + 16);
      v134 = v41;
      v135 = v53;
      v54 = v52 * (v32 - 1);
      v136 = v52;
      v144 = v32 * v52;
      do
      {
        v56 = 0;
        v140 = v32;
        v137 = (char *)v54;
        while (1)
        {
          v143 = v20;
          v57 = *v47;
          v58 = v138;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v135;
          ((void (*)(char *, char *, uint64_t))v135)(v138, &(*v47)[v144 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v139;
          v60(v139, v61, v3);
          sub_23DF73F28(&qword_256D21D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
          LOBYTE(v57) = sub_23E137140();
          v63 = *(void (**)(_QWORD, _QWORD))(v145 + 8);
          v63(v62, v3);
          v63(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v64 = *v59;
          if (!*v59)
            goto LABEL_145;
          v54 = (uint64_t)v137;
          v65 = &v137[(_QWORD)v64 + v56];
          v66 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 32);
          v66(v142, &v64[v144 + v56], v3);
          swift_arrayInitWithTakeFrontToBack();
          v66(v65, v142, v3);
          v56 -= v136;
          v20 = v143 + 1;
          v55 = v140;
          v47 = v141;
          if (v140 == v143 + 1)
            goto LABEL_51;
        }
        v55 = v140;
        v47 = v59;
        v54 = (uint64_t)v137;
LABEL_51:
        v32 = v55 + 1;
        v54 += v136;
        v144 += v136;
        v20 = v132;
      }
      while (v32 != v130);
      v32 = v130;
      v41 = v134;
      v17 = v129;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23E02C938(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  int v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  char *v108;
  uint64_t v109;
  char v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t, uint64_t);
  uint64_t v131;
  char v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char *v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  void (*v155)(char *, uint64_t, uint64_t);
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  BOOL v172;
  unint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  BOOL v182;
  uint64_t v183;
  char v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  BOOL v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  char *v208;
  uint64_t v209;
  unint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  unint64_t v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  void (*v250)(char *, uint64_t, uint64_t);
  uint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  uint64_t v254;

  v2 = v1;
  v4 = sub_23E134C80();
  v236 = *(_QWORD *)(v4 - 8);
  v237 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v235 = (char *)&v217 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v234 = (char *)&v217 - v7;
  v8 = sub_23E1350D0();
  v245 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v229 = (char *)&v217 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v248 = (char *)&v217 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v217 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v239 = (char *)&v217 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v217 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v217 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v217 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v227 = (char *)&v217 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v217 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29);
  v232 = (char *)&v217 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v220 = (char *)&v217 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v221 = (char *)&v217 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v224 = (char *)&v217 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v217 - v40;
  v253 = a1;
  v42 = a1[1];
  result = sub_23E1375F0();
  v226 = result;
  if (result >= v42)
  {
    if (v42 < 0)
      goto LABEL_186;
    if (v42)
      return sub_23E02E2F4(0, v42, 1, v253);
    return result;
  }
  if (v42 >= 0)
    v44 = v42;
  else
    v44 = v42 + 1;
  if (v42 < -1)
    goto LABEL_194;
  v254 = v8;
  v247 = v20;
  v225 = v26;
  v223 = v41;
  if (v42 < 2)
  {
    v49 = (char *)MEMORY[0x24BEE4AF8];
    v231 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80));
    v48 = v226;
    v218 = MEMORY[0x24BEE4AF8];
    if (v42 != 1)
    {
      v51 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_152:
      if (v51 >= 2)
      {
        v209 = *v253;
        do
        {
          v210 = v51 - 2;
          if (v51 < 2)
            goto LABEL_181;
          if (!v209)
            goto LABEL_193;
          v211 = v49;
          v212 = v49 + 32;
          v213 = *(_QWORD *)&v49[16 * v210 + 32];
          v214 = *(_QWORD *)&v49[16 * v51 + 24];
          sub_23E02F2DC(v209 + *(_QWORD *)(v245 + 72) * v213, v209 + *(_QWORD *)(v245 + 72) * *(_QWORD *)&v212[16 * v51 - 16], v209 + *(_QWORD *)(v245 + 72) * v214, v231);
          if (v2)
            break;
          if (v214 < v213)
            goto LABEL_182;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v211 = sub_23E073D94((uint64_t)v211);
          if (v210 >= *((_QWORD *)v211 + 2))
            goto LABEL_183;
          v215 = &v211[16 * v210 + 32];
          *(_QWORD *)v215 = v213;
          *((_QWORD *)v215 + 1) = v214;
          v216 = *((_QWORD *)v211 + 2);
          if (v51 > v216)
            goto LABEL_184;
          v49 = v211;
          memmove(&v211[16 * v51 + 16], &v211[16 * v51 + 32], 16 * (v216 - v51));
          *((_QWORD *)v211 + 2) = v216 - 1;
          v51 = v216 - 1;
        }
        while (v216 > 2);
      }
LABEL_163:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v218 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v238 = v15;
  }
  else
  {
    v238 = v15;
    v45 = v44 >> 1;
    v46 = sub_23E13729C();
    *(_QWORD *)(v46 + 16) = v45;
    v47 = (*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80);
    v218 = v46;
    v231 = v46 + v47;
    v48 = v226;
  }
  v50 = 0;
  v49 = (char *)MEMORY[0x24BEE4AF8];
  v240 = v23;
  v233 = v31;
  while (2)
  {
    v52 = v50;
    v53 = v50 + 1;
    v230 = v50;
    if (v50 + 1 >= v42)
    {
      v63 = v254;
      v64 = v247;
      goto LABEL_69;
    }
    v242 = v42;
    v222 = v2;
    v54 = *v253;
    v55 = *(_QWORD *)(v245 + 72);
    v246 = v50 + 1;
    v56 = v54 + v55 * v53;
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v245 + 16);
    v58 = v223;
    v59 = v254;
    v60 = v50;
    v57(v223, v56, v254);
    v241 = v54;
    v251 = v55;
    v57(v224, v54 + v55 * v60, v59);
    LODWORD(v249) = sub_23E1350C4();
    LODWORD(v60) = v249 & 1;
    v61 = sub_23E1350C4();
    v250 = v57;
    if ((_DWORD)v60 == (v61 & 1))
    {
      v244 = sub_23E135040();
      v66 = v65;
      v67 = v221;
      v57(v221, (uint64_t)v58, v59);
      v68 = (void (*)(char *, char *, uint64_t))v57;
      v249 = v66;
      if (!v66)
      {
        v69 = sub_23E1350B8();
        v67 = v221;
        v59 = v254;
        v244 = v69;
        v249 = v70;
      }
      v71 = v220;
      v252 = *(_QWORD *)(v245 + 8);
      ((void (*)(char *, uint64_t))v252)(v67, v59);
      v72 = v224;
      v73 = sub_23E135040();
      v75 = v74;
      v68(v71, v72, v59);
      if (!v75)
      {
        v73 = sub_23E1350B8();
        v75 = v76;
      }
      v77 = v244;
      v78 = v71;
      v62 = (void (*)(char *, uint64_t))v252;
      ((void (*)(char *, uint64_t))v252)(v78, v254);
      if (v77 == v73 && v249 == v75)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        if ((sub_23E137614() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LODWORD(v249) = 1;
          goto LABEL_19;
        }
        v207 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v207 & 1) != 0)
        {
          LODWORD(v249) = 0;
          goto LABEL_29;
        }
      }
      v79 = v234;
      sub_23E1350A0();
      v80 = v235;
      sub_23E1350A0();
      LODWORD(v249) = MEMORY[0x242649514](v79, v80);
      v81 = v237;
      v82 = *(void (**)(char *, uint64_t))(v236 + 8);
      v82(v80, v237);
      v83 = v79;
      v23 = v240;
      v82(v83, v81);
LABEL_29:
      v2 = v222;
      v42 = v242;
      v62 = (void (*)(char *, uint64_t))v252;
      goto LABEL_30;
    }
    v62 = *(void (**)(char *, uint64_t))(v245 + 8);
LABEL_19:
    v2 = v222;
    v42 = v242;
LABEL_30:
    v63 = v254;
    v62(v224, v254);
    v62(v223, v63);
    v52 = v230;
    v53 = v230 + 2;
    if (v230 + 2 >= v42)
    {
      v48 = v226;
      goto LABEL_53;
    }
    v252 = (uint64_t)v62;
    v219 = v49;
    v246 *= v251;
    v84 = v241;
    v85 = v230 + 2;
    v244 = v251 * (v230 + 2);
    while (1)
    {
      v86 = v2;
      v87 = v232;
      v88 = v250;
      v250(v232, v84 + v244, v63);
      v88(v31, v84 + v246, v63);
      v89 = v63;
      v90 = sub_23E1350C4();
      v91 = v87;
      if (((v90 ^ sub_23E1350C4()) & 1) != 0)
        goto LABEL_47;
      v92 = v87;
      v93 = sub_23E135040();
      v95 = v94;
      v96 = v227;
      v250(v227, (uint64_t)v92, v89);
      if (!v95)
      {
        v97 = sub_23E1350B8();
        v89 = v254;
        v93 = v97;
        v95 = v98;
      }
      ((void (*)(char *, uint64_t))v252)(v96, v89);
      v99 = sub_23E135040();
      v100 = v31;
      v102 = v101;
      v103 = v225;
      v250(v225, (uint64_t)v100, v89);
      if (!v102)
      {
        v99 = sub_23E1350B8();
        v102 = v104;
      }
      ((void (*)(char *, uint64_t))v252)(v103, v254);
      v91 = v232;
      if (v93 != v99 || v95 != v102)
      {
        if ((sub_23E137614() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v90 = 1;
        }
        else
        {
          v110 = sub_23E137614();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v110 & 1) == 0)
            goto LABEL_40;
          v90 = 0;
        }
        v89 = v254;
        v31 = v233;
        goto LABEL_46;
      }
      swift_bridgeObjectRelease_n();
LABEL_40:
      v105 = v234;
      sub_23E1350A0();
      v106 = v235;
      v31 = v233;
      sub_23E1350A0();
      v90 = MEMORY[0x242649514](v105, v106);
      v107 = *(void (**)(char *, uint64_t))(v236 + 8);
      v108 = v106;
      v109 = v237;
      v107(v108, v237);
      v107(v105, v109);
      v91 = v232;
      v89 = v254;
LABEL_46:
      v42 = v242;
LABEL_47:
      v111 = (void (*)(char *, uint64_t))v252;
      ((void (*)(char *, uint64_t))v252)(v31, v89);
      v111(v91, v89);
      v63 = v89;
      v2 = v86;
      if (((v249 ^ v90) & 1) != 0)
        break;
      v84 += v251;
      if (v42 == ++v85)
      {
        v53 = v42;
        v49 = v219;
        v23 = v240;
        v48 = v226;
        goto LABEL_52;
      }
    }
    v49 = v219;
    v23 = v240;
    v48 = v226;
    v53 = v85;
LABEL_52:
    v52 = v230;
LABEL_53:
    v64 = v247;
    if ((v249 & 1) != 0)
    {
      if (v53 < v52)
        goto LABEL_187;
      if (v52 < v53)
      {
        v219 = v49;
        v112 = 0;
        v113 = v52;
        v114 = v53;
        v115 = v251 * (v53 - 1);
        v116 = v114 * v251;
        v117 = v113;
        v118 = v113 * v251;
        v243 = v114;
        do
        {
          if (v117 != v114 + v112 - 1)
          {
            v119 = v241;
            if (!v241)
              goto LABEL_192;
            v120 = v241 + v118;
            v121 = v241 + v115;
            v252 = *(_QWORD *)(v245 + 32);
            ((void (*)(char *, uint64_t, uint64_t))v252)(v229, v241 + v118, v254);
            if (v118 < v115 || v120 >= v119 + v116)
            {
              v63 = v254;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v63 = v254;
              if (v118 != v115)
                swift_arrayInitWithTakeBackToFront();
            }
            ((void (*)(uint64_t, char *, uint64_t))v252)(v121, v229, v63);
            v31 = v233;
          }
          ++v117;
          --v112;
          v114 = v243;
          v115 -= v251;
          v116 -= v251;
          v118 += v251;
        }
        while (v117 < v243 + v112);
        v64 = v247;
        v49 = v219;
        v23 = v240;
        v48 = v226;
        v53 = v243;
        v52 = v230;
        v42 = v242;
      }
    }
LABEL_69:
    if (v53 >= v42)
      goto LABEL_102;
    if (__OFSUB__(v53, v52))
      goto LABEL_185;
    if (v53 - v52 >= v48)
      goto LABEL_102;
    if (__OFADD__(v52, v48))
      goto LABEL_188;
    if (v52 + v48 >= v42)
      v122 = v42;
    else
      v122 = v52 + v48;
    if (v122 >= v52)
    {
      if (v53 == v122)
        goto LABEL_102;
      v219 = v49;
      v222 = v2;
      v123 = v245;
      v124 = *(_QWORD *)(v245 + 72);
      v246 = *(_QWORD *)(v245 + 16);
      v252 = v124 * (v53 - 1);
      v241 = v124;
      v125 = v53 * v124;
      v228 = v122;
      while (2)
      {
        v127 = 0;
        v242 = v125;
        v243 = v53;
        while (2)
        {
          v128 = *v253;
          v250 = (void (*)(char *, uint64_t, uint64_t))(v125 + v127);
          v251 = v52;
          v129 = v125 + v127 + v128;
          v130 = (void (*)(char *, uint64_t, uint64_t))v246;
          ((void (*)(char *, uint64_t, uint64_t))v246)(v23, v129, v63);
          v249 = v252 + v127;
          v130(v64, v252 + v127 + v128, v63);
          v131 = v63;
          v132 = sub_23E1350C4();
          if ((v132 & 1) != (sub_23E1350C4() & 1))
          {
            v133 = *(void (**)(char *, uint64_t))(v123 + 8);
            v64 = v247;
            v125 = v242;
LABEL_98:
            v63 = v254;
            v133(v64, v254);
            v133(v23, v63);
            if ((v132 & 1) == 0)
              goto LABEL_80;
LABEL_99:
            v153 = *v253;
            if (!*v253)
              goto LABEL_190;
            v154 = (char *)(v153 + v252 + v127);
            v155 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 32);
            v155(v248, v153 + v125 + v127, v254);
            swift_arrayInitWithTakeFrontToBack();
            v63 = v254;
            v155(v154, (uint64_t)v248, v254);
            v127 -= v241;
            v52 = v251 + 1;
            v126 = v243;
            if (v243 == v251 + 1)
              goto LABEL_81;
            continue;
          }
          break;
        }
        v244 = sub_23E135040();
        v135 = v134;
        v136 = v239;
        v130(v239, (uint64_t)v23, v131);
        if (v135)
        {
          v137 = v131;
        }
        else
        {
          v138 = sub_23E1350B8();
          v137 = v254;
          v244 = v138;
          v135 = v139;
        }
        v125 = v242;
        v133 = *(void (**)(char *, uint64_t))(v245 + 8);
        v133(v136, v137);
        v140 = v247;
        v141 = sub_23E135040();
        v143 = v142;
        v144 = v238;
        ((void (*)(char *, char *, uint64_t))v246)(v238, v140, v137);
        if (!v143)
        {
          v141 = sub_23E1350B8();
          v143 = v145;
        }
        v133(v144, v254);
        v64 = v247;
        if (v244 == v141 && v135 == v143)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_97;
        }
        if ((sub_23E137614() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v146 = v254;
          v133(v64, v254);
          v23 = v240;
          v133(v240, v146);
          v123 = v245;
          goto LABEL_99;
        }
        v147 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v147 & 1) == 0)
        {
LABEL_97:
          v148 = v234;
          v23 = v240;
          sub_23E1350A0();
          v149 = v235;
          sub_23E1350A0();
          v132 = MEMORY[0x242649514](v148, v149);
          v150 = *(void (**)(char *, uint64_t))(v236 + 8);
          v151 = v149;
          v152 = v237;
          v150(v151, v237);
          v150(v148, v152);
          v123 = v245;
          goto LABEL_98;
        }
        v63 = v254;
        v133(v64, v254);
        v23 = v240;
        v133(v240, v63);
        v123 = v245;
LABEL_80:
        v126 = v243;
LABEL_81:
        v53 = v126 + 1;
        v252 += v241;
        v125 += v241;
        v52 = v230;
        if (v53 != v228)
          continue;
        break;
      }
      v53 = v228;
      v2 = v222;
      v49 = v219;
      v31 = v233;
LABEL_102:
      if (v53 < v52)
        goto LABEL_180;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v49 = sub_23E073A18(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
      v157 = *((_QWORD *)v49 + 2);
      v156 = *((_QWORD *)v49 + 3);
      v51 = v157 + 1;
      v158 = v230;
      if (v157 >= v156 >> 1)
      {
        v208 = sub_23E073A18((char *)(v156 > 1), v157 + 1, 1, v49);
        v158 = v230;
        v49 = v208;
      }
      *((_QWORD *)v49 + 2) = v51;
      v159 = v49 + 32;
      v160 = &v49[16 * v157 + 32];
      *(_QWORD *)v160 = v158;
      *((_QWORD *)v160 + 1) = v53;
      v243 = v53;
      if (v157)
      {
        while (2)
        {
          v161 = v51 - 1;
          if (v51 >= 4)
          {
            v166 = &v159[16 * v51];
            v167 = *((_QWORD *)v166 - 8);
            v168 = *((_QWORD *)v166 - 7);
            v172 = __OFSUB__(v168, v167);
            v169 = v168 - v167;
            if (v172)
              goto LABEL_169;
            v171 = *((_QWORD *)v166 - 6);
            v170 = *((_QWORD *)v166 - 5);
            v172 = __OFSUB__(v170, v171);
            v164 = v170 - v171;
            v165 = v172;
            if (v172)
              goto LABEL_170;
            v173 = v51 - 2;
            v174 = &v159[16 * v51 - 32];
            v176 = *(_QWORD *)v174;
            v175 = *((_QWORD *)v174 + 1);
            v172 = __OFSUB__(v175, v176);
            v177 = v175 - v176;
            if (v172)
              goto LABEL_172;
            v172 = __OFADD__(v164, v177);
            v178 = v164 + v177;
            if (v172)
              goto LABEL_175;
            if (v178 >= v169)
            {
              v196 = &v159[16 * v161];
              v198 = *(_QWORD *)v196;
              v197 = *((_QWORD *)v196 + 1);
              v172 = __OFSUB__(v197, v198);
              v199 = v197 - v198;
              if (v172)
                goto LABEL_179;
              v189 = v164 < v199;
            }
            else
            {
LABEL_121:
              if ((v165 & 1) != 0)
                goto LABEL_171;
              v173 = v51 - 2;
              v179 = &v159[16 * v51 - 32];
              v181 = *(_QWORD *)v179;
              v180 = *((_QWORD *)v179 + 1);
              v182 = __OFSUB__(v180, v181);
              v183 = v180 - v181;
              v184 = v182;
              if (v182)
                goto LABEL_174;
              v185 = &v159[16 * v161];
              v187 = *(_QWORD *)v185;
              v186 = *((_QWORD *)v185 + 1);
              v172 = __OFSUB__(v186, v187);
              v188 = v186 - v187;
              if (v172)
                goto LABEL_177;
              if (__OFADD__(v183, v188))
                goto LABEL_178;
              if (v183 + v188 < v164)
                goto LABEL_133;
              v189 = v164 < v188;
            }
            if (v189)
              v161 = v173;
          }
          else
          {
            if (v51 == 3)
            {
              v163 = *((_QWORD *)v49 + 4);
              v162 = *((_QWORD *)v49 + 5);
              v172 = __OFSUB__(v162, v163);
              v164 = v162 - v163;
              v165 = v172;
              goto LABEL_121;
            }
            v190 = *((_QWORD *)v49 + 4);
            v191 = *((_QWORD *)v49 + 5);
            v172 = __OFSUB__(v191, v190);
            v183 = v191 - v190;
            v184 = v172;
LABEL_133:
            if ((v184 & 1) != 0)
              goto LABEL_173;
            v192 = &v159[16 * v161];
            v194 = *(_QWORD *)v192;
            v193 = *((_QWORD *)v192 + 1);
            v172 = __OFSUB__(v193, v194);
            v195 = v193 - v194;
            if (v172)
              goto LABEL_176;
            if (v195 < v183)
              goto LABEL_15;
          }
          v200 = v161 - 1;
          if (v161 - 1 >= v51)
          {
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
            goto LABEL_189;
          }
          if (!*v253)
            goto LABEL_191;
          v201 = v49;
          v202 = &v159[16 * v200];
          v203 = *(_QWORD *)v202;
          v204 = &v159[16 * v161];
          v205 = *((_QWORD *)v204 + 1);
          sub_23E02F2DC(*v253 + *(_QWORD *)(v245 + 72) * *(_QWORD *)v202, *v253 + *(_QWORD *)(v245 + 72) * *(_QWORD *)v204, *v253 + *(_QWORD *)(v245 + 72) * v205, v231);
          if (v2)
            goto LABEL_163;
          if (v205 < v203)
            goto LABEL_166;
          if (v161 > *((_QWORD *)v201 + 2))
            goto LABEL_167;
          *(_QWORD *)v202 = v203;
          *(_QWORD *)&v159[16 * v200 + 8] = v205;
          v206 = *((_QWORD *)v201 + 2);
          if (v161 >= v206)
            goto LABEL_168;
          v49 = v201;
          v51 = v206 - 1;
          memmove(&v159[16 * v161], v204 + 16, 16 * (v206 - 1 - v161));
          *((_QWORD *)v201 + 2) = v206 - 1;
          v189 = v206 > 2;
          v23 = v240;
          v31 = v233;
          if (!v189)
            goto LABEL_15;
          continue;
        }
      }
      v51 = 1;
LABEL_15:
      v42 = v253[1];
      v50 = v243;
      v48 = v226;
      if (v243 >= v42)
        goto LABEL_152;
      continue;
    }
    break;
  }
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23E02DB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 v35;
  uint64_t v36;
  BOOL v37;
  void (*v38)(char *, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  char v51;
  char *v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  _QWORD *v83;

  v82 = a4;
  v64 = a1;
  v6 = sub_23E134C80();
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v62 - v9;
  v10 = sub_23E1352BC();
  v83 = *(_QWORD **)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v79 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v62 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v62 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v75 = a3;
  v76 = (char *)&v62 - v22;
  v63 = a2;
  if (a3 != a2)
  {
    v23 = v83[9];
    v24 = (void (*)(char *, uint64_t, uint64_t))v83[2];
    v77 = v19;
    v78 = v24;
    v25 = v23 * (v75 - 1);
    v72 = v23;
    v26 = v23 * v75;
    v69 = v16;
    v70 = v21;
LABEL_7:
    v27 = 0;
    v28 = v64;
    v73 = v26;
    v74 = v25;
    while (1)
    {
      v29 = *v82;
      v81 = v26 + v27;
      v30 = v26 + v27 + v29;
      v31 = v76;
      v32 = v78;
      v78(v76, v30, v10);
      v33 = v25 + v27;
      v32(v19, v33 + v29, v10);
      v34 = sub_23E1351CC();
      v80 = v33;
      if ((v34 & 0x10000) != 0 || (v35 = v34, v36 = sub_23E1351CC(), (v36 & 0x10000) != 0))
      {
        v39 = sub_23E1352B0();
        if (((v39 ^ sub_23E1352B0()) & 1) != 0)
        {
          v38 = (void (*)(char *, uint64_t))v83[1];
          if ((v39 & 1) == 0)
            goto LABEL_5;
          goto LABEL_25;
        }
        v40 = sub_23E1351B4();
        v42 = v41;
        v78(v16, (uint64_t)v31, v10);
        if (v42)
        {
          v71 = v40;
        }
        else
        {
          v71 = sub_23E13528C();
          v42 = v43;
        }
        v38 = (void (*)(char *, uint64_t))v83[1];
        v38(v16, v10);
        v44 = v77;
        v45 = sub_23E1351B4();
        v47 = v46;
        v48 = v70;
        v78(v70, (uint64_t)v44, v10);
        if (!v47)
        {
          v45 = sub_23E13528C();
          v47 = v49;
        }
        v38(v48, v10);
        if (v71 == v45 && v42 == v47)
        {
          swift_bridgeObjectRelease_n();
          v31 = v76;
        }
        else
        {
          v50 = sub_23E137614();
          v31 = v76;
          if ((v50 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v16 = v69;
            v19 = v77;
LABEL_25:
            v38(v19, v10);
            result = ((uint64_t (*)(char *, uint64_t))v38)(v31, v10);
            v26 = v73;
            v25 = v74;
            goto LABEL_29;
          }
          v51 = sub_23E137614();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v51 & 1) != 0)
          {
            v16 = v69;
            v19 = v77;
LABEL_5:
            v38(v19, v10);
            result = ((uint64_t (*)(char *, uint64_t))v38)(v31, v10);
            v26 = v73;
            v25 = v74;
LABEL_6:
            v25 += v72;
            v26 += v72;
            if (++v75 == v63)
              return result;
            goto LABEL_7;
          }
        }
        v52 = v65;
        sub_23E135268();
        v53 = v66;
        v54 = v77;
        sub_23E135268();
        LODWORD(v71) = MEMORY[0x242649514](v52, v53);
        v55 = *(void (**)(char *, uint64_t))(v67 + 8);
        v56 = v53;
        v57 = v68;
        v55(v56, v68);
        v58 = v57;
        v19 = v54;
        v37 = v71;
        v55(v52, v58);
        v16 = v69;
        v38(v19, v10);
      }
      else
      {
        v37 = v35 < (unsigned __int16)v36;
        v38 = (void (*)(char *, uint64_t))v83[1];
        v38(v19, v10);
      }
      result = ((uint64_t (*)(char *, uint64_t))v38)(v31, v10);
      v26 = v73;
      v25 = v74;
      if (!v37)
        goto LABEL_6;
LABEL_29:
      v59 = *v82;
      if (!*v82)
      {
        __break(1u);
        return result;
      }
      v60 = v59 + v25 + v27;
      v61 = (void (*)(char *, uint64_t, uint64_t))v83[4];
      v61(v79, v59 + v26 + v27, v10);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v61)(v60, v79, v10);
      v27 -= v72;
      ++v28;
      v19 = v77;
      if (v75 == v28)
        goto LABEL_6;
    }
  }
  return result;
}

uint64_t sub_23E02E07C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_23E134C80();
  v36 = *(_QWORD **)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
LABEL_5:
    v15 = 0;
    v16 = v28;
    while (1)
    {
      v17 = *a4;
      v18 = v31;
      v19 = v29;
      v29(v31, v37 + v15 + *a4, v7);
      v20 = v32;
      v19(v32, v38 + v15 + v17, v7);
      sub_23DF73F28(&qword_256D21D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
      LOBYTE(v17) = sub_23E137140();
      v21 = (void (*)(char *, uint64_t))v36[1];
      v22 = v20;
      a4 = v30;
      v21(v22, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v38 += v33;
        v37 += v33;
        if (++v34 == v27)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
      v25(v35, v23 + v37 + v15, v7);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v24, v35, v7);
      v15 -= v33;
      if (v34 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E02E2F4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(uint64_t, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  char *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;

  v56 = a1;
  v7 = sub_23E134C80();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v54 - v10;
  v11 = sub_23E1350D0();
  v75 = *(_QWORD **)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v63 = (char *)&v54 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v54 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v70 = a3;
  v71 = (char *)&v54 - v22;
  v55 = a2;
  if (a3 != a2)
  {
    v23 = v75[9];
    v67 = (void (*)(char *, uint64_t, uint64_t))v75[2];
    v68 = v23;
    v77 = v23 * (v70 - 1);
    v24 = v23 * v70;
    v61 = a4;
    v62 = v21;
    v66 = v19;
    v64 = v11;
LABEL_6:
    v25 = 0;
    v76 = v56;
    v69 = v24;
    while (1)
    {
      v26 = *a4;
      v74 = v24 + v25;
      v27 = v24 + v25 + v26;
      v28 = v71;
      v29 = v67;
      v67(v71, v27, v11);
      v73 = v77 + v25;
      v29(v19, v77 + v25 + v26, v11);
      v30 = sub_23E1350C4();
      if ((v30 & 1) == (sub_23E1350C4() & 1))
      {
        v33 = sub_23E135040();
        v35 = v34;
        v36 = v63;
        v29(v63, (uint64_t)v28, v11);
        v37 = (void (*)(uint64_t, char *, uint64_t))v29;
        if (v35)
        {
          v65 = v33;
        }
        else
        {
          v65 = sub_23E1350B8();
          v35 = v38;
        }
        v32 = (void (*)(char *, uint64_t))v75[1];
        v32(v36, v11);
        v39 = v66;
        v40 = sub_23E135040();
        v42 = v41;
        v43 = v62;
        v37((uint64_t)v62, v39, v11);
        if (!v42)
        {
          v40 = sub_23E1350B8();
          v42 = v44;
        }
        v32(v43, v11);
        if (v65 == v40 && v35 == v42)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          if ((sub_23E137614() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v19 = v66;
            v32(v66, v11);
            result = ((uint64_t (*)(char *, uint64_t))v32)(v71, v11);
            a4 = v61;
            v24 = v69;
            goto LABEL_23;
          }
          v45 = sub_23E137614();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v45 & 1) != 0)
          {
            v19 = v66;
            v32(v66, v11);
            result = ((uint64_t (*)(char *, uint64_t))v32)(v71, v11);
            a4 = v61;
            v24 = v69;
LABEL_5:
            v77 += v68;
            v24 += v68;
            if (++v70 == v55)
              return result;
            goto LABEL_6;
          }
        }
        v46 = v57;
        v28 = v71;
        sub_23E1350A0();
        v47 = v58;
        v31 = v66;
        sub_23E1350A0();
        v30 = MEMORY[0x242649514](v46, v47);
        v48 = *(void (**)(char *, uint64_t))(v59 + 8);
        v49 = v47;
        v50 = v60;
        v48(v49, v60);
        v48(v46, v50);
        a4 = v61;
      }
      else
      {
        v31 = v19;
        v32 = (void (*)(char *, uint64_t))v75[1];
      }
      v11 = v64;
      v32(v31, v64);
      result = ((uint64_t (*)(char *, uint64_t))v32)(v28, v11);
      v19 = v31;
      v24 = v69;
      if ((v30 & 1) == 0)
        goto LABEL_5;
LABEL_23:
      v51 = *a4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      v52 = v51 + v77 + v25;
      v53 = (void (*)(char *, uint64_t, uint64_t))v75[4];
      v53(v72, v51 + v24 + v25, v11);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v53)(v52, v72, v11);
      v25 -= v68;
      if (v70 == ++v76)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_23E02E7E0(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v29)(char *, unint64_t, uint64_t);
  char v30;
  char v31;
  void (*v32)(char *, uint64_t);
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, unint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(uint64_t, unint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;

  v5 = v4;
  v10 = sub_23E1352BC();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v54 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v54 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)&v54 - v19;
  v63 = *(_QWORD *)(v18 + 72);
  if (!v63)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v21 = v18;
  if (a2 - a1 == 0x8000000000000000 && v63 == -1)
    goto LABEL_66;
  v22 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v63 == -1)
    goto LABEL_67;
  v23 = (uint64_t)(a2 - a1) / v63;
  v66 = a1;
  v65 = a4;
  v24 = (uint64_t)v22 / v63;
  if (v23 >= (uint64_t)v22 / v63)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      v26 = v24 * v63;
      v58 = v17;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v36 = a4 + v26;
      v64 = a4 + v26;
      v66 = a2;
      if (v26 >= 1 && a1 < a2)
      {
        v55 = a1;
        v56 = a4;
        v59 = -v63;
        v60 = v10;
        v57 = *(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16);
        v38 = v61;
        v62 = v21;
        while (1)
        {
          v39 = a2;
          v40 = (unint64_t)a3;
          v41 = v59;
          v42 = v57;
          v57((uint64_t)v38, v36 + v59, v10);
          v63 = v39;
          v43 = v39 + v41;
          v44 = (uint64_t)v38;
          v45 = v58;
          v42(v58, v43, v10);
          v46 = sub_23E02AAB0(v44, v45);
          if (v5)
            break;
          v47 = v46;
          v61 = 0;
          v48 = v40 + v41;
          v49 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
          v49(v45, v10);
          v49(v44, v10);
          v38 = (char *)v44;
          if ((v47 & 1) != 0)
          {
            if (v40 < v63 || v40 + v41 >= v63)
            {
              v48 = v40 + v41;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v48 = v40 + v41;
              if (v40 != v63)
                swift_arrayInitWithTakeBackToFront();
            }
            v66 += v59;
          }
          else
          {
            v43 = v63;
            v50 = v64;
            v64 += v41;
            if (v40 < v50 || v48 >= v50)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v40 != v50)
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v5 = v61;
          v36 = v64;
          if (v64 > v56)
          {
            a2 = v43;
            a3 = (char *)v48;
            v10 = v60;
            if (v43 > v55)
              continue;
          }
          goto LABEL_64;
        }
        v52 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
        v52(v45, v10);
        v52(v44, v10);
      }
      goto LABEL_64;
    }
  }
  else
  {
    v61 = a3;
    if ((v23 & 0x8000000000000000) == 0)
    {
      v25 = v23 * v63;
      v62 = v18;
      if (a4 < a1 || a1 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v27 = a4 + v25;
      v64 = a4 + v25;
      if (v25 >= 1 && a2 < (unint64_t)v61)
      {
        v29 = *(void (**)(char *, unint64_t, uint64_t))(v62 + 16);
        while (1)
        {
          v29(v20, a2, v10);
          v29(v16, a4, v10);
          v30 = sub_23E02AAB0((uint64_t)v20, (uint64_t)v16);
          if (v4)
            break;
          v31 = v30;
          v32 = *(void (**)(char *, uint64_t))(v62 + 8);
          v32(v16, v10);
          v32(v20, v10);
          v33 = v66;
          if ((v31 & 1) != 0)
          {
            v34 = a2 + v63;
            if (v66 < a2 || v66 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v66 == a2)
            {
              v33 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            v35 = v65 + v63;
            if (v66 < v65 || v66 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v66 != v65)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v65 = v35;
            v34 = a2;
          }
          v66 = v33 + v63;
          a4 = v65;
          if (v65 < v27)
          {
            a2 = v34;
            if (v34 < (unint64_t)v61)
              continue;
          }
          goto LABEL_64;
        }
        v51 = *(void (**)(char *, uint64_t))(v62 + 8);
        v51(v16, v10);
        v51(v20, v10);
      }
LABEL_64:
      sub_23E073BC8(&v66, &v65, (uint64_t *)&v64);
      return 1;
    }
  }
LABEL_68:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E02ED88(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v8 = sub_23E134C80();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v42 - v12;
  v49 = v9[9];
  if (!v49)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v49 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v49 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v49;
  v52 = a1;
  v51 = a4;
  v15 = v13 / v49;
  if (v14 >= v13 / v49)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v49;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v17;
      v50 = a4 + v17;
      v52 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v30 = -v49;
        v43 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v44 = v9;
        v45 = a4;
        v46 = a1;
        do
        {
          v49 = a3 + v30;
          v31 = v47;
          v32 = v43;
          v43(v47, v28 + v30, v8);
          v33 = a2 + v30;
          v34 = v30;
          v35 = v48;
          v32(v48, v33, v8);
          sub_23DF73F28(&qword_256D21D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
          LOBYTE(v32) = sub_23E137140();
          v36 = (void (*)(char *, uint64_t))v9[1];
          v36(v35, v8);
          v36(v31, v8);
          if ((v32 & 1) != 0)
          {
            v30 = v34;
            v37 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v52 += v30;
          }
          else
          {
            v40 = v50;
            v50 += v34;
            v30 = v34;
            v37 = v49;
            if (a3 < v40 || v49 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack();
              v33 = a2;
              v9 = v44;
              v38 = v45;
              v39 = v46;
            }
            else
            {
              v9 = v44;
              v38 = v45;
              v39 = v46;
              if (a3 != v40)
                swift_arrayInitWithTakeBackToFront();
              v33 = a2;
            }
          }
          v28 = v50;
          if (v50 <= v38)
            break;
          a2 = v33;
          a3 = v37;
        }
        while (v33 > v39);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v49;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v46 = a4 + v16;
    v50 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v47;
        v19(v47, a2, v8);
        v22 = v48;
        v19(v48, a4, v8);
        sub_23DF73F28(&qword_256D21D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA90]);
        v23 = sub_23E137140();
        v24 = (void (*)(char *, uint64_t))v9[1];
        v24(v22, v8);
        v24(v21, v8);
        v25 = v52;
        if ((v23 & 1) != 0)
        {
          v26 = a2 + v49;
          if (v52 < a2 || v52 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 == a2)
              v25 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v27 = v51 + v49;
          if (v52 < v51 || v52 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v52 != v51)
              swift_arrayInitWithTakeBackToFront();
          }
          v51 = v27;
          v26 = a2;
        }
        v52 = v25 + v49;
        a4 = v51;
        if (v51 >= v46)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_60:
    sub_23E073BD4(&v52, &v51, (uint64_t *)&v50);
    return 1;
  }
LABEL_64:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E02F2DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  unint64_t v64;
  uint64_t v66;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  unint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  BOOL v98;
  uint64_t result;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  void (*v110)(_QWORD, _QWORD, _QWORD);
  unint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;

  v5 = v4;
  v10 = sub_23E134C80();
  v105 = *(_QWORD *)(v10 - 8);
  v106 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v104 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v103 = (char *)&v100 - v13;
  v14 = sub_23E1350D0();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v102 = (char *)&v100 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v115 = (char *)&v100 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v113 = (char *)&v100 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v109 = (char *)&v100 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v100 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v31 = (char *)&v100 - v30;
  v112 = v32;
  v114 = *(_QWORD *)(v32 + 72);
  if (!v114)
  {
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (a2 - a1 == 0x8000000000000000 && v114 == -1)
    goto LABEL_93;
  v33 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v114 == -1)
    goto LABEL_94;
  v34 = (uint64_t)(a2 - a1) / v114;
  v118 = a1;
  v117 = a4;
  v35 = v33 / v114;
  v100 = v5;
  if (v34 >= v33 / v114)
  {
    if (v35 < 0)
      goto LABEL_95;
    v37 = v35 * v114;
    v101 = v28;
    if (a4 < a2 || a2 + v37 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v64 = a4 + v37;
    v116 = a4 + v37;
    v118 = a2;
    if (v37 < 1 || a1 >= a2)
    {
LABEL_91:
      sub_23E073BE0(&v118, &v117, (uint64_t *)&v116);
      return 1;
    }
    v66 = -v114;
    v67 = *(void (**)(_QWORD, _QWORD, _QWORD))(v112 + 16);
    v108 = a1;
    v109 = (char *)a4;
    v110 = v67;
    v107 = -v114;
    while (1)
    {
      v68 = v64 + v66;
      v69 = v66;
      v70 = v113;
      v67(v113, v68, v14);
      v114 = a2;
      v71 = a2 + v69;
      v67(v115, v71, v14);
      v72 = (void (*)(char *, char *, uint64_t))v67;
      v73 = sub_23E1350C4();
      if ((v73 & 1) == (sub_23E1350C4() & 1))
        break;
      v74 = *(void (**)(char *, uint64_t))(v112 + 8);
LABEL_75:
      v66 = v107;
      v93 = v114;
      v94 = a3 + v107;
      v74(v115, v14);
      v74(v113, v14);
      if ((v73 & 1) != 0)
      {
        v96 = v108;
        v95 = (unint64_t)v109;
        if (a3 < v93 || v94 >= v93)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a3 != v93)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v118 += v66;
      }
      else
      {
        v97 = v116;
        v116 += v66;
        v96 = v108;
        v95 = (unint64_t)v109;
        if (a3 < v97 || v94 >= v97)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a3 != v97)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v71 = v93;
      }
      v64 = v116;
      v98 = v116 > v95;
      v67 = v110;
      if (v98)
      {
        a2 = v71;
        a3 += v66;
        if (v71 > v96)
          continue;
      }
      goto LABEL_91;
    }
    v111 = a3;
    v75 = sub_23E135040();
    v77 = v76;
    v78 = v102;
    v72(v102, v70, v14);
    if (v77)
    {
      v79 = v75;
    }
    else
    {
      v79 = sub_23E1350B8();
      v77 = v80;
    }
    v74 = *(void (**)(char *, uint64_t))(v112 + 8);
    v74(v78, v14);
    v81 = v115;
    v82 = sub_23E135040();
    v84 = v83;
    v85 = v101;
    v110(v101, v81, v14);
    if (!v84)
    {
      v82 = sub_23E1350B8();
      v84 = v86;
    }
    v74(v85, v14);
    if (v79 == v82 && v77 == v84)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      if ((sub_23E137614() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v73 = 1;
        goto LABEL_74;
      }
      v92 = sub_23E137614();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v92 & 1) != 0)
      {
        v73 = 0;
        goto LABEL_74;
      }
    }
    v87 = v103;
    sub_23E1350A0();
    v88 = v104;
    sub_23E1350A0();
    v73 = MEMORY[0x242649514](v87, v88);
    v89 = *(void (**)(char *, uint64_t))(v105 + 8);
    v90 = v88;
    v91 = v106;
    v89(v90, v106);
    v89(v87, v91);
LABEL_74:
    a3 = v111;
    goto LABEL_75;
  }
  if ((v34 & 0x8000000000000000) == 0)
  {
    v36 = v34 * v114;
    v115 = v27;
    v108 = v29;
    if (a4 < a1 || a1 + v36 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v110 = (void (*)(_QWORD, _QWORD, _QWORD))(a4 + v36);
    v116 = a4 + v36;
    if (v36 >= 1 && a2 < a3)
    {
      v113 = *(char **)(v112 + 16);
      v111 = a3;
      v107 = (uint64_t)v31;
      while (1)
      {
        v39 = (void (*)(char *, unint64_t, uint64_t))v113;
        ((void (*)(char *, unint64_t, uint64_t))v113)(v31, a2, v14);
        v39(v115, a4, v14);
        v40 = sub_23E1350C4();
        if ((v40 & 1) == (sub_23E1350C4() & 1))
        {
          v42 = sub_23E135040();
          v44 = v43;
          v45 = v109;
          v39(v109, (unint64_t)v31, v14);
          if (!v44)
          {
            v42 = sub_23E1350B8();
            v44 = v46;
          }
          v41 = *(void (**)(char *, uint64_t))(v112 + 8);
          v41(v45, v14);
          v47 = v115;
          v48 = sub_23E135040();
          v50 = v49;
          v51 = v108;
          ((void (*)(unint64_t, char *, uint64_t))v113)(v108, v47, v14);
          if (!v50)
          {
            v48 = sub_23E1350B8();
            v50 = v52;
          }
          v41((char *)v51, v14);
          if (v42 == v48 && v44 == v50)
          {
            swift_bridgeObjectRelease_n();
            v31 = (char *)v107;
          }
          else
          {
            v61 = sub_23E137614();
            v31 = (char *)v107;
            if ((v61 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v41(v115, v14);
              v41(v31, v14);
              a3 = v111;
              goto LABEL_40;
            }
            v63 = sub_23E137614();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v63 & 1) != 0)
            {
              v41(v115, v14);
              v41(v31, v14);
              a3 = v111;
LABEL_34:
              v59 = v118;
              v60 = v117 + v114;
              if (v118 < v117 || v118 >= v60)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v118 != v117)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              v117 = v60;
              v62 = a2;
              goto LABEL_47;
            }
          }
          v53 = v103;
          sub_23E1350A0();
          v54 = v104;
          v55 = v115;
          sub_23E1350A0();
          v40 = MEMORY[0x242649514](v53, v54);
          v56 = *(void (**)(char *, uint64_t))(v105 + 8);
          v57 = v54;
          v58 = v106;
          v56(v57, v106);
          v56(v53, v58);
          a3 = v111;
          v41(v55, v14);
        }
        else
        {
          v41 = *(void (**)(char *, uint64_t))(v112 + 8);
          v41(v115, v14);
        }
        v41(v31, v14);
        if ((v40 & 1) == 0)
          goto LABEL_34;
LABEL_40:
        v59 = v118;
        v62 = a2 + v114;
        if (v118 < a2 || v118 >= v62)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v118 == a2)
        {
          v59 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_47:
        v118 = v59 + v114;
        a4 = v117;
        if (v117 < (unint64_t)v110)
        {
          a2 = v62;
          if (v62 < a3)
            continue;
        }
        goto LABEL_91;
      }
    }
    goto LABEL_91;
  }
LABEL_95:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E02FC4C(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  ValueMetadata *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  _BYTE *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t *v51;
  uint64_t (*v52)(uint64_t);
  uint64_t *v53;
  uint64_t result;
  uint64_t *v55;
  _BYTE v56[12];
  int v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v59 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v59);
  v58 = &v56[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = type metadata accessor for Device.Control(0);
  v66 = *(_QWORD *)(v75 - 8);
  v5 = MEMORY[0x24BDAC7A8](v75);
  v61 = &v56[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v56[-v8];
  MEMORY[0x24BDAC7A8](v7);
  v62 = &v56[-v10];
  v11 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v56[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_23E01CFC4(a1);
  v16 = MEMORY[0x24BEE4AF8];
  if (!v14)
    return v16;
  v57 = a2;
  v16 = (*(uint64_t (**)(uint64_t, ValueMetadata *, uint64_t))(v15 + 8))(a1, v14, v15);
  v73 = *(_QWORD *)(v16 + 16);
  if (!v73)
    return v16;
  v17 = 0;
  v72 = *(int *)(v59 + 40);
  v18 = type metadata accessor for Device.Control;
  v64 = v11;
  v65 = a1;
  v67 = v13;
  v60 = v9;
  do
  {
    v26 = *(_BYTE *)(a1 + v72);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23E09EDD0(v16);
    if (v17 >= *(_QWORD *)(v16 + 16))
    {
      __break(1u);
      goto LABEL_35;
    }
    v27 = type metadata accessor for Device.ControlGroup(0);
    v28 = *(_QWORD *)(v27 - 8);
    v70 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v71 = v27;
    v29 = (_QWORD *)(v16 + v70 + *(_QWORD *)(v28 + 72) * v17);
    sub_23DF73E10((uint64_t)v29, (uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        v19 = (uint64_t)v13;
        v20 = v16;
        v21 = v11;
        v22 = a1;
        v23 = v18;
        v24 = v62;
        sub_23DF89384(v19, (uint64_t)v62, v23);
        v24[*(int *)(v75 + 44)] = v26;
        sub_23DF73E54((uint64_t)v29, type metadata accessor for Device.ControlGroup.LayoutType);
        v25 = (uint64_t)v24;
        v18 = v23;
        a1 = v22;
        v11 = v21;
        v16 = v20;
        v13 = v67;
        sub_23DF89384(v25, (uint64_t)v29, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_5;
      }
      v74 = v17;
      v31 = *(_QWORD *)v13;
      v32 = *(_QWORD *)(*(_QWORD *)v13 + 16);
      if (v32)
      {
        v68 = v29;
        v69 = v16;
        v76 = MEMORY[0x24BEE4AF8];
        v33 = v31;
        sub_23E09E1AC(0, v32, 0);
        v34 = v76;
        v35 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
        v63 = v33;
        v36 = v33 + v35;
        v37 = *(_QWORD *)(v66 + 72);
        do
        {
          sub_23DF73E10(v36, (uint64_t)v9, v18);
          v9[*(int *)(v75 + 44)] = v26;
          v76 = v34;
          v39 = *(_QWORD *)(v34 + 16);
          v38 = *(_QWORD *)(v34 + 24);
          if (v39 >= v38 >> 1)
          {
            sub_23E09E1AC(v38 > 1, v39 + 1, 1);
            v34 = v76;
          }
          *(_QWORD *)(v34 + 16) = v39 + 1;
          sub_23DF89384((uint64_t)v9, v34 + v35 + v39 * v37, v18);
          v36 += v37;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease();
        v11 = v64;
        a1 = v65;
        v29 = v68;
        v16 = v69;
        v13 = v67;
        goto LABEL_24;
      }
    }
    else
    {
      v74 = v17;
      v40 = *(_QWORD *)v13;
      v41 = *(_QWORD *)(*(_QWORD *)v13 + 16);
      if (v41)
      {
        v68 = v29;
        v69 = v16;
        v76 = MEMORY[0x24BEE4AF8];
        v42 = v40;
        sub_23E09E1AC(0, v41, 0);
        v34 = v76;
        v43 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
        v63 = v42;
        v44 = v42 + v43;
        v45 = *(_QWORD *)(v66 + 72);
        v46 = (uint64_t)v61;
        do
        {
          sub_23DF73E10(v44, v46, v18);
          *(_BYTE *)(v46 + *(int *)(v75 + 44)) = v26;
          v76 = v34;
          v48 = *(_QWORD *)(v34 + 16);
          v47 = *(_QWORD *)(v34 + 24);
          if (v48 >= v47 >> 1)
          {
            sub_23E09E1AC(v47 > 1, v48 + 1, 1);
            v34 = v76;
          }
          *(_QWORD *)(v34 + 16) = v48 + 1;
          sub_23DF89384(v46, v34 + v43 + v48 * v45, v18);
          v44 += v45;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
        v11 = v64;
        a1 = v65;
        v29 = v68;
        v16 = v69;
        v13 = v67;
        v9 = v60;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
LABEL_24:
    sub_23DF73E54((uint64_t)v29, type metadata accessor for Device.ControlGroup.LayoutType);
    *v29 = v34;
    swift_storeEnumTagMultiPayload();
    v17 = v74;
LABEL_5:
    ++v17;
  }
  while (v17 != v73);
  if (*(_QWORD *)(v16 + 16) == 1 && (v57 & 1) != 0)
  {
    v50 = v58;
    v49 = v59;
    v51 = (uint64_t *)(a1 + *(int *)(v59 + 32));
    v11 = *v51;
    v52 = (uint64_t (*)(uint64_t))v51[1];
    sub_23DF73E10(a1, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    if (v52)
    {
      v18 = v52;
    }
    else
    {
      v53 = (uint64_t *)&v50[*(int *)(v49 + 28)];
      v11 = *v53;
      v18 = (uint64_t (*)(uint64_t))v53[1];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      if (*(_QWORD *)(v16 + 16))
      {
LABEL_32:
        v55 = (uint64_t *)(v16 + v70 + *(int *)(v71 + 20));
        *v55 = v11;
        v55[1] = (uint64_t)v18;
        swift_bridgeObjectRelease();
        return v16;
      }
      goto LABEL_36;
    }
LABEL_35:
    result = sub_23E09EDD0(v16);
    v16 = result;
    if (*(_QWORD *)(result + 16))
      goto LABEL_32;
LABEL_36:
    __break(1u);
    return result;
  }
  return v16;
}

uint64_t sub_23E0301FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  void (*v69)(void);
  __int128 v70;
  uint64_t v71;

  v64 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F1D8);
  MEMORY[0x24BDAC7A8](v3);
  v65 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E134E60();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Device.ControlGroup(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v58 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v57 = (uint64_t)&v56 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v59 = (uint64_t)&v56 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v66 = (uint64_t)&v56 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v67 = (uint64_t)&v56 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v56 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(qword_256D21B48);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v68 = (uint64_t *)((char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v56 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = *(void (**)(void))(v10 + 56);
  v71 = (uint64_t)&v56 - v30;
  v31 = v9;
  v69 = v29;
  v29();
  v32 = a1;
  v33 = *(_QWORD *)(a1 + 16);
  if (!v33)
    goto LABEL_11;
  v61 = v8;
  v62 = v6;
  v63 = v5;
  v34 = v10;
  v35 = v32 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  *(_QWORD *)&v70 = v34;
  v36 = *(_QWORD *)(v34 + 72);
  v60 = v32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23DF73E10(v35, (uint64_t)v22, type metadata accessor for Device.ControlGroup);
    sub_23DF89C1C(v71, (uint64_t)v28, qword_256D21B48);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    if (v39(v28, 1, v31) != 1)
      break;
    sub_23DF89C7C((uint64_t)v28, qword_256D21B48);
    v37 = (uint64_t)v22;
LABEL_4:
    v38 = v71;
    sub_23DF89C7C(v71, qword_256D21B48);
    sub_23DF89384(v37, v38, type metadata accessor for Device.ControlGroup);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v69)(v38, 0, 1, v31);
    v35 += v36;
    if (!--v33)
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  v40 = v28;
  v41 = (uint64_t)v28;
  v42 = v31;
  v43 = v67;
  v44 = v68;
  sub_23DF89384(v41, v67, type metadata accessor for Device.ControlGroup);
  sub_23E0DC960(v43, (uint64_t)v22, v44);
  sub_23DF73E54(v43, type metadata accessor for Device.ControlGroup);
  sub_23DF73E54((uint64_t)v22, type metadata accessor for Device.ControlGroup);
  v31 = v42;
  if (v39((char *)v44, 1, v42) != 1)
  {
    v37 = v66;
    sub_23DF89384((uint64_t)v68, v66, type metadata accessor for Device.ControlGroup);
    v28 = v40;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  sub_23DF89C7C((uint64_t)v68, qword_256D21B48);
  v45 = v71;
  sub_23DF89C7C(v71, qword_256D21B48);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v69)(v45, 1, 1, v42);
LABEL_10:
  v6 = v62;
  v5 = v63;
  v8 = v61;
  v10 = v70;
LABEL_11:
  v46 = v65;
  sub_23DF89C1C(v64, v65, &qword_256D1F1D8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v46, 1, v5) == 1)
  {
    sub_23DF89C7C(v46, &qword_256D1F1D8);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v46, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v71, 1, v31))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_15:
    v47 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v48 = v58;
    sub_23DF73E10(v71, v58, type metadata accessor for Device.ControlGroup);
    v49 = v57;
    v50 = v8;
    sub_23E07A474(v57);
    sub_23DF73E54(v48, type metadata accessor for Device.ControlGroup);
    v51 = v49;
    v52 = v59;
    sub_23DF89384(v51, v59, type metadata accessor for Device.ControlGroup);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
    v47 = swift_allocObject();
    v70 = xmmword_23E138050;
    *(_OWORD *)(v47 + 16) = xmmword_23E138050;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v53 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v70;
    sub_23DF73E10(v52, v54 + v53, type metadata accessor for Device.ControlGroup);
    *(_QWORD *)(v47 + 32) = 0;
    *(_QWORD *)(v47 + 40) = 0;
    *(_QWORD *)(v47 + 56) = 0;
    *(_QWORD *)(v47 + 64) = 0;
    *(_QWORD *)(v47 + 48) = v54;
    sub_23DF73E54(v52, type metadata accessor for Device.ControlGroup);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v50, v5);
  }
  sub_23DF89C7C(v71, qword_256D21B48);
  return v47;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV8controls4withSayAC0C6ModuleVG0A9DataModel18StaticServiceGroupV_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  ValueMetadata *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  char v84;
  int EnumCaseMultiPayload;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t result;
  _QWORD v121[2];
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  size_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  void (*v147)(char *, char *, uint64_t);
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t *v161;
  unint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  size_t v166;
  unint64_t v167;

  v165 = type metadata accessor for Device.Control(0);
  v152 = *(_QWORD *)(v165 - 8);
  v2 = MEMORY[0x24BDAC7A8](v165);
  v163 = (char *)v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v121 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v121 - v7;
  v9 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_23E134C80();
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v127 = (char *)v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219D8);
  MEMORY[0x24BDAC7A8](v13);
  v141 = (uint64_t)v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_23E1353AC();
  v140 = *(_QWORD *)(v144 - 8);
  v15 = MEMORY[0x24BDAC7A8](v144);
  v126 = (char *)v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v139 = (char *)v121 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v138 = (uint64_t)v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v137 = (char *)v121 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v136 = (uint64_t)v121 - v23;
  v124 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v124);
  v25 = (char *)v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(qword_256D21B48);
  MEMORY[0x24BDAC7A8](v26);
  v134 = (uint64_t)v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Device.ControlGroup(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v133 = (uint64_t)v121 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v125 = (uint64_t)v121 - v32;
  v33 = sub_23E1352BC();
  v34 = MEMORY[0x24BE4DC28];
  v150 = v33;
  v142 = *(_QWORD *)(v33 - 8);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v135 = (char *)v121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v149 = (char *)v121 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v148 = (char *)v121 - v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F1D8);
  MEMORY[0x24BDAC7A8](v40);
  v122 = (char *)v121 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = a1;
  v42 = sub_23E135838();
  sub_23DF851EC(v42);
  v43 = swift_bridgeObjectRetain();
  v44 = sub_23E12E358(v43);
  swift_bridgeObjectRelease();
  v166 = v44;
  sub_23E02ADB8((uint64_t *)&v166, (uint64_t (*)(_QWORD))v34, (uint64_t (*)(uint64_t))sub_23E073DE4, sub_23E02AE48);
  swift_bridgeObjectRelease();
  v132 = *(_QWORD *)(v166 + 16);
  if (!v132)
  {
    swift_release();
    v116 = MEMORY[0x24BEE4AF8];
    goto LABEL_50;
  }
  v131 = v166 + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80));
  v130 = *(_QWORD *)(v142 + 72);
  v147 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
  v121[1] = v166;
  swift_retain();
  v45 = 0;
  v143 = MEMORY[0x24BEE4AF8];
  v164 = v6;
  v153 = v11;
  v154 = v9;
  v155 = v28;
  v156 = v25;
  v157 = v29;
  while (1)
  {
    v146 = v45;
    v46 = v148;
    v47 = v150;
    v48 = v147;
    v147(v148, (char *)(v131 + v130 * v45), v150);
    v48(v149, v46, v47);
    v49 = v141;
    StaticService.staticEndpoint.getter(v141);
    v50 = v140;
    v51 = v144;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v49, 1, v144) == 1)
    {
      sub_23DF89C7C(v49, &qword_256D219D8);
      v52 = type metadata accessor for MatterControlSolver.Source(0);
      v53 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v137, 1, 1, v52);
    }
    else
    {
      v54 = v139;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v139, v49, v51);
      v55 = v126;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v126, v54, v51);
      v56 = v137;
      sub_23E135370();
      v57 = type metadata accessor for MatterControlSolver.SourcePath(0);
      v58 = &v56[*(int *)(v57 + 20)];
      v59 = sub_23E134E78();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
      v56[*(int *)(v57 + 24)] = 0;
      v60 = (int *)type metadata accessor for MatterControlSolver.Source(0);
      sub_23E135388();
      *(_QWORD *)&v56[v60[6]] = sub_23E1353A0();
      v56[v60[7]] = sub_23E135364() == 1;
      v61 = sub_23E13537C();
      v62 = &v56[v60[8]];
      *(_WORD *)v62 = v61;
      v62[2] = BYTE2(v61) & 1;
      sub_23E135358();
      v166 = 0x746E696F70646E65;
      v167 = 0xE90000000000002DLL;
      v63 = v127;
      sub_23E135394();
      sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v64 = v129;
      sub_23E1375FC();
      sub_23E1371D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v63, v64);
      v65 = v166;
      v66 = v167;
      v67 = *(void (**)(char *, uint64_t))(v50 + 8);
      v68 = v55;
      v69 = v144;
      v67(v68, v144);
      v70 = (uint64_t *)&v56[v60[10]];
      *v70 = v65;
      v70[1] = v66;
      v53 = (uint64_t)v56;
      v6 = v164;
      v67(v139, v69);
      v11 = v153;
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v60 - 1) + 56))(v53, 0, 1, v60);
    }
    v71 = v136;
    sub_23DF89340(v53, v136, &qword_256D1EEE8);
    v72 = v135;
    v73 = v149;
    v74 = v150;
    v147(v135, v149, v150);
    v75 = v138;
    sub_23DF89C1C(v71, v138, &qword_256D1EEE8);
    v76 = (uint64_t)v156;
    sub_23E014648(v72, v75, (uint64_t)v156);
    v145 = *(void (**)(char *, uint64_t))(v142 + 8);
    v145(v73, v74);
    sub_23DF89C7C(v71, &qword_256D1EEE8);
    v77 = sub_23E01CFC4(v76);
    v79 = v157;
    if (!v77)
    {
      v80 = MEMORY[0x24BEE4AF8];
      v81 = v155;
      goto LABEL_38;
    }
    v80 = (*(uint64_t (**)(uint64_t, ValueMetadata *, uint64_t))(v78 + 8))(v76, v77, v78);
    v81 = v155;
    v159 = *(_QWORD *)(v80 + 16);
    if (v159)
      break;
LABEL_38:
    sub_23DF73E54(v76, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    if (*(_QWORD *)(v80 + 16) == 1)
    {
      v108 = v80 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      v109 = v134;
      sub_23DF73E10(v108, v134, type metadata accessor for Device.ControlGroup);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v109, 0, 1, v81);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v109 = v134;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v134, 1, 1, v81);
    }
    v145(v148, v150);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v109, 1, v81) == 1)
    {
      sub_23DF89C7C(v109, qword_256D21B48);
    }
    else
    {
      v110 = v109;
      v111 = v125;
      sub_23DF89384(v110, v125, type metadata accessor for Device.ControlGroup);
      sub_23DF89384(v111, v133, type metadata accessor for Device.ControlGroup);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v112 = v143;
      else
        v112 = sub_23E0076E4(0, *(_QWORD *)(v143 + 16) + 1, 1, v143);
      v114 = *(_QWORD *)(v112 + 16);
      v113 = *(_QWORD *)(v112 + 24);
      if (v114 >= v113 >> 1)
        v112 = sub_23E0076E4(v113 > 1, v114 + 1, 1, v112);
      *(_QWORD *)(v112 + 16) = v114 + 1;
      v115 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
      v143 = v112;
      sub_23DF89384(v133, v112 + v115 + *(_QWORD *)(v79 + 72) * v114, type metadata accessor for Device.ControlGroup);
    }
    v45 = v146 + 1;
    if (v146 + 1 == v132)
    {
      swift_release_n();
      v116 = v143;
LABEL_50:
      v117 = (uint64_t)v122;
      sub_23E1357FC();
      v118 = sub_23E134E60();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v117, 0, 1, v118);
      v119 = sub_23E0301FC(v116, v117);
      swift_bridgeObjectRelease();
      sub_23DF89C7C(v117, &qword_256D1F1D8);
      return v119;
    }
  }
  v82 = 0;
  v158 = *(int *)(v124 + 40);
  while (1)
  {
    v162 = v82;
    v84 = *(_BYTE *)(v76 + v158);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v80 = sub_23E09EDD0(v80);
    if (v162 >= *(_QWORD *)(v80 + 16))
      break;
    v161 = (uint64_t *)(v80
                     + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))
                     + *(_QWORD *)(v79 + 72) * v162);
    sub_23DF73E10((uint64_t)v161, (uint64_t)v11, type metadata accessor for Device.ControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for Device.Control);
        v8[*(int *)(v165 + 44)] = v84;
        v107 = (uint64_t)v161;
        sub_23DF73E54((uint64_t)v161, type metadata accessor for Device.ControlGroup.LayoutType);
        sub_23DF89384((uint64_t)v8, v107, type metadata accessor for Device.Control);
        swift_storeEnumTagMultiPayload();
        goto LABEL_12;
      }
      v160 = v80;
      v86 = *(_QWORD *)v11;
      v87 = *(_QWORD *)(*(_QWORD *)v11 + 16);
      if (v87)
      {
        v166 = MEMORY[0x24BEE4AF8];
        v88 = v86;
        sub_23E09E1AC(0, v87, 0);
        v89 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
        v151 = v88;
        v90 = v88 + v89;
        v91 = *(_QWORD *)(v152 + 72);
        v92 = v166;
        do
        {
          sub_23DF73E10(v90, (uint64_t)v8, type metadata accessor for Device.Control);
          sub_23DF73E10((uint64_t)v8, (uint64_t)v6, type metadata accessor for Device.Control);
          v6[*(int *)(v165 + 44)] = v84;
          sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E09E1AC(0, *(_QWORD *)(v92 + 16) + 1, 1);
            v92 = v166;
          }
          v94 = *(_QWORD *)(v92 + 16);
          v93 = *(_QWORD *)(v92 + 24);
          if (v94 >= v93 >> 1)
          {
            sub_23E09E1AC(v93 > 1, v94 + 1, 1);
            v92 = v166;
          }
          *(_QWORD *)(v92 + 16) = v94 + 1;
          v95 = v92 + v89 + v94 * v91;
          v6 = v164;
          sub_23DF89384((uint64_t)v164, v95, type metadata accessor for Device.Control);
          v90 += v91;
          --v87;
        }
        while (v87);
        swift_bridgeObjectRelease();
        v11 = v153;
        v81 = v155;
        v76 = (uint64_t)v156;
        goto LABEL_11;
      }
    }
    else
    {
      v160 = v80;
      v96 = *(_QWORD *)v11;
      v97 = *(_QWORD *)(*(_QWORD *)v11 + 16);
      if (v97)
      {
        v166 = MEMORY[0x24BEE4AF8];
        v98 = v96;
        sub_23E09E1AC(0, v97, 0);
        v99 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
        v151 = v98;
        v100 = v98 + v99;
        v101 = *(_QWORD *)(v152 + 72);
        v92 = v166;
        v102 = (uint64_t)v163;
        do
        {
          sub_23DF73E10(v100, (uint64_t)v8, type metadata accessor for Device.Control);
          sub_23DF73E10((uint64_t)v8, v102, type metadata accessor for Device.Control);
          *(_BYTE *)(v102 + *(int *)(v165 + 44)) = v84;
          sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E09E1AC(0, *(_QWORD *)(v92 + 16) + 1, 1);
            v92 = v166;
          }
          v104 = *(_QWORD *)(v92 + 16);
          v103 = *(_QWORD *)(v92 + 24);
          v105 = (uint64_t)v163;
          if (v104 >= v103 >> 1)
          {
            sub_23E09E1AC(v103 > 1, v104 + 1, 1);
            v105 = (uint64_t)v163;
            v92 = v166;
          }
          *(_QWORD *)(v92 + 16) = v104 + 1;
          v106 = v92 + v99 + v104 * v101;
          v102 = v105;
          sub_23DF89384(v105, v106, type metadata accessor for Device.Control);
          v100 += v101;
          --v97;
        }
        while (v97);
        swift_bridgeObjectRelease();
        v6 = v164;
        v11 = v153;
        v81 = v155;
        v76 = (uint64_t)v156;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    v92 = MEMORY[0x24BEE4AF8];
LABEL_11:
    v83 = v161;
    sub_23DF73E54((uint64_t)v161, type metadata accessor for Device.ControlGroup.LayoutType);
    *v83 = v92;
    swift_storeEnumTagMultiPayload();
    v79 = v157;
    v80 = v160;
LABEL_12:
    v82 = v162 + 1;
    if (v162 + 1 == v159)
      goto LABEL_38;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E031640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  uint64_t v95;
  void (*v96)(char *, unint64_t, uint64_t);
  char *v97;
  char *v98;
  char *v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  int isUniquelyReferenced_nonNull_native;
  char v112;
  unint64_t v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BOOL4 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t);
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t, uint64_t);
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  void (*v157)(char *, uint64_t);
  char *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  char *v163;
  int64_t v164;
  int64_t v165;
  int64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int EnumCaseMultiPayload;
  uint64_t v173;
  int64_t v174;
  char *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _BYTE *v185;
  uint64_t v186;
  int64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  int v193;
  char v194;
  uint64_t v195;
  uint64_t (*v196)(uint64_t);
  uint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  uint64_t (*v204)(uint64_t);
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  BOOL v208;
  uint64_t result;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  int v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  int64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  int64_t v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t v261;
  int64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;

  v2 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v2);
  v213 = (uint64_t)&v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v4);
  v212 = (uint64_t)&v210 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v6);
  v211 = (uint64_t)&v210 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v8 = MEMORY[0x24BDAC7A8](v217);
  v222 = (uint64_t)&v210 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v216 = (char *)&v210 - v10;
  v224 = type metadata accessor for Device.Control.Kind(0);
  v11 = MEMORY[0x24BDAC7A8](v224);
  v221 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v223 = (uint64_t)&v210 - v13;
  v229 = type metadata accessor for Device.Control(0);
  v220 = *(_QWORD *)(v229 - 8);
  v14 = MEMORY[0x24BDAC7A8](v229);
  v219 = (char *)&v210 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v230 = (char *)&v210 - v16;
  v242 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v242);
  v241 = (uint64_t *)((char *)&v210 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for Device.ControlGroup(0);
  v210 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v240 = (uint64_t)&v210 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v231 = (uint64_t *)((char *)&v210 - v21);
  v228 = sub_23E134C80();
  v227 = *(_QWORD *)(v228 - 8);
  MEMORY[0x24BDAC7A8](v228);
  v226 = (char *)&v210 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219D8);
  MEMORY[0x24BDAC7A8](v23);
  v239 = (char *)&v210 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_23E1353AC();
  v244 = *(_QWORD *)(v238 - 8);
  v25 = MEMORY[0x24BDAC7A8](v238);
  v225 = (char *)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v237 = (char *)&v210 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v236 = (uint64_t)&v210 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v249 = (char *)&v210 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v235 = (uint64_t)&v210 - v33;
  v34 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v34);
  v234 = (uint64_t)&v210 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5B8);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v247 = (char *)&v210 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v254 = (char *)&v210 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v256 = (char *)&v210 - v41;
  v42 = sub_23E1352BC();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v233 = (char *)&v210 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v248 = (char *)&v210 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v232 = (char *)&v210 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v253 = (char *)&v210 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v252 = (char *)&v210 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v264 = (char *)&v210 - v55;
  MEMORY[0x24BDAC7A8](v54);
  v251 = (char *)&v210 - v56;
  v57 = sub_23E134E9C();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v243 = (char *)&v210 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = MEMORY[0x24BDAC7A8](v59);
  v250 = (char *)&v210 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v257 = (uint64_t)&v210 - v64;
  v65 = MEMORY[0x24BDAC7A8](v63);
  v67 = (char *)&v210 - v66;
  MEMORY[0x24BDAC7A8](v65);
  v261 = (uint64_t)&v210 - v68;
  v69 = sub_23E1354FC();
  v70 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v72 = (char *)&v210 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_23E135430();
  v262 = v70;
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  v75 = v72;
  v218 = a1;
  v263 = v69;
  v74(v72, a1, v69);
  v260 = v58;
  if ((v73 & 1) != 0)
  {
    v76 = v261;
    sub_23E13543C();
    (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v67, *MEMORY[0x24BE4D810], v57);
    sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
    sub_23E13723C();
    sub_23E13723C();
    if (v267 == v265 && v268 == v266)
      v215 = 1;
    else
      v215 = sub_23E137614();
    v77 = v257;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = *(void (**)(char *, uint64_t))(v260 + 8);
    v78(v67, v57);
    v78((char *)v76, v57);
  }
  else
  {
    v215 = 0;
    v77 = v257;
  }
  (*(void (**)(char *, uint64_t))(v262 + 8))(v75, v263);
  v79 = sub_23E135490();
  v80 = sub_23E12DCD8(v79);
  v214 = 0;
  v81 = sub_23E130B7C(v80);
  swift_bridgeObjectRelease();
  v82 = *(_QWORD *)(v81 + 56);
  v245 = v81 + 56;
  v83 = 1 << *(_BYTE *)(v81 + 32);
  v84 = -1;
  if (v83 < 64)
    v84 = ~(-1 << v83);
  v85 = v84 & v82;
  v246 = (unint64_t)(v83 + 63) >> 6;
  v255 = v81;
  swift_bridgeObjectRetain();
  v86 = 0;
  v87 = (_QWORD *)MEMORY[0x24BEE4B00];
  v258 = v43;
  v259 = v42;
  v263 = v57;
  v88 = (uint64_t)v256;
  while (1)
  {
    v89 = v260;
    if (v85)
    {
      v261 = (v85 - 1) & v85;
      v262 = v86;
      v90 = __clz(__rbit64(v85)) | (v86 << 6);
      goto LABEL_33;
    }
    v91 = v86 + 1;
    if (__OFADD__(v86, 1))
      goto LABEL_105;
    v92 = (uint64_t)v247;
    if (v91 >= v246)
      break;
    v93 = *(_QWORD *)(v245 + 8 * v91);
    v94 = v86 + 1;
    if (!v93)
    {
      v94 = v86 + 2;
      if (v86 + 2 >= v246)
        break;
      v93 = *(_QWORD *)(v245 + 8 * v94);
      if (!v93)
      {
        v94 = v86 + 3;
        if (v86 + 3 >= v246)
          break;
        v93 = *(_QWORD *)(v245 + 8 * v94);
        if (!v93)
        {
          v94 = v86 + 4;
          if (v86 + 4 >= v246)
            break;
          v93 = *(_QWORD *)(v245 + 8 * v94);
          if (!v93)
          {
            v94 = v86 + 5;
            if (v86 + 5 >= v246)
              break;
            v93 = *(_QWORD *)(v245 + 8 * v94);
            if (!v93)
            {
              v95 = v86 + 6;
              if (v86 + 6 >= v246)
                break;
              v93 = *(_QWORD *)(v245 + 8 * v95);
              if (!v93)
              {
                while (1)
                {
                  v94 = v95 + 1;
                  if (__OFADD__(v95, 1))
                    goto LABEL_106;
                  if (v94 >= v246)
                    goto LABEL_53;
                  v93 = *(_QWORD *)(v245 + 8 * v94);
                  ++v95;
                  if (v93)
                    goto LABEL_32;
                }
              }
              v94 = v86 + 6;
            }
          }
        }
      }
    }
LABEL_32:
    v261 = (v93 - 1) & v93;
    v262 = v94;
    v90 = __clz(__rbit64(v93)) + (v94 << 6);
    v57 = v263;
LABEL_33:
    v96 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
    v97 = v251;
    v96(v251, *(_QWORD *)(v255 + 48) + *(_QWORD *)(v43 + 72) * v90, v42);
    v98 = v264;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v264, v97, v42);
    sub_23E13513C();
    v99 = v252;
    v96(v252, (unint64_t)v98, v42);
    v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
    if (v100(v88, 1, v57) == 1)
    {
      sub_23E1351A8();
      v101 = *(void (**)(char *, uint64_t))(v43 + 8);
      v101(v99, v42);
      sub_23DF89C7C(v88, &qword_256D1D5B8);
    }
    else
    {
      v101 = *(void (**)(char *, uint64_t))(v43 + 8);
      v101(v99, v42);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v77, v88, v57);
    }
    v102 = (uint64_t)v254;
    v103 = v264;
    sub_23E13513C();
    v104 = v253;
    v96(v253, (unint64_t)v103, v42);
    if (v100(v102, 1, v57) == 1)
    {
      v105 = (uint64_t)v250;
      sub_23E1351A8();
      v101(v104, v42);
      sub_23DF89C7C(v102, &qword_256D1D5B8);
    }
    else
    {
      v101(v104, v42);
      v105 = (uint64_t)v250;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v250, v102, v57);
    }
    v77 = v257;
    if (v87[2] && (v106 = sub_23DF84DA4(v105), (v107 & 1) != 0))
      v108 = *(_QWORD *)(v87[7] + 8 * v106);
    else
      v108 = 0;
    v109 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
    v109(v105, v57);
    v110 = v108 + 1;
    if (__OFADD__(v108, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      sub_23E137638();
      __break(1u);
      goto LABEL_108;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v267 = (uint64_t)v87;
    v113 = sub_23DF84DA4(v77);
    v114 = v87[2];
    v115 = (v112 & 1) == 0;
    v116 = v114 + v115;
    if (__OFADD__(v114, v115))
      goto LABEL_103;
    v117 = v112;
    if (v87[3] >= v116)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23E0F179C();
    }
    else
    {
      sub_23E0F00E0(v116, isUniquelyReferenced_nonNull_native);
      v118 = sub_23DF84DA4(v77);
      if ((v117 & 1) != (v119 & 1))
        goto LABEL_107;
      v113 = v118;
    }
    v42 = v259;
    v87 = (_QWORD *)v267;
    if ((v117 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v267 + 56) + 8 * v113) = v110;
    }
    else
    {
      *(_QWORD *)(v267 + 8 * (v113 >> 6) + 64) |= 1 << v113;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v260 + 16))(v87[6] + *(_QWORD *)(v260 + 72) * v113, v77, v263);
      *(_QWORD *)(v87[7] + 8 * v113) = v110;
      v120 = v87[2];
      v121 = __OFADD__(v120, 1);
      v122 = v120 + 1;
      if (v121)
        goto LABEL_104;
      v87[2] = v122;
    }
    swift_bridgeObjectRelease();
    v57 = v263;
    v109(v77, v263);
    v101(v264, v42);
    v43 = v258;
    v88 = (uint64_t)v256;
    v85 = v261;
    v86 = v262;
  }
LABEL_53:
  swift_release();
  swift_bridgeObjectRelease();
  v267 = sub_23E13540C();
  swift_bridgeObjectRetain();
  v123 = v214;
  sub_23E02ADB8(&v267, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DC28], (uint64_t (*)(uint64_t))sub_23E073DE4, sub_23E02AE48);
  v256 = v123;
  if (!v123)
  {
    swift_bridgeObjectRelease();
    v265 = MEMORY[0x24BEE4AF8];
    v124 = *(char **)(v267 + 16);
    v125 = (uint64_t)v243;
    if (v124)
    {
      v126 = v267 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      v257 = *(_QWORD *)(v43 + 72);
      v255 = v267;
      swift_bridgeObjectRetain();
      do
      {
        v264 = v124;
        sub_23E13513C();
        v135 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
        v136 = v232;
        v135(v232, v126, v42);
        v137 = v263;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v92, 1, v263) == 1)
        {
          sub_23E1351A8();
          v262 = *(_QWORD *)(v43 + 8);
          ((void (*)(char *, uint64_t))v262)(v136, v42);
          sub_23DF89C7C(v92, &qword_256D1D5B8);
        }
        else
        {
          v262 = *(_QWORD *)(v43 + 8);
          ((void (*)(char *, uint64_t))v262)(v136, v42);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v125, v92, v137);
        }
        v138 = (uint64_t)v249;
        v139 = (uint64_t)v239;
        if (v87[2] && (v140 = sub_23DF84DA4(v125), (v141 & 1) != 0))
          v261 = *(_QWORD *)(v87[7] + 8 * v140);
        else
          v261 = 0;
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v125, v263);
        v135(v248, v126, v42);
        StaticService.staticEndpoint.getter(v139);
        v142 = v244;
        v143 = v238;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48))(v139, 1, v238) == 1)
        {
          sub_23DF89C7C(v139, &qword_256D219D8);
          v127 = type metadata accessor for MatterControlSolver.Source(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v138, 1, 1, v127);
        }
        else
        {
          v144 = v237;
          (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v237, v139, v143);
          v145 = v135;
          v146 = v225;
          (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v225, v144, v143);
          sub_23E135370();
          v147 = type metadata accessor for MatterControlSolver.SourcePath(0);
          v148 = v138 + *(int *)(v147 + 20);
          v149 = sub_23E134E78();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v148, 1, 1, v149);
          *(_BYTE *)(v138 + *(int *)(v147 + 24)) = 0;
          v150 = (int *)type metadata accessor for MatterControlSolver.Source(0);
          sub_23E135388();
          *(_QWORD *)(v138 + v150[6]) = sub_23E1353A0();
          *(_BYTE *)(v138 + v150[7]) = sub_23E135364() == 1;
          v151 = sub_23E13537C();
          v152 = v138 + v150[8];
          *(_WORD *)v152 = v151;
          *(_BYTE *)(v152 + 2) = BYTE2(v151) & 1;
          sub_23E135358();
          v267 = 0x746E696F70646E65;
          v268 = 0xE90000000000002DLL;
          v153 = v226;
          sub_23E135394();
          sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v154 = v228;
          sub_23E1375FC();
          sub_23E1371D0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v227 + 8))(v153, v154);
          v155 = v267;
          v156 = v268;
          v157 = *(void (**)(char *, uint64_t))(v244 + 8);
          v158 = v146;
          v135 = v145;
          v157(v158, v143);
          v159 = (uint64_t *)&v249[v150[10]];
          *v159 = v155;
          v159[1] = v156;
          v157(v237, v143);
          v138 = (uint64_t)v249;
          (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v150 - 1) + 56))(v249, 0, 1, v150);
        }
        v128 = v261 > 1;
        v129 = v235;
        sub_23DF89340(v138, v235, &qword_256D1EEE8);
        v130 = v233;
        v131 = v248;
        v42 = v259;
        v135(v233, (uint64_t)v248, v259);
        v132 = v236;
        sub_23DF89C1C(v129, v236, &qword_256D1EEE8);
        v133 = v234;
        sub_23E014648(v130, v132, v234);
        ((void (*)(char *, uint64_t))v262)(v131, v42);
        sub_23DF89C7C(v129, &qword_256D1EEE8);
        v134 = sub_23E02FC4C(v133, v128);
        sub_23DF73E54(v133, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
        sub_23DF83F90(v134);
        v43 = v258;
        v126 += v257;
        v124 = v264 - 1;
        v92 = (uint64_t)v247;
        v89 = v260;
        v125 = (uint64_t)v243;
      }
      while (v264 != (char *)1);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    v160 = v265;
    v161 = (uint64_t)v230;
    v162 = v231;
    v163 = v256;
    if ((v215 & 1) != 0)
    {
      v164 = *(_QWORD *)(v265 + 16);
      if (v164)
      {
        v267 = MEMORY[0x24BEE4AF8];
        v165 = v164;
        sub_23E09E1D8(0, v164, 0);
        v166 = 0;
        v167 = (*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80);
        v255 = v160;
        v168 = v160 + v167;
        v169 = *(_QWORD *)(v210 + 72);
        LODWORD(v257) = *MEMORY[0x24BE4E598];
        v170 = v229;
        v263 = v169;
        v264 = (char *)v167;
        v258 = v165;
        v259 = v160 + v167;
        while (1)
        {
          v171 = v240;
          sub_23DF73E10(v168 + v169 * v166, v240, type metadata accessor for Device.ControlGroup);
          sub_23DF73E10(v171, (uint64_t)v162, type metadata accessor for Device.ControlGroup);
          sub_23DF73E10((uint64_t)v162, (uint64_t)v241, type metadata accessor for Device.ControlGroup.LayoutType);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
            break;
          v183 = sub_23E02A534(*v241);
          swift_bridgeObjectRelease();
          sub_23DF73E54((uint64_t)v162, type metadata accessor for Device.ControlGroup.LayoutType);
          *v162 = v183;
          v187 = v165;
LABEL_93:
          swift_storeEnumTagMultiPayload();
          sub_23DF73E54(v240, type metadata accessor for Device.ControlGroup);
          v160 = v267;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E09E1D8(0, *(_QWORD *)(v160 + 16) + 1, 1);
            v160 = v267;
          }
          v170 = v229;
          v206 = *(_QWORD *)(v160 + 16);
          v205 = *(_QWORD *)(v160 + 24);
          if (v206 >= v205 >> 1)
          {
            sub_23E09E1D8(v205 > 1, v206 + 1, 1);
            v170 = v229;
            v160 = v267;
          }
          ++v166;
          *(_QWORD *)(v160 + 16) = v206 + 1;
          v207 = (uint64_t)&v264[v160 + v206 * v263];
          v169 = v263;
          v162 = v231;
          sub_23DF89384((uint64_t)v231, v207, type metadata accessor for Device.ControlGroup);
          v165 = v187;
          v208 = v166 == v187;
          v161 = (uint64_t)v230;
          if (v208)
          {
            swift_bridgeObjectRelease();
            goto LABEL_101;
          }
        }
        if (EnumCaseMultiPayload == 1)
        {
          v173 = *v241;
          v174 = *(_QWORD *)(*v241 + 16);
          if (v174)
          {
            LODWORD(v261) = 1;
            v262 = v166;
            v175 = v163;
            v265 = MEMORY[0x24BEE4AF8];
            sub_23E09E1AC(0, v174, 0);
            v176 = v265;
            v177 = (*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80);
            v260 = v173;
            v178 = v173 + v177;
            v179 = *(_QWORD *)(v220 + 72);
            v180 = (uint64_t)v219;
            do
            {
              sub_23E09D984(v178, v180);
              v265 = v176;
              v182 = *(_QWORD *)(v176 + 16);
              v181 = *(_QWORD *)(v176 + 24);
              if (v182 >= v181 >> 1)
              {
                sub_23E09E1AC(v181 > 1, v182 + 1, 1);
                v176 = v265;
              }
              *(_QWORD *)(v176 + 16) = v182 + 1;
              sub_23DF89384(v180, v176 + v177 + v182 * v179, type metadata accessor for Device.Control);
              v178 += v179;
              --v174;
            }
            while (v174);
            swift_bridgeObjectRelease();
            v162 = v231;
            v163 = v175;
            v187 = v258;
            v168 = v259;
            v166 = v262;
          }
          else
          {
            swift_bridgeObjectRelease();
            v176 = MEMORY[0x24BEE4AF8];
            v187 = v165;
          }
          sub_23DF73E54((uint64_t)v162, type metadata accessor for Device.ControlGroup.LayoutType);
          *v162 = v176;
          goto LABEL_93;
        }
        v256 = v163;
        sub_23DF89384((uint64_t)v241, v161, type metadata accessor for Device.Control);
        v184 = v170;
        v185 = (_BYTE *)(v161 + *(int *)(v170 + 20));
        v186 = v223;
        sub_23DF73E10((uint64_t)v185, v223, type metadata accessor for Device.Control.Kind);
        if (swift_getEnumCaseMultiPayload())
        {
          sub_23DF73E54(v186, type metadata accessor for Device.Control.Kind);
LABEL_92:
          sub_23DF73E54((uint64_t)v162, type metadata accessor for Device.ControlGroup.LayoutType);
          sub_23DF89384(v161, (uint64_t)v162, type metadata accessor for Device.Control);
          v187 = v165;
          v163 = v256;
          goto LABEL_93;
        }
        v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
        sub_23DF73E54(v186 + *(int *)(v188 + 48), type metadata accessor for Device.Control.BinaryViewConfig);
        *(_WORD *)(v161 + *(int *)(v184 + 36)) = 514;
        v189 = (uint64_t)v216;
        v190 = &v216[*(int *)(v217 + 28)];
        v191 = &v190[*(int *)(type metadata accessor for IconDescriptor() + 20)];
        v192 = sub_23E135910();
        (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v192 - 8) + 104))(v191, v257, v192);
        *(_QWORD *)v190 = 0x7265776F70;
        *((_QWORD *)v190 + 1) = 0xE500000000000000;
        sub_23DF73E10((uint64_t)v190, v189, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
        sub_23DF89340(v189, v222, &qword_256D1D858);
        sub_23DF73E10((uint64_t)v185, (uint64_t)v221, type metadata accessor for Device.Control.Kind);
        v193 = swift_getEnumCaseMultiPayload();
        if (v193 == 1)
        {
          v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8);
          v199 = &v221[*(int *)(v198 + 48)];
          v200 = v212;
          sub_23DF89340((uint64_t)v221, v212, &qword_256D1D5D8);
          v201 = (uint64_t)v199;
          v195 = v213;
          v196 = type metadata accessor for Device.Control.IncrementalConfig;
          sub_23DF89384(v201, v213, type metadata accessor for Device.Control.IncrementalConfig);
          sub_23DFB3DA0(v222, v195);
          sub_23DF73E54((uint64_t)v185, type metadata accessor for Device.Control.Kind);
          v202 = (uint64_t)&v185[*(int *)(v198 + 48)];
          sub_23DF89340(v200, (uint64_t)v185, &qword_256D1D5D8);
          sub_23DF73E10(v195, v202, type metadata accessor for Device.Control.IncrementalConfig);
        }
        else
        {
          if (v193)
          {
            sub_23DF89C7C(v222, &qword_256D1D858);
            v203 = v221;
            v204 = type metadata accessor for Device.Control.Kind;
            goto LABEL_91;
          }
          v194 = *v221;
          v195 = v211;
          v196 = type metadata accessor for Device.Control.BinaryViewConfig;
          sub_23DF89384((uint64_t)&v221[*(int *)(v188 + 48)], v211, type metadata accessor for Device.Control.BinaryViewConfig);
          sub_23DFB3DA0(v222, v195);
          sub_23DF73E54((uint64_t)v185, type metadata accessor for Device.Control.Kind);
          v197 = (uint64_t)&v185[*(int *)(v188 + 48)];
          *v185 = v194;
          sub_23DF73E10(v195, v197, type metadata accessor for Device.Control.BinaryViewConfig);
        }
        swift_storeEnumTagMultiPayload();
        v203 = (_BYTE *)v195;
        v204 = v196;
LABEL_91:
        sub_23DF73E54((uint64_t)v203, v204);
        v161 = (uint64_t)v230;
        v162 = v231;
        v168 = v259;
        goto LABEL_92;
      }
      swift_bridgeObjectRelease();
      v160 = MEMORY[0x24BEE4AF8];
    }
LABEL_101:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_23E138050;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 64) = 0;
    *(_QWORD *)(result + 48) = v160;
    return result;
  }
LABEL_108:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV8controls4with11currentUserSayAC0C6ModuleVG0A9DataModel18StaticMediaProfileV_AJ0mI0VtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  BOOL v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  void (*v67)(_BYTE *, _BYTE *);
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  _BYTE *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int v95;
  _BYTE *v96;
  char v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  char v102;
  void (*v103)(_BYTE *, uint64_t);
  uint64_t v104;
  void (*v105)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v106;
  int *v107;
  _QWORD *v108;
  uint64_t v109;
  _BYTE *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t *v128;
  _QWORD *v129;
  _QWORD *v130;
  _BYTE v132[4];
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  _BYTE *v143;
  _BYTE *v144;
  _BYTE *v145;
  _BYTE *v146;
  _BYTE *v147;
  uint64_t v148;
  _BYTE *v149;
  _BYTE *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE *v154;
  _BYTE *v155;
  _BYTE *v156;
  __int128 v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;

  v148 = a2;
  v3 = sub_23E134DDC();
  v151 = *(_QWORD *)(v3 - 8);
  v152 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v150 = &v132[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v149 = &v132[-v6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v144 = &v132[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v143 = &v132[-v10];
  v153 = type metadata accessor for Device.Control(0);
  *(_QWORD *)&v157 = *(_QWORD *)(v153 - 8);
  v11 = MEMORY[0x24BDAC7A8](v153);
  v154 = &v132[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v155 = &v132[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v146 = &v132[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v145 = &v132[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v142 = &v132[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v141 = &v132[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v140 = &v132[-v24];
  MEMORY[0x24BDAC7A8](v23);
  v139 = &v132[-v25];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21D18);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = &v132[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  v31 = &v132[-v30];
  v32 = (_BYTE *)sub_23E135460();
  v33 = *((_QWORD *)v32 - 1);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = &v132[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v34);
  v156 = &v132[-v37];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21D00);
  MEMORY[0x24BDAC7A8](v38);
  v40 = &v132[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_23E135424();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v44 = &v132[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = sub_23E134C80();
  v46 = *(_QWORD *)(v45 - 8);
  v159 = v45;
  v160 = v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v147 = &v132[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v47);
  v158 = &v132[-v49];
  sub_23E135778();
  sub_23E1357CC();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
  {
    sub_23DF89C7C((uint64_t)v40, &qword_256D21D00);
    v50 = MEMORY[0x24BEE4AF8];
    v51 = v32;
    goto LABEL_19;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 32))(v44, v40, v41);
  sub_23E13573C();
  v52 = a1;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, _BYTE *))(v33 + 48))(v31, 1, v32) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v44, v41);
    sub_23DF89C7C((uint64_t)v31, &qword_256D21D18);
    v50 = MEMORY[0x24BEE4AF8];
    v51 = v32;
    goto LABEL_19;
  }
  v137 = v41;
  v138 = v44;
  v53 = v156;
  (*(void (**)(void))(v33 + 32))();
  v51 = v32;
  if ((sub_23E135448() & 1) == 0)
  {
    (*(void (**)(_BYTE *, _BYTE *))(v33 + 8))(v53, v32);
    (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v138, v137);
    v50 = MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  (*(void (**)(_BYTE *, _BYTE *, _BYTE *))(v33 + 16))(v36, v53, v32);
  v54 = (*(unsigned int (**)(_BYTE *, _BYTE *))(v33 + 88))(v36, v32) == *MEMORY[0x24BE4DE38];
  v136 = v52;
  v135 = v33;
  v134 = v42;
  if (!v54)
  {
    v67 = *(void (**)(_BYTE *, _BYTE *))(v33 + 8);
    v140 = v32;
    v67(v36, v32);
    v68 = v138;
    v69 = (uint64_t)v144;
    goto LABEL_11;
  }
  (*(void (**)(_BYTE *, _BYTE *))(v33 + 96))(v36, v32);
  v133 = v36[1];
  v55 = v147;
  sub_23E13579C();
  v68 = v138;
  v56 = sub_23E135418();
  v58 = v57;
  v59 = v159;
  v60 = (uint64_t)v143;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v160 + 16))(v143, v55, v159);
  v61 = (int *)v153;
  v62 = v60 + *(int *)(v153 + 20);
  *(_QWORD *)v62 = v56;
  *(_QWORD *)(v62 + 8) = v58;
  *(_BYTE *)(v62 + 16) = (v133 & 1) == 0;
  type metadata accessor for Device.Control.Kind(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Device.Control.Source(0);
  swift_storeEnumTagMultiPayload();
  v63 = (_QWORD *)(v60 + v61[8]);
  v64 = v61[10];
  *(_BYTE *)(v60 + v61[7]) = 0;
  *v63 = 0;
  v63[1] = 0;
  *(_WORD *)(v60 + v61[9]) = 1028;
  *(_BYTE *)(v60 + v64) = 12;
  *(_BYTE *)(v60 + v61[11]) = 1;
  v65 = v157;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v157 + 56))(v60, 0, 1, v61);
  (*(void (**)(_BYTE *, uint64_t))(v160 + 8))(v55, v59);
  v66 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v65 + 48))(v60, 1, v61);
  v69 = (uint64_t)v144;
  if (v66 == 1)
  {
    v140 = v51;
    sub_23DF89C7C(v60, &qword_256D1D5E0);
LABEL_11:
    v70 = v147;
    sub_23E13579C();
    v71 = sub_23E135418();
    v73 = v72;
    v74 = v159;
    v75 = v160;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v160 + 16))(v69, v70, v159);
    v76 = (int *)v153;
    v77 = v68;
    v78 = v69 + *(int *)(v153 + 20);
    *(_QWORD *)v78 = v71;
    *(_QWORD *)(v78 + 8) = v73;
    *(_BYTE *)(v78 + 16) = 0;
    type metadata accessor for Device.Control.Kind(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for Device.Control.Source(0);
    swift_storeEnumTagMultiPayload();
    v79 = (_QWORD *)(v69 + v76[8]);
    v80 = v76[10];
    *(_BYTE *)(v69 + v76[7]) = 0;
    *v79 = 0;
    v79[1] = 0;
    *(_WORD *)(v69 + v76[9]) = 1028;
    *(_BYTE *)(v69 + v80) = 12;
    *(_BYTE *)(v69 + v76[11]) = 1;
    v81 = v157;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v157 + 56))(v69, 0, 1, v76);
    (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v70, v74);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v81 + 48))(v69, 1, v76) == 1)
    {
      v33 = v135;
      v82 = v140;
      (*(void (**)(_BYTE *, _BYTE *))(v135 + 8))(v156, v140);
      v83 = v77;
      v51 = v82;
      (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v83, v137);
      sub_23DF89C7C(v69, &qword_256D1D5E0);
      v50 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v84 = v69;
      v85 = v141;
      sub_23DF89384(v84, (uint64_t)v141, type metadata accessor for Device.Control);
      v86 = v142;
      sub_23DF73E10((uint64_t)v85, (uint64_t)v142, type metadata accessor for Device.Control);
      v50 = sub_23E007818(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v88 = *(_QWORD *)(v50 + 16);
      v87 = *(_QWORD *)(v50 + 24);
      v89 = v134;
      if (v88 >= v87 >> 1)
        v50 = sub_23E007818(v87 > 1, v88 + 1, 1, v50);
      v51 = v140;
      *(_QWORD *)(v50 + 16) = v88 + 1;
      sub_23DF89384((uint64_t)v86, v50+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(_QWORD *)(v157 + 72) * v88, type metadata accessor for Device.Control);
      sub_23DF73E54((uint64_t)v85, type metadata accessor for Device.Control);
      v33 = v135;
      (*(void (**)(_BYTE *, _BYTE *))(v135 + 8))(v156, v51);
      (*(void (**)(_BYTE *, uint64_t))(v89 + 8))(v138, v137);
    }
    goto LABEL_19;
  }
  v90 = v139;
  sub_23DF89384(v60, (uint64_t)v139, type metadata accessor for Device.Control);
  v91 = v140;
  sub_23DF73E10((uint64_t)v90, (uint64_t)v140, type metadata accessor for Device.Control);
  v50 = sub_23E007818(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v93 = *(_QWORD *)(v50 + 16);
  v92 = *(_QWORD *)(v50 + 24);
  v94 = v137;
  if (v93 >= v92 >> 1)
    v50 = sub_23E007818(v92 > 1, v93 + 1, 1, v50);
  *(_QWORD *)(v50 + 16) = v93 + 1;
  sub_23DF89384((uint64_t)v91, v50+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(_QWORD *)(v157 + 72) * v93, type metadata accessor for Device.Control);
  sub_23DF73E54((uint64_t)v90, type metadata accessor for Device.Control);
  v33 = v135;
  (*(void (**)(_BYTE *, _BYTE *))(v135 + 8))(v156, v51);
  (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v138, v94);
LABEL_19:
  sub_23E13573C();
  v95 = (*(uint64_t (**)(_BYTE *, uint64_t, _BYTE *))(v33 + 48))(v29, 1, v51);
  v96 = v158;
  if (v95 == 1)
  {
    sub_23DF89C7C((uint64_t)v29, &qword_256D21D18);
  }
  else
  {
    v97 = sub_23E135454();
    (*(void (**)(_BYTE *, _BYTE *))(v33 + 8))(v29, v51);
    if ((v97 & 1) != 0)
    {
      v98 = v149;
      sub_23E134DE8();
      v100 = v150;
      v99 = v151;
      v101 = v152;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v151 + 104))(v150, *MEMORY[0x24BE4D4B8], v152);
      sub_23DF73F28(&qword_256D21D08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D4C0], MEMORY[0x24BE4D4C8]);
      v102 = sub_23E137158();
      v103 = *(void (**)(_BYTE *, uint64_t))(v99 + 8);
      v103(v100, v101);
      v103(v98, v101);
      if ((v102 & 1) == 0)
      {
        v104 = v159;
        v105 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v160 + 16);
        v106 = (uint64_t)v145;
        v105(v145, v96, v159);
        v107 = (int *)v153;
        v105((_BYTE *)(v106 + *(int *)(v153 + 20)), v96, v104);
        type metadata accessor for Device.Control.Kind(0);
        swift_storeEnumTagMultiPayload();
        type metadata accessor for Device.Control.Source(0);
        swift_storeEnumTagMultiPayload();
        v108 = (_QWORD *)(v106 + v107[8]);
        v109 = v107[10];
        *(_BYTE *)(v106 + v107[7]) = 0;
        *v108 = 0;
        v108[1] = 0;
        *(_WORD *)(v106 + v107[9]) = 1028;
        *(_BYTE *)(v106 + v109) = 12;
        *(_BYTE *)(v106 + v107[11]) = 1;
        v110 = v146;
        sub_23DF73E10(v106, (uint64_t)v146, type metadata accessor for Device.Control);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v50 = sub_23E007818(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
        v112 = *(_QWORD *)(v50 + 16);
        v111 = *(_QWORD *)(v50 + 24);
        if (v112 >= v111 >> 1)
          v50 = sub_23E007818(v111 > 1, v112 + 1, 1, v50);
        *(_QWORD *)(v50 + 16) = v112 + 1;
        sub_23DF89384((uint64_t)v110, v50+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(_QWORD *)(v157 + 72) * v112, type metadata accessor for Device.Control);
        sub_23DF73E54(v106, type metadata accessor for Device.Control);
      }
    }
  }
  v113 = *(_QWORD *)(v50 + 16);
  if (v113)
  {
    if (v113 == 1)
    {
      v114 = v154;
      sub_23DF73E10(v50 + ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80)), (uint64_t)v154, type metadata accessor for Device.Control);
      swift_bridgeObjectRelease();
      v115 = v155;
      sub_23DF89384((uint64_t)v114, (uint64_t)v155, type metadata accessor for Device.Control);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
      v116 = swift_allocObject();
      v157 = xmmword_23E138050;
      *(_OWORD *)(v116 + 16) = xmmword_23E138050;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v117 = type metadata accessor for Device.ControlGroup(0);
      v118 = *(unsigned __int8 *)(*(_QWORD *)(v117 - 8) + 80);
      v119 = (v118 + 32) & ~v118;
      v120 = swift_allocObject();
      *(_OWORD *)(v120 + 16) = v157;
      v121 = v120 + v119;
      sub_23DF73E10((uint64_t)v115, v121, type metadata accessor for Device.Control);
      type metadata accessor for Device.ControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v122 = (_QWORD *)(v121 + *(int *)(v117 + 20));
      v123 = (_QWORD *)(v121 + *(int *)(v117 + 24));
      *v122 = 0;
      v122[1] = 0;
      *v123 = 0;
      v123[1] = 0;
      *(_QWORD *)(v116 + 32) = 0;
      *(_QWORD *)(v116 + 40) = 0;
      *(_QWORD *)(v116 + 56) = 0;
      *(_QWORD *)(v116 + 64) = 0;
      *(_QWORD *)(v116 + 48) = v120;
      sub_23DF73E54((uint64_t)v115, type metadata accessor for Device.Control);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
      v116 = swift_allocObject();
      v157 = xmmword_23E138050;
      *(_OWORD *)(v116 + 16) = xmmword_23E138050;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v124 = type metadata accessor for Device.ControlGroup(0);
      v125 = *(unsigned __int8 *)(*(_QWORD *)(v124 - 8) + 80);
      v126 = (v125 + 32) & ~v125;
      v127 = swift_allocObject();
      *(_OWORD *)(v127 + 16) = v157;
      v128 = (unint64_t *)(v127 + v126);
      *v128 = v50;
      type metadata accessor for Device.ControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v129 = (unint64_t *)((char *)v128 + *(int *)(v124 + 20));
      v130 = (unint64_t *)((char *)v128 + *(int *)(v124 + 24));
      *v129 = 0;
      v129[1] = 0;
      *v130 = 0;
      v130[1] = 0;
      *(_QWORD *)(v116 + 32) = 0;
      *(_QWORD *)(v116 + 40) = 0;
      *(_QWORD *)(v116 + 56) = 0;
      *(_QWORD *)(v116 + 64) = 0;
      *(_QWORD *)(v116 + 48) = v127;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v116 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(_BYTE *, uint64_t))(v160 + 8))(v96, v159);
  return v116;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV8controls4with11currentUserSayAC0C6ModuleVG0A9DataModel17StaticMediaSystemV_AJ0mI0VtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  int *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t *v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD v85[2];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  size_t v101[2];

  v93 = a2;
  v3 = sub_23E134DDC();
  v96 = *(_QWORD *)(v3 - 8);
  v97 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v95 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v94 = (char *)v85 - v6;
  v98 = type metadata accessor for Device.Control(0);
  *(_QWORD *)&v100 = *(_QWORD *)(v98 - 8);
  v7 = MEMORY[0x24BDAC7A8](v98);
  v88 = (uint64_t)v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v89 = (uint64_t)v85 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v91 = (uint64_t)v85 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v99 = (uint64_t)v85 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v90 = (uint64_t)v85 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v85 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23E134C80();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v92 = (char *)v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21D00);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23E135424();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23E135664();
  sub_23DF7AC70(v32, (uint64_t)v27);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_23DF89C7C((uint64_t)v27, &qword_256D21D00);
    return MEMORY[0x24BEE4AF8];
  }
  v86 = v29;
  v87 = v28;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
  sub_23E1355F8();
  v33 = swift_bridgeObjectRetain();
  v34 = sub_23E12E36C(v33);
  swift_bridgeObjectRelease();
  v101[0] = v34;
  sub_23E02ADB8((uint64_t *)v101, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t))sub_23E073DF8, (uint64_t (*)(_QWORD *))sub_23E02BEC0);
  v35 = v31;
  v85[1] = a1;
  swift_bridgeObjectRelease();
  v36 = v100;
  if (*(_QWORD *)(v101[0] + 16))
  {
    (*(void (**)(char *, size_t, uint64_t))(v23 + 16))(v21, v101[0] + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), v22);
    v37 = 0;
  }
  else
  {
    v37 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v37, 1, v22);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_23DF89C7C((uint64_t)v21, &qword_256D1D7E8);
    v38 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v39 = v92;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v92, v21, v22);
    v40 = sub_23E135418();
    v42 = v41;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v39, v22);
    v43 = (int *)v98;
    v44 = &v18[*(int *)(v98 + 20)];
    *(_QWORD *)v44 = v40;
    *((_QWORD *)v44 + 1) = v42;
    v44[16] = 0;
    type metadata accessor for Device.Control.Kind(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for Device.Control.Source(0);
    swift_storeEnumTagMultiPayload();
    v45 = &v18[v43[8]];
    v46 = v43[10];
    v18[v43[7]] = 0;
    *(_QWORD *)v45 = 0;
    *((_QWORD *)v45 + 1) = 0;
    *(_WORD *)&v18[v43[9]] = 1028;
    v18[v46] = 12;
    v18[v43[11]] = 1;
    v47 = v90;
    sub_23DF73E10((uint64_t)v18, v90, type metadata accessor for Device.Control);
    v38 = sub_23E007818(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v49 = *(_QWORD *)(v38 + 16);
    v48 = *(_QWORD *)(v38 + 24);
    if (v49 >= v48 >> 1)
      v38 = sub_23E007818(v48 > 1, v49 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v49 + 1;
    sub_23DF89384(v47, v38+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v49, type metadata accessor for Device.Control);
    sub_23DF73E54((uint64_t)v18, type metadata accessor for Device.Control);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v92, v22);
  }
  v50 = v94;
  sub_23E134DE8();
  v52 = v95;
  v51 = v96;
  v53 = v97;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, *MEMORY[0x24BE4D4B8], v97);
  sub_23DF73F28(&qword_256D21D08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D4C0], MEMORY[0x24BE4D4C8]);
  v54 = sub_23E137158();
  v55 = *(void (**)(char *, uint64_t))(v51 + 8);
  v55(v52, v53);
  v55(v50, v53);
  v56 = v87;
  if ((v54 & 1) == 0)
  {
    v57 = v99;
    sub_23E135628();
    v58 = (int *)v98;
    sub_23E135628();
    type metadata accessor for Device.Control.Kind(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for Device.Control.Source(0);
    swift_storeEnumTagMultiPayload();
    v59 = (_QWORD *)(v57 + v58[8]);
    v60 = v58[10];
    *(_BYTE *)(v57 + v58[7]) = 0;
    *v59 = 0;
    v59[1] = 0;
    *(_WORD *)(v57 + v58[9]) = 1028;
    *(_BYTE *)(v57 + v60) = 12;
    *(_BYTE *)(v57 + v58[11]) = 1;
    v61 = v57;
    v62 = v91;
    sub_23DF73E10(v61, v91, type metadata accessor for Device.Control);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v38 = sub_23E007818(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
    v64 = *(_QWORD *)(v38 + 16);
    v63 = *(_QWORD *)(v38 + 24);
    if (v64 >= v63 >> 1)
      v38 = sub_23E007818(v63 > 1, v64 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v64 + 1;
    sub_23DF89384(v62, v38+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v64, type metadata accessor for Device.Control);
    sub_23DF73E54(v99, type metadata accessor for Device.Control);
  }
  v65 = *(_QWORD *)(v38 + 16);
  if (!v65)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v35, v56);
    return MEMORY[0x24BEE4AF8];
  }
  v66 = v35;
  if (v65 == 1)
  {
    v67 = v88;
    sub_23DF73E10(v38 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)), v88, type metadata accessor for Device.Control);
    swift_bridgeObjectRelease();
    v68 = v89;
    sub_23DF89384(v67, v89, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
    v69 = swift_allocObject();
    v100 = xmmword_23E138050;
    *(_OWORD *)(v69 + 16) = xmmword_23E138050;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v70 = type metadata accessor for Device.ControlGroup(0);
    v71 = *(unsigned __int8 *)(*(_QWORD *)(v70 - 8) + 80);
    v72 = (v71 + 32) & ~v71;
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v100;
    v74 = v73 + v72;
    sub_23DF73E10(v68, v74, type metadata accessor for Device.Control);
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v75 = (_QWORD *)(v74 + *(int *)(v70 + 20));
    v76 = (_QWORD *)(v74 + *(int *)(v70 + 24));
    *v75 = 0;
    v75[1] = 0;
    *v76 = 0;
    v76[1] = 0;
    *(_QWORD *)(v69 + 32) = 0;
    *(_QWORD *)(v69 + 40) = 0;
    *(_QWORD *)(v69 + 56) = 0;
    *(_QWORD *)(v69 + 64) = 0;
    *(_QWORD *)(v69 + 48) = v73;
    sub_23DF73E54(v68, type metadata accessor for Device.Control);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
    v69 = swift_allocObject();
    v100 = xmmword_23E138050;
    *(_OWORD *)(v69 + 16) = xmmword_23E138050;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v77 = type metadata accessor for Device.ControlGroup(0);
    v78 = *(unsigned __int8 *)(*(_QWORD *)(v77 - 8) + 80);
    v79 = (v78 + 32) & ~v78;
    v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v100;
    v81 = (unint64_t *)(v80 + v79);
    *v81 = v38;
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v82 = (unint64_t *)((char *)v81 + *(int *)(v77 + 20));
    v83 = (unint64_t *)((char *)v81 + *(int *)(v77 + 24));
    *v82 = 0;
    v82[1] = 0;
    *v83 = 0;
    v83[1] = 0;
    *(_QWORD *)(v69 + 32) = 0;
    *(_QWORD *)(v69 + 40) = 0;
    *(_QWORD *)(v69 + 56) = 0;
    *(_QWORD *)(v69 + 64) = 0;
    *(_QWORD *)(v69 + 48) = v80;
  }
  (*(void (**)(char *, uint64_t))(v86 + 8))(v66, v56);
  return v69;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV8controls4withSayAC0C6ModuleVG0A9DataModel18ActionServiceGroupV_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  ValueMetadata *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  _QWORD v75[3];
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  size_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  size_t v106;

  v105 = type metadata accessor for Device.Control(0);
  v93 = *(_QWORD *)(v105 - 8);
  v2 = MEMORY[0x24BDAC7A8](v105);
  v4 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)v75 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v75 - v8;
  v101 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v101);
  v94 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v77);
  v95 = (uint64_t)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256D21B48);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Device.ControlGroup(0);
  v96 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v85 = (uint64_t)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v78 = (uint64_t)v75 - v18;
  v19 = sub_23E1350D0();
  v20 = MEMORY[0x24BE4DAA8];
  v91 = v19;
  v87 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v86 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v90 = (char *)v75 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F1D8);
  MEMORY[0x24BDAC7A8](v24);
  v76 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135694();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_23E12E464(v26);
  swift_bridgeObjectRelease();
  v106 = v27;
  sub_23E02ADB8((uint64_t *)&v106, (uint64_t (*)(_QWORD))v20, (uint64_t (*)(uint64_t))sub_23E073E0C, sub_23E02C938);
  swift_bridgeObjectRelease();
  v84 = *(_QWORD *)(v106 + 16);
  if (!v84)
  {
    swift_release();
    v29 = MEMORY[0x24BEE4AF8];
    goto LABEL_46;
  }
  v79 = v15;
  v80 = v14;
  v75[2] = a1;
  v83 = v106 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
  v82 = *(_QWORD *)(v87 + 72);
  v81 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v75[1] = v106;
  swift_retain();
  v28 = 0;
  v29 = MEMORY[0x24BEE4AF8];
  v103 = v7;
  v104 = v4;
  v30 = (uint64_t)v94;
  v31 = v96;
  while (1)
  {
    v89 = v29;
    v88 = v28;
    v33 = v90;
    v32 = v91;
    v34 = v81;
    v81(v90, (char *)(v83 + v82 * v28), v91);
    v35 = v86;
    v34(v86, v33, v32);
    v36 = (uint64_t)v35;
    v37 = v95;
    sub_23E014DD4(v36, v95);
    v38 = sub_23E01CFC4(v37);
    if (!v38)
    {
      v40 = MEMORY[0x24BEE4AF8];
      goto LABEL_35;
    }
    v40 = (*(uint64_t (**)(uint64_t, ValueMetadata *, uint64_t))(v39 + 8))(v37, v38, v39);
    v98 = *(_QWORD *)(v40 + 16);
    if (v98)
      break;
LABEL_35:
    sub_23DF73E54(v37, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    if (*(_QWORD *)(v40 + 16) == 1)
    {
      v65 = v40 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      v66 = (uint64_t)v80;
      sub_23DF73E10(v65, (uint64_t)v80, type metadata accessor for Device.ControlGroup);
      v67 = v79;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v66, 0, 1, v79);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v66 = (uint64_t)v80;
      v67 = v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v80, 1, 1, v79);
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v91);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v66, 1, v67) == 1)
    {
      sub_23DF89C7C(v66, qword_256D21B48);
      v29 = v89;
    }
    else
    {
      v68 = v78;
      sub_23DF89384(v66, v78, type metadata accessor for Device.ControlGroup);
      sub_23DF89384(v68, v85, type metadata accessor for Device.ControlGroup);
      v29 = v89;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_23E0076E4(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
      v70 = *(_QWORD *)(v29 + 16);
      v69 = *(_QWORD *)(v29 + 24);
      if (v70 >= v69 >> 1)
        v29 = sub_23E0076E4(v69 > 1, v70 + 1, 1, v29);
      *(_QWORD *)(v29 + 16) = v70 + 1;
      sub_23DF89384(v85, v29+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v70, type metadata accessor for Device.ControlGroup);
    }
    v28 = v88 + 1;
    if (v88 + 1 == v84)
    {
      swift_release_n();
LABEL_46:
      v71 = (uint64_t)v76;
      sub_23E13567C();
      v72 = sub_23E134E60();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 0, 1, v72);
      v73 = sub_23E0301FC(v29, v71);
      swift_bridgeObjectRelease();
      sub_23DF89C7C(v71, &qword_256D1F1D8);
      return v73;
    }
  }
  v41 = 0;
  v97 = *(int *)(v77 + 40);
  while (1)
  {
    v102 = v41;
    v43 = v37;
    v44 = *(_BYTE *)(v37 + v97);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_23E09EDD0(v40);
    if (v102 >= *(_QWORD *)(v40 + 16))
      break;
    v100 = (uint64_t *)(v40
                     + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
                     + *(_QWORD *)(v31 + 72) * v102);
    sub_23DF73E10((uint64_t)v100, v30, type metadata accessor for Device.ControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_23DF89384(v30, (uint64_t)v9, type metadata accessor for Device.Control);
        v9[*(int *)(v105 + 44)] = v44;
        v64 = (uint64_t)v100;
        sub_23DF73E54((uint64_t)v100, type metadata accessor for Device.ControlGroup.LayoutType);
        sub_23DF89384((uint64_t)v9, v64, type metadata accessor for Device.Control);
        swift_storeEnumTagMultiPayload();
        goto LABEL_9;
      }
      v99 = v40;
      v46 = *(_QWORD *)v30;
      v47 = *(_QWORD *)(*(_QWORD *)v30 + 16);
      if (!v47)
      {
LABEL_32:
        swift_bridgeObjectRelease();
        v52 = MEMORY[0x24BEE4AF8];
        goto LABEL_8;
      }
      v106 = MEMORY[0x24BEE4AF8];
      v48 = v46;
      sub_23E09E1AC(0, v47, 0);
      v49 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
      v92 = v48;
      v50 = v48 + v49;
      v51 = *(_QWORD *)(v93 + 72);
      v52 = v106;
      do
      {
        sub_23DF73E10(v50, (uint64_t)v9, type metadata accessor for Device.Control);
        sub_23DF73E10((uint64_t)v9, (uint64_t)v7, type metadata accessor for Device.Control);
        v7[*(int *)(v105 + 44)] = v44;
        sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E1AC(0, *(_QWORD *)(v52 + 16) + 1, 1);
          v52 = v106;
        }
        v54 = *(_QWORD *)(v52 + 16);
        v53 = *(_QWORD *)(v52 + 24);
        if (v54 >= v53 >> 1)
        {
          sub_23E09E1AC(v53 > 1, v54 + 1, 1);
          v52 = v106;
        }
        *(_QWORD *)(v52 + 16) = v54 + 1;
        v7 = v103;
        sub_23DF89384((uint64_t)v103, v52 + v49 + v54 * v51, type metadata accessor for Device.Control);
        v50 += v51;
        --v47;
        v4 = v104;
      }
      while (v47);
    }
    else
    {
      v99 = v40;
      v55 = *(_QWORD *)v30;
      v56 = *(_QWORD *)(*(_QWORD *)v30 + 16);
      if (!v56)
        goto LABEL_32;
      v106 = MEMORY[0x24BEE4AF8];
      v57 = v55;
      sub_23E09E1AC(0, v56, 0);
      v58 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
      v92 = v57;
      v59 = v57 + v58;
      v60 = *(_QWORD *)(v93 + 72);
      v52 = v106;
      do
      {
        sub_23DF73E10(v59, (uint64_t)v9, type metadata accessor for Device.Control);
        sub_23DF73E10((uint64_t)v9, (uint64_t)v4, type metadata accessor for Device.Control);
        v4[*(int *)(v105 + 44)] = v44;
        sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E1AC(0, *(_QWORD *)(v52 + 16) + 1, 1);
          v52 = v106;
        }
        v62 = *(_QWORD *)(v52 + 16);
        v61 = *(_QWORD *)(v52 + 24);
        if (v62 >= v61 >> 1)
        {
          sub_23E09E1AC(v61 > 1, v62 + 1, 1);
          v52 = v106;
        }
        *(_QWORD *)(v52 + 16) = v62 + 1;
        v63 = v52 + v58 + v62 * v60;
        v4 = v104;
        sub_23DF89384((uint64_t)v104, v63, type metadata accessor for Device.Control);
        v59 += v60;
        --v56;
        v7 = v103;
      }
      while (v56);
    }
    swift_bridgeObjectRelease();
    v30 = (uint64_t)v94;
    v43 = v95;
LABEL_8:
    v42 = v100;
    sub_23DF73E54((uint64_t)v100, type metadata accessor for Device.ControlGroup.LayoutType);
    *v42 = v52;
    swift_storeEnumTagMultiPayload();
    v31 = v96;
    v40 = v99;
LABEL_9:
    v41 = v102 + 1;
    v37 = v43;
    if (v102 + 1 == v98)
      goto LABEL_35;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E0350D8()
{
  sub_23DFA6650();
  return sub_23E136264();
}

double sub_23E03510C()
{
  double v1;

  sub_23DFA660C();
  sub_23E136264();
  return v1;
}

uint64_t EnvironmentValues.accessoryControlsStyle.getter()
{
  sub_23E035178();
  return sub_23E136264();
}

unint64_t sub_23E035178()
{
  unint64_t result;

  result = qword_256D21D98;
  if (!qword_256D21D98)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CDC4, &_s25AccessoryControlsStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_256D21D98);
  }
  return result;
}

uint64_t EnvironmentValues.accessoryControlsStyle.setter()
{
  sub_23E035178();
  return sub_23E136270();
}

uint64_t View.debug(_:)()
{
  swift_getKeyPath();
  sub_23E136990();
  return swift_release();
}

uint64_t sub_23E03529C()
{
  char v0;
  __int128 v1;
  __int128 v2;
  char v3;
  char v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;

  if (qword_256D1D370 != -1)
    result = swift_once();
  v0 = byte_256D224A0;
  v1 = *(_OWORD *)&qword_256D224A8;
  v2 = *(_OWORD *)&qword_256D224B8;
  v3 = word_256D224C8;
  v4 = HIBYTE(word_256D224C8);
  if (qword_256D1D358 != -1)
  {
    v6 = *(_OWORD *)&qword_256D224B8;
    v7 = *(_OWORD *)&qword_256D224A8;
    result = swift_once();
    v2 = v6;
    v1 = v7;
  }
  word_256D21D20 = 0;
  byte_256D21D28 = v0;
  xmmword_256D21D30 = v1;
  unk_256D21D40 = v2;
  byte_256D21D50 = v3;
  byte_256D21D51 = v4;
  qword_256D21D58 = qword_256D22438;
  byte_256D21D60 = 0;
  return result;
}

double sub_23E035364@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  double result;
  __int128 v8;

  if (qword_256D1D328 != -1)
    swift_once();
  v2 = byte_256D21D28;
  v3 = byte_256D21D50;
  v4 = byte_256D21D51;
  v5 = qword_256D21D58;
  v6 = byte_256D21D60;
  *(_WORD *)a1 = word_256D21D20;
  *(_BYTE *)(a1 + 8) = v2;
  result = *(double *)&xmmword_256D21D30;
  v8 = unk_256D21D40;
  *(_OWORD *)(a1 + 16) = xmmword_256D21D30;
  *(_OWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 49) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return result;
}

uint64_t sub_23E0353E8()
{
  sub_23E03598C();
  return sub_23E135F04();
}

void (*EnvironmentValues.accessoryControlsStyle.modify(_QWORD *a1))(char **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0xA0uLL);
  *a1 = v3;
  v3[18] = v1;
  v3[19] = sub_23E035178();
  sub_23E136264();
  return sub_23E03549C;
}

void sub_23E03549C(char **a1)
{
  char *v1;
  __int128 v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;

  v1 = *a1;
  v2 = *((_OWORD *)*a1 + 2);
  *(_OWORD *)(v1 + 88) = *((_OWORD *)*a1 + 1);
  v3 = v1[8];
  v4 = v1[48];
  v5 = v1[49];
  v6 = *((_QWORD *)v1 + 7);
  v7 = v1[64];
  *((_WORD *)v1 + 36) = *(_WORD *)v1;
  v1[80] = v3;
  *(_OWORD *)(v1 + 104) = v2;
  v1[120] = v4;
  v1[121] = v5;
  *((_QWORD *)v1 + 16) = v6;
  v1[136] = v7;
  sub_23E136270();
  free(v1);
}

void sub_23E035510(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23E035518()
{
  return sub_23E135F04();
}

uint64_t EnvironmentValues.debug.getter()
{
  return 0;
}

uint64_t keypath_setTm()
{
  sub_23E035868();
  return sub_23E136270();
}

uint64_t EnvironmentValues.debug.setter()
{
  sub_23E035868();
  return sub_23E136270();
}

uint64_t (*EnvironmentValues.debug.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = 0;
  return sub_23E0355C4;
}

uint64_t sub_23E0355C4(uint64_t a1)
{
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a1 + 8);
  sub_23E035868();
  return sub_23E136270();
}

void sub_23E035608()
{
  qword_256D21D68 = 0;
}

double sub_23E035614@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_256D1D330 != -1)
    swift_once();
  result = *(double *)&qword_256D21D68;
  *a1 = qword_256D21D68;
  return result;
}

uint64_t sub_23E035664()
{
  sub_23E035B40();
  return sub_23E135F04();
}

void sub_23E0356B4(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t (*sub_23E0356C0())()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  sub_23E035A98();
  sub_23E136264();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_23DF8D9A4;
}

_QWORD *sub_23E035738()
{
  uint64_t v0;
  _QWORD *result;

  v0 = type metadata accessor for EmptyAlarmAndTimerUIViewBuilder();
  result = (_QWORD *)swift_allocObject();
  result[2] = 0;
  result[3] = 0xE000000000000000;
  result[4] = 0;
  result[5] = 0xE000000000000000;
  qword_256D21D88 = v0;
  unk_256D21D90 = &off_250ECEAA8;
  qword_256D21D70 = (uint64_t)result;
  return result;
}

uint64_t sub_23E03578C@<X0>(uint64_t a1@<X8>)
{
  if (qword_256D1D338 != -1)
    swift_once();
  return sub_23DFA62B4((uint64_t)&qword_256D21D70, a1);
}

unint64_t sub_23E0357DC()
{
  unint64_t result;

  result = sub_23E0ECE60(MEMORY[0x24BEE4AF8]);
  qword_256D346A0 = result;
  return result;
}

uint64_t sub_23E035800@<X0>(_QWORD *a1@<X8>)
{
  if (qword_256D1D340 != -1)
    swift_once();
  *a1 = qword_256D346A0;
  return swift_bridgeObjectRetain();
}

void sub_23E03585C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_23E035868()
{
  unint64_t result;

  result = qword_256D21DA0;
  if (!qword_256D21DA0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CD8C, &_s8DebugKeyVN);
    atomic_store(result, (unint64_t *)&qword_256D21DA0);
  }
  return result;
}

void sub_23E0358B4(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23E0358C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9A8);
  v2 = sub_23E135FF4();
  v4[0] = v1;
  v4[1] = sub_23E035920();
  return MEMORY[0x24264C55C](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_23E035920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1D9A0;
  if (!qword_256D1D9A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9A8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_256D1D9A0);
  }
  return result;
}

ValueMetadata *_s8DebugKeyVMa()
{
  return &_s8DebugKeyVN;
}

ValueMetadata *_s25AccessoryControlsStyleKeyVMa()
{
  return &_s25AccessoryControlsStyleKeyVN;
}

unint64_t sub_23E03598C()
{
  unint64_t result;

  result = qword_256D21DA8;
  if (!qword_256D21DA8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle, &type metadata for AccessoryControlsStyle);
    atomic_store(result, (unint64_t *)&qword_256D21DA8);
  }
  return result;
}

unint64_t sub_23E0359D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DE0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23E138050;
  v10 = v9 + v8;
  v11 = *(int *)(v6 + 48);
  v12 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, a2, v12);
  *(_QWORD *)(v10 + v11) = a1;
  swift_retain();
  result = sub_23E0ECE60(v9);
  *a3 = result;
  return result;
}

unint64_t sub_23E035A98()
{
  unint64_t result;

  result = qword_256D21DB0;
  if (!qword_256D21DB0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CF48, &_s35RequestDismissalBlockEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_256D21DB0);
  }
  return result;
}

uint64_t sub_23E035ADC()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *_s29AlarmAndTimerUIViewBuilderKeyVMa()
{
  return &_s29AlarmAndTimerUIViewBuilderKeyVN;
}

ValueMetadata *_s16SafeAreaInsetKeyVMa()
{
  return &_s16SafeAreaInsetKeyVN;
}

ValueMetadata *_s35RequestDismissalBlockEnvironmentKeyVMa()
{
  return &_s35RequestDismissalBlockEnvironmentKeyVN;
}

ValueMetadata *type metadata accessor for ControlViewFramePreferenceKey()
{
  return &type metadata for ControlViewFramePreferenceKey;
}

unint64_t sub_23E035B40()
{
  unint64_t result;

  result = qword_256D21DB8;
  if (!qword_256D21DB8)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE50E0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256D21DB8);
  }
  return result;
}

uint64_t sub_23E035B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC0) + 48);
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8) + 48);
  v6 = *(_QWORD *)(a1 + v4);
  v7 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  *(_QWORD *)(a2 + v5) = v6;
  return swift_retain();
}

uint64_t sub_23E035BF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = sub_23E134C80();
  v40 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = -1 << *(_BYTE *)(a1 + 32);
  v16 = ~v15;
  v17 = *(_QWORD *)(a1 + 64);
  v18 = -v15;
  v41 = a1;
  v42 = a1 + 64;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v43 = v16;
  v44 = 0;
  v45 = v19 & v17;
  v46 = a2;
  v47 = a3;
  v39[2] = a1;
  swift_bridgeObjectRetain();
  v39[1] = a3;
  swift_retain();
  sub_23E035EFC((uint64_t)v14);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E0362D4();
    return swift_release();
  }
  v22 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  while (1)
  {
    v24 = *(int *)(v20 + 48);
    v22(v11, v14, v48);
    v25 = *(_QWORD *)&v14[v24];
    v26 = *a5;
    v28 = sub_23DF84CA8((uint64_t)v11);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a4 & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E0F1EB8();
        if ((v32 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E0F0C10(v31, a4 & 1);
      v33 = sub_23DF84CA8((uint64_t)v11);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_22;
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v48);
        v23 = *(_QWORD *)(*a5 + 56);
        swift_release();
        *(_QWORD *)(v23 + 8 * v28) = v25;
        goto LABEL_8;
      }
    }
    v35 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22((char *)(v35[6] + *(_QWORD *)(v40 + 72) * v28), v11, v48);
    *(_QWORD *)(v35[7] + 8 * v28) = v25;
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_21;
    v35[2] = v38;
LABEL_8:
    sub_23E035EFC((uint64_t)v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_23E137638();
  __break(1u);
  return result;
}

uint64_t sub_23E035EFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DD8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v37 - v11;
  v13 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v15;
  v18 = v1[4];
  v37 = v6;
  if (v18)
  {
    v39 = v10;
    v40 = v15;
    v38 = v16;
    v19 = v14;
    v20 = v4;
    v21 = a1;
    v22 = (v18 - 1) & v18;
    v23 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    v24 = *(_QWORD *)(v13 + 48);
    v25 = sub_23E134C80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v25);
    *(_QWORD *)&v12[*(int *)(v3 + 48)] = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v3);
    v4 = v20;
    swift_retain();
    a1 = v21;
    v14 = v19;
    v16 = v38;
    v10 = v39;
    goto LABEL_25;
  }
  v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    v17 = v11;
    goto LABEL_24;
  }
  v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    v28 = *(_QWORD *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      v38 = v16;
      v39 = v10;
      v19 = v14;
      v20 = v4;
      v21 = a1;
      v22 = (v28 - 1) & v28;
      v23 = __clz(__rbit64(v28)) + (v26 << 6);
      v40 = v26;
      goto LABEL_3;
    }
    v29 = v15 + 2;
    v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      v28 = *(_QWORD *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        v26 = v29;
        goto LABEL_7;
      }
      v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        v28 = *(_QWORD *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          v26 = v15 + 3;
          goto LABEL_7;
        }
        v29 = v15 + 4;
        v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          v28 = *(_QWORD *)(v14 + 8 * v29);
          if (v28)
            goto LABEL_10;
          v26 = v15 + 5;
          v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            v28 = *(_QWORD *)(v14 + 8 * v26);
            if (v28)
              goto LABEL_7;
            v11 = v27 - 1;
            v30 = v15 + 6;
            while (v27 != v30)
            {
              v28 = *(_QWORD *)(v14 + 8 * v30++);
              if (v28)
              {
                v26 = v30 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v40 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v22 = 0;
LABEL_25:
  *v1 = v13;
  v1[1] = v14;
  v31 = v40;
  v1[2] = v16;
  v1[3] = v31;
  v1[4] = v22;
  v32 = (void (*)(uint64_t))v1[5];
  sub_23DF89340((uint64_t)v12, (uint64_t)v10, &qword_256D21DD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    v35 = (uint64_t)v37;
    sub_23DF89340((uint64_t)v10, (uint64_t)v37, &qword_256D21DC0);
    v32(v35);
    sub_23E0362DC(v35);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_23E036240(uint64_t result, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t *v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;

  if (byte_256D34708 == 1)
  {
    v2 = (uint64_t *)result;
    a2(&v5);
    v3 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E035BF8(v3, (uint64_t)sub_23E035B84, 0, isUniquelyReferenced_nonNull_native, &v5);
    *v2 = v5;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E0362D4()
{
  return swift_release();
}

uint64_t sub_23E0362DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23E03631C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  int64x2_t v12;
  double v13;
  double v14;
  __int128 v15;
  double *v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  __double2 v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;

  v3 = _s19CurrentLocationViewVMa(0);
  v4 = v1 + *(int *)(v3 + 24);
  if (*(_BYTE *)(v4 + 8) == 4)
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0uLL;
    v13 = 0.0;
    v14 = 0.0;
    v15 = 0uLL;
  }
  else
  {
    v16 = (double *)(v1 + *(int *)(v3 + 20));
    v17 = 1.0;
    if (*(double *)v4 <= 1.0)
      v17 = *(double *)v4;
    v18 = 0.0;
    if (*(double *)v4 > 0.0)
      v18 = v17;
    v19 = v18 * (v16[1] * 57.2957795) * 0.0174532925;
    v20 = sub_23E0364E0();
    sub_23E136FE4();
    sub_23E135E5C();
    v5 = v24;
    v6 = v25;
    v7 = v26;
    v8 = v27;
    v9 = sub_23E137020();
    v10 = sub_23E0364E0();
    v21 = *v16;
    v22 = *v16 + v16[3] * -0.5;
    v23 = __sincos_stret(v19);
    v15 = v28;
    v13 = v21 + v23.__cosval * v22;
    v14 = v21 + v23.__sinval * v22;
    v12 = vdupq_n_s64(0x100uLL);
    v12.i64[0] = v20;
    v11 = sub_23E0364B4;
  }
  *(int64x2_t *)a1 = v12;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(double *)(a1 + 80) = v13;
  *(double *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = 0;
}

uint64_t sub_23E0364B4()
{
  sub_23E135DE4();
  return sub_23E135DD8();
}

uint64_t sub_23E0364E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  double v19;
  __double2 v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  __double2 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = sub_23E136BD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s4KnobVMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s19CurrentLocationViewVMa(0);
  v10 = v0 + *(int *)(v9 + 24);
  if (*(_BYTE *)(v10 + 8) == 4)
    return sub_23E136C48();
  v12 = *(double *)v10;
  v13 = *(int *)(v9 + 20);
  v14 = (double *)(v0 + v13);
  v15 = *(double *)(v0 + v13);
  v16 = *(double *)(v0 + v13 + 24);
  if (v12 <= 1.0)
    v17 = v12;
  else
    v17 = 1.0;
  v18 = v12 > 0.0;
  v19 = 0.0;
  if (v18)
    v19 = v17;
  v20 = __sincos_stret(v19 * (*(double *)(v0 + v13 + 8) * 57.2957795) * 0.0174532925);
  sub_23E06FB00();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v37 = v1;
    v23 = v15 + v16 * -0.5;
    v24 = v15 + v23 * v20.__cosval;
    v25 = v15 + v23 * v20.__sinval;
    v26 = v21 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_23DF73E10(v26, (uint64_t)v8, _s4KnobVMa);
      v28 = *v14;
      v29 = *(int *)(v5 + 20);
      v30 = *(double *)&v8[v29];
      v31 = v30 <= 1.0 ? *(double *)&v8[v29] : 1.0;
      v18 = v30 > 0.0;
      v32 = 0.0;
      if (v18)
        v32 = v31;
      v33 = v28 - v14[3] * 0.5;
      v34 = __sincos_stret(v14[1] * 57.2957795 * v32 * 0.0174532925);
      if (sqrt((v28 + v33 * v34.__cosval - v24) * (v28 + v33 * v34.__cosval - v24)+ (v28 + v33 * v34.__sinval - v25) * (v28 + v33 * v34.__sinval - v25)) < v14[4] * 0.5)break;
      sub_23DF73E54((uint64_t)v8, _s4KnobVMa);
      v26 += v27;
      if (!--v22)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDF3C28], v37);
    v35 = sub_23E136C9C();
    sub_23DF73E54((uint64_t)v8, _s4KnobVMa);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23E136C48();
  }
  return v35;
}

void sub_23E0367A4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256D21DE8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s4KnobVMa(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = (uint64_t)&v6[*(int *)(v4 + 48)];
  *v6 = a2;
  sub_23DF73E10(a1, v12, _s9KnobStateOMa);
  __asm { BR              X10 }
}

uint64_t sub_23E0368F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;

  _s9KnobStateOMa(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89C7C(v1, qword_256D21DE8);
  }
  else
  {
    sub_23DF89384(v3, v2, _s4KnobVMa);
    v5 = *(double *)(v2 + *(int *)(v0 + 20));
    if (v4 <= 0.0)
    {
      if (v5 > 0.0 && (v5 > 1.0 || v5 > 0.0))
        goto LABEL_16;
    }
    else if (v4 <= 1.0)
    {
      if (v5 <= 0.0)
      {
        if (v4 < 0.0)
        {
LABEL_16:
          sub_23DF73E54(v2, _s4KnobVMa);
          return *(_QWORD *)&v4;
        }
      }
      else if (v5 <= 1.0)
      {
        if (v5 > v4)
          goto LABEL_16;
      }
      else if (v4 < 1.0)
      {
        goto LABEL_16;
      }
    }
    sub_23DF73E54(v2, _s4KnobVMa);
  }
  return 0;
}

uint64_t sub_23E036DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  double v7;
  double v8;
  char v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[2];

  v3 = _s16ProgressDotsViewVMa(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v1 + *(int *)(MEMORY[0x24BDAC7A8](v3) + 24) + 8);
  if (v6 == 4 || (sub_23E0367A4(v1, v6), (v9 & 1) != 0))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
  }
  else
  {
    v10 = *(double *)(v1 + *(int *)(v3 + 20) + 8);
    v11 = 1.0;
    if (v8 <= 1.0)
      v12 = v8;
    else
      v12 = 1.0;
    if (v8 <= 0.0)
      v12 = 0.0;
    if (v8 <= 1.0)
      v13 = v8;
    else
      v13 = 1.0;
    if (v8 <= 0.0)
      v13 = 0.0;
    if (v7 > 1.0)
    {
      v14 = 1.0;
    }
    else
    {
      v12 = v13;
      v14 = v7;
    }
    if (v8 <= 1.0)
      v11 = v8;
    if (v8 > 0.0)
      v15 = v11;
    else
      v15 = 0.0;
    if (v7 <= 0.0)
      v16 = v15;
    else
      v16 = v12;
    if (v7 <= 0.0)
      v17 = 0.0;
    else
      v17 = v14;
    v18 = v10 * 57.2957795 * v17 * 0.0174532925;
    v19 = v10 * 57.2957795 * v16 * 0.0174532925;
    sub_23E039FBC(0.0, v10 * 57.2957795, 7.0);
    v26[1] = v20;
    swift_getKeyPath();
    sub_23DF73E10(v1, (uint64_t)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s16ProgressDotsViewVMa);
    v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v22 = swift_allocObject();
    *(double *)(v22 + 16) = v18;
    *(double *)(v22 + 24) = v19;
    sub_23DF89384((uint64_t)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, _s16ProgressDotsViewVMa);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F38);
    sub_23DF89B88(&qword_256D21F40, &qword_256D1F5E8, MEMORY[0x24BEE12D8]);
    sub_23E03A50C();
    sub_23E136F0C();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F30);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 0, 1, v23);
  }
}

uint64_t sub_23E037034@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  char *v30;
  __int128 v31;
  double *v32;
  double v33;
  double v34;
  __double2 v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v40 = a2;
  v41 = a3;
  v8 = sub_23E136054();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E137044();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F78);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F68);
  MEMORY[0x24BDAC7A8](v39);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F58);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a1 * 0.0174532925;
  if (v24 <= a4 || v24 >= a5)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v41, 1, 1, v20);
  v38 = v21;
  v27 = sub_23E136C48();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDF5098], v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v14, v11);
  v28 = (uint64_t)&v17[*(int *)(v15 + 36)];
  v29 = MEMORY[0x24BDEDB60];
  sub_23DF73E10((uint64_t)v10, v28, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v17 = v27;
  *((_WORD *)v17 + 4) = 256;
  *((_QWORD *)v17 + 2) = 0x3FD3333333333333;
  swift_retain();
  sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))v29);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_release();
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C((uint64_t)v17, (uint64_t)v19, &qword_256D21F78);
  v30 = &v19[*(int *)(v39 + 36)];
  v31 = v43;
  *(_OWORD *)v30 = v42;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v44;
  sub_23DF89C7C((uint64_t)v17, &qword_256D21F78);
  v32 = (double *)(v40 + *(int *)(_s16ProgressDotsViewVMa(0) + 20));
  v33 = *v32;
  v34 = *v32 + v32[3] * -0.5;
  v35 = __sincos_stret(v24);
  sub_23DF89C1C((uint64_t)v19, (uint64_t)v23, &qword_256D21F68);
  v36 = (double *)&v23[*(int *)(v20 + 36)];
  *v36 = v33 + v35.__cosval * v34;
  v36[1] = v33 + v35.__sinval * v34;
  sub_23DF89C7C((uint64_t)v19, &qword_256D21F68);
  v37 = v41;
  sub_23E03A738((uint64_t)v23, v41);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v20);
}

void sub_23E0373A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23DF73E10(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_23E037494 + 4 * byte_23E13CF94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_23E037494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  int v5;
  double v6;
  double v7;
  char v8;
  double v9;

  sub_23DF89384(v3, v0, _s4KnobVMa);
  v4 = *(double *)(v0 + *(int *)(v2 + 20));
  sub_23DF73E54(v0, _s4KnobVMa);
  v5 = *(unsigned __int8 *)(v1 + *(int *)(_s16ProgressDotsViewVMa(0) + 24) + 8);
  if (v5 == 4)
    return 0;
  sub_23E0367A4(v1, v5);
  if ((v8 & 1) != 0)
  {
    return 0;
  }
  else
  {
    v9 = v7;
    return sub_23E06FD10(0.0, v4, v6) || sub_23E06FD10(0.0, v4, v9);
  }
}

uint64_t _s16ProgressDotsViewVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D21EE0);
}

uint64_t sub_23E0375E8()
{
  sub_23E137698();
  sub_23E1376C8();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23E037648()
{
  sub_23E1376C8();
  return sub_23E1376A4();
}

uint64_t sub_23E03768C()
{
  sub_23E137698();
  sub_23E1376C8();
  sub_23E1376A4();
  return sub_23E1376D4();
}

BOOL sub_23E0376E8(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

uint64_t _s13ProgressStateVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ProgressStateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *_s13ProgressStateVMa()
{
  return &_s13ProgressStateVN;
}

uint64_t _s13ProgressStateV5StateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E0377F8 + 4 * byte_23E13CF9D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E03782C + 4 * byte_23E13CF98[v4]))();
}

uint64_t sub_23E03782C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E037834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E03783CLL);
  return result;
}

uint64_t sub_23E037848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E037850);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E037854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E03785C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ProgressStateV5StateOMa()
{
  return &_s13ProgressStateV5StateON;
}

uint64_t sub_23E037890()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0378A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s19CurrentLocationViewVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D21E48);
}

uint64_t *sub_23E0378C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(_QWORD *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 v71;
  char *v72;
  char *v73;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  unsigned int (*v81)(uint64_t *, uint64_t, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v88 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      v81 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
      v84 = v12;
      v78 = v13;
      if (v81(a2, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 2, v12);
      }
      v26 = (int *)_s4KnobVMa(0);
      *(uint64_t *)((char *)a1 + v26[5]) = *(uint64_t *)((char *)a2 + v26[5]);
      *(uint64_t *)((char *)a1 + v26[6]) = *(uint64_t *)((char *)a2 + v26[6]);
      *((_BYTE *)a1 + v26[7]) = *((_BYTE *)a2 + v26[7]);
      *((_BYTE *)a1 + v26[8]) = *((_BYTE *)a2 + v26[8]);
      v27 = v26[9];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = _s4KnobV10IconConfigVMa(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_retain();
      v80 = v32;
      v79 = v31;
      if (v32((char *)v29, 1, v30))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v44 = v29[1];
        *v28 = *v29;
        v28[1] = v44;
        v45 = *(int *)(v30 + 20);
        v76 = (char *)v29 + v45;
        v77 = (char *)v28 + v45;
        v46 = sub_23E136CFC();
        v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(v77, v76, v46);
        *(_QWORD *)((char *)v28 + *(int *)(v30 + 24)) = *(_QWORD *)((char *)v29 + *(int *)(v30 + 24));
        v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56);
        swift_retain();
        v47(v28, 0, 1, v30);
      }
      v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      if (v81((uint64_t *)((char *)a2 + v48), 2, v84))
      {
        v51 = _s4KnobV2IDOMa(0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v49, v50, v84);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v49, 0, 2, v84);
      }
      *(_QWORD *)&v49[v26[5]] = *(_QWORD *)&v50[v26[5]];
      *(_QWORD *)&v49[v26[6]] = *(_QWORD *)&v50[v26[6]];
      v49[v26[7]] = v50[v26[7]];
      v49[v26[8]] = v50[v26[8]];
      v57 = v26[9];
      v58 = &v49[v57];
      v59 = &v50[v57];
      swift_retain();
      if (v80(v59, 1, v30))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v61 = *((_QWORD *)v59 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *((_QWORD *)v58 + 1) = v61;
        v62 = *(int *)(v30 + 20);
        v63 = &v58[v62];
        v87 = &v59[v62];
        v64 = sub_23E136CFC();
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(v63, v87, v64);
        *(_QWORD *)&v58[*(int *)(v30 + 24)] = *(_QWORD *)&v59[*(int *)(v30 + 24)];
        v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56);
        swift_retain();
        v66(v58, 0, 1, v30);
      }
      goto LABEL_31;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 2, v15);
      }
      v34 = (int *)_s4KnobVMa(0);
      *(uint64_t *)((char *)a1 + v34[5]) = *(uint64_t *)((char *)a2 + v34[5]);
      *(uint64_t *)((char *)a1 + v34[6]) = *(uint64_t *)((char *)a2 + v34[6]);
      *((_BYTE *)a1 + v34[7]) = *((_BYTE *)a2 + v34[7]);
      *((_BYTE *)a1 + v34[8]) = *((_BYTE *)a2 + v34[8]);
      v35 = v34[9];
      v20 = (uint64_t *)((char *)a1 + v35);
      v21 = (uint64_t *)((char *)a2 + v35);
      v36 = _s4KnobV10IconConfigVMa(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48);
      swift_retain();
      if (!v38(v21, 1, v36))
      {
        v52 = v21[1];
        *v20 = *v21;
        v20[1] = v52;
        v53 = *(int *)(v36 + 20);
        v83 = (char *)v21 + v53;
        v86 = (char *)v20 + v53;
        v54 = sub_23E136CFC();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v86, v83, v54);
        *(_QWORD *)((char *)v20 + *(int *)(v36 + 24)) = *(_QWORD *)((char *)v21 + *(int *)(v36 + 24));
        v56 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56);
        swift_retain();
        v56(v20, 0, 1, v36);
        goto LABEL_31;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
LABEL_32:
        v67 = *(int *)(a3 + 20);
        v68 = *(int *)(a3 + 24);
        v69 = (char *)a1 + v67;
        v70 = (char *)a2 + v67;
        v71 = *((_OWORD *)v70 + 1);
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_OWORD *)v69 + 1) = v71;
        *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
        v72 = (char *)a1 + v68;
        v73 = (char *)a2 + v68;
        v72[8] = v73[8];
        *(_QWORD *)v72 = *(_QWORD *)v73;
        return a1;
      }
      v8 = sub_23E134C80();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v8))
      {
        v10 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
      }
      v18 = (int *)_s4KnobVMa(0);
      *(uint64_t *)((char *)a1 + v18[5]) = *(uint64_t *)((char *)a2 + v18[5]);
      *(uint64_t *)((char *)a1 + v18[6]) = *(uint64_t *)((char *)a2 + v18[6]);
      *((_BYTE *)a1 + v18[7]) = *((_BYTE *)a2 + v18[7]);
      *((_BYTE *)a1 + v18[8]) = *((_BYTE *)a2 + v18[8]);
      v19 = v18[9];
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = _s4KnobV10IconConfigVMa(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
      swift_retain();
      if (!v24(v21, 1, v22))
      {
        v39 = v21[1];
        *v20 = *v21;
        v20[1] = v39;
        v40 = *(int *)(v22 + 20);
        v82 = (char *)v21 + v40;
        v85 = (char *)v20 + v40;
        v41 = sub_23E136CFC();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v85, v82, v41);
        *(_QWORD *)((char *)v20 + *(int *)(v22 + 24)) = *(_QWORD *)((char *)v21 + *(int *)(v22 + 24));
        v43 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56);
        swift_retain();
        v43(v20, 0, 1, v22);
        goto LABEL_31;
      }
    }
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_31:
    swift_storeEnumTagMultiPayload();
    goto LABEL_32;
  }
  v11 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_23E037FD8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  _s9KnobStateOMa(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 2)
  {
    if (result > 1)
      return result;
    v3 = sub_23E134C80();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 2, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v5 = _s4KnobVMa(0);
    swift_release();
    v6 = a1 + *(int *)(v5 + 36);
    v7 = _s4KnobV10IconConfigVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
    if ((_DWORD)result)
      return result;
LABEL_14:
    swift_bridgeObjectRelease();
    v17 = v6 + *(int *)(v7 + 20);
    v18 = sub_23E136CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    return swift_release();
  }
  v8 = sub_23E134C80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(a1, 2, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  v11 = _s4KnobVMa(0);
  swift_release();
  v12 = a1 + *(int *)(v11 + 36);
  v7 = _s4KnobV10IconConfigVMa(0);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v13(v12, 1, v7))
  {
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v7 + 20);
    v15 = sub_23E136CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    swift_release();
  }
  v16 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
  if (!v10(v16, 2, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
  swift_release();
  v6 = v16 + *(int *)(v11 + 36);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v6, 1, v7);
  if (!(_DWORD)result)
    goto LABEL_14;
  return result;
}

char *sub_23E038224(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  void (*v70)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  char *v76;
  char *v77;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  char *v89;
  char *v90;

  v6 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_23E134C80();
      v12 = *(_QWORD *)(v11 - 8);
      v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      v81 = v12;
      if (v87(a2, 2, v11))
      {
        v13 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 2, v11);
      }
      v25 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v25[5]] = *(_QWORD *)&a2[v25[5]];
      *(_QWORD *)&a1[v25[6]] = *(_QWORD *)&a2[v25[6]];
      a1[v25[7]] = a2[v25[7]];
      a1[v25[8]] = a2[v25[8]];
      v26 = v25[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = _s4KnobV10IconConfigVMa(0);
      v84 = *(_QWORD *)(v29 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
      swift_retain();
      v85 = v30;
      if (v30(v28, 1, v29))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v44 = *((_QWORD *)v28 + 1);
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = v44;
        v45 = *(int *)(v29 + 20);
        v79 = &v28[v45];
        v80 = &v27[v45];
        v46 = sub_23E136CFC();
        v83 = a3;
        v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v47(v80, v79, v46);
        *(_QWORD *)&v27[*(int *)(v29 + 24)] = *(_QWORD *)&v28[*(int *)(v29 + 24)];
        a3 = v83;
        v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56);
        swift_retain();
        v48(v27, 0, 1, v29);
      }
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v50 = &a1[v49];
      v51 = &a2[v49];
      if (v87(&a2[v49], 2, v11))
      {
        v52 = _s4KnobV2IDOMa(0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v50, v51, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v50, 0, 2, v11);
      }
      *(_QWORD *)&v50[v25[5]] = *(_QWORD *)&v51[v25[5]];
      *(_QWORD *)&v50[v25[6]] = *(_QWORD *)&v51[v25[6]];
      v50[v25[7]] = v51[v25[7]];
      v50[v25[8]] = v51[v25[8]];
      v60 = v25[9];
      v61 = &v50[v60];
      v62 = &v51[v60];
      swift_retain();
      if (v85(v62, 1, v29))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v64 = *((_QWORD *)v62 + 1);
        *(_QWORD *)v61 = *(_QWORD *)v62;
        *((_QWORD *)v61 + 1) = v64;
        v65 = *(int *)(v29 + 20);
        v66 = &v61[v65];
        v90 = &v62[v65];
        v67 = sub_23E136CFC();
        v68 = a3;
        v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v69(v66, v90, v67);
        a3 = v68;
        *(_QWORD *)&v61[*(int *)(v29 + 24)] = *(_QWORD *)&v62[*(int *)(v29 + 24)];
        v70 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56);
        swift_retain();
        v70(v61, 0, 1, v29);
      }
      goto LABEL_29;
    case 1:
      v14 = sub_23E134C80();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(a2, 2, v14))
      {
        v16 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(a1, a2, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 2, v14);
      }
      v32 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v32[5]] = *(_QWORD *)&a2[v32[5]];
      *(_QWORD *)&a1[v32[6]] = *(_QWORD *)&a2[v32[6]];
      a1[v32[7]] = a2[v32[7]];
      a1[v32[8]] = a2[v32[8]];
      v33 = v32[9];
      v19 = &a1[v33];
      v20 = &a2[v33];
      v34 = _s4KnobV10IconConfigVMa(0);
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      swift_retain();
      if (!v36(v20, 1, v34))
      {
        v53 = *((_QWORD *)v20 + 1);
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *((_QWORD *)v19 + 1) = v53;
        v54 = *(int *)(v34 + 20);
        v86 = &v20[v54];
        v89 = &v19[v54];
        v55 = a3;
        v56 = sub_23E136CFC();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v58 = v56;
        a3 = v55;
        v57(v89, v86, v58);
        *(_QWORD *)&v19[*(int *)(v34 + 24)] = *(_QWORD *)&v20[*(int *)(v34 + 24)];
        v59 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
        swift_retain();
        v59(v19, 0, 1, v34);
        goto LABEL_29;
      }
      goto LABEL_13;
    case 0:
      v8 = sub_23E134C80();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v8))
      {
        v10 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
      }
      v17 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v17[5]] = *(_QWORD *)&a2[v17[5]];
      *(_QWORD *)&a1[v17[6]] = *(_QWORD *)&a2[v17[6]];
      a1[v17[7]] = a2[v17[7]];
      a1[v17[8]] = a2[v17[8]];
      v18 = v17[9];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = _s4KnobV10IconConfigVMa(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_retain();
      if (!v23(v20, 1, v21))
      {
        v37 = *((_QWORD *)v20 + 1);
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *((_QWORD *)v19 + 1) = v37;
        v38 = *(int *)(v21 + 20);
        v88 = &v19[v38];
        v82 = a3;
        v39 = &v20[v38];
        v40 = sub_23E136CFC();
        v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        v42 = v39;
        a3 = v82;
        v41(v88, v42, v40);
        *(_QWORD *)&v19[*(int *)(v21 + 24)] = *(_QWORD *)&v20[*(int *)(v21 + 24)];
        v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
        swift_retain();
        v43(v19, 0, 1, v21);
        goto LABEL_29;
      }
LABEL_13:
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_30:
  v71 = *(int *)(a3 + 20);
  v72 = *(int *)(a3 + 24);
  v73 = &a1[v71];
  v74 = &a2[v71];
  v75 = *((_OWORD *)v74 + 1);
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *((_OWORD *)v73 + 1) = v75;
  *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
  v76 = &a1[v72];
  v77 = &a2[v72];
  v76[8] = v77[8];
  *(_QWORD *)v76 = *(_QWORD *)v77;
  return a1;
}

char *sub_23E038930(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, _s9KnobStateOMa);
    v82 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = sub_23E134C80();
        v11 = *(_QWORD *)(v10 - 8);
        v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        v78 = v10;
        v72 = v11;
        if (v75(a2, 2, v10))
        {
          v12 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
        }
        v16 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
        *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
        a1[v16[7]] = a2[v16[7]];
        a1[v16[8]] = a2[v16[8]];
        v17 = v16[9];
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = _s4KnobV10IconConfigVMa(0);
        v21 = *(_QWORD *)(v20 - 8);
        v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        swift_retain();
        v74 = v22;
        v73 = v21;
        if (v22(v19, 1, v20))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v18 = *(_QWORD *)v19;
          *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
          v32 = *(int *)(v20 + 20);
          v70 = &v19[v32];
          v71 = &v18[v32];
          v33 = sub_23E136CFC();
          v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v69(v71, v70, v33);
          *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
          v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
          swift_retain();
          v34(v18, 0, 1, v20);
        }
        v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v36 = &a1[v35];
        v37 = &a2[v35];
        if (v75(&a2[v35], 2, v78))
        {
          v38 = _s4KnobV2IDOMa(0);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v36, v37, v78);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v36, 0, 2, v78);
        }
        *(_QWORD *)&v36[v16[5]] = *(_QWORD *)&v37[v16[5]];
        *(_QWORD *)&v36[v16[6]] = *(_QWORD *)&v37[v16[6]];
        v36[v16[7]] = v37[v16[7]];
        v36[v16[8]] = v37[v16[8]];
        v43 = v16[9];
        v44 = &v36[v43];
        v45 = &v37[v43];
        swift_retain();
        if (v74(v45, 1, v20))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v44 = *(_QWORD *)v45;
          *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
          v47 = *(int *)(v20 + 20);
          v48 = &v44[v47];
          v80 = &v45[v47];
          v49 = sub_23E136CFC();
          v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v48, v80, v49);
          *(_QWORD *)&v44[*(int *)(v20 + 24)] = *(_QWORD *)&v45[*(int *)(v20 + 24)];
          v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56);
          swift_retain();
          v51(v44, 0, 1, v20);
        }
        goto LABEL_29;
      case 1:
        v13 = sub_23E134C80();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
        {
          v15 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
        }
        v24 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v24[5]] = *(_QWORD *)&a2[v24[5]];
        *(_QWORD *)&a1[v24[6]] = *(_QWORD *)&a2[v24[6]];
        a1[v24[7]] = a2[v24[7]];
        a1[v24[8]] = a2[v24[8]];
        v25 = v24[9];
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = _s4KnobV10IconConfigVMa(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_retain();
        if (!v30(v27, 1, v28))
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
          v39 = *(int *)(v28 + 20);
          v76 = &v27[v39];
          v79 = &v26[v39];
          v40 = sub_23E136CFC();
          v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          v41(v79, v76, v40);
          *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
          v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
          swift_retain();
          v42(v26, 0, 1, v28);
          goto LABEL_29;
        }
LABEL_17:
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      case 0:
        v7 = sub_23E134C80();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
        {
          v9 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
        }
        v52 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v52[5]] = *(_QWORD *)&a2[v52[5]];
        *(_QWORD *)&a1[v52[6]] = *(_QWORD *)&a2[v52[6]];
        a1[v52[7]] = a2[v52[7]];
        a1[v52[8]] = a2[v52[8]];
        v53 = v52[9];
        v26 = &a1[v53];
        v27 = &a2[v53];
        v54 = _s4KnobV10IconConfigVMa(0);
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        swift_retain();
        if (!v56(v27, 1, v54))
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
          v57 = *(int *)(v54 + 20);
          v77 = &v27[v57];
          v81 = &v26[v57];
          v58 = sub_23E136CFC();
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v81, v77, v58);
          *(_QWORD *)&v26[*(int *)(v54 + 24)] = *(_QWORD *)&v27[*(int *)(v54 + 24)];
          v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56);
          swift_retain();
          v60(v26, 0, 1, v54);
          goto LABEL_29;
        }
        goto LABEL_17;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
LABEL_30:
  v61 = *(int *)(a3 + 20);
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
  *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
  *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
  v64 = *(int *)(a3 + 24);
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)v66;
  v65[8] = v66[8];
  *(_QWORD *)v65 = v67;
  return a1;
}

char *sub_23E039068(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  char *v58;
  char *v59;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  unsigned int (*v63)(char *, uint64_t, uint64_t);

  v5 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_23E134C80();
      v11 = *(_QWORD *)(v10 - 8);
      v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v63(a2, 2, v10))
      {
        v12 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
      }
      v23 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v23[5]] = *(_QWORD *)&a2[v23[5]];
      *(_QWORD *)&a1[v23[6]] = *(_QWORD *)&a2[v23[6]];
      a1[v23[7]] = a2[v23[7]];
      a1[v23[8]] = a2[v23[8]];
      v24 = v23[9];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = _s4KnobV10IconConfigVMa(0);
      v28 = *(_QWORD *)(v27 - 8);
      v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      if (v62(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v25 = *(_OWORD *)v26;
        v36 = *(int *)(v27 + 20);
        v61 = v11;
        v37 = &v25[v36];
        v38 = &v26[v36];
        v39 = sub_23E136CFC();
        v40 = v38;
        v11 = v61;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v40, v39);
        *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v42 = &a1[v41];
      v43 = &a2[v41];
      if (v63(&a2[v41], 2, v10))
      {
        v44 = _s4KnobV2IDOMa(0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v42, 0, 2, v10);
      }
      *(_QWORD *)&v42[v23[5]] = *(_QWORD *)&v43[v23[5]];
      *(_QWORD *)&v42[v23[6]] = *(_QWORD *)&v43[v23[6]];
      v42[v23[7]] = v43[v23[7]];
      v42[v23[8]] = v43[v23[8]];
      v45 = v23[9];
      v46 = &v42[v45];
      v47 = &v43[v45];
      if (v62(&v43[v45], 1, v27))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v46 = *(_OWORD *)v47;
        v49 = *(int *)(v27 + 20);
        v50 = &v46[v49];
        v51 = &v47[v49];
        v52 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        *(_QWORD *)&v46[*(int *)(v27 + 24)] = *(_QWORD *)&v47[*(int *)(v27 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v46, 0, 1, v27);
      }
      goto LABEL_29;
    case 1:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
      }
      v30 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v30[5]] = *(_QWORD *)&a2[v30[5]];
      *(_QWORD *)&a1[v30[6]] = *(_QWORD *)&a2[v30[6]];
      a1[v30[7]] = a2[v30[7]];
      a1[v30[8]] = a2[v30[8]];
      v31 = v30[9];
      v18 = &a1[v31];
      v19 = &a2[v31];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        goto LABEL_13;
      goto LABEL_20;
    case 0:
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
      {
        v9 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      }
      v16 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      a1[v16[7]] = a2[v16[7]];
      a1[v16[8]] = a2[v16[8]];
      v17 = v16[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
LABEL_13:
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      }
LABEL_20:
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v32 = *(int *)(v20 + 20);
      v33 = &v18[v32];
      v34 = &v19[v32];
      v35 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_29;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
LABEL_30:
  v53 = *(int *)(a3 + 20);
  v54 = *(int *)(a3 + 24);
  v55 = &a1[v53];
  v56 = &a2[v53];
  v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
  v58 = &a1[v54];
  v59 = &a2[v54];
  v58[8] = v59[8];
  *(_QWORD *)v58 = *(_QWORD *)v59;
  return a1;
}

char *sub_23E0396E0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  char *v57;
  char *v58;
  char *v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, _s9KnobStateOMa);
    v64 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = sub_23E134C80();
        v11 = *(_QWORD *)(v10 - 8);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        if (v63(a2, 2, v10))
        {
          v12 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
        }
        v16 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
        *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
        a1[v16[7]] = a2[v16[7]];
        a1[v16[8]] = a2[v16[8]];
        v17 = v16[9];
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = _s4KnobV10IconConfigVMa(0);
        v21 = *(_QWORD *)(v20 - 8);
        v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        if (v62(v19, 1, v20))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v18 = *(_OWORD *)v19;
          v30 = *(int *)(v20 + 20);
          v60 = &v18[v30];
          v61 = v11;
          v31 = &v19[v30];
          v32 = sub_23E136CFC();
          v33 = v31;
          v11 = v61;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v60, v33, v32);
          *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v35 = &a1[v34];
        v36 = &a2[v34];
        if (v63(&a2[v34], 2, v10))
        {
          v37 = _s4KnobV2IDOMa(0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v35, v36, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 2, v10);
        }
        *(_QWORD *)&v35[v16[5]] = *(_QWORD *)&v36[v16[5]];
        *(_QWORD *)&v35[v16[6]] = *(_QWORD *)&v36[v16[6]];
        v35[v16[7]] = v36[v16[7]];
        v35[v16[8]] = v36[v16[8]];
        v38 = v16[9];
        v39 = &v35[v38];
        v40 = &v36[v38];
        if (v62(&v36[v38], 1, v20))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v42 = *(int *)(v20 + 20);
          v43 = &v39[v42];
          v44 = &v40[v42];
          v45 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          *(_QWORD *)&v39[*(int *)(v20 + 24)] = *(_QWORD *)&v40[*(int *)(v20 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v39, 0, 1, v20);
        }
        goto LABEL_29;
      case 1:
        v13 = sub_23E134C80();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
        {
          v15 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
        }
        v23 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v23[5]] = *(_QWORD *)&a2[v23[5]];
        *(_QWORD *)&a1[v23[6]] = *(_QWORD *)&a2[v23[6]];
        a1[v23[7]] = a2[v23[7]];
        a1[v23[8]] = a2[v23[8]];
        v24 = v23[9];
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = _s4KnobV10IconConfigVMa(0);
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          goto LABEL_28;
        goto LABEL_17;
      case 0:
        v7 = sub_23E134C80();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
        {
          v9 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
        }
        v46 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v46[5]] = *(_QWORD *)&a2[v46[5]];
        *(_QWORD *)&a1[v46[6]] = *(_QWORD *)&a2[v46[6]];
        a1[v46[7]] = a2[v46[7]];
        a1[v46[8]] = a2[v46[8]];
        v47 = v46[9];
        v25 = &a1[v47];
        v26 = &a2[v47];
        v27 = _s4KnobV10IconConfigVMa(0);
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
LABEL_28:
          *(_OWORD *)v25 = *(_OWORD *)v26;
          v48 = *(int *)(v27 + 20);
          v49 = &v25[v48];
          v50 = &v26[v48];
          v51 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
          *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          goto LABEL_29;
        }
LABEL_17:
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
LABEL_30:
  v52 = *(int *)(a3 + 20);
  v53 = *(int *)(a3 + 24);
  v54 = &a1[v52];
  v55 = &a2[v52];
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  v57 = &a1[v53];
  v58 = &a2[v53];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  return a1;
}

uint64_t sub_23E039D6C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = _s9KnobStateOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8) <= 4u)
    v9 = 4;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
  v10 = v9 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8) >= 4u)
    return v10;
  else
    return 0;
}

uint64_t sub_23E039E04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s9KnobStateOMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = a2 + 4;
  return result;
}

uint64_t sub_23E039E90()
{
  uint64_t result;
  unint64_t v1;

  result = _s9KnobStateOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E039F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E039F1C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E039F30()
{
  unint64_t result;

  result = qword_256D21F20;
  if (!qword_256D21F20)
  {
    result = MEMORY[0x24264C55C](&unk_23E13D0C4, &_s13ProgressStateV5StateON);
    atomic_store(result, (unint64_t *)&qword_256D21F20);
  }
  return result;
}

unint64_t sub_23E039F78()
{
  unint64_t result;

  result = qword_256D21F28;
  if (!qword_256D21F28)
  {
    result = MEMORY[0x24264C55C](&unk_23E13D12C, &_s13ProgressStateVN);
    atomic_store(result, (unint64_t *)&qword_256D21F28);
  }
  return result;
}

void sub_23E039FBC(double a1, double a2, double a3)
{
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  BOOL v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  BOOL v19;
  double v20;
  BOOL v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  double *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  const void *v31;
  BOOL v32;
  BOOL v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;

  v6 = a1 <= a2;
  if (a3 > 0.0)
    v6 = a1 >= a2;
  if (!v6)
  {
    v7 = -1;
    do
    {
      v8 = ++v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_45;
      }
      v9 = a1 + (double)v8 * a3;
      v10 = v9 <= a2;
      if (a3 > 0.0)
        v10 = v9 >= a2;
    }
    while (!v10);
    if (v8 <= 0)
      goto LABEL_18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21FA8);
    v11 = (double *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v14 = v13 >> 3;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v14;
    v15 = v11 + 4;
    v16 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v8;
    v17 = -1;
    v18 = a1;
    while (1)
    {
      v19 = v18 <= a2;
      if (a3 > 0.0)
        v19 = v18 >= a2;
      if (v19)
        goto LABEL_47;
      v20 = a1 + (double)(v17 + 2) * a3;
      *v15++ = v18;
      ++v17;
      v18 = v20;
      if (v7 == v17)
        goto LABEL_19;
    }
  }
LABEL_18:
  v8 = 0;
  v11 = (double *)MEMORY[0x24BEE4AF8];
  v15 = (double *)(MEMORY[0x24BEE4AF8] + 32);
  v16 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v20 = a1;
LABEL_19:
  v21 = v20 <= a2;
  if (a3 > 0.0)
    v21 = v20 >= a2;
  if (!v21)
  {
    while (!__OFADD__(v8, 1))
    {
      if (!v16)
      {
        v22 = *((_QWORD *)v11 + 3);
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_48;
        v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1)
          v24 = 1;
        else
          v24 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D21FA8);
        v25 = (double *)swift_allocObject();
        v26 = _swift_stdlib_malloc_size(v25);
        v27 = v26 - 32;
        if (v26 < 32)
          v27 = v26 - 25;
        v28 = v27 >> 3;
        *((_QWORD *)v25 + 2) = v24;
        *((_QWORD *)v25 + 3) = 2 * (v27 >> 3);
        v29 = (unint64_t)(v25 + 4);
        v30 = *((_QWORD *)v11 + 3) >> 1;
        if (*((_QWORD *)v11 + 2))
        {
          v31 = v11 + 4;
          if (v25 != v11 || v29 >= (unint64_t)v31 + 8 * v30)
            memmove(v25 + 4, v31, 8 * v30);
          v11[2] = 0.0;
        }
        v15 = (double *)(v29 + 8 * v30);
        v16 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v30;
        swift_release();
        v11 = v25;
      }
      v32 = __OFSUB__(v16--, 1);
      if (v32)
        goto LABEL_46;
      *v15++ = v20;
      v20 = a1 + (double)(v8 + 1) * a3;
      v33 = v20 <= a2;
      if (a3 > 0.0)
        v33 = v20 >= a2;
      ++v8;
      if (v33)
        goto LABEL_40;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_40:
  v34 = *((_QWORD *)v11 + 3);
  if (v34 >= 2)
  {
    v35 = v34 >> 1;
    v32 = __OFSUB__(v35, v16);
    v36 = v35 - v16;
    if (v32)
    {
LABEL_49:
      __break(1u);
      return;
    }
    *((_QWORD *)v11 + 2) = v36;
  }
}

uint64_t sub_23E03A240()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(unint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(_s16ProgressDotsViewVMa(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + v2;
  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v0 + v2, 2, v13))
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v0 + v2, v13);
    v22 = v14;
    v16 = _s4KnobVMa(0);
    swift_release();
    v17 = v3 + *(int *)(v16 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    if (!v18(v17, 1, v9))
    {
      swift_bridgeObjectRelease();
      v21 = v17 + *(int *)(v9 + 20);
      v19 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v21, v19);
      swift_release();
    }
    v20 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v15(v20, 2, v13))
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v20, v13);
    swift_release();
    v8 = v20 + *(int *)(v16 + 36);
    if (!v18(v8, 1, v9))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v5 = sub_23E134C80();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v2, 2, v5))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v2, v5);
    v7 = _s4KnobVMa(0);
    swift_release();
    v8 = v3 + *(int *)(v7 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23E136CFC();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_release();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_23E03A4BC@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s16ProgressDotsViewVMa(0) - 8) + 80);
  return sub_23E037034(a1, v2 + ((v5 + 32) & ~v5), a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

unint64_t sub_23E03A50C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D21F48;
  if (!qword_256D21F48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21F38);
    v2 = sub_23E03A838(&qword_256D21F50, &qword_256D21F58, (uint64_t (*)(void))sub_23E03A588);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D21F48);
  }
  return result;
}

unint64_t sub_23E03A588()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21F60;
  if (!qword_256D21F60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21F68);
    v2[0] = sub_23E03A5F4();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21F60);
  }
  return result;
}

unint64_t sub_23E03A5F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21F70;
  if (!qword_256D21F70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21F78);
    v2[0] = sub_23E03A678(&qword_256D21F80, &qword_256D21F88, MEMORY[0x24BDECC38]);
    v2[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21F70);
  }
  return result;
}

uint64_t sub_23E03A678(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_23DF89B88(&qword_256D21F90, &qword_256D21F98, MEMORY[0x24BDEB358]);
    v7[1] = a3;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E03A6F4()
{
  unint64_t result;

  result = qword_256D21FA0;
  if (!qword_256D21FA0)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED5C0], MEMORY[0x24BDED5D0]);
    atomic_store(result, (unint64_t *)&qword_256D21FA0);
  }
  return result;
}

uint64_t sub_23E03A738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E03A780()
{
  return sub_23DFA5DBC(&qword_256D21FB0, &qword_256D21FB8, (uint64_t (*)(void))sub_23E03A7B4, MEMORY[0x24BDF5578]);
}

unint64_t sub_23E03A7B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21FC0;
  if (!qword_256D21FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21FC8);
    v2[0] = sub_23E03A838(&qword_256D21FD0, &qword_256D21FD8, (uint64_t (*)(void))sub_23E03A8A4);
    v2[1] = MEMORY[0x24BDEF830];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21FC0);
  }
  return result;
}

uint64_t sub_23E03A838(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23E03A6F4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E03A8A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21FE0;
  if (!qword_256D21FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21FE8);
    v2[0] = sub_23E03A678(&qword_256D21FF0, &qword_256D21FF8, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_23DF89B88(&qword_256D22000, &qword_256D22008, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21FE0);
  }
  return result;
}

uint64_t sub_23E03A940()
{
  return sub_23DFA5DBC(&qword_256D22010, &qword_256D22018, sub_23E03A974, MEMORY[0x24BDF5578]);
}

uint64_t sub_23E03A974()
{
  return sub_23DFA5DBC(&qword_256D22020, &qword_256D21F30, (uint64_t (*)(void))sub_23E03A50C, MEMORY[0x24BDF4A08]);
}

uint64_t *sub_23E03A998(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135D60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = v11[16];
    sub_23E03AB38();
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    v10[16] = v14;
    v15 = a3[6];
    v16 = a3[7];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *v17 = *v18;
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    v19 = (uint64_t *)((char *)a1 + v16);
    v20 = (char *)a2 + v16;
    v21 = *(uint64_t *)((char *)a2 + v16);
    swift_retain();
    if (v21)
    {
      v22 = *((_QWORD *)v20 + 1);
      *v19 = v21;
      v19[1] = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    v23 = a3[8];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    if (*v25)
    {
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    v27 = a3[9];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *v28 = *v29;
    *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
    v28[16] = v29[16];
  }
  swift_retain();
  return a1;
}

uint64_t sub_23E03AB38()
{
  return swift_retain();
}

uint64_t sub_23E03AB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_23E03AC08();
  swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32)))
    swift_release();
  return swift_release();
}

uint64_t sub_23E03AC08()
{
  return swift_release();
}

_QWORD *sub_23E03AC10(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23E135D60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_23E03AB38();
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  v13 = a3[6];
  v14 = a3[7];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = (_QWORD *)((char *)a1 + v14);
  v18 = (char *)a2 + v14;
  v19 = *(_QWORD *)((char *)a2 + v14);
  swift_retain();
  if (v19)
  {
    v20 = *((_QWORD *)v18 + 1);
    *v17 = v19;
    v17[1] = v20;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  if (*v23)
  {
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *v26 = *v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  v26[16] = v27[16];
  swift_retain();
  return a1;
}

_QWORD *sub_23E03AD88(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1DA20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_23E03AB38();
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  sub_23E03AC08();
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *v14 = *v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_retain();
  swift_release();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a1 + v16);
  v20 = *(_QWORD *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      v21 = *((_QWORD *)v18 + 1);
      *v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v20)
  {
    v22 = *((_QWORD *)v18 + 1);
    *v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_13;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
LABEL_13:
  v23 = a3[8];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)((char *)a1 + v23);
  v27 = *(_QWORD *)((char *)a2 + v23);
  if (!v26)
  {
    if (v27)
    {
      v29 = *((_QWORD *)v25 + 1);
      *v24 = v27;
      v24[1] = v29;
      swift_retain();
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_20;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_19;
  }
  v28 = *((_QWORD *)v25 + 1);
  *v24 = v27;
  v24[1] = v28;
  swift_retain();
  swift_release();
LABEL_20:
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *((_BYTE *)a2 + v30);
  *((_QWORD *)v31 + 1) = *(_QWORD *)((char *)a2 + v30 + 8);
  swift_retain();
  swift_release();
  v31[16] = v32[16];
  return a1;
}

char *sub_23E03AFA0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23E135D60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  if (*(_QWORD *)v14)
  {
    v16 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = v15;
    *((_QWORD *)v13 + 1) = v16;
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  if (*(_QWORD *)v19)
  {
    v21 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = v20;
    *((_QWORD *)v18 + 1) = v21;
  }
  else
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  return a1;
}

char *sub_23E03B0CC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1DA20);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135D60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[16];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_23E03AC08();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *v13 = *v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)&a1[v15];
  v19 = *(_QWORD *)&a2[v15];
  if (v18)
  {
    if (v19)
    {
      v20 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = v19;
      *((_QWORD *)v16 + 1) = v20;
      swift_release();
      goto LABEL_12;
    }
    swift_release();
  }
  else if (v19)
  {
    v21 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = v19;
    *((_QWORD *)v16 + 1) = v21;
    goto LABEL_12;
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
LABEL_12:
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_QWORD *)&a1[v22];
  v26 = *(_QWORD *)&a2[v22];
  if (!v25)
  {
    if (v26)
    {
      v28 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v28;
      goto LABEL_19;
    }
LABEL_18:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    goto LABEL_19;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_18;
  }
  v27 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v27;
  swift_release();
LABEL_19:
  v29 = a3[9];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  v30[16] = v31[16];
  return a1;
}

uint64_t sub_23E03B2A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E03B2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23E03B33C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E03B348(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for ColorPicker()
{
  uint64_t result;

  result = qword_256D22090;
  if (!qword_256D22090)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E03B404()
{
  unint64_t v0;

  sub_23DF9A874();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23E03B48C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E03B49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  int *v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  char *v22;
  uint64_t result;

  *a6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v12 = (int *)type metadata accessor for ColorPicker();
  v13 = (uint64_t *)((char *)a6 + v12[7]);
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)((char *)a6 + v12[8]);
  *v14 = 0;
  v14[1] = 0;
  v15 = (char *)a6 + v12[9];
  *v15 = sub_23E135D30() & 1;
  *((_QWORD *)v15 + 1) = v16;
  v15[16] = v17 & 1;
  v18 = (char *)a6 + v12[5];
  *(_QWORD *)v18 = sub_23E040E48;
  *((_QWORD *)v18 + 1) = a1;
  v18[16] = 0;
  v19 = swift_retain();
  v20 = sub_23E03FF48(v19);
  if (*((_QWORD *)v20 + 2))
    v21 = v20[32];
  else
    v21 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v22 = (char *)a6 + v12[6];
  *v22 = v21;
  *((_QWORD *)v22 + 1) = 0;
  sub_23DF9D698(*v13);
  *v13 = a4;
  v13[1] = a5;
  result = sub_23DF9D698(*v14);
  *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_23E03B5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a1;
  v35 = type metadata accessor for ColorPicker();
  v41 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v42 = v2;
  v44 = (uint64_t)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v45);
  v46 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E1364D4();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D220D8);
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D220E0);
  v32 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D220E8);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D220F0);
  v37 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v36 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E136714();
  v43 = v1;
  v48 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D220F8);
  sub_23E00E260(&qword_256D22100, &qword_256D220F8, (uint64_t (*)(void))sub_23E03FD00);
  sub_23E135D3C();
  sub_23E1364C8();
  v18 = sub_23E136714();
  sub_23E136708();
  sub_23E136708();
  if (sub_23E136708() != v18)
    sub_23E136708();
  v19 = sub_23DF89B88(&qword_256D22128, &qword_256D220D8, MEMORY[0x24BDEB238]);
  sub_23E136AE0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v7);
  v49 = v7;
  v50 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_23E136A80();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
  v21 = v43;
  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  sub_23E135DB4();
  swift_getKeyPath();
  swift_getKeyPath();
  v22 = (uint64_t)v46;
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v23 = v21;
  v24 = v44;
  sub_23DF73E10(v23, v44, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
  v25 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v26 = swift_allocObject();
  sub_23DF89384(v24, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
  v49 = v10;
  v50 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_23E03FDDC();
  v27 = v36;
  v28 = v40;
  sub_23E136B7C();
  swift_release();
  sub_23DF89C7C(v22, &qword_256D1D5E8);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v28);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v47, v27, v38);
}

uint64_t sub_23E03BAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (**v18)(char);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22148);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for ColorPicker();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22120);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22110);
  MEMORY[0x24BDAC7A8](v35);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = sub_23E136378();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v18 = (uint64_t (**)(char))&v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D22150)
                                                   + 44)];
  sub_23DF73E10(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
  v19 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = swift_allocObject();
  sub_23DF89384((uint64_t)v12, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
  *(_QWORD *)v8 = sub_23E136378();
  *((_QWORD *)v8 + 1) = 0x4030000000000000;
  v8[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22158);
  sub_23E03BEA4(a1, (uint64_t)&v8[*(int *)(v21 + 44)]);
  sub_23DF89C1C((uint64_t)v8, (uint64_t)v6, &qword_256D22148);
  *v18 = sub_23E03FE5C;
  v18[1] = (uint64_t (*)(char))v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22160);
  sub_23DF89C1C((uint64_t)v6, (uint64_t)v18 + *(int *)(v22 + 48), &qword_256D22148);
  swift_retain();
  sub_23DF89C7C((uint64_t)v8, &qword_256D22148);
  sub_23DF89C7C((uint64_t)v6, &qword_256D22148);
  swift_release();
  LOBYTE(v20) = sub_23E136720();
  sub_23E135D00();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v17, &qword_256D22120);
  v31 = &v17[*(int *)(v35 + 36)];
  *v31 = v20;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_23DF89C7C((uint64_t)v15, &qword_256D22120);
  LOBYTE(v20) = sub_23E136744();
  v32 = v36;
  sub_23DF89C1C((uint64_t)v17, v36, &qword_256D22110);
  v33 = v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D220F8) + 36);
  *(_BYTE *)v33 = v20;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_BYTE *)(v33 + 40) = 1;
  return sub_23DF89C7C((uint64_t)v17, &qword_256D22110);
}

uint64_t sub_23E03BDC4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void (*v5)(uint64_t);

  v3 = a1 & 1;
  result = type metadata accessor for ColorPicker();
  v5 = *(void (**)(uint64_t))(a2 + *(int *)(result + 32));
  if (v5)
  {
    swift_retain();
    v5(v3);
    result = sub_23DF9D698((uint64_t)v5);
  }
  if (!(_DWORD)v3)
  {
    _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    sub_23E135DB4();
    sub_23E0C0334();
    return swift_release();
  }
  return result;
}

uint64_t sub_23E03BEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v79[2];
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char v108;

  v106 = a2;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22168);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22170);
  v89 = *(_QWORD *)(v91 - 8);
  v4 = MEMORY[0x24BDAC7A8](v91);
  v90 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)v79 - v6;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22178);
  v85 = *(_QWORD *)(v88 - 8);
  v7 = MEMORY[0x24BDAC7A8](v88);
  v86 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)v79 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22180);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v105 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v104 = (uint64_t)v79 - v13;
  v14 = type metadata accessor for ColorPicker();
  v93 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v94 = v15;
  v95 = (uint64_t)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E135D54();
  v97 = *(_QWORD *)(v16 - 8);
  v98 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v96 = (char *)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22188);
  v100 = *(_QWORD *)(v18 - 8);
  v101 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v99 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22190);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22198);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v81 = (char *)v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D221A0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v103 = (uint64_t)v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v79 - v29;
  v102 = a1;
  v31 = _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  v92 = v31;
  v32 = *(_QWORD *)(sub_23E135DB4()
                  + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig);
  swift_release();
  v33 = 1;
  if ((v32 & 1) != 0)
  {
    *(_QWORD *)v22 = sub_23E136384();
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = 1;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D221F8);
    v35 = v102;
    sub_23E03D4B8(v102, &v22[*(int *)(v34 + 44)]);
    v36 = v96;
    sub_23E135D48();
    v80 = v23;
    v79[1] = v20;
    v37 = v95;
    sub_23DF73E10(v35, v95, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
    v38 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    v39 = swift_allocObject();
    sub_23DF89384(v37, v39 + v38, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
    v41 = v98;
    v40 = v99;
    sub_23E136F24();
    swift_release();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v36, v41);
    sub_23E135DA8();
    sub_23DF89B88(&qword_256D22200, &qword_256D22190, MEMORY[0x24BDF4700]);
    sub_23DF89B88(&qword_256D221D8, &qword_256D22188, MEMORY[0x24BDEC410]);
    v42 = v81;
    v43 = v101;
    sub_23E136ABC();
    v44 = v40;
    v23 = v80;
    (*(void (**)(char *, uint64_t))(v100 + 8))(v44, v43);
    sub_23DF89C7C((uint64_t)v22, &qword_256D22190);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v30, v42, v23);
    v33 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v30, v33, 1, v23);
  sub_23E135DB4();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v45 = swift_release();
  v46 = (uint64_t)v30;
  if ((v108 & 1) != 0)
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D221E8);
    v48 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v104, 1, 1, v47);
    v49 = (uint64_t)v105;
  }
  else
  {
    MEMORY[0x24BDAC7A8](v45);
    v50 = v102;
    v79[-2] = v102;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D221A8);
    sub_23DF89B88(&qword_256D221B0, &qword_256D221A8, MEMORY[0x24BDF5428]);
    v51 = sub_23E136F60();
    MEMORY[0x24BDAC7A8](v51);
    v79[-2] = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D221B8);
    sub_23E00E260(&qword_256D221C0, &qword_256D221B8, (uint64_t (*)(void))sub_23E03FEB0);
    v52 = v82;
    sub_23E136F60();
    v53 = v96;
    sub_23E135D48();
    v54 = v95;
    sub_23DF73E10(v50, v95, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
    v55 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    v56 = swift_allocObject();
    sub_23DF89384(v54, v56 + v55, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
    v57 = v98;
    v58 = v99;
    sub_23E136F24();
    swift_release();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v53, v57);
    sub_23E135DA8();
    sub_23DF89B88(&qword_256D221D0, &qword_256D22168, MEMORY[0x24BDF4D98]);
    sub_23DF89B88(&qword_256D221D8, &qword_256D22188, MEMORY[0x24BDEC410]);
    v59 = v90;
    v60 = v84;
    v61 = v101;
    sub_23E136ABC();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v61);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v60);
    v62 = v89;
    v63 = v87;
    v64 = v91;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v87, v59, v91);
    v65 = v85;
    v66 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
    v67 = v86;
    v102 = v46;
    v68 = v88;
    v66(v86, v107, v88);
    v69 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    v69(v59, v63, v64);
    v49 = (uint64_t)v105;
    v66(v105, v67, v68);
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D221E0);
    v69((char *)(v49 + *(int *)(v70 + 48)), v59, v64);
    v71 = *(void (**)(char *, uint64_t))(v62 + 8);
    v71(v63, v64);
    v72 = *(void (**)(char *, uint64_t))(v65 + 8);
    v72(v107, v68);
    v71(v59, v64);
    v73 = v68;
    v46 = v102;
    v72(v67, v73);
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D221E8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v49, 0, 1, v74);
    v48 = v104;
    sub_23DF89340(v49, v104, &qword_256D22180);
  }
  v75 = v103;
  sub_23DF89C1C(v46, v103, &qword_256D221A0);
  sub_23DF89C1C(v48, v49, &qword_256D22180);
  v76 = v106;
  sub_23DF89C1C(v75, v106, &qword_256D221A0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D221F0);
  sub_23DF89C1C(v49, v76 + *(int *)(v77 + 48), &qword_256D22180);
  sub_23DF89C7C(v48, &qword_256D22180);
  sub_23DF89C7C(v46, &qword_256D221A0);
  sub_23DF89C7C(v49, &qword_256D22180);
  return sub_23DF89C7C(v75, &qword_256D221A0);
}

uint64_t sub_23E03C8C0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;

  v81 = a2;
  v3 = type metadata accessor for ColorPicker();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v62 = v3;
  v72 = v4;
  v73 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v71 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_23E135D54();
  v75 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v69 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22188);
  v79 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v70 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22250);
  v83 = *(_QWORD *)(v80 - 8);
  v9 = MEMORY[0x24BDAC7A8](v80);
  v76 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v77 = (char *)&v62 - v11;
  v12 = sub_23E1364EC();
  v66 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22258);
  v64 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22260);
  v63 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v82 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v62 - v21;
  v68 = (char *)&v62 - v21;
  v23 = a1 + *(int *)(v5 + 24);
  v24 = *(_QWORD *)(v23 + 8);
  v97 = *(_BYTE *)v23;
  v98 = v24;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22268);
  sub_23E136DB0();
  v84 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22270);
  sub_23E040160();
  sub_23E0401A4();
  sub_23E136E28();
  sub_23E1364E0();
  sub_23DF89B88(&qword_256D22288, &qword_256D22258, MEMORY[0x24BDF4570]);
  v25 = v82;
  sub_23E13699C();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v15);
  v26 = v63;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v22, v25, v18);
  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  sub_23E135DB4();
  v27 = *(_QWORD *)(v23 + 8);
  v97 = *(_BYTE *)v23;
  v98 = v27;
  sub_23E136DB0();
  v28 = v85;
  v29 = v86;
  LOBYTE(v22) = v87;
  v30 = sub_23E135F1C();
  v32 = v31;
  LOBYTE(v17) = sub_23E136738();
  sub_23E135D00();
  v85 = v30;
  v86 = v32;
  v87 = v28;
  v88 = v29;
  v89 = (char)v22;
  v90 = 0x3FF0000000000000;
  v91 = (char)v17;
  v92 = v33;
  v93 = v34;
  v94 = v35;
  v95 = v36;
  v96 = 0;
  v37 = v69;
  sub_23E135D48();
  v38 = v71;
  sub_23DF73E10(a1, v71, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
  v39 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v40 = swift_allocObject();
  sub_23DF89384(v38, v40 + v39, (uint64_t (*)(_QWORD))type metadata accessor for ColorPicker);
  v41 = v70;
  v42 = v74;
  sub_23E136F24();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v42);
  sub_23E135DA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22290);
  sub_23E00E260(&qword_256D22298, &qword_256D22290, (uint64_t (*)(void))sub_23E040310);
  sub_23DF89B88(&qword_256D221D8, &qword_256D22188, MEMORY[0x24BDEC410]);
  v43 = v76;
  v44 = v78;
  sub_23E136ABC();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v44);
  swift_release();
  swift_release();
  swift_release();
  v45 = v83;
  v46 = v77;
  v47 = v80;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v77, v43, v80);
  v48 = v26;
  v49 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v50 = v82;
  v51 = v68;
  v52 = v67;
  v49(v82, v68, v67);
  v53 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v54 = v43;
  v55 = v43;
  v56 = v47;
  v53(v54, v46, v47);
  v57 = v81;
  v49(v81, v50, v52);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D222C8);
  v53(&v57[*(int *)(v58 + 48)], v55, v56);
  v59 = *(void (**)(char *, uint64_t))(v83 + 8);
  v59(v46, v56);
  v60 = *(void (**)(char *, uint64_t))(v48 + 8);
  v60(v51, v52);
  v59(v55, v56);
  return ((uint64_t (*)(char *, uint64_t))v60)(v50, v52);
}

uint64_t sub_23E03CFD8()
{
  uint64_t v0;

  type metadata accessor for ColorPicker();
  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  v0 = sub_23E135DB4();
  sub_23E03FF48(v0);
  swift_release();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D222D0);
  sub_23DF89B88(&qword_256D222D8, &qword_256D222D0, MEMORY[0x24BEE12D8]);
  sub_23E040160();
  return sub_23E136F0C();
}

uint64_t sub_23E03D100@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23E1371A0();
  swift_bridgeObjectRelease();
  sub_23DF8DC18();
  result = sub_23E13693C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23E03D1CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  type metadata accessor for ColorPicker();
  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  sub_23E135DB4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22208);
  sub_23E135D24();
  v2 = sub_23E135F1C();
  v4 = v3;
  KeyPath = swift_getKeyPath();
  v6 = sub_23E136774();
  result = sub_23E135D00();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 96) = 0;
  return result;
}

uint64_t sub_23E03D314()
{
  type metadata accessor for ColorPicker();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22208);
  return sub_23E135D18();
}

uint64_t sub_23E03D380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v13)(char *);
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Device.Control.ColorState(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a2, (uint64_t)v7, &qword_256D1D5E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_23DF89C7C((uint64_t)v7, &qword_256D1D5E8);
  sub_23DF89384((uint64_t)v7, (uint64_t)v11, type metadata accessor for Device.Control.ColorState);
  v13 = *(void (**)(char *))(a3 + *(int *)(type metadata accessor for ColorPicker() + 28));
  if (v13)
    v13(v11);
  return sub_23DF73E54((uint64_t)v11, type metadata accessor for Device.Control.ColorState);
}

uint64_t sub_23E03D4B8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22210);
  v35 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - v6;
  v36 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22218);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22220);
  v9 = sub_23E1362A0();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE6D8];
  v11 = sub_23DF89B88(&qword_256D22228, &qword_256D22220, MEMORY[0x24BDF46D0]);
  v12 = sub_23DF73F28(&qword_256D22230, v10, MEMORY[0x24BDEE6B8]);
  v37 = v8;
  v38 = v9;
  v39 = v11;
  v40 = v12;
  swift_getOpaqueTypeConformance2();
  v32 = v7;
  sub_23E136F60();
  sub_23E1371A0();
  sub_23E136834();
  v13 = sub_23E136900();
  v15 = v14;
  LOBYTE(a1) = v16;
  swift_bridgeObjectRelease();
  swift_release();
  v17 = a1 & 1;
  LODWORD(v37) = sub_23E136540();
  v18 = sub_23E1368DC();
  v20 = v19;
  v22 = v21;
  LOBYTE(v9) = v23 & 1;
  sub_23DFA055C(v13, v15, v17);
  swift_bridgeObjectRelease();
  v24 = sub_23E136720();
  v25 = v35;
  v26 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v27 = v33;
  v26(v33, v7, v3);
  v28 = v34;
  v26(v34, v27, v3);
  v29 = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D22238) + 48)];
  *(_QWORD *)v29 = v18;
  *((_QWORD *)v29 + 1) = v20;
  v29[16] = v9;
  *((_QWORD *)v29 + 3) = v22;
  v29[32] = v24;
  *(_OWORD *)(v29 + 40) = 0u;
  *(_OWORD *)(v29 + 56) = 0u;
  v29[72] = 1;
  sub_23DFA056C(v18, v20, v9);
  v30 = *(void (**)(char *, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  v30(v32, v3);
  sub_23DFA055C(v18, v20, v9);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v30)(v27, v3);
}

uint64_t sub_23E03D788()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_23E1362A0();
  v9 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22220);
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ColorPicker();
  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  sub_23E135DC0();
  swift_getKeyPath();
  sub_23E135F34();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22240);
  sub_23DF89B88(&qword_256D22248, &qword_256D22240, MEMORY[0x24BDF4498]);
  sub_23E136E34();
  sub_23E136294();
  sub_23DF89B88(&qword_256D22228, &qword_256D22220, MEMORY[0x24BDF46D0]);
  sub_23DF73F28(&qword_256D22230, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE6D8], MEMORY[0x24BDEE6B8]);
  sub_23E1369A8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v2, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v3);
}

double sub_23E03D9C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[9];
  _OWORD v10[2];
  _BYTE v11[176];

  v2 = sub_23E1362D0();
  sub_23E03DAF0((uint64_t)v9);
  *(_OWORD *)&v11[71] = v9[4];
  *(_OWORD *)&v11[55] = v9[3];
  *(_OWORD *)&v11[119] = v9[7];
  *(_OWORD *)&v11[135] = v9[8];
  *(_OWORD *)&v11[151] = v10[0];
  *(_OWORD *)&v11[160] = *(_OWORD *)((char *)v10 + 9);
  *(_OWORD *)&v11[87] = v9[5];
  *(_OWORD *)&v11[103] = v9[6];
  *(_OWORD *)&v11[7] = v9[0];
  *(_OWORD *)&v11[23] = v9[1];
  *(_OWORD *)&v11[39] = v9[2];
  v3 = *(_OWORD *)&v11[96];
  *(_OWORD *)(a1 + 129) = *(_OWORD *)&v11[112];
  v4 = *(_OWORD *)&v11[144];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v11[128];
  *(_OWORD *)(a1 + 161) = v4;
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v11[160];
  v5 = *(_OWORD *)&v11[32];
  *(_OWORD *)(a1 + 65) = *(_OWORD *)&v11[48];
  v6 = *(_OWORD *)&v11[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v11[64];
  *(_OWORD *)(a1 + 97) = v6;
  *(_OWORD *)(a1 + 113) = v3;
  result = *(double *)v11;
  v8 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v11;
  *(_OWORD *)(a1 + 33) = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 49) = v5;
  return result;
}

uint64_t sub_23E03DAF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  int v34;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _DWORD v48[2];
  _DWORD v49[4];
  _QWORD v50[6];
  unsigned __int8 v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[7];
  unsigned __int8 v57;
  _BYTE v58[7];
  unsigned __int8 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  _BYTE v69[7];
  char v70;
  _QWORD v71[6];
  char v72;
  _BYTE v73[7];
  uint64_t v74;
  char v75;
  _BYTE v76[7];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E13684C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E136CC0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFE0DE0((uint64_t)v50);
  v42 = v50[0];
  v13 = v50[1];
  v14 = v50[2];
  v15 = v50[3];
  v16 = v50[4];
  sub_23E136FE4();
  sub_23E135E5C();
  v39 = v52;
  v40 = v50[5];
  v37 = v53;
  v38 = v51;
  v41 = v54;
  v45 = v55;
  v17 = sub_23E136FE4();
  v46 = v18;
  v47 = v17;
  sub_23E136CD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDF3FD0], v9);
  v44 = sub_23E136D14();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF1848], v5);
  v19 = sub_23E1367C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  *((_QWORD *)&v43 + 1) = sub_23E136810();
  sub_23DF89C7C((uint64_t)v4, &qword_256D1DBA0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&v43 = swift_getKeyPath();
  v59 = v38;
  v57 = v37;
  sub_23E1371A0();
  sub_23E1367A4();
  v20 = sub_23E136900();
  v22 = v21;
  LOBYTE(v12) = v23;
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v12) = v12 & 1;
  v49[0] = *(_DWORD *)v58;
  *(_DWORD *)((char *)v49 + 3) = *(_DWORD *)&v58[3];
  v48[0] = *(_DWORD *)v56;
  *(_DWORD *)((char *)v48 + 3) = *(_DWORD *)&v56[3];
  DWORD1(v63) = *(_DWORD *)&v58[3];
  v37 = v59;
  v38 = v57;
  v26 = v41;
  v27 = v42;
  *(_QWORD *)&v60 = v42;
  *((_QWORD *)&v60 + 1) = v13;
  *(_QWORD *)&v61 = v14;
  *((_QWORD *)&v61 + 1) = v15;
  *(_QWORD *)&v62 = v16;
  v29 = v39;
  v28 = v40;
  *((_QWORD *)&v62 + 1) = v40;
  LOBYTE(v63) = v59;
  *(_DWORD *)((char *)&v63 + 1) = *(_DWORD *)v58;
  *((_QWORD *)&v63 + 1) = v39;
  LOBYTE(v64) = v57;
  DWORD1(v64) = *(_DWORD *)&v56[3];
  *(_DWORD *)((char *)&v64 + 1) = *(_DWORD *)v56;
  *((_QWORD *)&v64 + 1) = v41;
  *(_QWORD *)&v65 = v45;
  *((_QWORD *)&v65 + 1) = v47;
  *(_QWORD *)&v66 = v46;
  *((_QWORD *)&v66 + 1) = v44;
  v67 = v43;
  v30 = v43;
  *(_OWORD *)(a1 + 96) = v66;
  *(_OWORD *)(a1 + 112) = v30;
  v31 = v65;
  *(_OWORD *)(a1 + 64) = v64;
  *(_OWORD *)(a1 + 80) = v31;
  v32 = v61;
  *(_OWORD *)a1 = v60;
  *(_OWORD *)(a1 + 16) = v32;
  v33 = v63;
  *(_OWORD *)(a1 + 32) = v62;
  *(_OWORD *)(a1 + 48) = v33;
  v70 = (char)v12;
  v68 = 1;
  v34 = *(_DWORD *)v69;
  *(_DWORD *)(a1 + 148) = *(_DWORD *)&v69[3];
  *(_DWORD *)(a1 + 145) = v34;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v22;
  *(_BYTE *)(a1 + 144) = (_BYTE)v12;
  *(_QWORD *)(a1 + 152) = v25;
  *(_QWORD *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 168) = 1;
  sub_23E0400B0((uint64_t)&v60);
  sub_23DFA056C(v20, v22, (char)v12);
  swift_bridgeObjectRetain();
  sub_23DFA055C(v20, v22, (char)v12);
  swift_bridgeObjectRelease();
  v71[0] = v27;
  v71[1] = v13;
  v71[2] = v14;
  v71[3] = v15;
  v71[4] = v16;
  v71[5] = v28;
  v72 = v37;
  *(_DWORD *)v73 = v49[0];
  *(_DWORD *)&v73[3] = *(_DWORD *)((char *)v49 + 3);
  v74 = v29;
  v75 = v38;
  *(_DWORD *)v76 = v48[0];
  *(_DWORD *)&v76[3] = *(_DWORD *)((char *)v48 + 3);
  v77 = v26;
  v78 = v45;
  v79 = v47;
  v80 = v46;
  v81 = v44;
  v82 = v43;
  return sub_23E040100((uint64_t)v71);
}

unint64_t sub_23E03DF64(char a1)
{
  if (!a1)
    return 0xD00000000000001BLL;
  if (a1 == 1)
    return 0xD00000000000001ALL;
  return 0xD000000000000020;
}

uint64_t sub_23E03DFC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E09B10C(*a1, *a2);
}

uint64_t sub_23E03DFCC()
{
  return sub_23E004DE4();
}

uint64_t sub_23E03DFD4()
{
  return sub_23E122AE0();
}

uint64_t sub_23E03DFDC()
{
  return sub_23E122C24();
}

uint64_t sub_23E03DFE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E040DA8();
  *a1 = result;
  return result;
}

unint64_t sub_23E03E010@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_23E03DF64(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_23E03E038(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EC67B0;
}

void sub_23E03E048()
{
  qword_256D22028 = 0x4032000000000000;
}

void *sub_23E03E058@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t KeyPath;
  uint64_t v7;
  double v8;
  double v9;
  _QWORD v11[14];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  double v19;
  _OWORD __src[24];
  __int128 v21;

  __src[0] = *(_OWORD *)(a1 + 16);
  LOBYTE(__src[1]) = *(_BYTE *)(a1 + 32);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22390);
  MEMORY[0x24264B734](v11, v4);
  sub_23E03E3DC(v11[0], (__int128 *)a1, (uint64_t)__src);
  if (qword_256D1D408 != -1)
    swift_once();
  sub_23E136FE4();
  sub_23E136060();
  sub_23DF89C1C((uint64_t)__src, (uint64_t)v11, &qword_256D22398);
  v16 = __src[21];
  v17 = __src[22];
  v18 = __src[23];
  v12 = __src[17];
  v13 = __src[18];
  v14 = __src[19];
  v15 = __src[20];
  sub_23DF89C7C((uint64_t)__src, &qword_256D22398);
  v21 = *(_OWORD *)a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v21);
  v5 = __src[0];
  KeyPath = swift_getKeyPath();
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = v5;
  sub_23DF89C1C((uint64_t)v11, (uint64_t)__src, &qword_256D223A0);
  *(_QWORD *)&__src[14] = KeyPath;
  *((_QWORD *)&__src[14] + 1) = sub_23DFD55C4;
  *(_QWORD *)&__src[15] = v7;
  sub_23DF89C7C((uint64_t)v11, &qword_256D223A0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v21);
  if (LOBYTE(v11[0]))
    v8 = 0.6;
  else
    v8 = 0.0;
  sub_23DF89C1C((uint64_t)__src, (uint64_t)v11, &qword_256D223A8);
  v19 = v8;
  sub_23DF89C7C((uint64_t)__src, &qword_256D223A8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v21);
  if (LOBYTE(__src[0]))
    v9 = 0.2;
  else
    v9 = 1.0;
  sub_23DF89C1C((uint64_t)v11, (uint64_t)__src, &qword_256D223B0);
  *(double *)&__src[16] = v9;
  sub_23DF89C7C((uint64_t)v11, &qword_256D223B0);
  return memcpy(a2, __src, 0x108uLL);
}

double sub_23E03E3DC@<D0>(unsigned __int8 a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  double result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  ValueMetadata *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;

  if (!a1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v6 = sub_23E137614();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_8:
    _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    swift_retain();
    v8 = sub_23E135F1C();
    v10 = v9;
    v11 = sub_23E136FE4();
    v13 = v12;
    v14 = sub_23E13672C();
    sub_23E135D00();
    *(_QWORD *)&v54 = v8;
    *((_QWORD *)&v54 + 1) = v10;
    v55 = v11;
    v56 = v13;
    v57 = v14;
    v58 = v15;
    v59 = v16;
    v60 = v17;
    v61 = v18;
    v62 = 0;
    v63 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223E0);
    sub_23E040C24();
    sub_23E040CEC();
    sub_23E136480();
    sub_23DF89C1C((uint64_t)&v30, (uint64_t)&v50, &qword_256D223C8);
    v53 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C8);
    sub_23E040BB8();
    sub_23E136480();
    sub_23DF89C7C((uint64_t)&v30, &qword_256D223C8);
    swift_release();
LABEL_12:
    sub_23DF89340((uint64_t)&v54, a3, &qword_256D22408);
    return result;
  }
  if (a1 != 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v7 = sub_23E137614();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_10:
    v46 = &_s17FullColorSpectrumVN;
    v47 = sub_23E040D64();
    v45 = xmmword_23E13D1C0;
    v50 = 0;
    v51 = 0;
    v52 = 1;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C0);
    sub_23E136D8C();
    v40 = v54;
    v41 = v55;
    v42 = v56;
    sub_23E136D8C();
    v43 = v54;
    v44 = *((_QWORD *)&v54 + 1);
    _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    v48 = sub_23E135F1C();
    v49 = v19;
    sub_23DFDF44C((uint64_t)&v40, (uint64_t)&v54);
    v63 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223E0);
    sub_23E040C24();
    sub_23E040CEC();
    sub_23E136480();
    sub_23DF89C1C((uint64_t)&v30, (uint64_t)&v50, &qword_256D223C8);
    v53 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C8);
    sub_23E040BB8();
    sub_23E136480();
    sub_23DF89C7C((uint64_t)&v30, &qword_256D223C8);
    v20 = &v40;
LABEL_11:
    sub_23E040D30((uint64_t)v20);
    goto LABEL_12;
  }
  if (a1 > 1u)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    v40 = *a2;
    v23 = *(_QWORD *)(*((_QWORD *)&v40 + 1)
                    + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig);
    if (v23 == 2)
    {
      type metadata accessor for SpectrumColorHelper();
      v24 = swift_allocObject();
      *(_WORD *)(v24 + 16) = 100;
    }
    else
    {
      v25 = *(unsigned __int16 *)(*((_QWORD *)&v40 + 1)
                                + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig
                                + 8) | (*(unsigned __int8 *)(*((_QWORD *)&v40 + 1)
                                                           + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig
                                                           + 10) << 16);
      type metadata accessor for SpectrumColorHelper();
      v26 = swift_allocObject();
      v24 = v26;
      v27 = WORD2(v23);
      if (WORD2(v23) <= 0x19u)
        v27 = 25;
      if ((v23 & 0x1000000000000) != 0)
        v27 = 100;
      *(_WORD *)(v26 + 16) = v27;
      if ((v25 & 0x10000) == 0)
      {
        v28 = v25;
        if ((unsigned __int16)v25 >= 0x3E8u)
          v28 = 1000;
        goto LABEL_26;
      }
    }
    v28 = 416;
LABEL_26:
    *(_WORD *)(v24 + 18) = v28;
    v36 = &_s24ColorTemperatureSpectrumVN;
    v37 = sub_23E040B74();
    v35 = v24;
    v50 = 0;
    v51 = 0;
    v52 = 1;
    swift_retain();
    sub_23DF97EC4((uint64_t)&v40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C0);
    sub_23E136D8C();
    v30 = v54;
    v31 = v55;
    v32 = v56;
    LOBYTE(v50) = 0;
    sub_23E136D8C();
    v33 = v54;
    v34 = *((_QWORD *)&v54 + 1);
    _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    v38 = sub_23E135F1C();
    v39 = v29;
    sub_23DFDF44C((uint64_t)&v30, (uint64_t)&v50);
    v53 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C8);
    sub_23E040BB8();
    sub_23E040CEC();
    sub_23E136480();
    swift_release();
    v20 = &v30;
    goto LABEL_11;
  }
  v22 = sub_23E137614();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_16;
  *(_QWORD *)(a3 + 96) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_WORD *)(a3 + 104) = -256;
  return result;
}

void *sub_23E03EA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _OWORD v6[2];
  char v7;

  v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  v7 = *(_BYTE *)(v1 + 32);
  if (qword_256D1D348 != -1)
    swift_once();
  v4 = qword_256D22028;
  *(_QWORD *)a1 = sub_23E136378();
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = 0;
  return sub_23E03E058((uint64_t)v6, (void *)(a1 + 24));
}

void sub_23E03EA80()
{
  qword_256D22030 = 0x4030000000000000;
}

uint64_t sub_23E03EA90@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t *v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D222F8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22300);
  MEMORY[0x24BDAC7A8](v37);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22308);
  MEMORY[0x24BDAC7A8](v38);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22310);
  v10 = MEMORY[0x24BDAC7A8](v39);
  v41 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v40 = (uint64_t)&v36 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22318);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  if (qword_256D1D350 != -1)
    swift_once();
  v22 = qword_256D22030;
  *(_QWORD *)v21 = sub_23E136378();
  *((_QWORD *)v21 + 1) = v22;
  v21[16] = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22320);
  sub_23E03EF90(a1, (uint64_t)&v21[*(int *)(v23 + 44)]);
  *(_QWORD *)v5 = sub_23E1362C4();
  *((_QWORD *)v5 + 1) = 0x4030000000000000;
  v5[16] = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22328);
  sub_23E03F238(a1, (uint64_t)&v5[*(int *)(v24 + 44)]);
  v44 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v44);
  v25 = v43;
  KeyPath = swift_getKeyPath();
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = v25;
  sub_23DF89C1C((uint64_t)v5, (uint64_t)v7, &qword_256D222F8);
  v28 = (uint64_t *)&v7[*(int *)(v37 + 36)];
  *v28 = KeyPath;
  v28[1] = (uint64_t)sub_23DFD4188;
  v28[2] = v27;
  sub_23DF89C7C((uint64_t)v5, &qword_256D222F8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v44);
  if (v43)
    v29 = 0.6;
  else
    v29 = 0.0;
  sub_23DF89C1C((uint64_t)v7, (uint64_t)v9, &qword_256D22300);
  *(double *)&v9[*(int *)(v38 + 36)] = v29;
  sub_23DF89C7C((uint64_t)v7, &qword_256D22300);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v44);
  if (v43)
    v30 = 0.2;
  else
    v30 = 1.0;
  sub_23DF89C1C((uint64_t)v9, (uint64_t)v14, &qword_256D22308);
  *(double *)&v14[*(int *)(v39 + 36)] = v30;
  sub_23DF89C7C((uint64_t)v9, &qword_256D22308);
  v31 = v40;
  sub_23DF89340((uint64_t)v14, v40, &qword_256D22310);
  sub_23DF89C1C((uint64_t)v21, (uint64_t)v19, &qword_256D22318);
  v32 = v41;
  sub_23DF89C1C(v31, v41, &qword_256D22310);
  v33 = v42;
  sub_23DF89C1C((uint64_t)v19, v42, &qword_256D22318);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22330);
  sub_23DF89C1C(v32, v33 + *(int *)(v34 + 48), &qword_256D22310);
  sub_23DF89C7C(v31, &qword_256D22310);
  sub_23DF89C7C((uint64_t)v21, &qword_256D22318);
  sub_23DF89C7C(v32, &qword_256D22310);
  return sub_23DF89C7C((uint64_t)v19, &qword_256D22318);
}

uint64_t sub_23E03EF90@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  _QWORD v30[2];
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v34 = a2;
  v3 = sub_23E136F00();
  v33 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)v30 - v6;
  v7 = sub_23E13684C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s16BrightnessSliderVMa(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v30 - v15;
  v37 = *a1;
  v30[1] = *((_QWORD *)&v37 + 1);
  v17 = *((_QWORD *)a1 + 4);
  v18 = *((_QWORD *)a1 + 5);
  LOBYTE(a1) = *((_BYTE *)a1 + 48);
  v35 = 0x4051800000000000;
  v36 = v17;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDF1878], v7);
  sub_23DF97EC4((uint64_t)&v37);
  sub_23E040B3C((uint64_t)&v36);
  sub_23E00F3D0();
  swift_retain();
  sub_23E135DF0();
  v19 = (uint64_t *)&v16[*(int *)(v11 + 20)];
  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  *v19 = sub_23E135F1C();
  v19[1] = v20;
  v21 = &v16[*(int *)(v11 + 24)];
  *(_QWORD *)v21 = v17;
  *((_QWORD *)v21 + 1) = v18;
  v21[16] = (char)a1;
  v22 = v31;
  sub_23E136EF4();
  sub_23DF73E10((uint64_t)v16, (uint64_t)v14, _s16BrightnessSliderVMa);
  v23 = v32;
  v24 = v33;
  v25 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v25(v32, v22, v3);
  v26 = v34;
  sub_23DF73E10((uint64_t)v14, v34, _s16BrightnessSliderVMa);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22388);
  v25((char *)(v26 + *(int *)(v27 + 48)), v23, v3);
  v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  v28(v22, v3);
  sub_23DF73E54((uint64_t)v16, _s16BrightnessSliderVMa);
  v28(v23, v3);
  return sub_23DF73E54((uint64_t)v14, _s16BrightnessSliderVMa);
}

uint64_t sub_23E03F238@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v39 = a1;
  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22338);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v41 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (uint64_t *)((char *)&v36 - v6);
  v7 = sub_23E135328();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  v36 = _s9ColorWellVMa();
  MEMORY[0x24BDAC7A8](v36);
  v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22340);
  MEMORY[0x24BDAC7A8](v37);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22348);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v38 = (uint64_t)&v36 - v22;
  v46 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v46);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v23 = sub_23E0A9F3C((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  sub_23E040A18((uint64_t)&v46);
  v24 = v43;
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v25 = v36;
  *(uint64_t *)((char *)v15 + *(int *)(v36 + 20)) = v23;
  *(uint64_t *)((char *)v15 + *(int *)(v25 + 24)) = v24;
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF73E10((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(_QWORD))_s9ColorWellVMa);
  v26 = &v17[*(int *)(v37 + 36)];
  v27 = v44;
  *(_OWORD *)v26 = v43;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v45;
  sub_23DF73E54((uint64_t)v15, (uint64_t (*)(_QWORD))_s9ColorWellVMa);
  sub_23E1371A0();
  sub_23E040A70();
  sub_23E1369E4();
  swift_bridgeObjectRelease();
  sub_23DF89C7C((uint64_t)v17, &qword_256D22340);
  v28 = v38;
  sub_23DF89340((uint64_t)v21, v38, &qword_256D22348);
  v29 = sub_23E136378();
  v30 = (uint64_t)v40;
  *v40 = v29;
  *(_QWORD *)(v30 + 8) = 0;
  *(_BYTE *)(v30 + 16) = 1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22360);
  sub_23E03F6D4(v39, v30 + *(int *)(v31 + 44));
  sub_23DF89C1C(v28, (uint64_t)v21, &qword_256D22348);
  v32 = v41;
  sub_23DF89C1C(v30, v41, &qword_256D22338);
  v33 = v42;
  sub_23DF89C1C((uint64_t)v21, v42, &qword_256D22348);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22368);
  sub_23DF89C1C(v32, v33 + *(int *)(v34 + 48), &qword_256D22338);
  sub_23DF89C7C(v30, &qword_256D22338);
  sub_23DF89C7C(v28, &qword_256D22348);
  sub_23DF89C7C(v32, &qword_256D22338);
  return sub_23DF89C7C((uint64_t)v21, &qword_256D22348);
}

uint64_t sub_23E03F6D4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;

  v63 = a2;
  v3 = sub_23E1365C4();
  v4 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  v59 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22370);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v56 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22378);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v62 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v52 - v16;
  v18 = *((_QWORD *)a1 + 2);
  v19 = *((unsigned __int8 *)a1 + 24);
  sub_23DF89F20(v18, *((_BYTE *)a1 + 24));
  v20 = sub_23DF9C59C(v18, v19);
  v61 = v18;
  v60 = v19;
  sub_23DF8A078(v18, v19);
  if ((v20 & 1) != 0)
  {
    v72 = *a1;
    swift_getKeyPath();
    v54 = v10;
    swift_getKeyPath();
    v55 = v17;
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    sub_23E040A18((uint64_t)&v72);
    v21 = LightbulbColor.shortDebugDescription.getter();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v64 = v21;
    v65 = v23;
    sub_23DF8DC18();
    v24 = sub_23E13693C();
    v26 = v25;
    v28 = v27 & 1;
    sub_23E1367A4();
    v29 = sub_23E136900();
    v31 = v30;
    v33 = v32;
    v53 = v11;
    v35 = v34;
    swift_release();
    v36 = v28;
    v10 = v54;
    sub_23DFA055C(v24, v26, v36);
    v17 = v55;
    swift_bridgeObjectRelease();
    v64 = v29;
    v65 = v31;
    LOBYTE(v66) = v33 & 1;
    v67 = v35;
    v11 = v53;
    v37 = v57;
    sub_23E1365B8();
    v38 = v56;
    v39 = v58;
    sub_23E136A20();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v39);
    sub_23DFA055C(v64, v65, v66);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v38, v10);
    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v17, v40, 1, v10);
  v71 = *a1;
  v70 = *((_QWORD *)a1 + 4);
  v41 = swift_allocObject();
  v42 = a1[1];
  *(_OWORD *)(v41 + 16) = *a1;
  *(_OWORD *)(v41 + 32) = v42;
  *(_OWORD *)(v41 + 48) = a1[2];
  *(_BYTE *)(v41 + 64) = *((_BYTE *)a1 + 48);
  sub_23DF89F20(v61, v60);
  sub_23DF97EC4((uint64_t)&v71);
  sub_23E040B3C((uint64_t)&v70);
  swift_retain();
  sub_23E136FE4();
  sub_23E135E5C();
  v43 = v64;
  LODWORD(v61) = v65;
  v44 = v66;
  v45 = v67;
  v46 = v68;
  v47 = v69;
  v48 = v62;
  sub_23DF89C1C((uint64_t)v17, v62, &qword_256D22378);
  v49 = v63;
  sub_23DF89C1C(v48, v63, &qword_256D22378);
  v50 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D22380) + 48);
  *(_QWORD *)v50 = sub_23E040B34;
  *(_QWORD *)(v50 + 8) = v41;
  *(_QWORD *)(v50 + 16) = v43;
  *(_BYTE *)(v50 + 24) = v61;
  *(_QWORD *)(v50 + 32) = v44;
  *(_BYTE *)(v50 + 40) = v45;
  *(_QWORD *)(v50 + 48) = v46;
  *(_QWORD *)(v50 + 56) = v47;
  swift_retain();
  sub_23DF89C7C((uint64_t)v17, &qword_256D22378);
  swift_release();
  return sub_23DF89C7C(v48, &qword_256D22378);
}

double sub_23E03FB64@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  _s16ColorPickerStateCMa();
  sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  swift_retain();
  v2 = sub_23E135F1C();
  v4 = v3;
  sub_23E135E80();
  v6 = v5;
  v7 = sub_23E136FE4();
  sub_23E04C5D0(0.0, 1, v6, 0, 0.0, 1, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v7, v8, v2, v4);
  swift_release();
  v9 = v18;
  a1[4] = v17;
  a1[5] = v9;
  v10 = v20;
  a1[6] = v19;
  a1[7] = v10;
  v11 = v14[1];
  *a1 = v14[0];
  a1[1] = v11;
  result = *(double *)&v15;
  v13 = v16;
  a1[2] = v15;
  a1[3] = v13;
  return result;
}

uint64_t sub_23E03FC60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7[3];
  char v8;

  v3 = *(_OWORD *)(v1 + 16);
  v7[0] = *(_OWORD *)v1;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 48);
  if (qword_256D1D350 != -1)
    swift_once();
  v4 = qword_256D22030;
  *(_QWORD *)a1 = sub_23E136378();
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = 0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D222F0);
  return sub_23E03EA90(v7, a1 + *(int *)(v5 + 44));
}

uint64_t sub_23E03FCF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E03BAB0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23E03FD00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22108;
  if (!qword_256D22108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22110);
    v2[0] = sub_23DF89B88(&qword_256D22118, &qword_256D22120, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22108);
  }
  return result;
}

uint64_t sub_23E03FD90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorPicker() - 8) + 80);
  return sub_23E03D380(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_23E03FDDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D22138;
  if (!qword_256D22138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D5E8);
    v2 = sub_23DF73F28(&qword_256D22140, type metadata accessor for Device.Control.ColorState, (uint64_t)&protocol conformance descriptor for Device.Control.ColorState);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D22138);
  }
  return result;
}

uint64_t sub_23E03FE5C(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = a1 & 1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorPicker() - 8) + 80);
  return sub_23E03BDC4(v2, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_23E03FEA0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23E03C8C0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23E03FEA8@<X0>(uint64_t a1@<X8>)
{
  return sub_23E03D1CC(a1);
}

unint64_t sub_23E03FEB0()
{
  unint64_t result;

  result = qword_256D221C8;
  if (!qword_256D221C8)
  {
    result = MEMORY[0x24264C55C](&unk_23E13D4FC, &type metadata for ColorPicker.FooterView);
    atomic_store(result, (unint64_t *)&qword_256D221C8);
  }
  return result;
}

uint64_t sub_23E03FF00()
{
  type metadata accessor for ColorPicker();
  return sub_23E03D314();
}

uint64_t sub_23E03FF40()
{
  return sub_23E03D788();
}

char *sub_23E03FF48(uint64_t a1)
{
  char *v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;

  if (*(_QWORD *)(a1
                                  + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig) == 2
    || (*(_QWORD *)(a1 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig) & 0x10000) == 0)
  {
    v2 = (char *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v3 = sub_23E007BA8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v2 = v3;
    v5 = *((_QWORD *)v3 + 2);
    v4 = *((_QWORD *)v3 + 3);
    if (v5 >= v4 >> 1)
      v2 = sub_23E007BA8((char *)(v4 > 1), v5 + 1, 1, v3);
    *((_QWORD *)v2 + 2) = v5 + 1;
    v2[v5 + 32] = 1;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E007BA8(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v7 = *((_QWORD *)v2 + 2);
  v6 = *((_QWORD *)v2 + 3);
  v8 = v6 >> 1;
  v9 = v7 + 1;
  if (v6 >> 1 <= v7)
  {
    v2 = sub_23E007BA8((char *)(v6 > 1), v7 + 1, 1, v2);
    v6 = *((_QWORD *)v2 + 3);
    v8 = v6 >> 1;
  }
  *((_QWORD *)v2 + 2) = v9;
  v2[v7 + 32] = 2;
  v10 = v7 + 2;
  if (v8 < v10)
    v2 = sub_23E007BA8((char *)(v6 > 1), v10, 1, v2);
  *((_QWORD *)v2 + 2) = v10;
  v2[v9 + 32] = 0;
  return v2;
}

uint64_t sub_23E0400B0(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E040100(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_23E040158()
{
  return sub_23E03CFD8();
}

unint64_t sub_23E040160()
{
  unint64_t result;

  result = qword_256D22278;
  if (!qword_256D22278)
  {
    result = MEMORY[0x24264C55C](&unk_23E13D4BC, &type metadata for ColorPicker.ColorPickerTab);
    atomic_store(result, (unint64_t *)&qword_256D22278);
  }
  return result;
}

unint64_t sub_23E0401A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D22280;
  if (!qword_256D22280)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22270);
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D22280);
  }
  return result;
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ColorPicker();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  sub_23E03AC08();
  swift_release();
  if (*(_QWORD *)(v4 + *(int *)(v1 + 28)))
    swift_release();
  if (*(_QWORD *)(v4 + *(int *)(v1 + 32)))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23E040310()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D222A0;
  if (!qword_256D222A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D222A8);
    v2[0] = sub_23E040394();
    v2[1] = sub_23DF89B88(&qword_256D222B8, &qword_256D222C0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D222A0);
  }
  return result;
}

unint64_t sub_23E040394()
{
  unint64_t result;

  result = qword_256D222B0;
  if (!qword_256D222B0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13D46C, &type metadata for ColorPicker.ColorPickerContent);
    atomic_store(result, (unint64_t *)&qword_256D222B0);
  }
  return result;
}

uint64_t destroy for ColorPicker.FooterView(uint64_t a1)
{
  swift_release();
  sub_23DF8A078(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ColorPicker.FooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_23DF89F20(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ColorPicker.FooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_23DF89F20(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_23DF8A078(v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ColorPicker.FooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_23DF8A078(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorPicker.FooterView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorPicker.FooterView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorPicker.FooterView()
{
  return &type metadata for ColorPicker.FooterView;
}

uint64_t destroy for ColorPicker.ColorPickerContent()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ColorPicker.ColorPickerContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ColorPicker.ColorPickerContent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ColorPicker.ColorPickerContent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ColorPicker.ColorPickerContent()
{
  return &type metadata for ColorPicker.ColorPickerContent;
}

uint64_t storeEnumTagSinglePayload for ColorPicker.ColorPickerTab(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E040824 + 4 * byte_23E13D1D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E040858 + 4 * byte_23E13D1D0[v4]))();
}

uint64_t sub_23E040858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E040860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E040868);
  return result;
}

uint64_t sub_23E040874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E04087CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E040880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E040888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorPicker.ColorPickerTab()
{
  return &type metadata for ColorPicker.ColorPickerTab;
}

uint64_t sub_23E0408A4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D220E8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D5E8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D220E0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D220D8);
  sub_23DF89B88(&qword_256D22128, &qword_256D220D8, MEMORY[0x24BDEB238]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  sub_23E03FDDC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E040984()
{
  return sub_23DF89B88(&qword_256D222E0, &qword_256D222D0, MEMORY[0x24BEE12E0]);
}

uint64_t sub_23E0409B0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E0409C4()
{
  unint64_t result;

  result = qword_256D222E8;
  if (!qword_256D222E8)
  {
    result = MEMORY[0x24264C55C](&unk_23E13D444, &type metadata for ColorPicker.ColorPickerTab);
    atomic_store(result, (unint64_t *)&qword_256D222E8);
  }
  return result;
}

uint64_t sub_23E040A08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E040A18(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_23E040A48()
{
  return swift_deallocObject();
}

unint64_t sub_23E040A70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22350;
  if (!qword_256D22350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22340);
    v2[0] = sub_23DF73F28(&qword_256D22358, (uint64_t (*)(uint64_t))_s9ColorWellVMa, (uint64_t)&unk_23E139338);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22350);
  }
  return result;
}

uint64_t sub_23E040AF4()
{
  uint64_t v0;

  swift_release();
  sub_23DF8A078(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

double sub_23E040B34@<D0>(_OWORD *a1@<X8>)
{
  return sub_23E03FB64(a1);
}

uint64_t sub_23E040B3C(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_23E040B64()
{
  return swift_deallocObject();
}

unint64_t sub_23E040B74()
{
  unint64_t result;

  result = qword_256D223B8;
  if (!qword_256D223B8)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F75C, &_s24ColorTemperatureSpectrumVN);
    atomic_store(result, (unint64_t *)&qword_256D223B8);
  }
  return result;
}

unint64_t sub_23E040BB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D223D0;
  if (!qword_256D223D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D223C8);
    v2[0] = sub_23E040C24();
    v2[1] = sub_23E040CEC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D223D0);
  }
  return result;
}

unint64_t sub_23E040C24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D223D8;
  if (!qword_256D223D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D223E0);
    v2[0] = sub_23E040CA8();
    v2[1] = sub_23DF89B88(&qword_256D223F0, &qword_256D223F8, MEMORY[0x24BDEF828]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D223D8);
  }
  return result;
}

unint64_t sub_23E040CA8()
{
  unint64_t result;

  result = qword_256D223E8;
  if (!qword_256D223E8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1406D8, &_s21ColorSwatchPickerViewVN);
    atomic_store(result, (unint64_t *)&qword_256D223E8);
  }
  return result;
}

unint64_t sub_23E040CEC()
{
  unint64_t result;

  result = qword_256D22400;
  if (!qword_256D22400)
  {
    result = MEMORY[0x24264C55C](&unk_23E13ACB4, &_s17ColorSpectrumViewVN);
    atomic_store(result, (unint64_t *)&qword_256D22400);
  }
  return result;
}

uint64_t sub_23E040D30(uint64_t a1)
{
  _s17ColorSpectrumViewVwxx(a1);
  return a1;
}

unint64_t sub_23E040D64()
{
  unint64_t result;

  result = qword_256D22410;
  if (!qword_256D22410)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F594, &_s17FullColorSpectrumVN);
    atomic_store(result, (unint64_t *)&qword_256D22410);
  }
  return result;
}

uint64_t sub_23E040DA8()
{
  unint64_t v0;

  v0 = sub_23E1375B4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_23E040DF0()
{
  return sub_23DF89B88(&qword_256D22418, &qword_256D22420, MEMORY[0x24BDF4700]);
}

uint64_t sub_23E040E1C()
{
  return sub_23DF89B88(&qword_256D22428, &qword_256D22430, MEMORY[0x24BDF4700]);
}

uint64_t sub_23E040E48()
{
  return swift_retain();
}

uint64_t sub_23E040E50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

BOOL static AccessoryControlsStyle.BackgroundStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

__n128 AccessoryControlsStyle.init(background:header:presentation:dismissOptions:material:)@<Q0>(_BYTE *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  __n128 result;
  __int128 v13;

  v6 = *a2;
  v7 = *a3;
  v8 = a3[40];
  v9 = a3[41];
  v10 = *a4;
  v11 = *a5;
  *(_BYTE *)a6 = *a1;
  *(_BYTE *)(a6 + 1) = v6;
  *(_BYTE *)(a6 + 8) = v7;
  result = *(__n128 *)(a3 + 8);
  v13 = *(_OWORD *)(a3 + 24);
  *(__n128 *)(a6 + 16) = result;
  *(_OWORD *)(a6 + 32) = v13;
  *(_BYTE *)(a6 + 48) = v8;
  *(_BYTE *)(a6 + 49) = v9;
  *(_QWORD *)(a6 + 56) = v10;
  *(_BYTE *)(a6 + 64) = v11;
  return result;
}

uint64_t View.accessoryControlsStyle(_:)()
{
  swift_getKeyPath();
  sub_23E136990();
  return swift_release();
}

BOOL static AccessoryControlsStyle.PresentationStyle.Orientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL AccessoryControlsStyle.useControlCenterMaterials.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64) - 1 < 2;
}

void AccessoryControlsStyle.background.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AccessoryControlsStyle.background.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AccessoryControlsStyle.background.modify())()
{
  return CGPointMake;
}

void AccessoryControlsStyle.header.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *AccessoryControlsStyle.header.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*AccessoryControlsStyle.header.modify())()
{
  return CGPointMake;
}

__n128 AccessoryControlsStyle.presentation.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 49);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 8);
  result = *(__n128 *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 32);
  *(__n128 *)(a1 + 8) = result;
  *(_OWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 41) = v3;
  return result;
}

__n128 AccessoryControlsStyle.presentation.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 41);
  *(_BYTE *)(v1 + 8) = *(_BYTE *)a1;
  result = *(__n128 *)(a1 + 8);
  v5 = *(_OWORD *)(a1 + 24);
  *(__n128 *)(v1 + 16) = result;
  *(_OWORD *)(v1 + 32) = v5;
  *(_BYTE *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 49) = v3;
  return result;
}

uint64_t (*AccessoryControlsStyle.presentation.modify())()
{
  return CGPointMake;
}

void AccessoryControlsStyle.dismissOptions.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
}

_QWORD *AccessoryControlsStyle.dismissOptions.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = *result;
  return result;
}

uint64_t (*AccessoryControlsStyle.dismissOptions.modify())()
{
  return CGPointMake;
}

void AccessoryControlsStyle.material.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

_BYTE *AccessoryControlsStyle.material.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = *result;
  return result;
}

uint64_t (*AccessoryControlsStyle.material.modify())()
{
  return CGPointMake;
}

double static AccessoryControlsStyle.PresentationStyle.fullScreen.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  double result;

  if (qword_256D1D370 != -1)
    swift_once();
  v2 = word_256D224C8;
  v3 = HIBYTE(word_256D224C8);
  *(_BYTE *)a1 = byte_256D224A0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_256D224A8;
  result = *(double *)&qword_256D224B8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_256D224B8;
  *(_BYTE *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 41) = v3;
  return result;
}

uint64_t static AccessoryControlsStyle.DismissOptions.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_256D1D358 != -1)
    result = swift_once();
  *a1 = qword_256D22438;
  return result;
}

uint64_t AccessoryControlsStyle.DismissOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

HomeAccessoryControlUI::AccessoryControlsStyle::DismissOptions __swiftcall AccessoryControlsStyle.DismissOptions.init(rawValue:)(HomeAccessoryControlUI::AccessoryControlsStyle::DismissOptions rawValue)
{
  HomeAccessoryControlUI::AccessoryControlsStyle::DismissOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static AccessoryControlsStyle.DismissOptions.backgroundTap.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static AccessoryControlsStyle.DismissOptions.swipeDown.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void sub_23E041178()
{
  qword_256D22438 = 3;
}

_QWORD *sub_23E04119C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23E0411A8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23E0411B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23E0411C4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23E0411D8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23E0411EC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23E04121C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23E041248@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23E04126C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23E041280(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23E041294(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23E0412A8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23E0412BC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23E0412D0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23E0412E4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23E0412F8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23E041308()
{
  return sub_23E1374E8();
}

_QWORD *sub_23E041320(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t AccessoryControlsStyle.BackgroundStyle.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t AccessoryControlsStyle.PresentationStyle.fullScreen.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AccessoryControlsStyle.PresentationStyle.fullScreen.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*AccessoryControlsStyle.PresentationStyle.fullScreen.modify())()
{
  return CGPointMake;
}

double AccessoryControlsStyle.PresentationStyle.cornerRadii.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void AccessoryControlsStyle.PresentationStyle.cornerRadii.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

uint64_t (*AccessoryControlsStyle.PresentationStyle.cornerRadii.modify())()
{
  return CGPointMake;
}

uint64_t AccessoryControlsStyle.PresentationStyle.dimsBackground.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t AccessoryControlsStyle.PresentationStyle.dimsBackground.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*AccessoryControlsStyle.PresentationStyle.dimsBackground.modify())()
{
  return CGPointMake;
}

void AccessoryControlsStyle.PresentationStyle.orientation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

_BYTE *AccessoryControlsStyle.PresentationStyle.orientation.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = *result;
  return result;
}

uint64_t (*AccessoryControlsStyle.PresentationStyle.orientation.modify())()
{
  return CGPointMake;
}

uint64_t AccessoryControlsStyle.PresentationStyle.init(fullScreen:cornerRadii:dimsBackground:orientation:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  char v8;

  v8 = *a3;
  *(_BYTE *)a4 = result;
  *(double *)(a4 + 8) = a5;
  *(double *)(a4 + 16) = a6;
  *(double *)(a4 + 24) = a7;
  *(double *)(a4 + 32) = a8;
  *(_BYTE *)(a4 + 40) = a2;
  *(_BYTE *)(a4 + 41) = v8;
  return result;
}

uint64_t sub_23E04141C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_256D1D378 != -1)
    swift_once();
  result = sub_23E1364BC();
  byte_256D22440 = 0;
  qword_256D22448 = v1;
  unk_256D22450 = v2;
  qword_256D22458 = v3;
  unk_256D22460 = v4;
  word_256D22468 = 1;
  return result;
}

double static AccessoryControlsStyle.PresentationStyle.roundedCard.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  double result;

  if (qword_256D1D360 != -1)
    swift_once();
  v2 = word_256D22468;
  v3 = HIBYTE(word_256D22468);
  *(_BYTE *)a1 = byte_256D22440;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_256D22448;
  result = *(double *)&qword_256D22458;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_256D22458;
  *(_BYTE *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 41) = v3;
  return result;
}

uint64_t sub_23E0414FC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_23E1364BC();
  byte_256D22470 = 1;
  qword_256D22478 = v1;
  unk_256D22480 = v2;
  qword_256D22488 = v3;
  unk_256D22490 = v4;
  word_256D22498 = 0;
  return result;
}

double static AccessoryControlsStyle.PresentationStyle.topRoundedFullScreen.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  double result;

  if (qword_256D1D368 != -1)
    swift_once();
  v2 = word_256D22498;
  v3 = HIBYTE(word_256D22498);
  *(_BYTE *)a1 = byte_256D22470;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_256D22478;
  result = *(double *)&qword_256D22488;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_256D22488;
  *(_BYTE *)(a1 + 40) = v2;
  *(_BYTE *)(a1 + 41) = v3;
  return result;
}

uint64_t sub_23E0415B0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_23E1364BC();
  byte_256D224A0 = 1;
  qword_256D224A8 = v1;
  unk_256D224B0 = v2;
  qword_256D224B8 = v3;
  unk_256D224C0 = v4;
  word_256D224C8 = 0;
  return result;
}

void sub_23E0415F0()
{
  qword_256D346A8 = 0x4034000000000000;
}

uint64_t AccessoryControlsStyle.PresentationStyle.Orientation.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t AccessoryControlsStyle.PresentationStyle.Orientation.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

double sub_23E041680()
{
  double result;

  if (qword_256D1D368 != -1)
    swift_once();
  word_256D224D0 = 257;
  byte_256D224D8 = byte_256D22470;
  result = *(double *)&qword_256D22478;
  xmmword_256D224E0 = *(_OWORD *)&qword_256D22478;
  unk_256D224F0 = *(_OWORD *)&qword_256D22488;
  word_256D22500 = word_256D22498;
  qword_256D22508 = 2;
  byte_256D22510 = 0;
  return result;
}

double static AccessoryControlsStyle.legacyCardFullScreen.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  double result;
  __int128 v8;

  if (qword_256D1D380 != -1)
    swift_once();
  v2 = byte_256D224D8;
  v3 = word_256D22500;
  v4 = HIBYTE(word_256D22500);
  v5 = qword_256D22508;
  v6 = byte_256D22510;
  *(_WORD *)a1 = word_256D224D0;
  *(_BYTE *)(a1 + 8) = v2;
  result = *(double *)&xmmword_256D224E0;
  v8 = unk_256D224F0;
  *(_OWORD *)(a1 + 16) = xmmword_256D224E0;
  *(_OWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 49) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return result;
}

double sub_23E041788()
{
  double result;

  if (qword_256D1D360 != -1)
    swift_once();
  word_256D22518 = 257;
  byte_256D22520 = byte_256D22440;
  result = *(double *)&qword_256D22448;
  xmmword_256D22528 = *(_OWORD *)&qword_256D22448;
  unk_256D22538 = *(_OWORD *)&qword_256D22458;
  word_256D22548 = word_256D22468;
  qword_256D22550 = 2;
  byte_256D22558 = 0;
  return result;
}

double static AccessoryControlsStyle.legacyCard.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  double result;
  __int128 v8;

  if (qword_256D1D388 != -1)
    swift_once();
  v2 = byte_256D22520;
  v3 = word_256D22548;
  v4 = HIBYTE(word_256D22548);
  v5 = qword_256D22550;
  v6 = byte_256D22558;
  *(_WORD *)a1 = word_256D22518;
  *(_BYTE *)(a1 + 8) = v2;
  result = *(double *)&xmmword_256D22528;
  v8 = unk_256D22538;
  *(_OWORD *)(a1 + 16) = xmmword_256D22528;
  *(_OWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 49) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return result;
}

uint64_t sub_23E041890()
{
  sub_23E035178();
  return sub_23E136264();
}

uint64_t sub_23E0418CC()
{
  sub_23E035178();
  return sub_23E136264();
}

uint64_t sub_23E041908()
{
  sub_23E035178();
  return sub_23E136270();
}

uint64_t _s22HomeAccessoryControlUI0B13ControlsStyleV012PresentationF0V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3;
  int v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  char v7;
  unsigned int v8;

  if (*a1 != *a2)
    return 0;
  v3 = a1[41];
  v4 = a2[41];
  v5 = a2[40];
  v6 = a1[40];
  v7 = sub_23E1364B0();
  if (((v5 ^ v6) & 1) != 0)
    v8 = 0;
  else
    v8 = v3 ^ v4 ^ 1;
  if ((v7 & 1) != 0)
    return v8;
  else
    return 0;
}

uint64_t _s22HomeAccessoryControlUI0B13ControlsStyleV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;

  v2 = 0;
  v3 = *a1 == *a2 && a1[1] == a2[1];
  if (v3 && ((a1[8] ^ a2[8]) & 1) == 0)
  {
    v4 = a2[64];
    v5 = a1[64];
    v6 = *((_QWORD *)a2 + 7);
    v7 = a2[49];
    v8 = a2[48];
    v9 = *((_QWORD *)a1 + 7);
    v10 = a1[49];
    v11 = a1[48];
    LODWORD(v2) = sub_23E1364B0() & ~(v8 ^ v11) & ~(v7 ^ v10) & (v9 == v6);
    if (v5 == v4)
      return v2;
    else
      return 0;
  }
  return v2;
}

unint64_t sub_23E041AC0()
{
  unint64_t result;

  result = qword_256D22560;
  if (!qword_256D22560)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.DismissOptions, &type metadata for AccessoryControlsStyle.DismissOptions);
    atomic_store(result, (unint64_t *)&qword_256D22560);
  }
  return result;
}

unint64_t sub_23E041B08()
{
  unint64_t result;

  result = qword_256D22568;
  if (!qword_256D22568)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.DismissOptions, &type metadata for AccessoryControlsStyle.DismissOptions);
    atomic_store(result, (unint64_t *)&qword_256D22568);
  }
  return result;
}

unint64_t sub_23E041B50()
{
  unint64_t result;

  result = qword_256D22570;
  if (!qword_256D22570)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.DismissOptions, &type metadata for AccessoryControlsStyle.DismissOptions);
    atomic_store(result, (unint64_t *)&qword_256D22570);
  }
  return result;
}

unint64_t sub_23E041B98()
{
  unint64_t result;

  result = qword_256D22578;
  if (!qword_256D22578)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.DismissOptions, &type metadata for AccessoryControlsStyle.DismissOptions);
    atomic_store(result, (unint64_t *)&qword_256D22578);
  }
  return result;
}

unint64_t sub_23E041BE0()
{
  unint64_t result;

  result = qword_256D22580;
  if (!qword_256D22580)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.BackgroundStyle, &type metadata for AccessoryControlsStyle.BackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_256D22580);
  }
  return result;
}

unint64_t sub_23E041C28()
{
  unint64_t result;

  result = qword_256D22588;
  if (!qword_256D22588)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.MaterialStyle, &type metadata for AccessoryControlsStyle.MaterialStyle);
    atomic_store(result, (unint64_t *)&qword_256D22588);
  }
  return result;
}

unint64_t sub_23E041C70()
{
  unint64_t result;

  result = qword_256D22590;
  if (!qword_256D22590)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.PresentationStyle.Orientation, &type metadata for AccessoryControlsStyle.PresentationStyle.Orientation);
    atomic_store(result, (unint64_t *)&qword_256D22590);
  }
  return result;
}

unint64_t sub_23E041CB8()
{
  unint64_t result;

  result = qword_256D22598;
  if (!qword_256D22598)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlsStyle.HeaderStyle, &type metadata for AccessoryControlsStyle.HeaderStyle);
    atomic_store(result, (unint64_t *)&qword_256D22598);
  }
  return result;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AccessoryControlsStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlsStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle()
{
  return &type metadata for AccessoryControlsStyle;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle.DismissOptions()
{
  return &type metadata for AccessoryControlsStyle.DismissOptions;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle.BackgroundStyle()
{
  return &type metadata for AccessoryControlsStyle.BackgroundStyle;
}

uint64_t storeEnumTagSinglePayload for AccessoryControlsStyle.MaterialStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E041E4C + 4 * byte_23E13D645[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E041E80 + 4 * byte_23E13D640[v4]))();
}

uint64_t sub_23E041E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E041E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E041E90);
  return result;
}

uint64_t sub_23E041E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E041EA4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E041EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E041EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle.MaterialStyle()
{
  return &type metadata for AccessoryControlsStyle.MaterialStyle;
}

uint64_t getEnumTagSinglePayload for AccessoryControlsStyle.PresentationStyle(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[42])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlsStyle.PresentationStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle.PresentationStyle()
{
  return &type metadata for AccessoryControlsStyle.PresentationStyle;
}

uint64_t storeEnumTagSinglePayload for AccessoryControlsStyle.PresentationStyle.Orientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E041FCC + 4 * byte_23E13D64F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E042000 + 4 * byte_23E13D64A[v4]))();
}

uint64_t sub_23E042000(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E042008(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E042010);
  return result;
}

uint64_t sub_23E04201C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E042024);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E042028(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E042030(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle.PresentationStyle.Orientation()
{
  return &type metadata for AccessoryControlsStyle.PresentationStyle.Orientation;
}

uint64_t _s22HomeAccessoryControlUI22AccessoryControlsStyleV15BackgroundStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E042098 + 4 * byte_23E13D659[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E0420CC + 4 * byte_23E13D654[v4]))();
}

uint64_t sub_23E0420CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0420D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E0420DCLL);
  return result;
}

uint64_t sub_23E0420E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E0420F0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E0420F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0420FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlsStyle.HeaderStyle()
{
  return &type metadata for AccessoryControlsStyle.HeaderStyle;
}

uint64_t sub_23E042118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1EBE0);
  v2 = sub_23E135FF4();
  v4[0] = v1;
  v4[1] = sub_23E042178();
  return MEMORY[0x24264C55C](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_23E042178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1EBD8;
  if (!qword_256D1EBD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1EBE0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_256D1EBD8);
  }
  return result;
}

uint64_t sub_23E0421E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0421EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E134C80();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_23E134CF8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_23E04228C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E042298(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 120) = (a2 - 1);
  }
  else
  {
    v8 = sub_23E134C80();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_23E134CF8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for AlarmsControlView()
{
  uint64_t result;

  result = qword_256D225F8;
  if (!qword_256D225F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E042370()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    result = sub_23E134CF8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E042418()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E042428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  int v46;
  char v47;
  char *v48;
  uint64_t KeyPath;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  _OWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(void);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;

  v153 = a1;
  v163 = a2;
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7D0);
  MEMORY[0x24BDAC7A8](v162);
  v133 = (uint64_t)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v127);
  v130 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AlarmsControlView();
  v121 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v122 = v5;
  v123 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7D8);
  MEMORY[0x24BDAC7A8](v124);
  v129 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7E0);
  MEMORY[0x24BDAC7A8](v125);
  v128 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7E8);
  v8 = MEMORY[0x24BDAC7A8](v126);
  v131 = (uint64_t)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v132 = (uint64_t)&v120 - v10;
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22648);
  MEMORY[0x24BDAC7A8](v160);
  v161 = (uint64_t)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_23E135F4C();
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v147 = (char *)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22650);
  v135 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v134 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22658);
  v141 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v139 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22660);
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v142 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22668);
  MEMORY[0x24BDAC7A8](v136);
  v140 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22670);
  v17 = MEMORY[0x24BDAC7A8](v156);
  v137 = (uint64_t)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v146 = (uint64_t)&v120 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22678);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v159 = (uint64_t)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v158 = (char *)&v120 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E808);
  MEMORY[0x24BDAC7A8](v24);
  v150 = (uint64_t *)((char *)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E810);
  v26 = MEMORY[0x24BDAC7A8](v152);
  v157 = (uint64_t)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v151 = (char *)&v120 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v164 = (uint64_t)&v120 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E818);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v120 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23E136F00();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E820);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v120 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E828);
  v41 = MEMORY[0x24BDAC7A8](v155);
  v43 = (char *)&v120 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v120 - v44;
  sub_23E136EF4();
  v46 = sub_23E136540();
  v47 = sub_23E13672C();
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v40, v37, v34);
  v48 = &v40[*(int *)(v38 + 36)];
  *(_DWORD *)v48 = v46;
  v48[4] = v47;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  KeyPath = swift_getKeyPath();
  sub_23E136F84();
  v50 = sub_23E136F90();
  v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  v51(v33, 0, 1, v50);
  v52 = (uint64_t *)&v43[*((int *)v155 + 9)];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E830);
  sub_23DF89C1C((uint64_t)v33, (uint64_t)v52 + *(int *)(v53 + 28), &qword_256D1E818);
  *v52 = KeyPath;
  v54 = v153;
  sub_23DF89C1C((uint64_t)v40, (uint64_t)v43, &qword_256D1E820);
  sub_23DF89C7C((uint64_t)v33, &qword_256D1E818);
  sub_23DF89C7C((uint64_t)v40, &qword_256D1E820);
  v154 = v45;
  v155 = v43;
  sub_23DF89340((uint64_t)v43, (uint64_t)v45, &qword_256D1E828);
  v55 = sub_23E1362D0();
  v56 = (uint64_t)v150;
  *v150 = v55;
  *(_QWORD *)(v56 + 8) = 0;
  *(_BYTE *)(v56 + 16) = 1;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E838);
  sub_23E043348(v54, v56 + *(int *)(v57 + 44));
  v58 = swift_getKeyPath();
  sub_23E136F84();
  v51(v33, 0, 1, v50);
  v59 = (uint64_t)v151;
  v60 = (uint64_t *)&v151[*(int *)(v152 + 36)];
  sub_23DF89C1C((uint64_t)v33, (uint64_t)v60 + *(int *)(v53 + 28), &qword_256D1E818);
  *v60 = v58;
  sub_23DF89C1C(v56, v59, &qword_256D1E808);
  sub_23DF89C7C((uint64_t)v33, &qword_256D1E818);
  sub_23DF89C7C(v56, &qword_256D1E808);
  v61 = sub_23DF89340(v59, v164, &qword_256D1E810);
  if (*(_QWORD *)(*(_QWORD *)(v54 + 120) + 16))
  {
    MEMORY[0x24BDAC7A8](v61);
    *(&v120 - 2) = v54;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D226B0);
    sub_23E045394();
    v62 = v134;
    sub_23E136864();
    v63 = sub_23DF89B88(&qword_256D22690, &qword_256D22650, MEMORY[0x24BDF1A30]);
    v64 = v139;
    v65 = v138;
    sub_23E136AD4();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v62, v65);
    v66 = v147;
    sub_23E135F40();
    v165 = v65;
    v166 = v63;
    swift_getOpaqueTypeConformance2();
    v67 = v142;
    v68 = v143;
    v69 = v149;
    sub_23E136B94();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v66, v69);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v64, v68);
    v70 = swift_getKeyPath();
    v71 = v144;
    v72 = (uint64_t)v140;
    v73 = v145;
    (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v140, v67, v145);
    v74 = v72 + *(int *)(v136 + 36);
    *(_QWORD *)v74 = v70;
    *(_QWORD *)(v74 + 8) = 0x4024000000000000;
    *(_BYTE *)(v74 + 16) = 0;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v73);
    v75 = v137;
    sub_23DF89C1C(v72, v137, &qword_256D22668);
    *(_QWORD *)(v75 + *(int *)(v156 + 36)) = 0x4024000000000000;
    sub_23DF89C7C(v72, &qword_256D22668);
    v76 = &qword_256D22670;
    v77 = v146;
    sub_23DF89340(v75, v146, &qword_256D22670);
    sub_23DF89C1C(v77, v161, &qword_256D22670);
    swift_storeEnumTagMultiPayload();
    sub_23E0451F4();
    sub_23DF89B88(&qword_256D1E898, &qword_256D1E7D0, MEMORY[0x24BDF5428]);
    v78 = (uint64_t)v158;
    sub_23E136480();
    v79 = v77;
  }
  else
  {
    v80 = v123;
    sub_23DF73E10(v54, v123, (uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView);
    v81 = (*(unsigned __int8 *)(v121 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    v82 = swift_allocObject();
    v83 = sub_23DF89384(v80, v82 + v81, (uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView);
    MEMORY[0x24BDAC7A8](v83);
    *(&v120 - 2) = v54;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E840);
    sub_23DFA03E0();
    v84 = (uint64_t)v129;
    sub_23E136DEC();
    v85 = sub_23E136FE4();
    v87 = v86;
    v88 = (uint64_t *)(v84 + *(int *)(v124 + 36));
    *v88 = sub_23E136FE4();
    v88[1] = v89;
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E870);
    sub_23E044FCC((uint64_t)v88 + *(int *)(v90 + 44));
    v91 = (uint64_t *)((char *)v88 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E878) + 36));
    *v91 = v85;
    v91[1] = v87;
    v92 = v130;
    v93 = &v130[*(int *)(v127 + 20)];
    v94 = *MEMORY[0x24BDEEB68];
    v95 = sub_23E136324();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 104))(v93, v94, v95);
    __asm { FMOV            V0.2D, #10.0 }
    *v92 = _Q0;
    v101 = (uint64_t)v128;
    v102 = (uint64_t)&v128[*(int *)(v125 + 36)];
    v103 = MEMORY[0x24BDED998];
    sub_23DF73E10((uint64_t)v92, v102, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    *(_WORD *)(v102 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
    sub_23DF89C1C(v84, v101, &qword_256D1E7D8);
    sub_23DF73E54((uint64_t)v92, (uint64_t (*)(_QWORD))v103);
    sub_23DF89C7C(v84, &qword_256D1E7D8);
    v104 = v131;
    sub_23DF89C1C(v101, v131, &qword_256D1E7E0);
    *(_WORD *)(v104 + *(int *)(v126 + 36)) = 256;
    sub_23DF89C7C(v101, &qword_256D1E7E0);
    v76 = &qword_256D1E7E8;
    v105 = v132;
    sub_23DF89340(v104, v132, &qword_256D1E7E8);
    sub_23E136FE4();
    sub_23E135E5C();
    v106 = v165;
    LOBYTE(v88) = v166;
    v107 = v167;
    LOBYTE(v84) = v168;
    v108 = v169;
    v109 = v170;
    sub_23DF89C1C(v105, v104, &qword_256D1E7E8);
    v110 = v133;
    sub_23DF89C1C(v104, v133, &qword_256D1E7E8);
    v111 = v110 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E880) + 48);
    *(_QWORD *)v111 = 0;
    *(_BYTE *)(v111 + 8) = 1;
    *(_QWORD *)(v111 + 16) = v106;
    *(_BYTE *)(v111 + 24) = (_BYTE)v88;
    *(_QWORD *)(v111 + 32) = v107;
    *(_BYTE *)(v111 + 40) = v84;
    *(_QWORD *)(v111 + 48) = v108;
    *(_QWORD *)(v111 + 56) = v109;
    sub_23DF89C7C(v104, &qword_256D1E7E8);
    sub_23DF89C1C(v110, v161, &qword_256D1E7D0);
    swift_storeEnumTagMultiPayload();
    sub_23E0451F4();
    sub_23DF89B88(&qword_256D1E898, &qword_256D1E7D0, MEMORY[0x24BDF5428]);
    v78 = (uint64_t)v158;
    sub_23E136480();
    sub_23DF89C7C(v110, &qword_256D1E7D0);
    v79 = v105;
  }
  sub_23DF89C7C(v79, v76);
  v112 = (uint64_t)v154;
  v113 = (uint64_t)v155;
  sub_23DF89C1C((uint64_t)v154, (uint64_t)v155, &qword_256D1E828);
  v114 = v164;
  v115 = v157;
  sub_23DF89C1C(v164, v157, &qword_256D1E810);
  v116 = v159;
  sub_23DF89C1C(v78, v159, &qword_256D22678);
  v117 = v163;
  sub_23DF89C1C(v113, v163, &qword_256D1E828);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D226A8);
  sub_23DF89C1C(v115, v117 + *(int *)(v118 + 48), &qword_256D1E810);
  sub_23DF89C1C(v116, v117 + *(int *)(v118 + 64), &qword_256D22678);
  sub_23DF89C7C(v78, &qword_256D22678);
  sub_23DF89C7C(v114, &qword_256D1E810);
  sub_23DF89C7C(v112, &qword_256D1E828);
  sub_23DF89C7C(v116, &qword_256D22678);
  sub_23DF89C7C(v115, &qword_256D1E810);
  return sub_23DF89C7C(v113, &qword_256D1E828);
}

uint64_t sub_23E043348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v54;
  __int128 v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  _BYTE v78[24];
  __int128 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v58 = a1;
  v73 = a2;
  v3 = type metadata accessor for AlarmsControlView();
  v65 = *(_QWORD *)(v3 - 8);
  v66 = *(_QWORD *)(v65 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v63 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8E0);
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v68 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8E8);
  v6 = MEMORY[0x24BDAC7A8](v69);
  v71 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v54 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)&v54 - v10;
  v11 = sub_23E13660C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8F0);
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v56 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8F8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v62 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v57 = (char *)&v54 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v59 = (uint64_t)&v54 - v21;
  v22 = sub_23E1362D0();
  sub_23E04399C(a1, (uint64_t)&v77);
  v23 = *(_QWORD *)&v78[16];
  v24 = v79;
  v25 = *((_QWORD *)&v79 + 1);
  v55 = *(_OWORD *)v78;
  v54 = v77;
  v26 = sub_23E136828();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v77 = v22;
  *((_QWORD *)&v77 + 1) = 0x4024000000000000;
  v78[0] = 0;
  *(_OWORD *)&v78[8] = v54;
  v79 = v55;
  v80 = v23;
  v81 = v24;
  v82 = v25;
  v83 = KeyPath;
  v84 = v26;
  sub_23E1365F4();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E900);
  v29 = sub_23DFA0744();
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v30 = *((_QWORD *)&v79 + 1);
  v31 = v80;
  v32 = v81;
  swift_release();
  swift_release();
  swift_release();
  sub_23DFA055C(v30, v31, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)&v77 = sub_23E1371A0();
  *((_QWORD *)&v77 + 1) = v33;
  v75 = v28;
  v76 = v29;
  swift_getOpaqueTypeConformance2();
  sub_23DF8DC18();
  v34 = (uint64_t)v57;
  v35 = v60;
  v36 = v56;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v35);
  v37 = v59;
  sub_23DF89340(v34, v59, &qword_256D1E8F8);
  v38 = v58;
  v39 = v63;
  sub_23DF73E10(v58, v63, (uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView);
  v40 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v41 = swift_allocObject();
  sub_23DF89384(v39, v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView);
  v74 = v38;
  v42 = v68;
  sub_23E136DEC();
  if (*(_QWORD *)(*(_QWORD *)(v38 + 120) + 16))
    v43 = 1.0;
  else
    v43 = 0.0;
  v44 = v70;
  v45 = (uint64_t)v64;
  v46 = v72;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v64, v42, v72);
  *(double *)(v45 + *(int *)(v69 + 36)) = v43;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v46);
  v47 = v67;
  sub_23DF89340(v45, v67, &qword_256D1E8E8);
  v48 = v62;
  sub_23DF89C1C(v37, v62, &qword_256D1E8F8);
  v49 = v71;
  sub_23DF89C1C(v47, v71, &qword_256D1E8E8);
  v50 = v73;
  sub_23DF89C1C(v48, v73, &qword_256D1E8F8);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E930);
  v52 = v50 + *(int *)(v51 + 48);
  *(_QWORD *)v52 = 0;
  *(_BYTE *)(v52 + 8) = 1;
  sub_23DF89C1C(v49, v50 + *(int *)(v51 + 64), &qword_256D1E8E8);
  sub_23DF89C7C(v47, &qword_256D1E8E8);
  sub_23DF89C7C(v37, &qword_256D1E8F8);
  sub_23DF89C7C(v49, &qword_256D1E8E8);
  return sub_23DF89C7C(v48, &qword_256D1E8F8);
}

uint64_t sub_23E04399C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[72];
  _OWORD v24[4];
  __int16 v25;

  v22 = sub_23E136CB4();
  v21 = sub_23E136C84();
  KeyPath = swift_getKeyPath();
  sub_23E1371A0();
  v5 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v5;
  v25 = *(_WORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v6;
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v23);
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v23[0] == 1)
    sub_23E136C84();
  else
    sub_23E136C48();
  v7 = sub_23E1368D0();
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v11 & 1;
  sub_23E1367F8();
  v13 = sub_23E1368AC();
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  sub_23DFA055C(v7, v9, v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v15;
  *(_BYTE *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23DFA056C(v13, v15, v19);
  swift_bridgeObjectRetain();
  sub_23DFA055C(v13, v15, v19);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E043BA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF9C9A0((uint64_t)v11);
  v5 = v12;
  v6 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v7 = sub_23E134C80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = type metadata accessor for AlarmsControlView();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1 + *(int *)(v8 + 28), v5, v6);
  sub_23DF89C7C((uint64_t)v4, &qword_256D1D7E8);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
}

uint64_t sub_23E043C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _BYTE v24[72];
  _OWORD v25[4];
  __int16 v26;

  sub_23E1371A0();
  v4 = *(_OWORD *)(a1 + 48);
  v25[2] = *(_OWORD *)(a1 + 32);
  v25[3] = v4;
  v26 = *(_WORD *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 16);
  v25[0] = *(_OWORD *)a1;
  v25[1] = v5;
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v24);
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v24[0] == 1)
    sub_23E136C54();
  else
    sub_23E136C48();
  v6 = sub_23E1368D0();
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v10 & 1;
  sub_23E136828();
  v12 = sub_23E136900();
  v14 = v13;
  v16 = v15;
  swift_release();
  sub_23DFA055C(v6, v8, v11);
  swift_bridgeObjectRelease();
  sub_23E1367F8();
  v17 = sub_23E1368AC();
  v19 = v18;
  LOBYTE(v8) = v20;
  v22 = v21;
  sub_23DFA055C(v12, v14, v16 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v22;
  return result;
}

uint64_t sub_23E043E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D226D0);
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22710);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D226C8);
  MEMORY[0x24BDAC7A8](v31);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRetain();
  v29[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22718);
  v29[0] = sub_23E134C80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22720);
  sub_23DF89B88(&qword_256D22728, &qword_256D22718, MEMORY[0x24BEE12D8]);
  v11 = type metadata accessor for AlarmCell();
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E8E0);
  v13 = sub_23DF73F28(&qword_256D226E0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmCell, (uint64_t)&unk_23E13DD00);
  v14 = sub_23DF89B88(&qword_256D226E8, &qword_256D1E8E0, MEMORY[0x24BDF43B0]);
  v35 = v11;
  v36 = v12;
  v37 = v13;
  v38 = v14;
  swift_getOpaqueTypeConformance2();
  sub_23DF73F28(&qword_256D22730, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D920], MEMORY[0x24BE4D930]);
  sub_23E136F18();
  sub_23E135E14();
  sub_23E0454C4();
  sub_23E136A5C();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  v35 = sub_23E136C30();
  swift_retain();
  v15 = sub_23E136E58();
  v17 = v32;
  v16 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v10, v8, v33);
  swift_release();
  *(_QWORD *)&v10[*(int *)(v31 + 36)] = v15;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  sub_23E135D0C();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = v34;
  sub_23DF89C1C((uint64_t)v10, v34, &qword_256D226C8);
  v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D226B0) + 36);
  *(_QWORD *)v27 = v19;
  *(_QWORD *)(v27 + 8) = v21;
  *(_QWORD *)(v27 + 16) = v23;
  *(_QWORD *)(v27 + 24) = v25;
  *(_BYTE *)(v27 + 32) = 0;
  return sub_23DF89C7C((uint64_t)v10, &qword_256D226C8);
}

uint64_t sub_23E04417C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t KeyPath;
  _BYTE *v14;
  _BYTE v16[16];
  uint64_t v17;

  v2 = sub_23E136288();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23E134F2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for AlarmCell();
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  KeyPath = swift_getKeyPath();
  v14 = &v12[*(int *)(v10 + 20)];
  *(_QWORD *)v14 = KeyPath;
  v14[40] = 0;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v9, v6);
  sub_23E13627C();
  v17 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8E0);
  sub_23DF73F28(&qword_256D226E0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmCell, (uint64_t)&unk_23E13DD00);
  sub_23DF89B88(&qword_256D226E8, &qword_256D1E8E0, MEMORY[0x24BDF43B0]);
  sub_23E1369D8();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
}

uint64_t sub_23E044364(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v2 = sub_23E134F2C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22738);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = sub_23E1371A0();
  v13[1] = v8;
  sub_23E135CE8();
  v9 = sub_23E135CF4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v10, (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_23DF8DC18();
  return sub_23E136DF8();
}

uint64_t sub_23E0444E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_23E134F2C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1372E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_23E1372C0();
  v10 = sub_23E1372B4();
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, v2);
  sub_23DFA2660((uint64_t)v8, (uint64_t)&unk_256D22748, v12);
  return swift_release();
}

uint64_t sub_23E044630()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23E1372C0();
  v0[3] = sub_23E1372B4();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23E0446AC;
  return sub_23E134F08();
}

uint64_t sub_23E0446AC()
{
  swift_task_dealloc();
  sub_23E1372A8();
  return swift_task_switch();
}

uint64_t sub_23E04471C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E04474C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v2 = type metadata accessor for AlarmsControlView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E134CF8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (void **)((char *)&v27[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v13 + 16))(v15, a1 + *(int *)(v2 + 32), v12);
  if ((*(unsigned int (**)(void **, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x24BE4D2D0])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v15, v12);
    v16 = *v15;
    v17 = sub_23E1372E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    sub_23DF73E10(a1, (uint64_t)&v27[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView);
    sub_23E1372C0();
    v18 = v16;
    v19 = sub_23E1372B4();
    v20 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v21 = (_QWORD *)swift_allocObject();
    v22 = MEMORY[0x24BEE6930];
    v21[2] = v19;
    v21[3] = v22;
    v21[4] = v18;
    sub_23DF89384((uint64_t)v5, (uint64_t)v21 + v20, (uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView);
    sub_23DFA2514((uint64_t)v8, (uint64_t)&unk_256D22758, (uint64_t)v21);
    swift_release();

  }
  else
  {
    (*(void (**)(void **, uint64_t))(v13 + 8))(v15, v12);
    sub_23DF9C9A0((uint64_t)v27);
    v23 = v28;
    v24 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v25 = sub_23E134C80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 16))(v11, a1 + *(int *)(v2 + 28), v23, v24);
    sub_23DF89C7C((uint64_t)v11, &qword_256D1D7E8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  }
}

uint64_t sub_23E044A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a4;
  v5[8] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v5[9] = swift_task_alloc();
  sub_23E1372C0();
  v5[10] = sub_23E1372B4();
  v5[11] = sub_23E1372A8();
  v5[12] = v6;
  return swift_task_switch();
}

uint64_t sub_23E044A94()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23E134D28();
  *(_QWORD *)(v0 + 104) = sub_23E134D04();
  *(_DWORD *)(v0 + 120) = *(_DWORD *)(type metadata accessor for AlarmsControlView() + 28);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_23E044B18;
  return sub_23E134D10();
}

uint64_t sub_23E044B18(char a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 104);
  *(_BYTE *)(*(_QWORD *)v1 + 124) = a1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E044B74()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(v0 + 124);
  swift_release();
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 64) + *(int *)(v0 + 120);
    sub_23DF9C9A0(v0 + 16);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
    v6 = sub_23E134C80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v3, v4, v5);
    sub_23DF89C7C(v2, &qword_256D1D7E8);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E044C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v28 = sub_23E1362D0();
  sub_23E044DE8(a1, (uint64_t)v29);
  v4 = v29[0];
  v5 = v29[1];
  v6 = v30;
  v7 = v31;
  v27 = v32;
  v8 = v33;
  v9 = sub_23E136738();
  v10 = sub_23E136744();
  v11 = sub_23E136768();
  v12 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v9)
    v12 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v10)
    v12 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v11)
    v12 = sub_23E13675C();
  sub_23E135D00();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = sub_23E136750();
  result = sub_23E135D00();
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v27;
  *(_BYTE *)(a2 + 64) = v8;
  *(_BYTE *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v16;
  *(_QWORD *)(a2 + 96) = v18;
  *(_QWORD *)(a2 + 104) = v20;
  *(_BYTE *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = v21;
  *(_QWORD *)(a2 + 128) = v23;
  *(_QWORD *)(a2 + 136) = v24;
  *(_QWORD *)(a2 + 144) = v25;
  *(_QWORD *)(a2 + 152) = v26;
  *(_BYTE *)(a2 + 160) = 0;
  return result;
}

uint64_t sub_23E044DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  _BYTE v24[80];
  _OWORD v25[4];
  __int16 v26;

  sub_23E1371A0();
  sub_23E136828();
  v4 = sub_23E136900();
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_release();
  v9 = *(_OWORD *)(a1 + 48);
  v25[2] = *(_OWORD *)(a1 + 32);
  v25[3] = v9;
  v26 = *(_WORD *)(a1 + 64);
  v10 = *(_OWORD *)(a1 + 16);
  v25[0] = *(_OWORD *)a1;
  v25[1] = v10;
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v24);
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v24[0] == 1)
    sub_23E136C54();
  else
    sub_23E136C48();
  v11 = sub_23E1368D0();
  v13 = v12;
  v15 = v14;
  swift_release();
  sub_23DFA055C(v4, v6, v8 & 1);
  swift_bridgeObjectRelease();
  sub_23E1367F8();
  v16 = sub_23E1368AC();
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  sub_23DFA055C(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  *(_BYTE *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  sub_23DFA056C(v16, v18, v22);
  swift_bridgeObjectRetain();
  sub_23DFA055C(v16, v18, v22);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E044FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for ControlBackgroundView();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13 - v6;
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 50) = 0u;
  v8 = (uint64_t *)&v5[*(int *)(v2 + 20)];
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(v2 + 24);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v5[v9] = MEMORY[0x24264B578](v10);
  sub_23DF89384((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  if (qword_256D1D390 != -1)
    swift_once();
  v11 = qword_256D346B0;
  sub_23DF73E10((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF73E10((uint64_t)v5, a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C0) + 48)) = v11;
  swift_retain_n();
  sub_23DF73E54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  swift_release();
  return sub_23DF73E54((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
}

uint64_t sub_23E045184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_23E136390();
  *(_QWORD *)(a1 + 8) = 0x4024000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22640);
  return sub_23E042428(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_23E0451D8()
{
  return sub_23E045A8C((uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView, (uint64_t (*)(uint64_t))sub_23E04474C);
}

uint64_t sub_23E0451EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E044C4C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23E0451F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22680;
  if (!qword_256D22680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22670);
    v2[0] = sub_23E045278();
    v2[1] = sub_23DF89B88(&qword_256D222B8, &qword_256D222C0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22680);
  }
  return result;
}

unint64_t sub_23E045278()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_256D22688;
  if (!qword_256D22688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22668);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22658);
    v3 = sub_23E135F4C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22650);
    sub_23DF89B88(&qword_256D22690, &qword_256D22650, MEMORY[0x24BDF1A30]);
    v4[2] = v2;
    v4[3] = v3;
    v4[4] = swift_getOpaqueTypeConformance2();
    v4[5] = MEMORY[0x24BDEC9F8];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_23DF89B88(&qword_256D22698, &qword_256D226A0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_256D22688);
  }
  return result;
}

uint64_t sub_23E04538C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E043E40(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23E045394()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D226B8;
  if (!qword_256D226B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D226B0);
    v2[0] = sub_23E045418();
    v2[1] = sub_23DF89B88(&qword_256D22700, &qword_256D22708, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D226B8);
  }
  return result;
}

unint64_t sub_23E045418()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D226C0;
  if (!qword_256D226C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D226C8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D226D0);
    v2[3] = sub_23E0454C4();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88(&qword_256D226F0, &qword_256D226F8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D226C0);
  }
  return result;
}

unint64_t sub_23E0454C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_256D226D8;
  if (!qword_256D226D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D226D0);
    v2[1] = type metadata accessor for AlarmCell();
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E8E0);
    v2[3] = sub_23DF73F28(&qword_256D226E0, (uint64_t (*)(uint64_t))type metadata accessor for AlarmCell, (uint64_t)&unk_23E13DD00);
    v2[4] = sub_23DF89B88(&qword_256D226E8, &qword_256D1E8E0, MEMORY[0x24BDF43B0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4A08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D226D8);
  }
  return result;
}

uint64_t sub_23E0455AC()
{
  uint64_t v0;
  uint64_t result;

  sub_23E136C24();
  v0 = sub_23E136C60();
  result = swift_release();
  qword_256D346B0 = v0;
  return result;
}

uint64_t sub_23E0455F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23E1360FC();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23E045620()
{
  return sub_23E136108();
}

uint64_t sub_23E045654()
{
  uint64_t v0;

  return sub_23E044364(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23E04565C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E134F2C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E0456BC()
{
  return sub_23E045A8C((uint64_t (*)(_QWORD))MEMORY[0x24BE4D920], sub_23E0444E0);
}

uint64_t sub_23E0456D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E134F2C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E045744()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23E134F2C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23DF83188;
  return sub_23E044630();
}

uint64_t sub_23E0457D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for AlarmsControlView();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();

  v3 = v0 + v2;
  sub_23DF985F0(*(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v2 + 8), *(_QWORD *)(v0 + v2 + 16), *(_QWORD *)(v0 + v2 + 24), *(_QWORD *)(v0 + v2 + 32), *(_QWORD *)(v0 + v2 + 40), *(_QWORD *)(v0 + v2 + 48), *(_QWORD *)(v0 + v2 + 56), *(_BYTE *)(v0 + v2 + 64), *(_BYTE *)(v0 + v2 + 65));
  if ((*(_BYTE *)(v0 + v2 + 112) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v2 + 72);
  else
    swift_release();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 28);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 32);
  v7 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23E0458E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AlarmsControlView() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23DFA67E4;
  return sub_23E044A04(a1, v5, v6, v7, v8);
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AlarmsControlView();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  sub_23DF985F0(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64), *(_BYTE *)(v2 + 65));
  if ((*(_BYTE *)(v2 + 112) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v2 + 72);
  else
    swift_release();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 28);
  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + *(int *)(v1 + 32);
  v6 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_23E045A78()
{
  return sub_23E045A8C((uint64_t (*)(_QWORD))type metadata accessor for AlarmsControlView, sub_23E043BA4);
}

uint64_t sub_23E045A8C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_23E045ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E043C90(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23E045ADC()
{
  return sub_23DF89B88(&qword_256D22760, &qword_256D22768, MEMORY[0x24BDF4700]);
}

_QWORD *sub_23E045B08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_6:
    swift_retain();
    return a1;
  }
  v7 = sub_23E134F2C();
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  if ((*((_BYTE *)a2 + v8 + 40) & 1) == 0)
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[40] = 0;
    goto LABEL_6;
  }
  v11 = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 24) = v11;
  (**(void (***)(char *))(v11 - 8))(v9);
  v9[40] = 1;
  return a1;
}

uint64_t sub_23E045BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    return __swift_destroy_boxed_opaque_existential_0Tm(v5);
  else
    return swift_release();
}

uint64_t sub_23E045C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v6 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(a2 + v7 + 40);
  if ((v10 & 1) != 0)
  {
    v11 = *(_OWORD *)(v9 + 24);
    *(_OWORD *)(v8 + 24) = v11;
    (**(void (***)(uint64_t))(v11 - 8))(v8);
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_retain();
  }
  *(_BYTE *)(v8 + 40) = v10;
  return a1;
}

uint64_t sub_23E045CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    sub_23DF89C7C(a1 + v7, qword_256D1E720);
    if ((*(_BYTE *)(v9 + 40) & 1) != 0)
    {
      v10 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 24) = v10;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v8, v9);
      *(_BYTE *)(v8 + 40) = 1;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_BYTE *)(v8 + 40) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_23E045D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v9 + 25);
  return a1;
}

uint64_t sub_23E045DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)(a2 + v7);
    v9 = (_OWORD *)(a1 + v7);
    sub_23DF89C7C(a1 + v7, qword_256D1E720);
    v10 = v8[1];
    *v9 = *v8;
    v9[1] = v10;
    *(_OWORD *)((char *)v9 + 25) = *(_OWORD *)((char *)v8 + 25);
  }
  return a1;
}

uint64_t sub_23E045E68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E045E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23E134F2C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 40);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23E045EF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E045EFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E134F2C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 40) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for AlarmCell()
{
  uint64_t result;

  result = qword_256D227C8;
  if (!qword_256D227C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E045FB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134F2C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E046024()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E046034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  char *v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;

  v92 = a1;
  v2 = sub_23E13660C();
  v90 = *(_QWORD *)(v2 - 8);
  v91 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v89 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v80);
  v84 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22800);
  MEMORY[0x24BDAC7A8](v5);
  v82 = (uint64_t *)((char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22808);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22810);
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E134BC0();
  v78 = *(_QWORD *)(v10 - 8);
  v79 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v77 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_23E134B9C();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_23E134BA8();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23E134BD8();
  v70 = *(_QWORD *)(v76 - 8);
  v16 = MEMORY[0x24BDAC7A8](v76);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v70 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v75 = (char *)&v70 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0C8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23E134C20();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v70 - v31;
  v81 = v1;
  sub_23E134EF0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_23DF89C7C((uint64_t)v25, &qword_256D1F0C8);
    sub_23E13630C();
    v33 = sub_23E136924();
    v35 = v34;
    v37 = v36;
    v39 = v38;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v32, v25, v26);
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 16))(v30, v32, v26);
    MEMORY[0x242649370](v40);
    sub_23E134B90();
    sub_23E134B84();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v13, v74);
    sub_23E134B78();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v15, v72);
    v41 = *(void (**)(char *, uint64_t))(v70 + 8);
    v42 = v76;
    v41(v18, v76);
    v43 = v77;
    sub_23E134BB4();
    sub_23E134BCC();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v79);
    v41(v21, v42);
    sub_23DF73F28(&qword_256D22830, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
    sub_23DF73F28(&qword_256D22838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    v33 = sub_23E136918();
    v35 = v44;
    v37 = v45;
    v39 = v46;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v26);
  }
  v47 = v37 & 1;
  v48 = sub_23E136FE4();
  v49 = (uint64_t)v82;
  *v82 = v48;
  *(_QWORD *)(v49 + 8) = v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22818);
  sub_23E046708(v81, v33, v35, v37 & 1, v39, v49 + *(int *)(v51 + 44));
  v52 = v84;
  v53 = &v84[*(int *)(v80 + 20)];
  v54 = *MEMORY[0x24BDEEB68];
  v55 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
  __asm { FMOV            V0.2D, #10.0 }
  *v52 = _Q0;
  v61 = v85;
  v62 = (uint64_t)v83;
  v63 = (uint64_t)&v83[*(int *)(v85 + 36)];
  v64 = MEMORY[0x24BDED998];
  sub_23DF73E10((uint64_t)v52, v63, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
  sub_23DF89C1C(v49, v62, &qword_256D22800);
  sub_23DF73E54((uint64_t)v52, (uint64_t (*)(_QWORD))v64);
  sub_23DF89C7C(v49, &qword_256D22800);
  v65 = v89;
  sub_23E136600();
  v66 = sub_23E047ED8();
  v67 = v86;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v65, v91);
  sub_23DF89C7C(v62, &qword_256D22808);
  v93 = v61;
  v94 = v66;
  swift_getOpaqueTypeConformance2();
  v68 = v88;
  sub_23E136A68();
  sub_23DFA055C(v33, v35, v47);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v67, v68);
}

uint64_t sub_23E046708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[12];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a3;
  v42 = a5;
  v38 = a4;
  v39 = a1;
  v40 = a2;
  v43 = a6;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22840);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22848);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v37[-v13];
  v15 = type metadata accessor for ControlBackgroundView();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = &v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v37[-v19];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 50) = 0u;
  v21 = (uint64_t *)&v18[*(int *)(v15 + 20)];
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v22 = *(int *)(v15 + 24);
  v23 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v18[v22] = MEMORY[0x24264B578](v23);
  sub_23DF89384((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  *(_QWORD *)v8 = sub_23E1362D0();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22850);
  sub_23E046A14(v39, v40, v41, v38 & 1, v42, &v8[*(int *)(v24 + 44)]);
  LOBYTE(v22) = sub_23E13672C();
  sub_23E135D00();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  sub_23DF89C1C((uint64_t)v8, (uint64_t)v12, &qword_256D22840);
  v33 = &v12[*(int *)(v9 + 36)];
  *v33 = v22;
  *((_QWORD *)v33 + 1) = v26;
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v30;
  *((_QWORD *)v33 + 4) = v32;
  v33[40] = 0;
  sub_23DF89C7C((uint64_t)v8, &qword_256D22840);
  sub_23DF89340((uint64_t)v12, (uint64_t)v14, &qword_256D22848);
  sub_23DF73E10((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89C1C((uint64_t)v14, (uint64_t)v12, &qword_256D22848);
  v34 = v43;
  sub_23DF73E10((uint64_t)v18, v43, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22858);
  sub_23DF89C1C((uint64_t)v12, v34 + *(int *)(v35 + 48), &qword_256D22848);
  sub_23DF89C7C((uint64_t)v14, &qword_256D22848);
  sub_23DF73E54((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89C7C((uint64_t)v12, &qword_256D22848);
  return sub_23DF73E54((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
}

uint64_t sub_23E046A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  void (*v103)(char *, uint64_t);
  uint64_t v105;
  int v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  _BYTE v153[24];
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  __int128 v160;
  _OWORD v161[2];
  _OWORD v162[2];
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  char v178;
  __int128 v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  __int128 v184;

  v144 = a5;
  v145 = a3;
  v141 = a2;
  v129 = a6;
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22860);
  v8 = MEMORY[0x24BDAC7A8](v126);
  v130 = (uint64_t)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v128 = (char *)&v105 - v10;
  v11 = sub_23E13636C();
  v123 = *(_QWORD *)(v11 - 8);
  v124 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v122 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E13660C();
  v116 = *(_QWORD *)(v13 - 8);
  v117 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v111 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22868);
  v16 = *(_QWORD *)(v15 - 8);
  v112 = v15;
  v113 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v108 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22870);
  v19 = *(_QWORD *)(v18 - 8);
  v114 = v18;
  v115 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v110 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22878);
  v21 = MEMORY[0x24BDAC7A8](v121);
  v140 = (uint64_t)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v109 = (char *)&v105 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v120 = (char *)&v105 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v119 = (char *)&v105 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v138 = (uint64_t)&v105 - v29;
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22880);
  v136 = *(_QWORD *)(v125 - 8);
  v30 = MEMORY[0x24BDAC7A8](v125);
  v139 = (char *)&v105 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v143 = (char *)&v105 - v32;
  v33 = type metadata accessor for AlarmCell();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  MEMORY[0x24BDAC7A8](v33);
  v107 = (char *)v35;
  v36 = (char *)&v105 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22888);
  v142 = *(_QWORD **)(v135 - 8);
  v37 = MEMORY[0x24BDAC7A8](v135);
  v134 = (char *)&v105 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v105 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v105 - v42;
  v44 = sub_23E136384();
  v127 = a4;
  v106 = a4 & 1;
  v137 = a1;
  sub_23E047758((uint64_t)&v160);
  v45 = v161[0];
  v46 = *((_QWORD *)&v161[0] + 1);
  v47 = v162[0];
  v48 = *((_QWORD *)&v162[0] + 1);
  v49 = v160;
  v50 = v161[1];
  v160 = (unint64_t)v44;
  LOBYTE(v161[0]) = 1;
  *(_OWORD *)((char *)v161 + 8) = v49;
  BYTE8(v161[1]) = v45;
  *(_QWORD *)&v162[0] = v46;
  *(_OWORD *)((char *)v162 + 8) = v50;
  BYTE8(v162[1]) = v47;
  *(_QWORD *)&v163 = v48;
  WORD4(v163) = 256;
  *(_QWORD *)&v164 = 0x4000000000000000;
  BYTE8(v164) = 0;
  sub_23DF73E10(a1, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  v105 = *(unsigned __int8 *)(v34 + 80);
  v51 = (v105 + 16) & ~v105;
  v131 = v105 | 7;
  v132 = v51 + v35;
  v52 = swift_allocObject();
  sub_23DF89384((uint64_t)v36, v52 + v51, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22890);
  sub_23E047F8C();
  sub_23E1369CC();
  swift_release();
  v53 = *((_QWORD *)&v162[0] + 1);
  v54 = *(_QWORD *)&v162[1];
  v55 = BYTE8(v162[1]);
  sub_23DFA055C(*((uint64_t *)&v161[0] + 1), *(uint64_t *)&v161[1], SBYTE8(v161[1]));
  swift_bridgeObjectRelease();
  sub_23DFA055C(v53, v54, v55);
  swift_bridgeObjectRelease();
  v56 = (void (*)(char *, char *, uint64_t))v142[4];
  v133 = v43;
  v56(v43, v41, v135);
  v57 = sub_23E136C30();
  sub_23E136FE4();
  sub_23E136060();
  v159 = v168;
  v158 = v170;
  v157 = v172;
  v156 = v174;
  v155 = v176;
  v154 = v178;
  *(_QWORD *)&v146 = v57;
  WORD4(v146) = 256;
  BYTE10(v146) = 0;
  *(_QWORD *)&v147 = 0x3FF0000000000000;
  *((_QWORD *)&v147 + 1) = v167;
  LOBYTE(v148) = v168;
  *((_QWORD *)&v148 + 1) = v169;
  LOBYTE(v149) = v170;
  *((_QWORD *)&v149 + 1) = v171;
  LOBYTE(v150) = v172;
  *((_QWORD *)&v150 + 1) = v173;
  LOBYTE(v151) = v174;
  *((_QWORD *)&v151 + 1) = v175;
  LOBYTE(v152) = v176;
  *((_QWORD *)&v152 + 1) = v177;
  v153[0] = v178;
  *(_OWORD *)&v153[8] = v179;
  v58 = v137;
  sub_23DF73E10(v137, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  v59 = swift_allocObject();
  v118 = v51;
  sub_23DF89384((uint64_t)v36, v59 + v51, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D228D0);
  sub_23E048134();
  sub_23E1369CC();
  swift_release();
  v164 = v152;
  v165 = *(_OWORD *)v153;
  v166 = *(_QWORD *)&v153[16];
  v161[1] = v148;
  v162[0] = v149;
  v162[1] = v150;
  v163 = v151;
  v160 = v146;
  v161[0] = v147;
  sub_23E0481B8((uint64_t)&v160);
  sub_23DF73E10(v58, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  sub_23E1372C0();
  v60 = sub_23E1372B4();
  v61 = (v105 + 32) & ~v105;
  v62 = swift_allocObject();
  v63 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v62 + 16) = v60;
  *(_QWORD *)(v62 + 24) = v63;
  sub_23DF89384((uint64_t)v36, v62 + v61, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  sub_23DF73E10(v58, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  v64 = sub_23E1372B4();
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v64;
  *(_QWORD *)(v65 + 24) = v63;
  v107 = v36;
  sub_23DF89384((uint64_t)v36, v65 + v61, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  sub_23E136E94();
  v66 = v146;
  LOBYTE(v41) = v147;
  swift_retain();
  swift_retain();
  v67 = v108;
  sub_23E136E34();
  v68 = v111;
  sub_23E1365E8();
  v69 = sub_23DF89B88(&qword_256D228F0, &qword_256D22868, MEMORY[0x24BDF46D0]);
  v70 = v110;
  v71 = v112;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v68, v117);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v67, v71);
  *(_QWORD *)&v146 = v71;
  *((_QWORD *)&v146 + 1) = v69;
  v72 = (uint64_t)v109;
  swift_getOpaqueTypeConformance2();
  v73 = v114;
  sub_23E136A68();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v70, v73);
  v116 = *((_QWORD *)&v66 + 1);
  v117 = v66;
  v146 = v66;
  LOBYTE(v147) = (_BYTE)v41;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D228F8);
  MEMORY[0x24264B734](&v180, v74);
  *(_QWORD *)&v146 = sub_23E1371A0();
  *((_QWORD *)&v146 + 1) = v75;
  sub_23DF8DC18();
  v76 = (uint64_t)v120;
  sub_23E135FB8();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v72, &qword_256D22878);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9C0);
  v77 = v123;
  v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_23E138050;
  sub_23E136360();
  *(_QWORD *)&v146 = v78;
  sub_23DF73F28(&qword_256D1D9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9D0);
  sub_23DF89B88(&qword_256D1D9D8, &qword_256D1D9D0, MEMORY[0x24BEE12C8]);
  v79 = v122;
  v80 = v124;
  sub_23E1374F4();
  v81 = (uint64_t)v119;
  sub_23E135FD0();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v80);
  sub_23DF89C7C(v76, &qword_256D22878);
  v82 = v138;
  sub_23DF89340(v81, v138, &qword_256D22878);
  v83 = sub_23E136C30();
  sub_23E136FE4();
  sub_23E135E5C();
  *(_QWORD *)&v146 = v83;
  WORD4(v146) = 256;
  BYTE10(v146) = 0;
  *(_QWORD *)&v147 = v180;
  BYTE8(v147) = v181;
  *(_QWORD *)&v148 = v182;
  BYTE8(v148) = v183;
  v149 = v184;
  v84 = (uint64_t)v107;
  sub_23DF73E10(v137, (uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  v85 = swift_allocObject();
  sub_23DF89384(v84, v85 + v118, (uint64_t (*)(_QWORD))type metadata accessor for AlarmCell);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22900);
  sub_23E0483D0();
  v86 = (uint64_t)v128;
  sub_23E1369CC();
  swift_release();
  swift_release();
  v87 = sub_23E136FE4();
  v89 = v88;
  v90 = v86 + *(int *)(v126 + 36);
  sub_23E047C80(v141, v145, v127 & 1, v144);
  v91 = (uint64_t *)(v90 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D22910) + 36));
  *v91 = v87;
  v91[1] = v89;
  v92 = (void (*)(char *, char *, uint64_t))v142[2];
  v93 = v134;
  v94 = v135;
  v92(v134, v133, v135);
  v95 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
  v96 = v139;
  v97 = v125;
  v95(v139, v143, v125);
  sub_23DF89C1C(v82, v140, &qword_256D22878);
  v98 = v130;
  sub_23DF89C1C(v86, v130, &qword_256D22860);
  v99 = v129;
  v92(v129, v93, v94);
  v100 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D22918);
  v95(&v99[v100[12]], v96, v97);
  v101 = v140;
  sub_23DF89C1C(v140, (uint64_t)&v99[v100[16]], &qword_256D22878);
  sub_23DF89C1C(v98, (uint64_t)&v99[v100[20]], &qword_256D22860);
  swift_release();
  swift_release();
  sub_23DF89C7C(v86, &qword_256D22860);
  sub_23DF89C7C(v138, &qword_256D22878);
  v102 = *(void (**)(char *, uint64_t))(v136 + 8);
  v102(v143, v97);
  v103 = (void (*)(char *, uint64_t))v142[1];
  v103(v133, v94);
  sub_23DF89C7C(v98, &qword_256D22860);
  sub_23DF89C7C(v101, &qword_256D22878);
  v102(v139, v97);
  return ((uint64_t (*)(char *, uint64_t))v103)(v134, v94);
}

uint64_t sub_23E047758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23E0479CC();
  sub_23DF8DC18();
  v2 = sub_23E13693C();
  v4 = v3;
  v6 = v5 & 1;
  sub_23E136834();
  sub_23E1367B0();
  swift_release();
  v7 = sub_23E136900();
  v9 = v8;
  v11 = v10;
  swift_release();
  v12 = v11 & 1;
  sub_23DFA055C(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_23E136540();
  v13 = sub_23E1368DC();
  v31 = v14;
  v32 = v13;
  v33 = v15;
  v17 = v16 & 1;
  sub_23DFA055C(v7, v9, v12);
  swift_bridgeObjectRelease();
  sub_23E1367BC();
  sub_23E1367B0();
  swift_release();
  sub_23E13678C();
  swift_release();
  v18 = sub_23E136900();
  v20 = v19;
  v22 = v21;
  swift_release();
  LOBYTE(v7) = v22 & 1;
  sub_23E136534();
  v23 = sub_23E1368DC();
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  sub_23DFA055C(v18, v20, v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v32;
  *(_QWORD *)(a1 + 8) = v31;
  *(_BYTE *)(a1 + 16) = v17;
  *(_QWORD *)(a1 + 24) = v33;
  *(_QWORD *)(a1 + 32) = v23;
  *(_QWORD *)(a1 + 40) = v25;
  *(_BYTE *)(a1 + 48) = v29;
  *(_QWORD *)(a1 + 56) = v27;
  sub_23DFA056C(v32, v31, v17);
  swift_bridgeObjectRetain();
  sub_23DFA056C(v23, v25, v29);
  swift_bridgeObjectRetain();
  sub_23DFA055C(v23, v25, v29);
  swift_bridgeObjectRelease();
  sub_23DFA055C(v32, v31, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0479CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = sub_23E134EC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E134EFC();
  if (!v5)
    v4 = sub_23E1371A0();
  v6 = v4;
  v7 = v5;
  sub_23E134ECC();
  v8 = sub_23E134EB4();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v10 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v10)
  {
    v14 = v6;
    v15 = v7;
    swift_bridgeObjectRetain();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    v12 = v14;
    v11 = v15;
    sub_23E134ECC();
    sub_23E134EA8();
    v9(v3, v0);
    v14 = v12;
    v15 = v11;
    swift_bridgeObjectRetain();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }
  return v6;
}

uint64_t sub_23E047B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v0 = sub_23E134C80();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AlarmCell();
  sub_23DF9C9A0((uint64_t)v11);
  v7 = v12;
  v8 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_23E134EE4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
  sub_23E134ED8();
  (*(void (**)(char *, char *, uint64_t, uint64_t))(v8 + 16))(v6, v3, v7, v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_23DF89C7C((uint64_t)v6, &qword_256D1D7E8);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
}

uint64_t sub_23E047C80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned __int8 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  _DWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  __int16 v35;

  v25 = a2;
  v26 = a4;
  v23[1] = a3;
  v24 = a1;
  v4 = sub_23E13660C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22920);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E136378();
  sub_23E047E4C((uint64_t)&v27);
  v13 = v27;
  v14 = v28;
  v15 = v30;
  v16 = v31;
  v17 = *((_QWORD *)&v31 + 1);
  v18 = v32;
  v19 = v29;
  v27 = v12;
  v28 = 0;
  LOBYTE(v29) = 1;
  *((_QWORD *)&v29 + 1) = v13;
  LOBYTE(v30) = v14;
  v31 = v19;
  v32 = v15;
  v33 = v16;
  v34 = v17;
  v35 = v18;
  sub_23E1365E8();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22928);
  v21 = sub_23E04843C();
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  swift_release();
  swift_release();
  v27 = v20;
  v28 = v21;
  swift_getOpaqueTypeConformance2();
  sub_23E136A68();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23E047E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t result;

  v2 = sub_23E136CB4();
  v3 = sub_23E136834();
  KeyPath = swift_getKeyPath();
  result = sub_23E136540();
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = KeyPath;
  *(_QWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

unint64_t sub_23E047ED8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22820;
  if (!qword_256D22820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22808);
    v2[0] = sub_23DF89B88(&qword_256D22828, &qword_256D22800, MEMORY[0x24BDF4750]);
    v2[1] = sub_23DF89B88(&qword_256D1E110, &qword_256D1E0F8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22820);
  }
  return result;
}

unint64_t sub_23E047F8C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22898;
  if (!qword_256D22898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22890);
    v2[0] = sub_23E048028(&qword_256D228A0, &qword_256D228A8, (uint64_t (*)(void))sub_23E0480AC);
    v2[1] = sub_23DF89B88(&qword_256D219C0, &qword_256D219C8, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22898);
  }
  return result;
}

uint64_t sub_23E048028(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23DF89B88(&qword_256D222B8, &qword_256D222C0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E0480AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D228B0;
  if (!qword_256D228B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D228B8);
    v2[0] = sub_23DF89B88(&qword_256D228C0, &qword_256D228C8, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D228B0);
  }
  return result;
}

unint64_t sub_23E048134()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D228D8;
  if (!qword_256D228D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D228D0);
    v2[0] = sub_23E048028(&qword_256D228E0, &qword_256D228E8, (uint64_t (*)(void))sub_23E013E4C);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D228D8);
  }
  return result;
}

uint64_t sub_23E0481B8(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_23E0481E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AlarmCell();
  result = sub_23E134F14();
  *a1 = result & 1;
  return result;
}

uint64_t objectdestroy_9Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for AlarmCell();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v5);
  else
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0482C8()
{
  type metadata accessor for AlarmCell();
  return sub_23E134F20();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for AlarmCell();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23E134F2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v5);
  else
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0483A0()
{
  type metadata accessor for AlarmCell();
  return sub_23E047B30();
}

unint64_t sub_23E0483D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22908;
  if (!qword_256D22908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22900);
    v2[0] = sub_23E013E4C();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22908);
  }
  return result;
}

unint64_t sub_23E04843C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22930;
  if (!qword_256D22930)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22928);
    v2[0] = sub_23DF89B88(&qword_256D22938, &qword_256D22940, MEMORY[0x24BDF4700]);
    v2[1] = sub_23E0484C0();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22930);
  }
  return result;
}

unint64_t sub_23E0484C0()
{
  unint64_t result;

  result = qword_256D22948;
  if (!qword_256D22948)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF08F0], MEMORY[0x24BDF0900]);
    atomic_store(result, (unint64_t *)&qword_256D22948);
  }
  return result;
}

unint64_t sub_23E048510()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D22950;
  if (!qword_256D22950)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22958);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22808);
    v2[3] = sub_23E047ED8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22950);
  }
  return result;
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v6[5];

  v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v2, v3);
  LOBYTE(v3) = sub_23E134CA4();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  return v3 & 1;
}

uint64_t storeEnumTagSinglePayload for ControlCenterFeatures(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E048658 + 4 * byte_23E13DDE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E048678 + 4 * byte_23E13DDE5[v4]))();
}

_BYTE *sub_23E048658(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E048678(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E048680(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E048688(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E048690(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E048698(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ControlCenterFeatures()
{
  return &type metadata for ControlCenterFeatures;
}

unint64_t sub_23E0486B8()
{
  unint64_t result;

  result = qword_256D22960;
  if (!qword_256D22960)
  {
    result = MEMORY[0x24264C55C](&unk_23E13DE48, &type metadata for ControlCenterFeatures);
    atomic_store(result, (unint64_t *)&qword_256D22960);
  }
  return result;
}

const char *sub_23E0486FC()
{
  return "ControlCenter";
}

const char *sub_23E048710()
{
  return "NewControls";
}

uint64_t *sub_23E048724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)v4 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23E0487E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23E048844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E0488D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  return a1;
}

uint64_t sub_23E04899C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t sub_23E048A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)v14;
  swift_release();
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_release();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  return a1;
}

uint64_t sub_23E048AB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E048AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E048B48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E048B54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t _s16BrightnessSliderVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D229C0);
}

void sub_23E048BE8()
{
  unint64_t v0;

  sub_23E00F378();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23E048C64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E048C74@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t (*v25)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  uint64_t (*v42)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  __int128 v53;

  v2 = v1;
  v40 = a1;
  v39 = sub_23E13660C();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E136300();
  MEMORY[0x24BDAC7A8](v4);
  v5 = _s6SliderVMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BB0);
  MEMORY[0x24BDAC7A8](v34);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BB8);
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10((uint64_t)v2, (uint64_t)v8, _s6SliderVMa);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v32 = ((v12 + 16) & ~v12) + v7;
  v13 = (v12 + 16) & ~v12;
  v33 = v13;
  v31 = v12 | 7;
  v14 = swift_allocObject();
  sub_23E04AE24((uint64_t)v8, v14 + v13);
  sub_23E136FE4();
  sub_23E135E5C();
  v42 = sub_23E04BC64;
  v43 = v14;
  v44 = v49;
  v45 = v50;
  v46 = v51;
  v47 = v52;
  v48 = v53;
  sub_23E1362F4();
  sub_23E1362E8();
  v15 = v2[1];
  v16 = v2[2];
  v41[1] = *v2;
  v41[2] = v15;
  v41[3] = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BC0);
  MEMORY[0x24264B734](v41, v17);
  sub_23E1362DC();
  sub_23E1362E8();
  sub_23E136318();
  v18 = sub_23E136924();
  v20 = v19;
  LOBYTE(v6) = v21 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BC8);
  sub_23E04BCB0();
  sub_23E1369F0();
  sub_23DFA055C(v18, v20, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v22 = v35;
  sub_23E1365F4();
  v23 = sub_23E04BD34();
  v24 = v30;
  v25 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v34;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
  sub_23DF89C7C((uint64_t)v10, &qword_256D22BB0);
  sub_23DF73E10((uint64_t)v2, (uint64_t)v8, _s6SliderVMa);
  v26 = swift_allocObject();
  sub_23E04AE24((uint64_t)v8, v26 + v33);
  v42 = v25;
  v43 = v23;
  swift_getOpaqueTypeConformance2();
  v27 = v36;
  sub_23E136B10();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v24, v27);
}

uint64_t sub_23E0490E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a3;
  v5 = _s6SliderVMa(0);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23E135EA4();
  v8 = *(_QWORD *)(v32 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v32);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E136498();
  MEMORY[0x24BDAC7A8](v11);
  v37 = sub_23E135D90();
  v39 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201B0);
  v15 = *(_QWORD *)(v14 - 8);
  v40 = v14;
  v41 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v33 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BF0);
  MEMORY[0x24BDAC7A8](v38);
  v18 = (uint64_t *)((char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v18 = sub_23E136FE4();
  v18[1] = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BF8);
  sub_23E049480(a2, (uint64_t)v18 + *(int *)(v20 + 44));
  sub_23E1365A0();
  sub_23E135D6C();
  v21 = a1;
  v22 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v21, v32);
  v23 = v34;
  sub_23DF73E10((uint64_t)a2, v34, _s6SliderVMa);
  v24 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v25 = (v9 + *(unsigned __int8 *)(v35 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v26 + v24, v10, v22);
  sub_23E04AE24(v23, v26 + v25);
  sub_23DF73F28(&qword_256D201D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_23DF73F28(&qword_256D201D8, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  v27 = v33;
  v28 = v37;
  sub_23E136F30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v28);
  sub_23E135DA8();
  sub_23DF89B88(&qword_256D22C00, &qword_256D22BF0, MEMORY[0x24BDF4750]);
  sub_23DF89B88(&qword_256D201E0, &qword_256D201B0, MEMORY[0x24BDED570]);
  v29 = v40;
  sub_23E136B58();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v29);
  return sub_23DF89C7C((uint64_t)v18, &qword_256D22BF0);
}

uint64_t sub_23E049480@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  char v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22C08);
  MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E136EE8();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22C10);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E136FF0();
  v27 = v12;
  v28 = v11;
  sub_23E0496C8(a1, (uint64_t)v31);
  v14 = v31[0];
  v13 = v31[1];
  v15 = v31[2];
  v16 = v31[3];
  v17 = v32;
  v18 = v33;
  v26 = v34;
  v24 = v36;
  v25 = v35;
  v19 = *MEMORY[0x24BDEEB68];
  v20 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v7, v19, v20);
  sub_23DF73E10((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
  *(_WORD *)&v4[*(int *)(v29 + 36)] = 256;
  sub_23DF89C1C((uint64_t)v4, (uint64_t)&v10[*(int *)(v8 + 36)], &qword_256D22C08);
  v21 = v27;
  *(_QWORD *)v10 = v28;
  *((_QWORD *)v10 + 1) = v21;
  *((_QWORD *)v10 + 2) = v14;
  *((_QWORD *)v10 + 3) = v13;
  *((_QWORD *)v10 + 4) = v15;
  *((_QWORD *)v10 + 5) = v16;
  v10[48] = v17;
  *((_QWORD *)v10 + 7) = v18;
  v10[64] = v26;
  v22 = v24;
  *((_QWORD *)v10 + 9) = v25;
  *((_QWORD *)v10 + 10) = v22;
  swift_retain();
  swift_retain();
  sub_23DF89C7C((uint64_t)v4, &qword_256D22C08);
  sub_23DF73E54((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
  swift_release();
  swift_release();
  sub_23E04C0E8();
  sub_23E1369FC();
  return sub_23DF89C7C((uint64_t)v10, &qword_256D22C10);
}

double sub_23E0496C8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  double result;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemFillColor);
  v5 = MEMORY[0x24264B488](v4);
  v6 = *(uint64_t *)((char *)a1 + *(int *)(_s6SliderVMa(0) + 28));
  v8 = a1[1];
  v9 = a1[2];
  v18 = *a1;
  v7 = v18;
  v19 = v8;
  v20 = v9;
  swift_retain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BC0);
  MEMORY[0x24264B734](&v17);
  v11 = 1.0 - v17;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  MEMORY[0x24264B734](&v17, v10);
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  v12 = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(double *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v14;
  *(_BYTE *)(a2 + 48) = v15;
  result = *(double *)&v22;
  *(_OWORD *)(a2 + 56) = v22;
  return result;
}

uint64_t sub_23E04980C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  char v15;
  void (*v16)(char *, uint64_t);
  double v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[4];

  v4 = sub_23E135F94();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v21 - v9;
  sub_23E135D84();
  v12 = v11;
  sub_23E135E80();
  v14 = v12 / v13;
  _s6SliderVMa(0);
  sub_23DF9D18C((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BDED100], v4);
  v15 = sub_23E135F88();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  v17 = 1.0 - v14;
  if ((v15 & 1) != 0)
    v17 = v14;
  if (v17 < 0.0)
    v17 = 0.0;
  v18 = a3[1];
  v19 = a3[2];
  v21[1] = *a3;
  v21[2] = v18;
  v21[3] = v19;
  v21[0] = fmin(v17, 1.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BC0);
  return sub_23E136E70();
}

uint64_t sub_23E049970(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;

  v4 = sub_23E1366D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x24BDF1140])
  {
    v9 = *a2;
    v10 = a2[1];
    v11 = a2[2];
    v14 = *a2;
    v15 = v10;
    v16 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BC0);
    MEMORY[0x24264B734](&v17);
    v12 = fmin(v17 + 0.1, 1.0);
LABEL_6:
    v14 = v9;
    v15 = v10;
    v16 = v11;
    v17 = v12;
    return sub_23E136E70();
  }
  if (v8 == *MEMORY[0x24BDF1138])
  {
    v9 = *a2;
    v10 = a2[1];
    v11 = a2[2];
    v14 = *a2;
    v15 = v10;
    v16 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D22BC0);
    MEMORY[0x24264B734](&v17);
    v12 = v17 + -0.1;
    if (v17 + -0.1 < 0.0)
      v12 = 0.0;
    goto LABEL_6;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23E049AF0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t result;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  v53 = a1;
  v55 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A18);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v56 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v54 = (uint64_t *)((char *)&v47 - v5);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A20);
  MEMORY[0x24BDAC7A8](v48);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A28);
  MEMORY[0x24BDAC7A8](v47);
  v57 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A30);
  v50 = *(_QWORD *)(v52 - 8);
  v9 = MEMORY[0x24BDAC7A8](v52);
  v51 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v47 - v11;
  v58 = sub_23E1371A0();
  v59 = v12;
  sub_23DF8DC18();
  sub_23E1374D0();
  swift_bridgeObjectRelease();
  sub_23E136834();
  v13 = sub_23E136900();
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  swift_release();
  v18 = v17 & 1;
  sub_23E1367F8();
  v19 = sub_23E1368AC();
  v21 = v20;
  v23 = v22 & 1;
  sub_23DFA055C(v13, v15, v18);
  swift_bridgeObjectRelease();
  sub_23E136C84();
  v24 = sub_23E1368D0();
  v26 = v25;
  LOBYTE(v13) = v27;
  v29 = v28;
  swift_release();
  sub_23DFA055C(v19, v21, v23);
  v30 = (uint64_t)v57;
  swift_bridgeObjectRelease();
  v58 = v24;
  v59 = v26;
  v60 = v13 & 1;
  v61 = v29;
  sub_23E1369FC();
  sub_23DFA055C(v24, v26, v13 & 1);
  swift_bridgeObjectRelease();
  v31 = *MEMORY[0x24BDECF38];
  v32 = sub_23E135F7C();
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v7, v31, v32);
  sub_23DF73F28((unint64_t *)&qword_256D22A38, v33, MEMORY[0x24BDECF78]);
  result = sub_23E137158();
  if ((result & 1) != 0)
  {
    sub_23E04AD6C();
    sub_23DF89B88(&qword_256D22A48, &qword_256D22A20, MEMORY[0x24BEE30C8]);
    v35 = v51;
    sub_23E136A44();
    sub_23DF89C7C((uint64_t)v7, &qword_256D22A20);
    sub_23DF89C7C(v30, &qword_256D22A28);
    v37 = v49;
    v36 = v50;
    v38 = v52;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v49, v35, v52);
    v39 = sub_23E1362D0();
    v40 = (uint64_t)v54;
    *v54 = v39;
    *(_QWORD *)(v40 + 8) = 0x4030000000000000;
    *(_BYTE *)(v40 + 16) = 0;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A50);
    sub_23E049F98(v53, v40 + *(int *)(v41 + 44));
    v42 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    v42(v35, v37, v38);
    v43 = v56;
    sub_23DF89C1C(v40, v56, &qword_256D22A18);
    v44 = v55;
    v42(v55, v35, v38);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A58);
    sub_23DF89C1C(v43, (uint64_t)&v44[*(int *)(v45 + 48)], &qword_256D22A18);
    sub_23DF89C7C(v40, &qword_256D22A18);
    v46 = *(void (**)(char *, uint64_t))(v36 + 8);
    v46(v37, v38);
    sub_23DF89C7C(v43, &qword_256D22A18);
    return ((uint64_t (*)(char *, uint64_t))v46)(v35, v38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23E049F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  _OWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(void);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t OpaqueTypeConformance2;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _OWORD *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  _OWORD *v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;

  v106 = a1;
  v134 = a2;
  v117 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v117);
  v115 = (char *)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A60);
  MEMORY[0x24BDAC7A8](v125);
  v122 = (uint64_t)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A68);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v109 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A70);
  MEMORY[0x24BDAC7A8](v111);
  v110 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A78);
  MEMORY[0x24BDAC7A8](v116);
  v114 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A80);
  MEMORY[0x24BDAC7A8](v121);
  v118 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A88);
  MEMORY[0x24BDAC7A8](v123);
  v119 = (uint64_t)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A90);
  v130 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v120 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A98);
  v11 = *(_QWORD *)(v10 - 8);
  v132 = v10;
  v133 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v124 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22AA0);
  v129 = *(_QWORD *)(v131 - 8);
  v13 = MEMORY[0x24BDAC7A8](v131);
  v126 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v127 = (char *)&v96 - v15;
  v107 = (void (*)(char *, uint64_t))sub_23E134B6C();
  v105 = *((_QWORD *)v107 - 1);
  MEMORY[0x24BDAC7A8](v107);
  v104 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E134C98();
  MEMORY[0x24BDAC7A8](v17);
  v101 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22AA8);
  v103 = *(_QWORD *)(v102 - 8);
  v19 = MEMORY[0x24BDAC7A8](v102);
  v100 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v135 = (char *)&v96 - v21;
  v97 = sub_23E135328();
  v22 = *(_QWORD *)(v97 - 8);
  v23 = MEMORY[0x24BDAC7A8](v97);
  v25 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v96 - v26;
  v28 = (int *)_s6SliderVMa(0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v136 = (_OWORD *)((char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v29);
  v137 = (uint64_t)&v96 - v31;
  v108 = _s16BrightnessSliderVMa(0);
  v99 = _s16ColorPickerStateCMa();
  v98 = sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
  sub_23E135F28();
  swift_getKeyPath();
  sub_23E135F34();
  swift_release();
  swift_release();
  v32 = v140;
  v33 = v141;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v34 = v97;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v97);
  v35 = sub_23E0A9F3C((uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v34);
  v36 = v136;
  *v136 = v32;
  *((_QWORD *)v36 + 2) = v33;
  v37 = (uint64_t *)((char *)v36 + v28[5]);
  v38 = (uint64_t)v36;
  *v37 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
  swift_storeEnumTagMultiPayload();
  v39 = (uint64_t *)(v38 + v28[6]);
  *v39 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v38 + v28[7]) = v35;
  *(_QWORD *)(v38 + v28[8]) = 0x4000000000000000;
  sub_23E04AE24(v38, v137);
  sub_23E134C8C();
  sub_23E04AE68();
  v40 = v100;
  sub_23E134B3C();
  v41 = v104;
  sub_23E134B60();
  v42 = v135;
  v43 = v102;
  MEMORY[0x242649418](v41, v102);
  (*(void (**)(char *, _QWORD *))(v105 + 8))(v41, v107);
  v44 = v103;
  v107 = *(void (**)(char *, uint64_t))(v103 + 8);
  v107(v40, v43);
  v105 = sub_23E13630C();
  sub_23E135F28();
  swift_getKeyPath();
  sub_23E135F34();
  swift_release();
  swift_release();
  v138 = v140;
  v139 = v141;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v42, v43);
  sub_23DF89B88(&qword_256D22AB8, &qword_256D22AA8, MEMORY[0x24BDCD478]);
  v45 = v109;
  sub_23E13705C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D214A8);
  sub_23E135DFC();
  sub_23E136FE4();
  sub_23E135E5C();
  v46 = v112;
  v47 = (uint64_t)v110;
  v48 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v110, v45, v113);
  v49 = (_OWORD *)(v47 + *(int *)(v111 + 36));
  v50 = v141;
  *v49 = v140;
  v49[1] = v50;
  v49[2] = v142;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v48);
  v51 = v115;
  v52 = &v115[*(int *)(v117 + 20)];
  v53 = *MEMORY[0x24BDEEB68];
  v54 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v52, v53, v54);
  __asm { FMOV            V0.2D, #8.0 }
  *v51 = _Q0;
  v60 = objc_msgSend((id)objc_opt_self(), sel_systemFillColor);
  v61 = MEMORY[0x24264B488](v60);
  v62 = v122;
  v63 = MEMORY[0x24BDED998];
  sub_23DF73E10((uint64_t)v51, v122, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)(v62 + *(int *)(v125 + 36)) = v61;
  sub_23DF73E54((uint64_t)v51, (uint64_t (*)(_QWORD))v63);
  v64 = sub_23E136FE4();
  v66 = v65;
  v67 = (uint64_t)v114;
  v68 = (uint64_t)&v114[*(int *)(v116 + 36)];
  sub_23DF89C1C(v62, v68, &qword_256D22A60);
  v69 = (uint64_t *)(v68 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D22AC0) + 36));
  *v69 = v64;
  v69[1] = v66;
  sub_23DF89C1C(v47, v67, &qword_256D22A70);
  sub_23DF89C7C(v62, &qword_256D22A60);
  sub_23DF89C7C(v47, &qword_256D22A70);
  v70 = v118;
  sub_23DF89C1C(v67, v118, &qword_256D22A78);
  v71 = v70 + *(int *)(v121 + 36);
  *(_QWORD *)v71 = 0x4024000000000000;
  *(_WORD *)(v71 + 8) = 0;
  sub_23DF89C7C(v67, &qword_256D22A78);
  KeyPath = swift_getKeyPath();
  v73 = v119;
  sub_23DF89C1C(v70, v119, &qword_256D22A80);
  v74 = v123;
  v75 = v73 + *(int *)(v123 + 36);
  *(_QWORD *)v75 = KeyPath;
  *(_BYTE *)(v75 + 8) = 1;
  sub_23DF89C7C(v70, &qword_256D22A80);
  v76 = sub_23E04AF44();
  v77 = v120;
  sub_23E136B4C();
  sub_23DF89C7C(v73, &qword_256D22A88);
  *(_QWORD *)&v138 = v74;
  *((_QWORD *)&v138 + 1) = v76;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v79 = v124;
  v80 = v128;
  sub_23E136A50();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v77, v80);
  *(_QWORD *)&v138 = v80;
  *((_QWORD *)&v138 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v81 = v126;
  v82 = v132;
  sub_23E1369B4();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v79, v82);
  v83 = v129;
  v84 = v127;
  v85 = v81;
  v86 = v131;
  (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v127, v81, v131);
  v87 = v136;
  v88 = v137;
  sub_23DF73E10(v137, (uint64_t)v136, _s6SliderVMa);
  v89 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v90 = v83;
  v91 = v86;
  v89(v85, v84, v86);
  v92 = v134;
  sub_23DF73E10((uint64_t)v87, v134, _s6SliderVMa);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22AF8);
  v89((char *)(v92 + *(int *)(v93 + 48)), v85, v91);
  v94 = *(void (**)(char *, uint64_t))(v90 + 8);
  v94(v84, v91);
  v107(v135, v43);
  sub_23DF73E54(v88, _s6SliderVMa);
  v94(v85, v91);
  return sub_23DF73E54((uint64_t)v87, _s6SliderVMa);
}

uint64_t sub_23E04AC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23E13660C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_23E136384();
  *((_QWORD *)v7 + 1) = 0x4014000000000000;
  v7[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A08);
  sub_23E049AF0(v0, &v7[*(int *)(v8 + 44)]);
  sub_23E1365F4();
  sub_23DF89B88(&qword_256D22A10, &qword_256D22A00, MEMORY[0x24BDF4700]);
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_23DF89C7C((uint64_t)v7, &qword_256D22A00);
}

unint64_t sub_23E04AD6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D22A40;
  if (!qword_256D22A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22A28);
    v2 = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D22A40);
  }
  return result;
}

uint64_t _s6SliderVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D22B60);
}

uint64_t sub_23E04AE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s6SliderVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E04AE68()
{
  unint64_t result;

  result = qword_256D22AB0;
  if (!qword_256D22AB0)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_256D22AB0);
  }
  return result;
}

uint64_t sub_23E04AEAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1361C8();
  *a1 = result;
  return result;
}

uint64_t sub_23E04AED4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1361C8();
  *a1 = result;
  return result;
}

uint64_t sub_23E04AEFC()
{
  return sub_23E1361D4();
}

uint64_t sub_23E04AF20()
{
  return sub_23E1361D4();
}

unint64_t sub_23E04AF44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22AC8;
  if (!qword_256D22AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22A88);
    v2[0] = sub_23E04AFC8();
    v2[1] = sub_23DF89B88(&qword_256D1FED0, &qword_256D1FED8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22AC8);
  }
  return result;
}

unint64_t sub_23E04AFC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22AD0;
  if (!qword_256D22AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22A80);
    v2[0] = sub_23E04B034();
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22AD0);
  }
  return result;
}

unint64_t sub_23E04B034()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22AD8;
  if (!qword_256D22AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22A78);
    v2[0] = sub_23E04B0B8();
    v2[1] = sub_23DF89B88(&qword_256D22AF0, &qword_256D22AC0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22AD8);
  }
  return result;
}

unint64_t sub_23E04B0B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22AE0;
  if (!qword_256D22AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22A70);
    v2[0] = sub_23DF89B88(&qword_256D22AE8, &qword_256D22A68, MEMORY[0x24BDF53E0]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22AE0);
  }
  return result;
}

uint64_t *sub_23E04B13C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_23E135F94();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23E04B2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23E135F94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_23E04B390(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23E135F94();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_23E135D60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  swift_retain();
  return a1;
}

_QWORD *sub_23E04B4E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_23DF89C7C((uint64_t)a1 + v6, &qword_256D1E718);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23E135F94();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = a3[6];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_23DF89C7C((uint64_t)a1 + v10, &qword_256D1DA20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_23E04B68C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23E135F94();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_23E135D60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  return a1;
}

_QWORD *sub_23E04B7D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_23DF89C7C((uint64_t)a1 + v6, &qword_256D1E718);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_23E135F94();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    v11 = a3[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_23DF89C7C((uint64_t)a1 + v11, &qword_256D1DA20);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_23E135D60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_23E04B970()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E04B97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D22B00);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_23E04BA24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E04BA30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D22B00);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23E04BAD4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E04BBA0(319, qword_256D22B70, (void (*)(uint64_t))MEMORY[0x24BDED130]);
  if (v0 <= 0x3F)
  {
    sub_23E04BBA0(319, qword_256D1E5C8, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23E04BBA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23E135D9C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23E04BBEC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22A00);
  sub_23DF89B88(&qword_256D22A10, &qword_256D22A00, MEMORY[0x24BDF4700]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E04BC50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E04BC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s6SliderVMa(0) - 8) + 80);
  return sub_23E0490E0(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

unint64_t sub_23E04BCB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22BD0;
  if (!qword_256D22BD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22BC8);
    v2[0] = sub_23DF89B88(&qword_256D22BD8, &qword_256D22BE0, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22BD0);
  }
  return result;
}

unint64_t sub_23E04BD34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22BE8;
  if (!qword_256D22BE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22BB0);
    v2[0] = sub_23E04BCB0();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22BE8);
  }
  return result;
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = _s6SliderVMa(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23E135F94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E04BEE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s6SliderVMa(0) - 8) + 80);
  return sub_23E049970(a1, (uint64_t *)(v1 + ((v3 + 16) & ~v3)));
}

uint64_t sub_23E04BF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_23E135EA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = _s6SliderVMa(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + ((v3 + v4 + v6) & ~v6);
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(v5 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E718);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23E135F94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v7 + *(int *)(v5 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E04C080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_23E135EA4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(_s6SliderVMa(0) - 8) + 80);
  return sub_23E04980C(a1, v1 + v4, (_QWORD *)(v1 + ((v4 + v5 + v6) & ~v6)));
}

unint64_t sub_23E04C0E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22C18;
  if (!qword_256D22C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22C10);
    v2[0] = sub_23E04C16C();
    v2[1] = sub_23DF89B88(&qword_256D22C40, &qword_256D22C08, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22C18);
  }
  return result;
}

unint64_t sub_23E04C16C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22C20;
  if (!qword_256D22C20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22C28);
    v2[0] = sub_23DF89B88(&qword_256D22C30, &qword_256D22C38, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF0390];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22C20);
  }
  return result;
}

unint64_t sub_23E04C1F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D22C48;
  if (!qword_256D22C48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22C50);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22BB0);
    v2[3] = sub_23E04BD34();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22C48);
  }
  return result;
}

__n128 TransitionTileView.Config.Icon.init(frame:maxWidth:drawCircle:size:color:unresponsiveColor:iconIdentifier:)@<Q0>(char a1@<W0>, char *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>)
{
  char v11;
  __n128 result;
  __int128 v13;

  v11 = *a2;
  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(double *)(a6 + 16) = a9;
  *(double *)(a6 + 24) = a10;
  *(double *)(a6 + 32) = a11;
  *(_BYTE *)(a6 + 40) = a1;
  *(_BYTE *)(a6 + 41) = v11;
  *(_OWORD *)(a6 + 48) = *a3;
  *(_QWORD *)(a6 + 64) = a4;
  *(_BYTE *)(a6 + 72) = 0;
  result = *(__n128 *)a5;
  v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a6 + 80) = *(_OWORD *)a5;
  *(_OWORD *)(a6 + 96) = v13;
  *(_QWORD *)(a6 + 112) = 0;
  return result;
}

__n128 TransitionTileView.Config.Text.init(frame:maxWidth:font:color:featherText:)@<Q0>(unint64_t a1@<X0>, __n128 *a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>)
{
  __n128 result;

  a4->n128_f64[0] = a5;
  a4->n128_f64[1] = a6;
  a4[1].n128_f64[0] = a7;
  a4[1].n128_f64[1] = a8;
  a4[2].n128_f64[0] = a9;
  a4[2].n128_u64[1] = a1;
  result = *a2;
  a4[3] = *a2;
  a4[4].n128_u8[0] = a3;
  return result;
}

double TransitionTileView.Config.init(cornerRadius:icon:prefixText:primaryText:secondaryText:badge:background:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  double result;

  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 41);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_BYTE *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 112);
  v14 = *(_BYTE *)(a2 + 64);
  *(double *)a7 = a8;
  v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a7 + 8) = *(_OWORD *)a1;
  v16 = *(_QWORD *)(a3 + 32);
  v17 = *(_QWORD *)(a3 + 56);
  v18 = *(_BYTE *)(a3 + 64);
  v19 = *(_BYTE *)(a4 + 64);
  v20 = *a6;
  *(_OWORD *)(a7 + 24) = v15;
  *(_QWORD *)(a7 + 40) = v8;
  *(_BYTE *)(a7 + 48) = v9;
  *(_BYTE *)(a7 + 49) = v10;
  *(_OWORD *)(a7 + 56) = *(_OWORD *)(a1 + 48);
  *(_QWORD *)(a7 + 72) = v11;
  *(_BYTE *)(a7 + 80) = v12;
  v21 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a7 + 88) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a7 + 104) = v21;
  *(_QWORD *)(a7 + 120) = v13;
  v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a7 + 128) = *(_OWORD *)a2;
  *(_OWORD *)(a7 + 144) = v22;
  v23 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a7 + 160) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a7 + 176) = v23;
  *(_BYTE *)(a7 + 192) = v14;
  v24 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a7 + 200) = *(_OWORD *)a3;
  *(_OWORD *)(a7 + 216) = v24;
  *(_QWORD *)(a7 + 232) = v16;
  *(_OWORD *)(a7 + 240) = *(_OWORD *)(a3 + 40);
  *(_QWORD *)(a7 + 256) = v17;
  *(_BYTE *)(a7 + 264) = v18;
  v25 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a7 + 272) = *(_OWORD *)a4;
  *(_OWORD *)(a7 + 288) = v25;
  v26 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a7 + 304) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a7 + 320) = v26;
  *(_BYTE *)(a7 + 336) = v19;
  *(_OWORD *)(a7 + 344) = *a5;
  *(_BYTE *)(a7 + 360) = v20;
  result = 0.0;
  *(_OWORD *)(a7 + 368) = 0u;
  *(_OWORD *)(a7 + 384) = 0u;
  return result;
}

double sub_23E04C3C8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23E04C934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_256D1F9A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF89C1C, &qword_256D1F9B0).n128_u64[0];
  return result;
}

uint64_t sub_23E04C42C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v23 = (void *)sub_23E1366F0();
    sub_23E135BEC();

  }
  sub_23E136060();
  v24 = v13[1];
  *a9 = *v13;
  a9[1] = v24;
  v25 = v13[3];
  a9[2] = v13[2];
  a9[3] = v25;
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;
  return sub_23E057578((uint64_t)v13);
}

uint64_t sub_23E04C5D0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  void *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v18 = a16;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v27 = (void *)sub_23E1366F0();
    sub_23E135BEC();

    v18 = a16;
  }
  sub_23E136060();
  *(_QWORD *)a9 = v18;
  *(_QWORD *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;
  return swift_retain();
}

uint64_t sub_23E04C77C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v23 = (void *)sub_23E1366F0();
    sub_23E135BEC();

  }
  sub_23E136060();
  v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 88) = v29;
  *(_OWORD *)(a9 + 104) = v30;
  *(_OWORD *)(a9 + 120) = v31;
  *(_OWORD *)(a9 + 136) = v32;
  *(_OWORD *)(a9 + 40) = v26;
  *(_OWORD *)(a9 + 56) = v27;
  *(_QWORD *)(a9 + 32) = *(_QWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 72) = v28;
  return swift_retain();
}

__n128 sub_23E04C934@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t *v21;
  int v24;
  void *v31;
  _OWORD *v32;
  __n128 result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __n128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v20 = a17;
  v21 = a18;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  v24 = a8 & 1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if (v24)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v31 = (void *)sub_23E1366F0();
    sub_23E135BEC();

    v21 = a18;
    v20 = a17;
  }
  sub_23E136060();
  v20(v18, a9, a16);
  v32 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v21) + 36));
  v32[4] = v38;
  v32[5] = v39;
  v32[6] = v40;
  *v32 = v34;
  v32[1] = v35;
  result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

uint64_t sub_23E04CB10@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v25 = (void *)sub_23E1366F0();
    sub_23E135BEC();

  }
  sub_23E136060();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;
  return swift_retain();
}

double sub_23E04CCB8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23E04C934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256D230C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF89C1C, &qword_256D230C8).n128_u64[0];
  return result;
}

uint64_t sub_23E04CD1C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v31 = (void *)sub_23E1366F0();
    sub_23E135BEC();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_23E136060();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_23DFA056C(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_23E04CEFC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23E04C934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256D23088, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF89C1C, &qword_256D23090).n128_u64[0];
  return result;
}

__n128 sub_23E04CF60@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v23 = (void *)sub_23E1366F0();
    sub_23E135BEC();

  }
  sub_23E136060();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D230A0) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

double sub_23E04D12C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23E04C934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for ControlBackgroundView, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF73E10, &qword_256D230B8).n128_u64[0];
  return result;
}

double sub_23E04D190@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23E04C934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_256D230A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF89C1C, &qword_256D230B0).n128_u64[0];
  return result;
}

uint64_t sub_23E04D1F4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23E13735C();
    v23 = (void *)sub_23E1366F0();
    sub_23E135BEC();

  }
  sub_23E136060();
  v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;
  return sub_23E05753C((uint64_t)v13);
}

uint64_t TransitionTileView.animationNamespace.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TransitionTileView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;

  v49 = a1;
  v46 = sub_23E13657C();
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22C58);
  MEMORY[0x24BDAC7A8](v3);
  v47 = (uint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23E135700();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(int *)(type metadata accessor for TransitionTileView() + 24);
  v45 = v1;
  v10 = v1 + v9;
  v11 = (int *)type metadata accessor for Device();
  v44 = *(unsigned __int8 *)(v10 + v11[13]);
  v12 = (uint64_t *)(v10 + v11[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E1356F4();
  v43 = sub_23E1356E8();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = (uint64_t *)(v10 + v11[16]);
  if (!v15[1])
  {
    v16 = sub_23E1371A0();
    v17 = v21;
    v18 = v12[1];
    if (v18)
      goto LABEL_3;
LABEL_5:
    v19 = 0;
    v20 = 0xE000000000000000;
    goto LABEL_6;
  }
  v16 = *v15;
  v17 = v15[1];
  v18 = v12[1];
  if (!v18)
    goto LABEL_5;
LABEL_3:
  v19 = *v12;
  v20 = v18;
LABEL_6:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_23E136F9C();
  v23 = (uint64_t)v47;
  *v47 = v22;
  *(_QWORD *)(v23 + 8) = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22C60);
  sub_23E04D71C(v45, v44, v19, v20, v43, v14, v16, v17, (uint64_t *)(v23 + *(int *)(v25 + 44)));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E1364BC();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = v48;
  v35 = &v48[*(int *)(v46 + 20)];
  v36 = *MEMORY[0x24BDEEB68];
  v37 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  *v34 = v27;
  v34[1] = v29;
  v34[2] = v31;
  v34[3] = v33;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22C68);
  v39 = v49;
  v40 = v49 + *(int *)(v38 + 36);
  sub_23DF73E10((uint64_t)v34, v40, (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC8]);
  *(_WORD *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E080) + 36)) = 256;
  sub_23DF89C1C(v23, v39, &qword_256D22C58);
  sub_23E04DF34((uint64_t)v34);
  return sub_23DF89C7C(v23, &qword_256D22C58);
}

uint64_t type metadata accessor for TransitionTileView()
{
  uint64_t result;

  result = qword_256D22CE0;
  if (!qword_256D22CE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E04D71C@<X0>(uint64_t a1@<X0>, _BOOL4 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  CGSize v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  CGPoint v32;
  CGSize v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  double v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  CGFloat MidX;
  CGFloat MidY;
  _BYTE *v48;
  CGFloat *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v83;
  char v84;
  char v85;
  _BYTE v86[4];
  _BOOL4 v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  _OWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  _BYTE *v111;
  int v112;
  int v113;
  CGPoint v114;
  CGSize v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  CGRect v122;
  CGRect v123;

  v101 = a8;
  v100 = a7;
  v99 = a6;
  v98 = a5;
  v97 = a4;
  v96 = a3;
  v87 = a2;
  v93 = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D78);
  MEMORY[0x24BDAC7A8](v11);
  v94 = &v86[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D80);
  v13 = MEMORY[0x24BDAC7A8](v95);
  v110 = &v86[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v111 = &v86[-v15];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D88);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)&v86[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D90);
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v86[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D98);
  MEMORY[0x24BDAC7A8](v22);
  v88 = &v86[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22DA0);
  v24 = MEMORY[0x24BDAC7A8](v89);
  v106 = &v86[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v24);
  v102 = &v86[-v26];
  sub_23E04DF70((uint64_t)&v114);
  v91 = *(_QWORD *)&v114.y;
  v92 = *(_QWORD *)&v114.x;
  v104 = *(_QWORD *)&v115.height;
  v90 = *(_QWORD *)&v115.width;
  v109 = *((_QWORD *)&v116 + 1);
  v103 = v116;
  v107 = *((_QWORD *)&v117 + 1);
  v108 = v117;
  v105 = v118;
  v113 = DWORD2(v118);
  v112 = BYTE12(v118);
  v27 = *(_OWORD *)(a1 + 96);
  v118 = *(_OWORD *)(a1 + 80);
  v119 = v27;
  v120 = *(_OWORD *)(a1 + 112);
  v121 = *(_QWORD *)(a1 + 128);
  v28 = *(CGSize *)(a1 + 32);
  v114 = *(CGPoint *)(a1 + 16);
  v115 = v28;
  v29 = *(_OWORD *)(a1 + 64);
  v116 = *(_OWORD *)(a1 + 48);
  v117 = v29;
  v30 = a1 + *(int *)(type metadata accessor for TransitionTileView() + 24);
  v31 = *(unsigned __int8 *)(v30 + *(int *)(type metadata accessor for Device() + 60));
  v32 = v114;
  v33 = v115;
  v34 = BYTE8(v118);
  *v18 = sub_23E136FE4();
  v18[1] = v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22DA8);
  sub_23E04FCB4(a2, v31, (uint64_t)&v114, v34, a1, (uint64_t)v18 + *(int *)(v36 + 44), v33.width, v33.height);
  v37 = *(_QWORD *)a1;
  type metadata accessor for AnimationModel();
  sub_23E056018();
  v38 = sub_23E1360CC();
  v40 = v39;
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v21, &qword_256D22D88);
  v41 = &v21[*(int *)(v19 + 36)];
  *(_QWORD *)v41 = v38;
  *((_QWORD *)v41 + 1) = v40;
  *((_QWORD *)v41 + 2) = v37;
  v41[24] = 1;
  sub_23DF89C7C((uint64_t)v18, &qword_256D22D88);
  v42 = *(double *)&v116;
  v43 = sub_23E136FE4();
  v44 = v88;
  sub_23E04C934(0.0, 1, 0.0, 1, v42, 0, 0.0, 1, (uint64_t)v88, 0.0, 1, 0.0, 1, v43, v45, (uint64_t)&qword_256D22D90, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF89C1C, &qword_256D22D98);
  sub_23DF89C7C((uint64_t)v21, &qword_256D22D90);
  v122.origin = v32;
  v122.size = v33;
  MidX = CGRectGetMidX(v122);
  v123.origin = v32;
  v123.size = v33;
  MidY = CGRectGetMidY(v123);
  v48 = v102;
  sub_23DF89C1C((uint64_t)v44, (uint64_t)v102, &qword_256D22D98);
  v49 = (CGFloat *)&v48[*(int *)(v89 + 36)];
  *v49 = MidX;
  v49[1] = MidY;
  sub_23DF89C7C((uint64_t)v44, &qword_256D22D98);
  v50 = v94;
  sub_23E04E438(a1, v87, v98, v99, v100, v101, v94);
  v51 = sub_23E1360CC();
  v53 = v52;
  v54 = v110;
  sub_23DF89C1C((uint64_t)v50, (uint64_t)v110, &qword_256D22D78);
  v55 = (uint64_t *)&v54[*(int *)(v95 + 36)];
  *v55 = v51;
  v55[1] = v53;
  sub_23DF89C7C((uint64_t)v50, &qword_256D22D78);
  v56 = (uint64_t)v54;
  v57 = v111;
  sub_23DF89340((uint64_t)v54, (uint64_t)v111, &qword_256D22D80);
  v58 = (uint64_t)v48;
  v59 = v106;
  sub_23DF89C1C(v58, (uint64_t)v106, &qword_256D22DA0);
  sub_23DF89C1C((uint64_t)v57, (uint64_t)v54, &qword_256D22D80);
  v60 = v92;
  v61 = v93;
  v62 = v91;
  *v93 = v92;
  v61[1] = v62;
  v63 = v90;
  v64 = v104;
  v61[2] = v90;
  v61[3] = v64;
  v65 = v109;
  v61[4] = v103;
  v61[5] = v65;
  v66 = v107;
  v61[6] = v108;
  v61[7] = v66;
  v67 = v105;
  v61[8] = v105;
  LODWORD(v54) = v113;
  *((_DWORD *)v61 + 18) = v113;
  LOBYTE(v53) = v112;
  *((_BYTE *)v61 + 76) = v112;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22DB0);
  sub_23DF89C1C((uint64_t)v59, (uint64_t)v61 + *(int *)(v68 + 48), &qword_256D22DA0);
  sub_23DF89C1C(v56, (uint64_t)v61 + *(int *)(v68 + 64), &qword_256D22D80);
  v84 = v53;
  v83 = (int)v54;
  v69 = v67;
  v70 = v60;
  v71 = v60;
  v72 = v62;
  v73 = v62;
  v74 = v63;
  v75 = v63;
  v76 = v104;
  v77 = v103;
  v78 = v109;
  v79 = v108;
  v80 = v107;
  sub_23E056060(v71, v73, v75, v104, v103, v109, v108, v107, v67, v83, SHIWORD(v83), v84);
  LOBYTE(v67) = v112;
  sub_23E056060(v70, v72, v74, v76, v77, v78, v79, v80, v69, v113, SHIWORD(v113), v112);
  sub_23DF89C7C((uint64_t)v111, &qword_256D22D80);
  sub_23DF89C7C((uint64_t)v102, &qword_256D22DA0);
  v85 = v67;
  LODWORD(v69) = v113;
  v81 = v105;
  sub_23E0560E8(v70, v72, v74, v76, v77, v78, v79, v80, v105, v113, SHIWORD(v113), v85);
  sub_23DF89C7C((uint64_t)v110, &qword_256D22D80);
  sub_23DF89C7C((uint64_t)v106, &qword_256D22DA0);
  return sub_23E0560E8(v70, v72, v74, v76, v77, v78, v79, v80, v81, v69, SWORD1(v69), v112);
}

uint64_t sub_23E04DF34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E13657C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_23E04DF70@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  unsigned __int8 v17;
  char v18;
  _BYTE v19[76];
  char v20;

  if (*(_BYTE *)(v1 + 368))
  {
    if (*(_BYTE *)(v1 + 368) == 1)
    {
      v3 = v1 + *(int *)(type metadata accessor for TransitionTileView() + 24);
      if (*(_BYTE *)(v3 + *(int *)(type metadata accessor for Device() + 52)) == 1)
      {
        v4 = sub_23E136C48();
      }
      else
      {
        v5 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
        v4 = MEMORY[0x24264B578](v5);
      }
      *(_QWORD *)v19 = v4;
      memset(&v19[8], 0, 67);
      v19[75] = 1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D23050);
      sub_23E0572D4(&qword_256D23048, &qword_256D23050, (uint64_t (*)(void))sub_23E057338);
      sub_23E136480();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D23038);
      sub_23E057250();
      sub_23E136480();
      swift_release();
    }
    else
    {
      sub_23E136C30();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D23038);
      sub_23E057250();
      sub_23E136480();
    }
  }
  else
  {
    type metadata accessor for TransitionTileView();
    type metadata accessor for Device();
    swift_getKeyPath();
    sub_23E057338();
    sub_23E136480();
    *(_WORD *)&v19[74] = v19[74] != 0;
    sub_23E0560B0(*(uint64_t *)v19, *(uint64_t *)&v19[8], *(uint64_t *)&v19[16], *(uint64_t *)&v19[24], *(uint64_t *)&v19[32], *(uint64_t *)&v19[40], *(uint64_t *)&v19[48], *(uint64_t *)&v19[56], *(uint64_t *)&v19[64], *(__int16 *)&v19[72]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23050);
    sub_23E0572D4(&qword_256D23048, &qword_256D23050, (uint64_t (*)(void))sub_23E057338);
    sub_23E136480();
    sub_23E056088(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23038);
    sub_23E057250();
    sub_23E136480();
    sub_23E056138(*(uint64_t *)v19, *(uint64_t *)&v19[8], *(uint64_t *)&v19[16], *(uint64_t *)&v19[24], *(uint64_t *)&v19[32], *(uint64_t *)&v19[40], *(uint64_t *)&v19[48], *(uint64_t *)&v19[56], *(uint64_t *)&v19[64], *(__int16 *)&v19[72]);
    sub_23E056110(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  }
  result = *(double *)v19;
  *(_OWORD *)a1 = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v19[32];
  *(_OWORD *)(a1 + 48) = *(_OWORD *)&v19[48];
  *(_QWORD *)(a1 + 64) = *(_QWORD *)&v19[64];
  *(_DWORD *)(a1 + 72) = *(_DWORD *)&v19[72];
  *(_BYTE *)(a1 + 76) = v20;
  return result;
}

_QWORD *sub_23E04E438@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _OWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  id v26;
  CGFloat MinX;
  CGFloat MinY;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  CGPoint v36;
  unsigned __int128 v37;
  unsigned __int8 v38;
  CGPoint origin;
  CGSize size;
  CGFloat v41;
  CGFloat v42;
  uint64_t v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  id v72;
  unsigned __int128 v73;
  unsigned __int128 v74;
  uint64_t v75;
  unsigned __int128 v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  CGFloat v80;
  CGFloat v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  int v85;
  unsigned __int128 *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int128 v94;
  uint64_t v95;
  unsigned __int8 v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v112;
  __int16 v113;
  char v114;
  unsigned __int128 v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int128 *v132;
  char *v133;
  double v134;
  double v135;
  double v136;
  double v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  _OWORD *v142;
  uint64_t v143;
  __int128 v144;
  unsigned __int128 v145;
  void *v146;
  __int128 v147;
  unsigned __int128 v148;
  unsigned __int128 v149;
  uint64_t v150;
  uint64_t v151;
  double v152;
  uint64_t v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE v160[160];
  _QWORD v161[20];
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  _QWORD v172[11];
  __int16 v173;
  char v174;
  int v175;
  char v176;
  CGFloat v177;
  CGFloat v178;
  uint64_t v179;
  char v180;
  _BYTE v181[7];
  uint64_t v182;
  char v183;
  _BYTE v184[7];
  uint64_t v185;
  uint64_t v186;
  _BYTE v187[7];
  unsigned __int8 v188;
  _BYTE v189[7];
  unsigned __int8 v190;
  int v191;
  char v192;
  unsigned __int8 v193;
  unsigned __int128 v194;
  unsigned __int128 v195;
  __int128 v196;
  unsigned __int128 v197;
  __int128 v198;
  uint64_t v199;
  unsigned __int16 v200;
  unsigned __int8 v201;
  CGFloat v202;
  CGFloat v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned __int8 v217;
  uint64_t v218;
  unsigned __int8 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  char v225;
  unsigned __int128 v226;
  _QWORD v227[8];
  char v228;
  CGRect v229;
  __int128 v230;
  __int128 v231;
  char v232;
  _QWORD v233[8];
  char v234;
  _OWORD v235[5];
  uint64_t v236;
  unsigned __int16 v237;
  unsigned __int8 v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;

  v128 = a5;
  v129 = a6;
  v159 = a4;
  v142 = a7;
  v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_256D22DB8);
  MEMORY[0x24BDAC7A8](v130);
  v132 = (unsigned __int128 *)((char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22DC0);
  MEMORY[0x24BDAC7A8](v131);
  v125 = (uint64_t)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_256D22DC8);
  v138 = *(_QWORD *)(v12 - 8);
  v139 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v133 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_256D22DD0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v141 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v140 = (uint64_t)&v115 - v17;
  v18 = *(void **)(a1 + 176);
  LODWORD(v146) = a2;
  if (v18)
  {
    LODWORD(v156) = *(unsigned __int8 *)(a1 + 200);
    v19 = *(_QWORD *)(a1 + 184);
    v150 = *(_QWORD *)(a1 + 192);
    v151 = v19;
    v20 = *(uint64_t *)(a1 + 160);
    v157 = *(_QWORD *)(a1 + 168);
    v21 = *(uint64_t *)(a1 + 144);
    v154 = *(double *)(a1 + 152);
    v155 = v20;
    v152 = *(double *)(a1 + 136);
    v153 = v21;
    v22 = v152;
    v23 = *(double *)&v21;
    v24 = v154;
    v25 = *(double *)&v20;
    *(double *)v233 = v152;
    v233[1] = v21;
    *(double *)&v233[2] = v154;
    v233[3] = v20;
    v233[4] = v157;
    v233[5] = v18;
    v233[6] = v19;
    v233[7] = v150;
    v234 = v156 & 1;
    v26 = v18;
    swift_retain();
    swift_retain();
    sub_23E04F4C0((uint64_t)v233, a1, (uint64_t)v235);
    v148 = v235[1];
    v149 = v235[0];
    v147 = v235[2];
    v144 = v235[4];
    v145 = v235[3];
    v143 = v236;
    LODWORD(v137) = v237;
    LODWORD(v136) = v238;
    v239.origin.x = v22;
    v239.origin.y = v23;
    v239.size.width = v24;
    v239.size.height = v25;
    MinX = CGRectGetMinX(v239);
    v240.origin.x = v22;
    v240.origin.y = v23;
    v240.size.width = v24;
    v240.size.height = v25;
    MinY = CGRectGetMinY(v240);
    v241.origin.x = v22;
    v241.origin.y = v23;
    v241.size.width = v24;
    v241.size.height = v25;
    CGRectGetHeight(v241);
    sub_23E136FE4();
    sub_23E135E5C();
    v29 = v210;
    v30 = v211;
    v31 = v212;
    v158 = a3;
    v32 = v213;
    v33 = v214;
    v34 = v215;
    sub_23DFA65D4(*(uint64_t *)&v152, v153, *(uint64_t *)&v154, v155, v157, v18);
    LOBYTE(v172[0]) = LOBYTE(v136);
    LOBYTE(v162) = v30;
    LOBYTE(v161[0]) = v32;
    v194 = v149;
    v195 = v148;
    v196 = v147;
    v197 = v145;
    v198 = v144;
    v199 = v143;
    v200 = LOWORD(v137);
    v201 = LOBYTE(v136);
    v202 = MinX;
    v203 = MinY;
    v204 = v29;
    v205 = v30;
    v206 = v31;
    v207 = v32;
    v208 = v33;
    v209 = v34;
    CGPointMake(&v194);
  }
  else
  {
    sub_23E056170((uint64_t)&v194);
  }
  sub_23DF89340((uint64_t)&v194, (uint64_t)v235, (uint64_t *)&qword_256D22DD8);
  v35 = *(_OWORD *)(a1 + 256);
  v230 = *(_OWORD *)(a1 + 240);
  v231 = v35;
  v232 = *(_BYTE *)(a1 + 272);
  v36 = *(CGPoint *)(a1 + 208);
  v229.size = *(CGSize *)(a1 + 224);
  v229.origin = v36;
  sub_23E056194((uint64_t)&v229);
  sub_23E04F4C0((uint64_t)&v229, a1, (uint64_t)&v194);
  v37 = v194;
  v157 = *((_QWORD *)&v195 + 1);
  v158 = v195;
  *(_QWORD *)&v144 = *((_QWORD *)&v196 + 1);
  v155 = v197;
  v156 = v196;
  v153 = v198;
  v154 = *((double *)&v197 + 1);
  v151 = v199;
  v152 = *((double *)&v198 + 1);
  LODWORD(v150) = v200;
  v38 = v201;
  origin = v229.origin;
  size = v229.size;
  v41 = CGRectGetMinX(v229);
  v242.origin = origin;
  v242.size = size;
  v42 = CGRectGetMinY(v242);
  v243.origin = origin;
  v243.size = size;
  CGRectGetHeight(v243);
  sub_23E136FE4();
  v43 = 1;
  sub_23E135E5C();
  *(_QWORD *)&v147 = v216;
  v44 = v217;
  *(_QWORD *)&v148 = v218;
  v45 = v219;
  v143 = v220;
  *(_QWORD *)&v149 = v221;
  sub_23E0561D8((uint64_t)&v229);
  v193 = v38;
  v190 = v44;
  v188 = v45;
  v46 = *(void **)(a1 + 320);
  *(_QWORD *)&v145 = v37 >> 64;
  v159 = v37;
  if (v46)
  {
    v48 = *(_QWORD *)(a1 + 280);
    v47 = *(_QWORD *)(a1 + 288);
    v50 = *(_QWORD *)(a1 + 296);
    v49 = *(_QWORD *)(a1 + 304);
    v51 = *(_QWORD *)(a1 + 312);
    v53 = *(_QWORD *)(a1 + 328);
    v52 = *(_QWORD *)(a1 + 336);
    v126 = *(unsigned __int8 *)(a1 + 344);
    v135 = *(double *)&v48;
    v136 = *(double *)&v47;
    v227[0] = v48;
    v227[1] = v47;
    v134 = *(double *)&v50;
    v227[2] = v50;
    v137 = *(double *)&v49;
    v227[3] = v49;
    v127 = v51;
    v227[4] = v51;
    v227[5] = v46;
    v227[6] = v53;
    v227[7] = v52;
    v228 = v126 & 1;
    v54 = *(_QWORD *)(a1 + 352);
    v123 = v52;
    v124 = v46;
    v122 = v53;
    if (v54
      && (v121 = *(_QWORD *)(a1 + 360),
          v55 = v46,
          v56 = a1 + *(int *)(type metadata accessor for TransitionTileView() + 24),
          v57 = type metadata accessor for Device(),
          v46 = v55,
          v58 = (uint64_t *)(v56 + *(int *)(v57 + 72)),
          (v59 = v58[1]) != 0))
    {
      v60 = *v58;
      *(_QWORD *)&v194 = v54;
      *((_QWORD *)&v194 + 1) = v121;
      sub_23E052584(*(uint64_t *)&v135, *(uint64_t *)&v136, *(uint64_t *)&v134, *(uint64_t *)&v137, v127, v55);
      sub_23E052824(v54);
      v61 = v125;
      sub_23E04F128((uint64_t)v227, v128, v129, v146 & 1, (uint64_t *)&v194, v60, v59, v125);
      sub_23DF89C1C(v61, (uint64_t)v132, &qword_256D22DC0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_256D22DE8);
      sub_23DF8E904((unint64_t *)&qword_256D22DF0, &qword_256D22DC0, (uint64_t (*)(void))sub_23E056450, MEMORY[0x24BDEDBB8]);
      sub_23DF8E904((unint64_t *)&qword_256D22E18, (uint64_t *)&qword_256D22DE8, sub_23E0564D4, MEMORY[0x24BDEBEE0]);
      v62 = (uint64_t)v133;
      sub_23E136480();
      sub_23DF8F8D4(v54);
      sub_23DFA65D4(*(uint64_t *)&v135, *(uint64_t *)&v136, *(uint64_t *)&v134, *(uint64_t *)&v137, v127, v124);
      sub_23DF89C7C(v61, &qword_256D22DC0);
    }
    else
    {
      v68 = v135;
      v69 = v136;
      v70 = v134;
      v71 = v137;
      v72 = v46;
      swift_retain();
      swift_retain();
      sub_23E04F4C0((uint64_t)v227, a1, (uint64_t)&v194);
      v73 = v194;
      v74 = v195;
      v146 = (void *)*((_QWORD *)&v196 + 1);
      v75 = *((_QWORD *)&v197 + 1);
      v76 = v197;
      *((_QWORD *)&v115 + 1) = v76 >> 64;
      v121 = v76;
      v116 = v196;
      v77 = *((_QWORD *)&v198 + 1);
      v128 = v198;
      v78 = v199;
      LODWORD(v125) = v200;
      v79 = v201;
      v244.origin.x = v68;
      v244.origin.y = v69;
      v244.size.width = v70;
      v244.size.height = v71;
      v80 = CGRectGetMinX(v244);
      v245.origin.x = v68;
      v245.origin.y = v69;
      v245.size.width = v70;
      v245.size.height = v71;
      v81 = CGRectGetMinY(v245);
      v246.origin.x = v68;
      v246.origin.y = v69;
      v246.size.width = v70;
      v246.size.height = v71;
      CGRectGetHeight(v246);
      sub_23E136FE4();
      sub_23E135E5C();
      v82 = v222;
      v83 = v223;
      v84 = v224;
      v85 = v79;
      LOBYTE(v194) = v79;
      LOBYTE(v172[0]) = v223;
      LOBYTE(v162) = v225;
      v86 = v132;
      *v132 = v73;
      *(_QWORD *)&v115 = *((_QWORD *)&v73 + 1);
      v129 = v74;
      v86[1] = v74;
      v119 = v77;
      v120 = (void *)*((_QWORD *)&v74 + 1);
      v87 = v116;
      v88 = v146;
      *((_QWORD *)v86 + 4) = v116;
      *((_QWORD *)v86 + 5) = v88;
      *((_QWORD *)v86 + 6) = v121;
      *((_QWORD *)v86 + 7) = v75;
      v89 = v128;
      *((_QWORD *)v86 + 8) = v128;
      *((_QWORD *)v86 + 9) = v77;
      v90 = v77;
      v91 = v78;
      v118 = v78;
      *((_QWORD *)v86 + 10) = v78;
      LOWORD(v77) = v125;
      *((_WORD *)v86 + 44) = v125;
      *((_BYTE *)v86 + 90) = v85;
      LOBYTE(v78) = v85;
      v117 = v85;
      *((CGFloat *)v86 + 12) = v80;
      *((CGFloat *)v86 + 13) = v81;
      *((_QWORD *)v86 + 14) = v82;
      *((_BYTE *)v86 + 120) = v83;
      *((_QWORD *)v86 + 16) = v84;
      *((_BYTE *)v86 + 136) = v162;
      v86[9] = v226;
      swift_storeEnumTagMultiPayload();
      v114 = v78;
      v113 = v77;
      v112 = v89;
      v94 = v115;
      v92 = v94 >> 64;
      v93 = v94;
      v95 = v121;
      sub_23E05624C(v73, v115, v129, *((void **)&v74 + 1), v87, v146, v121, *((uint64_t *)&v115 + 1), v112, v90, v91, v113, v114);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_256D22DE8);
      sub_23DF8E904((unint64_t *)&qword_256D22DF0, &qword_256D22DC0, (uint64_t (*)(void))sub_23E056450, MEMORY[0x24BDEDBB8]);
      sub_23DF8E904((unint64_t *)&qword_256D22E18, (uint64_t *)&qword_256D22DE8, sub_23E0564D4, MEMORY[0x24BDEBEE0]);
      v62 = (uint64_t)v133;
      sub_23E136480();
      sub_23DFA65D4(*(uint64_t *)&v135, *(uint64_t *)&v136, *(uint64_t *)&v134, *(uint64_t *)&v137, v127, v124);
      sub_23E056334(v73, v93, v129, v120, v87, v146, v95, v92, v128, v119, v118, v125, v117);
    }
    v63 = (uint64_t)v141;
    v64 = v142;
    v65 = v139;
    v66 = v140;
    v67 = v138;
    sub_23DF89340(v62, v140, (uint64_t *)&qword_256D22DC8);
    v43 = 0;
  }
  else
  {
    v63 = (uint64_t)v141;
    v64 = v142;
    v65 = v139;
    v66 = v140;
    v67 = v138;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v66, v43, 1, v65);
  sub_23DF89340((uint64_t)v235, (uint64_t)v160, (uint64_t *)&qword_256D22DD8);
  v96 = v193;
  LODWORD(v141) = v193;
  v97 = v190;
  LODWORD(v142) = v190;
  v98 = v188;
  LODWORD(v146) = v188;
  sub_23DF89C1C(v66, v63, (uint64_t *)&qword_256D22DD0);
  sub_23DF89340((uint64_t)v160, (uint64_t)v161, (uint64_t *)&qword_256D22DD8);
  sub_23DF89340((uint64_t)v161, (uint64_t)v64, (uint64_t *)&qword_256D22DD8);
  *(_QWORD *)&v162 = v159;
  v99 = v63;
  v100 = v145;
  *((_QWORD *)&v162 + 1) = v145;
  *(_QWORD *)&v163 = v158;
  *((_QWORD *)&v163 + 1) = v157;
  *(_QWORD *)&v164 = v156;
  v101 = v144;
  *((_QWORD *)&v164 + 1) = v144;
  *(_QWORD *)&v165 = v155;
  *((double *)&v165 + 1) = v154;
  *(_QWORD *)&v166 = v153;
  *((double *)&v166 + 1) = v152;
  *(_QWORD *)&v167 = v151;
  WORD4(v167) = v150;
  BYTE10(v167) = v96;
  *(_DWORD *)((char *)&v167 + 11) = v191;
  HIBYTE(v167) = v192;
  *(CGFloat *)&v168 = v41;
  *((CGFloat *)&v168 + 1) = v42;
  *(_QWORD *)&v169 = v147;
  BYTE8(v169) = v97;
  *(_DWORD *)((char *)&v169 + 9) = *(_DWORD *)v189;
  HIDWORD(v169) = *(_DWORD *)&v189[3];
  *(_QWORD *)&v170 = v148;
  BYTE8(v170) = v98;
  *(_DWORD *)((char *)&v170 + 9) = *(_DWORD *)v187;
  HIDWORD(v170) = *(_DWORD *)&v187[3];
  v102 = v143;
  *(_QWORD *)&v171 = v143;
  *((_QWORD *)&v171 + 1) = v149;
  v103 = v163;
  v64[10] = v162;
  v64[11] = v103;
  v104 = v164;
  v105 = v165;
  v106 = v167;
  v64[14] = v166;
  v64[15] = v106;
  v64[12] = v104;
  v64[13] = v105;
  v107 = v168;
  v108 = v169;
  v109 = v171;
  v64[18] = v170;
  v64[19] = v109;
  v64[16] = v107;
  v64[17] = v108;
  v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_256D22DE0);
  sub_23DF89C1C(v99, (uint64_t)v64 + *(int *)(v110 + 64), (uint64_t *)&qword_256D22DD0);
  sub_23E0563B8(v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E056218);
  sub_23E0562D0((uint64_t)&v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23E05624C);
  sub_23DF89C7C(v66, (uint64_t *)&qword_256D22DD0);
  sub_23DF89C7C(v99, (uint64_t *)&qword_256D22DD0);
  v172[0] = v159;
  v172[1] = v100;
  v172[2] = v158;
  v172[3] = v157;
  v172[4] = v156;
  v172[5] = v101;
  v172[6] = v155;
  *(double *)&v172[7] = v154;
  v172[8] = v153;
  *(double *)&v172[9] = v152;
  v172[10] = v151;
  v173 = v150;
  v174 = (char)v141;
  v175 = v191;
  v176 = v192;
  v177 = v41;
  v178 = v42;
  v179 = v147;
  v180 = (char)v142;
  *(_DWORD *)&v181[3] = *(_DWORD *)&v189[3];
  *(_DWORD *)v181 = *(_DWORD *)v189;
  v182 = v148;
  v183 = (char)v146;
  *(_DWORD *)v184 = *(_DWORD *)v187;
  *(_DWORD *)&v184[3] = *(_DWORD *)&v187[3];
  v185 = v102;
  v186 = v149;
  sub_23E0562D0((uint64_t)v172, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_23E056334);
  sub_23DF89340((uint64_t)v160, (uint64_t)&v194, (uint64_t *)&qword_256D22DD8);
  return sub_23E0563B8(&v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E05641C);
}

uint64_t sub_23E04F128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  CGSize v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CGPoint origin;
  CGSize size;
  CGFloat MinX;
  CGFloat MinY;
  CGFloat *v31;
  double v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  char v36;
  double v37;
  double v38;
  double Height;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];
  ValueMetadata *v49;
  unint64_t v50;
  char v51;
  _OWORD v52[4];
  __int16 v53;
  CGRect v54;
  __int128 v55;
  __int128 v56;
  char v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v45 = a7;
  v44 = a6;
  v47 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E10);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E00);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22DC0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_OWORD *)(a1 + 48);
  v55 = *(_OWORD *)(a1 + 32);
  v56 = v22;
  v57 = *(_BYTE *)(a1 + 64);
  v23 = *(CGSize *)(a1 + 16);
  v54.origin = *(CGPoint *)a1;
  v54.size = v23;
  v25 = *a5;
  v24 = a5[1];
  *(_QWORD *)v15 = sub_23E1362D0();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E68);
  sub_23E04F740(a2, a3, (uint64_t)&v54, a4, v44, v45, v25, v24, (uint64_t)&v15[*(int *)(v26 + 44)]);
  origin = v54.origin;
  size = v54.size;
  MinX = CGRectGetMinX(v54);
  v58.origin = origin;
  v58.size = size;
  MinY = CGRectGetMinY(v58);
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v18, &qword_256D22E10);
  v31 = (CGFloat *)&v18[*(int *)(v16 + 36)];
  *v31 = MinX;
  v31[1] = MinY;
  sub_23DF89C7C((uint64_t)v15, &qword_256D22E10);
  v59.origin = origin;
  v59.size = size;
  v32 = CGRectGetMinX(v59);
  v33 = (__int128 *)(v46 + *(int *)(type metadata accessor for TransitionTileView() + 28));
  v34 = v33[3];
  v52[2] = v33[2];
  v52[3] = v34;
  v53 = *((_WORD *)v33 + 32);
  v35 = *v33;
  v52[1] = v33[1];
  v52[0] = v35;
  sub_23DF98EC8((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v48);
  sub_23DF98EC8((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v51 != 1
    || (v49 = &type metadata for ControlCenterFeatures,
        v50 = sub_23DFF83B0(),
        v36 = sub_23E134CA4(),
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v48),
        v37 = 12.0,
        (v36 & 1) != 0))
  {
    v37 = 10.0;
  }
  v38 = *(double *)&v55 - v32 - v37;
  v60.origin = origin;
  v60.size = size;
  Height = CGRectGetHeight(v60);
  v40 = sub_23E136FF0();
  sub_23E04C934(0.0, 0, 0.0, 1, v38, 0, 0.0, 1, (uint64_t)v21, Height, 0, 0.0, 1, v40, v41, (uint64_t)&qword_256D22E00, (void (*)(uint64_t, uint64_t, uint64_t))sub_23DF89C1C, &qword_256D22DC0);
  sub_23DF89C7C((uint64_t)v18, &qword_256D22E00);
  return sub_23DF89340((uint64_t)v21, v47, &qword_256D22DC0);
}

double sub_23E04F4C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  CGFloat v4;
  CGFloat v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  CGFloat v10;
  void *v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  __int128 rect;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int16 v27;
  char v28;
  _OWORD v29[4];
  __int16 v30;
  CGRect v31;

  v4 = *(double *)a1;
  v5 = *(double *)(a1 + 16);
  rect = *(_OWORD *)(a1 + 24);
  if ((*(_BYTE *)(a1 + 64) & 1) != 0)
  {
    v10 = *(double *)(a1 + 8);
    v11 = *(void **)(a1 + 40);
    swift_retain();
    v11;
    swift_bridgeObjectRetain();
    v31.origin.x = v4;
    v31.origin.y = v10;
    v31.size.width = v5;
    *(_QWORD *)&v31.size.height = rect;
    CGRectGetWidth(v31);
    sub_23E136FF0();
    sub_23E135E5C();
  }
  else
  {
    v7 = a2 + *(int *)(type metadata accessor for TransitionTileView() + 28);
    v8 = *(_OWORD *)(v7 + 48);
    v29[2] = *(_OWORD *)(v7 + 32);
    v29[3] = v8;
    v30 = *(_WORD *)(v7 + 64);
    v9 = *(_OWORD *)(v7 + 16);
    v29[0] = *(_OWORD *)v7;
    v29[1] = v9;
    swift_bridgeObjectRetain();
    sub_23E056194(a1);
    sub_23DF98EC8((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)&v21);
    sub_23DF98EC8((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    if (v25 == 1)
    {
      *((_QWORD *)&v22 + 1) = &type metadata for ControlCenterFeatures;
      *(_QWORD *)&v23 = sub_23DFF83B0();
      sub_23E134CA4();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v21);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E58);
  sub_23E05657C();
  sub_23E0565A0();
  sub_23E136480();
  result = *(double *)&v21;
  v13 = v22;
  v14 = v23;
  v15 = v24;
  v16 = v25;
  v17 = v26;
  v18 = v27;
  v19 = v28;
  *(_OWORD *)a3 = v21;
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)(a3 + 48) = v15;
  *(_OWORD *)(a3 + 64) = v16;
  *(_QWORD *)(a3 + 80) = v17;
  *(_WORD *)(a3 + 88) = v18;
  *(_BYTE *)(a3 + 90) = v19;
  return result;
}

uint64_t sub_23E04F740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v70 = a7;
  v71 = a8;
  v74 = a6;
  v75 = a5;
  v69 = a4;
  v9 = a3;
  v60 = a3;
  v76 = a9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB88);
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D38);
  MEMORY[0x24BDAC7A8](v65);
  v64 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_23E1368C4();
  v77 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D40);
  MEMORY[0x24BDAC7A8](v63);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E70);
  v18 = MEMORY[0x24BDAC7A8](v68);
  v72 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v66 = (uint64_t)&v58 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v67 = (uint64_t)&v58 - v22;
  v78 = a1;
  v79 = a2;
  swift_bridgeObjectRetain();
  sub_23E1371D0();
  sub_23DF8DC18();
  v23 = sub_23E13693C();
  v25 = v24;
  v27 = v26 & 1;
  v28 = *(id *)(v9 + 40);
  sub_23E136858();
  v29 = sub_23E136900();
  v31 = v30;
  LOBYTE(v9) = v32;
  v59 = v33;
  swift_release();
  v34 = v9 & 1;
  sub_23DFA055C(v23, v25, v27);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v36 = v77;
  v38 = v61;
  v37 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v61, *MEMORY[0x24BDF1CD0], v62);
  v39 = swift_getKeyPath();
  v40 = v64;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v64 + *(int *)(v65 + 28), v38, v37);
  *v40 = v39;
  sub_23DF89C1C((uint64_t)v40, (uint64_t)&v17[*(int *)(v63 + 36)], &qword_256D22D38);
  *(_QWORD *)v17 = v29;
  *((_QWORD *)v17 + 1) = v31;
  v17[16] = v34;
  *((_QWORD *)v17 + 3) = v59;
  *((_QWORD *)v17 + 4) = KeyPath;
  *((_QWORD *)v17 + 5) = 1;
  v17[48] = 0;
  sub_23DFA056C(v29, v31, v34);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DF89C7C((uint64_t)v40, &qword_256D22D38);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v38, v37);
  sub_23DFA055C(v29, v31, v34);
  swift_release();
  swift_bridgeObjectRelease();
  if ((v69 & 1) != 0)
    v41 = v70;
  else
    v41 = v71;
  v42 = 56;
  if ((v69 & 1) != 0)
    v42 = 48;
  v43 = *(_QWORD *)(v60 + v42);
  v44 = swift_getKeyPath();
  v45 = v66;
  sub_23DF89C1C((uint64_t)v17, v66, &qword_256D22D40);
  v46 = (uint64_t *)(v45 + *(int *)(v68 + 36));
  *v46 = v44;
  v46[1] = v43;
  swift_retain();
  sub_23DF89C7C((uint64_t)v17, &qword_256D22D40);
  v47 = v67;
  sub_23DF89340(v45, v67, &qword_256D22E70);
  swift_bridgeObjectRetain();
  sub_23E136CB4();
  v48 = (uint64_t)v73;
  sub_23E13639C();
  v49 = sub_23E1363B4();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  v50 = sub_23E136CE4();
  swift_release();
  sub_23DF89C7C(v48, &qword_256D1DB88);
  v51 = swift_getKeyPath();
  swift_retain();
  v52 = sub_23E136834();
  v53 = swift_getKeyPath();
  v54 = v72;
  sub_23DF89C1C(v47, v72, &qword_256D22E70);
  v55 = v76;
  sub_23DF89C1C(v54, v76, &qword_256D22E70);
  v56 = (uint64_t *)(v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D22E78) + 48));
  *v56 = v50;
  v56[1] = v51;
  v56[2] = v41;
  v56[3] = v53;
  v56[4] = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23DF89C7C(v47, &qword_256D22E70);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_23DF89C7C(v54, &qword_256D22E70);
}

uint64_t sub_23E04FCB4@<X0>(_BOOL4 a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t v81;
  char v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  __int128 v114;
  uint64_t v115;
  int v116;
  int v117;
  _OWORD *v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t *v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  unsigned __int8 v152;
  BOOL v153;
  BOOL v154;
  double v155;
  unsigned __int8 v156;
  unsigned __int8 v157;
  unsigned __int8 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _OWORD *v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int64x2_t v178;
  int64x2_t v179;
  uint64_t v180;
  uint64_t v181;
  int64x2_t *v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  char *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _OWORD *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t KeyPath;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int64x2_t *v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  int v232;
  uint64_t v233;
  uint64_t v234;
  _BOOL4 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  _OWORD v240[2];
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  _OWORD v251[2];
  __int128 v252;
  __int128 v253;
  __int128 v254;
  uint64_t v255;
  _DWORD v256[2];
  unsigned __int8 v257;
  _DWORD v258[2];
  unsigned __int8 v259;
  int v260;
  __int16 v261;
  unsigned __int8 v262;
  _DWORD v263[2];
  uint64_t v264;
  unsigned __int8 v265;
  uint64_t v266;
  unsigned __int8 v267;
  uint64_t v268;
  uint64_t v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  id v273;
  _BYTE v274[32];
  _QWORD v275[2];
  void *v276;

  v208 = a5;
  LODWORD(v215) = a4;
  v232 = a2;
  v235 = a1;
  v229 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v11);
  v207 = (char *)&v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E80);
  MEMORY[0x24BDAC7A8](v226);
  v228 = (int64x2_t *)((char *)&v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E88);
  MEMORY[0x24BDAC7A8](v217);
  v218 = (_OWORD *)((char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E90);
  MEMORY[0x24BDAC7A8](v227);
  v219 = (char *)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22E98);
  MEMORY[0x24BDAC7A8](v198);
  v202 = (uint64_t *)((char *)&v183 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_23E136D08();
  v200 = *(_QWORD *)(v17 - 8);
  v201 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v199 = (char *)&v183 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EA0);
  MEMORY[0x24BDAC7A8](v197);
  v204 = (uint64_t *)((char *)&v183 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EA8);
  MEMORY[0x24BDAC7A8](v203);
  v187 = (char *)&v183 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EB0);
  v21 = MEMORY[0x24BDAC7A8](v214);
  v205 = (uint64_t)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v206 = (uint64_t)&v183 - v23;
  *(_QWORD *)&v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EB8);
  MEMORY[0x24BDAC7A8](v212);
  v213 = (uint64_t)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EC0);
  v25 = MEMORY[0x24BDAC7A8](v209);
  v184 = (uint64_t *)((char *)&v183 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25);
  v185 = (uint64_t)&v183 - v27;
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EC8);
  MEMORY[0x24BDAC7A8](v195);
  v196 = (uint64_t)&v183 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
  MEMORY[0x24BDAC7A8](v188);
  v190 = (uint64_t *)((char *)&v183 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_23E135D60();
  v191 = *(_QWORD *)(v30 - 8);
  v192 = v30;
  MEMORY[0x24BDAC7A8](v30);
  v189 = (char *)&v183 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_23E136CC0();
  v32 = *(_QWORD *)(v183 - 8);
  MEMORY[0x24BDAC7A8](v183);
  v34 = (char *)&v183 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB88);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v183 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22ED0);
  v38 = MEMORY[0x24BDAC7A8](v193);
  v40 = (_OWORD *)((char *)&v183 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v38);
  v186 = (uint64_t)&v183 - v41;
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22ED8);
  MEMORY[0x24BDAC7A8](v210);
  v194 = (char *)&v183 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EE0);
  MEMORY[0x24BDAC7A8](v216);
  *(_QWORD *)&v211 = (char *)&v183 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22EE8);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v225 = (uint64_t)&v183 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v233 = (uint64_t)&v183 - v47;
  KeyPath = swift_getKeyPath();
  v230 = *(unsigned __int8 *)(a3 + 40);
  v48 = *(_QWORD *)(a3 + 56);
  v231 = *(_QWORD *)(a3 + 48);
  swift_retain();
  v234 = v48;
  swift_retain();
  sub_23E136FE4();
  sub_23E135E5C();
  v220 = v264;
  v221 = v266;
  v222 = v269;
  v223 = v268;
  v262 = 0;
  v259 = v265;
  v257 = v267;
  sub_23DF89340(a3 + 80, (uint64_t)v274, &qword_256D22EF0);
  sub_23DF89340((uint64_t)v274, (uint64_t)v275, &qword_256D22EF0);
  if (v275[1])
  {
    v208 = a3;
    swift_bridgeObjectRetain();
    if ((v215 & 1) != 0)
    {
      if (a8 >= 24.0)
      {
        sub_23E136CB4();
        sub_23E1363A8();
        v87 = sub_23E1363B4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v37, 0, 1, v87);
        v215 = sub_23E136CE4();
        swift_release();
        sub_23DF89C7C((uint64_t)v37, &qword_256D1DB88);
        v88 = sub_23E13681C();
        v89 = swift_getKeyPath();
        if ((v232 & 1) != 0)
        {
          if (v235)
            v90 = v231;
          else
            v90 = v234;
        }
        else
        {
          v90 = *(_QWORD *)(v208 + 64);
        }
        swift_retain();
        v144 = swift_getKeyPath();
        v146 = v191;
        v145 = v192;
        v147 = v189;
        (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v189, *MEMORY[0x24BDEB3F0], v192);
        v148 = v190;
        (*(void (**)(char *, char *, uint64_t))(v146 + 16))((char *)v190 + *(int *)(v188 + 28), v147, v145);
        *v148 = v144;
        v149 = v184;
        sub_23DF89C1C((uint64_t)v148, (uint64_t)v184 + *(int *)(v209 + 36), &qword_256D1E6B0);
        *v149 = v215;
        v149[1] = v89;
        v149[2] = v88;
        v149[3] = v90;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23DF89C7C((uint64_t)v148, &qword_256D1E6B0);
        (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v145);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v140 = &qword_256D22EC0;
        v150 = v185;
        sub_23DF89340((uint64_t)v149, v185, &qword_256D22EC0);
        sub_23DF89C1C(v150, v196, &qword_256D22EC0);
        swift_storeEnumTagMultiPayload();
        sub_23E05663C();
        sub_23E0567EC();
        v142 = (uint64_t)v194;
        sub_23E136480();
        v143 = v150;
      }
      else
      {
        sub_23E136CB4();
        sub_23E1363A8();
        v54 = sub_23E1363B4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v37, 0, 1, v54);
        sub_23E136CE4();
        swift_release();
        sub_23DF89C7C((uint64_t)v37, &qword_256D1DB88);
        v55 = v183;
        (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x24BDF3FD0], v183);
        v56 = sub_23E136D14();
        swift_release();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v55);
        v57 = sub_23E136FE4();
        sub_23E04CB10(0.0, 1, 0.0, 1, a7, 0, 0.0, 1, (uint64_t)&v236, 0.0, 1, a8, 0, v57, v58, v56);
        swift_release();
        v215 = v236;
        v59 = v237;
        v206 = *((_QWORD *)&v237 + 1);
        v207 = (char *)*((_QWORD *)&v236 + 1);
        v60 = v238;
        LOBYTE(v55) = v239;
        v204 = (uint64_t *)*((_QWORD *)&v239 + 1);
        v205 = *((_QWORD *)&v238 + 1);
        v61 = v240[0];
        v62 = *((_QWORD *)&v240[0] + 1);
        v63 = v240[1];
        v64 = v241;
        v202 = (uint64_t *)*((_QWORD *)&v241 + 1);
        v203 = *((_QWORD *)&v240[1] + 1);
        v201 = v242;
        LOBYTE(v56) = sub_23E13672C();
        sub_23E135D00();
        v66 = v65;
        v68 = v67;
        v70 = v69;
        v72 = v71;
        v128 = swift_retain();
        LOBYTE(v270) = v59;
        LOBYTE(v276) = v60;
        LOBYTE(v273) = v55;
        LOBYTE(v263[0]) = v61;
        LOBYTE(v258[0]) = v63;
        LOBYTE(v256[0]) = v64;
        LOBYTE(v260) = 0;
        LOBYTE(v247) = 1;
        *(_QWORD *)&v236 = v215;
        *((_QWORD *)&v236 + 1) = v207;
        LOBYTE(v237) = v59;
        *((_QWORD *)&v237 + 1) = v206;
        LOBYTE(v238) = v60;
        *((_QWORD *)&v238 + 1) = v205;
        LOBYTE(v239) = v55;
        *((_QWORD *)&v239 + 1) = v204;
        LOBYTE(v240[0]) = v61;
        *((_QWORD *)&v240[0] + 1) = v62;
        LOBYTE(v240[1]) = v63;
        *((_QWORD *)&v240[1] + 1) = v203;
        LOBYTE(v241) = v64;
        *((_QWORD *)&v241 + 1) = v202;
        *(_QWORD *)&v242 = v201;
        BYTE8(v242) = v56;
        *(_QWORD *)&v243 = v66;
        *((_QWORD *)&v243 + 1) = v68;
        *(_QWORD *)&v244 = v70;
        *((_QWORD *)&v244 + 1) = v72;
        LOBYTE(v245) = 0;
        *((_QWORD *)&v245 + 1) = 0;
        LOWORD(v246) = 1;
        *((_QWORD *)&v246 + 1) = v128;
        v129 = swift_getKeyPath();
        v131 = v191;
        v130 = v192;
        v132 = v189;
        (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v189, *MEMORY[0x24BDEB3F0], v192);
        v133 = v190;
        (*(void (**)(char *, char *, uint64_t))(v131 + 16))((char *)v190 + *(int *)(v188 + 28), v132, v130);
        *v133 = v129;
        sub_23DF89C1C((uint64_t)v133, (uint64_t)v40 + *(int *)(v193 + 36), &qword_256D1E6B0);
        v134 = v244;
        v40[8] = v243;
        v40[9] = v134;
        v135 = v246;
        v40[10] = v245;
        v40[11] = v135;
        v136 = v240[1];
        v40[4] = v240[0];
        v40[5] = v136;
        v137 = v242;
        v40[6] = v241;
        v40[7] = v137;
        v138 = v237;
        *v40 = v236;
        v40[1] = v138;
        v139 = v239;
        v40[2] = v238;
        v40[3] = v139;
        sub_23E0571E8((uint64_t)&v236);
        sub_23DF89C7C((uint64_t)v133, &qword_256D1E6B0);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v132, v130);
        sub_23E05721C((uint64_t)&v236);
        v140 = &qword_256D22ED0;
        v141 = v186;
        sub_23DF89340((uint64_t)v40, v186, &qword_256D22ED0);
        sub_23DF89C1C(v141, v196, &qword_256D22ED0);
        swift_storeEnumTagMultiPayload();
        sub_23E05663C();
        sub_23E0567EC();
        v142 = (uint64_t)v194;
        sub_23E136480();
        v143 = v141;
      }
      sub_23DF89C7C(v143, v140);
      v96 = &qword_256D22ED8;
      sub_23DF89C1C(v142, v213, &qword_256D22ED8);
      swift_storeEnumTagMultiPayload();
      sub_23E056618();
      sub_23E056978();
      v84 = v211;
      sub_23E136480();
      v98 = v142;
    }
    else
    {
      sub_23E136CB4();
      sub_23E1363A8();
      v73 = sub_23E1363B4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v37, 0, 1, v73);
      v74 = sub_23E136CE4();
      swift_release();
      sub_23DF89C7C((uint64_t)v37, &qword_256D1DB88);
      v76 = v199;
      v75 = v200;
      v77 = v201;
      (*(void (**)(char *, _QWORD, uint64_t))(v200 + 104))(v199, *MEMORY[0x24BDF40A8], v201);
      v78 = swift_getKeyPath();
      v79 = v202;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v202 + *(int *)(v198 + 28), v76, v77);
      *v79 = v78;
      v80 = v204;
      sub_23DF89C1C((uint64_t)v79, (uint64_t)v204 + *(int *)(v197 + 36), &qword_256D22E98);
      *v80 = v74;
      swift_retain();
      sub_23DF89C7C((uint64_t)v79, &qword_256D22E98);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
      swift_release();
      v81 = v208;
      if (*(_BYTE *)(v208 + 41) == 2)
      {
        v82 = v232;
        v83 = v235;
        v84 = v211;
        v85 = (uint64_t)v187;
        if (qword_256D1D3A0 != -1)
          swift_once();
        v86 = &qword_256D346C0;
      }
      else
      {
        v82 = v232;
        v83 = v235;
        v84 = v211;
        v85 = (uint64_t)v187;
        if (qword_256D1D398 != -1)
          swift_once();
        v86 = &qword_256D346B8;
      }
      v91 = *v86;
      swift_retain();
      v92 = swift_getKeyPath();
      sub_23DF89C1C((uint64_t)v80, v85, &qword_256D22EA0);
      v93 = (uint64_t *)(v85 + *(int *)(v203 + 36));
      *v93 = v92;
      v93[1] = v91;
      sub_23DF89C7C((uint64_t)v80, &qword_256D22EA0);
      if ((v82 & 1) != 0)
      {
        if (v83)
          v94 = v231;
        else
          v94 = v234;
      }
      else
      {
        v94 = *(_QWORD *)(v81 + 64);
      }
      swift_retain();
      v95 = v205;
      sub_23DF89C1C(v85, v205, &qword_256D22EA8);
      *(_QWORD *)(v95 + *(int *)(v214 + 36)) = v94;
      sub_23DF89C7C(v85, &qword_256D22EA8);
      v96 = &qword_256D22EB0;
      v97 = v206;
      sub_23DF89340(v95, v206, &qword_256D22EB0);
      sub_23DF89C1C(v97, v213, &qword_256D22EB0);
      swift_storeEnumTagMultiPayload();
      sub_23E056618();
      sub_23E056978();
      sub_23E136480();
      v98 = v97;
    }
    sub_23DF89C7C(v98, v96);
    sub_23DF89C1C(v84, (uint64_t)v218, &qword_256D22EE0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D22FB8);
    sub_23E0565F4();
    sub_23E056B04();
    v151 = (uint64_t)v219;
    sub_23E136480();
    sub_23DF89C1C(v151, (uint64_t)v228, &qword_256D22E90);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D22F00);
    sub_23DF98488(&qword_256D22F08, &qword_256D22E90, sub_23E0565F4, sub_23E056B04);
    sub_23E056B60(&qword_256D22FE8, &qword_256D22F00, (uint64_t (*)(void))sub_23E056C08);
    v125 = v233;
    sub_23E136480();
    sub_23DF89C7C(v151, &qword_256D22E90);
    v126 = v84;
    v127 = &qword_256D22EE0;
    goto LABEL_45;
  }
  v50 = (uint64_t)v207;
  v49 = v208;
  sub_23DF89340(a3 + 112, (uint64_t)&v273, &qword_256D22EF8);
  sub_23DF89340((uint64_t)&v273, (uint64_t)&v276, &qword_256D22EF8);
  v51 = v276;
  if (v276)
  {
    if (v235)
    {
      if ((v232 & 1) != 0)
      {
        if ((v230 & 1) != 0)
          v52 = 0x6574696857206E4FLL;
        else
          v52 = 28239;
        if ((v230 & 1) != 0)
          v53 = 0xE800000000000000;
        else
          v53 = 0xE200000000000000;
        sub_23E05706C(&v273);
        sub_23E05706C(&v273);
        sub_23E079A0C(v51, v52, v53, v215 & 1, &v270, a7, a8);
        v247 = v270;
        v248 = v271;
        *(_QWORD *)&v249 = v272;
        BYTE8(v249) = 0;
        goto LABEL_38;
      }
    }
    else if ((v232 & 1) != 0)
    {
      sub_23E05706C(&v273);
      sub_23E05706C(&v273);
      sub_23E079A0C(v51, 0x6F6C6F432066664FLL, 0xE900000000000072, v215 & 1, &v270, a7, a8);
      v247 = v270;
      v248 = v271;
      *(_QWORD *)&v249 = v272;
      BYTE8(v249) = 1;
LABEL_38:
      sub_23E057168(&v270, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E057098);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D22FD8);
      sub_23E056B44();
      sub_23E136480();
      v247 = v236;
      v248 = v237;
      *(_QWORD *)&v249 = v238;
      WORD4(v249) = BYTE8(v238);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D22FC8);
      sub_23E056B28();
      sub_23E136480();
      sub_23E057168(&v270, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E057120);
LABEL_40:
      v114 = v237;
      v115 = v238;
      v116 = BYTE8(v238);
      v117 = BYTE9(v238);
      v211 = v236;
      v212 = v237;
      v118 = v218;
      *v218 = v236;
      v118[1] = v114;
      *((_QWORD *)v118 + 4) = v115;
      *((_BYTE *)v118 + 40) = v116;
      *((_BYTE *)v118 + 41) = v117;
      v213 = v115;
      LODWORD(v214) = v116;
      LODWORD(v215) = v117;
      swift_storeEnumTagMultiPayload();
      v119 = v211;
      v121 = *((_QWORD *)&v212 + 1);
      v120 = v212;
      sub_23E057108(v211, *((uint64_t *)&v211 + 1), v212, *((uint64_t *)&v212 + 1), v115, v116, v117, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_23E057094, (uint64_t (*)(void))sub_23E057098);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D22FB8);
      sub_23E0565F4();
      sub_23E056B04();
      v122 = (uint64_t)v219;
      sub_23E136480();
      sub_23DF89C1C(v122, (uint64_t)v228, &qword_256D22E90);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D22F00);
      sub_23DF98488(&qword_256D22F08, &qword_256D22E90, sub_23E0565F4, sub_23E056B04);
      sub_23E056B60(&qword_256D22FE8, &qword_256D22F00, (uint64_t (*)(void))sub_23E056C08);
      v123 = v233;
      sub_23E136480();
      sub_23E0570E0(&v273);
      v124 = v120;
      v125 = v123;
      sub_23E057108(v119, *((uint64_t *)&v119 + 1), v124, v121, v213, v214, v215, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_23E05711C, (uint64_t (*)(void))sub_23E057120);
      v126 = v122;
      v127 = &qword_256D22E90;
LABEL_45:
      sub_23DF89C7C(v126, v127);
      v152 = v232;
      v153 = v235;
      goto LABEL_46;
    }
    sub_23E05706C(&v273);
    sub_23E05706C(&v273);
    sub_23E079A0C(v51, 0x6574696857206E4FLL, 0xE800000000000000, v215 & 1, &v270, a7, a8);
    v247 = v270;
    v248 = v271;
    *(_QWORD *)&v249 = v272;
    WORD4(v249) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D22FC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D22FD8);
    sub_23E056B28();
    sub_23E056B44();
    sub_23E136480();
    goto LABEL_40;
  }
  v99 = a3;
  v100 = v49 + *(int *)(type metadata accessor for TransitionTileView() + 24);
  v101 = type metadata accessor for Device();
  v102 = (_QWORD *)(v100 + *(int *)(v101 + 28));
  v103 = v102[1];
  v104 = v232;
  if (v103)
  {
    v105 = v101;
    *(_QWORD *)&v236 = *v102;
    *((_QWORD *)&v236 + 1) = v103;
    sub_23DF8DC18();
    swift_bridgeObjectRetain();
    v219 = (char *)sub_23E13693C();
    v107 = v106;
    v109 = v108;
    v111 = v110;
    v112 = swift_getKeyPath();
    if ((v104 & 1) != 0)
      v113 = (uint64_t *)(v100 + *(int *)(v105 + 56));
    else
      v113 = (uint64_t *)(v99 + 64);
    v174 = v109 & 1;
    v175 = *v113;
    swift_retain();
    if (*(_BYTE *)(v99 + 41))
      sub_23E1367D4();
    else
      sub_23E1367F8();
    v180 = sub_23E1367C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 56))(v50, 1, 1, v180);
    v177 = sub_23E136804();
    v173 = v219;
    sub_23DF89C7C(v50, &qword_256D1DBA0);
    v176 = swift_getKeyPath();
    v181 = swift_getKeyPath();
    v178 = vdupq_n_s64(1uLL);
    v178.i64[0] = v112;
    v179 = vdupq_n_s64(0x3FC999999999999AuLL);
    v179.i64[0] = v181;
  }
  else
  {
    v173 = 0;
    v107 = 0;
    v174 = 0;
    v111 = 0;
    v175 = 0;
    v176 = 0;
    v177 = 0;
    v178 = 0uLL;
    v179 = 0uLL;
  }
  v182 = v228;
  v228->i64[0] = (uint64_t)v173;
  v182->i64[1] = v107;
  v182[1].i64[0] = v174;
  v182[1].i64[1] = v111;
  v182[2] = v178;
  v182[3].i64[0] = 0;
  v182[3].i64[1] = v175;
  v182[4].i64[0] = v176;
  v182[4].i64[1] = v177;
  v182[5] = v179;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D22F00);
  sub_23DF98488(&qword_256D22F08, &qword_256D22E90, sub_23E0565F4, sub_23E056B04);
  sub_23E056B60(&qword_256D22FE8, &qword_256D22F00, (uint64_t (*)(void))sub_23E056C08);
  v125 = v233;
  sub_23E136480();
  v153 = v235;
  v152 = v232;
LABEL_46:
  v154 = (v153 & v152 & 1) == 0;
  v235 = v154;
  if ((v230 & 1) != 0)
    v155 = 1.0;
  else
    v155 = 0.0;
  v156 = v262;
  LODWORD(v228) = v262;
  v157 = v259;
  v230 = v259;
  v158 = v257;
  v232 = v257;
  v159 = v225;
  sub_23DF89C1C(v125, v225, &qword_256D22EE8);
  LOBYTE(v247) = v154;
  *(_DWORD *)((char *)&v247 + 1) = v263[0];
  DWORD1(v247) = *(_DWORD *)((char *)v263 + 3);
  v160 = v231;
  *((_QWORD *)&v247 + 1) = v231;
  *(_QWORD *)&v248 = v234;
  v161 = KeyPath;
  *((_QWORD *)&v248 + 1) = KeyPath;
  v249 = 0u;
  v250 = 0u;
  memset(v251, 0, 25);
  BYTE9(v251[1]) = v156;
  *(_DWORD *)((char *)&v251[1] + 10) = v260;
  HIWORD(v251[1]) = v261;
  *(double *)&v252 = v155;
  v162 = v220;
  v163 = v221;
  *((_QWORD *)&v252 + 1) = v220;
  LOBYTE(v253) = v157;
  *(_DWORD *)((char *)&v253 + 1) = v258[0];
  DWORD1(v253) = *(_DWORD *)((char *)v258 + 3);
  *((_QWORD *)&v253 + 1) = v221;
  LOBYTE(v254) = v158;
  *(_DWORD *)((char *)&v254 + 1) = v256[0];
  DWORD1(v254) = *(_DWORD *)((char *)v256 + 3);
  v165 = v222;
  v164 = v223;
  *((_QWORD *)&v254 + 1) = v223;
  v255 = v222;
  v166 = (_OWORD *)v229;
  *(_QWORD *)(v229 + 144) = v222;
  v167 = v251[1];
  v166[4] = v251[0];
  v166[5] = v167;
  v168 = v250;
  v166[2] = v249;
  v166[3] = v168;
  v169 = v248;
  *v166 = v247;
  v166[1] = v169;
  v170 = v253;
  v166[6] = v252;
  v166[7] = v170;
  v166[8] = v254;
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23030);
  sub_23DF89C1C(v159, (uint64_t)v166 + *(int *)(v171 + 48), &qword_256D22EE8);
  sub_23E056E18((uint64_t)&v247);
  sub_23DF89C7C(v233, &qword_256D22EE8);
  sub_23DF89C7C(v159, &qword_256D22EE8);
  LOBYTE(v236) = v235;
  *(_DWORD *)((char *)&v236 + 1) = v263[0];
  DWORD1(v236) = *(_DWORD *)((char *)v263 + 3);
  *((_QWORD *)&v236 + 1) = v160;
  *(_QWORD *)&v237 = v234;
  *((_QWORD *)&v237 + 1) = v161;
  v238 = 0u;
  v239 = 0u;
  memset(v240, 0, 25);
  BYTE9(v240[1]) = (_BYTE)v228;
  *(_DWORD *)((char *)&v240[1] + 10) = v260;
  HIWORD(v240[1]) = v261;
  *(double *)&v241 = v155;
  *((_QWORD *)&v241 + 1) = v162;
  LOBYTE(v242) = v230;
  DWORD1(v242) = *(_DWORD *)((char *)v258 + 3);
  *(_DWORD *)((char *)&v242 + 1) = v258[0];
  *((_QWORD *)&v242 + 1) = v163;
  LOBYTE(v243) = v232;
  DWORD1(v243) = *(_DWORD *)((char *)v256 + 3);
  *(_DWORD *)((char *)&v243 + 1) = v256[0];
  *((_QWORD *)&v243 + 1) = v164;
  *(_QWORD *)&v244 = v165;
  return sub_23E056EB8((uint64_t)&v236);
}

uint64_t sub_23E0515EC(uint64_t a1)
{
  return sub_23E05160C(a1, &qword_256D346B8);
}

uint64_t sub_23E0515FC(uint64_t a1)
{
  return sub_23E05160C(a1, &qword_256D346C0);
}

uint64_t sub_23E05160C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1367C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_23E136804();
  result = sub_23DF89C7C((uint64_t)v5, &qword_256D1DBA0);
  *a2 = v7;
  return result;
}

uint64_t sub_23E0516C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t KeyPath;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  double MinX;
  double v47;
  double v48;
  void *v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  CGRect v79;

  v69 = a1;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D38);
  MEMORY[0x24BDAC7A8](v63);
  v62 = (uint64_t *)((char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = sub_23E1368C4();
  v71 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v70 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D40);
  MEMORY[0x24BDAC7A8](v59);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D48);
  MEMORY[0x24BDAC7A8](v65);
  v64 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D50);
  MEMORY[0x24BDAC7A8](v66);
  v61 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22D58);
  MEMORY[0x24BDAC7A8](v67);
  v68 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)v1;
  v10 = *(double *)(v1 + 8);
  v11 = *(double *)(v1 + 16);
  v12 = *(double *)(v1 + 24);
  v13 = *(double *)(v1 + 32);
  v14 = *(void **)(v1 + 40);
  v15 = (uint64_t *)(v1 + 48);
  v16 = *(_QWORD *)(v1 + 72);
  v17 = *(_QWORD *)(v1 + 80);
  v18 = *(unsigned __int8 *)(v1 + 88);
  v57 = *(unsigned __int8 *)(v1 + 89);
  if (!v18)
    v15 = (uint64_t *)(v1 + 56);
  v60 = *v15;
  *(_QWORD *)&v72 = v16;
  *((_QWORD *)&v72 + 1) = v17;
  sub_23DF8DC18();
  swift_bridgeObjectRetain();
  v19 = sub_23E13693C();
  v21 = v20;
  v23 = v22 & 1;
  v24 = v14;
  sub_23E136858();
  v25 = sub_23E136900();
  v27 = v26;
  v29 = v28;
  v56 = v30;
  swift_release();
  v31 = v29 & 1;
  sub_23DFA055C(v19, v21, v23);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v33 = v71;
  v34 = v70;
  v35 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, *MEMORY[0x24BDF1CD0], v58);
  v36 = swift_getKeyPath();
  v37 = v62;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v62 + *(int *)(v63 + 28), v34, v35);
  *v37 = v36;
  sub_23DF89C1C((uint64_t)v37, (uint64_t)&v5[*(int *)(v59 + 36)], &qword_256D22D38);
  *(_QWORD *)v5 = v25;
  *((_QWORD *)v5 + 1) = v27;
  v5[16] = v31;
  *((_QWORD *)v5 + 3) = v56;
  *((_QWORD *)v5 + 4) = KeyPath;
  *((_QWORD *)v5 + 5) = 1;
  v5[48] = 0;
  sub_23DFA056C(v25, v27, v31);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DF89C7C((uint64_t)v37, &qword_256D22D38);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v35);
  v38 = v31;
  v39 = (uint64_t)v61;
  sub_23DFA055C(v25, v27, v38);
  swift_release();
  swift_bridgeObjectRelease();
  v40 = swift_getKeyPath();
  v41 = v64;
  sub_23DF89C1C((uint64_t)v5, v64, &qword_256D22D40);
  v42 = v41 + *(int *)(v65 + 36);
  *(_QWORD *)v42 = v40;
  LODWORD(KeyPath) = v57;
  *(_BYTE *)(v42 + 8) = v57 ^ 1;
  sub_23DF89C7C((uint64_t)v5, &qword_256D22D40);
  v43 = v60;
  swift_retain();
  v44 = swift_getKeyPath();
  sub_23DF89C1C(v41, v39, &qword_256D22D48);
  v45 = (uint64_t *)(v39 + *(int *)(v66 + 36));
  *v45 = v44;
  v45[1] = v43;
  sub_23DF89C7C(v41, &qword_256D22D48);
  v79.origin.x = v9;
  v79.origin.y = v10;
  v79.size.width = v11;
  v79.size.height = v12;
  MinX = CGRectGetMinX(v79);
  v47 = 10.0;
  if ((_DWORD)KeyPath)
    v47 = 12.0;
  v48 = v13 - MinX - v47;
  sub_23E136FF0();
  if (v48 < 0.0)
  {
    sub_23E13735C();
    v49 = (void *)sub_23E1366F0();
    sub_23E135BEC();

  }
  sub_23E136060();
  v50 = v68;
  sub_23DF89C1C(v39, v68, &qword_256D22D50);
  v51 = (_OWORD *)(v50 + *(int *)(v67 + 36));
  v52 = v77;
  v51[4] = v76;
  v51[5] = v52;
  v51[6] = v78;
  v53 = v73;
  *v51 = v72;
  v51[1] = v53;
  v54 = v75;
  v51[2] = v74;
  v51[3] = v54;
  sub_23DF89C7C(v39, &qword_256D22D50);
  return sub_23DF89340(v50, v69, &qword_256D22D58);
}

id sub_23E051CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6B68]), sel_init);
  v7 = (void *)sub_23E137164();
  objc_msgSend(v6, sel_setText_, v7);

  objc_msgSend(v6, sel_setFont_, a5);
  sub_23DFF84F0(0, &qword_256D22D60);
  swift_retain();
  v8 = (void *)sub_23E137410();
  objc_msgSend(v6, sel_setTextColor_, v8);

  objc_msgSend(v6, sel_setNumberOfLines_, 1);
  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v6, sel_setLineBreakMode_, 4);
  objc_msgSend(v6, sel_setLineBreakStrategy_, 0xFFFFLL);
  objc_msgSend(v6, sel_setMarqueeEnabled_, 1);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6F90]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_addSubview_, v6);
  v10 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20D78);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23E13E0D0;
  v12 = objc_msgSend(v6, sel_heightAnchor);
  v13 = objc_msgSend(v9, sel_heightAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v11 + 32) = v14;
  v15 = objc_msgSend(v6, sel_widthAnchor);
  v16 = objc_msgSend(v9, sel_widthAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v11 + 40) = v17;
  sub_23E137284();
  sub_23DFF84F0(0, &qword_256D22D68);
  v18 = (void *)sub_23E137260();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_activateConstraints_, v18);

  return v9;
}

id sub_23E051FDC(uint64_t a1)
{
  uint64_t *v1;

  return sub_23E051CE0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_23E051FE8()
{
  sub_23E055FD4();
  return sub_23E13645C();
}

uint64_t sub_23E052038()
{
  sub_23E055FD4();
  return sub_23E136408();
}

void sub_23E052088()
{
  sub_23E055FD4();
  sub_23E136450();
  __break(1u);
}

double TransitionTileView.Config.Icon.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void TransitionTileView.Config.Icon.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*TransitionTileView.Config.Icon.frame.modify())()
{
  return CGPointMake;
}

double TransitionTileView.Config.Icon.maxWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void TransitionTileView.Config.Icon.maxWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*TransitionTileView.Config.Icon.maxWidth.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.Icon.drawCircle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

void TransitionTileView.Config.Icon.size.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

uint64_t TransitionTileView.Config.Icon.color.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t TransitionTileView.Config.Icon.unresponsiveColor.getter()
{
  return swift_retain();
}

uint64_t TransitionTileView.Config.Icon.useAssetMarginSize.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t TransitionTileView.Config.Icon.iconIdentifier.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23E052158(v2, v3);
}

uint64_t sub_23E052158(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *TransitionTileView.Config.Icon.micaPackage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 112);
  v2 = v1;
  return v1;
}

double TransitionTileView.Config.Icon.init(frame:maxWidth:drawCircle:size:color:unresponsiveColor:micaPackage:useAssetMarginSize:)@<D0>(char a1@<W0>, char *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>)
{
  char v12;
  double result;

  v12 = *a2;
  *(double *)a7 = a8;
  *(double *)(a7 + 8) = a9;
  *(double *)(a7 + 16) = a10;
  *(double *)(a7 + 24) = a11;
  *(double *)(a7 + 32) = a12;
  *(_BYTE *)(a7 + 40) = a1;
  *(_BYTE *)(a7 + 41) = v12;
  *(_OWORD *)(a7 + 48) = *a3;
  *(_QWORD *)(a7 + 64) = a4;
  *(_BYTE *)(a7 + 72) = a6;
  result = 0.0;
  *(_OWORD *)(a7 + 80) = 0u;
  *(_OWORD *)(a7 + 96) = 0u;
  *(_QWORD *)(a7 + 112) = a5;
  return result;
}

uint64_t TransitionTileView.Config.Badge.color.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

__n128 TransitionTileView.Config.Badge.init(color:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double TransitionTileView.Config.Text.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void TransitionTileView.Config.Text.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*TransitionTileView.Config.Text.frame.modify())()
{
  return CGPointMake;
}

double TransitionTileView.Config.Text.maxWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void TransitionTileView.Config.Text.maxWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*TransitionTileView.Config.Text.maxWidth.modify())()
{
  return CGPointMake;
}

id TransitionTileView.Config.Text.font.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void TransitionTileView.Config.Text.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

uint64_t (*TransitionTileView.Config.Text.font.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.Text.color.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

__n128 TransitionTileView.Config.Text.color.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  swift_release();
  swift_release();
  result = *a1;
  v1[3] = *a1;
  return result;
}

uint64_t (*TransitionTileView.Config.Text.color.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.Text.featherText.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t TransitionTileView.Config.Text.featherText.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t (*TransitionTileView.Config.Text.featherText.modify())()
{
  return CGPointMake;
}

double TransitionTileView.Config.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void TransitionTileView.Config.cornerRadius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*TransitionTileView.Config.cornerRadius.modify())()
{
  return CGPointMake;
}

id TransitionTileView.Config.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  id v15;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 49);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_BYTE *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v11 = *(_QWORD *)(v1 + 104);
  v12 = *(_QWORD *)(v1 + 112);
  v15 = *(id *)(v1 + 120);
  v13 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 41) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 112) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23E052158(v9, v10);
  return v15;
}

__n128 TransitionTileView.Config.icon.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __n128 result;
  char v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __n128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;

  v10 = a1[1];
  v11 = *a1;
  v3 = *((_QWORD *)a1 + 4);
  v9 = *((_BYTE *)a1 + 40);
  v4 = *((_BYTE *)a1 + 41);
  v16 = *((_QWORD *)a1 + 8);
  v15 = *((_BYTE *)a1 + 72);
  v13 = (__n128)a1[6];
  v14 = a1[5];
  v12 = *((_QWORD *)a1 + 14);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(void **)(v1 + 120);
  swift_release();
  swift_release();
  swift_release();
  sub_23DFA65A4(v5, v6);

  *(_OWORD *)(v1 + 8) = v11;
  *(_OWORD *)(v1 + 24) = v10;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v9;
  *(_BYTE *)(v1 + 49) = v4;
  *(_OWORD *)(v1 + 56) = a1[3];
  *(_QWORD *)(v1 + 72) = v16;
  *(_BYTE *)(v1 + 80) = v15;
  *(_OWORD *)(v1 + 88) = v14;
  result = v13;
  *(__n128 *)(v1 + 104) = v13;
  *(_QWORD *)(v1 + 120) = v12;
  return result;
}

uint64_t (*TransitionTileView.Config.icon.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.prefixText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  v4 = *(_QWORD *)(v1 + 144);
  v5 = *(_QWORD *)(v1 + 152);
  v6 = *(_QWORD *)(v1 + 160);
  v7 = *(void **)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 176);
  v9 = *(_QWORD *)(v1 + 184);
  v10 = *(_BYTE *)(v1 + 192);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_23E052584(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23E052584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v6;
  uint64_t result;

  if (a6)
  {
    v6 = a6;
    swift_retain();
    return swift_retain();
  }
  return result;
}

__n128 TransitionTileView.Config.prefixText.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_BYTE *)a1 + 64);
  sub_23DFA65D4(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160), *(void **)(v1 + 168));
  *(_OWORD *)(v1 + 128) = v8;
  *(_OWORD *)(v1 + 144) = v7;
  result = v6;
  *(__n128 *)(v1 + 160) = v6;
  *(_QWORD *)(v1 + 176) = v2;
  *(_QWORD *)(v1 + 184) = v3;
  *(_BYTE *)(v1 + 192) = v4;
  return result;
}

uint64_t (*TransitionTileView.Config.prefixText.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.primaryText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  id v10;

  v3 = *(_OWORD *)(v1 + 200);
  v2 = v1 + 200;
  v4 = *(_QWORD *)(v2 + 32);
  v5 = *(void **)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  v7 = *(_QWORD *)(v2 + 56);
  v8 = *(_BYTE *)(v2 + 64);
  v9 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v8;
  v10 = v5;
  swift_retain();
  return swift_retain();
}

__n128 TransitionTileView.Config.primaryText.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v3 = *((_QWORD *)a1 + 4);
  v4 = *((_QWORD *)a1 + 7);
  v5 = *((_BYTE *)a1 + 64);
  v6 = *(void **)(v1 + 240);
  swift_release();
  swift_release();

  *(_OWORD *)(v1 + 200) = v9;
  *(_OWORD *)(v1 + 216) = v8;
  *(_QWORD *)(v1 + 232) = v3;
  result = *(__n128 *)((char *)a1 + 40);
  *(__n128 *)(v1 + 240) = result;
  *(_QWORD *)(v1 + 256) = v4;
  *(_BYTE *)(v1 + 264) = v5;
  return result;
}

uint64_t (*TransitionTileView.Config.primaryText.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.secondaryText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 272);
  v3 = *(_QWORD *)(v1 + 280);
  v4 = *(_QWORD *)(v1 + 288);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_QWORD *)(v1 + 304);
  v7 = *(void **)(v1 + 312);
  v8 = *(_QWORD *)(v1 + 320);
  v9 = *(_QWORD *)(v1 + 328);
  v10 = *(_BYTE *)(v1 + 336);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_23E052584(v2, v3, v4, v5, v6, v7);
}

__n128 TransitionTileView.Config.secondaryText.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_BYTE *)a1 + 64);
  sub_23DFA65D4(*(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304), *(void **)(v1 + 312));
  *(_OWORD *)(v1 + 272) = v8;
  *(_OWORD *)(v1 + 288) = v7;
  result = v6;
  *(__n128 *)(v1 + 304) = v6;
  *(_QWORD *)(v1 + 320) = v2;
  *(_QWORD *)(v1 + 328) = v3;
  *(_BYTE *)(v1 + 336) = v4;
  return result;
}

uint64_t (*TransitionTileView.Config.secondaryText.modify())()
{
  return CGPointMake;
}

uint64_t TransitionTileView.Config.badge.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 344);
  v3 = *(_QWORD *)(v1 + 352);
  *a1 = v2;
  a1[1] = v3;
  return sub_23E052824(v2);
}

uint64_t sub_23E052824(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t TransitionTileView.Config.badge.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_23DF8F8D4(*(_QWORD *)(v1 + 344));
  *(_QWORD *)(v1 + 344) = v2;
  *(_QWORD *)(v1 + 352) = v3;
  return result;
}

uint64_t (*TransitionTileView.Config.badge.modify())()
{
  return CGPointMake;
}

void TransitionTileView.Config.background.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 360);
}

_BYTE *TransitionTileView.Config.background.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 360) = *result;
  return result;
}

uint64_t (*TransitionTileView.Config.background.modify())()
{
  return CGPointMake;
}

double TransitionTileView.Config.tileFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 368);
}

void TransitionTileView.Config.tileFrame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[46] = a1;
  v4[47] = a2;
  v4[48] = a3;
  v4[49] = a4;
}

uint64_t (*TransitionTileView.Config.tileFrame.modify())()
{
  return CGPointMake;
}

BOOL static TransitionTileView.Config.BackgroundStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransitionTileView.Config.BackgroundStyle.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t sub_23E052920()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E052934()
{
  unint64_t result;

  result = qword_256D22C70;
  if (!qword_256D22C70)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for TransitionTileView.Config.Icon.Size, &type metadata for TransitionTileView.Config.Icon.Size);
    atomic_store(result, (unint64_t *)&qword_256D22C70);
  }
  return result;
}

unint64_t sub_23E05297C()
{
  unint64_t result;

  result = qword_256D22C78;
  if (!qword_256D22C78)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for TransitionTileView.Config.BackgroundStyle, &type metadata for TransitionTileView.Config.BackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_256D22C78);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TransitionTileView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  _OWORD *v14;
  _OWORD *v15;
  void *v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  void *v28;
  id v29;
  __int128 v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    v8 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v8;
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v9 = a2[13];
    swift_retain();
    swift_retain();
    swift_retain();
    if (v9)
    {
      *(_QWORD *)(v4 + 96) = a2[12];
      *(_QWORD *)(v4 + 104) = v9;
      v10 = a2[15];
      *(_QWORD *)(v4 + 112) = a2[14];
      *(_QWORD *)(v4 + 120) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v12 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(v4 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(v4 + 112) = v12;
    }
    v13 = (void *)a2[16];
    *(_QWORD *)(v4 + 128) = v13;
    v14 = (_OWORD *)(v4 + 136);
    v15 = a2 + 17;
    v16 = (void *)a2[22];
    v17 = v13;
    if (v16)
    {
      v18 = *(_OWORD *)(a2 + 19);
      *v14 = *v15;
      *(_OWORD *)(v4 + 152) = v18;
      *(_QWORD *)(v4 + 168) = a2[21];
      *(_QWORD *)(v4 + 176) = v16;
      v19 = a2[24];
      *(_QWORD *)(v4 + 184) = a2[23];
      *(_QWORD *)(v4 + 192) = v19;
      *(_BYTE *)(v4 + 200) = *((_BYTE *)a2 + 200);
      v20 = v16;
      swift_retain();
      swift_retain();
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 23);
      *(_OWORD *)(v4 + 168) = *(_OWORD *)(a2 + 21);
      *(_OWORD *)(v4 + 184) = v21;
      *(_BYTE *)(v4 + 200) = *((_BYTE *)a2 + 200);
      v22 = *(_OWORD *)(a2 + 19);
      *v14 = *v15;
      *(_OWORD *)(v4 + 152) = v22;
    }
    v23 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(v4 + 208) = *((_OWORD *)a2 + 13);
    *(_OWORD *)(v4 + 224) = v23;
    v24 = (void *)a2[31];
    *(_QWORD *)(v4 + 240) = a2[30];
    *(_QWORD *)(v4 + 248) = v24;
    v25 = a2[33];
    *(_QWORD *)(v4 + 256) = a2[32];
    *(_QWORD *)(v4 + 264) = v25;
    *(_BYTE *)(v4 + 272) = *((_BYTE *)a2 + 272);
    v26 = (_OWORD *)(v4 + 280);
    v27 = a2 + 35;
    v28 = (void *)a2[40];
    v29 = v24;
    swift_retain();
    swift_retain();
    if (v28)
    {
      v30 = *(_OWORD *)(a2 + 37);
      *v26 = *v27;
      *(_OWORD *)(v4 + 296) = v30;
      *(_QWORD *)(v4 + 312) = a2[39];
      *(_QWORD *)(v4 + 320) = v28;
      v31 = a2[42];
      *(_QWORD *)(v4 + 328) = a2[41];
      *(_QWORD *)(v4 + 336) = v31;
      *(_BYTE *)(v4 + 344) = *((_BYTE *)a2 + 344);
      v32 = v28;
      swift_retain();
      swift_retain();
      v33 = a2[44];
      if (v33)
      {
LABEL_11:
        v34 = a2[45];
        *(_QWORD *)(v4 + 352) = v33;
        *(_QWORD *)(v4 + 360) = v34;
        swift_retain();
        swift_retain();
LABEL_14:
        *(_BYTE *)(v4 + 368) = *((_BYTE *)a2 + 368);
        v37 = *(_OWORD *)(a2 + 49);
        *(_OWORD *)(v4 + 376) = *(_OWORD *)(a2 + 47);
        *(_OWORD *)(v4 + 392) = v37;
        v38 = *(int *)(a3 + 24);
        v39 = v4 + v38;
        v40 = (uint64_t)a2 + v38;
        v41 = sub_23E134C80();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        v42 = (int *)type metadata accessor for Device();
        v43 = v42[5];
        v44 = (_QWORD *)(v39 + v43);
        v45 = (_QWORD *)(v40 + v43);
        v46 = v45[1];
        *v44 = *v45;
        v44[1] = v46;
        v47 = v42[6];
        v48 = (_QWORD *)(v39 + v47);
        v49 = v40 + v47;
        v91 = a3;
        v50 = *(_QWORD *)(v40 + v47 + 8);
        *v48 = *(_QWORD *)(v40 + v47);
        v48[1] = v50;
        v51 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v90 = (char *)v48 + v51;
        v52 = v49 + v51;
        v53 = sub_23E135910();
        v54 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(v90, v52, v53);
        v55 = v42[7];
        v56 = (_QWORD *)(v39 + v55);
        v57 = (_QWORD *)(v40 + v55);
        v58 = v57[1];
        *v56 = *v57;
        v56[1] = v58;
        v59 = v42[8];
        v60 = (_QWORD *)(v39 + v59);
        v61 = (_QWORD *)(v40 + v59);
        v89 = v61[1];
        *v60 = *v61;
        v60[1] = v89;
        *(_QWORD *)(v39 + v42[9]) = *(_QWORD *)(v40 + v42[9]);
        *(_BYTE *)(v39 + v42[10]) = *(_BYTE *)(v40 + v42[10]);
        *(_BYTE *)(v39 + v42[11]) = *(_BYTE *)(v40 + v42[11]);
        *(_BYTE *)(v39 + v42[12]) = *(_BYTE *)(v40 + v42[12]);
        *(_BYTE *)(v39 + v42[13]) = *(_BYTE *)(v40 + v42[13]);
        *(_QWORD *)(v39 + v42[14]) = *(_QWORD *)(v40 + v42[14]);
        *(_BYTE *)(v39 + v42[15]) = *(_BYTE *)(v40 + v42[15]);
        v62 = v42[16];
        v63 = (_QWORD *)(v39 + v62);
        v64 = (_QWORD *)(v40 + v62);
        v88 = v64[1];
        *v63 = *v64;
        v63[1] = v88;
        v65 = v42[17];
        v66 = (_QWORD *)(v39 + v65);
        v67 = (_QWORD *)(v40 + v65);
        v87 = v67[1];
        *v66 = *v67;
        v66[1] = v87;
        v68 = v42[18];
        v69 = (_QWORD *)(v39 + v68);
        v70 = (_QWORD *)(v40 + v68);
        v71 = v70[1];
        *v69 = *v70;
        v69[1] = v71;
        *(_BYTE *)(v39 + v42[19]) = *(_BYTE *)(v40 + v42[19]);
        *(_BYTE *)(v39 + v42[20]) = *(_BYTE *)(v40 + v42[20]);
        v72 = v42[21];
        v73 = (_QWORD *)(v39 + v72);
        v74 = (_QWORD *)(v40 + v72);
        v75 = v74[1];
        *v73 = *v74;
        v73[1] = v75;
        v76 = *(int *)(v91 + 28);
        v77 = v4 + v76;
        v78 = (uint64_t)a2 + v76;
        v79 = *(_QWORD *)(v78 + 8);
        v80 = *(_QWORD *)(v78 + 24);
        v85 = *(_QWORD *)(v78 + 16);
        v86 = *(_QWORD *)v78;
        v81 = *(_QWORD *)(v78 + 32);
        v84 = *(_QWORD *)(v78 + 40);
        v82 = *(_QWORD *)(v78 + 56);
        v92 = *(_QWORD *)(v78 + 48);
        LOBYTE(v40) = *(_BYTE *)(v78 + 64);
        LOBYTE(v46) = *(_BYTE *)(v78 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23DF98590(v86, v79, v85, v80, v81, v84, v92, v82, v40, v46);
        *(_QWORD *)v77 = v86;
        *(_QWORD *)(v77 + 8) = v79;
        *(_QWORD *)(v77 + 16) = v85;
        *(_QWORD *)(v77 + 24) = v80;
        *(_QWORD *)(v77 + 32) = v81;
        *(_QWORD *)(v77 + 40) = v84;
        *(_QWORD *)(v77 + 48) = v92;
        *(_QWORD *)(v77 + 56) = v82;
        *(_BYTE *)(v77 + 64) = v40;
        *(_BYTE *)(v77 + 65) = v46;
        return v4;
      }
    }
    else
    {
      v35 = *(_OWORD *)(a2 + 41);
      *(_OWORD *)(v4 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(v4 + 328) = v35;
      *(_BYTE *)(v4 + 344) = *((_BYTE *)a2 + 344);
      v36 = *(_OWORD *)(a2 + 37);
      *v26 = *v27;
      *(_OWORD *)(v4 + 296) = v36;
      v33 = a2[44];
      if (v33)
        goto LABEL_11;
    }
    *(_OWORD *)(v4 + 352) = *((_OWORD *)a2 + 22);
    goto LABEL_14;
  }
  v11 = *a2;
  *(_QWORD *)v4 = *a2;
  v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v4;
}

uint64_t destroy for TransitionTileView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v4 = *(void **)(a1 + 176);
  if (v4)
  {

    swift_release();
    swift_release();
  }

  swift_release();
  swift_release();
  v5 = *(void **)(a1 + 320);
  if (v5)
  {

    swift_release();
    swift_release();
  }
  if (*(_QWORD *)(a1 + 352))
  {
    swift_release();
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v9 = v6 + *(int *)(v8 + 24);
  swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v11 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 28);
  return sub_23DF985F0(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(_BYTE *)(v12 + 64), *(_BYTE *)(v12 + 65));
}

uint64_t initializeWithCopy for TransitionTileView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _OWORD *v12;
  _OWORD *v13;
  void *v14;
  id v15;
  __int128 v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  void *v26;
  id v27;
  __int128 v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v8;
    v9 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
  }
  v11 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = (_OWORD *)(a1 + 136);
  v13 = (_OWORD *)(a2 + 136);
  v14 = *(void **)(a2 + 176);
  v15 = v11;
  if (v14)
  {
    v16 = *(_OWORD *)(a2 + 152);
    *v12 = *v13;
    *(_OWORD *)(a1 + 152) = v16;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v14;
    v17 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v17;
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    v18 = v14;
    swift_retain();
    swift_retain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v19;
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    v20 = *(_OWORD *)(a2 + 152);
    *v12 = *v13;
    *(_OWORD *)(a1 + 152) = v20;
  }
  v21 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v21;
  v22 = *(void **)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v22;
  v23 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v23;
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v24 = (_OWORD *)(a1 + 280);
  v25 = (_OWORD *)(a2 + 280);
  v26 = *(void **)(a2 + 320);
  v27 = v22;
  swift_retain();
  swift_retain();
  if (!v26)
  {
    v33 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 328) = v33;
    *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
    v34 = *(_OWORD *)(a2 + 296);
    *v24 = *v25;
    *(_OWORD *)(a1 + 296) = v34;
    v31 = *(_QWORD *)(a2 + 352);
    if (v31)
      goto LABEL_9;
LABEL_11:
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    goto LABEL_12;
  }
  v28 = *(_OWORD *)(a2 + 296);
  *v24 = *v25;
  *(_OWORD *)(a1 + 296) = v28;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v26;
  v29 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v29;
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v30 = v26;
  swift_retain();
  swift_retain();
  v31 = *(_QWORD *)(a2 + 352);
  if (!v31)
    goto LABEL_11;
LABEL_9:
  v32 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = v31;
  *(_QWORD *)(a1 + 360) = v32;
  swift_retain();
  swift_retain();
LABEL_12:
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v35 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v35;
  v36 = *(int *)(a3 + 24);
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  v40 = (int *)type metadata accessor for Device();
  v41 = v40[5];
  v42 = (_QWORD *)(v37 + v41);
  v43 = (_QWORD *)(v38 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = v40[6];
  v46 = (_QWORD *)(v37 + v45);
  v47 = v38 + v45;
  v91 = a3;
  v48 = *(_QWORD *)(v38 + v45 + 8);
  *v46 = *(_QWORD *)(v38 + v45);
  v46[1] = v48;
  v49 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v90 = (char *)v46 + v49;
  v50 = v47 + v49;
  v51 = sub_23E135910();
  v52 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52(v90, v50, v51);
  v53 = v40[7];
  v54 = (_QWORD *)(v37 + v53);
  v55 = (_QWORD *)(v38 + v53);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = v40[8];
  v58 = (_QWORD *)(v37 + v57);
  v59 = (_QWORD *)(v38 + v57);
  v89 = v59[1];
  *v58 = *v59;
  v58[1] = v89;
  *(_QWORD *)(v37 + v40[9]) = *(_QWORD *)(v38 + v40[9]);
  *(_BYTE *)(v37 + v40[10]) = *(_BYTE *)(v38 + v40[10]);
  *(_BYTE *)(v37 + v40[11]) = *(_BYTE *)(v38 + v40[11]);
  *(_BYTE *)(v37 + v40[12]) = *(_BYTE *)(v38 + v40[12]);
  *(_BYTE *)(v37 + v40[13]) = *(_BYTE *)(v38 + v40[13]);
  *(_QWORD *)(v37 + v40[14]) = *(_QWORD *)(v38 + v40[14]);
  *(_BYTE *)(v37 + v40[15]) = *(_BYTE *)(v38 + v40[15]);
  v60 = v40[16];
  v61 = (_QWORD *)(v37 + v60);
  v62 = (_QWORD *)(v38 + v60);
  v88 = v62[1];
  *v61 = *v62;
  v61[1] = v88;
  v63 = v40[17];
  v64 = (_QWORD *)(v37 + v63);
  v65 = (_QWORD *)(v38 + v63);
  v87 = v65[1];
  *v64 = *v65;
  v64[1] = v87;
  v66 = v40[18];
  v67 = (_QWORD *)(v37 + v66);
  v68 = (_QWORD *)(v38 + v66);
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  *(_BYTE *)(v37 + v40[19]) = *(_BYTE *)(v38 + v40[19]);
  *(_BYTE *)(v37 + v40[20]) = *(_BYTE *)(v38 + v40[20]);
  v70 = v40[21];
  v71 = (_QWORD *)(v37 + v70);
  v72 = (_QWORD *)(v38 + v70);
  v73 = v72[1];
  *v71 = *v72;
  v71[1] = v73;
  v74 = *(int *)(v91 + 28);
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = *(_QWORD *)(v76 + 8);
  v78 = *(_QWORD *)(v76 + 24);
  v84 = *(_QWORD *)(v76 + 16);
  v85 = *(_QWORD *)v76;
  v92 = a1;
  v80 = *(_QWORD *)(v76 + 32);
  v79 = *(_QWORD *)(v76 + 40);
  v81 = *(_QWORD *)(v76 + 56);
  v86 = *(_QWORD *)(v76 + 48);
  LOBYTE(v38) = *(_BYTE *)(v76 + 64);
  LOBYTE(v44) = *(_BYTE *)(v76 + 65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23DF98590(v85, v77, v84, v78, v80, v79, v86, v81, v38, v44);
  *(_QWORD *)v75 = v85;
  *(_QWORD *)(v75 + 8) = v77;
  *(_QWORD *)(v75 + 16) = v84;
  *(_QWORD *)(v75 + 24) = v78;
  *(_QWORD *)(v75 + 32) = v80;
  *(_QWORD *)(v75 + 40) = v79;
  *(_QWORD *)(v75 + 48) = v86;
  *(_QWORD *)(v75 + 56) = v81;
  *(_BYTE *)(v75 + 64) = v38;
  *(_BYTE *)(v75 + 65) = v83;
  return v92;
}

uint64_t assignWithCopy for TransitionTileView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  void *v12;
  id v13;
  _OWORD *v14;
  _OWORD *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  __int128 v20;
  void *v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  void *v30;
  id v31;
  _OWORD *v32;
  _OWORD *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  __int128 v38;
  void *v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  char v103;
  char v104;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = (_OWORD *)(a1 + 96);
  v7 = (_OWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23DF89C7C(a1 + 96, &qword_256D22C80);
      v9 = *(_OWORD *)(a2 + 112);
      *v6 = *v7;
      *(_OWORD *)(a1 + 112) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 112);
    *v6 = *v7;
    *(_OWORD *)(a1 + 112) = v10;
  }
  v11 = *(void **)(a1 + 128);
  v12 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = v12;

  v14 = (_OWORD *)(a1 + 136);
  v15 = (_OWORD *)(a2 + 136);
  v16 = *(void **)(a1 + 176);
  v17 = *(_QWORD *)(a2 + 176);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      v18 = *(void **)(a2 + 176);
      *(_QWORD *)(a1 + 176) = v18;
      v19 = v18;

      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    }
    else
    {
      sub_23E053CFC(a1 + 136);
      *v14 = *v15;
      v24 = *(_OWORD *)(a2 + 168);
      v23 = *(_OWORD *)(a2 + 184);
      v25 = *(_OWORD *)(a2 + 152);
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 184) = v23;
      *(_OWORD *)(a1 + 152) = v25;
    }
  }
  else if (v17)
  {
    v20 = *(_OWORD *)(a2 + 152);
    *v14 = *v15;
    *(_OWORD *)(a1 + 152) = v20;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    v21 = *(void **)(a2 + 176);
    *(_QWORD *)(a1 + 176) = v21;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    v22 = v21;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v14 = *v15;
    v26 = *(_OWORD *)(a2 + 152);
    v27 = *(_OWORD *)(a2 + 168);
    v28 = *(_OWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_OWORD *)(a1 + 168) = v27;
    *(_OWORD *)(a1 + 184) = v28;
    *(_OWORD *)(a1 + 152) = v26;
  }
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v29 = *(void **)(a2 + 248);
  v30 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v29;
  v31 = v29;

  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v32 = (_OWORD *)(a1 + 280);
  v33 = (_OWORD *)(a2 + 280);
  v34 = *(void **)(a1 + 320);
  v35 = *(_QWORD *)(a2 + 320);
  if (v34)
  {
    if (v35)
    {
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      v36 = *(void **)(a2 + 320);
      *(_QWORD *)(a1 + 320) = v36;
      v37 = v36;

      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
    }
    else
    {
      sub_23E053CFC(a1 + 280);
      *v32 = *v33;
      v42 = *(_OWORD *)(a2 + 312);
      v41 = *(_OWORD *)(a2 + 328);
      v43 = *(_OWORD *)(a2 + 296);
      *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
      *(_OWORD *)(a1 + 312) = v42;
      *(_OWORD *)(a1 + 328) = v41;
      *(_OWORD *)(a1 + 296) = v43;
    }
  }
  else if (v35)
  {
    v38 = *(_OWORD *)(a2 + 296);
    *v32 = *v33;
    *(_OWORD *)(a1 + 296) = v38;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    v39 = *(void **)(a2 + 320);
    *(_QWORD *)(a1 + 320) = v39;
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
    v40 = v39;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v32 = *v33;
    v44 = *(_OWORD *)(a2 + 296);
    v45 = *(_OWORD *)(a2 + 312);
    v46 = *(_OWORD *)(a2 + 328);
    *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
    *(_OWORD *)(a1 + 312) = v45;
    *(_OWORD *)(a1 + 328) = v46;
    *(_OWORD *)(a1 + 296) = v44;
  }
  v47 = *(_QWORD *)(a2 + 352);
  if (!*(_QWORD *)(a1 + 352))
  {
    if (v47)
    {
      *(_QWORD *)(a1 + 352) = v47;
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      swift_retain();
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    goto LABEL_29;
  }
  if (!v47)
  {
    sub_23E053D28(a1 + 352);
    goto LABEL_28;
  }
  *(_QWORD *)(a1 + 352) = v47;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_retain();
  swift_release();
LABEL_29:
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  v48 = *(int *)(a3 + 24);
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
  v52 = (int *)type metadata accessor for Device();
  v53 = v52[5];
  v54 = (_QWORD *)(v49 + v53);
  v55 = (_QWORD *)(v50 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v52[6];
  v57 = (_QWORD *)(v49 + v56);
  v58 = v50 + v56;
  *v57 = *(_QWORD *)(v50 + v56);
  v57[1] = *(_QWORD *)(v50 + v56 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v60 = (char *)v57 + v59;
  v61 = v58 + v59;
  v62 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  v63 = v52[7];
  v64 = (_QWORD *)(v49 + v63);
  v65 = (_QWORD *)(v50 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = v52[8];
  v67 = (_QWORD *)(v49 + v66);
  v68 = (_QWORD *)(v50 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + v52[9]) = *(_QWORD *)(v50 + v52[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + v52[10]) = *(_BYTE *)(v50 + v52[10]);
  *(_BYTE *)(v49 + v52[11]) = *(_BYTE *)(v50 + v52[11]);
  *(_BYTE *)(v49 + v52[12]) = *(_BYTE *)(v50 + v52[12]);
  *(_BYTE *)(v49 + v52[13]) = *(_BYTE *)(v50 + v52[13]);
  *(_QWORD *)(v49 + v52[14]) = *(_QWORD *)(v50 + v52[14]);
  swift_retain();
  swift_release();
  *(_BYTE *)(v49 + v52[15]) = *(_BYTE *)(v50 + v52[15]);
  v69 = v52[16];
  v70 = (_QWORD *)(v49 + v69);
  v71 = (_QWORD *)(v50 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = v52[17];
  v73 = (_QWORD *)(v49 + v72);
  v74 = (_QWORD *)(v50 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v75 = v52[18];
  v76 = (_QWORD *)(v49 + v75);
  v77 = (_QWORD *)(v50 + v75);
  *v76 = *v77;
  v76[1] = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + v52[19]) = *(_BYTE *)(v50 + v52[19]);
  *(_BYTE *)(v49 + v52[20]) = *(_BYTE *)(v50 + v52[20]);
  v78 = v52[21];
  v79 = (_QWORD *)(v49 + v78);
  v80 = (_QWORD *)(v50 + v78);
  *v79 = *v80;
  v79[1] = v80[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v81 = *(int *)(a3 + 28);
  v82 = a1 + v81;
  v83 = a2 + v81;
  v84 = *(_QWORD *)v83;
  v85 = *(_QWORD *)(v83 + 8);
  v86 = *(_QWORD *)(v83 + 16);
  v87 = *(_QWORD *)(v83 + 24);
  v88 = *(_QWORD *)(v83 + 32);
  v89 = *(_QWORD *)(v83 + 40);
  v90 = *(_QWORD *)(v83 + 48);
  v91 = *(_QWORD *)(v83 + 56);
  v103 = *(_BYTE *)(v83 + 64);
  v104 = *(_BYTE *)(v83 + 65);
  sub_23DF98590(*(_QWORD *)v83, v85, v86, v87, v88, v89, v90, v91, v103, v104);
  v92 = *(_QWORD *)v82;
  v93 = *(_QWORD *)(v82 + 8);
  v94 = *(_QWORD *)(v82 + 16);
  v95 = *(_QWORD *)(v82 + 24);
  v96 = *(_QWORD *)(v82 + 32);
  v97 = *(_QWORD *)(v82 + 40);
  v98 = *(_QWORD *)(v82 + 48);
  v99 = *(_QWORD *)(v82 + 56);
  v100 = *(_BYTE *)(v82 + 64);
  v101 = *(_BYTE *)(v82 + 65);
  *(_QWORD *)v82 = v84;
  *(_QWORD *)(v82 + 8) = v85;
  *(_QWORD *)(v82 + 16) = v86;
  *(_QWORD *)(v82 + 24) = v87;
  *(_QWORD *)(v82 + 32) = v88;
  *(_QWORD *)(v82 + 40) = v89;
  *(_QWORD *)(v82 + 48) = v90;
  *(_QWORD *)(v82 + 56) = v91;
  *(_BYTE *)(v82 + 64) = v103;
  *(_BYTE *)(v82 + 65) = v104;
  sub_23DF985F0(v92, v93, v94, v95, v96, v97, v98, v99, v100, v101);
  return a1;
}

uint64_t sub_23E053CFC(uint64_t a1)
{
  destroy for TransitionTileView.Config.Text(a1);
  return a1;
}

uint64_t sub_23E053D28(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for TransitionTileView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;

  *a1 = *a2;
  memcpy(a1 + 1, a2 + 1, 0x190uLL);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  v11 = v10[6];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_OWORD *)&v7[v11] = *(_OWORD *)&v8[v11];
  v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  *(_OWORD *)&v7[v10[16]] = *(_OWORD *)&v8[v10[16]];
  *(_OWORD *)&v7[v10[17]] = *(_OWORD *)&v8[v10[17]];
  *(_OWORD *)&v7[v10[18]] = *(_OWORD *)&v8[v10[18]];
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  *(_OWORD *)&v7[v10[21]] = *(_OWORD *)&v8[v10[21]];
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 3);
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *((_OWORD *)v19 + 3) = v21;
  *((_WORD *)v19 + 32) = *((_WORD *)v20 + 32);
  v22 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v22;
  return a1;
}

uint64_t assignWithTake for TransitionTileView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  void *v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  __int128 v85;
  __int128 v86;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  if (*(_QWORD *)(a1 + 104))
  {
    v6 = *(_QWORD *)(a2 + 104);
    if (v6)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23DF89C7C(a1 + 96, &qword_256D22C80);
  }
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
LABEL_6:
  v9 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v10 = *(void **)(a1 + 176);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 176);
    if (v11)
    {
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v11;

      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_release();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_release();
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      goto LABEL_11;
    }
    sub_23E053CFC(a1 + 136);
  }
  v12 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v12;
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v13 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v13;
LABEL_11:
  v14 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v14;
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v15 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);

  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_release();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v16 = *(void **)(a1 + 320);
  if (v16)
  {
    v17 = *(_QWORD *)(a2 + 320);
    if (v17)
    {
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      v18 = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 304) = v18;
      *(_QWORD *)(a1 + 320) = v17;

      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_release();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      swift_release();
      *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
      goto LABEL_16;
    }
    sub_23E053CFC(a1 + 280);
  }
  v19 = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = v19;
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v20 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v20;
LABEL_16:
  if (!*(_QWORD *)(a1 + 352))
  {
LABEL_20:
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    goto LABEL_21;
  }
  v21 = *(_QWORD *)(a2 + 352);
  if (!v21)
  {
    sub_23E053D28(a1 + 352);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 352) = v21;
  swift_release();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_release();
LABEL_21:
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  v22 = *(int *)(a3 + 24);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  v26 = (int *)type metadata accessor for Device();
  v27 = v26[5];
  v28 = (_QWORD *)(v23 + v27);
  v29 = (uint64_t *)(v24 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v26[6];
  v33 = (_QWORD *)(v23 + v32);
  v34 = v24 + v32;
  v35 = *(_QWORD *)(v24 + v32 + 8);
  *v33 = *(_QWORD *)(v24 + v32);
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v36 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v37 = (char *)v33 + v36;
  v38 = v34 + v36;
  v39 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  v40 = v26[7];
  v41 = (_QWORD *)(v23 + v40);
  v42 = (uint64_t *)(v24 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = v26[8];
  v46 = (_QWORD *)(v23 + v45);
  v47 = (uint64_t *)(v24 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + v26[9]) = *(_QWORD *)(v24 + v26[9]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + v26[10]) = *(_BYTE *)(v24 + v26[10]);
  *(_BYTE *)(v23 + v26[11]) = *(_BYTE *)(v24 + v26[11]);
  *(_BYTE *)(v23 + v26[12]) = *(_BYTE *)(v24 + v26[12]);
  *(_BYTE *)(v23 + v26[13]) = *(_BYTE *)(v24 + v26[13]);
  *(_QWORD *)(v23 + v26[14]) = *(_QWORD *)(v24 + v26[14]);
  swift_release();
  *(_BYTE *)(v23 + v26[15]) = *(_BYTE *)(v24 + v26[15]);
  v50 = v26[16];
  v51 = (_QWORD *)(v23 + v50);
  v52 = (uint64_t *)(v24 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  v55 = v26[17];
  v56 = (_QWORD *)(v23 + v55);
  v57 = (uint64_t *)(v24 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = v26[18];
  v61 = (_QWORD *)(v23 + v60);
  v62 = (uint64_t *)(v24 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v23 + v26[19]) = *(_BYTE *)(v24 + v26[19]);
  *(_BYTE *)(v23 + v26[20]) = *(_BYTE *)(v24 + v26[20]);
  v65 = v26[21];
  v66 = (_QWORD *)(v23 + v65);
  v67 = (uint64_t *)(v24 + v65);
  v69 = *v67;
  v68 = v67[1];
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  v70 = *(int *)(a3 + 28);
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_BYTE *)(v72 + 64);
  v74 = *(_BYTE *)(v72 + 65);
  v75 = *(_QWORD *)v71;
  v76 = *(_QWORD *)(v71 + 8);
  v77 = *(_QWORD *)(v71 + 16);
  v78 = *(_QWORD *)(v71 + 24);
  v79 = *(_QWORD *)(v71 + 32);
  v80 = *(_QWORD *)(v71 + 40);
  v81 = *(_QWORD *)(v71 + 48);
  v82 = *(_QWORD *)(v71 + 56);
  v83 = *(_BYTE *)(v71 + 64);
  v84 = *(_BYTE *)(v71 + 65);
  v85 = *(_OWORD *)(v72 + 16);
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *(_OWORD *)(v71 + 16) = v85;
  v86 = *(_OWORD *)(v72 + 48);
  *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
  *(_OWORD *)(v71 + 48) = v86;
  *(_BYTE *)(v71 + 64) = v73;
  *(_BYTE *)(v71 + 65) = v74;
  sub_23DF985F0(v75, v76, v77, v78, v79, v80, v81, v82, v83, v84);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitionTileView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0543F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Device();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TransitionTileView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E054478(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 64) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Device();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E0544EC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TransitionTileView.Config(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v2 = *(void **)(a1 + 168);
  if (v2)
  {

    swift_release();
    swift_release();
  }

  swift_release();
  swift_release();
  v3 = *(void **)(a1 + 312);
  if (v3)
  {

    swift_release();
    swift_release();
  }
  result = *(_QWORD *)(a1 + 344);
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TransitionTileView.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  _OWORD *v9;
  _OWORD *v10;
  void *v11;
  id v12;
  __int128 v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  void *v22;
  id v23;
  __int128 v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v5;
    v6 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v7;
  }
  v8 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v8;
  v9 = (_OWORD *)(a1 + 128);
  v10 = (_OWORD *)(a2 + 128);
  v11 = *(void **)(a2 + 168);
  v12 = v8;
  if (v11)
  {
    v13 = *(_OWORD *)(a2 + 144);
    *v9 = *v10;
    *(_OWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v11;
    v14 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v14;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v15 = v11;
    swift_retain();
    swift_retain();
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v16;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v17 = *(_OWORD *)(a2 + 144);
    *v9 = *v10;
    *(_OWORD *)(a1 + 144) = v17;
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v18 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v18;
  v19 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v19;
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = (_OWORD *)(a1 + 272);
  v21 = (_OWORD *)(a2 + 272);
  v22 = *(void **)(a2 + 312);
  v23 = v18;
  swift_retain();
  swift_retain();
  if (!v22)
  {
    v29 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v29;
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    v30 = *(_OWORD *)(a2 + 288);
    *v20 = *v21;
    *(_OWORD *)(a1 + 288) = v30;
    v27 = *(_QWORD *)(a2 + 344);
    if (v27)
      goto LABEL_9;
LABEL_11:
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    goto LABEL_12;
  }
  v24 = *(_OWORD *)(a2 + 288);
  *v20 = *v21;
  *(_OWORD *)(a1 + 288) = v24;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v22;
  v25 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v25;
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  v26 = v22;
  swift_retain();
  swift_retain();
  v27 = *(_QWORD *)(a2 + 344);
  if (!v27)
    goto LABEL_11;
LABEL_9:
  v28 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v27;
  *(_QWORD *)(a1 + 352) = v28;
  swift_retain();
  swift_retain();
LABEL_12:
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  v31 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v31;
  return a1;
}

uint64_t assignWithCopy for TransitionTileView.Config(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;
  _OWORD *v12;
  _OWORD *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  __int128 v18;
  void *v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  void *v28;
  id v29;
  _OWORD *v30;
  _OWORD *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  __int128 v36;
  void *v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v4 = (_OWORD *)(a1 + 88);
  v5 = (_OWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23DF89C7C(a1 + 88, &qword_256D22C80);
      v7 = *(_OWORD *)(a2 + 104);
      *v4 = *v5;
      *(_OWORD *)(a1 + 104) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 104);
    *v4 = *v5;
    *(_OWORD *)(a1 + 104) = v8;
  }
  v9 = *(void **)(a1 + 120);
  v10 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = v10;

  v12 = (_OWORD *)(a1 + 128);
  v13 = (_OWORD *)(a2 + 128);
  v14 = *(void **)(a1 + 168);
  v15 = *(_QWORD *)(a2 + 168);
  if (v14)
  {
    if (v15)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      v16 = *(void **)(a2 + 168);
      *(_QWORD *)(a1 + 168) = v16;
      v17 = v16;

      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    }
    else
    {
      sub_23E053CFC(a1 + 128);
      *v12 = *v13;
      v22 = *(_OWORD *)(a2 + 160);
      v21 = *(_OWORD *)(a2 + 176);
      v23 = *(_OWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_OWORD *)(a1 + 160) = v22;
      *(_OWORD *)(a1 + 176) = v21;
      *(_OWORD *)(a1 + 144) = v23;
    }
  }
  else if (v15)
  {
    v18 = *(_OWORD *)(a2 + 144);
    *v12 = *v13;
    *(_OWORD *)(a1 + 144) = v18;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    v19 = *(void **)(a2 + 168);
    *(_QWORD *)(a1 + 168) = v19;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v20 = v19;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v12 = *v13;
    v24 = *(_OWORD *)(a2 + 144);
    v25 = *(_OWORD *)(a2 + 160);
    v26 = *(_OWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v25;
    *(_OWORD *)(a1 + 176) = v26;
    *(_OWORD *)(a1 + 144) = v24;
  }
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  v27 = *(void **)(a2 + 240);
  v28 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v27;
  v29 = v27;

  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v30 = (_OWORD *)(a1 + 272);
  v31 = (_OWORD *)(a2 + 272);
  v32 = *(void **)(a1 + 312);
  v33 = *(_QWORD *)(a2 + 312);
  if (v32)
  {
    if (v33)
    {
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      v34 = *(void **)(a2 + 312);
      *(_QWORD *)(a1 + 312) = v34;
      v35 = v34;

      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    }
    else
    {
      sub_23E053CFC(a1 + 272);
      *v30 = *v31;
      v40 = *(_OWORD *)(a2 + 304);
      v39 = *(_OWORD *)(a2 + 320);
      v41 = *(_OWORD *)(a2 + 288);
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      *(_OWORD *)(a1 + 304) = v40;
      *(_OWORD *)(a1 + 320) = v39;
      *(_OWORD *)(a1 + 288) = v41;
    }
  }
  else if (v33)
  {
    v36 = *(_OWORD *)(a2 + 288);
    *v30 = *v31;
    *(_OWORD *)(a1 + 288) = v36;
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    v37 = *(void **)(a2 + 312);
    *(_QWORD *)(a1 + 312) = v37;
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    v38 = v37;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v30 = *v31;
    v42 = *(_OWORD *)(a2 + 288);
    v43 = *(_OWORD *)(a2 + 304);
    v44 = *(_OWORD *)(a2 + 320);
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    *(_OWORD *)(a1 + 304) = v43;
    *(_OWORD *)(a1 + 320) = v44;
    *(_OWORD *)(a1 + 288) = v42;
  }
  v45 = *(_QWORD *)(a2 + 344);
  if (!*(_QWORD *)(a1 + 344))
  {
    if (v45)
    {
      *(_QWORD *)(a1 + 344) = v45;
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      swift_retain();
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    goto LABEL_29;
  }
  if (!v45)
  {
    sub_23E053D28(a1 + 344);
    goto LABEL_28;
  }
  *(_QWORD *)(a1 + 344) = v45;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_retain();
  swift_release();
LABEL_29:
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  return a1;
}

void *__swift_memcpy400_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t assignWithTake for TransitionTileView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (*(_QWORD *)(a1 + 96))
  {
    v5 = *(_QWORD *)(a2 + 96);
    if (v5)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23DF89C7C(a1 + 88, &qword_256D22C80);
  }
  v7 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v7;
LABEL_6:
  v8 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  v9 = *(void **)(a1 + 168);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 168);
    if (v10)
    {
      v11 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v11;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v10;

      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_release();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_release();
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      goto LABEL_11;
    }
    sub_23E053CFC(a1 + 128);
  }
  v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v12;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
LABEL_11:
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  v14 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_release();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v15 = *(void **)(a1 + 312);
  if (v15)
  {
    v16 = *(_QWORD *)(a2 + 312);
    if (v16)
    {
      v17 = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 288) = v17;
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v16;

      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_release();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_release();
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      goto LABEL_16;
    }
    sub_23E053CFC(a1 + 272);
  }
  v18 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v18;
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  v19 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v19;
LABEL_16:
  if (!*(_QWORD *)(a1 + 344))
  {
LABEL_20:
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    goto LABEL_21;
  }
  v20 = *(_QWORD *)(a2 + 344);
  if (!v20)
  {
    sub_23E053D28(a1 + 344);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 344) = v20;
  swift_release();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_release();
LABEL_21:
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  v21 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v21;
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitionTileView.Config(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 400))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransitionTileView.Config(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 400) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 400) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionTileView.Config()
{
  return &type metadata for TransitionTileView.Config;
}

void destroy for TransitionTileView.Config.Icon(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

}

uint64_t initializeWithCopy for TransitionTileView.Config.Icon(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  void *v9;
  id v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v6;
    v7 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
  }
  v9 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for TransitionTileView.Config.Icon(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v4 = (_OWORD *)(a1 + 80);
  v5 = (_OWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23DF89C7C(a1 + 80, &qword_256D22C80);
      v7 = *(_OWORD *)(a2 + 96);
      *v4 = *v5;
      *(_OWORD *)(a1 + 96) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 96);
    *v4 = *v5;
    *(_OWORD *)(a1 + 96) = v8;
  }
  v9 = *(void **)(a1 + 112);
  v10 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = v10;

  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for TransitionTileView.Config.Icon(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 88);
  if (!v5)
  {
    sub_23DF89C7C(a1 + 80, &qword_256D22C80);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransitionTileView.Config.Icon(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransitionTileView.Config.Icon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionTileView.Config.Icon()
{
  return &type metadata for TransitionTileView.Config.Icon;
}

ValueMetadata *type metadata accessor for TransitionTileView.Config.Icon.Size()
{
  return &type metadata for TransitionTileView.Config.Icon.Size;
}

uint64_t destroy for TransitionTileView.Config.Badge()
{
  swift_release();
  return swift_release();
}

_QWORD *_s22HomeAccessoryControlUI18TransitionTileViewV6ConfigV5BadgeVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TransitionTileView.Config.Badge(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TransitionTileView.Config.Badge(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TransitionTileView.Config.Badge()
{
  return &type metadata for TransitionTileView.Config.Badge;
}

uint64_t destroy for TransitionTileView.Config.Text(uint64_t a1)
{

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TransitionTileView.Config.Text(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TransitionTileView.Config.Text(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for TransitionTileView.Config.Text(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitionTileView.Config.Text(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransitionTileView.Config.Text(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionTileView.Config.Text()
{
  return &type metadata for TransitionTileView.Config.Text;
}

uint64_t _s22HomeAccessoryControlUI18TransitionTileViewV6ConfigV4IconV4SizeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E0558B4 + 4 * byte_23E13E0E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E0558E8 + 4 * byte_23E13E0E0[v4]))();
}

uint64_t sub_23E0558E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0558F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E0558F8);
  return result;
}

uint64_t sub_23E055904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E05590CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E055910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E055918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransitionTileView.Config.BackgroundStyle()
{
  return &type metadata for TransitionTileView.Config.BackgroundStyle;
}

unint64_t sub_23E055938()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22D20;
  if (!qword_256D22D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22C68);
    v2[0] = sub_23DF89B88(&qword_256D22D28, &qword_256D22C58, MEMORY[0x24BDF4750]);
    v2[1] = sub_23DF89B88(&qword_256D1E278, &qword_256D1E080, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22D20);
  }
  return result;
}

uint64_t destroy for TruncatingLabel(uint64_t a1)
{

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TruncatingLabel(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v7 = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TruncatingLabel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  return a1;
}

uint64_t assignWithTake for TruncatingLabel(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  return a1;
}

uint64_t getEnumTagSinglePayload for TruncatingLabel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 90))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TruncatingLabel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 90) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TruncatingLabel()
{
  return &type metadata for TruncatingLabel;
}

void destroy for MarqueeLabel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

}

_QWORD *initializeWithCopy for MarqueeLabel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for MarqueeLabel(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MarqueeLabel(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for MarqueeLabel()
{
  return &type metadata for MarqueeLabel;
}

unint64_t sub_23E055DDC()
{
  unint64_t result;

  result = qword_256D22D30;
  if (!qword_256D22D30)
  {
    result = MEMORY[0x24264C55C](&unk_23E13E320, &type metadata for MarqueeLabel);
    atomic_store(result, (unint64_t *)&qword_256D22D30);
  }
  return result;
}

uint64_t sub_23E055E20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E055E30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E136150();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23E055E5C()
{
  return sub_23E13615C();
}

uint64_t sub_23E055E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23E136234();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23E055EB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23E136234();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23E055EE0()
{
  return sub_23E136240();
}

uint64_t sub_23E055F0C()
{
  return sub_23E136240();
}

uint64_t sub_23E055F38()
{
  return sub_23E136114();
}

uint64_t sub_23E055F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E056F58(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDF1CE0], MEMORY[0x24BDEDFF0]);
}

uint64_t sub_23E055F7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E136150();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23E055FA8()
{
  return sub_23E13615C();
}

unint64_t sub_23E055FD4()
{
  unint64_t result;

  result = qword_256D22D70;
  if (!qword_256D22D70)
  {
    result = MEMORY[0x24264C55C](&unk_23E13E370, &type metadata for MarqueeLabel);
    atomic_store(result, (unint64_t *)&qword_256D22D70);
  }
  return result;
}

unint64_t sub_23E056018()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1DA28;
  if (!qword_256D1DA28)
  {
    v1 = type metadata accessor for AnimationModel();
    result = MEMORY[0x24264C55C](&unk_23E138AF4, v1);
    atomic_store(result, (unint64_t *)&qword_256D1DA28);
  }
  return result;
}

uint64_t sub_23E056060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  if ((a12 & 1) != 0)
    return swift_retain();
  else
    return sub_23E056088(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, HIBYTE(a11) & 1);
}

uint64_t sub_23E056088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  if ((a12 & 1) != 0)
    return swift_retain();
  else
    return sub_23E0560B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_23E0560B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10)
{
  return sub_23DF98590(a2, a3, a4, a5, a6, a7, a8, a9, a10, (unsigned __int16)(a10 & 0x1FF) >> 8);
}

uint64_t sub_23E0560E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  if ((a12 & 1) != 0)
    return swift_release();
  else
    return sub_23E056110(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, HIBYTE(a11) & 1);
}

uint64_t sub_23E056110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  if ((a12 & 1) != 0)
    return swift_release();
  else
    return sub_23E056138(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_23E056138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10)
{
  return sub_23DF985F0(a2, a3, a4, a5, a6, a7, a8, a9, a10, (unsigned __int16)(a10 & 0x1FF) >> 8);
}

double sub_23E056170(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 16711680;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  return result;
}

uint64_t sub_23E056194(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 40);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E0561D8(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 40);
  swift_release();
  swift_release();

  return a1;
}

id sub_23E056218(id result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  if ((~a12 & 0xFF0000) != 0)
    return sub_23E05624C((uint64_t)result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, BYTE2(a12) & 1);
  return result;
}

id sub_23E05624C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, char a13)
{
  id v13;

  if ((a13 & 1) != 0)
  {
    v13 = a6;
    swift_retain();
    swift_retain();
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return a4;
  }
}

uint64_t sub_23E0562D0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  int v4;

  BYTE2(v4) = *(_BYTE *)(a1 + 90);
  LOWORD(v4) = *(_WORD *)(a1 + 88);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v4);
  return a1;
}

void sub_23E056334(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, char a13)
{
  if ((a13 & 1) != 0)
  {

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();

  }
}

_QWORD *sub_23E0563B8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

void sub_23E05641C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  if ((~a12 & 0xFF0000) != 0)
    sub_23E056334(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, BYTE2(a12) & 1);
}

unint64_t sub_23E056450()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22DF8;
  if (!qword_256D22DF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22E00);
    v2[0] = sub_23DF89B88(&qword_256D22E08, &qword_256D22E10, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22DF8);
  }
  return result;
}

uint64_t sub_23E0564D4()
{
  return sub_23DF8E904(&qword_256D22E20, &qword_256D22E28, (uint64_t (*)(void))sub_23E0564F8, MEMORY[0x24BDEC438]);
}

unint64_t sub_23E0564F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D22E30;
  if (!qword_256D22E30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22E38);
    v2 = sub_23DF98488(&qword_256D22E40, &qword_256D22E48, sub_23E05657C, (uint64_t (*)(void))sub_23E0565A0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D22E30);
  }
  return result;
}

uint64_t sub_23E05657C()
{
  return sub_23DF8E904(&qword_256D22E50, &qword_256D22E58, (uint64_t (*)(void))sub_23E055DDC, MEMORY[0x24BDEBEE0]);
}

unint64_t sub_23E0565A0()
{
  unint64_t result;

  result = qword_256D22E60;
  if (!qword_256D22E60)
  {
    result = MEMORY[0x24264C55C](&unk_23E13E400, &type metadata for TruncatingLabel);
    atomic_store(result, (unint64_t *)&qword_256D22E60);
  }
  return result;
}

uint64_t sub_23E0565F4()
{
  return sub_23DF98488(&qword_256D22F10, &qword_256D22EE0, sub_23E056618, (uint64_t (*)(void))sub_23E056978);
}

uint64_t sub_23E056618()
{
  return sub_23DF98488(&qword_256D22F18, &qword_256D22ED8, (uint64_t (*)(void))sub_23E05663C, (uint64_t (*)(void))sub_23E0567EC);
}

unint64_t sub_23E05663C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F20;
  if (!qword_256D22F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22ED0);
    v2[0] = sub_23E0566C0();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F20);
  }
  return result;
}

unint64_t sub_23E0566C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F28;
  if (!qword_256D22F28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22F30);
    v2[0] = sub_23DF8E904(&qword_256D22F38, &qword_256D22F40, sub_23E056764, MEMORY[0x24BDEEC40]);
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F28);
  }
  return result;
}

uint64_t sub_23E056764()
{
  return sub_23DF8E904(&qword_256D22F48, &qword_256D22F50, (uint64_t (*)(void))sub_23E056788, MEMORY[0x24BDECC60]);
}

unint64_t sub_23E056788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F58;
  if (!qword_256D22F58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22F60);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F58);
  }
  return result;
}

unint64_t sub_23E0567EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F68;
  if (!qword_256D22F68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22EC0);
    v2[0] = sub_23E056870();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F68);
  }
  return result;
}

unint64_t sub_23E056870()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F70;
  if (!qword_256D22F70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22F78);
    v2[0] = sub_23E0568F4();
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F70);
  }
  return result;
}

unint64_t sub_23E0568F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D22F80;
  if (!qword_256D22F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22F88);
    v2 = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D22F80);
  }
  return result;
}

unint64_t sub_23E056978()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F90;
  if (!qword_256D22F90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22EB0);
    v2[0] = sub_23E0569FC();
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F90);
  }
  return result;
}

unint64_t sub_23E0569FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22F98;
  if (!qword_256D22F98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22EA8);
    v2[0] = sub_23E056A80();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22F98);
  }
  return result;
}

unint64_t sub_23E056A80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D22FA0;
  if (!qword_256D22FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22EA0);
    v2 = sub_23DF89B88(&qword_256D22FA8, &qword_256D22E98, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D22FA0);
  }
  return result;
}

uint64_t sub_23E056B04()
{
  return sub_23DF98488(&qword_256D22FB0, &qword_256D22FB8, sub_23E056B28, sub_23E056B44);
}

uint64_t sub_23E056B28()
{
  return sub_23E0572D4(&qword_256D22FC0, &qword_256D22FC8, sub_23E056B44);
}

uint64_t sub_23E056B44()
{
  return sub_23E056B60(&qword_256D22FD0, &qword_256D22FD8, (uint64_t (*)(void))sub_23E056BC4);
}

uint64_t sub_23E056B60(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E056BC4()
{
  unint64_t result;

  result = qword_256D22FE0;
  if (!qword_256D22FE0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F5C4, &type metadata for MicaIconView);
    atomic_store(result, (unint64_t *)&qword_256D22FE0);
  }
  return result;
}

unint64_t sub_23E056C08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D22FF0;
  if (!qword_256D22FF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22FF8);
    v2[0] = sub_23E056C8C();
    v2[1] = sub_23DF89B88(&qword_256D1EC08, &qword_256D1EC10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D22FF0);
  }
  return result;
}

unint64_t sub_23E056C8C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23000;
  if (!qword_256D23000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23008);
    v2[0] = sub_23E056D10();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23000);
  }
  return result;
}

unint64_t sub_23E056D10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23010;
  if (!qword_256D23010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23018);
    v2[0] = sub_23E056D94();
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23010);
  }
  return result;
}

unint64_t sub_23E056D94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D23020;
  if (!qword_256D23020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23028);
    v2 = sub_23DF89B88(&qword_256D205E0, &qword_256D205E8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D23020);
  }
  return result;
}

uint64_t sub_23E056E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 88);
  v9 = *(_BYTE *)(a1 + 89);
  swift_retain();
  swift_retain();
  sub_23DF98590(v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_23E056EB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 88);
  v9 = *(_BYTE *)(a1 + 89);
  swift_release();
  swift_release();
  sub_23DF985F0(v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_23E056F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_23E056FD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23E13618C();
  *a1 = v3;
  return result;
}

uint64_t sub_23E056FFC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23E13618C();
  *a1 = v3;
  return result;
}

uint64_t sub_23E057024()
{
  return sub_23E136198();
}

uint64_t sub_23E057048()
{
  return sub_23E136198();
}

id *sub_23E05706C(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id sub_23E057098(id result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  id v7;

  if (result)
  {
    v6 = result;
    v7 = a2;
    swift_bridgeObjectRetain();
    return a5;
  }
  return result;
}

id *sub_23E0570E0(id *a1)
{

  return a1;
}

uint64_t sub_23E057108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t (*a9)(void))
{
  if ((a7 & 1) != 0)
    return a9();
  else
    return a8(a1, a2, a3, a4, a5, a6 & 1);
}

void sub_23E057120(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {

    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_23E057168(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_23E05719C()
{
  return sub_23E1360D8();
}

uint64_t sub_23E0571BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E056F58(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_23E0571E8(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E05721C(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_23E057250()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23040;
  if (!qword_256D23040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23038);
    v2[0] = sub_23E0572D4(&qword_256D23048, &qword_256D23050, (uint64_t (*)(void))sub_23E057338);
    v2[1] = MEMORY[0x24BDF3E20];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23040);
  }
  return result;
}

uint64_t sub_23E0572D4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = v7[0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E057338()
{
  unint64_t result;

  result = qword_256D23058;
  if (!qword_256D23058)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B664, &type metadata for VisualEffect);
    atomic_store(result, (unint64_t *)&qword_256D23058);
  }
  return result;
}

uint64_t sub_23E05737C()
{
  return sub_23DF8E904(&qword_256D23060, &qword_256D22D58, (uint64_t (*)(void))sub_23E0573B0, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_23E0573B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23068;
  if (!qword_256D23068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22D50);
    v2[0] = sub_23E057434();
    v2[1] = sub_23DF89B88(&qword_256D20100, &qword_256D20108, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23068);
  }
  return result;
}

unint64_t sub_23E057434()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23070;
  if (!qword_256D23070)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22D48);
    v2[0] = sub_23E0574B8();
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23070);
  }
  return result;
}

unint64_t sub_23E0574B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23078;
  if (!qword_256D23078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22D40);
    v2[0] = sub_23E056D94();
    v2[1] = sub_23DF89B88(&qword_256D23080, &qword_256D22D38, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23078);
  }
  return result;
}

uint64_t sub_23E05753C(uint64_t a1)
{
  sub_23DFA056C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E057578(uint64_t a1)
{
  sub_23DFA056C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t AccessoryControlGroup.init(type:label:accesibilityIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  _QWORD *v15;

  v12 = type metadata accessor for AccessoryControlGroup(0);
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 24));
  result = sub_23DF89384(a1, a6, type metadata accessor for AccessoryControlGroup.LayoutType);
  v15 = (_QWORD *)(a6 + *(int *)(v12 + 20));
  *v15 = a2;
  v15[1] = a3;
  *v13 = a4;
  v13[1] = a5;
  return result;
}

uint64_t type metadata accessor for AccessoryControlGroup(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D23140);
}

uint64_t type metadata accessor for AccessoryControlGroup.LayoutType(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D231F0);
}

uint64_t AccessoryControlGroup.controls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for AccessoryControlInfo(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      return *(_QWORD *)v11;
    }
    else
    {
      sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D21308);
      v19 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_23E138050;
      sub_23DF89384((uint64_t)v8, v14 + v19, type metadata accessor for AccessoryControlInfo);
    }
  }
  else
  {
    v15 = (uint64_t)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48)];
    sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384(v15, (uint64_t)v6, type metadata accessor for AccessoryControlInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21308);
    v16 = *(_QWORD *)(v3 + 72);
    v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23E138410;
    v18 = v14 + v17;
    sub_23DF73E10((uint64_t)v8, v18, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384((uint64_t)v6, v18 + v16, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54((uint64_t)v8, type metadata accessor for AccessoryControlInfo);
  }
  return v14;
}

uint64_t sub_23E057880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_23E134C80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x24BEE4AF8];
    sub_23E09E370(0, v7, 0);
    v8 = v17;
    v9 = *(_QWORD *)(type metadata accessor for AccessoryControlInfo(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v16 = *(_QWORD *)(v9 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v11(v6, v10, v3);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_23E09E370(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v6, v3);
      v10 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t AccessoryControlGroup.LayoutType.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - v8;
  v10 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DF73E10(v2, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *v12;
      sub_23E1376A4();
      sub_23DFADEA4(a1, v15);
      return swift_bridgeObjectRelease();
    }
    sub_23DF89384((uint64_t)v12, (uint64_t)v9, type metadata accessor for AccessoryControlInfo);
    sub_23E1376A4();
    AccessoryControlInfo.hash(into:)(a1);
    v18 = (uint64_t)v9;
  }
  else
  {
    v17 = (uint64_t)v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    sub_23DF89384((uint64_t)v12, (uint64_t)v9, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384(v17, (uint64_t)v7, type metadata accessor for AccessoryControlInfo);
    sub_23E1376A4();
    AccessoryControlInfo.hash(into:)(a1);
    AccessoryControlInfo.hash(into:)(a1);
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlInfo);
    v18 = (uint64_t)v9;
  }
  return sub_23DF73E54(v18, type metadata accessor for AccessoryControlInfo);
}

uint64_t AccessoryControlGroup.LayoutType.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E137698();
  AccessoryControlGroup.LayoutType.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E057BEC()
{
  _BYTE v1[72];

  sub_23E137698();
  AccessoryControlGroup.LayoutType.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E057C2C()
{
  _BYTE v1[72];

  sub_23E137698();
  AccessoryControlGroup.LayoutType.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t AccessoryControlGroup.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v1 = v0;
  v2 = type metadata accessor for AccessoryControlInfo(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v22[-v7];
  v9 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)&v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23DF73E10(v1, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *v11;
    }
    else
    {
      sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D21308);
      v19 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_23E138050;
      sub_23DF89384((uint64_t)v8, v14 + v19, type metadata accessor for AccessoryControlInfo);
    }
  }
  else
  {
    v15 = (uint64_t)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384(v15, (uint64_t)v6, type metadata accessor for AccessoryControlInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21308);
    v16 = *(_QWORD *)(v3 + 72);
    v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23E138410;
    v18 = v14 + v17;
    sub_23DF73E10((uint64_t)v8, v18, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384((uint64_t)v6, v18 + v16, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54((uint64_t)v8, type metadata accessor for AccessoryControlInfo);
  }
  v20 = sub_23E057880(v14);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t AccessoryControlGroup.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF73E10(v1, a1, type metadata accessor for AccessoryControlGroup.LayoutType);
}

uint64_t AccessoryControlGroup.type.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23DFBAC08(a1, v1);
}

uint64_t (*AccessoryControlGroup.type.modify())()
{
  return CGPointMake;
}

uint64_t AccessoryControlGroup.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlGroup(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlGroup.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlGroup(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlGroup.label.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlGroup(0);
  return CGPointMake;
}

uint64_t AccessoryControlGroup.accesibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlGroup(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlGroup.accesibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlGroup(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlGroup.accesibilityIdentifier.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlGroup(0);
  return CGPointMake;
}

uint64_t AccessoryControlGroup.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  AccessoryControlGroup.LayoutType.hash(into:)(a1);
  v2 = type metadata accessor for AccessoryControlGroup(0);
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v1 + *(int *)(v2 + 24) + 8))
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t AccessoryControlGroup.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_23E137698();
  AccessoryControlGroup.LayoutType.hash(into:)((uint64_t)v3);
  v1 = type metadata accessor for AccessoryControlGroup(0);
  sub_23E1371C4();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 24) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E058190(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_23E137698();
  AccessoryControlGroup.LayoutType.hash(into:)((uint64_t)v4);
  sub_23E1371C4();
  if (*(_QWORD *)(v1 + *(int *)(a1 + 24) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E05823C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  AccessoryControlGroup.LayoutType.hash(into:)(a1);
  sub_23E1371C4();
  if (!*(_QWORD *)(v2 + *(int *)(a2 + 24) + 8))
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0582D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_23E137698();
  AccessoryControlGroup.LayoutType.hash(into:)((uint64_t)v5);
  sub_23E1371C4();
  if (*(_QWORD *)(v2 + *(int *)(a2 + 24) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E058380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AccessoryControlGroup.id.getter();
  *a1 = result;
  return result;
}

Swift::Void __swiftcall AccessoryControlGroup.setControls(enabled:)(Swift::Bool enabled)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BOOL4 v17;
  uint64_t (*v18)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  _QWORD *v33;
  _BOOL4 v34;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v32 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v32 - v12;
  v14 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = enabled;
  sub_23DF73E10((uint64_t)v2, (uint64_t)v16, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v20 = *(_QWORD *)v16;
      v21 = *(_QWORD *)(*(_QWORD *)v16 + 16);
      if (v21)
      {
        v34 = v17;
        v32[2] = v14;
        v33 = v2;
        v35 = MEMORY[0x24BEE4AF8];
        sub_23E09E230(0, v21, 0);
        v22 = v35;
        v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        v32[1] = v20;
        v24 = v20 + v23;
        v25 = *(_QWORD *)(v5 + 72);
        do
        {
          sub_23DF73E10(v24, (uint64_t)v11, type metadata accessor for AccessoryControlInfo);
          v26 = v4;
          v11[*(int *)(v4 + 40)] = v34;
          v35 = v22;
          v28 = *(_QWORD *)(v22 + 16);
          v27 = *(_QWORD *)(v22 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_23E09E230(v27 > 1, v28 + 1, 1);
            v22 = v35;
          }
          *(_QWORD *)(v22 + 16) = v28 + 1;
          sub_23DF89384((uint64_t)v11, v22 + v23 + v28 * v25, type metadata accessor for AccessoryControlInfo);
          v24 += v25;
          --v21;
          v4 = v26;
        }
        while (v21);
        swift_bridgeObjectRelease();
        v2 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
        v22 = MEMORY[0x24BEE4AF8];
      }
      sub_23DF73E54((uint64_t)v2, type metadata accessor for AccessoryControlGroup.LayoutType);
      *v2 = v22;
    }
    else
    {
      sub_23DF89384((uint64_t)v16, (uint64_t)v13, type metadata accessor for AccessoryControlInfo);
      v13[*(int *)(v4 + 40)] = v17;
      sub_23DF73E54((uint64_t)v2, type metadata accessor for AccessoryControlGroup.LayoutType);
      sub_23DF89384((uint64_t)v13, (uint64_t)v2, type metadata accessor for AccessoryControlInfo);
    }
  }
  else
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0);
    v30 = (uint64_t)&v16[*(int *)(v29 + 48)];
    sub_23DF89384((uint64_t)v16, (uint64_t)v13, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384(v30, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
    v13[*(int *)(v4 + 40)] = v17;
    v8[*(int *)(v4 + 40)] = v17;
    sub_23DF73E54((uint64_t)v2, type metadata accessor for AccessoryControlGroup.LayoutType);
    v31 = (uint64_t)v2 + *(int *)(v29 + 48);
    sub_23DF89384((uint64_t)v13, (uint64_t)v2, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384((uint64_t)v8, v31, type metadata accessor for AccessoryControlInfo);
  }
  swift_storeEnumTagMultiPayload();
}

uint64_t AccessoryControlGroup.transformControls(transform:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v3 = v2;
  v6 = type metadata accessor for AccessoryControlInfo(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v22[-v10];
  v12 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)&v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23DF73E10((uint64_t)v3, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v17 = sub_23E058DA0(*v14, a1, a2);
      swift_bridgeObjectRelease();
      sub_23DF73E54((uint64_t)v3, type metadata accessor for AccessoryControlGroup.LayoutType);
      *v3 = v17;
    }
    else
    {
      sub_23DF89384((uint64_t)v14, (uint64_t)v11, type metadata accessor for AccessoryControlInfo);
      a1(v11);
      sub_23DF73E54((uint64_t)v3, type metadata accessor for AccessoryControlGroup.LayoutType);
      sub_23DF89384((uint64_t)v11, (uint64_t)v3, type metadata accessor for AccessoryControlInfo);
    }
  }
  else
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0);
    v19 = (uint64_t)v14 + *(int *)(v18 + 48);
    sub_23DF89384((uint64_t)v14, (uint64_t)v11, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384(v19, (uint64_t)v9, type metadata accessor for AccessoryControlInfo);
    a1(v11);
    a1(v9);
    sub_23DF73E54((uint64_t)v3, type metadata accessor for AccessoryControlGroup.LayoutType);
    v20 = (uint64_t)v3 + *(int *)(v18 + 48);
    sub_23DF89384((uint64_t)v11, (uint64_t)v3, type metadata accessor for AccessoryControlInfo);
    sub_23DF89384((uint64_t)v9, v20, type metadata accessor for AccessoryControlInfo);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s22HomeAccessoryControlUI0bC5GroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;

  if ((_s22HomeAccessoryControlUI0bC5GroupV10LayoutTypeO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for AccessoryControlGroup(0);
  v5 = *(int *)(v4 + 20);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_23E137614(), result = 0, (v10 & 1) != 0))
  {
    v12 = *(int *)(v4 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = *(_QWORD *)(a1 + v12 + 8);
    v15 = (_QWORD *)(a2 + v12);
    v16 = v15[1];
    if (v14)
    {
      if (v16)
      {
        v17 = *v13 == *v15 && v14 == v16;
        if (v17 || (sub_23E137614() & 1) != 0)
          return 1;
      }
    }
    else if (!v16)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s22HomeAccessoryControlUI0bC5GroupV10LayoutTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a1;
  v40 = a2;
  v2 = type metadata accessor for AccessoryControlInfo(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v38 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v37 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v37 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v37 - v11;
  v13 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (uint64_t *)((char *)&v37 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v37 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F308);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (uint64_t *)&v25[*(int *)(v23 + 48)];
  sub_23DF73E10(v39, (uint64_t)v25, type metadata accessor for AccessoryControlGroup.LayoutType);
  sub_23DF73E10(v40, (uint64_t)v26, type metadata accessor for AccessoryControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23DF73E10((uint64_t)v25, (uint64_t)v19, type metadata accessor for AccessoryControlGroup.LayoutType);
      v28 = *v19;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v29 = sub_23E11CA70(v28, *v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_17:
        sub_23DF73E54((uint64_t)v25, type metadata accessor for AccessoryControlGroup.LayoutType);
        return v29 & 1;
      }
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_23DF73E10((uint64_t)v25, (uint64_t)v16, type metadata accessor for AccessoryControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v33 = v38;
      sub_23DF89384((uint64_t)v26, v38, type metadata accessor for AccessoryControlInfo);
      v29 = static AccessoryControlInfo.== infix(_:_:)((uint64_t)v16, v33);
      sub_23DF73E54(v33, type metadata accessor for AccessoryControlInfo);
      v34 = (uint64_t)v16;
      goto LABEL_16;
    }
    v32 = (uint64_t)v16;
  }
  else
  {
    v30 = (uint64_t)v7;
    sub_23DF73E10((uint64_t)v25, (uint64_t)v21, type metadata accessor for AccessoryControlGroup.LayoutType);
    v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23DF89384((uint64_t)v26, (uint64_t)v12, type metadata accessor for AccessoryControlInfo);
      sub_23DF89384((uint64_t)&v21[v31], (uint64_t)v10, type metadata accessor for AccessoryControlInfo);
      sub_23DF89384((uint64_t)v26 + v31, v30, type metadata accessor for AccessoryControlInfo);
      v35 = static AccessoryControlInfo.== infix(_:_:)((uint64_t)v21, (uint64_t)v12);
      sub_23DF73E54((uint64_t)v21, type metadata accessor for AccessoryControlInfo);
      if ((v35 & 1) == 0)
      {
        sub_23DF73E54(v30, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54((uint64_t)v25, type metadata accessor for AccessoryControlGroup.LayoutType);
        goto LABEL_13;
      }
      v29 = static AccessoryControlInfo.== infix(_:_:)((uint64_t)v10, v30);
      sub_23DF73E54(v30, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlInfo);
      v34 = (uint64_t)v12;
LABEL_16:
      sub_23DF73E54(v34, type metadata accessor for AccessoryControlInfo);
      goto LABEL_17;
    }
    sub_23DF73E54((uint64_t)&v21[v31], type metadata accessor for AccessoryControlInfo);
    v32 = (uint64_t)v21;
  }
  sub_23DF73E54(v32, type metadata accessor for AccessoryControlInfo);
LABEL_12:
  sub_23E06605C((uint64_t)v25);
LABEL_13:
  v29 = 0;
  return v29 & 1;
}

uint64_t sub_23E058DA0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v19 = a3;
  v5 = type metadata accessor for AccessoryControlInfo(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v16 = v3;
    v20 = MEMORY[0x24BEE4AF8];
    sub_23E09E230(0, v9, 0);
    v10 = v20;
    v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = a1 + v17;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_23DF73E10(v11, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
      v18(v8);
      v20 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23E09E230(v13 > 1, v14 + 1, 1);
        v10 = v20;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_23DF89384((uint64_t)v8, v10 + v17 + v14 * v12, type metadata accessor for AccessoryControlInfo);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_23E058EF8()
{
  return sub_23DF73F28(&qword_256D230D0, type metadata accessor for AccessoryControlGroup.LayoutType, (uint64_t)&protocol conformance descriptor for AccessoryControlGroup.LayoutType);
}

uint64_t sub_23E058F24()
{
  return sub_23DF73F28(&qword_256D230D8, type metadata accessor for AccessoryControlGroup, (uint64_t)&protocol conformance descriptor for AccessoryControlGroup);
}

unint64_t sub_23E058F54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D230E0;
  if (!qword_256D230E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FAA8);
    v2 = sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D230E0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AccessoryControlGroup(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  char *v239;
  void (*v240)(char *, char *, uint64_t);
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  void (*__dst)(char *, char *, uint64_t);
  int *__dstb;
  char *__dstc;
  int *__dstd;
  char *__dste;
  char *__dstf;
  char *__dsta;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = sub_23E134C80();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      v11 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v266 = v6;
          v16 = *((_QWORD *)v14 + 1);
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *((_QWORD *)v13 + 1) = v16;
          v253 = type metadata accessor for IconDescriptor();
          v17 = *(int *)(v253 + 20);
          v18 = &v13[v17];
          v19 = &v14[v17];
          v20 = sub_23E135910();
          v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v18, v19, v20);
          v22 = v21;
          v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v24 = &v13[v23];
          v25 = &v14[v23];
          v26 = *((_QWORD *)v25 + 1);
          *(_QWORD *)v24 = *(_QWORD *)v25;
          *((_QWORD *)v24 + 1) = v26;
          v27 = *(int *)(v253 + 20);
          v28 = &v24[v27];
          v29 = &v25[v27];
          swift_bridgeObjectRetain();
          v22(v28, v29, v20);
          v30 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v13[*(int *)(v30 + 20)] = *(_QWORD *)&v14[*(int *)(v30 + 20)];
          v31 = *(int *)(v30 + 24);
          v32 = &v13[v31];
          v33 = &v14[v31];
          v34 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v35 = swift_getEnumCaseMultiPayload();
          if (v35 == 1)
          {
            v143 = *((_QWORD *)v33 + 1);
            *(_QWORD *)v32 = *(_QWORD *)v33;
            *((_QWORD *)v32 + 1) = v143;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v35)
          {
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v32 = *(_QWORD *)v33;
            v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v37 = &v32[v36];
            v38 = &v33[v36];
            v39 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
            swift_storeEnumTagMultiPayload();
          }
          v6 = v266;
          v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v13[*(int *)(v144 + 48)] = v14[*(int *)(v144 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v268 = v6;
          v69 = *((_QWORD *)v14 + 1);
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *((_QWORD *)v13 + 1) = v69;
          v255 = type metadata accessor for IconDescriptor();
          v70 = *(int *)(v255 + 20);
          v71 = &v13[v70];
          v72 = &v14[v70];
          v73 = sub_23E135910();
          v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
          swift_bridgeObjectRetain();
          v74(v71, v72, v73);
          v75 = v74;
          v76 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v77 = &v13[v76];
          v78 = &v14[v76];
          v79 = *((_QWORD *)v78 + 1);
          *(_QWORD *)v77 = *(_QWORD *)v78;
          *((_QWORD *)v77 + 1) = v79;
          v80 = *(int *)(v255 + 20);
          v81 = &v77[v80];
          v82 = &v78[v80];
          swift_bridgeObjectRetain();
          v75(v81, v82, v73);
          v83 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v13[v83[5]] = *(_QWORD *)&v14[v83[5]];
          *(_QWORD *)&v13[v83[6]] = *(_QWORD *)&v14[v83[6]];
          v84 = v83[7];
          v247 = &v14[v84];
          v256 = &v13[v84];
          v85 = sub_23E135520();
          v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
          swift_retain();
          swift_retain();
          v86(v256, v247, v85);
          *(_QWORD *)&v13[v83[8]] = *(_QWORD *)&v14[v83[8]];
          *(_QWORD *)&v13[v83[9]] = *(_QWORD *)&v14[v83[9]];
          *(_QWORD *)&v13[v83[10]] = *(_QWORD *)&v14[v83[10]];
          v87 = v83[11];
          v88 = &v13[v87];
          v89 = &v14[v87];
          v88[8] = v89[8];
          *(_QWORD *)v88 = *(_QWORD *)v89;
          v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v91 = &v13[v90];
          v92 = &v14[v90];
          v93 = type metadata accessor for Device.Control.IncrementalState(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            v136 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v91, v92, v136);
            v91[*(int *)(v93 + 20)] = v92[*(int *)(v93 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          v6 = v268;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v13[8] = v14[8];
          *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
          v13[24] = v14[24];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_DWORD *)(v13 + 7) = *(_DWORD *)(v14 + 7);
          v96 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v97 = &v13[v96];
          v98 = &v14[v96];
          v99 = type metadata accessor for Device.Control.ColorState(0);
          v100 = *(_QWORD *)(v99 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
          {
            v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            v270 = v6;
            v137 = sub_23E135328();
            v138 = *(_QWORD *)(v137 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v98, 1, v137))
            {
              v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v97, v98, v137);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v97, 0, 1, v137);
            }
            v6 = v270;
            v147 = *(int *)(v99 + 20);
            v148 = &v97[v147];
            v149 = &v98[v147];
            *(_QWORD *)v148 = *(_QWORD *)v149;
            v148[8] = v149[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 4u:
          v102 = *((_QWORD *)v14 + 1);
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *((_QWORD *)v13 + 1) = v102;
          v13[16] = v14[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v10(v13, v14, v9);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      a1[v11[6]] = a2[v11[6]];
      v150 = v11[7];
      v151 = &a1[v150];
      v152 = &a2[v150];
      v153 = *((_QWORD *)v152 + 1);
      *(_QWORD *)v151 = *(_QWORD *)v152;
      *((_QWORD *)v151 + 1) = v153;
      *(_WORD *)&a1[v11[8]] = *(_WORD *)&a2[v11[8]];
      a1[v11[9]] = a2[v11[9]];
      a1[v11[10]] = a2[v11[10]];
      *(_QWORD *)&a1[v11[11]] = *(_QWORD *)&a2[v11[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v40 = sub_23E134C80();
      __dst = *(void **)(*(_QWORD *)(v40 - 8) + 16);
      ((void (*)(char *, char *, uint64_t))__dst)(a1, a2, v40);
      v41 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v42 = v41[5];
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v246 = v40;
          v254 = v45;
          v267 = v6;
          v46 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *((_QWORD *)v43 + 1) = v46;
          v241 = type metadata accessor for IconDescriptor();
          v47 = *(int *)(v241 + 20);
          v48 = &v43[v47];
          v49 = &v44[v47];
          v50 = sub_23E135910();
          v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v48, v49, v50);
          v52 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v53 = &v43[v52];
          v54 = &v44[v52];
          v55 = *((_QWORD *)v54 + 1);
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *((_QWORD *)v53 + 1) = v55;
          v56 = *(int *)(v241 + 20);
          v57 = &v53[v56];
          v58 = &v54[v56];
          swift_bridgeObjectRetain();
          v51(v57, v58, v50);
          v59 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v43[*(int *)(v59 + 20)] = *(_QWORD *)&v44[*(int *)(v59 + 20)];
          v60 = *(int *)(v59 + 24);
          v61 = &v43[v60];
          v62 = &v44[v60];
          v63 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v64 = swift_getEnumCaseMultiPayload();
          if (v64 == 1)
          {
            v145 = *((_QWORD *)v62 + 1);
            *(_QWORD *)v61 = *(_QWORD *)v62;
            *((_QWORD *)v61 + 1) = v145;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v64)
          {
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v66 = &v61[v65];
            v67 = &v62[v65];
            v68 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
            swift_storeEnumTagMultiPayload();
          }
          v6 = v267;
          v40 = v246;
          v45 = v254;
          v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v43[*(int *)(v146 + 48)] = v44[*(int *)(v146 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v248 = v40;
          v257 = v45;
          v269 = v6;
          v103 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *((_QWORD *)v43 + 1) = v103;
          v242 = type metadata accessor for IconDescriptor();
          v104 = *(int *)(v242 + 20);
          v105 = &v43[v104];
          v106 = &v44[v104];
          v107 = sub_23E135910();
          v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
          swift_bridgeObjectRetain();
          v108(v105, v106, v107);
          v109 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v110 = &v43[v109];
          v111 = &v44[v109];
          v112 = *((_QWORD *)v111 + 1);
          *(_QWORD *)v110 = *(_QWORD *)v111;
          *((_QWORD *)v110 + 1) = v112;
          v113 = *(int *)(v242 + 20);
          v114 = &v110[v113];
          v115 = &v111[v113];
          swift_bridgeObjectRetain();
          v108(v114, v115, v107);
          v116 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v43[v116[5]] = *(_QWORD *)&v44[v116[5]];
          *(_QWORD *)&v43[v116[6]] = *(_QWORD *)&v44[v116[6]];
          v117 = v116[7];
          v239 = &v44[v117];
          v243 = &v43[v117];
          v118 = sub_23E135520();
          v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
          swift_retain();
          swift_retain();
          v119(v243, v239, v118);
          *(_QWORD *)&v43[v116[8]] = *(_QWORD *)&v44[v116[8]];
          *(_QWORD *)&v43[v116[9]] = *(_QWORD *)&v44[v116[9]];
          *(_QWORD *)&v43[v116[10]] = *(_QWORD *)&v44[v116[10]];
          v120 = v116[11];
          v121 = &v43[v120];
          v122 = &v44[v120];
          v121[8] = v122[8];
          *(_QWORD *)v121 = *(_QWORD *)v122;
          v123 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v124 = &v43[v123];
          v125 = &v44[v123];
          v126 = type metadata accessor for Device.Control.IncrementalState(0);
          v127 = *(_QWORD *)(v126 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
          {
            v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          else
          {
            v140 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v124, v125, v140);
            v124[*(int *)(v126 + 20)] = v125[*(int *)(v126 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
          }
          v45 = v257;
          goto LABEL_50;
        case 2u:
          *(_QWORD *)v43 = *(_QWORD *)v44;
          v43[8] = v44[8];
          *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
          v43[24] = v44[24];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v248 = v40;
          v269 = v6;
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *(_DWORD *)(v43 + 7) = *(_DWORD *)(v44 + 7);
          v129 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v130 = &v43[v129];
          v131 = &v44[v129];
          v132 = type metadata accessor for Device.Control.ColorState(0);
          v133 = *(_QWORD *)(v132 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
          {
            v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            v141 = sub_23E135328();
            v258 = *(_QWORD *)(v141 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48))(v131, 1, v141))
            {
              v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v130, v131, v141);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v130, 0, 1, v141);
            }
            v154 = *(int *)(v132 + 20);
            v155 = &v130[v154];
            v156 = &v131[v154];
            *(_QWORD *)v155 = *(_QWORD *)v156;
            v155[8] = v156[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
          }
LABEL_50:
          swift_storeEnumTagMultiPayload();
          v6 = v269;
          v40 = v248;
          break;
        case 4u:
          v135 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *((_QWORD *)v43 + 1) = v135;
          v43[16] = v44[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          ((void (*)(char *, char *, uint64_t))__dst)(v43, v44, v40);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          break;
      }
      a1[v41[6]] = a2[v41[6]];
      v157 = v41[7];
      v158 = &a1[v157];
      v159 = &a2[v157];
      v160 = *((_QWORD *)v159 + 1);
      *(_QWORD *)v158 = *(_QWORD *)v159;
      *((_QWORD *)v158 + 1) = v160;
      *(_WORD *)&a1[v41[8]] = *(_WORD *)&a2[v41[8]];
      a1[v41[9]] = a2[v41[9]];
      a1[v41[10]] = a2[v41[10]];
      *(_QWORD *)&a1[v41[11]] = *(_QWORD *)&a2[v41[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v161 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v162 = &a1[v161];
      v163 = &a2[v161];
      v164 = v40;
      ((void (*)(char *, char *, uint64_t))__dst)(&a1[v161], &a2[v161], v40);
      v165 = v41[5];
      v166 = &v162[v165];
      v167 = &v163[v165];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v271 = v6;
          v168 = *((_QWORD *)v167 + 1);
          *(_QWORD *)v166 = *(_QWORD *)v167;
          *((_QWORD *)v166 + 1) = v168;
          __dstb = (int *)type metadata accessor for IconDescriptor();
          v169 = __dstb[5];
          v244 = &v167[v169];
          v249 = &v166[v169];
          v170 = sub_23E135910();
          v171 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 16);
          swift_bridgeObjectRetain();
          v171(v249, v244, v170);
          v172 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v173 = &v166[v172];
          v174 = &v167[v172];
          v175 = *((_QWORD *)v174 + 1);
          *(_QWORD *)v173 = *(_QWORD *)v174;
          *((_QWORD *)v173 + 1) = v175;
          v176 = __dstb[5];
          v177 = &v173[v176];
          __dstc = &v174[v176];
          swift_bridgeObjectRetain();
          v171(v177, __dstc, v170);
          v178 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v166[*(int *)(v178 + 20)] = *(_QWORD *)&v167[*(int *)(v178 + 20)];
          v179 = *(int *)(v178 + 24);
          v180 = &v166[v179];
          v181 = &v167[v179];
          v182 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v183 = swift_getEnumCaseMultiPayload();
          if (v183 == 1)
          {
            v221 = *((_QWORD *)v181 + 1);
            *(_QWORD *)v180 = *(_QWORD *)v181;
            *((_QWORD *)v180 + 1) = v221;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v183)
          {
            memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v180 = *(_QWORD *)v181;
            v184 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v185 = &v180[v184];
            v186 = &v181[v184];
            v187 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v185, v186, v187);
            swift_storeEnumTagMultiPayload();
          }
          v6 = v271;
          v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v166[*(int *)(v222 + 48)] = v167[*(int *)(v222 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v272 = v6;
          v188 = *((_QWORD *)v167 + 1);
          *(_QWORD *)v166 = *(_QWORD *)v167;
          *((_QWORD *)v166 + 1) = v188;
          __dstd = (int *)type metadata accessor for IconDescriptor();
          v189 = __dstd[5];
          v245 = &v167[v189];
          v250 = &v166[v189];
          v190 = sub_23E135910();
          v191 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16);
          swift_bridgeObjectRetain();
          v191(v250, v245, v190);
          v192 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v193 = &v166[v192];
          v194 = &v167[v192];
          v195 = *((_QWORD *)v194 + 1);
          *(_QWORD *)v193 = *(_QWORD *)v194;
          *((_QWORD *)v193 + 1) = v195;
          v196 = __dstd[5];
          v197 = &v193[v196];
          __dste = &v194[v196];
          swift_bridgeObjectRetain();
          v191(v197, __dste, v190);
          v198 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v166[v198[5]] = *(_QWORD *)&v167[v198[5]];
          *(_QWORD *)&v166[v198[6]] = *(_QWORD *)&v167[v198[6]];
          v199 = v198[7];
          __dstf = &v166[v199];
          v251 = &v167[v199];
          v200 = sub_23E135520();
          v240 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
          swift_retain();
          swift_retain();
          v240(__dstf, v251, v200);
          *(_QWORD *)&v166[v198[8]] = *(_QWORD *)&v167[v198[8]];
          *(_QWORD *)&v166[v198[9]] = *(_QWORD *)&v167[v198[9]];
          *(_QWORD *)&v166[v198[10]] = *(_QWORD *)&v167[v198[10]];
          v201 = v198[11];
          v202 = &v166[v201];
          v203 = &v167[v201];
          v202[8] = v203[8];
          *(_QWORD *)v202 = *(_QWORD *)v203;
          v204 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v205 = &v166[v204];
          v206 = &v167[v204];
          v207 = type metadata accessor for Device.Control.IncrementalState(0);
          v208 = *(_QWORD *)(v207 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
          {
            v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
          }
          else
          {
            v217 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v205, v206, v217);
            v205[*(int *)(v207 + 20)] = v206[*(int *)(v207 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
          }
          v6 = v272;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *(_QWORD *)v166 = *(_QWORD *)v167;
          v166[8] = v167[8];
          *((_QWORD *)v166 + 2) = *((_QWORD *)v167 + 2);
          v166[24] = v167[24];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v273 = v6;
          *(_QWORD *)v166 = *(_QWORD *)v167;
          *(_DWORD *)(v166 + 7) = *(_DWORD *)(v167 + 7);
          v210 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v211 = &v166[v210];
          v212 = &v167[v210];
          v213 = type metadata accessor for Device.Control.ColorState(0);
          v214 = *(_QWORD *)(v213 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v212, 1, v213))
          {
            v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
          }
          else
          {
            __dsta = v211;
            v218 = sub_23E135328();
            v252 = *(_QWORD *)(v218 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v252 + 48))(v212, 1, v218))
            {
              v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v220 = __dsta;
              memcpy(__dsta, v212, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v252 + 16))(__dsta, v212, v218);
              v220 = __dsta;
              (*(void (**)(void))(v252 + 56))();
            }
            v223 = *(int *)(v213 + 20);
            v224 = &v220[v223];
            v225 = &v212[v223];
            *(_QWORD *)v224 = *(_QWORD *)v225;
            v224[8] = v225[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v220, 0, 1, v213);
          }
          swift_storeEnumTagMultiPayload();
          v6 = v273;
          break;
        case 4u:
          v216 = *((_QWORD *)v167 + 1);
          *(_QWORD *)v166 = *(_QWORD *)v167;
          *((_QWORD *)v166 + 1) = v216;
          v166[16] = v167[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          ((void (*)(char *, char *, uint64_t))__dst)(v166, v167, v164);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          break;
      }
      v162[v41[6]] = v163[v41[6]];
      v226 = v41[7];
      v227 = &v162[v226];
      v228 = &v163[v226];
      v229 = *((_QWORD *)v228 + 1);
      *(_QWORD *)v227 = *(_QWORD *)v228;
      *((_QWORD *)v227 + 1) = v229;
      *(_WORD *)&v162[v41[8]] = *(_WORD *)&v163[v41[8]];
      v162[v41[9]] = v163[v41[9]];
      v162[v41[10]] = v163[v41[10]];
      *(_QWORD *)&v162[v41[11]] = *(_QWORD *)&v163[v41[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v230 = *(int *)(v6 + 20);
    v231 = *(int *)(v6 + 24);
    v232 = &a1[v230];
    v233 = &a2[v230];
    v234 = *((_QWORD *)v233 + 1);
    *(_QWORD *)v232 = *(_QWORD *)v233;
    *((_QWORD *)v232 + 1) = v234;
    v235 = &a1[v231];
    v236 = &a2[v231];
    v237 = *((_QWORD *)v236 + 1);
    *(_QWORD *)v235 = *(_QWORD *)v236;
    *((_QWORD *)v235 + 1) = v237;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccessoryControlGroup(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;

  type metadata accessor for AccessoryControlGroup.LayoutType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v17 = sub_23E134C80();
      v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
      v18(a1, v17);
      v19 = a1 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 20);
      type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v20 = type metadata accessor for IconDescriptor();
          v21 = v19 + *(int *)(v20 + 20);
          v22 = sub_23E135910();
          v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
          v23(v21, v22);
          v24 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v23(v24 + *(int *)(v20 + 20), v22);
          v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          swift_release();
          v26 = v19 + *(int *)(v25 + 24);
          type metadata accessor for ControlTextModifier.Config(0);
          v27 = swift_getEnumCaseMultiPayload();
          if (v27 == 1)
            goto LABEL_40;
          if (!v27)
          {
LABEL_32:
            v49 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v64 = sub_23E134C20();
            goto LABEL_35;
          }
          break;
        case 1u:
          swift_bridgeObjectRelease();
          v41 = type metadata accessor for IconDescriptor();
          v42 = v19 + *(int *)(v41 + 20);
          v43 = sub_23E135910();
          v44 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8);
          v44(v42, v43);
          v45 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v44(v45 + *(int *)(v41 + 20), v43);
          v46 = type metadata accessor for Device.Control.IncrementalConfig(0);
          swift_release();
          swift_release();
          v47 = v19 + *(int *)(v46 + 28);
          v48 = sub_23E135520();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
          v49 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v50 = type metadata accessor for Device.Control.IncrementalState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
          {
LABEL_34:
            v64 = sub_23E13534C();
LABEL_35:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v49, v64);
          }
          break;
        case 2u:
        case 4u:
LABEL_40:
          swift_bridgeObjectRelease();
          break;
        case 3u:
          v51 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v52 = type metadata accessor for Device.Control.ColorState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52))
          {
            v53 = sub_23E135328();
            v54 = *(_QWORD *)(v53 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v51, 1, v53))
              (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v51, v53);
          }
          break;
        case 6u:
          v18(v19, v17);
          break;
        default:
          break;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 1:
LABEL_42:
      swift_bridgeObjectRelease();
      break;
    case 0:
      v3 = sub_23E134C80();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = type metadata accessor for AccessoryControlInfo(0);
      v6 = a1 + *(int *)(v5 + 20);
      type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v79 = v5;
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for IconDescriptor();
          v8 = v6 + *(int *)(v7 + 20);
          v9 = sub_23E135910();
          v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
          v10(v8, v9);
          v11 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v10(v11 + *(int *)(v7 + 20), v9);
          v12 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          swift_release();
          v13 = v6 + *(int *)(v12 + 24);
          type metadata accessor for ControlTextModifier.Config(0);
          v14 = swift_getEnumCaseMultiPayload();
          if (v14 == 1)
          {
            swift_bridgeObjectRelease();
            v5 = v79;
          }
          else
          {
            v5 = v79;
            if (!v14)
            {
              v15 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
              v16 = sub_23E134C20();
LABEL_15:
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
            }
          }
LABEL_29:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v55 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
          v4(v55, v3);
          v56 = v55 + *(int *)(v5 + 20);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              v57 = type metadata accessor for IconDescriptor();
              v58 = v56 + *(int *)(v57 + 20);
              v59 = sub_23E135910();
              v60 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8);
              v60(v58, v59);
              v61 = v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
              swift_bridgeObjectRelease();
              v60(v61 + *(int *)(v57 + 20), v59);
              v62 = type metadata accessor for Device.Control.BinaryViewConfig(0);
              swift_release();
              v26 = v56 + *(int *)(v62 + 24);
              type metadata accessor for ControlTextModifier.Config(0);
              v63 = swift_getEnumCaseMultiPayload();
              if (v63 == 1)
                goto LABEL_40;
              if (!v63)
                goto LABEL_32;
              goto LABEL_41;
            case 1u:
              swift_bridgeObjectRelease();
              v65 = type metadata accessor for IconDescriptor();
              v66 = v56 + *(int *)(v65 + 20);
              v67 = sub_23E135910();
              v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8);
              v68(v66, v67);
              v69 = v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
              swift_bridgeObjectRelease();
              v68(v69 + *(int *)(v65 + 20), v67);
              v70 = type metadata accessor for Device.Control.IncrementalConfig(0);
              swift_release();
              swift_release();
              v71 = v56 + *(int *)(v70 + 28);
              v72 = sub_23E135520();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
              v49 = v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
              v73 = type metadata accessor for Device.Control.IncrementalState(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v49, 1, v73))goto LABEL_34;
              goto LABEL_41;
            case 2u:
            case 4u:
              goto LABEL_40;
            case 3u:
              v74 = v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
              v75 = type metadata accessor for Device.Control.ColorState(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75))
              {
                v76 = sub_23E135328();
                v77 = *(_QWORD *)(v76 - 8);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v74, 1, v76))
                  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v74, v76);
              }
              goto LABEL_41;
            case 6u:
              v4(v56, v3);
              goto LABEL_41;
            default:
              goto LABEL_41;
          }
        case 1u:
          swift_bridgeObjectRelease();
          v28 = type metadata accessor for IconDescriptor();
          v29 = v6 + *(int *)(v28 + 20);
          v30 = sub_23E135910();
          v80 = v5;
          v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8);
          v31(v29, v30);
          v32 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v31(v32 + *(int *)(v28 + 20), v30);
          v5 = v80;
          v33 = type metadata accessor for Device.Control.IncrementalConfig(0);
          swift_release();
          swift_release();
          v34 = v6 + *(int *)(v33 + 28);
          v35 = sub_23E135520();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          v15 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v36 = type metadata accessor for Device.Control.IncrementalState(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v15, 1, v36))
            goto LABEL_29;
          v16 = sub_23E13534C();
          goto LABEL_15;
        case 2u:
        case 4u:
          swift_bridgeObjectRelease();
          goto LABEL_29;
        case 3u:
          v37 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v38 = type metadata accessor for Device.Control.ColorState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
          {
            v39 = sub_23E135328();
            v40 = *(_QWORD *)(v39 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39))
              (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v37, v39);
          }
          goto LABEL_29;
        case 6u:
          v4(v6, v3);
          goto LABEL_29;
        default:
          goto LABEL_29;
      }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for AccessoryControlGroup(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  int v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  int *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  char *v240;
  char *v241;
  char *v242;
  void (*v243)(char *, char *, uint64_t);
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  char *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  void (*v252)(char *, char *, uint64_t);
  char *v253;
  void (*v254)(char *, char *, uint64_t);
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void *__dst;
  int *__dstc;
  char *__dsta;
  int *__dstd;
  char *__dste;
  char *__dstb;

  type metadata accessor for AccessoryControlGroup.LayoutType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_23E134C80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v263 = a3;
        v14 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *((_QWORD *)v11 + 1) = v14;
        v257 = type metadata accessor for IconDescriptor();
        v15 = *(int *)(v257 + 20);
        v16 = &v11[v15];
        v17 = &v12[v15];
        v18 = sub_23E135910();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        v20 = v19;
        v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v22 = &v11[v21];
        v23 = &v12[v21];
        v24 = *((_QWORD *)v23 + 1);
        *(_QWORD *)v22 = *(_QWORD *)v23;
        *((_QWORD *)v22 + 1) = v24;
        v25 = *(int *)(v257 + 20);
        v26 = &v22[v25];
        v27 = &v23[v25];
        swift_bridgeObjectRetain();
        v20(v26, v27, v18);
        v28 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v11[*(int *)(v28 + 20)] = *(_QWORD *)&v12[*(int *)(v28 + 20)];
        v29 = *(int *)(v28 + 24);
        v30 = &v11[v29];
        v31 = &v12[v29];
        v32 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 1)
        {
          v144 = *((_QWORD *)v31 + 1);
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = v144;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v33)
        {
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v35 = &v30[v34];
          v36 = &v31[v34];
          v37 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
          swift_storeEnumTagMultiPayload();
        }
        a3 = v263;
        v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v11[*(int *)(v145 + 48)] = v12[*(int *)(v145 + 48)];
        goto LABEL_44;
      case 1u:
        v265 = a3;
        v68 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *((_QWORD *)v11 + 1) = v68;
        v259 = type metadata accessor for IconDescriptor();
        v69 = *(int *)(v259 + 20);
        v70 = &v11[v69];
        v71 = &v12[v69];
        v72 = sub_23E135910();
        v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        v73(v70, v71, v72);
        v74 = v73;
        v75 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v76 = &v11[v75];
        v77 = &v12[v75];
        v78 = *((_QWORD *)v77 + 1);
        *(_QWORD *)v76 = *(_QWORD *)v77;
        *((_QWORD *)v76 + 1) = v78;
        v79 = *(int *)(v259 + 20);
        v80 = &v76[v79];
        v81 = &v77[v79];
        swift_bridgeObjectRetain();
        v74(v80, v81, v72);
        v82 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v11[v82[5]] = *(_QWORD *)&v12[v82[5]];
        *(_QWORD *)&v11[v82[6]] = *(_QWORD *)&v12[v82[6]];
        v83 = v82[7];
        v250 = &v12[v83];
        v260 = &v11[v83];
        v84 = sub_23E135520();
        v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
        swift_retain();
        swift_retain();
        v85(v260, v250, v84);
        *(_QWORD *)&v11[v82[8]] = *(_QWORD *)&v12[v82[8]];
        *(_QWORD *)&v11[v82[9]] = *(_QWORD *)&v12[v82[9]];
        *(_QWORD *)&v11[v82[10]] = *(_QWORD *)&v12[v82[10]];
        v86 = v82[11];
        v87 = &v11[v86];
        v88 = &v12[v86];
        v87[8] = v88[8];
        *(_QWORD *)v87 = *(_QWORD *)v88;
        v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v90 = &v11[v89];
        v91 = &v12[v89];
        v92 = type metadata accessor for Device.Control.IncrementalState(0);
        v93 = *(_QWORD *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
        {
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          v136 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v90, v91, v136);
          v90[*(int *)(v92 + 20)] = v91[*(int *)(v92 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        }
        swift_storeEnumTagMultiPayload();
        a3 = v265;
        break;
      case 2u:
        *(_QWORD *)v11 = *(_QWORD *)v12;
        v11[8] = v12[8];
        *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
        v11[24] = v12[24];
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 3u:
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
        v95 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v96 = &v11[v95];
        v97 = &v12[v95];
        v98 = type metadata accessor for Device.Control.ColorState(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          v267 = a3;
          v137 = sub_23E135328();
          v138 = *(_QWORD *)(v137 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v97, 1, v137))
          {
            v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v96, v97, v137);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v96, 0, 1, v137);
          }
          v148 = *(int *)(v98 + 20);
          v149 = &v96[v148];
          v150 = &v97[v148];
          *(_QWORD *)v149 = *(_QWORD *)v150;
          v149[8] = v150[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          a3 = v267;
        }
        goto LABEL_44;
      case 4u:
        v101 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *((_QWORD *)v11 + 1) = v101;
        v11[16] = v12[16];
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 6u:
        v8(v11, v12, v7);
LABEL_44:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    a1[v9[6]] = a2[v9[6]];
    v151 = v9[7];
    v152 = &a1[v151];
    v153 = &a2[v151];
    v154 = v153[1];
    *v152 = *v153;
    v152[1] = v154;
    *(_WORD *)&a1[v9[8]] = *(_WORD *)&a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[v9[10]] = a2[v9[10]];
    *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v38 = sub_23E134C80();
    __dst = *(void **)(*(_QWORD *)(v38 - 8) + 16);
    ((void (*)(char *, char *, uint64_t))__dst)(a1, a2, v38);
    v39 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v40 = v39[5];
    v41 = &a1[v40];
    v42 = &a2[v40];
    v43 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v249 = v38;
        v258 = v43;
        v264 = a3;
        v44 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = v44;
        v244 = type metadata accessor for IconDescriptor();
        v45 = *(int *)(v244 + 20);
        v46 = &v41[v45];
        v47 = &v42[v45];
        v48 = sub_23E135910();
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        v49(v46, v47, v48);
        v50 = v49;
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v52 = &v41[v51];
        v53 = &v42[v51];
        v54 = *((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = v54;
        v55 = *(int *)(v244 + 20);
        v56 = &v52[v55];
        v57 = &v53[v55];
        swift_bridgeObjectRetain();
        v50(v56, v57, v48);
        v58 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v41[*(int *)(v58 + 20)] = *(_QWORD *)&v42[*(int *)(v58 + 20)];
        v59 = *(int *)(v58 + 24);
        v60 = &v41[v59];
        v61 = &v42[v59];
        v62 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v63 = swift_getEnumCaseMultiPayload();
        if (v63 == 1)
        {
          v146 = *((_QWORD *)v61 + 1);
          *(_QWORD *)v60 = *(_QWORD *)v61;
          *((_QWORD *)v60 + 1) = v146;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v63)
        {
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v60 = *(_QWORD *)v61;
          v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v65 = &v60[v64];
          v66 = &v61[v64];
          v67 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
          swift_storeEnumTagMultiPayload();
        }
        v43 = v258;
        a3 = v264;
        v38 = v249;
        v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v41[*(int *)(v147 + 48)] = v42[*(int *)(v147 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v251 = v38;
        v261 = v43;
        v266 = a3;
        v102 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = v102;
        v245 = type metadata accessor for IconDescriptor();
        v103 = *(int *)(v245 + 20);
        v104 = &v41[v103];
        v105 = &v42[v103];
        v106 = sub_23E135910();
        v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        v107(v104, v105, v106);
        v108 = v107;
        v109 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v110 = &v41[v109];
        v111 = &v42[v109];
        v112 = *((_QWORD *)v111 + 1);
        *(_QWORD *)v110 = *(_QWORD *)v111;
        *((_QWORD *)v110 + 1) = v112;
        v113 = *(int *)(v245 + 20);
        v114 = &v110[v113];
        v115 = &v111[v113];
        swift_bridgeObjectRetain();
        v108(v114, v115, v106);
        v116 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v41[v116[5]] = *(_QWORD *)&v42[v116[5]];
        *(_QWORD *)&v41[v116[6]] = *(_QWORD *)&v42[v116[6]];
        v117 = v116[7];
        v240 = &v42[v117];
        v246 = &v41[v117];
        v118 = sub_23E135520();
        v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
        swift_retain();
        swift_retain();
        v119(v246, v240, v118);
        *(_QWORD *)&v41[v116[8]] = *(_QWORD *)&v42[v116[8]];
        *(_QWORD *)&v41[v116[9]] = *(_QWORD *)&v42[v116[9]];
        *(_QWORD *)&v41[v116[10]] = *(_QWORD *)&v42[v116[10]];
        v120 = v116[11];
        v121 = &v41[v120];
        v122 = &v42[v120];
        v121[8] = v122[8];
        *(_QWORD *)v121 = *(_QWORD *)v122;
        v123 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v124 = &v41[v123];
        v125 = &v42[v123];
        v126 = type metadata accessor for Device.Control.IncrementalState(0);
        v127 = *(_QWORD *)(v126 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
        {
          v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          v140 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v124, v125, v140);
          v124[*(int *)(v126 + 20)] = v125[*(int *)(v126 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
        }
        v43 = v261;
        swift_storeEnumTagMultiPayload();
        a3 = v266;
        goto LABEL_49;
      case 2u:
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v41[8] = v42[8];
        *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
        v41[24] = v42[24];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v251 = v38;
        v262 = v43;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *(_DWORD *)(v41 + 7) = *(_DWORD *)(v42 + 7);
        v129 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v130 = &v41[v129];
        v131 = &v42[v129];
        v132 = type metadata accessor for Device.Control.ColorState(0);
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
        {
          v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          v268 = a3;
          v141 = sub_23E135328();
          v142 = *(_QWORD *)(v141 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v131, 1, v141))
          {
            v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v130, v131, v141);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v130, 0, 1, v141);
          }
          a3 = v268;
          v155 = *(int *)(v132 + 20);
          v156 = &v130[v155];
          v157 = &v131[v155];
          *(_QWORD *)v156 = *(_QWORD *)v157;
          v156[8] = v157[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        v43 = v262;
        swift_storeEnumTagMultiPayload();
LABEL_49:
        v38 = v251;
        break;
      case 4u:
        v135 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = v135;
        v41[16] = v42[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        ((void (*)(char *, char *, uint64_t))__dst)(v41, v42, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        break;
    }
    a1[v39[6]] = a2[v39[6]];
    v158 = v39[7];
    v159 = &a1[v158];
    v160 = &a2[v158];
    v161 = v160[1];
    *v159 = *v160;
    v159[1] = v161;
    *(_WORD *)&a1[v39[8]] = *(_WORD *)&a2[v39[8]];
    a1[v39[9]] = a2[v39[9]];
    a1[v39[10]] = a2[v39[10]];
    *(_QWORD *)&a1[v39[11]] = *(_QWORD *)&a2[v39[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v162 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    v163 = &a1[v162];
    v164 = &a2[v162];
    v165 = v38;
    ((void (*)(char *, char *, uint64_t))__dst)(&a1[v162], &a2[v162], v38);
    v166 = v39[5];
    v167 = &v163[v166];
    v168 = &v164[v166];
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v269 = a3;
        v169 = *((_QWORD *)v168 + 1);
        *(_QWORD *)v167 = *(_QWORD *)v168;
        *((_QWORD *)v167 + 1) = v169;
        __dstc = (int *)type metadata accessor for IconDescriptor();
        v170 = __dstc[5];
        v241 = &v168[v170];
        v247 = &v167[v170];
        v171 = sub_23E135910();
        v172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
        v252 = v172;
        swift_bridgeObjectRetain();
        v172(v247, v241, v171);
        v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v174 = &v167[v173];
        v175 = &v168[v173];
        v176 = *((_QWORD *)v175 + 1);
        *(_QWORD *)v174 = *(_QWORD *)v175;
        *((_QWORD *)v174 + 1) = v176;
        v177 = __dstc[5];
        v178 = &v174[v177];
        v179 = &v175[v177];
        swift_bridgeObjectRetain();
        v252(v178, v179, v171);
        v180 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v167[*(int *)(v180 + 20)] = *(_QWORD *)&v168[*(int *)(v180 + 20)];
        v181 = *(int *)(v180 + 24);
        __dsta = &v167[v181];
        v182 = &v168[v181];
        v183 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v184 = swift_getEnumCaseMultiPayload();
        if (v184 == 1)
        {
          v222 = *((_QWORD *)v182 + 1);
          *(_QWORD *)__dsta = *(_QWORD *)v182;
          *((_QWORD *)__dsta + 1) = v222;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v184)
        {
          memcpy(__dsta, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        }
        else
        {
          *(_QWORD *)__dsta = *(_QWORD *)v182;
          v185 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v253 = &__dsta[v185];
          v186 = &v182[v185];
          v187 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v253, v186, v187);
          swift_storeEnumTagMultiPayload();
        }
        a3 = v269;
        v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v167[*(int *)(v223 + 48)] = v168[*(int *)(v223 + 48)];
        goto LABEL_72;
      case 1u:
        v270 = a3;
        v188 = *((_QWORD *)v168 + 1);
        *(_QWORD *)v167 = *(_QWORD *)v168;
        *((_QWORD *)v167 + 1) = v188;
        __dstd = (int *)type metadata accessor for IconDescriptor();
        v189 = __dstd[5];
        v242 = &v168[v189];
        v248 = &v167[v189];
        v190 = sub_23E135910();
        v191 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16);
        v254 = v191;
        swift_bridgeObjectRetain();
        v191(v248, v242, v190);
        v192 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v193 = &v167[v192];
        v194 = &v168[v192];
        v195 = *((_QWORD *)v194 + 1);
        *(_QWORD *)v193 = *(_QWORD *)v194;
        *((_QWORD *)v193 + 1) = v195;
        v196 = __dstd[5];
        v197 = &v193[v196];
        v198 = &v194[v196];
        swift_bridgeObjectRetain();
        v254(v197, v198, v190);
        v199 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v167[v199[5]] = *(_QWORD *)&v168[v199[5]];
        *(_QWORD *)&v167[v199[6]] = *(_QWORD *)&v168[v199[6]];
        v200 = v199[7];
        __dste = &v167[v200];
        v255 = &v168[v200];
        v201 = sub_23E135520();
        v243 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16);
        swift_retain();
        swift_retain();
        v243(__dste, v255, v201);
        *(_QWORD *)&v167[v199[8]] = *(_QWORD *)&v168[v199[8]];
        *(_QWORD *)&v167[v199[9]] = *(_QWORD *)&v168[v199[9]];
        *(_QWORD *)&v167[v199[10]] = *(_QWORD *)&v168[v199[10]];
        v202 = v199[11];
        v203 = &v167[v202];
        v204 = &v168[v202];
        v203[8] = v204[8];
        *(_QWORD *)v203 = *(_QWORD *)v204;
        v205 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v206 = &v167[v205];
        v207 = &v168[v205];
        v208 = type metadata accessor for Device.Control.IncrementalState(0);
        v209 = *(_QWORD *)(v208 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48))(v207, 1, v208))
        {
          v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
        }
        else
        {
          v218 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v206, v207, v218);
          v206[*(int *)(v208 + 20)] = v207[*(int *)(v208 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
        }
        a3 = v270;
        goto LABEL_72;
      case 2u:
        *(_QWORD *)v167 = *(_QWORD *)v168;
        v167[8] = v168[8];
        *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
        v167[24] = v168[24];
        swift_bridgeObjectRetain();
        goto LABEL_72;
      case 3u:
        v271 = a3;
        *(_QWORD *)v167 = *(_QWORD *)v168;
        *(_DWORD *)(v167 + 7) = *(_DWORD *)(v168 + 7);
        v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v212 = &v167[v211];
        v213 = &v168[v211];
        v214 = type metadata accessor for Device.Control.ColorState(0);
        v215 = *(_QWORD *)(v214 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
        {
          v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
        }
        else
        {
          __dstb = v212;
          v219 = sub_23E135328();
          v256 = *(_QWORD *)(v219 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v213, 1, v219))
          {
            v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v221 = __dstb;
            memcpy(__dstb, v213, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v256 + 16))(__dstb, v213, v219);
            v221 = __dstb;
            (*(void (**)(void))(v256 + 56))();
          }
          v224 = *(int *)(v214 + 20);
          v225 = &v221[v224];
          v226 = &v213[v224];
          *(_QWORD *)v225 = *(_QWORD *)v226;
          v225[8] = v226[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v221, 0, 1, v214);
        }
        a3 = v271;
        goto LABEL_72;
      case 4u:
        v217 = *((_QWORD *)v168 + 1);
        *(_QWORD *)v167 = *(_QWORD *)v168;
        *((_QWORD *)v167 + 1) = v217;
        v167[16] = v168[16];
        swift_bridgeObjectRetain();
        goto LABEL_72;
      case 6u:
        ((void (*)(char *, char *, uint64_t))__dst)(v167, v168, v165);
LABEL_72:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        break;
    }
    v163[v39[6]] = v164[v39[6]];
    v227 = v39[7];
    v228 = &v163[v227];
    v229 = &v164[v227];
    v230 = *((_QWORD *)v229 + 1);
    *(_QWORD *)v228 = *(_QWORD *)v229;
    *((_QWORD *)v228 + 1) = v230;
    *(_WORD *)&v163[v39[8]] = *(_WORD *)&v164[v39[8]];
    v163[v39[9]] = v164[v39[9]];
    v163[v39[10]] = v164[v39[10]];
    *(_QWORD *)&v163[v39[11]] = *(_QWORD *)&v164[v39[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v231 = *(int *)(a3 + 20);
  v232 = *(int *)(a3 + 24);
  v233 = &a1[v231];
  v234 = &a2[v231];
  v235 = v234[1];
  *v233 = *v234;
  v233[1] = v235;
  v236 = &a1[v232];
  v237 = &a2[v232];
  v238 = v237[1];
  *v236 = *v237;
  v236[1] = v238;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for AccessoryControlGroup(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  char v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, char *, uint64_t);
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, char *, uint64_t);
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  char *v227;
  char *v228;
  char *v229;
  void (*v230)(char *, char *, uint64_t);
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  void (*v239)(char *, char *, uint64_t);
  char *v240;
  void (*v241)(char *, char *, uint64_t);
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  void *__dst;
  int *__dstc;
  char *__dsta;
  int *__dstd;
  char *__dste;
  char *__dstb;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlGroup.LayoutType);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_23E134C80();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v256 = a3;
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
          v244 = type metadata accessor for IconDescriptor();
          v14 = *(int *)(v244 + 20);
          v15 = &v11[v14];
          v16 = &v12[v14];
          v17 = sub_23E135910();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v15, v16, v17);
          v19 = v18;
          v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v21 = &v11[v20];
          v22 = &v12[v20];
          *(_QWORD *)v21 = *(_QWORD *)v22;
          *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
          v23 = *(int *)(v244 + 20);
          v24 = &v21[v23];
          v25 = &v22[v23];
          swift_bridgeObjectRetain();
          v19(v24, v25, v17);
          v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v11[*(int *)(v26 + 20)] = *(_QWORD *)&v12[*(int *)(v26 + 20)];
          v27 = *(int *)(v26 + 24);
          v28 = &v11[v27];
          v29 = &v12[v27];
          v30 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v31 = swift_getEnumCaseMultiPayload();
          if (v31 == 1)
          {
            *(_QWORD *)v28 = *(_QWORD *)v29;
            *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v31)
          {
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v28 = *(_QWORD *)v29;
            v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v33 = &v28[v32];
            v34 = &v29[v32];
            v35 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
            swift_storeEnumTagMultiPayload();
          }
          a3 = v256;
          v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v11[*(int *)(v138 + 48)] = v12[*(int *)(v138 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v258 = a3;
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
          v246 = type metadata accessor for IconDescriptor();
          v63 = *(int *)(v246 + 20);
          v64 = &v11[v63];
          v65 = &v12[v63];
          v66 = sub_23E135910();
          v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
          swift_bridgeObjectRetain();
          v67(v64, v65, v66);
          v68 = v67;
          v69 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v70 = &v11[v69];
          v71 = &v12[v69];
          *(_QWORD *)v70 = *(_QWORD *)v71;
          *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
          v72 = *(int *)(v246 + 20);
          v73 = &v70[v72];
          v74 = &v71[v72];
          swift_bridgeObjectRetain();
          v68(v73, v74, v66);
          v75 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v11[v75[5]] = *(_QWORD *)&v12[v75[5]];
          *(_QWORD *)&v11[v75[6]] = *(_QWORD *)&v12[v75[6]];
          v76 = v75[7];
          v237 = &v12[v76];
          v247 = &v11[v76];
          v77 = sub_23E135520();
          v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
          swift_retain();
          swift_retain();
          v78(v247, v237, v77);
          *(_QWORD *)&v11[v75[8]] = *(_QWORD *)&v12[v75[8]];
          *(_QWORD *)&v11[v75[9]] = *(_QWORD *)&v12[v75[9]];
          *(_QWORD *)&v11[v75[10]] = *(_QWORD *)&v12[v75[10]];
          v79 = v75[11];
          v80 = &v11[v79];
          v81 = &v12[v79];
          v82 = v81[8];
          *(_QWORD *)v80 = *(_QWORD *)v81;
          v80[8] = v82;
          v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v84 = &v11[v83];
          v85 = &v12[v83];
          v86 = type metadata accessor for Device.Control.IncrementalState(0);
          v87 = *(_QWORD *)(v86 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
          {
            v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
          }
          else
          {
            v130 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v84, v85, v130);
            v84[*(int *)(v86 + 20)] = v85[*(int *)(v86 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
          }
          a3 = v258;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *(_QWORD *)v11 = *(_QWORD *)v12;
          v11[8] = v12[8];
          v89 = *((_QWORD *)v12 + 2);
          v11[24] = v12[24];
          *((_QWORD *)v11 + 2) = v89;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v90 = *(_QWORD *)v12;
          *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
          *(_QWORD *)v11 = v90;
          v91 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v92 = &v11[v91];
          v93 = &v12[v91];
          v94 = type metadata accessor for Device.Control.ColorState(0);
          v95 = *(_QWORD *)(v94 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
          {
            v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            v260 = a3;
            v131 = sub_23E135328();
            v132 = *(_QWORD *)(v131 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v93, 1, v131))
            {
              v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v92, v93, v131);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v92, 0, 1, v131);
            }
            a3 = v260;
            v140 = *(int *)(v94 + 20);
            v141 = &v92[v140];
            v142 = &v93[v140];
            v143 = *(_QWORD *)v142;
            v141[8] = v142[8];
            *(_QWORD *)v141 = v143;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 4u:
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
          v11[16] = v12[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v8(v11, v12, v7);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      a1[v9[6]] = a2[v9[6]];
      v144 = v9[7];
      v145 = &a1[v144];
      v146 = &a2[v144];
      *v145 = *v146;
      v145[1] = v146[1];
      *(_WORD *)&a1[v9[8]] = *(_WORD *)&a2[v9[8]];
      a1[v9[9]] = a2[v9[9]];
      a1[v9[10]] = a2[v9[10]];
      *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v36 = sub_23E134C80();
      __dst = *(void **)(*(_QWORD *)(v36 - 8) + 16);
      ((void (*)(char *, char *, uint64_t))__dst)(a1, a2, v36);
      v37 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v38 = v37[5];
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v236 = v36;
          v245 = v41;
          v257 = a3;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
          v231 = type metadata accessor for IconDescriptor();
          v42 = *(int *)(v231 + 20);
          v43 = &v39[v42];
          v44 = &v40[v42];
          v45 = sub_23E135910();
          v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v43, v44, v45);
          v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v48 = &v39[v47];
          v49 = &v40[v47];
          *(_QWORD *)v48 = *(_QWORD *)v49;
          *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
          v50 = *(int *)(v231 + 20);
          v51 = &v48[v50];
          v52 = &v49[v50];
          swift_bridgeObjectRetain();
          v46(v51, v52, v45);
          v53 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v39[*(int *)(v53 + 20)] = *(_QWORD *)&v40[*(int *)(v53 + 20)];
          v54 = *(int *)(v53 + 24);
          v55 = &v39[v54];
          v56 = &v40[v54];
          v57 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v58 = swift_getEnumCaseMultiPayload();
          if (v58 == 1)
          {
            *(_QWORD *)v55 = *(_QWORD *)v56;
            *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v58)
          {
            memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v55 = *(_QWORD *)v56;
            v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v60 = &v55[v59];
            v61 = &v56[v59];
            v62 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
            swift_storeEnumTagMultiPayload();
          }
          a3 = v257;
          v36 = v236;
          v41 = v245;
          v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v39[*(int *)(v139 + 48)] = v40[*(int *)(v139 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v238 = v36;
          v248 = v41;
          v259 = a3;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
          v232 = type metadata accessor for IconDescriptor();
          v97 = *(int *)(v232 + 20);
          v98 = &v39[v97];
          v99 = &v40[v97];
          v100 = sub_23E135910();
          v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
          swift_bridgeObjectRetain();
          v101(v98, v99, v100);
          v102 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v103 = &v39[v102];
          v104 = &v40[v102];
          *(_QWORD *)v103 = *(_QWORD *)v104;
          *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
          v105 = *(int *)(v232 + 20);
          v106 = &v103[v105];
          v107 = &v104[v105];
          swift_bridgeObjectRetain();
          v101(v106, v107, v100);
          v108 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v39[v108[5]] = *(_QWORD *)&v40[v108[5]];
          *(_QWORD *)&v39[v108[6]] = *(_QWORD *)&v40[v108[6]];
          v109 = v108[7];
          v227 = &v40[v109];
          v233 = &v39[v109];
          v110 = sub_23E135520();
          v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
          swift_retain();
          swift_retain();
          v111(v233, v227, v110);
          *(_QWORD *)&v39[v108[8]] = *(_QWORD *)&v40[v108[8]];
          *(_QWORD *)&v39[v108[9]] = *(_QWORD *)&v40[v108[9]];
          *(_QWORD *)&v39[v108[10]] = *(_QWORD *)&v40[v108[10]];
          v112 = v108[11];
          v113 = &v39[v112];
          v114 = &v40[v112];
          v115 = v114[8];
          *(_QWORD *)v113 = *(_QWORD *)v114;
          v113[8] = v115;
          v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v117 = &v39[v116];
          v118 = &v40[v116];
          v119 = type metadata accessor for Device.Control.IncrementalState(0);
          v120 = *(_QWORD *)(v119 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
          {
            v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            v134 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v117, v118, v134);
            v117[*(int *)(v119 + 20)] = v118[*(int *)(v119 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
          }
          v41 = v248;
          goto LABEL_50;
        case 2u:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v39[8] = v40[8];
          v122 = *((_QWORD *)v40 + 2);
          v39[24] = v40[24];
          *((_QWORD *)v39 + 2) = v122;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v238 = v36;
          v249 = v41;
          v259 = a3;
          v123 = *(_QWORD *)v40;
          *(_DWORD *)(v39 + 7) = *(_DWORD *)(v40 + 7);
          *(_QWORD *)v39 = v123;
          v124 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v125 = &v39[v124];
          v126 = &v40[v124];
          v127 = type metadata accessor for Device.Control.ColorState(0);
          v128 = *(_QWORD *)(v127 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
          {
            v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
          }
          else
          {
            v135 = sub_23E135328();
            v136 = *(_QWORD *)(v135 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v126, 1, v135))
            {
              v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v125, v126, v135);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v125, 0, 1, v135);
            }
            v147 = *(int *)(v127 + 20);
            v148 = &v125[v147];
            v149 = &v126[v147];
            v150 = *(_QWORD *)v149;
            v148[8] = v149[8];
            *(_QWORD *)v148 = v150;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
          }
          v41 = v249;
LABEL_50:
          swift_storeEnumTagMultiPayload();
          a3 = v259;
          v36 = v238;
          break;
        case 4u:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
          v39[16] = v40[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          ((void (*)(char *, char *, uint64_t))__dst)(v39, v40, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          break;
      }
      a1[v37[6]] = a2[v37[6]];
      v151 = v37[7];
      v152 = &a1[v151];
      v153 = &a2[v151];
      *v152 = *v153;
      v152[1] = v153[1];
      *(_WORD *)&a1[v37[8]] = *(_WORD *)&a2[v37[8]];
      a1[v37[9]] = a2[v37[9]];
      a1[v37[10]] = a2[v37[10]];
      *(_QWORD *)&a1[v37[11]] = *(_QWORD *)&a2[v37[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v154 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v155 = &a1[v154];
      v156 = &a2[v154];
      v157 = v36;
      ((void (*)(char *, char *, uint64_t))__dst)(&a1[v154], &a2[v154], v36);
      v158 = v37[5];
      v159 = &v155[v158];
      v160 = &v156[v158];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v261 = a3;
          *(_QWORD *)v159 = *(_QWORD *)v160;
          *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
          __dstc = (int *)type metadata accessor for IconDescriptor();
          v161 = __dstc[5];
          v228 = &v160[v161];
          v234 = &v159[v161];
          v162 = sub_23E135910();
          v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
          v239 = v163;
          swift_bridgeObjectRetain();
          v163(v234, v228, v162);
          v164 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v165 = &v159[v164];
          v166 = &v160[v164];
          *(_QWORD *)v165 = *(_QWORD *)v166;
          *((_QWORD *)v165 + 1) = *((_QWORD *)v166 + 1);
          v167 = __dstc[5];
          v168 = &v165[v167];
          v169 = &v166[v167];
          swift_bridgeObjectRetain();
          v239(v168, v169, v162);
          v170 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v159[*(int *)(v170 + 20)] = *(_QWORD *)&v160[*(int *)(v170 + 20)];
          v171 = *(int *)(v170 + 24);
          __dsta = &v159[v171];
          v172 = &v160[v171];
          v173 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v174 = swift_getEnumCaseMultiPayload();
          if (v174 == 1)
          {
            *(_QWORD *)__dsta = *(_QWORD *)v172;
            *((_QWORD *)__dsta + 1) = *((_QWORD *)v172 + 1);
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v174)
          {
            memcpy(__dsta, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
          }
          else
          {
            *(_QWORD *)__dsta = *(_QWORD *)v172;
            v175 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v240 = &__dsta[v175];
            v176 = &v172[v175];
            v177 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v240, v176, v177);
            swift_storeEnumTagMultiPayload();
          }
          a3 = v261;
          v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v159[*(int *)(v212 + 48)] = v160[*(int *)(v212 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v262 = a3;
          *(_QWORD *)v159 = *(_QWORD *)v160;
          *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
          __dstd = (int *)type metadata accessor for IconDescriptor();
          v178 = __dstd[5];
          v229 = &v160[v178];
          v235 = &v159[v178];
          v179 = sub_23E135910();
          v180 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 16);
          v241 = v180;
          swift_bridgeObjectRetain();
          v180(v235, v229, v179);
          v181 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v182 = &v159[v181];
          v183 = &v160[v181];
          *(_QWORD *)v182 = *(_QWORD *)v183;
          *((_QWORD *)v182 + 1) = *((_QWORD *)v183 + 1);
          v184 = __dstd[5];
          v185 = &v182[v184];
          v186 = &v183[v184];
          swift_bridgeObjectRetain();
          v241(v185, v186, v179);
          v187 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v159[v187[5]] = *(_QWORD *)&v160[v187[5]];
          *(_QWORD *)&v159[v187[6]] = *(_QWORD *)&v160[v187[6]];
          v188 = v187[7];
          __dste = &v159[v188];
          v242 = &v160[v188];
          v189 = sub_23E135520();
          v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16);
          swift_retain();
          swift_retain();
          v230(__dste, v242, v189);
          *(_QWORD *)&v159[v187[8]] = *(_QWORD *)&v160[v187[8]];
          *(_QWORD *)&v159[v187[9]] = *(_QWORD *)&v160[v187[9]];
          *(_QWORD *)&v159[v187[10]] = *(_QWORD *)&v160[v187[10]];
          v190 = v187[11];
          v191 = &v159[v190];
          v192 = &v160[v190];
          v193 = v192[8];
          *(_QWORD *)v191 = *(_QWORD *)v192;
          v191[8] = v193;
          v194 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v195 = &v159[v194];
          v196 = &v160[v194];
          v197 = type metadata accessor for Device.Control.IncrementalState(0);
          v198 = *(_QWORD *)(v197 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48))(v196, 1, v197))
          {
            v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
          }
          else
          {
            v208 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v195, v196, v208);
            v195[*(int *)(v197 + 20)] = v196[*(int *)(v197 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v195, 0, 1, v197);
          }
          a3 = v262;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *(_QWORD *)v159 = *(_QWORD *)v160;
          v159[8] = v160[8];
          v200 = *((_QWORD *)v160 + 2);
          v159[24] = v160[24];
          *((_QWORD *)v159 + 2) = v200;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v263 = a3;
          v201 = *(_QWORD *)v160;
          *(_DWORD *)(v159 + 7) = *(_DWORD *)(v160 + 7);
          *(_QWORD *)v159 = v201;
          v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v203 = &v159[v202];
          v204 = &v160[v202];
          v205 = type metadata accessor for Device.Control.ColorState(0);
          v206 = *(_QWORD *)(v205 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
          {
            v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
          }
          else
          {
            __dstb = v203;
            v209 = sub_23E135328();
            v243 = *(_QWORD *)(v209 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v243 + 48))(v204, 1, v209))
            {
              v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v211 = __dstb;
              memcpy(__dstb, v204, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v243 + 16))(__dstb, v204, v209);
              v211 = __dstb;
              (*(void (**)(void))(v243 + 56))();
            }
            v213 = *(int *)(v205 + 20);
            v214 = &v211[v213];
            v215 = &v204[v213];
            v216 = *(_QWORD *)v215;
            v214[8] = v215[8];
            *(_QWORD *)v214 = v216;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v211, 0, 1, v205);
          }
          swift_storeEnumTagMultiPayload();
          a3 = v263;
          break;
        case 4u:
          *(_QWORD *)v159 = *(_QWORD *)v160;
          *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
          v159[16] = v160[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          ((void (*)(char *, char *, uint64_t))__dst)(v159, v160, v157);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          break;
      }
      v155[v37[6]] = v156[v37[6]];
      v217 = v37[7];
      v218 = &v155[v217];
      v219 = &v156[v217];
      *(_QWORD *)v218 = *(_QWORD *)v219;
      *((_QWORD *)v218 + 1) = *((_QWORD *)v219 + 1);
      *(_WORD *)&v155[v37[8]] = *(_WORD *)&v156[v37[8]];
      v155[v37[9]] = v156[v37[9]];
      v155[v37[10]] = v156[v37[10]];
      *(_QWORD *)&v155[v37[11]] = *(_QWORD *)&v156[v37[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v220 = *(int *)(a3 + 20);
  v221 = &a1[v220];
  v222 = &a2[v220];
  *v221 = *v222;
  v221[1] = v222[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v223 = *(int *)(a3 + 24);
  v224 = &a1[v223];
  v225 = &a2[v223];
  *v224 = *v225;
  v224[1] = v225[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for AccessoryControlGroup(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void (*v73)(char *, char *, void *);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  char *v88;
  int *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  uint64_t v152;
  char *v153;
  char *v154;
  int *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  void (*v191)(char *, char *, uint64_t);
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  void (**__dst)(void *, const void *, uint64_t);
  char *__dsta;
  uint64_t v198;
  void (*v199)(char *, char *, void *);
  uint64_t v200;
  char *v201;
  char *v202;
  void *__src;
  int *__srcb;
  int *__srcc;
  char *__srca;
  char *__srcd;
  uint64_t v208;
  uint64_t v209;

  v6 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v28 = sub_23E134C80();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
    v29(a1, a2, v28);
    v30 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v31 = v30[5];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v209 = a3;
        *(_OWORD *)v32 = *(_OWORD *)v33;
        v35 = type metadata accessor for IconDescriptor();
        v36 = *(int *)(v35 + 20);
        v37 = &v32[v36];
        v38 = &v33[v36];
        v39 = sub_23E135910();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v40(v37, v38, v39);
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v42 = &v32[v41];
        v43 = &v33[v41];
        *(_OWORD *)v42 = *(_OWORD *)v43;
        v40(&v42[*(int *)(v35 + 20)], &v43[*(int *)(v35 + 20)], v39);
        v44 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v32[*(int *)(v44 + 20)] = *(_QWORD *)&v33[*(int *)(v44 + 20)];
        v45 = *(int *)(v44 + 24);
        v46 = &v32[v45];
        v47 = &v33[v45];
        v48 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v46 = *(_QWORD *)v47;
          v114 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v115 = &v46[v114];
          v116 = &v47[v114];
          v117 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
          swift_storeEnumTagMultiPayload();
        }
        v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v32[*(int *)(v118 + 48)] = v33[*(int *)(v118 + 48)];
        goto LABEL_31;
      case 1u:
        v209 = a3;
        *(_OWORD *)v32 = *(_OWORD *)v33;
        v80 = type metadata accessor for IconDescriptor();
        v81 = *(int *)(v80 + 20);
        v82 = &v32[v81];
        v83 = &v33[v81];
        v84 = sub_23E135910();
        v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32);
        v85(v82, v83, v84);
        v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v87 = &v32[v86];
        v88 = &v33[v86];
        *(_OWORD *)v87 = *(_OWORD *)v88;
        v85(&v87[*(int *)(v80 + 20)], &v88[*(int *)(v80 + 20)], v84);
        v89 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v32[v89[5]] = *(_QWORD *)&v33[v89[5]];
        *(_QWORD *)&v32[v89[6]] = *(_QWORD *)&v33[v89[6]];
        v90 = v89[7];
        v91 = &v32[v90];
        v92 = &v33[v90];
        v93 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
        *(_QWORD *)&v32[v89[8]] = *(_QWORD *)&v33[v89[8]];
        *(_QWORD *)&v32[v89[9]] = *(_QWORD *)&v33[v89[9]];
        *(_QWORD *)&v32[v89[10]] = *(_QWORD *)&v33[v89[10]];
        v94 = v89[11];
        v95 = &v32[v94];
        v96 = &v33[v94];
        v95[8] = v96[8];
        *(_QWORD *)v95 = *(_QWORD *)v96;
        v97 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v98 = &v32[v97];
        v99 = &v33[v97];
        v100 = type metadata accessor for Device.Control.IncrementalState(0);
        v101 = *(_QWORD *)(v100 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
        {
          v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v122 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v98, v99, v122);
          v98[*(int *)(v100 + 20)] = v99[*(int *)(v100 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        }
LABEL_31:
        swift_storeEnumTagMultiPayload();
        a3 = v209;
        break;
      case 3u:
        *(_QWORD *)v32 = *(_QWORD *)v33;
        *(_DWORD *)(v32 + 7) = *(_DWORD *)(v33 + 7);
        v103 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v104 = &v32[v103];
        v105 = &v33[v103];
        v106 = type metadata accessor for Device.Control.ColorState(0);
        v107 = *(_QWORD *)(v106 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
        {
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          v123 = sub_23E135328();
          v200 = *(_QWORD *)(v123 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v105, 1, v123))
          {
            v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v200 + 32))(v104, v105, v123);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v104, 0, 1, v123);
          }
          v186 = *(int *)(v106 + 20);
          v187 = &v104[v186];
          v188 = &v105[v186];
          *(_QWORD *)v187 = *(_QWORD *)v188;
          v187[8] = v188[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
        }
        goto LABEL_57;
      case 6u:
        v29(v32, v33, v28);
LABEL_57:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        break;
    }
    a1[v30[6]] = a2[v30[6]];
    *(_OWORD *)&a1[v30[7]] = *(_OWORD *)&a2[v30[7]];
    *(_WORD *)&a1[v30[8]] = *(_WORD *)&a2[v30[8]];
    a1[v30[9]] = a2[v30[9]];
    a1[v30[10]] = a2[v30[10]];
    *(_QWORD *)&a1[v30[11]] = *(_QWORD *)&a2[v30[11]];
    goto LABEL_59;
  }
  if (!EnumCaseMultiPayload)
  {
    v8 = sub_23E134C80();
    v199 = *(void (**)(char *, char *, void *))(*(_QWORD *)(v8 - 8) + 32);
    __src = (void *)v8;
    ((void (*)(char *, char *))v199)(a1, a2);
    v9 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for AccessoryControlInfo.State(0);
    v208 = a3;
    v198 = v13;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)v11 = *(_OWORD *)v12;
        v14 = type metadata accessor for IconDescriptor();
        v15 = *(int *)(v14 + 20);
        v16 = &v11[v15];
        v17 = &v12[v15];
        v18 = sub_23E135910();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
        v19(v16, v17, v18);
        v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v21 = &v11[v20];
        v22 = &v12[v20];
        *(_OWORD *)v21 = *(_OWORD *)v22;
        v19(&v21[*(int *)(v14 + 20)], &v22[*(int *)(v14 + 20)], v18);
        v23 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v11[*(int *)(v23 + 20)] = *(_QWORD *)&v12[*(int *)(v23 + 20)];
        v24 = *(int *)(v23 + 24);
        v25 = &v11[v24];
        v26 = &v12[v24];
        v27 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v25 = *(_QWORD *)v26;
          v109 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v110 = &v25[v109];
          v111 = &v26[v109];
          v112 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
          swift_storeEnumTagMultiPayload();
        }
        v73 = v199;
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v11[*(int *)(v113 + 48)] = v12[*(int *)(v113 + 48)];
        v13 = v198;
        goto LABEL_37;
      case 1u:
        *(_OWORD *)v11 = *(_OWORD *)v12;
        v49 = type metadata accessor for IconDescriptor();
        v50 = *(int *)(v49 + 20);
        v51 = &v11[v50];
        v52 = &v12[v50];
        v53 = sub_23E135910();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32);
        v54(v51, v52, v53);
        v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v56 = &v11[v55];
        v57 = &v12[v55];
        *(_OWORD *)v56 = *(_OWORD *)v57;
        v54(&v56[*(int *)(v49 + 20)], &v57[*(int *)(v49 + 20)], v53);
        v58 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v11[v58[5]] = *(_QWORD *)&v12[v58[5]];
        *(_QWORD *)&v11[v58[6]] = *(_QWORD *)&v12[v58[6]];
        v59 = v58[7];
        v60 = &v11[v59];
        v61 = &v12[v59];
        v62 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        *(_QWORD *)&v11[v58[8]] = *(_QWORD *)&v12[v58[8]];
        *(_QWORD *)&v11[v58[9]] = *(_QWORD *)&v12[v58[9]];
        *(_QWORD *)&v11[v58[10]] = *(_QWORD *)&v12[v58[10]];
        v63 = v58[11];
        v64 = &v11[v63];
        v65 = &v12[v63];
        v64[8] = v65[8];
        *(_QWORD *)v64 = *(_QWORD *)v65;
        v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v67 = &v11[v66];
        v68 = &v12[v66];
        v69 = type metadata accessor for Device.Control.IncrementalState(0);
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v119 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v67, v68, v119);
          v67[*(int *)(v69 + 20)] = v68[*(int *)(v69 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        v73 = v199;
        v72 = __src;
        v13 = v198;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
        v74 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v75 = &v11[v74];
        v76 = &v12[v74];
        v77 = type metadata accessor for Device.Control.ColorState(0);
        v78 = *(_QWORD *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
        {
          v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          v120 = sub_23E135328();
          __dst = *(void (***)(void *, const void *, uint64_t))(v120 - 8);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v76, 1, v120))
          {
            v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            __dst[4](v75, v76, v120);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dst[7])(v75, 0, 1, v120);
          }
          v13 = v198;
          v125 = *(int *)(v77 + 20);
          v126 = &v75[v125];
          v127 = &v76[v125];
          *(_QWORD *)v126 = *(_QWORD *)v127;
          v126[8] = v127[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
        }
        v73 = v199;
LABEL_37:
        swift_storeEnumTagMultiPayload();
        v72 = __src;
        break;
      case 6u:
        v73 = v199;
        v72 = __src;
        v199(v11, v12, __src);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        v73 = v199;
        v72 = __src;
        break;
    }
    a1[v9[6]] = a2[v9[6]];
    *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
    *(_WORD *)&a1[v9[8]] = *(_WORD *)&a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[v9[10]] = a2[v9[10]];
    *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
    v128 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    v129 = &a1[v128];
    v130 = &a2[v128];
    v73(&a1[v128], &a2[v128], v72);
    v131 = v9[5];
    v132 = &v129[v131];
    v133 = &v130[v131];
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)v132 = *(_OWORD *)v133;
        v134 = type metadata accessor for IconDescriptor();
        v135 = *(int *)(v134 + 20);
        v201 = &v132[v135];
        __srcb = (int *)v134;
        v136 = &v133[v135];
        v137 = sub_23E135910();
        v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32);
        v138(v201, v136, v137);
        v139 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v140 = &v132[v139];
        v141 = &v133[v139];
        *(_OWORD *)v140 = *(_OWORD *)v141;
        v138(&v140[__srcb[5]], &v141[__srcb[5]], v137);
        v142 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v132[*(int *)(v142 + 20)] = *(_QWORD *)&v133[*(int *)(v142 + 20)];
        v143 = *(int *)(v142 + 24);
        v144 = &v132[v143];
        v145 = &v133[v143];
        v146 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v144 = *(_QWORD *)v145;
          v177 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          __srcd = &v144[v177];
          v178 = &v145[v177];
          v179 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(__srcd, v178, v179);
          swift_storeEnumTagMultiPayload();
        }
        v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v132[*(int *)(v180 + 48)] = v133[*(int *)(v180 + 48)];
        goto LABEL_50;
      case 1u:
        *(_OWORD *)v132 = *(_OWORD *)v133;
        v147 = type metadata accessor for IconDescriptor();
        v148 = *(int *)(v147 + 20);
        v202 = &v132[v148];
        __srcc = (int *)v147;
        v149 = &v133[v148];
        v150 = sub_23E135910();
        v151 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32);
        v151(v202, v149, v150);
        v152 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v153 = &v132[v152];
        v154 = &v133[v152];
        *(_OWORD *)v153 = *(_OWORD *)v154;
        v151(&v153[__srcc[5]], &v154[__srcc[5]], v150);
        v155 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v132[v155[5]] = *(_QWORD *)&v133[v155[5]];
        *(_QWORD *)&v132[v155[6]] = *(_QWORD *)&v133[v155[6]];
        v156 = v155[7];
        v157 = &v132[v156];
        v158 = &v133[v156];
        v159 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
        *(_QWORD *)&v132[v155[8]] = *(_QWORD *)&v133[v155[8]];
        *(_QWORD *)&v132[v155[9]] = *(_QWORD *)&v133[v155[9]];
        *(_QWORD *)&v132[v155[10]] = *(_QWORD *)&v133[v155[10]];
        v160 = v155[11];
        v161 = &v132[v160];
        v162 = &v133[v160];
        v161[8] = v162[8];
        *(_QWORD *)v161 = *(_QWORD *)v162;
        v163 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v164 = &v132[v163];
        v165 = &v133[v163];
        v166 = type metadata accessor for Device.Control.IncrementalState(0);
        v167 = *(_QWORD *)(v166 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
        {
          v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
        }
        else
        {
          v181 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v164, v165, v181);
          v164[*(int *)(v166 + 20)] = v165[*(int *)(v166 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
        }
        goto LABEL_50;
      case 3u:
        *(_QWORD *)v132 = *(_QWORD *)v133;
        *(_DWORD *)(v132 + 7) = *(_DWORD *)(v133 + 7);
        v169 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v170 = &v132[v169];
        v171 = &v133[v169];
        v172 = type metadata accessor for Device.Control.ColorState(0);
        v173 = *(_QWORD *)(v172 - 8);
        __srca = v171;
        v174 = v171;
        v175 = v172;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v174, 1, v172))
        {
          v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v170, __srca, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
        }
        else
        {
          __dsta = v170;
          v182 = sub_23E135328();
          v183 = *(_QWORD *)(v182 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v183 + 48))(__srca, 1, v182))
          {
            v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v185 = __dsta;
            memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
          }
          else
          {
            v195 = v183;
            v191 = *(void (**)(char *, char *, uint64_t))(v183 + 32);
            v185 = __dsta;
            v191(__dsta, __srca, v182);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(__dsta, 0, 1, v182);
          }
          v192 = *(int *)(v175 + 20);
          v193 = &v185[v192];
          v194 = &__srca[v192];
          *(_QWORD *)v193 = *(_QWORD *)v194;
          v193[8] = v194[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v185, 0, 1, v175);
        }
        a3 = v208;
        swift_storeEnumTagMultiPayload();
        goto LABEL_52;
      case 6u:
        v73(v132, v133, v72);
LABEL_50:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    a3 = v208;
LABEL_52:
    v129[v9[6]] = v130[v9[6]];
    *(_OWORD *)&v129[v9[7]] = *(_OWORD *)&v130[v9[7]];
    *(_WORD *)&v129[v9[8]] = *(_WORD *)&v130[v9[8]];
    v129[v9[9]] = v130[v9[9]];
    v129[v9[10]] = v130[v9[10]];
    *(_QWORD *)&v129[v9[11]] = *(_QWORD *)&v130[v9[11]];
LABEL_59:
    swift_storeEnumTagMultiPayload();
    goto LABEL_60;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_60:
  v189 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v189] = *(_OWORD *)&a2[v189];
  return a1;
}

char *assignWithTake for AccessoryControlGroup(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(char *, char *);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  char *v88;
  int *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int *v133;
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  char *v157;
  char *v158;
  int *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  void (*v193)(char *, char *, uint64_t);
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v208;
  uint64_t v209;
  void *__dst;
  void *__dsta;
  char *__dstc;
  char *__dstd;
  char *__dstb;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlGroup.LayoutType);
    v6 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v29 = sub_23E134C80();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
      v30(a1, a2, v29);
      v31 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v32 = v31[5];
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v219 = a3;
          *(_OWORD *)v33 = *(_OWORD *)v34;
          v36 = type metadata accessor for IconDescriptor();
          v37 = *(int *)(v36 + 20);
          v38 = &v33[v37];
          v39 = &v34[v37];
          v40 = sub_23E135910();
          v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
          v41(v38, v39, v40);
          v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v43 = &v33[v42];
          v44 = &v34[v42];
          *(_OWORD *)v43 = *(_OWORD *)v44;
          v41(&v43[*(int *)(v36 + 20)], &v44[*(int *)(v36 + 20)], v40);
          v45 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v33[*(int *)(v45 + 20)] = *(_QWORD *)&v34[*(int *)(v45 + 20)];
          v46 = *(int *)(v45 + 24);
          v47 = &v33[v46];
          v48 = &v34[v46];
          v49 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v47 = *(_QWORD *)v48;
            v114 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v115 = &v47[v114];
            v116 = &v48[v114];
            v117 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
            swift_storeEnumTagMultiPayload();
          }
          v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v33[*(int *)(v118 + 48)] = v34[*(int *)(v118 + 48)];
          swift_storeEnumTagMultiPayload();
          a3 = v219;
          break;
        case 1u:
          v220 = a3;
          *(_OWORD *)v33 = *(_OWORD *)v34;
          v80 = type metadata accessor for IconDescriptor();
          v81 = *(int *)(v80 + 20);
          v82 = &v33[v81];
          v83 = &v34[v81];
          v84 = sub_23E135910();
          v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32);
          v85(v82, v83, v84);
          v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v87 = &v33[v86];
          v88 = &v34[v86];
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v85(&v87[*(int *)(v80 + 20)], &v88[*(int *)(v80 + 20)], v84);
          v89 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v33[v89[5]] = *(_QWORD *)&v34[v89[5]];
          *(_QWORD *)&v33[v89[6]] = *(_QWORD *)&v34[v89[6]];
          v90 = v89[7];
          v91 = &v33[v90];
          v92 = &v34[v90];
          v93 = sub_23E135520();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
          *(_QWORD *)&v33[v89[8]] = *(_QWORD *)&v34[v89[8]];
          *(_QWORD *)&v33[v89[9]] = *(_QWORD *)&v34[v89[9]];
          *(_QWORD *)&v33[v89[10]] = *(_QWORD *)&v34[v89[10]];
          v94 = v89[11];
          v95 = &v33[v94];
          v96 = &v34[v94];
          v95[8] = v96[8];
          *(_QWORD *)v95 = *(_QWORD *)v96;
          v97 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v98 = &v33[v97];
          v99 = &v34[v97];
          v100 = type metadata accessor for Device.Control.IncrementalState(0);
          v101 = *(_QWORD *)(v100 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
          {
            v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          }
          else
          {
            v123 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v98, v99, v123);
            v98[*(int *)(v100 + 20)] = v99[*(int *)(v100 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
          }
          a3 = v220;
          goto LABEL_57;
        case 3u:
          *(_QWORD *)v33 = *(_QWORD *)v34;
          *(_DWORD *)(v33 + 7) = *(_DWORD *)(v34 + 7);
          v103 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v104 = &v33[v103];
          v105 = &v34[v103];
          v106 = type metadata accessor for Device.Control.ColorState(0);
          v107 = *(_QWORD *)(v106 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
          {
            v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            v221 = a3;
            v124 = sub_23E135328();
            v125 = *(_QWORD *)(v124 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v105, 1, v124))
            {
              v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v104, v105, v124);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v104, 0, 1, v124);
            }
            a3 = v221;
            v190 = *(int *)(v106 + 20);
            v191 = &v104[v190];
            v192 = &v105[v190];
            *(_QWORD *)v191 = *(_QWORD *)v192;
            v191[8] = v192[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
          }
          goto LABEL_57;
        case 6u:
          v30(v33, v34, v29);
LABEL_57:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          break;
      }
      a1[v31[6]] = a2[v31[6]];
      *(_OWORD *)&a1[v31[7]] = *(_OWORD *)&a2[v31[7]];
      *(_WORD *)&a1[v31[8]] = *(_WORD *)&a2[v31[8]];
      a1[v31[9]] = a2[v31[9]];
      a1[v31[10]] = a2[v31[10]];
      *(_QWORD *)&a1[v31[11]] = *(_QWORD *)&a2[v31[11]];
      goto LABEL_63;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_23E134C80();
      v9 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v8 - 8) + 32);
      v215 = v8;
      v9(a1, a2);
      v10 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = type metadata accessor for AccessoryControlInfo.State(0);
      v218 = a3;
      v217 = v14;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          __dst = v9;
          *(_OWORD *)v12 = *(_OWORD *)v13;
          v15 = type metadata accessor for IconDescriptor();
          v16 = *(int *)(v15 + 20);
          v17 = &v12[v16];
          v18 = &v13[v16];
          v19 = sub_23E135910();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
          v20(v17, v18, v19);
          v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v22 = &v12[v21];
          v23 = &v13[v21];
          *(_OWORD *)v22 = *(_OWORD *)v23;
          v20(&v22[*(int *)(v15 + 20)], &v23[*(int *)(v15 + 20)], v19);
          v24 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v12[*(int *)(v24 + 20)] = *(_QWORD *)&v13[*(int *)(v24 + 20)];
          v25 = *(int *)(v24 + 24);
          v26 = &v12[v25];
          v27 = &v13[v25];
          v28 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v26 = *(_QWORD *)v27;
            v109 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v110 = &v26[v109];
            v111 = &v27[v109];
            v112 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
            swift_storeEnumTagMultiPayload();
          }
          v14 = v217;
          v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v12[*(int *)(v113 + 48)] = v13[*(int *)(v113 + 48)];
          swift_storeEnumTagMultiPayload();
          a3 = v218;
          goto LABEL_38;
        case 1u:
          __dsta = v9;
          *(_OWORD *)v12 = *(_OWORD *)v13;
          v50 = type metadata accessor for IconDescriptor();
          v51 = *(int *)(v50 + 20);
          v52 = &v12[v51];
          v53 = &v13[v51];
          v54 = sub_23E135910();
          v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32);
          v55(v52, v53, v54);
          v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v57 = &v12[v56];
          v58 = &v13[v56];
          *(_OWORD *)v57 = *(_OWORD *)v58;
          v55(&v57[*(int *)(v50 + 20)], &v58[*(int *)(v50 + 20)], v54);
          v59 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v12[v59[5]] = *(_QWORD *)&v13[v59[5]];
          *(_QWORD *)&v12[v59[6]] = *(_QWORD *)&v13[v59[6]];
          v60 = v59[7];
          v61 = &v12[v60];
          v62 = &v13[v60];
          v63 = sub_23E135520();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          *(_QWORD *)&v12[v59[8]] = *(_QWORD *)&v13[v59[8]];
          *(_QWORD *)&v12[v59[9]] = *(_QWORD *)&v13[v59[9]];
          *(_QWORD *)&v12[v59[10]] = *(_QWORD *)&v13[v59[10]];
          v64 = v59[11];
          v65 = &v12[v64];
          v66 = &v13[v64];
          v65[8] = v66[8];
          *(_QWORD *)v65 = *(_QWORD *)v66;
          v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v68 = &v12[v67];
          v69 = &v13[v67];
          v70 = type metadata accessor for Device.Control.IncrementalState(0);
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            v119 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v68, v69, v119);
            v68[*(int *)(v70 + 20)] = v69[*(int *)(v70 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
          }
          v73 = v215;
          v14 = v217;
          swift_storeEnumTagMultiPayload();
          a3 = v218;
          v9 = (void (*)(_BYTE *, _BYTE *))__dsta;
          break;
        case 3u:
          __dst = v9;
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *(_DWORD *)(v12 + 7) = *(_DWORD *)(v13 + 7);
          v74 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v75 = &v12[v74];
          v76 = &v13[v74];
          v77 = type metadata accessor for Device.Control.ColorState(0);
          v78 = *(_QWORD *)(v77 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
          {
            v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          }
          else
          {
            v120 = sub_23E135328();
            v121 = *(_QWORD *)(v120 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v76, 1, v120))
            {
              v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v75, v76, v120);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v75, 0, 1, v120);
            }
            v127 = *(int *)(v77 + 20);
            v128 = &v75[v127];
            v129 = &v76[v127];
            *(_QWORD *)v128 = *(_QWORD *)v129;
            v128[8] = v129[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
            v14 = v217;
            a3 = v218;
          }
          swift_storeEnumTagMultiPayload();
LABEL_38:
          v9 = (void (*)(_BYTE *, _BYTE *))__dst;
          v73 = v215;
          break;
        case 6u:
          v73 = v215;
          ((void (*)(char *, char *, uint64_t))v9)(v12, v13, v215);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          v73 = v215;
          break;
      }
      a1[v10[6]] = a2[v10[6]];
      *(_OWORD *)&a1[v10[7]] = *(_OWORD *)&a2[v10[7]];
      *(_WORD *)&a1[v10[8]] = *(_WORD *)&a2[v10[8]];
      a1[v10[9]] = a2[v10[9]];
      a1[v10[10]] = a2[v10[10]];
      *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
      v130 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v131 = &a1[v130];
      v132 = &a2[v130];
      v133 = v10;
      v134 = (void (*)(char *, char *, uint64_t))v9;
      ((void (*)(char *, char *, uint64_t))v9)(&a1[v130], &a2[v130], v73);
      v216 = v133;
      v135 = v133[5];
      v136 = &v131[v135];
      v137 = &v132[v135];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_OWORD *)v136 = *(_OWORD *)v137;
          v138 = type metadata accessor for IconDescriptor();
          v139 = *(int *)(v138 + 20);
          v140 = &v136[v139];
          __dstc = &v137[v139];
          v141 = sub_23E135910();
          v142 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32);
          v142(v140, __dstc, v141);
          v143 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v144 = &v136[v143];
          v145 = &v137[v143];
          *(_OWORD *)v144 = *(_OWORD *)v145;
          v142(&v144[*(int *)(v138 + 20)], &v145[*(int *)(v138 + 20)], v141);
          v146 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v136[*(int *)(v146 + 20)] = *(_QWORD *)&v137[*(int *)(v146 + 20)];
          v147 = *(int *)(v146 + 24);
          v148 = &v136[v147];
          v149 = &v137[v147];
          v150 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v148 = *(_QWORD *)v149;
            v180 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v181 = &v148[v180];
            v182 = &v149[v180];
            v183 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v181, v182, v183);
            swift_storeEnumTagMultiPayload();
          }
          v179 = v216;
          v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v136[*(int *)(v184 + 48)] = v137[*(int *)(v184 + 48)];
          swift_storeEnumTagMultiPayload();
          a3 = v218;
          break;
        case 1u:
          *(_OWORD *)v136 = *(_OWORD *)v137;
          v151 = type metadata accessor for IconDescriptor();
          v152 = *(int *)(v151 + 20);
          __dstd = &v136[v152];
          v153 = &v137[v152];
          v154 = sub_23E135910();
          v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32);
          v155(__dstd, v153, v154);
          v156 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v157 = &v136[v156];
          v158 = &v137[v156];
          *(_OWORD *)v157 = *(_OWORD *)v158;
          v155(&v157[*(int *)(v151 + 20)], &v158[*(int *)(v151 + 20)], v154);
          v159 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v136[v159[5]] = *(_QWORD *)&v137[v159[5]];
          *(_QWORD *)&v136[v159[6]] = *(_QWORD *)&v137[v159[6]];
          v160 = v159[7];
          v161 = &v136[v160];
          v162 = &v137[v160];
          v163 = sub_23E135520();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v161, v162, v163);
          *(_QWORD *)&v136[v159[8]] = *(_QWORD *)&v137[v159[8]];
          *(_QWORD *)&v136[v159[9]] = *(_QWORD *)&v137[v159[9]];
          *(_QWORD *)&v136[v159[10]] = *(_QWORD *)&v137[v159[10]];
          v164 = v159[11];
          v165 = &v136[v164];
          v166 = &v137[v164];
          v165[8] = v166[8];
          *(_QWORD *)v165 = *(_QWORD *)v166;
          v167 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v168 = &v136[v167];
          v169 = &v137[v167];
          v170 = type metadata accessor for Device.Control.IncrementalState(0);
          v171 = *(_QWORD *)(v170 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
          {
            v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            v185 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v168, v169, v185);
            v168[*(int *)(v170 + 20)] = v169[*(int *)(v170 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
          }
          a3 = v218;
          v179 = v216;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *(_QWORD *)v136 = *(_QWORD *)v137;
          *(_DWORD *)(v136 + 7) = *(_DWORD *)(v137 + 7);
          v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v174 = &v136[v173];
          v175 = &v137[v173];
          v176 = type metadata accessor for Device.Control.ColorState(0);
          v177 = *(_QWORD *)(v176 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
          {
            v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
            v179 = v216;
          }
          else
          {
            v209 = v177;
            __dstb = v174;
            v186 = sub_23E135328();
            v187 = *(_QWORD *)(v186 - 8);
            v179 = v216;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v175, 1, v186))
            {
              v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v189 = __dstb;
              memcpy(__dstb, v175, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
            }
            else
            {
              v208 = v187;
              v193 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
              v189 = __dstb;
              v193(__dstb, v175, v186);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(__dstb, 0, 1, v186);
            }
            a3 = v218;
            v194 = *(int *)(v176 + 20);
            v195 = &v189[v194];
            v196 = &v175[v194];
            *(_QWORD *)v195 = *(_QWORD *)v196;
            v195[8] = v196[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v189, 0, 1, v176);
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v134(v136, v137, v73);
          swift_storeEnumTagMultiPayload();
          goto LABEL_48;
        default:
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_48:
          v179 = v216;
          break;
      }
      v131[v179[6]] = v132[v179[6]];
      *(_OWORD *)&v131[v179[7]] = *(_OWORD *)&v132[v179[7]];
      *(_WORD *)&v131[v179[8]] = *(_WORD *)&v132[v179[8]];
      v131[v179[9]] = v132[v179[9]];
      v131[v179[10]] = v132[v179[10]];
      *(_QWORD *)&v131[v179[11]] = *(_QWORD *)&v132[v179[11]];
LABEL_63:
      swift_storeEnumTagMultiPayload();
      goto LABEL_64;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_64:
  v197 = *(int *)(a3 + 20);
  v198 = &a1[v197];
  v199 = (uint64_t *)&a2[v197];
  v201 = *v199;
  v200 = v199[1];
  *(_QWORD *)v198 = v201;
  *((_QWORD *)v198 + 1) = v200;
  swift_bridgeObjectRelease();
  v202 = *(int *)(a3 + 24);
  v203 = &a1[v202];
  v204 = (uint64_t *)&a2[v202];
  v206 = *v204;
  v205 = v204[1];
  *(_QWORD *)v203 = v206;
  *((_QWORD *)v203 + 1) = v205;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E05F8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E05F980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E05F9FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlGroup.LayoutType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AccessoryControlGroup.LayoutType(char *a1, char *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  void (*v165)(char *, char *, uint64_t);
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  void (*v197)(char *, char *, uint64_t);
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  void (*v241)(char *, char *, uint64_t);
  void (*v242)(char *, char *, uint64_t);
  char *v243;
  void (*v244)(char *, char *, uint64_t);
  char *v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_23E134C80();
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v15 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v15;
          v248 = type metadata accessor for IconDescriptor();
          v16 = *(int *)(v248 + 20);
          v17 = &v12[v16];
          v18 = &v13[v16];
          v19 = sub_23E135910();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          v21 = v20;
          v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v23 = &v12[v22];
          v24 = &v13[v22];
          v25 = *((_QWORD *)v24 + 1);
          *(_QWORD *)v23 = *(_QWORD *)v24;
          *((_QWORD *)v23 + 1) = v25;
          v26 = *(int *)(v248 + 20);
          v27 = &v23[v26];
          v28 = &v24[v26];
          swift_bridgeObjectRetain();
          v21(v27, v28, v19);
          v29 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v12[*(int *)(v29 + 20)] = *(_QWORD *)&v13[*(int *)(v29 + 20)];
          v30 = *(int *)(v29 + 24);
          v31 = &v12[v30];
          v32 = &v13[v30];
          v33 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v34 = swift_getEnumCaseMultiPayload();
          if (v34 == 1)
          {
            v144 = *((_QWORD *)v32 + 1);
            *(_QWORD *)v31 = *(_QWORD *)v32;
            *((_QWORD *)v31 + 1) = v144;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v34)
          {
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v31 = *(_QWORD *)v32;
            v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v36 = &v31[v35];
            v37 = &v32[v35];
            v38 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
            swift_storeEnumTagMultiPayload();
          }
          v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v12[*(int *)(v145 + 48)] = v13[*(int *)(v145 + 48)];
          goto LABEL_45;
        case 1u:
          v69 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v69;
          v250 = type metadata accessor for IconDescriptor();
          v70 = *(int *)(v250 + 20);
          v71 = &v12[v70];
          v72 = &v13[v70];
          v73 = sub_23E135910();
          v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
          swift_bridgeObjectRetain();
          v74(v71, v72, v73);
          v75 = v74;
          v76 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v77 = &v12[v76];
          v78 = &v13[v76];
          v79 = *((_QWORD *)v78 + 1);
          *(_QWORD *)v77 = *(_QWORD *)v78;
          *((_QWORD *)v77 + 1) = v79;
          v80 = *(int *)(v250 + 20);
          v81 = &v77[v80];
          v82 = &v78[v80];
          swift_bridgeObjectRetain();
          v75(v81, v82, v73);
          v83 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v12[v83[5]] = *(_QWORD *)&v13[v83[5]];
          *(_QWORD *)&v12[v83[6]] = *(_QWORD *)&v13[v83[6]];
          v84 = v83[7];
          v243 = &v13[v84];
          v251 = &v12[v84];
          v85 = sub_23E135520();
          v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
          swift_retain();
          swift_retain();
          v86(v251, v243, v85);
          *(_QWORD *)&v12[v83[8]] = *(_QWORD *)&v13[v83[8]];
          *(_QWORD *)&v12[v83[9]] = *(_QWORD *)&v13[v83[9]];
          *(_QWORD *)&v12[v83[10]] = *(_QWORD *)&v13[v83[10]];
          v87 = v83[11];
          v88 = &v12[v87];
          v89 = &v13[v87];
          v88[8] = v89[8];
          *(_QWORD *)v88 = *(_QWORD *)v89;
          v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v91 = &v12[v90];
          v92 = &v13[v90];
          v93 = type metadata accessor for Device.Control.IncrementalState(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            v137 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v91, v92, v137);
            v91[*(int *)(v93 + 20)] = v92[*(int *)(v93 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          goto LABEL_45;
        case 2u:
          *(_QWORD *)v12 = *(_QWORD *)v13;
          v12[8] = v13[8];
          *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
          v12[24] = v13[24];
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 3u:
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *(_DWORD *)(v12 + 7) = *(_DWORD *)(v13 + 7);
          v96 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v97 = &v12[v96];
          v98 = &v13[v96];
          v99 = type metadata accessor for Device.Control.ColorState(0);
          v100 = *(_QWORD *)(v99 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
          {
            v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            v138 = sub_23E135328();
            v139 = *(_QWORD *)(v138 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v98, 1, v138))
            {
              v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v97, v98, v138);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v97, 0, 1, v138);
            }
            v148 = *(int *)(v99 + 20);
            v149 = &v97[v148];
            v150 = &v98[v148];
            *(_QWORD *)v149 = *(_QWORD *)v150;
            v149[8] = v150[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
          }
          goto LABEL_45;
        case 4u:
          v102 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v102;
          v12[16] = v13[16];
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 6u:
          v9(v12, v13, v8);
LABEL_45:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      a1[v10[6]] = a2[v10[6]];
      v151 = v10[7];
      v152 = &a1[v151];
      v153 = &a2[v151];
      v154 = *((_QWORD *)v153 + 1);
      *(_QWORD *)v152 = *(_QWORD *)v153;
      *((_QWORD *)v152 + 1) = v154;
      *(_WORD *)&a1[v10[8]] = *(_WORD *)&a2[v10[8]];
      a1[v10[9]] = a2[v10[9]];
      a1[v10[10]] = a2[v10[10]];
      *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = sub_23E134C80();
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      v40(a1, a2, v39);
      v41 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v42 = v41[5];
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v242 = (void (*)(_QWORD *, _QWORD *, uint64_t))v40;
          v249 = v39;
          v257 = v45;
          v46 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *((_QWORD *)v43 + 1) = v46;
          v238 = type metadata accessor for IconDescriptor();
          v47 = *(int *)(v238 + 20);
          v48 = &v43[v47];
          v49 = &v44[v47];
          v50 = sub_23E135910();
          v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v48, v49, v50);
          v52 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v53 = &v43[v52];
          v54 = &v44[v52];
          v55 = *((_QWORD *)v54 + 1);
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *((_QWORD *)v53 + 1) = v55;
          v56 = *(int *)(v238 + 20);
          v57 = &v53[v56];
          v58 = &v54[v56];
          swift_bridgeObjectRetain();
          v51(v57, v58, v50);
          v59 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v43[*(int *)(v59 + 20)] = *(_QWORD *)&v44[*(int *)(v59 + 20)];
          v60 = *(int *)(v59 + 24);
          v61 = &v43[v60];
          v62 = &v44[v60];
          v63 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v64 = swift_getEnumCaseMultiPayload();
          if (v64 == 1)
          {
            v146 = *((_QWORD *)v62 + 1);
            *(_QWORD *)v61 = *(_QWORD *)v62;
            *((_QWORD *)v61 + 1) = v146;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v64)
          {
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v66 = &v61[v65];
            v67 = &v62[v65];
            v68 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
            swift_storeEnumTagMultiPayload();
          }
          v45 = v257;
          v40 = (void (*)(char *, char *, uint64_t))v242;
          v39 = v249;
          v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v43[*(int *)(v147 + 48)] = v44[*(int *)(v147 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v244 = (void (*)(_QWORD *, _QWORD *, uint64_t))v40;
          v252 = v39;
          v258 = v45;
          v103 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *((_QWORD *)v43 + 1) = v103;
          v239 = type metadata accessor for IconDescriptor();
          v104 = *(int *)(v239 + 20);
          v105 = &v43[v104];
          v106 = &v44[v104];
          v107 = sub_23E135910();
          v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
          swift_bridgeObjectRetain();
          v108(v105, v106, v107);
          v109 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v110 = &v43[v109];
          v111 = &v44[v109];
          v112 = *((_QWORD *)v111 + 1);
          *(_QWORD *)v110 = *(_QWORD *)v111;
          *((_QWORD *)v110 + 1) = v112;
          v113 = *(int *)(v239 + 20);
          v114 = &v110[v113];
          v115 = &v111[v113];
          swift_bridgeObjectRetain();
          v108(v114, v115, v107);
          v116 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v43[v116[5]] = *(_QWORD *)&v44[v116[5]];
          *(_QWORD *)&v43[v116[6]] = *(_QWORD *)&v44[v116[6]];
          v117 = v116[7];
          v237 = &v44[v117];
          v240 = &v43[v117];
          v118 = sub_23E135520();
          v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
          swift_retain();
          swift_retain();
          v119(v240, v237, v118);
          *(_QWORD *)&v43[v116[8]] = *(_QWORD *)&v44[v116[8]];
          *(_QWORD *)&v43[v116[9]] = *(_QWORD *)&v44[v116[9]];
          *(_QWORD *)&v43[v116[10]] = *(_QWORD *)&v44[v116[10]];
          v120 = v116[11];
          v121 = &v43[v120];
          v122 = &v44[v120];
          v121[8] = v122[8];
          *(_QWORD *)v121 = *(_QWORD *)v122;
          v123 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v124 = &v43[v123];
          v125 = &v44[v123];
          v126 = type metadata accessor for Device.Control.IncrementalState(0);
          v127 = *(_QWORD *)(v126 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
          {
            v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          else
          {
            v141 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v124, v125, v141);
            v124[*(int *)(v126 + 20)] = v125[*(int *)(v126 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
          }
          v45 = v258;
          goto LABEL_50;
        case 2u:
          *(_QWORD *)v43 = *(_QWORD *)v44;
          v43[8] = v44[8];
          *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
          v43[24] = v44[24];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v244 = (void (*)(_QWORD *, _QWORD *, uint64_t))v40;
          v252 = v39;
          v129 = v45;
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *(_DWORD *)(v43 + 7) = *(_DWORD *)(v44 + 7);
          v130 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v131 = &v43[v130];
          v132 = &v44[v130];
          v133 = type metadata accessor for Device.Control.ColorState(0);
          v134 = *(_QWORD *)(v133 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
          {
            v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
          }
          else
          {
            v142 = sub_23E135328();
            v259 = *(_QWORD *)(v142 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v259 + 48))(v132, 1, v142))
            {
              v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v259 + 16))(v131, v132, v142);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v259 + 56))(v131, 0, 1, v142);
            }
            v155 = *(int *)(v133 + 20);
            v156 = &v131[v155];
            v157 = &v132[v155];
            *(_QWORD *)v156 = *(_QWORD *)v157;
            v156[8] = v157[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
          }
          v45 = v129;
LABEL_50:
          swift_storeEnumTagMultiPayload();
          v40 = (void (*)(char *, char *, uint64_t))v244;
          v39 = v252;
          break;
        case 4u:
          v136 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = *(_QWORD *)v44;
          *((_QWORD *)v43 + 1) = v136;
          v43[16] = v44[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v40(v43, v44, v39);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          break;
      }
      a1[v41[6]] = a2[v41[6]];
      v158 = v41[7];
      v159 = &a1[v158];
      v160 = &a2[v158];
      v161 = *((_QWORD *)v160 + 1);
      *(_QWORD *)v159 = *(_QWORD *)v160;
      *((_QWORD *)v159 + 1) = v161;
      *(_WORD *)&a1[v41[8]] = *(_WORD *)&a2[v41[8]];
      a1[v41[9]] = a2[v41[9]];
      a1[v41[10]] = a2[v41[10]];
      *(_QWORD *)&a1[v41[11]] = *(_QWORD *)&a2[v41[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v162 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v163 = &a1[v162];
      v164 = &a2[v162];
      v165 = v40;
      v40(&a1[v162], v164, v39);
      v166 = v41[5];
      v167 = &v163[v166];
      v168 = &v164[v166];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v169 = *((_QWORD *)v168 + 1);
          *(_QWORD *)v167 = *(_QWORD *)v168;
          *((_QWORD *)v167 + 1) = v169;
          v170 = type metadata accessor for IconDescriptor();
          v171 = *(int *)(v170 + 20);
          v172 = &v167[v171];
          v245 = &v168[v171];
          v253 = v170;
          v173 = sub_23E135910();
          v174 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16);
          swift_bridgeObjectRetain();
          v174(v172, v245, v173);
          v175 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v176 = &v167[v175];
          v177 = &v168[v175];
          v178 = *((_QWORD *)v177 + 1);
          *(_QWORD *)v176 = *(_QWORD *)v177;
          *((_QWORD *)v176 + 1) = v178;
          v179 = *(int *)(v253 + 20);
          v180 = &v176[v179];
          v181 = &v177[v179];
          swift_bridgeObjectRetain();
          v174(v180, v181, v173);
          v182 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v167[*(int *)(v182 + 20)] = *(_QWORD *)&v168[*(int *)(v182 + 20)];
          v183 = *(int *)(v182 + 24);
          v184 = &v167[v183];
          v185 = &v168[v183];
          v186 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v187 = swift_getEnumCaseMultiPayload();
          if (v187 == 1)
          {
            v227 = *((_QWORD *)v185 + 1);
            *(_QWORD *)v184 = *(_QWORD *)v185;
            *((_QWORD *)v184 + 1) = v227;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v187)
          {
            memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v184 = *(_QWORD *)v185;
            v188 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v189 = &v184[v188];
            v190 = &v185[v188];
            v191 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v189, v190, v191);
            swift_storeEnumTagMultiPayload();
          }
          v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v167[*(int *)(v228 + 48)] = v168[*(int *)(v228 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v192 = *((_QWORD *)v168 + 1);
          *(_QWORD *)v167 = *(_QWORD *)v168;
          *((_QWORD *)v167 + 1) = v192;
          v193 = type metadata accessor for IconDescriptor();
          v194 = *(int *)(v193 + 20);
          v195 = &v167[v194];
          v246 = &v168[v194];
          v254 = v193;
          v196 = sub_23E135910();
          v197 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16);
          swift_bridgeObjectRetain();
          v197(v195, v246, v196);
          v198 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v199 = &v167[v198];
          v200 = &v168[v198];
          v201 = *((_QWORD *)v200 + 1);
          *(_QWORD *)v199 = *(_QWORD *)v200;
          *((_QWORD *)v199 + 1) = v201;
          v202 = *(int *)(v254 + 20);
          v203 = &v199[v202];
          v204 = &v200[v202];
          swift_bridgeObjectRetain();
          v197(v203, v204, v196);
          v205 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v167[v205[5]] = *(_QWORD *)&v168[v205[5]];
          *(_QWORD *)&v167[v205[6]] = *(_QWORD *)&v168[v205[6]];
          v206 = v205[7];
          v247 = &v168[v206];
          v255 = &v167[v206];
          v207 = sub_23E135520();
          v241 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16);
          swift_retain();
          swift_retain();
          v241(v255, v247, v207);
          *(_QWORD *)&v167[v205[8]] = *(_QWORD *)&v168[v205[8]];
          *(_QWORD *)&v167[v205[9]] = *(_QWORD *)&v168[v205[9]];
          *(_QWORD *)&v167[v205[10]] = *(_QWORD *)&v168[v205[10]];
          v208 = v205[11];
          v209 = &v167[v208];
          v210 = &v168[v208];
          v209[8] = v210[8];
          *(_QWORD *)v209 = *(_QWORD *)v210;
          v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v212 = &v167[v211];
          v213 = &v168[v211];
          v214 = type metadata accessor for Device.Control.IncrementalState(0);
          v215 = *(_QWORD *)(v214 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
          {
            v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
          }
          else
          {
            v224 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v212, v213, v224);
            v212[*(int *)(v214 + 20)] = v213[*(int *)(v214 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
          }
          goto LABEL_71;
        case 2u:
          *(_QWORD *)v167 = *(_QWORD *)v168;
          v167[8] = v168[8];
          *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
          v167[24] = v168[24];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *(_QWORD *)v167 = *(_QWORD *)v168;
          *(_DWORD *)(v167 + 7) = *(_DWORD *)(v168 + 7);
          v217 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v218 = &v167[v217];
          v219 = &v168[v217];
          v220 = type metadata accessor for Device.Control.ColorState(0);
          v221 = *(_QWORD *)(v220 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v219, 1, v220))
          {
            v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          else
          {
            v225 = sub_23E135328();
            v256 = *(_QWORD *)(v225 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v219, 1, v225))
            {
              v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v218, v219, v225);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v218, 0, 1, v225);
            }
            v229 = *(int *)(v220 + 20);
            v230 = &v218[v229];
            v231 = &v219[v229];
            *(_QWORD *)v230 = *(_QWORD *)v231;
            v230[8] = v231[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
          }
LABEL_71:
          swift_storeEnumTagMultiPayload();
          break;
        case 4u:
          v223 = *((_QWORD *)v168 + 1);
          *(_QWORD *)v167 = *(_QWORD *)v168;
          *((_QWORD *)v167 + 1) = v223;
          v167[16] = v168[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v165(v167, v168, v39);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          break;
      }
      v163[v41[6]] = v164[v41[6]];
      v232 = v41[7];
      v233 = &v163[v232];
      v234 = &v164[v232];
      v235 = *((_QWORD *)v234 + 1);
      *(_QWORD *)v233 = *(_QWORD *)v234;
      *((_QWORD *)v233 + 1) = v235;
      *(_WORD *)&v163[v41[8]] = *(_WORD *)&v164[v41[8]];
      v163[v41[9]] = v164[v41[9]];
      v163[v41[10]] = v164[v41[10]];
      *(_QWORD *)&v163[v41[11]] = *(_QWORD *)&v164[v41[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AccessoryControlGroup.LayoutType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      v17 = sub_23E134C80();
      v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
      v18(a1, v17);
      v19 = a1 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 20);
      type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v20 = type metadata accessor for IconDescriptor();
          v21 = v19 + *(int *)(v20 + 20);
          v22 = sub_23E135910();
          v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
          v23(v21, v22);
          v24 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v23(v24 + *(int *)(v20 + 20), v22);
          v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          swift_release();
          v26 = v19 + *(int *)(v25 + 24);
          type metadata accessor for ControlTextModifier.Config(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
            goto LABEL_41;
          if (!EnumCaseMultiPayload)
          {
LABEL_26:
            v50 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v51 = sub_23E134C20();
            goto LABEL_36;
          }
          break;
        case 1u:
          swift_bridgeObjectRelease();
          v52 = type metadata accessor for IconDescriptor();
          v53 = v19 + *(int *)(v52 + 20);
          v54 = sub_23E135910();
          v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8);
          v55(v53, v54);
          v56 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v55(v56 + *(int *)(v52 + 20), v54);
          v57 = type metadata accessor for Device.Control.IncrementalConfig(0);
          swift_release();
          swift_release();
          v58 = v19 + *(int *)(v57 + 28);
          v59 = sub_23E135520();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
          v50 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v60 = type metadata accessor for Device.Control.IncrementalState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v50, 1, v60))
          {
LABEL_35:
            v51 = sub_23E13534C();
LABEL_36:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
          }
          break;
        case 2u:
        case 4u:
LABEL_41:
          swift_bridgeObjectRelease();
          break;
        case 3u:
          v61 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v62 = type metadata accessor for Device.Control.ColorState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
          {
            v63 = sub_23E135328();
            v64 = *(_QWORD *)(v63 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v61, 1, v63))
LABEL_39:
              (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v61, v63);
          }
          break;
        case 6u:
          v18(v19, v17);
          break;
        default:
          break;
      }
LABEL_42:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 1:
      return swift_bridgeObjectRelease();
    case 0:
      v3 = sub_23E134C80();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = type metadata accessor for AccessoryControlInfo(0);
      v6 = a1 + *(int *)(v5 + 20);
      type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for IconDescriptor();
          v8 = v6 + *(int *)(v7 + 20);
          v9 = sub_23E135910();
          v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
          v10(v8, v9);
          v11 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v10(v11 + *(int *)(v7 + 20), v9);
          v12 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          swift_release();
          v13 = v6 + *(int *)(v12 + 24);
          type metadata accessor for ControlTextModifier.Config(0);
          v14 = swift_getEnumCaseMultiPayload();
          if (v14 == 1)
            goto LABEL_18;
          if (v14)
            goto LABEL_23;
          v15 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v16 = sub_23E134C20();
LABEL_17:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
LABEL_23:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v41 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
          v4(v41, v3);
          v42 = v41 + *(int *)(v5 + 20);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              v43 = type metadata accessor for IconDescriptor();
              v44 = v42 + *(int *)(v43 + 20);
              v45 = sub_23E135910();
              v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
              v46(v44, v45);
              v47 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
              swift_bridgeObjectRelease();
              v46(v47 + *(int *)(v43 + 20), v45);
              v48 = type metadata accessor for Device.Control.BinaryViewConfig(0);
              swift_release();
              v26 = v42 + *(int *)(v48 + 24);
              type metadata accessor for ControlTextModifier.Config(0);
              v49 = swift_getEnumCaseMultiPayload();
              if (v49 == 1)
                goto LABEL_41;
              if (!v49)
                goto LABEL_26;
              goto LABEL_42;
            case 1u:
              swift_bridgeObjectRelease();
              v65 = type metadata accessor for IconDescriptor();
              v66 = v42 + *(int *)(v65 + 20);
              v67 = sub_23E135910();
              v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8);
              v68(v66, v67);
              v69 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
              swift_bridgeObjectRelease();
              v68(v69 + *(int *)(v65 + 20), v67);
              v70 = type metadata accessor for Device.Control.IncrementalConfig(0);
              swift_release();
              swift_release();
              v71 = v42 + *(int *)(v70 + 28);
              v72 = sub_23E135520();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
              v50 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
              v73 = type metadata accessor for Device.Control.IncrementalState(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v50, 1, v73))goto LABEL_35;
              goto LABEL_42;
            case 2u:
            case 4u:
              goto LABEL_41;
            case 3u:
              v61 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
              v74 = type metadata accessor for Device.Control.ColorState(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v61, 1, v74))
              {
                v63 = sub_23E135328();
                v64 = *(_QWORD *)(v63 - 8);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v61, 1, v63))
                  goto LABEL_39;
              }
              goto LABEL_42;
            case 6u:
              v4(v42, v3);
              goto LABEL_42;
            default:
              goto LABEL_42;
          }
        case 1u:
          swift_bridgeObjectRelease();
          v28 = type metadata accessor for IconDescriptor();
          v29 = v6 + *(int *)(v28 + 20);
          v30 = sub_23E135910();
          v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8);
          v31(v29, v30);
          v32 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          swift_bridgeObjectRelease();
          v31(v32 + *(int *)(v28 + 20), v30);
          v33 = type metadata accessor for Device.Control.IncrementalConfig(0);
          swift_release();
          swift_release();
          v34 = v6 + *(int *)(v33 + 28);
          v35 = sub_23E135520();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          v15 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v36 = type metadata accessor for Device.Control.IncrementalState(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v15, 1, v36))
            goto LABEL_23;
          v16 = sub_23E13534C();
          goto LABEL_17;
        case 2u:
        case 4u:
LABEL_18:
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 3u:
          v37 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v38 = type metadata accessor for Device.Control.ColorState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
          {
            v39 = sub_23E135328();
            v40 = *(_QWORD *)(v39 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39))
              (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v37, v39);
          }
          goto LABEL_23;
        case 6u:
          v4(v6, v3);
          goto LABEL_23;
        default:
          goto LABEL_23;
      }
  }
  return result;
}

char *initializeWithCopy for AccessoryControlGroup.LayoutType(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  void (*v163)(char *, char *, uint64_t);
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  void (*v173)(char *, char *, uint64_t);
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  int v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  void (*v197)(char *, char *, uint64_t);
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  void (*v241)(char *, char *, uint64_t);
  void (*v242)(char *, char *, uint64_t);
  char *v243;
  void (*v244)(char *, char *, uint64_t);
  char *v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v5 = sub_23E134C80();
    v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    v7 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v12 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v12;
        v248 = type metadata accessor for IconDescriptor();
        v13 = *(int *)(v248 + 20);
        v14 = &v9[v13];
        v15 = &v10[v13];
        v16 = sub_23E135910();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        v18 = v17;
        v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v20 = &v9[v19];
        v21 = &v10[v19];
        v22 = *((_QWORD *)v21 + 1);
        *(_QWORD *)v20 = *(_QWORD *)v21;
        *((_QWORD *)v20 + 1) = v22;
        v23 = *(int *)(v248 + 20);
        v24 = &v20[v23];
        v25 = &v21[v23];
        swift_bridgeObjectRetain();
        v18(v24, v25, v16);
        v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v9[*(int *)(v26 + 20)] = *(_QWORD *)&v10[*(int *)(v26 + 20)];
        v27 = *(int *)(v26 + 24);
        v28 = &v9[v27];
        v29 = &v10[v27];
        v30 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v31 = swift_getEnumCaseMultiPayload();
        if (v31 == 1)
        {
          v142 = *((_QWORD *)v29 + 1);
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v142;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v31)
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v33 = &v28[v32];
          v34 = &v29[v32];
          v35 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
          swift_storeEnumTagMultiPayload();
        }
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v9[*(int *)(v143 + 48)] = v10[*(int *)(v143 + 48)];
        goto LABEL_43;
      case 1u:
        v66 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v66;
        v250 = type metadata accessor for IconDescriptor();
        v67 = *(int *)(v250 + 20);
        v68 = &v9[v67];
        v69 = &v10[v67];
        v70 = sub_23E135910();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        v72 = v71;
        v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v74 = &v9[v73];
        v75 = &v10[v73];
        v76 = *((_QWORD *)v75 + 1);
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *((_QWORD *)v74 + 1) = v76;
        v77 = *(int *)(v250 + 20);
        v78 = &v74[v77];
        v79 = &v75[v77];
        swift_bridgeObjectRetain();
        v72(v78, v79, v70);
        v80 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v9[v80[5]] = *(_QWORD *)&v10[v80[5]];
        *(_QWORD *)&v9[v80[6]] = *(_QWORD *)&v10[v80[6]];
        v81 = v80[7];
        v243 = &v10[v81];
        v251 = &v9[v81];
        v82 = sub_23E135520();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_retain();
        swift_retain();
        v83(v251, v243, v82);
        *(_QWORD *)&v9[v80[8]] = *(_QWORD *)&v10[v80[8]];
        *(_QWORD *)&v9[v80[9]] = *(_QWORD *)&v10[v80[9]];
        *(_QWORD *)&v9[v80[10]] = *(_QWORD *)&v10[v80[10]];
        v84 = v80[11];
        v85 = &v9[v84];
        v86 = &v10[v84];
        v85[8] = v86[8];
        *(_QWORD *)v85 = *(_QWORD *)v86;
        v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v88 = &v9[v87];
        v89 = &v10[v87];
        v90 = type metadata accessor for Device.Control.IncrementalState(0);
        v91 = *(_QWORD *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
        {
          v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          v134 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v88, v89, v134);
          v88[*(int *)(v90 + 20)] = v89[*(int *)(v90 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        goto LABEL_43;
      case 2u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        v9[8] = v10[8];
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        v9[24] = v10[24];
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 3u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *(_DWORD *)(v9 + 7) = *(_DWORD *)(v10 + 7);
        v93 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v94 = &v9[v93];
        v95 = &v10[v93];
        v96 = type metadata accessor for Device.Control.ColorState(0);
        v97 = *(_QWORD *)(v96 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
        {
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          v135 = sub_23E135328();
          v136 = *(_QWORD *)(v135 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v95, 1, v135))
          {
            v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v94, v95, v135);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v94, 0, 1, v135);
          }
          v146 = *(int *)(v96 + 20);
          v147 = &v94[v146];
          v148 = &v95[v146];
          *(_QWORD *)v147 = *(_QWORD *)v148;
          v147[8] = v148[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
        }
        goto LABEL_43;
      case 4u:
        v99 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v99;
        v9[16] = v10[16];
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 6u:
        v6(v9, v10, v5);
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
    a1[v7[6]] = a2[v7[6]];
    v149 = v7[7];
    v150 = &a1[v149];
    v151 = &a2[v149];
    v152 = *((_QWORD *)v151 + 1);
    *(_QWORD *)v150 = *(_QWORD *)v151;
    *((_QWORD *)v150 + 1) = v152;
    *(_WORD *)&a1[v7[8]] = *(_WORD *)&a2[v7[8]];
    a1[v7[9]] = a2[v7[9]];
    a1[v7[10]] = a2[v7[10]];
    *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = sub_23E134C80();
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    v37(a1, a2, v36);
    v38 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v39 = v38[5];
    v40 = &a1[v39];
    v41 = &a2[v39];
    v42 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v242 = (void (*)(_QWORD *, _QWORD *, uint64_t))v37;
        v249 = v36;
        v257 = v42;
        v43 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v43;
        v238 = type metadata accessor for IconDescriptor();
        v44 = *(int *)(v238 + 20);
        v45 = &v40[v44];
        v46 = &v41[v44];
        v47 = sub_23E135910();
        v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v50 = &v40[v49];
        v51 = &v41[v49];
        v52 = *((_QWORD *)v51 + 1);
        *(_QWORD *)v50 = *(_QWORD *)v51;
        *((_QWORD *)v50 + 1) = v52;
        v53 = *(int *)(v238 + 20);
        v54 = &v50[v53];
        v55 = &v51[v53];
        swift_bridgeObjectRetain();
        v48(v54, v55, v47);
        v56 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v40[*(int *)(v56 + 20)] = *(_QWORD *)&v41[*(int *)(v56 + 20)];
        v57 = *(int *)(v56 + 24);
        v58 = &v40[v57];
        v59 = &v41[v57];
        v60 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v61 = swift_getEnumCaseMultiPayload();
        if (v61 == 1)
        {
          v144 = *((_QWORD *)v59 + 1);
          *(_QWORD *)v58 = *(_QWORD *)v59;
          *((_QWORD *)v58 + 1) = v144;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v61)
        {
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v58 = *(_QWORD *)v59;
          v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v63 = &v58[v62];
          v64 = &v59[v62];
          v65 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          swift_storeEnumTagMultiPayload();
        }
        v42 = v257;
        v37 = (void (*)(char *, char *, uint64_t))v242;
        v36 = v249;
        v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v40[*(int *)(v145 + 48)] = v41[*(int *)(v145 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v244 = (void (*)(_QWORD *, _QWORD *, uint64_t))v37;
        v252 = v36;
        v258 = v42;
        v100 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v100;
        v239 = type metadata accessor for IconDescriptor();
        v101 = *(int *)(v239 + 20);
        v102 = &v40[v101];
        v103 = &v41[v101];
        v104 = sub_23E135910();
        v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
        swift_bridgeObjectRetain();
        v105(v102, v103, v104);
        v106 = v105;
        v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v108 = &v40[v107];
        v109 = &v41[v107];
        v110 = *((_QWORD *)v109 + 1);
        *(_QWORD *)v108 = *(_QWORD *)v109;
        *((_QWORD *)v108 + 1) = v110;
        v111 = *(int *)(v239 + 20);
        v112 = &v108[v111];
        v113 = &v109[v111];
        swift_bridgeObjectRetain();
        v106(v112, v113, v104);
        v114 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v40[v114[5]] = *(_QWORD *)&v41[v114[5]];
        *(_QWORD *)&v40[v114[6]] = *(_QWORD *)&v41[v114[6]];
        v115 = v114[7];
        v237 = &v41[v115];
        v240 = &v40[v115];
        v116 = sub_23E135520();
        v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
        swift_retain();
        swift_retain();
        v117(v240, v237, v116);
        *(_QWORD *)&v40[v114[8]] = *(_QWORD *)&v41[v114[8]];
        *(_QWORD *)&v40[v114[9]] = *(_QWORD *)&v41[v114[9]];
        *(_QWORD *)&v40[v114[10]] = *(_QWORD *)&v41[v114[10]];
        v118 = v114[11];
        v119 = &v40[v118];
        v120 = &v41[v118];
        v119[8] = v120[8];
        *(_QWORD *)v119 = *(_QWORD *)v120;
        v121 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v122 = &v40[v121];
        v123 = &v41[v121];
        v124 = type metadata accessor for Device.Control.IncrementalState(0);
        v125 = *(_QWORD *)(v124 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          v138 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v122, v123, v138);
          v122[*(int *)(v124 + 20)] = v123[*(int *)(v124 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
        }
        v42 = v258;
        swift_storeEnumTagMultiPayload();
        goto LABEL_48;
      case 2u:
        *(_QWORD *)v40 = *(_QWORD *)v41;
        v40[8] = v41[8];
        *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
        v40[24] = v41[24];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v244 = (void (*)(_QWORD *, _QWORD *, uint64_t))v37;
        v252 = v36;
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *(_DWORD *)(v40 + 7) = *(_DWORD *)(v41 + 7);
        v127 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v128 = &v40[v127];
        v129 = &v41[v127];
        v130 = type metadata accessor for Device.Control.ColorState(0);
        v131 = *(_QWORD *)(v130 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130))
        {
          v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        }
        else
        {
          v259 = v42;
          v139 = sub_23E135328();
          v140 = *(_QWORD *)(v139 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v129, 1, v139))
          {
            v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v128, v129, v139);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v128, 0, 1, v139);
          }
          v42 = v259;
          v153 = *(int *)(v130 + 20);
          v154 = &v128[v153];
          v155 = &v129[v153];
          *(_QWORD *)v154 = *(_QWORD *)v155;
          v154[8] = v155[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
        }
        swift_storeEnumTagMultiPayload();
LABEL_48:
        v37 = (void (*)(char *, char *, uint64_t))v244;
        v36 = v252;
        break;
      case 4u:
        v133 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v133;
        v40[16] = v41[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v37(v40, v41, v36);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        break;
    }
    a1[v38[6]] = a2[v38[6]];
    v156 = v38[7];
    v157 = &a1[v156];
    v158 = &a2[v156];
    v159 = *((_QWORD *)v158 + 1);
    *(_QWORD *)v157 = *(_QWORD *)v158;
    *((_QWORD *)v157 + 1) = v159;
    *(_WORD *)&a1[v38[8]] = *(_WORD *)&a2[v38[8]];
    a1[v38[9]] = a2[v38[9]];
    a1[v38[10]] = a2[v38[10]];
    *(_QWORD *)&a1[v38[11]] = *(_QWORD *)&a2[v38[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v160 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    v161 = &a1[v160];
    v162 = &a2[v160];
    v163 = v37;
    v37(&a1[v160], v162, v36);
    v164 = v38[5];
    v165 = &v161[v164];
    v166 = &v162[v164];
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v167 = *((_QWORD *)v166 + 1);
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *((_QWORD *)v165 + 1) = v167;
        v168 = type metadata accessor for IconDescriptor();
        v169 = *(int *)(v168 + 20);
        v245 = &v165[v169];
        v253 = v168;
        v170 = &v166[v169];
        v171 = sub_23E135910();
        v172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
        swift_bridgeObjectRetain();
        v172(v245, v170, v171);
        v173 = v172;
        v174 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v175 = &v165[v174];
        v176 = &v166[v174];
        v177 = *((_QWORD *)v176 + 1);
        *(_QWORD *)v175 = *(_QWORD *)v176;
        *((_QWORD *)v175 + 1) = v177;
        v178 = *(int *)(v253 + 20);
        v179 = &v175[v178];
        v180 = &v176[v178];
        swift_bridgeObjectRetain();
        v173(v179, v180, v171);
        v181 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v165[*(int *)(v181 + 20)] = *(_QWORD *)&v166[*(int *)(v181 + 20)];
        v182 = *(int *)(v181 + 24);
        v183 = &v165[v182];
        v184 = &v166[v182];
        v185 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v186 = swift_getEnumCaseMultiPayload();
        if (v186 == 1)
        {
          v227 = *((_QWORD *)v184 + 1);
          *(_QWORD *)v183 = *(_QWORD *)v184;
          *((_QWORD *)v183 + 1) = v227;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v186)
        {
          memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v183 = *(_QWORD *)v184;
          v187 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v188 = &v183[v187];
          v189 = &v184[v187];
          v190 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v188, v189, v190);
          swift_storeEnumTagMultiPayload();
        }
        v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v165[*(int *)(v228 + 48)] = v166[*(int *)(v228 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v191 = *((_QWORD *)v166 + 1);
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *((_QWORD *)v165 + 1) = v191;
        v192 = type metadata accessor for IconDescriptor();
        v193 = *(int *)(v192 + 20);
        v246 = &v165[v193];
        v254 = v192;
        v194 = &v166[v193];
        v195 = sub_23E135910();
        v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16);
        swift_bridgeObjectRetain();
        v196(v246, v194, v195);
        v197 = v196;
        v198 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v199 = &v165[v198];
        v200 = &v166[v198];
        v201 = *((_QWORD *)v200 + 1);
        *(_QWORD *)v199 = *(_QWORD *)v200;
        *((_QWORD *)v199 + 1) = v201;
        v202 = *(int *)(v254 + 20);
        v203 = &v199[v202];
        v204 = &v200[v202];
        swift_bridgeObjectRetain();
        v197(v203, v204, v195);
        v205 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v165[v205[5]] = *(_QWORD *)&v166[v205[5]];
        *(_QWORD *)&v165[v205[6]] = *(_QWORD *)&v166[v205[6]];
        v206 = v205[7];
        v247 = &v166[v206];
        v255 = &v165[v206];
        v207 = sub_23E135520();
        v241 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16);
        swift_retain();
        swift_retain();
        v241(v255, v247, v207);
        *(_QWORD *)&v165[v205[8]] = *(_QWORD *)&v166[v205[8]];
        *(_QWORD *)&v165[v205[9]] = *(_QWORD *)&v166[v205[9]];
        *(_QWORD *)&v165[v205[10]] = *(_QWORD *)&v166[v205[10]];
        v208 = v205[11];
        v209 = &v165[v208];
        v210 = &v166[v208];
        v209[8] = v210[8];
        *(_QWORD *)v209 = *(_QWORD *)v210;
        v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v212 = &v165[v211];
        v213 = &v166[v211];
        v214 = type metadata accessor for Device.Control.IncrementalState(0);
        v215 = *(_QWORD *)(v214 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
        {
          v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
        }
        else
        {
          v224 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v212, v213, v224);
          v212[*(int *)(v214 + 20)] = v213[*(int *)(v214 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
        }
        goto LABEL_69;
      case 2u:
        *(_QWORD *)v165 = *(_QWORD *)v166;
        v165[8] = v166[8];
        *((_QWORD *)v165 + 2) = *((_QWORD *)v166 + 2);
        v165[24] = v166[24];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *(_DWORD *)(v165 + 7) = *(_DWORD *)(v166 + 7);
        v217 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v218 = &v165[v217];
        v219 = &v166[v217];
        v220 = type metadata accessor for Device.Control.ColorState(0);
        v221 = *(_QWORD *)(v220 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v219, 1, v220))
        {
          v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
        }
        else
        {
          v225 = sub_23E135328();
          v256 = *(_QWORD *)(v225 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v219, 1, v225))
          {
            v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v218, v219, v225);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v218, 0, 1, v225);
          }
          v229 = *(int *)(v220 + 20);
          v230 = &v218[v229];
          v231 = &v219[v229];
          *(_QWORD *)v230 = *(_QWORD *)v231;
          v230[8] = v231[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
        }
LABEL_69:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v223 = *((_QWORD *)v166 + 1);
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *((_QWORD *)v165 + 1) = v223;
        v165[16] = v166[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v163(v165, v166, v36);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        break;
    }
    v161[v38[6]] = v162[v38[6]];
    v232 = v38[7];
    v233 = &v161[v232];
    v234 = &v162[v232];
    v235 = *((_QWORD *)v234 + 1);
    *(_QWORD *)v233 = *(_QWORD *)v234;
    *((_QWORD *)v233 + 1) = v235;
    *(_WORD *)&v161[v38[8]] = *(_WORD *)&v162[v38[8]];
    v161[v38[9]] = v162[v38[9]];
    v161[v38[10]] = v162[v38[10]];
    *(_QWORD *)&v161[v38[11]] = *(_QWORD *)&v162[v38[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for AccessoryControlGroup.LayoutType(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  char v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  void (*v157)(char *, char *, uint64_t);
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  void (*v165)(char *, char *, uint64_t);
  void (*v166)(char *, char *, uint64_t);
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  void (*v232)(char *, char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  char *v234;
  void (*v235)(char *, char *, uint64_t);
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v5 = sub_23E134C80();
      v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
      v6(a1, a2, v5);
      v7 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v239 = type metadata accessor for IconDescriptor();
          v12 = *(int *)(v239 + 20);
          v13 = &v9[v12];
          v14 = &v10[v12];
          v15 = sub_23E135910();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          v17 = v16;
          v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v19 = &v9[v18];
          v20 = &v10[v18];
          *(_QWORD *)v19 = *(_QWORD *)v20;
          *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
          v21 = *(int *)(v239 + 20);
          v22 = &v19[v21];
          v23 = &v20[v21];
          swift_bridgeObjectRetain();
          v17(v22, v23, v15);
          v24 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v9[*(int *)(v24 + 20)] = *(_QWORD *)&v10[*(int *)(v24 + 20)];
          v25 = *(int *)(v24 + 24);
          v26 = &v9[v25];
          v27 = &v10[v25];
          v28 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v29 = swift_getEnumCaseMultiPayload();
          if (v29 == 1)
          {
            *(_QWORD *)v26 = *(_QWORD *)v27;
            *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v29)
          {
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v26 = *(_QWORD *)v27;
            v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v31 = &v26[v30];
            v32 = &v27[v30];
            v33 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
            swift_storeEnumTagMultiPayload();
          }
          v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v9[*(int *)(v138 + 48)] = v10[*(int *)(v138 + 48)];
          goto LABEL_44;
        case 1u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v241 = type metadata accessor for IconDescriptor();
          v62 = *(int *)(v241 + 20);
          v63 = &v9[v62];
          v64 = &v10[v62];
          v65 = sub_23E135910();
          v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
          swift_bridgeObjectRetain();
          v66(v63, v64, v65);
          v67 = v66;
          v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v69 = &v9[v68];
          v70 = &v10[v68];
          *(_QWORD *)v69 = *(_QWORD *)v70;
          *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
          v71 = *(int *)(v241 + 20);
          v72 = &v69[v71];
          v73 = &v70[v71];
          swift_bridgeObjectRetain();
          v67(v72, v73, v65);
          v74 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v9[v74[5]] = *(_QWORD *)&v10[v74[5]];
          *(_QWORD *)&v9[v74[6]] = *(_QWORD *)&v10[v74[6]];
          v75 = v74[7];
          v234 = &v10[v75];
          v242 = &v9[v75];
          v76 = sub_23E135520();
          v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
          swift_retain();
          swift_retain();
          v77(v242, v234, v76);
          *(_QWORD *)&v9[v74[8]] = *(_QWORD *)&v10[v74[8]];
          *(_QWORD *)&v9[v74[9]] = *(_QWORD *)&v10[v74[9]];
          *(_QWORD *)&v9[v74[10]] = *(_QWORD *)&v10[v74[10]];
          v78 = v74[11];
          v79 = &v9[v78];
          v80 = &v10[v78];
          v81 = v80[8];
          *(_QWORD *)v79 = *(_QWORD *)v80;
          v79[8] = v81;
          v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v83 = &v9[v82];
          v84 = &v10[v82];
          v85 = type metadata accessor for Device.Control.IncrementalState(0);
          v86 = *(_QWORD *)(v85 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
          {
            v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            v130 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v83, v84, v130);
            v83[*(int *)(v85 + 20)] = v84[*(int *)(v85 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
          }
          goto LABEL_44;
        case 2u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v9[8] = v10[8];
          v88 = *((_QWORD *)v10 + 2);
          v9[24] = v10[24];
          *((_QWORD *)v9 + 2) = v88;
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 3u:
          v89 = *(_QWORD *)v10;
          *(_DWORD *)(v9 + 7) = *(_DWORD *)(v10 + 7);
          *(_QWORD *)v9 = v89;
          v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v91 = &v9[v90];
          v92 = &v10[v90];
          v93 = type metadata accessor for Device.Control.ColorState(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            v131 = sub_23E135328();
            v132 = *(_QWORD *)(v131 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v92, 1, v131))
            {
              v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v91, v92, v131);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v91, 0, 1, v131);
            }
            v140 = *(int *)(v93 + 20);
            v141 = &v91[v140];
            v142 = &v92[v140];
            v143 = *(_QWORD *)v142;
            v141[8] = v142[8];
            *(_QWORD *)v141 = v143;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          goto LABEL_44;
        case 4u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v9[16] = v10[16];
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 6u:
          v6(v9, v10, v5);
LABEL_44:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      a1[v7[6]] = a2[v7[6]];
      v144 = v7[7];
      v145 = &a1[v144];
      v146 = &a2[v144];
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *((_QWORD *)v145 + 1) = *((_QWORD *)v146 + 1);
      *(_WORD *)&a1[v7[8]] = *(_WORD *)&a2[v7[8]];
      a1[v7[9]] = a2[v7[9]];
      a1[v7[10]] = a2[v7[10]];
      *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = sub_23E134C80();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      v35(a1, a2, v34);
      v36 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v37 = v36[5];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v233 = (void (*)(_QWORD *, _QWORD *, uint64_t))v35;
          v240 = v34;
          v248 = v40;
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
          v229 = type metadata accessor for IconDescriptor();
          v41 = *(int *)(v229 + 20);
          v42 = &v38[v41];
          v43 = &v39[v41];
          v44 = sub_23E135910();
          v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v45(v42, v43, v44);
          v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v47 = &v38[v46];
          v48 = &v39[v46];
          *(_QWORD *)v47 = *(_QWORD *)v48;
          *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
          v49 = *(int *)(v229 + 20);
          v50 = &v47[v49];
          v51 = &v48[v49];
          swift_bridgeObjectRetain();
          v45(v50, v51, v44);
          v52 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v38[*(int *)(v52 + 20)] = *(_QWORD *)&v39[*(int *)(v52 + 20)];
          v53 = *(int *)(v52 + 24);
          v54 = &v38[v53];
          v55 = &v39[v53];
          v56 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v57 = swift_getEnumCaseMultiPayload();
          if (v57 == 1)
          {
            *(_QWORD *)v54 = *(_QWORD *)v55;
            *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v57)
          {
            memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v54 = *(_QWORD *)v55;
            v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v59 = &v54[v58];
            v60 = &v55[v58];
            v61 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
            swift_storeEnumTagMultiPayload();
          }
          v40 = v248;
          v35 = (void (*)(char *, char *, uint64_t))v233;
          v34 = v240;
          v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v38[*(int *)(v139 + 48)] = v39[*(int *)(v139 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v235 = (void (*)(_QWORD *, _QWORD *, uint64_t))v35;
          v243 = v34;
          v249 = v40;
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
          v230 = type metadata accessor for IconDescriptor();
          v96 = *(int *)(v230 + 20);
          v97 = &v38[v96];
          v98 = &v39[v96];
          v99 = sub_23E135910();
          v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          v100(v97, v98, v99);
          v101 = v100;
          v102 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v103 = &v38[v102];
          v104 = &v39[v102];
          *(_QWORD *)v103 = *(_QWORD *)v104;
          *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
          v105 = *(int *)(v230 + 20);
          v106 = &v103[v105];
          v107 = &v104[v105];
          swift_bridgeObjectRetain();
          v101(v106, v107, v99);
          v108 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v38[v108[5]] = *(_QWORD *)&v39[v108[5]];
          *(_QWORD *)&v38[v108[6]] = *(_QWORD *)&v39[v108[6]];
          v109 = v108[7];
          v228 = &v39[v109];
          v231 = &v38[v109];
          v110 = sub_23E135520();
          v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
          swift_retain();
          swift_retain();
          v111(v231, v228, v110);
          *(_QWORD *)&v38[v108[8]] = *(_QWORD *)&v39[v108[8]];
          *(_QWORD *)&v38[v108[9]] = *(_QWORD *)&v39[v108[9]];
          *(_QWORD *)&v38[v108[10]] = *(_QWORD *)&v39[v108[10]];
          v112 = v108[11];
          v113 = &v38[v112];
          v114 = &v39[v112];
          v115 = v114[8];
          *(_QWORD *)v113 = *(_QWORD *)v114;
          v113[8] = v115;
          v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v117 = &v38[v116];
          v118 = &v39[v116];
          v119 = type metadata accessor for Device.Control.IncrementalState(0);
          v120 = *(_QWORD *)(v119 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
          {
            v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            v134 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v117, v118, v134);
            v117[*(int *)(v119 + 20)] = v118[*(int *)(v119 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
          }
          v40 = v249;
          swift_storeEnumTagMultiPayload();
          goto LABEL_49;
        case 2u:
          *(_QWORD *)v38 = *(_QWORD *)v39;
          v38[8] = v39[8];
          v122 = *((_QWORD *)v39 + 2);
          v38[24] = v39[24];
          *((_QWORD *)v38 + 2) = v122;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v235 = (void (*)(_QWORD *, _QWORD *, uint64_t))v35;
          v243 = v34;
          v123 = *(_QWORD *)v39;
          *(_DWORD *)(v38 + 7) = *(_DWORD *)(v39 + 7);
          *(_QWORD *)v38 = v123;
          v124 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v125 = &v38[v124];
          v126 = &v39[v124];
          v127 = type metadata accessor for Device.Control.ColorState(0);
          v128 = *(_QWORD *)(v127 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
          {
            v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
          }
          else
          {
            v250 = v40;
            v135 = sub_23E135328();
            v136 = *(_QWORD *)(v135 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v126, 1, v135))
            {
              v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v125, v126, v135);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v125, 0, 1, v135);
            }
            v40 = v250;
            v147 = *(int *)(v127 + 20);
            v148 = &v125[v147];
            v149 = &v126[v147];
            v150 = *(_QWORD *)v149;
            v148[8] = v149[8];
            *(_QWORD *)v148 = v150;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
          }
          swift_storeEnumTagMultiPayload();
LABEL_49:
          v35 = (void (*)(char *, char *, uint64_t))v235;
          v34 = v243;
          break;
        case 4u:
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
          v38[16] = v39[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v35(v38, v39, v34);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          break;
      }
      a1[v36[6]] = a2[v36[6]];
      v151 = v36[7];
      v152 = &a1[v151];
      v153 = &a2[v151];
      *(_QWORD *)v152 = *(_QWORD *)v153;
      *((_QWORD *)v152 + 1) = *((_QWORD *)v153 + 1);
      *(_WORD *)&a1[v36[8]] = *(_WORD *)&a2[v36[8]];
      a1[v36[9]] = a2[v36[9]];
      a1[v36[10]] = a2[v36[10]];
      *(_QWORD *)&a1[v36[11]] = *(_QWORD *)&a2[v36[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v154 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v155 = &a1[v154];
      v156 = &a2[v154];
      v157 = v35;
      v35(&a1[v154], v156, v34);
      v158 = v36[5];
      v159 = &v155[v158];
      v160 = &v156[v158];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v159 = *(_QWORD *)v160;
          *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
          v161 = type metadata accessor for IconDescriptor();
          v162 = *(int *)(v161 + 20);
          v236 = &v159[v162];
          v244 = v161;
          v163 = &v160[v162];
          v164 = sub_23E135910();
          v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16);
          swift_bridgeObjectRetain();
          v165(v236, v163, v164);
          v166 = v165;
          v167 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v168 = &v159[v167];
          v169 = &v160[v167];
          *(_QWORD *)v168 = *(_QWORD *)v169;
          *((_QWORD *)v168 + 1) = *((_QWORD *)v169 + 1);
          v170 = *(int *)(v244 + 20);
          v171 = &v168[v170];
          v172 = &v169[v170];
          swift_bridgeObjectRetain();
          v166(v171, v172, v164);
          v173 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v159[*(int *)(v173 + 20)] = *(_QWORD *)&v160[*(int *)(v173 + 20)];
          v174 = *(int *)(v173 + 24);
          v175 = &v159[v174];
          v176 = &v160[v174];
          v177 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v178 = swift_getEnumCaseMultiPayload();
          if (v178 == 1)
          {
            *(_QWORD *)v175 = *(_QWORD *)v176;
            *((_QWORD *)v175 + 1) = *((_QWORD *)v176 + 1);
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v178)
          {
            memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v175 = *(_QWORD *)v176;
            v179 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v180 = &v175[v179];
            v181 = &v176[v179];
            v182 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v180, v181, v182);
            swift_storeEnumTagMultiPayload();
          }
          v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v159[*(int *)(v219 + 48)] = v160[*(int *)(v219 + 48)];
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          *(_QWORD *)v159 = *(_QWORD *)v160;
          *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
          v183 = type metadata accessor for IconDescriptor();
          v184 = *(int *)(v183 + 20);
          v237 = &v159[v184];
          v245 = v183;
          v185 = &v160[v184];
          v186 = sub_23E135910();
          v187 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16);
          swift_bridgeObjectRetain();
          v187(v237, v185, v186);
          v188 = v187;
          v189 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v190 = &v159[v189];
          v191 = &v160[v189];
          *(_QWORD *)v190 = *(_QWORD *)v191;
          *((_QWORD *)v190 + 1) = *((_QWORD *)v191 + 1);
          v192 = *(int *)(v245 + 20);
          v193 = &v190[v192];
          v194 = &v191[v192];
          swift_bridgeObjectRetain();
          v188(v193, v194, v186);
          v195 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v159[v195[5]] = *(_QWORD *)&v160[v195[5]];
          *(_QWORD *)&v159[v195[6]] = *(_QWORD *)&v160[v195[6]];
          v196 = v195[7];
          v238 = &v160[v196];
          v246 = &v159[v196];
          v197 = sub_23E135520();
          v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 16);
          swift_retain();
          swift_retain();
          v232(v246, v238, v197);
          *(_QWORD *)&v159[v195[8]] = *(_QWORD *)&v160[v195[8]];
          *(_QWORD *)&v159[v195[9]] = *(_QWORD *)&v160[v195[9]];
          *(_QWORD *)&v159[v195[10]] = *(_QWORD *)&v160[v195[10]];
          v198 = v195[11];
          v199 = &v159[v198];
          v200 = &v160[v198];
          v201 = v200[8];
          *(_QWORD *)v199 = *(_QWORD *)v200;
          v199[8] = v201;
          v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v203 = &v159[v202];
          v204 = &v160[v202];
          v205 = type metadata accessor for Device.Control.IncrementalState(0);
          v206 = *(_QWORD *)(v205 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
          {
            v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
          }
          else
          {
            v216 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v203, v204, v216);
            v203[*(int *)(v205 + 20)] = v204[*(int *)(v205 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
          }
          goto LABEL_70;
        case 2u:
          *(_QWORD *)v159 = *(_QWORD *)v160;
          v159[8] = v160[8];
          v208 = *((_QWORD *)v160 + 2);
          v159[24] = v160[24];
          *((_QWORD *)v159 + 2) = v208;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v209 = *(_QWORD *)v160;
          *(_DWORD *)(v159 + 7) = *(_DWORD *)(v160 + 7);
          *(_QWORD *)v159 = v209;
          v210 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v211 = &v159[v210];
          v212 = &v160[v210];
          v213 = type metadata accessor for Device.Control.ColorState(0);
          v214 = *(_QWORD *)(v213 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v212, 1, v213))
          {
            v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
          }
          else
          {
            v217 = sub_23E135328();
            v247 = *(_QWORD *)(v217 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v212, 1, v217))
            {
              v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v211, v212, v217);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v211, 0, 1, v217);
            }
            v220 = *(int *)(v213 + 20);
            v221 = &v211[v220];
            v222 = &v212[v220];
            v223 = *(_QWORD *)v222;
            v221[8] = v222[8];
            *(_QWORD *)v221 = v223;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
          }
LABEL_70:
          swift_storeEnumTagMultiPayload();
          break;
        case 4u:
          *(_QWORD *)v159 = *(_QWORD *)v160;
          *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
          v159[16] = v160[16];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v157(v159, v160, v34);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          break;
      }
      v155[v36[6]] = v156[v36[6]];
      v224 = v36[7];
      v225 = &v155[v224];
      v226 = &v156[v224];
      *(_QWORD *)v225 = *(_QWORD *)v226;
      *((_QWORD *)v225 + 1) = *((_QWORD *)v226 + 1);
      *(_WORD *)&v155[v36[8]] = *(_WORD *)&v156[v36[8]];
      v155[v36[9]] = v156[v36[9]];
      v155[v36[10]] = v156[v36[10]];
      *(_QWORD *)&v155[v36[11]] = *(_QWORD *)&v156[v36[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for AccessoryControlGroup.LayoutType(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  int *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  char *v151;
  char *v152;
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v28 = sub_23E134C80();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
    v29(a1, a2, v28);
    v30 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v31 = v30[5];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)v32 = *(_OWORD *)v33;
        v35 = type metadata accessor for IconDescriptor();
        v36 = *(int *)(v35 + 20);
        v37 = &v32[v36];
        v38 = &v33[v36];
        v39 = sub_23E135910();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v40(v37, v38, v39);
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v42 = &v32[v41];
        v43 = &v33[v41];
        *(_OWORD *)v42 = *(_OWORD *)v43;
        v40(&v42[*(int *)(v35 + 20)], &v43[*(int *)(v35 + 20)], v39);
        v44 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v32[*(int *)(v44 + 20)] = *(_QWORD *)&v33[*(int *)(v44 + 20)];
        v45 = *(int *)(v44 + 24);
        v46 = &v32[v45];
        v47 = &v33[v45];
        v48 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v46 = *(_QWORD *)v47;
          v112 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v113 = &v46[v112];
          v114 = &v47[v112];
          v115 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
          swift_storeEnumTagMultiPayload();
        }
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v32[*(int *)(v116 + 48)] = v33[*(int *)(v116 + 48)];
        goto LABEL_52;
      case 1u:
        *(_OWORD *)v32 = *(_OWORD *)v33;
        v78 = type metadata accessor for IconDescriptor();
        v79 = *(int *)(v78 + 20);
        v80 = &v32[v79];
        v81 = &v33[v79];
        v82 = sub_23E135910();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32);
        v83(v80, v81, v82);
        v84 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v85 = &v32[v84];
        v86 = &v33[v84];
        *(_OWORD *)v85 = *(_OWORD *)v86;
        v83(&v85[*(int *)(v78 + 20)], &v86[*(int *)(v78 + 20)], v82);
        v87 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v32[v87[5]] = *(_QWORD *)&v33[v87[5]];
        *(_QWORD *)&v32[v87[6]] = *(_QWORD *)&v33[v87[6]];
        v88 = v87[7];
        v89 = &v32[v88];
        v90 = &v33[v88];
        v91 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
        *(_QWORD *)&v32[v87[8]] = *(_QWORD *)&v33[v87[8]];
        *(_QWORD *)&v32[v87[9]] = *(_QWORD *)&v33[v87[9]];
        *(_QWORD *)&v32[v87[10]] = *(_QWORD *)&v33[v87[10]];
        v92 = v87[11];
        v93 = &v32[v92];
        v94 = &v33[v92];
        v93[8] = v94[8];
        *(_QWORD *)v93 = *(_QWORD *)v94;
        v95 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v96 = &v32[v95];
        v97 = &v33[v95];
        v98 = type metadata accessor for Device.Control.IncrementalState(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          v120 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v96, v97, v120);
          v96[*(int *)(v98 + 20)] = v97[*(int *)(v98 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        goto LABEL_52;
      case 3u:
        *(_QWORD *)v32 = *(_QWORD *)v33;
        *(_DWORD *)(v32 + 7) = *(_DWORD *)(v33 + 7);
        v101 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v102 = &v32[v101];
        v103 = &v33[v101];
        v104 = type metadata accessor for Device.Control.ColorState(0);
        v105 = *(_QWORD *)(v104 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          v121 = sub_23E135328();
          v191 = *(_QWORD *)(v121 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v103, 1, v121))
          {
            v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v102, v103, v121);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v102, 0, 1, v121);
          }
          v181 = *(int *)(v104 + 20);
          v182 = &v102[v181];
          v183 = &v103[v181];
          *(_QWORD *)v182 = *(_QWORD *)v183;
          v182[8] = v183[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
        }
        goto LABEL_52;
      case 6u:
        v29(v32, v33, v28);
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        break;
    }
    a1[v30[6]] = a2[v30[6]];
    *(_OWORD *)&a1[v30[7]] = *(_OWORD *)&a2[v30[7]];
    *(_WORD *)&a1[v30[8]] = *(_WORD *)&a2[v30[8]];
    a1[v30[9]] = a2[v30[9]];
    a1[v30[10]] = a2[v30[10]];
    *(_QWORD *)&a1[v30[11]] = *(_QWORD *)&a2[v30[11]];
    goto LABEL_58;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_23E134C80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for AccessoryControlInfo.State(0);
    v195 = v13;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v189 = v8;
        v190 = v7;
        *(_OWORD *)v11 = *(_OWORD *)v12;
        v14 = type metadata accessor for IconDescriptor();
        v15 = *(int *)(v14 + 20);
        v16 = &v11[v15];
        v17 = &v12[v15];
        v18 = sub_23E135910();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
        v19(v16, v17, v18);
        v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v21 = &v11[v20];
        v22 = &v12[v20];
        *(_OWORD *)v21 = *(_OWORD *)v22;
        v19(&v21[*(int *)(v14 + 20)], &v22[*(int *)(v14 + 20)], v18);
        v23 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v11[*(int *)(v23 + 20)] = *(_QWORD *)&v12[*(int *)(v23 + 20)];
        v24 = *(int *)(v23 + 24);
        v25 = &v11[v24];
        v26 = &v12[v24];
        v27 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v25 = *(_QWORD *)v26;
          v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v108 = &v25[v107];
          v109 = &v26[v107];
          v110 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
          swift_storeEnumTagMultiPayload();
        }
        v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v11[*(int *)(v111 + 48)] = v12[*(int *)(v111 + 48)];
        v13 = v195;
        goto LABEL_35;
      case 1u:
        v189 = v8;
        v190 = v7;
        *(_OWORD *)v11 = *(_OWORD *)v12;
        v49 = type metadata accessor for IconDescriptor();
        v50 = *(int *)(v49 + 20);
        v51 = &v11[v50];
        v52 = &v12[v50];
        v53 = sub_23E135910();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32);
        v54(v51, v52, v53);
        v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v56 = &v11[v55];
        v57 = &v12[v55];
        *(_OWORD *)v56 = *(_OWORD *)v57;
        v54(&v56[*(int *)(v49 + 20)], &v57[*(int *)(v49 + 20)], v53);
        v58 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v11[v58[5]] = *(_QWORD *)&v12[v58[5]];
        *(_QWORD *)&v11[v58[6]] = *(_QWORD *)&v12[v58[6]];
        v59 = v58[7];
        v60 = &v11[v59];
        v61 = &v12[v59];
        v62 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        *(_QWORD *)&v11[v58[8]] = *(_QWORD *)&v12[v58[8]];
        *(_QWORD *)&v11[v58[9]] = *(_QWORD *)&v12[v58[9]];
        *(_QWORD *)&v11[v58[10]] = *(_QWORD *)&v12[v58[10]];
        v63 = v58[11];
        v64 = &v11[v63];
        v65 = &v12[v63];
        v64[8] = v65[8];
        *(_QWORD *)v64 = *(_QWORD *)v65;
        v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v67 = &v11[v66];
        v68 = &v12[v66];
        v69 = type metadata accessor for Device.Control.IncrementalState(0);
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v117 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v67, v68, v117);
          v67[*(int *)(v69 + 20)] = v68[*(int *)(v69 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        v13 = v195;
        goto LABEL_35;
      case 3u:
        v189 = v8;
        v190 = v7;
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
        v72 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v73 = &v11[v72];
        v74 = &v12[v72];
        v75 = type metadata accessor for Device.Control.ColorState(0);
        v76 = *(_QWORD *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          v118 = sub_23E135328();
          v188 = *(_QWORD *)(v118 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v74, 1, v118))
          {
            v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v73, v74, v118);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v73, 0, 1, v118);
          }
          v13 = v195;
          v123 = *(int *)(v75 + 20);
          v124 = &v73[v123];
          v125 = &v74[v123];
          *(_QWORD *)v124 = *(_QWORD *)v125;
          v124[8] = v125[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
LABEL_35:
        swift_storeEnumTagMultiPayload();
        v8 = v189;
        v7 = v190;
        break;
      case 6u:
        v8(v11, v12, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    a1[v9[6]] = a2[v9[6]];
    *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
    *(_WORD *)&a1[v9[8]] = *(_WORD *)&a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[v9[10]] = a2[v9[10]];
    *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
    v126 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    v127 = &a1[v126];
    v128 = &a2[v126];
    v8(&a1[v126], v128, v7);
    v129 = v9[5];
    v130 = &v127[v129];
    v131 = &v128[v129];
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)v130 = *(_OWORD *)v131;
        v192 = type metadata accessor for IconDescriptor();
        v132 = *(int *)(v192 + 20);
        v133 = &v130[v132];
        v134 = &v131[v132];
        v135 = sub_23E135910();
        v136 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32);
        v136(v133, v134, v135);
        v137 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v138 = &v130[v137];
        v139 = &v131[v137];
        *(_OWORD *)v138 = *(_OWORD *)v139;
        v136(&v138[*(int *)(v192 + 20)], &v139[*(int *)(v192 + 20)], v135);
        v140 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v130[*(int *)(v140 + 20)] = *(_QWORD *)&v131[*(int *)(v140 + 20)];
        v141 = *(int *)(v140 + 24);
        v142 = &v130[v141];
        v143 = &v131[v141];
        v144 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v142 = *(_QWORD *)v143;
          v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v174 = &v142[v173];
          v175 = &v143[v173];
          v176 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
          swift_storeEnumTagMultiPayload();
        }
        v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v130[*(int *)(v177 + 48)] = v131[*(int *)(v177 + 48)];
        goto LABEL_56;
      case 1u:
        *(_OWORD *)v130 = *(_OWORD *)v131;
        v193 = type metadata accessor for IconDescriptor();
        v145 = *(int *)(v193 + 20);
        v146 = &v130[v145];
        v147 = &v131[v145];
        v148 = sub_23E135910();
        v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32);
        v149(v146, v147, v148);
        v150 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v151 = &v130[v150];
        v152 = &v131[v150];
        *(_OWORD *)v151 = *(_OWORD *)v152;
        v149(&v151[*(int *)(v193 + 20)], &v152[*(int *)(v193 + 20)], v148);
        v153 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v130[v153[5]] = *(_QWORD *)&v131[v153[5]];
        *(_QWORD *)&v130[v153[6]] = *(_QWORD *)&v131[v153[6]];
        v154 = v153[7];
        v155 = &v130[v154];
        v156 = &v131[v154];
        v157 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
        *(_QWORD *)&v130[v153[8]] = *(_QWORD *)&v131[v153[8]];
        *(_QWORD *)&v130[v153[9]] = *(_QWORD *)&v131[v153[9]];
        *(_QWORD *)&v130[v153[10]] = *(_QWORD *)&v131[v153[10]];
        v158 = v153[11];
        v159 = &v130[v158];
        v160 = &v131[v158];
        v159[8] = v160[8];
        *(_QWORD *)v159 = *(_QWORD *)v160;
        v161 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v162 = &v130[v161];
        v163 = &v131[v161];
        v164 = type metadata accessor for Device.Control.IncrementalState(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
        {
          v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
        }
        else
        {
          v178 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v162, v163, v178);
          v162[*(int *)(v164 + 20)] = v163[*(int *)(v164 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
        }
        goto LABEL_56;
      case 3u:
        *(_QWORD *)v130 = *(_QWORD *)v131;
        *(_DWORD *)(v130 + 7) = *(_DWORD *)(v131 + 7);
        v167 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v168 = &v130[v167];
        v169 = &v131[v167];
        v170 = type metadata accessor for Device.Control.ColorState(0);
        v171 = *(_QWORD *)(v170 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
        {
          v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
        }
        else
        {
          v179 = sub_23E135328();
          v194 = *(_QWORD *)(v179 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v169, 1, v179))
          {
            v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v168, v169, v179);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v168, 0, 1, v179);
          }
          v184 = *(int *)(v170 + 20);
          v185 = &v168[v184];
          v186 = &v169[v184];
          *(_QWORD *)v185 = *(_QWORD *)v186;
          v185[8] = v186[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
        }
        goto LABEL_56;
      case 6u:
        v8(v130, v131, v7);
LABEL_56:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v127[v9[6]] = v128[v9[6]];
    *(_OWORD *)&v127[v9[7]] = *(_OWORD *)&v128[v9[7]];
    *(_WORD *)&v127[v9[8]] = *(_WORD *)&v128[v9[8]];
    v127[v9[9]] = v128[v9[9]];
    v127[v9[10]] = v128[v9[10]];
    *(_QWORD *)&v127[v9[11]] = *(_QWORD *)&v128[v9[11]];
LABEL_58:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for AccessoryControlGroup.LayoutType(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  int *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  char *v151;
  char *v152;
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v28 = sub_23E134C80();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
      v29(a1, a2, v28);
      v30 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v31 = v30[5];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = type metadata accessor for AccessoryControlInfo.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_OWORD *)v32 = *(_OWORD *)v33;
          v35 = type metadata accessor for IconDescriptor();
          v36 = *(int *)(v35 + 20);
          v37 = &v32[v36];
          v38 = &v33[v36];
          v39 = sub_23E135910();
          v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
          v40(v37, v38, v39);
          v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v42 = &v32[v41];
          v43 = &v33[v41];
          *(_OWORD *)v42 = *(_OWORD *)v43;
          v40(&v42[*(int *)(v35 + 20)], &v43[*(int *)(v35 + 20)], v39);
          v44 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v32[*(int *)(v44 + 20)] = *(_QWORD *)&v33[*(int *)(v44 + 20)];
          v45 = *(int *)(v44 + 24);
          v46 = &v32[v45];
          v47 = &v33[v45];
          v48 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v46 = *(_QWORD *)v47;
            v112 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v113 = &v46[v112];
            v114 = &v47[v112];
            v115 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
            swift_storeEnumTagMultiPayload();
          }
          v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v32[*(int *)(v116 + 48)] = v33[*(int *)(v116 + 48)];
          goto LABEL_53;
        case 1u:
          *(_OWORD *)v32 = *(_OWORD *)v33;
          v78 = type metadata accessor for IconDescriptor();
          v79 = *(int *)(v78 + 20);
          v80 = &v32[v79];
          v81 = &v33[v79];
          v82 = sub_23E135910();
          v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32);
          v83(v80, v81, v82);
          v84 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v85 = &v32[v84];
          v86 = &v33[v84];
          *(_OWORD *)v85 = *(_OWORD *)v86;
          v83(&v85[*(int *)(v78 + 20)], &v86[*(int *)(v78 + 20)], v82);
          v87 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v32[v87[5]] = *(_QWORD *)&v33[v87[5]];
          *(_QWORD *)&v32[v87[6]] = *(_QWORD *)&v33[v87[6]];
          v88 = v87[7];
          v89 = &v32[v88];
          v90 = &v33[v88];
          v91 = sub_23E135520();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
          *(_QWORD *)&v32[v87[8]] = *(_QWORD *)&v33[v87[8]];
          *(_QWORD *)&v32[v87[9]] = *(_QWORD *)&v33[v87[9]];
          *(_QWORD *)&v32[v87[10]] = *(_QWORD *)&v33[v87[10]];
          v92 = v87[11];
          v93 = &v32[v92];
          v94 = &v33[v92];
          v93[8] = v94[8];
          *(_QWORD *)v93 = *(_QWORD *)v94;
          v95 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v96 = &v32[v95];
          v97 = &v33[v95];
          v98 = type metadata accessor for Device.Control.IncrementalState(0);
          v99 = *(_QWORD *)(v98 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
          {
            v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            v120 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v96, v97, v120);
            v96[*(int *)(v98 + 20)] = v97[*(int *)(v98 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          goto LABEL_53;
        case 3u:
          *(_QWORD *)v32 = *(_QWORD *)v33;
          *(_DWORD *)(v32 + 7) = *(_DWORD *)(v33 + 7);
          v101 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v102 = &v32[v101];
          v103 = &v33[v101];
          v104 = type metadata accessor for Device.Control.ColorState(0);
          v105 = *(_QWORD *)(v104 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
          {
            v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            v121 = sub_23E135328();
            v191 = *(_QWORD *)(v121 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v103, 1, v121))
            {
              v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v102, v103, v121);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v102, 0, 1, v121);
            }
            v181 = *(int *)(v104 + 20);
            v182 = &v102[v181];
            v183 = &v103[v181];
            *(_QWORD *)v182 = *(_QWORD *)v183;
            v182[8] = v183[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
          }
          goto LABEL_53;
        case 6u:
          v29(v32, v33, v28);
LABEL_53:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          break;
      }
      a1[v30[6]] = a2[v30[6]];
      *(_OWORD *)&a1[v30[7]] = *(_OWORD *)&a2[v30[7]];
      *(_WORD *)&a1[v30[8]] = *(_WORD *)&a2[v30[8]];
      a1[v30[9]] = a2[v30[9]];
      a1[v30[10]] = a2[v30[10]];
      *(_QWORD *)&a1[v30[11]] = *(_QWORD *)&a2[v30[11]];
      goto LABEL_59;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_23E134C80();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for AccessoryControlInfo.State(0);
      v195 = v13;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v189 = v8;
          v190 = v7;
          *(_OWORD *)v11 = *(_OWORD *)v12;
          v14 = type metadata accessor for IconDescriptor();
          v15 = *(int *)(v14 + 20);
          v16 = &v11[v15];
          v17 = &v12[v15];
          v18 = sub_23E135910();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
          v19(v16, v17, v18);
          v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v21 = &v11[v20];
          v22 = &v12[v20];
          *(_OWORD *)v21 = *(_OWORD *)v22;
          v19(&v21[*(int *)(v14 + 20)], &v22[*(int *)(v14 + 20)], v18);
          v23 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v11[*(int *)(v23 + 20)] = *(_QWORD *)&v12[*(int *)(v23 + 20)];
          v24 = *(int *)(v23 + 24);
          v25 = &v11[v24];
          v26 = &v12[v24];
          v27 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v25 = *(_QWORD *)v26;
            v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v108 = &v25[v107];
            v109 = &v26[v107];
            v110 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
            swift_storeEnumTagMultiPayload();
          }
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v11[*(int *)(v111 + 48)] = v12[*(int *)(v111 + 48)];
          v13 = v195;
          goto LABEL_36;
        case 1u:
          v189 = v8;
          v190 = v7;
          *(_OWORD *)v11 = *(_OWORD *)v12;
          v49 = type metadata accessor for IconDescriptor();
          v50 = *(int *)(v49 + 20);
          v51 = &v11[v50];
          v52 = &v12[v50];
          v53 = sub_23E135910();
          v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32);
          v54(v51, v52, v53);
          v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v56 = &v11[v55];
          v57 = &v12[v55];
          *(_OWORD *)v56 = *(_OWORD *)v57;
          v54(&v56[*(int *)(v49 + 20)], &v57[*(int *)(v49 + 20)], v53);
          v58 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v11[v58[5]] = *(_QWORD *)&v12[v58[5]];
          *(_QWORD *)&v11[v58[6]] = *(_QWORD *)&v12[v58[6]];
          v59 = v58[7];
          v60 = &v11[v59];
          v61 = &v12[v59];
          v62 = sub_23E135520();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
          *(_QWORD *)&v11[v58[8]] = *(_QWORD *)&v12[v58[8]];
          *(_QWORD *)&v11[v58[9]] = *(_QWORD *)&v12[v58[9]];
          *(_QWORD *)&v11[v58[10]] = *(_QWORD *)&v12[v58[10]];
          v63 = v58[11];
          v64 = &v11[v63];
          v65 = &v12[v63];
          v64[8] = v65[8];
          *(_QWORD *)v64 = *(_QWORD *)v65;
          v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v67 = &v11[v66];
          v68 = &v12[v66];
          v69 = type metadata accessor for Device.Control.IncrementalState(0);
          v70 = *(_QWORD *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
          {
            v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            v117 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v67, v68, v117);
            v67[*(int *)(v69 + 20)] = v68[*(int *)(v69 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          }
          v13 = v195;
          goto LABEL_36;
        case 3u:
          v189 = v8;
          v190 = v7;
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
          v72 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v73 = &v11[v72];
          v74 = &v12[v72];
          v75 = type metadata accessor for Device.Control.ColorState(0);
          v76 = *(_QWORD *)(v75 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
          {
            v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          }
          else
          {
            v118 = sub_23E135328();
            v188 = *(_QWORD *)(v118 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v74, 1, v118))
            {
              v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v73, v74, v118);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v73, 0, 1, v118);
            }
            v13 = v195;
            v123 = *(int *)(v75 + 20);
            v124 = &v73[v123];
            v125 = &v74[v123];
            *(_QWORD *)v124 = *(_QWORD *)v125;
            v124[8] = v125[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
LABEL_36:
          swift_storeEnumTagMultiPayload();
          v8 = v189;
          v7 = v190;
          break;
        case 6u:
          v8(v11, v12, v7);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      a1[v9[6]] = a2[v9[6]];
      *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
      *(_WORD *)&a1[v9[8]] = *(_WORD *)&a2[v9[8]];
      a1[v9[9]] = a2[v9[9]];
      a1[v9[10]] = a2[v9[10]];
      *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
      v126 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v127 = &a1[v126];
      v128 = &a2[v126];
      v8(&a1[v126], v128, v7);
      v129 = v9[5];
      v130 = &v127[v129];
      v131 = &v128[v129];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_OWORD *)v130 = *(_OWORD *)v131;
          v192 = type metadata accessor for IconDescriptor();
          v132 = *(int *)(v192 + 20);
          v133 = &v130[v132];
          v134 = &v131[v132];
          v135 = sub_23E135910();
          v136 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32);
          v136(v133, v134, v135);
          v137 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v138 = &v130[v137];
          v139 = &v131[v137];
          *(_OWORD *)v138 = *(_OWORD *)v139;
          v136(&v138[*(int *)(v192 + 20)], &v139[*(int *)(v192 + 20)], v135);
          v140 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v130[*(int *)(v140 + 20)] = *(_QWORD *)&v131[*(int *)(v140 + 20)];
          v141 = *(int *)(v140 + 24);
          v142 = &v130[v141];
          v143 = &v131[v141];
          v144 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v142 = *(_QWORD *)v143;
            v173 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v174 = &v142[v173];
            v175 = &v143[v173];
            v176 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
            swift_storeEnumTagMultiPayload();
          }
          v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
          v130[*(int *)(v177 + 48)] = v131[*(int *)(v177 + 48)];
          goto LABEL_57;
        case 1u:
          *(_OWORD *)v130 = *(_OWORD *)v131;
          v193 = type metadata accessor for IconDescriptor();
          v145 = *(int *)(v193 + 20);
          v146 = &v130[v145];
          v147 = &v131[v145];
          v148 = sub_23E135910();
          v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32);
          v149(v146, v147, v148);
          v150 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v151 = &v130[v150];
          v152 = &v131[v150];
          *(_OWORD *)v151 = *(_OWORD *)v152;
          v149(&v151[*(int *)(v193 + 20)], &v152[*(int *)(v193 + 20)], v148);
          v153 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v130[v153[5]] = *(_QWORD *)&v131[v153[5]];
          *(_QWORD *)&v130[v153[6]] = *(_QWORD *)&v131[v153[6]];
          v154 = v153[7];
          v155 = &v130[v154];
          v156 = &v131[v154];
          v157 = sub_23E135520();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
          *(_QWORD *)&v130[v153[8]] = *(_QWORD *)&v131[v153[8]];
          *(_QWORD *)&v130[v153[9]] = *(_QWORD *)&v131[v153[9]];
          *(_QWORD *)&v130[v153[10]] = *(_QWORD *)&v131[v153[10]];
          v158 = v153[11];
          v159 = &v130[v158];
          v160 = &v131[v158];
          v159[8] = v160[8];
          *(_QWORD *)v159 = *(_QWORD *)v160;
          v161 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
          v162 = &v130[v161];
          v163 = &v131[v161];
          v164 = type metadata accessor for Device.Control.IncrementalState(0);
          v165 = *(_QWORD *)(v164 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          {
            v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
          }
          else
          {
            v178 = sub_23E13534C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v162, v163, v178);
            v162[*(int *)(v164 + 20)] = v163[*(int *)(v164 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
          }
          goto LABEL_57;
        case 3u:
          *(_QWORD *)v130 = *(_QWORD *)v131;
          *(_DWORD *)(v130 + 7) = *(_DWORD *)(v131 + 7);
          v167 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
          v168 = &v130[v167];
          v169 = &v131[v167];
          v170 = type metadata accessor for Device.Control.ColorState(0);
          v171 = *(_QWORD *)(v170 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
          {
            v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            v179 = sub_23E135328();
            v194 = *(_QWORD *)(v179 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v169, 1, v179))
            {
              v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v168, v169, v179);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v168, 0, 1, v179);
            }
            v184 = *(int *)(v170 + 20);
            v185 = &v168[v184];
            v186 = &v169[v184];
            *(_QWORD *)v185 = *(_QWORD *)v186;
            v185[8] = v186[8];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
          }
          goto LABEL_57;
        case 6u:
          v8(v130, v131, v7);
LABEL_57:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v127[v9[6]] = v128[v9[6]];
      *(_OWORD *)&v127[v9[7]] = *(_OWORD *)&v128[v9[7]];
      *(_WORD *)&v127[v9[8]] = *(_WORD *)&v128[v9[8]];
      v127[v9[9]] = v128[v9[9]];
      v127[v9[10]] = v128[v9[10]];
      *(_QWORD *)&v127[v9[11]] = *(_QWORD *)&v128[v9[11]];
LABEL_59:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23E065FCC()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  result = type metadata accessor for AccessoryControlInfo(319);
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v4 = &v3;
    v5 = MEMORY[0x24BEE0158] + 64;
    v6 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23E06605C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F308);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E06609C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  char v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    v20 = *(_BYTE *)(a2 + 64);
    v21 = *(_BYTE *)(a2 + 65);
    sub_23DF98590(*(_QWORD *)a2, v7, v8, v9, v10, v11, v13, v12, v20, v21);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v12;
    *(_BYTE *)(a1 + 64) = v20;
    v14 = *(int *)(a3 + 20);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    *(_BYTE *)(a1 + 65) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_23E066204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23DF985F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), *(_BYTE *)(a1 + 65));
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23E0662B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char v18;
  char v19;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v18 = *(_BYTE *)(a2 + 64);
  v19 = *(_BYTE *)(a2 + 65);
  sub_23DF98590(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v18, v19);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v18;
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *(_BYTE *)(a1 + 65) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23E135D60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_23E0663F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char v28;
  char v29;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v28 = *(_BYTE *)(a2 + 64);
  v29 = *(_BYTE *)(a2 + 65);
  sub_23DF98590(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v28, v29);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_BYTE *)(a1 + 64);
  v22 = *(_BYTE *)(a1 + 65);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v28;
  *(_BYTE *)(a1 + 65) = v29;
  sub_23DF985F0(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    v23 = *(int *)(a3 + 20);
    v24 = (_QWORD *)(a1 + v23);
    v25 = (_QWORD *)(a2 + v23);
    sub_23E066574(a1 + v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E066574(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E0665B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_23E135D60();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E066688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(_BYTE *)(a2 + 65);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_BYTE *)(a1 + 64);
  v17 = *(_BYTE *)(a1 + 65);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 65) = v7;
  sub_23DF985F0(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  if (a1 != a2)
  {
    v20 = *(int *)(a3 + 20);
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    sub_23E066574(a1 + v20);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23E135D60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_23E0667AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0667B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E06683C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E066848(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ControlBackgroundView()
{
  uint64_t result;

  result = qword_256D23280;
  if (!qword_256D23280)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E066904()
{
  unint64_t v0;

  sub_23DF9A874();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23E066984()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23E066994@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  int v9;
  __int128 v10;
  __int128 v11;
  uint64_t KeyPath;
  double result;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  _QWORD v20[10];
  _OWORD v21[4];
  uint64_t v22;
  __int16 v23;
  char v24;
  _OWORD v25[4];
  __int16 v26;
  _OWORD v27[4];
  __int16 v28;

  v2 = v1;
  v4 = type metadata accessor for ControlBackgroundView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_OWORD *)(v1 + 48);
  v27[2] = *(_OWORD *)(v1 + 32);
  v27[3] = v7;
  v28 = *(_WORD *)(v1 + 64);
  v8 = *(_OWORD *)(v1 + 16);
  v27[0] = *(_OWORD *)v1;
  v27[1] = v8;
  sub_23DF98EC8((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v21);
  sub_23DF98EC8((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v9 = LOBYTE(v21[0]);
  sub_23E066BB0(v2, (uint64_t)v6);
  if (v9 == 1)
  {
    sub_23E066BF4((uint64_t)v6);
  }
  else
  {
    v10 = *((_OWORD *)v6 + 3);
    v25[2] = *((_OWORD *)v6 + 2);
    v25[3] = v10;
    v26 = *((_WORD *)v6 + 32);
    v11 = *((_OWORD *)v6 + 1);
    v25[0] = *(_OWORD *)v6;
    v25[1] = v11;
    sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)v21);
    sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    sub_23E066BF4((uint64_t)v6);
    if (v22 != 3)
    {
      KeyPath = swift_getKeyPath();
      v20[0] = 2;
      v20[1] = KeyPath;
      memset(&v20[2], 0, 58);
      BYTE2(v20[9]) = 1;
      sub_23E057338();
      goto LABEL_6;
    }
  }
  v20[0] = *(_QWORD *)(v2 + *(int *)(v4 + 24));
  memset(&v20[1], 0, 67);
  sub_23E057338();
  swift_retain();
LABEL_6:
  sub_23E136480();
  result = *(double *)v21;
  v14 = v21[1];
  v15 = v21[2];
  v16 = v21[3];
  v17 = v22;
  v18 = v23;
  v19 = v24;
  *(_OWORD *)a1 = v21[0];
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 64) = v17;
  *(_WORD *)(a1 + 72) = v18;
  *(_BYTE *)(a1 + 74) = v19;
  return result;
}

uint64_t sub_23E066BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlBackgroundView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E066BF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlBackgroundView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E066C3C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256D232C0;
  if (!qword_256D232C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D232C8);
    v2 = sub_23E057338();
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D232C0);
  }
  return result;
}

uint64_t Device.init(id:name:icon:iconString:roomName:roomIds:isFavorite:showInDashboard:isTopLevelDevice:isActivated:foregroundColor:isReachable:tileStatusString:accessoryControlStatusString:tileStatusStringIconSymbolSuffix:hasDetailAttentionMessages:supportsToggle:secondaryStatusString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24,uint64_t a25,uint64_t a26)
{
  int *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t result;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;

  v29 = (int *)type metadata accessor for Device();
  v30 = (_QWORD *)(a9 + v29[7]);
  v31 = (_QWORD *)(a9 + v29[8]);
  v32 = v29[12];
  v33 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a9, a1, v33);
  v34 = (_QWORD *)(a9 + v29[5]);
  *v34 = a2;
  v34[1] = a3;
  result = sub_23E066EE4(a4, a9 + v29[6]);
  *v30 = a5;
  v30[1] = a6;
  *(_BYTE *)(a9 + v29[10]) = a11;
  *(_BYTE *)(a9 + v29[11]) = a12;
  *(_BYTE *)(a9 + v32) = a13;
  *(_BYTE *)(a9 + v29[13]) = a14;
  *(_QWORD *)(a9 + v29[14]) = a15;
  *(_BYTE *)(a9 + v29[15]) = a16;
  v36 = (_QWORD *)(a9 + v29[16]);
  *v36 = a17;
  v36[1] = a18;
  v37 = (_QWORD *)(a9 + v29[17]);
  *v37 = a19;
  v37[1] = a20;
  v38 = (_QWORD *)(a9 + v29[18]);
  *v38 = a21;
  v38[1] = a22;
  *v31 = a7;
  v31[1] = a8;
  *(_QWORD *)(a9 + v29[9]) = a10;
  *(_BYTE *)(a9 + v29[19]) = a23;
  *(_BYTE *)(a9 + v29[20]) = a24;
  v39 = (_QWORD *)(a9 + v29[21]);
  *v39 = a25;
  v39[1] = a26;
  return result;
}

uint64_t type metadata accessor for Device()
{
  uint64_t result;

  result = qword_256D23348;
  if (!qword_256D23348)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E066EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IconDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Device.displayName.getter()
{
  return sub_23E067D60((uint64_t (*)(uint64_t))MEMORY[0x24BE4E398]);
}

uint64_t Device.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Device.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Device() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Device.name.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Device();
  return sub_23DF73E10(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
}

uint64_t Device.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Device() + 24);
  return sub_23E067080(a1, v3);
}

uint64_t sub_23E067080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IconDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Device.icon.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.iconString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.iconString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Device() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Device.iconString.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.roomName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Device() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Device.roomName.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.roomIds.getter()
{
  type metadata accessor for Device();
  return swift_bridgeObjectRetain();
}

uint64_t Device.roomIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Device() + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Device.roomIds.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 40));
}

uint64_t Device.isFavorite.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Device();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*Device.isFavorite.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.showInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 44));
}

uint64_t Device.showInDashboard.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Device();
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*Device.showInDashboard.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.isTopLevelDevice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 48));
}

uint64_t Device.isTopLevelDevice.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Device();
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*Device.isTopLevelDevice.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.isActivated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 52));
}

uint64_t Device.isActivated.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Device();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*Device.isActivated.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.foregroundColor.getter()
{
  type metadata accessor for Device();
  return swift_retain();
}

uint64_t Device.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 60));
}

uint64_t Device.tileStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.accessoryControlStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.hasDetailAttentionMessages.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 76));
}

uint64_t Device.hasDetailAttentionMessages.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Device();
  *(_BYTE *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

uint64_t (*Device.hasDetailAttentionMessages.modify())(_QWORD)
{
  type metadata accessor for Device();
  return CGPointMake;
}

uint64_t Device.supportsToggle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device() + 80));
}

uint64_t Device.secondaryStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;

  v2 = v1;
  sub_23E134C80();
  sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E13711C();
  v4 = (int *)type metadata accessor for Device();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  sub_23E1371C4();
  type metadata accessor for IconDescriptor();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  sub_23E13711C();
  if (*(_QWORD *)(v1 + v4[7] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (*(_QWORD *)(v1 + v4[8] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  v5 = *(_QWORD *)(v1 + v4[9]);
  swift_bridgeObjectRetain();
  sub_23E067E40(a1, v5);
  swift_bridgeObjectRelease();
  sub_23E1376B0();
  sub_23E1376B0();
  if (*(_BYTE *)(v2 + v4[12]) != 2)
    sub_23E1376B0();
  sub_23E1376B0();
  sub_23E1376B0();
  swift_retain();
  sub_23E136C18();
  swift_release();
  sub_23E1376B0();
  if (*(_QWORD *)(v2 + v4[16] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (*(_QWORD *)(v2 + v4[17] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (*(_QWORD *)(v2 + v4[18] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  sub_23E1376B0();
  sub_23E1376B0();
  if (!*(_QWORD *)(v2 + v4[21] + 8))
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t Device.hashValue.getter()
{
  __int128 v1[4];

  sub_23E137698();
  Device.hash(into:)(v1);
  return sub_23E1376D4();
}

uint64_t sub_23E067A50()
{
  __int128 v1[4];

  sub_23E137698();
  Device.hash(into:)(v1);
  return sub_23E1376D4();
}

uint64_t sub_23E067A90()
{
  __int128 v1[4];

  sub_23E137698();
  Device.hash(into:)(v1);
  return sub_23E1376D4();
}

uint64_t sub_23E067AC8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v0 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E134C80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for Device();
  __swift_allocate_value_buffer((uint64_t)v7, qword_256D232D0);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_256D232D0);
  sub_23E134C74();
  v9 = &v2[*(int *)(v0 + 20)];
  v10 = *MEMORY[0x24BE4E598];
  v11 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  strcpy(v2, "questionmark");
  v2[13] = 0;
  *((_WORD *)v2 + 7) = -5120;
  v12 = sub_23E136C24();
  v13 = (_QWORD *)(v8 + v7[7]);
  v14 = (_QWORD *)(v8 + v7[8]);
  v15 = v7[12];
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v6, v3);
  v16 = v8 + v7[5];
  strcpy((char *)v16, "Empty Device");
  *(_BYTE *)(v16 + 13) = 0;
  *(_WORD *)(v16 + 14) = -5120;
  result = sub_23E066EE4((uint64_t)v2, v8 + v7[6]);
  *v13 = 0;
  v13[1] = 0;
  *(_BYTE *)(v8 + v7[10]) = 0;
  *(_BYTE *)(v8 + v7[11]) = 0;
  *(_BYTE *)(v8 + v15) = 2;
  *(_BYTE *)(v8 + v7[13]) = 0;
  *(_QWORD *)(v8 + v7[14]) = v12;
  *(_BYTE *)(v8 + v7[15]) = 0;
  v18 = (_QWORD *)(v8 + v7[16]);
  *v18 = 0;
  v18[1] = 0;
  v19 = (_QWORD *)(v8 + v7[17]);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)(v8 + v7[18]);
  *v20 = 0;
  v20[1] = 0;
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)(v8 + v7[9]) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v8 + v7[19]) = 0;
  *(_BYTE *)(v8 + v7[20]) = 0;
  v21 = (_QWORD *)(v8 + v7[21]);
  *v21 = 0;
  v21[1] = 0;
  return result;
}

uint64_t static Device.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D1D3A8 != -1)
    swift_once();
  v2 = type metadata accessor for Device();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D232D0);
  return sub_23DF73E10(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for Device);
}

uint64_t Device.displayRoomName.getter()
{
  return sub_23E067D60(MEMORY[0x24BE4E3A0]);
}

uint64_t sub_23E067D60(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_23E135700();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Device();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_23E1356F4();
  v7 = a1(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_23E067E40(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v31 = *a1;
  v32 = v12;
  v13 = a1[2];
  v14 = a1[3];
  v29[1] = a1;
  v33 = v13;
  v34 = v14;
  v35 = v11;
  v29[2] = sub_23E1376D4();
  v30 = a2;
  v15 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      goto LABEL_19;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v28 = sub_23E137110();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v18)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v22++, 1))
      goto LABEL_21;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    if (!v26)
      break;
LABEL_14:
    v18 = (v26 - 1) & v26;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v19)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_23E1376A4();
  }
  v26 = *(_QWORD *)(v15 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

BOOL _s22HomeAccessoryControlUI6DeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;

  if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Device();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_23E137614(), result = 0, (v10 & 1) != 0))
  {
    v12 = v4[6];
    v13 = *(_QWORD *)(a1 + v12) == *(_QWORD *)(a2 + v12) && *(_QWORD *)(a1 + v12 + 8) == *(_QWORD *)(a2 + v12 + 8);
    if (v13 || (v14 = sub_23E137614(), result = 0, (v14 & 1) != 0))
    {
      type metadata accessor for IconDescriptor();
      if ((sub_23E135904() & 1) != 0)
      {
        v15 = v4[7];
        v16 = (_QWORD *)(a1 + v15);
        v17 = *(_QWORD *)(a1 + v15 + 8);
        v18 = (_QWORD *)(a2 + v15);
        v19 = v18[1];
        if (v17)
        {
          if (!v19)
            return 0;
          if (*v16 != *v18 || v17 != v19)
          {
            v21 = sub_23E137614();
            result = 0;
            if ((v21 & 1) == 0)
              return result;
          }
        }
        else if (v19)
        {
          return 0;
        }
        v22 = v4[8];
        v23 = (_QWORD *)(a1 + v22);
        v24 = *(_QWORD *)(a1 + v22 + 8);
        v25 = (_QWORD *)(a2 + v22);
        v26 = v25[1];
        if (v24)
        {
          if (!v26)
            return 0;
          if (*v23 != *v25 || v24 != v26)
          {
            v27 = sub_23E137614();
            result = 0;
            if ((v27 & 1) == 0)
              return result;
          }
        }
        else if (v26)
        {
          return 0;
        }
        if ((sub_23E1230F4(*(_QWORD *)(a1 + v4[9]), *(_QWORD *)(a2 + v4[9])) & 1) == 0
          || *(unsigned __int8 *)(a1 + v4[10]) != *(unsigned __int8 *)(a2 + v4[10])
          || *(unsigned __int8 *)(a1 + v4[11]) != *(unsigned __int8 *)(a2 + v4[11]))
        {
          return 0;
        }
        v28 = v4[12];
        v29 = *(unsigned __int8 *)(a1 + v28);
        v30 = *(unsigned __int8 *)(a2 + v28);
        if (v29 == 2)
        {
          if (v30 != 2)
            return 0;
        }
        else
        {
          result = 0;
          v31 = (v29 & 1) == 0;
          if (v30 == 2 || ((v31 ^ v30) & 1) == 0)
            return result;
        }
        if (*(unsigned __int8 *)(a1 + v4[13]) != *(unsigned __int8 *)(a2 + v4[13])
          || (sub_23E136BDC() & 1) == 0
          || *(unsigned __int8 *)(a1 + v4[15]) != *(unsigned __int8 *)(a2 + v4[15]))
        {
          return 0;
        }
        v32 = v4[16];
        v33 = (_QWORD *)(a1 + v32);
        v34 = *(_QWORD *)(a1 + v32 + 8);
        v35 = (_QWORD *)(a2 + v32);
        v36 = v35[1];
        if (v34)
        {
          if (!v36)
            return 0;
          if (*v33 != *v35 || v34 != v36)
          {
            v37 = sub_23E137614();
            result = 0;
            if ((v37 & 1) == 0)
              return result;
          }
        }
        else if (v36)
        {
          return 0;
        }
        v38 = v4[17];
        v39 = (_QWORD *)(a1 + v38);
        v40 = *(_QWORD *)(a1 + v38 + 8);
        v41 = (_QWORD *)(a2 + v38);
        v42 = v41[1];
        if (v40)
        {
          if (!v42)
            return 0;
          if (*v39 != *v41 || v40 != v42)
          {
            v43 = sub_23E137614();
            result = 0;
            if ((v43 & 1) == 0)
              return result;
          }
        }
        else if (v42)
        {
          return 0;
        }
        v44 = v4[18];
        v45 = (_QWORD *)(a1 + v44);
        v46 = *(_QWORD *)(a1 + v44 + 8);
        v47 = (_QWORD *)(a2 + v44);
        v48 = v47[1];
        if (v46)
        {
          if (!v48)
            return 0;
          if (*v45 != *v47 || v46 != v48)
          {
            v49 = sub_23E137614();
            result = 0;
            if ((v49 & 1) == 0)
              return result;
          }
        }
        else if (v48)
        {
          return 0;
        }
        if (*(unsigned __int8 *)(a1 + v4[19]) != *(unsigned __int8 *)(a2 + v4[19])
          || *(unsigned __int8 *)(a1 + v4[20]) != *(unsigned __int8 *)(a2 + v4[20]))
        {
          return 0;
        }
        v50 = v4[21];
        v51 = (_QWORD *)(a1 + v50);
        v52 = *(_QWORD *)(a1 + v50 + 8);
        v53 = (_QWORD *)(a2 + v50);
        v54 = v53[1];
        if (v52)
          return v54 && (*v51 == *v53 && v52 == v54 || (sub_23E137614() & 1) != 0);
        if (!v54)
          return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E068450()
{
  return sub_23DF73F28(&qword_256D232E8, (uint64_t (*)(uint64_t))type metadata accessor for Device, (uint64_t)&protocol conformance descriptor for Device);
}

_QWORD *initializeBufferWithCopyOfBuffer for Device(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v49 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v49 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)((char *)a2 + v9 + 8);
    *v13 = *(_QWORD *)((char *)a2 + v9);
    v13[1] = v15;
    v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v17 = (char *)v13 + v16;
    v18 = &v14[v16];
    v19 = sub_23E135910();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    v21 = a3[7];
    v22 = a3[8];
    v23 = (_QWORD *)((char *)a1 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)((char *)a1 + v22);
    v27 = (_QWORD *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
    v32 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    v33 = (_QWORD *)((char *)a1 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = a3[17];
    v37 = a3[18];
    v38 = (_QWORD *)((char *)a1 + v36);
    v39 = (_QWORD *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (_QWORD *)((char *)a1 + v37);
    v42 = (_QWORD *)((char *)a2 + v37);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = a3[20];
    *((_BYTE *)a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
    v45 = a3[21];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Device(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v7 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Device(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 8);
  *v12 = *(_QWORD *)(a2 + v8);
  v12[1] = v14;
  v15 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_23E135910();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v20 = a3[7];
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)(a1 + v21);
  v26 = (_QWORD *)(a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v31 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[17];
  v36 = a3[18];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = (_QWORD *)(a1 + v36);
  v41 = (_QWORD *)(a2 + v36);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v44 = a3[21];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Device(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v14 = (char *)v11 + v13;
  v15 = v12 + v13;
  v16 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v23 = a3[16];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[18];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  v32 = a3[21];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Device(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v10 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  v20 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  return a1;
}

uint64_t assignWithTake for Device(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;

  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v17 = (char *)v13 + v16;
  v18 = v14 + v16;
  v19 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v30 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_release();
  v32 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = a3[17];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = a3[18];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  v47 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  v48 = a3[21];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Device()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E068EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for IconDescriptor();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for Device()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E068FB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23E134C80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for IconDescriptor();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E069058()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for IconDescriptor();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *_s13FavoritesViewVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t _s13FavoritesViewVwxx()
{
  return swift_release();
}

_QWORD *_s13FavoritesViewVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s13FavoritesViewVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *_s13FavoritesViewVMa()
{
  return &_s13FavoritesViewVN;
}

uint64_t sub_23E0691E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0691F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;

  sub_23E135E80();
  v7 = v6;
  if (qword_256D1D3B0 != -1)
    swift_once();
  v8 = *(double *)&qword_256D346C8;
  v9 = sub_23E06B830(v7, 10.0);
  v10 = 0.0;
  if (v9 >= 2)
  {
    if (v7 > v8)
      v11 = v7;
    else
      v11 = v8;
    v10 = (v11 + (double)v9 * -30.0) / ((double)v9 + -1.0);
  }
  sub_23E135E80();
  sub_23E06B8EC(v12);
  v14 = v13;
  v15 = sub_23E135E80();
  sub_23E0693DC(v16, v10, v15, a2);
  *(_QWORD *)a3 = sub_23E136FE4();
  *(_QWORD *)(a3 + 8) = v17;
  *(double *)(a3 + 16) = v10;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = v14;
  *(_BYTE *)(a3 + 40) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D233C0);
  swift_getKeyPath();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D233C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D233D0);
  sub_23DF89B88(&qword_256D233D8, &qword_256D233C8, MEMORY[0x24BEE12D8]);
  sub_23E06B968();
  sub_23DF89B88(&qword_256D233F8, &qword_256D233D0, MEMORY[0x24BDF4A68]);
  return sub_23E136F0C();
}

uint64_t sub_23E0693DC(double a1, double a2, uint64_t a3, uint64_t a4)
{
  int64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t i;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int16 v85;
  char v86;

  v8 = sub_23E134D7C();
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v69 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23E135124();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v63 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E134DF4();
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v64 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s17FavoriteColorCellV5ValueOMa(0);
  v75 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v61 = (unint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v62 = (char *)&v61 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v61 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v80 = (uint64_t)&v61 - v21;
  v83 = sub_23E1358D4();
  v22 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v82 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D234B8);
  v78 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v72 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D234C0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (unint64_t *)((char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v61 - v30;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain_n();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v32 = v84;
  v33 = a4 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig;
  v34 = *(_QWORD *)(a4 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig);
  if (v34 == 2)
  {
    swift_release();
  }
  else
  {
    v35 = *(_BYTE *)(v33 + 10);
    v36 = *(_WORD *)(v33 + 8);
    LOWORD(v84) = v34 & 0x101;
    BYTE2(v84) = BYTE2(v34) & 1;
    WORD2(v84) = WORD2(v34);
    BYTE6(v84) = BYTE6(v34) & 1;
    v85 = v36;
    v86 = v35 & 1;
    v37 = sub_23E0BD61C(v32);
    swift_release();
    swift_bridgeObjectRelease();
    v32 = v37;
  }
  v77 = sub_23E06B830(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D234C8);
  v38 = swift_allocObject();
  v39 = MEMORY[0x24BEE4AF8];
  *(_OWORD *)(v38 + 16) = xmmword_23E138410;
  *(_QWORD *)(v38 + 32) = v39;
  v81 = v38 + 32;
  v79 = v38;
  *(_QWORD *)(v38 + 40) = v39;
  v40 = *(_QWORD *)(v32 + 16);
  v73 = v32;
  swift_bridgeObjectRetain();
  i = 0;
  v74 = v20;
  if (v40)
    goto LABEL_6;
LABEL_5:
  v42 = 1;
  for (i = v40; ; ++i)
  {
    v45 = v78;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v29, v42, 1, v24);
    sub_23DF89340((uint64_t)v29, (uint64_t)v31, &qword_256D234C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v31, 1, v24) == 1)
      goto LABEL_22;
    v46 = *(_QWORD *)v31;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v82, &v31[*(int *)(v24 + 48)], v83);
    if (!v77)
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v46 == 0x8000000000000000 && v77 == -1)
      goto LABEL_38;
    v4 = (int64_t)v29;
    v47 = v46 / v77;
    if (v46 / v77 >= 2)
      break;
    if ((v47 & 0x8000000000000000) != 0)
      goto LABEL_35;
    if (v47 >= *(_QWORD *)(v79 + 16))
      goto LABEL_36;
    v48 = v80;
    v32 = *(_QWORD *)(v81 + 8 * v47);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v80, v82, v83);
    swift_storeEnumTagMultiPayload();
    sub_23DF73E10(v48, (uint64_t)v20, _s17FavoriteColorCellV5ValueOMa);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_23E008064(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
    v50 = *(_QWORD *)(v32 + 16);
    v49 = *(_QWORD *)(v32 + 24);
    if (v50 >= v49 >> 1)
      v32 = sub_23E008064(v49 > 1, v50 + 1, 1, v32);
    *(_QWORD *)(v32 + 16) = v50 + 1;
    v51 = v32
        + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))
        + *(_QWORD *)(v75 + 72) * v50;
    v20 = v74;
    sub_23E06BD5C((uint64_t)v74, v51);
    v52 = 8 * v47;
    v53 = v81;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v53 + v52) = v32;
    sub_23DF73E54(v80, _s17FavoriteColorCellV5ValueOMa);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v82, v83);
    v29 = (_QWORD *)v4;
    if (i == v40)
      goto LABEL_5;
LABEL_6:
    if (i >= *(_QWORD *)(v73 + 16))
      goto LABEL_37;
    v32 = i + 1;
    v43 = &v72[*(int *)(v24 + 48)];
    v4 = v83;
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v43, v73+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * i, v83);
    v44 = (char *)v29 + *(int *)(v24 + 48);
    *v29 = i;
    (*(void (**)(char *, char *, int64_t))(v22 + 32))(v44, v43, v4);
    v42 = 0;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v82, v83);
LABEL_22:
  v54 = v73;
  swift_bridgeObjectRelease();
  sub_23E134DC4();
  v55 = (void *)sub_23E134DB8();
  v56 = v63;
  sub_23E134D88();

  v57 = v69;
  sub_23E1350DC();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v56, v66);
  v22 = (unint64_t)v64;
  sub_23E134D58();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v71);
  LOBYTE(v57) = sub_23E134DD0();
  (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v22, v68);
  if ((v57 & 1) != 0)
  {
    v32 = (uint64_t)v62;
    swift_storeEnumTagMultiPayload();
    v4 = *(_QWORD *)(v54 + 16);
    swift_bridgeObjectRelease();
    if (v77)
    {
      v22 = v4 / v77;
      if (v4 / v77 > 1)
        goto LABEL_31;
      i = v61;
      sub_23DF73E10(v32, v61, _s17FavoriteColorCellV5ValueOMa);
      if ((v22 & 0x8000000000000000) == 0)
      {
        if (v22 < *(_QWORD *)(v79 + 16))
        {
          v4 = *(_QWORD *)(v81 + 8 * v22);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_28;
          goto LABEL_42;
        }
LABEL_41:
        __break(1u);
LABEL_42:
        v4 = sub_23E008064(0, *(_QWORD *)(v4 + 16) + 1, 1, v4);
        *(_QWORD *)(v81 + 8 * v22) = v4;
LABEL_28:
        v59 = *(_QWORD *)(v4 + 16);
        v58 = *(_QWORD *)(v4 + 24);
        if (v59 >= v58 >> 1)
        {
          v4 = sub_23E008064(v58 > 1, v59 + 1, 1, v4);
          *(_QWORD *)(v81 + 8 * v22) = v4;
        }
        *(_QWORD *)(v4 + 16) = v59 + 1;
        sub_23E06BD5C(i, v4+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(_QWORD *)(v75 + 72) * v59);
LABEL_31:
        sub_23DF73E54(v32, _s17FavoriteColorCellV5ValueOMa);
        return v79;
      }
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  return v79;
}

uint64_t sub_23E069BD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;

  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D233D0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D233E8);
  _s17FavoriteColorCellV5ValueOMa(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23400);
  sub_23DF89B88(&qword_256D23408, &qword_256D233E8, MEMORY[0x24BEE12D8]);
  sub_23E06B9EC();
  sub_23DF73F28(&qword_256D23480, _s17FavoriteColorCellV5ValueOMa, (uint64_t)&unk_23E141268);
  return sub_23E136F18();
}

uint64_t sub_23E069D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t (*v37)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  char v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t OpaqueTypeConformance2;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;

  v118 = a2;
  v119 = a3;
  v126 = a4;
  v127 = a1;
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6E8);
  MEMORY[0x24BDAC7A8](v124);
  v97 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23488);
  v100 = *(_QWORD *)(v125 - 8);
  v5 = MEMORY[0x24BDAC7A8](v125);
  v96 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v98 = (char *)&v89 - v7;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23490);
  MEMORY[0x24BDAC7A8](v121);
  v123 = (uint64_t)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23498);
  MEMORY[0x24BDAC7A8](v117);
  v115 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23420);
  MEMORY[0x24BDAC7A8](v122);
  v120 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_23E136570();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v110 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = _s17FavoriteColorCellVMa(0);
  MEMORY[0x24BDAC7A8](v114);
  v13 = (uint64_t *)((char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23440);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v99 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23438);
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v103 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D234A0);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v107 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23430);
  v17 = MEMORY[0x24BDAC7A8](v116);
  v105 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v113 = (uint64_t)&v89 - v19;
  v94 = sub_23E135328();
  v93 = *(_QWORD *)(v94 - 8);
  v20 = MEMORY[0x24BDAC7A8](v94);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v89 - v23;
  v25 = sub_23E1358D4();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v95 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v89 - v29;
  v31 = _s17FavoriteColorCellV5ValueOMa(0);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v89 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v89 - v35;
  sub_23DF73E10(v127, (uint64_t)&v89 - v35, v37);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_storeEnumTagMultiPayload();
      sub_23E06BAF4();
      v39 = (uint64_t)v120;
      sub_23E136480();
      sub_23DF89C1C(v39, v123, &qword_256D23420);
      swift_storeEnumTagMultiPayload();
      sub_23E06BA88();
      v40 = sub_23E06BCD0();
      *(_QWORD *)&v130 = v124;
      *((_QWORD *)&v130 + 1) = v40;
      swift_getOpaqueTypeConformance2();
      sub_23E136480();
      sub_23DF89C7C(v39, &qword_256D23420);
      return sub_23DF73E54((uint64_t)v36, _s17FavoriteColorCellV5ValueOMa);
    }
    else
    {
      sub_23DF73E10(v127, (uint64_t)v34, _s17FavoriteColorCellV5ValueOMa);
      *v13 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
      swift_storeEnumTagMultiPayload();
      v77 = v114;
      sub_23E06BD5C((uint64_t)v34, (uint64_t)v13 + *(int *)(v114 + 20));
      *((_BYTE *)v13 + *(int *)(v77 + 24)) = 0;
      sub_23E136FE4();
      sub_23E135E5C();
      v78 = v97;
      sub_23DF73E10((uint64_t)v13, v97, _s17FavoriteColorCellVMa);
      v79 = v124;
      v80 = (_OWORD *)(v78 + *(int *)(v124 + 36));
      v81 = v131;
      *v80 = v130;
      v80[1] = v81;
      v80[2] = v132;
      sub_23DF73E54((uint64_t)v13, _s17FavoriteColorCellVMa);
      v82 = swift_allocObject();
      v83 = v119;
      *(_QWORD *)(v82 + 16) = v118;
      *(_QWORD *)(v82 + 24) = v83;
      v84 = sub_23E06BCD0();
      swift_retain();
      v85 = v96;
      sub_23E1369CC();
      swift_release();
      sub_23DF89C7C(v78, &qword_256D1F6E8);
      v86 = v100;
      v87 = v98;
      v88 = v125;
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v98, v85, v125);
      (*(void (**)(uint64_t, char *, uint64_t))(v86 + 16))(v123, v87, v88);
      swift_storeEnumTagMultiPayload();
      sub_23E06BA88();
      v128 = v79;
      v129 = v84;
      swift_getOpaqueTypeConformance2();
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    }
  }
  else
  {
    v100 = *(_QWORD *)(v26 + 32);
    v92 = v25;
    ((void (*)(char *, char *, uint64_t))v100)(v30, v36, v25);
    swift_getKeyPath();
    swift_getKeyPath();
    v42 = v119;
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v43 = round(*(double *)&v130 * 100.0) / 100.0;
    v91 = v30;
    sub_23E1358A4();
    v45 = round(v44 * 100.0) / 100.0;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    sub_23E1358C8();
    v46 = sub_23E13531C();
    v47 = *(void (**)(char *, uint64_t))(v93 + 8);
    v48 = v22;
    v49 = v94;
    v47(v48, v94);
    v47(v24, v49);
    sub_23DF73E10(v127, (uint64_t)v34, _s17FavoriteColorCellV5ValueOMa);
    *v13 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    swift_storeEnumTagMultiPayload();
    v50 = v114;
    sub_23E06BD5C((uint64_t)v34, (uint64_t)v13 + *(int *)(v114 + 20));
    *((_BYTE *)v13 + *(int *)(v50 + 24)) = v46 & (v43 == v45);
    v90 = v26;
    v51 = v95;
    v52 = v92;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v95, v91, v92);
    v53 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v54 = swift_allocObject();
    v55 = v118;
    *(_QWORD *)(v54 + 16) = v118;
    *(_QWORD *)(v54 + 24) = v42;
    ((void (*)(unint64_t, char *, uint64_t))v100)(v54 + v53, v51, v52);
    v56 = sub_23DF73F28(&qword_256D23450, _s17FavoriteColorCellVMa, (uint64_t)&unk_23E1412A0);
    swift_retain();
    v57 = v99;
    sub_23E1369CC();
    swift_release();
    v58 = sub_23DF73E54((uint64_t)v13, _s17FavoriteColorCellVMa);
    MEMORY[0x24BDAC7A8](v58);
    *(&v89 - 4) = v55;
    *(&v89 - 3) = v42;
    v59 = v91;
    *(&v89 - 2) = (uint64_t)v91;
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23448);
    *(_QWORD *)&v130 = v50;
    *((_QWORD *)&v130 + 1) = v56;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v62 = sub_23E06BC54();
    v63 = v103;
    v64 = v102;
    sub_23E136984();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v57, v64);
    v65 = v110;
    sub_23E136564();
    *(_QWORD *)&v130 = v64;
    *((_QWORD *)&v130 + 1) = v60;
    *(_QWORD *)&v131 = OpaqueTypeConformance2;
    *((_QWORD *)&v131 + 1) = v62;
    swift_getOpaqueTypeConformance2();
    sub_23DF73F28(&qword_256D23470, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFE38], MEMORY[0x24BDEFE28]);
    v66 = v107;
    v67 = v106;
    v68 = v112;
    sub_23E13696C();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v65, v68);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v63, v67);
    sub_23E136FE4();
    sub_23E135E5C();
    v69 = v108;
    v70 = (uint64_t)v105;
    v71 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v66, v109);
    v72 = (_OWORD *)(v70 + *(int *)(v116 + 36));
    v73 = v131;
    *v72 = v130;
    v72[1] = v73;
    v72[2] = v132;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v71);
    v74 = v113;
    sub_23DF89340(v70, v113, &qword_256D23430);
    sub_23DF89C1C(v74, v115, &qword_256D23430);
    swift_storeEnumTagMultiPayload();
    sub_23E06BAF4();
    v75 = (uint64_t)v120;
    sub_23E136480();
    sub_23DF89C1C(v75, v123, &qword_256D23420);
    swift_storeEnumTagMultiPayload();
    sub_23E06BA88();
    v76 = sub_23E06BCD0();
    v128 = v124;
    v129 = v76;
    swift_getOpaqueTypeConformance2();
    sub_23E136480();
    sub_23DF89C7C(v75, &qword_256D23420);
    sub_23DF89C7C(v74, &qword_256D23430);
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v59, v92);
  }
}

uint64_t sub_23E06AA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_23E135328();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v10 - v5;
  swift_retain();
  sub_23E1358C8();
  sub_23E0BE4A0((uint64_t)v6);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_retain();
  sub_23E135C88();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  swift_release();
  swift_retain();
  sub_23E1358A4();
  v8 = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  v10[1] = v8;
  swift_retain();
  sub_23E135C88();
  sub_23E0BE024();
  return swift_release();
}

uint64_t sub_23E06ABD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a3;
  v39 = a2;
  v40 = a4;
  v36 = a1;
  v38 = sub_23E1358D4();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v32[1] = v4;
  v34 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22738);
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E134D7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E135124();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E134DF4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E134DC4();
  v19 = (void *)sub_23E134DB8();
  sub_23E134D88();

  sub_23E1350DC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_23E134D58();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  LOBYTE(v14) = sub_23E134DD0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if ((v14 & 1) != 0)
  {
    v20 = v37;
    sub_23E135CE8();
    v21 = sub_23E135CF4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
    v23 = v34;
    v22 = v35;
    v24 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v33, v38);
    v25 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v26 = swift_allocObject();
    v27 = v39;
    *(_QWORD *)(v26 + 16) = v36;
    *(_QWORD *)(v26 + 24) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v26 + v25, v23, v24);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D234A8);
    sub_23DF89B88(&qword_256D234B0, &qword_256D234A8, MEMORY[0x24BDF41A8]);
    v28 = v40;
    sub_23E136DE0();
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23468);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  else
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23468);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v40, 1, 1, v31);
  }
}

uint64_t sub_23E06AF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v7[2] = a3;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  result = sub_23E06B4D8((uint64_t (*)(unint64_t))sub_23E06BE98, (uint64_t)v7);
  v4 = *(_QWORD *)(v9 + 16);
  if (v4 < result)
  {
    __break(1u);
  }
  else
  {
    sub_23E097E44(result, v4);
    v5 = v9;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    v6 = sub_23E11D904(v8, v5);
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      sub_23E0C0E54(v5);
    swift_getKeyPath();
    swift_getKeyPath();
    v8 = v5;
    return sub_23E135C88();
  }
  return result;
}

uint64_t sub_23E06B060()
{
  sub_23E1371A0();
  sub_23DF8DC18();
  return sub_23E136D38();
}

uint64_t sub_23E06B0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23E1358D4();
  v23 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v22 - v4;
  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v24 = v12;
  v25 = v7;
  v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v26 = v6;
  v14 = v6;
  v15 = v3;
  v16 = v23;
  v13(v10, v12, v14);
  sub_23E1358BC();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v15, v5, v0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v17 = v27;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_23E008078(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  if (v19 >= v18 >> 1)
    v17 = sub_23E008078(v18 > 1, v19 + 1, 1, v17);
  *(_QWORD *)(v17 + 16) = v19 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v17+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v19, v15, v0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v20 = sub_23E11D904(v27, v17);
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
    sub_23E0C0E54(v17);
  swift_getKeyPath();
  swift_getKeyPath();
  v27 = v17;
  sub_23E135C88();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v24, v26);
}

void sub_23E06B44C()
{
  qword_256D346C8 = 0x4049000000000000;
}

uint64_t sub_23E06B45C@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v3 = v1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a1 = sub_23E06B4D0;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
  return swift_retain();
}

uint64_t sub_23E06B4AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E06B4D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0691F4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23E06B4D8(uint64_t (*a1)(unint64_t), uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *);
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)(unint64_t, char *, uint64_t);
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t (*v40)(unint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;

  v4 = v2;
  v7 = sub_23E1358D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)v39 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v46 = v4;
  v14 = *v4;
  v15 = *(_QWORD *)(*v4 + 16);
  if (!v15)
    return 0;
  v44 = (char *)v39 - v13;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v48 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  v17 = 0;
  v39[0] = v16;
  while (1)
  {
    v18 = a1(v14 + v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((v18 & 1) != 0)
      break;
    ++v17;
    v16 += v48;
    if (v15 == v17)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v14 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v17, 1))
  {
    v20 = *(_QWORD *)(v14 + 16);
    if (v17 + 1 == v20)
      return v17;
    v21 = v48 + v16;
    v22 = v17 + 1;
    v45 = v7;
    v39[1] = a2;
    v40 = a1;
    v43 = v8;
    while (v22 < v20)
    {
      v47 = v22;
      v23 = v21;
      v24 = v14 + v21;
      v25 = (uint64_t (*)(char *))a1;
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v27 = v44;
      v26(v44, v24, v7);
      LOBYTE(v25) = v25(v27);
      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v27, v7);
      if ((v25 & 1) != 0)
      {
        a1 = v40;
        v28 = v23;
        v29 = v47;
      }
      else
      {
        v29 = v47;
        v28 = v23;
        if (v47 != v17)
        {
          if ((v17 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v30 = *v46;
          v31 = *(_QWORD *)(*v46 + 16);
          if (v17 >= v31)
            goto LABEL_33;
          v32 = v17 * v48;
          v33 = v45;
          result = ((uint64_t (*)(char *, unint64_t, uint64_t))v26)(v41, v30 + v39[0] + v17 * v48, v45);
          if (v47 >= v31)
            goto LABEL_34;
          v26(v42, v30 + v23, v33);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v46 = v30;
          if ((result & 1) == 0)
          {
            result = sub_23E09EE48(v30);
            v30 = result;
            *v46 = result;
          }
          if (v17 >= *(_QWORD *)(v30 + 16))
            goto LABEL_35;
          v34 = v30 + v39[0] + v32;
          v35 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v43 + 40);
          v36 = v45;
          result = v35(v34, v42, v45);
          if (v47 >= *(_QWORD *)(*v46 + 16))
            goto LABEL_36;
          result = v35(*v46 + v23, v41, v36);
          v29 = v47;
        }
        v37 = __OFADD__(v17++, 1);
        a1 = v40;
        if (v37)
          goto LABEL_31;
      }
      v38 = v29 + 1;
      v7 = v45;
      v8 = v43;
      if (__OFADD__(v29, 1))
        goto LABEL_30;
      v14 = *v46;
      v20 = *(_QWORD *)(*v46 + 16);
      v22 = v29 + 1;
      v21 = v28 + v48;
      if (v38 == v20)
        return v17;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E06B830(double a1, double a2)
{
  double v4;
  double v5;
  uint64_t result;

  if (qword_256D1D3B0 != -1)
    result = swift_once();
  v4 = *(double *)&qword_256D346C8;
  if (*(double *)&qword_256D346C8 < a1)
    v4 = a1;
  v5 = round((v4 + a2) / (a2 + 30.0));
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if ((uint64_t)v5 >= 16)
    return 16;
  else
    return (uint64_t)v5;
}

void sub_23E06B8EC(double a1)
{
  double v1;

  v1 = (a1 + 10.0) / 40.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 >= 9.22337204e18)
LABEL_7:
    __break(1u);
}

uint64_t sub_23E06B960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E069BD8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23E06B968()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D233E0;
  if (!qword_256D233E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D233E8);
    v2 = sub_23DF73F28(&qword_256D233F0, _s17FavoriteColorCellV5ValueOMa, (uint64_t)&unk_23E1412F0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D233E0);
  }
  return result;
}

uint64_t sub_23E06B9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E069D14(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_23E06B9EC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[4];

  result = qword_256D23410;
  if (!qword_256D23410)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23400);
    v2 = sub_23E06BA88();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F6E8);
    v3[3] = sub_23E06BCD0();
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D23410);
  }
  return result;
}

unint64_t sub_23E06BA88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23418;
  if (!qword_256D23418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23420);
    v2[0] = sub_23E06BAF4();
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23418);
  }
  return result;
}

unint64_t sub_23E06BAF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_256D23428;
  if (!qword_256D23428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23430);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23438);
    v3 = sub_23E136570();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFE38];
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23440);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23448);
    _s17FavoriteColorCellVMa(255);
    sub_23DF73F28(&qword_256D23450, _s17FavoriteColorCellVMa, (uint64_t)&unk_23E1412A0);
    swift_getOpaqueTypeConformance2();
    sub_23E06BC54();
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = swift_getOpaqueTypeConformance2();
    v5[5] = sub_23DF73F28(&qword_256D23470, v4, MEMORY[0x24BDEFE28]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256D23428);
  }
  return result;
}

unint64_t sub_23E06BC54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D23458;
  if (!qword_256D23458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23448);
    v2 = sub_23DF89B88(&qword_256D23460, &qword_256D23468, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D23458);
  }
  return result;
}

unint64_t sub_23E06BCD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23478;
  if (!qword_256D23478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F6E8);
    v2[0] = sub_23DF73F28(&qword_256D23450, _s17FavoriteColorCellVMa, (uint64_t)&unk_23E1412A0);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23478);
  }
  return result;
}

uint64_t sub_23E06BD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17FavoriteColorCellV5ValueOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E06BDA0()
{
  return sub_23E06B0D0();
}

uint64_t sub_23E06BDBC()
{
  return sub_23E06BE58((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23E06AA50);
}

uint64_t sub_23E06BDC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23E06ABD8(v1[2], v1[3], v1[4], a1);
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E1358D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E06BE4C()
{
  return sub_23E06BE58(sub_23E06AF08);
}

uint64_t sub_23E06BE58(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E1358D4() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_23E06BE98(uint64_t a1)
{
  uint64_t v1;

  return MEMORY[0x24264A180](a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23E06BECC()
{
  return sub_23DF89B88(&qword_256D234D0, qword_256D234D8, MEMORY[0x24BDEC6F8]);
}

uint64_t *sub_23E06BF08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E136CFC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return v4;
}

uint64_t sub_23E06BFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E136CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

_QWORD *sub_23E06C01C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E136CFC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

_QWORD *sub_23E06C0AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E136CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23E06C14C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E136CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_23E06C1C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E136CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_23E06C24C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E06C258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E136CFC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23E06C2D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E06C2E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23E136CFC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t _s4KnobV10IconConfigVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D23538);
}

uint64_t sub_23E06C368()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E136CFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E06C3E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_QWORD *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(_QWORD *, _QWORD, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      v9 = _s4KnobV2IDOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
    v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    v12 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[9];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = _s4KnobV10IconConfigVMa(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48);
    swift_retain();
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = v15[1];
      *v14 = *v15;
      v14[1] = v20;
      v21 = *(int *)(v16 + 20);
      v22 = (char *)v14 + v21;
      v23 = (char *)v15 + v21;
      v24 = sub_23E136CFC();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      *(_QWORD *)((char *)v14 + *(int *)(v16 + 24)) = *(_QWORD *)((char *)v15 + *(int *)(v16 + 24));
      v26 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56);
      swift_retain();
      v26(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t _s4KnobV2IDOMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D23690);
}

uint64_t sub_23E06C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_release();
  v6 = a1 + *(int *)(a2 + 36);
  v7 = _s4KnobV10IconConfigVMa(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v9 = v6 + *(int *)(v7 + 20);
    v10 = sub_23E136CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    return swift_release();
  }
  return result;
}

char *sub_23E06C6B4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    v8 = _s4KnobV2IDOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[9];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s4KnobV10IconConfigVMa(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_retain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v18;
    v19 = *(int *)(v14 + 20);
    v20 = &v12[v19];
    v21 = &v13[v19];
    v22 = sub_23E136CFC();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    *(_QWORD *)&v12[*(int *)(v14 + 24)] = *(_QWORD *)&v13[*(int *)(v14 + 24)];
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
    swift_retain();
    v24(v12, 0, 1, v14);
  }
  return a1;
}

char *sub_23E06C860(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = _s4KnobV2IDOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_retain();
  swift_release();
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  v12 = a3[9];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = _s4KnobV10IconConfigVMa(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28 = *(int *)(v15 + 20);
      v29 = &v13[v28];
      v30 = &v14[v28];
      v31 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
      *(_QWORD *)&v13[*(int *)(v15 + 24)] = *(_QWORD *)&v14[*(int *)(v15 + 24)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_23DF73E54((uint64_t)v13, _s4KnobV10IconConfigVMa);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v20 = *(int *)(v15 + 20);
  v21 = &v13[v20];
  v22 = &v14[v20];
  v23 = sub_23E136CFC();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  *(_QWORD *)&v13[*(int *)(v15 + 24)] = *(_QWORD *)&v14[*(int *)(v15 + 24)];
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
  swift_retain();
  v25(v13, 0, 1, v15);
  return a1;
}

char *sub_23E06CB00(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    v8 = _s4KnobV2IDOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[9];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s4KnobV10IconConfigVMa(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v17 = *(int *)(v14 + 20);
    v18 = &v12[v17];
    v19 = &v13[v17];
    v20 = sub_23E136CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    *(_QWORD *)&v12[*(int *)(v14 + 24)] = *(_QWORD *)&v13[*(int *)(v14 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

char *sub_23E06CC8C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = _s4KnobV2IDOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release();
  v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v13] = a2[v13];
  v14 = a3[9];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = _s4KnobV10IconConfigVMa(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      v28 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v28;
      swift_bridgeObjectRelease();
      v29 = *(int *)(v17 + 20);
      v30 = &v15[v29];
      v31 = &v16[v29];
      v32 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
      *(_QWORD *)&v15[*(int *)(v17 + 24)] = *(_QWORD *)&v16[*(int *)(v17 + 24)];
      swift_release();
      return a1;
    }
    sub_23DF73E54((uint64_t)v15, _s4KnobV10IconConfigVMa);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v22 = *(int *)(v17 + 20);
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = sub_23E136CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_QWORD *)&v15[*(int *)(v17 + 24)] = *(_QWORD *)&v16[*(int *)(v17 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t sub_23E06CEE4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E06CEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = _s4KnobV2IDOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23E06CF9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E06CFA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = _s4KnobV2IDOMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s4KnobVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D235D0);
}

void sub_23E06D064()
{
  unint64_t v0;
  unint64_t v1;

  _s4KnobV2IDOMa(319);
  if (v0 <= 0x3F)
  {
    sub_23E06D110();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23E06D110()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D235E0)
  {
    _s4KnobV10IconConfigVMa(255);
    v0 = sub_23E1374A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D235E0);
  }
}

uint64_t *sub_23E06D164(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23E06D22C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_23E06D294(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23E06D338(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_23E06D428(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23E06D4CC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23E06D5BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E06D5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23E134C80();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23E06D614()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E06D620(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23E06D674(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23E06D6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23E06D6EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23E06D740(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  int *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  int *v35;
  uint64_t v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  void (*v63)(char *, _QWORD, uint64_t, uint64_t);
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  unsigned int (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t *, uint64_t, uint64_t);
  char *v71;
  char *v72;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v13 = sub_23E134C80();
        v14 = *(_QWORD *)(v13 - 8);
        v70 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
        v69 = v14;
        if (v70(a2, 2, v13))
        {
          v15 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
        }
        v27 = (int *)_s4KnobVMa(0);
        *(uint64_t *)((char *)a1 + v27[5]) = *(uint64_t *)((char *)a2 + v27[5]);
        *(uint64_t *)((char *)a1 + v27[6]) = *(uint64_t *)((char *)a2 + v27[6]);
        *((_BYTE *)a1 + v27[7]) = *((_BYTE *)a2 + v27[7]);
        *((_BYTE *)a1 + v27[8]) = *((_BYTE *)a2 + v27[8]);
        v28 = v27[9];
        v29 = (uint64_t *)((char *)a1 + v28);
        v30 = (uint64_t *)((char *)a2 + v28);
        v31 = _s4KnobV10IconConfigVMa(0);
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v32 + 48);
        swift_retain();
        if (v33(v30, 1, v31))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          v67 = v33;
          v44 = v30[1];
          *v29 = *v30;
          v29[1] = v44;
          v45 = *(int *)(v31 + 20);
          v65 = (char *)v30 + v45;
          v66 = (char *)v29 + v45;
          v68 = v32;
          v46 = sub_23E136CFC();
          v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
          v33 = v67;
          swift_bridgeObjectRetain();
          v47 = v46;
          v32 = v68;
          v64(v66, v65, v47);
          *(_QWORD *)((char *)v29 + *(int *)(v31 + 24)) = *(_QWORD *)((char *)v30 + *(int *)(v31 + 24));
          v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v68 + 56);
          swift_retain();
          v48(v29, 0, 1, v31);
        }
        v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        if (v70((uint64_t *)((char *)a2 + v49), 2, v13))
        {
          v52 = _s4KnobV2IDOMa(0);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v50, v51, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v50, 0, 2, v13);
        }
        *(_QWORD *)&v50[v27[5]] = *(_QWORD *)&v51[v27[5]];
        *(_QWORD *)&v50[v27[6]] = *(_QWORD *)&v51[v27[6]];
        v50[v27[7]] = v51[v27[7]];
        v50[v27[8]] = v51[v27[8]];
        v53 = v27[9];
        v54 = &v50[v53];
        v55 = &v51[v53];
        swift_retain();
        if (v33(v55, 1, v31))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v57 = *((_QWORD *)v55 + 1);
          *(_QWORD *)v54 = *(_QWORD *)v55;
          *((_QWORD *)v54 + 1) = v57;
          v58 = *(int *)(v31 + 20);
          v72 = &v54[v58];
          v59 = &v55[v58];
          v60 = sub_23E136CFC();
          v61 = v32;
          v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
          swift_bridgeObjectRetain();
          v62(v72, v59, v60);
          *(_QWORD *)&v54[*(int *)(v31 + 24)] = *(_QWORD *)&v55[*(int *)(v31 + 24)];
          v63 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
          swift_retain();
          v63(v54, 0, 1, v31);
        }
        goto LABEL_32;
      case 1:
        v16 = sub_23E134C80();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(a2, 2, v16))
        {
          v18 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v17 + 16))(a1, a2, v16);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 2, v16);
        }
        v35 = (int *)_s4KnobVMa(0);
        *(uint64_t *)((char *)a1 + v35[5]) = *(uint64_t *)((char *)a2 + v35[5]);
        *(uint64_t *)((char *)a1 + v35[6]) = *(uint64_t *)((char *)a2 + v35[6]);
        *((_BYTE *)a1 + v35[7]) = *((_BYTE *)a2 + v35[7]);
        *((_BYTE *)a1 + v35[8]) = *((_BYTE *)a2 + v35[8]);
        v36 = v35[9];
        v21 = (uint64_t *)((char *)a1 + v36);
        v22 = (uint64_t *)((char *)a2 + v36);
        v23 = _s4KnobV10IconConfigVMa(0);
        v24 = *(_QWORD *)(v23 - 8);
        v37 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
        swift_retain();
        if (v37(v22, 1, v23))
          goto LABEL_16;
        goto LABEL_23;
      case 0:
        v8 = sub_23E134C80();
        v9 = *(_QWORD *)(v8 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v8))
        {
          v10 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
        }
        v19 = (int *)_s4KnobVMa(0);
        *(uint64_t *)((char *)a1 + v19[5]) = *(uint64_t *)((char *)a2 + v19[5]);
        *(uint64_t *)((char *)a1 + v19[6]) = *(uint64_t *)((char *)a2 + v19[6]);
        *((_BYTE *)a1 + v19[7]) = *((_BYTE *)a2 + v19[7]);
        *((_BYTE *)a1 + v19[8]) = *((_BYTE *)a2 + v19[8]);
        v20 = v19[9];
        v21 = (uint64_t *)((char *)a1 + v20);
        v22 = (uint64_t *)((char *)a2 + v20);
        v23 = _s4KnobV10IconConfigVMa(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
        swift_retain();
        if (v25(v22, 1, v23))
        {
LABEL_16:
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_32:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
LABEL_23:
        v38 = v22[1];
        *v21 = *v22;
        v21[1] = v38;
        v39 = *(int *)(v23 + 20);
        v71 = (char *)v21 + v39;
        v40 = (char *)v22 + v39;
        v41 = sub_23E136CFC();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v71, v40, v41);
        *(_QWORD *)((char *)v21 + *(int *)(v23 + 24)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 24));
        v43 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56);
        swift_retain();
        v43(v21, 0, 1, v23);
        goto LABEL_32;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_23E06DE1C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 2)
  {
    if (result > 1)
      return result;
    v3 = sub_23E134C80();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 2, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v5 = _s4KnobVMa(0);
    swift_release();
    v6 = a1 + *(int *)(v5 + 36);
    v7 = _s4KnobV10IconConfigVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
    if ((_DWORD)result)
      return result;
LABEL_14:
    swift_bridgeObjectRelease();
    v17 = v6 + *(int *)(v7 + 20);
    v18 = sub_23E136CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    return swift_release();
  }
  v8 = sub_23E134C80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(a1, 2, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  v11 = _s4KnobVMa(0);
  swift_release();
  v12 = a1 + *(int *)(v11 + 36);
  v7 = _s4KnobV10IconConfigVMa(0);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v13(v12, 1, v7))
  {
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v7 + 20);
    v15 = sub_23E136CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    swift_release();
  }
  v16 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
  if (!v10(v16, 2, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
  swift_release();
  v6 = v16 + *(int *)(v11 + 36);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v6, 1, v7);
  if (!(_DWORD)result)
    goto LABEL_14;
  return result;
}

char *sub_23E06E058(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  char *v62;
  char *v63;
  unsigned int (*v64)(_QWORD, _QWORD, _QWORD);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *v69;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_23E134C80();
      v11 = *(_QWORD *)(v10 - 8);
      v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      v65 = v11;
      if (v68(a2, 2, v10))
      {
        v12 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
      }
      v24 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v24[5]] = *(_QWORD *)&a2[v24[5]];
      *(_QWORD *)&a1[v24[6]] = *(_QWORD *)&a2[v24[6]];
      a1[v24[7]] = a2[v24[7]];
      a1[v24[8]] = a2[v24[8]];
      v25 = v24[9];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = _s4KnobV10IconConfigVMa(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v29 + 48);
      swift_retain();
      if (v30(v27, 1, v28))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v64 = v30;
        v41 = *((_QWORD *)v27 + 1);
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = v41;
        v42 = *(int *)(v28 + 20);
        v62 = &v27[v42];
        v63 = &v26[v42];
        v66 = v29;
        v43 = sub_23E136CFC();
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        v30 = v64;
        swift_bridgeObjectRetain();
        v44(v63, v62, v43);
        *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
        v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56);
        swift_retain();
        v45(v26, 0, 1, v28);
        v29 = v66;
      }
      v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v68(&a2[v46], 2, v10))
      {
        v49 = _s4KnobV2IDOMa(0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v47, v48, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v47, 0, 2, v10);
      }
      *(_QWORD *)&v47[v24[5]] = *(_QWORD *)&v48[v24[5]];
      *(_QWORD *)&v47[v24[6]] = *(_QWORD *)&v48[v24[6]];
      v47[v24[7]] = v48[v24[7]];
      v47[v24[8]] = v48[v24[8]];
      v50 = v24[9];
      v51 = &v47[v50];
      v52 = &v48[v50];
      swift_retain();
      if (v30(v52, 1, v28))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v67 = v29;
        v54 = *((_QWORD *)v52 + 1);
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = v54;
        v55 = *(int *)(v28 + 20);
        v56 = &v51[v55];
        v57 = &v52[v55];
        v58 = sub_23E136CFC();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v56, v57, v58);
        *(_QWORD *)&v51[*(int *)(v28 + 24)] = *(_QWORD *)&v52[*(int *)(v28 + 24)];
        v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56);
        swift_retain();
        v60(v51, 0, 1, v28);
      }
      goto LABEL_29;
    case 1:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
      }
      v32 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v32[5]] = *(_QWORD *)&a2[v32[5]];
      *(_QWORD *)&a1[v32[6]] = *(_QWORD *)&a2[v32[6]];
      a1[v32[7]] = a2[v32[7]];
      a1[v32[8]] = a2[v32[8]];
      v33 = v32[9];
      v18 = &a1[v33];
      v19 = &a2[v33];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_retain();
      if (v34(v19, 1, v20))
        goto LABEL_13;
      goto LABEL_20;
    case 0:
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
      {
        v9 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      }
      v16 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      a1[v16[7]] = a2[v16[7]];
      a1[v16[8]] = a2[v16[8]];
      v17 = v16[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_retain();
      if (v22(v19, 1, v20))
      {
LABEL_13:
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_20:
      v35 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v35;
      v36 = *(int *)(v20 + 20);
      v69 = &v18[v36];
      v37 = &v19[v36];
      v38 = sub_23E136CFC();
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v69, v37, v38);
      *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
      v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
      swift_retain();
      v40(v18, 0, 1, v20);
      goto LABEL_29;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_23E06E718(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  int *v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  char *v65;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, _s9KnobStateOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = sub_23E134C80();
        v11 = *(_QWORD *)(v10 - 8);
        v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        v63 = v11;
        if (v64(a2, 2, v10))
        {
          v12 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
        }
        v16 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
        *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
        a1[v16[7]] = a2[v16[7]];
        a1[v16[8]] = a2[v16[8]];
        v17 = v16[9];
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = _s4KnobV10IconConfigVMa(0);
        v21 = *(_QWORD *)(v20 - 8);
        v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        swift_retain();
        if (v22(v19, 1, v20))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v18 = *(_QWORD *)v19;
          *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
          v31 = *(int *)(v20 + 20);
          v60 = &v19[v31];
          v61 = &v18[v31];
          v62 = v21;
          v32 = sub_23E136CFC();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v34 = v32;
          v21 = v62;
          v33(v61, v60, v34);
          *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
          v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56);
          swift_retain();
          v35(v18, 0, 1, v20);
        }
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v37 = &a1[v36];
        v38 = &a2[v36];
        if (v64(&a2[v36], 2, v10))
        {
          v39 = _s4KnobV2IDOMa(0);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v37, v38, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v37, 0, 2, v10);
        }
        *(_QWORD *)&v37[v16[5]] = *(_QWORD *)&v38[v16[5]];
        *(_QWORD *)&v37[v16[6]] = *(_QWORD *)&v38[v16[6]];
        v37[v16[7]] = v38[v16[7]];
        v37[v16[8]] = v38[v16[8]];
        v40 = v16[9];
        v41 = &v37[v40];
        v42 = &v38[v40];
        swift_retain();
        if (v22(v42, 1, v20))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v41 = *(_QWORD *)v42;
          *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
          v44 = *(int *)(v20 + 20);
          v45 = &v41[v44];
          v46 = &v42[v44];
          v47 = sub_23E136CFC();
          v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v45, v46, v47);
          *(_QWORD *)&v41[*(int *)(v20 + 24)] = *(_QWORD *)&v42[*(int *)(v20 + 24)];
          v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
          swift_retain();
          v49(v41, 0, 1, v20);
        }
        goto LABEL_30;
      case 1:
        v13 = sub_23E134C80();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
        {
          v15 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
        }
        v24 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v24[5]] = *(_QWORD *)&a2[v24[5]];
        *(_QWORD *)&a1[v24[6]] = *(_QWORD *)&a2[v24[6]];
        a1[v24[7]] = a2[v24[7]];
        a1[v24[8]] = a2[v24[8]];
        v25 = v24[9];
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = _s4KnobV10IconConfigVMa(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_retain();
        if (v30(v27, 1, v28))
          goto LABEL_28;
        goto LABEL_29;
      case 0:
        v7 = sub_23E134C80();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
        {
          v9 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
        }
        v50 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v50[5]] = *(_QWORD *)&a2[v50[5]];
        *(_QWORD *)&a1[v50[6]] = *(_QWORD *)&a2[v50[6]];
        a1[v50[7]] = a2[v50[7]];
        a1[v50[8]] = a2[v50[8]];
        v51 = v50[9];
        v26 = &a1[v51];
        v27 = &a2[v51];
        v28 = _s4KnobV10IconConfigVMa(0);
        v29 = *(_QWORD *)(v28 - 8);
        v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_retain();
        if (v52(v27, 1, v28))
        {
LABEL_28:
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
LABEL_30:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
LABEL_29:
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
        v54 = *(int *)(v28 + 20);
        v65 = &v26[v54];
        v55 = &v27[v54];
        v56 = sub_23E136CFC();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v65, v55, v56);
        *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
        v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
        swift_retain();
        v58(v26, 0, 1, v28);
        goto LABEL_30;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t _s9KnobStateOMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D23710);
}

char *sub_23E06EE10(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  unsigned int (*v55)(char *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_23E134C80();
      v11 = *(_QWORD *)(v10 - 8);
      v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v55(a2, 2, v10))
      {
        v12 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
      }
      v22 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v22[5]] = *(_QWORD *)&a2[v22[5]];
      *(_QWORD *)&a1[v22[6]] = *(_QWORD *)&a2[v22[6]];
      a1[v22[7]] = a2[v22[7]];
      a1[v22[8]] = a2[v22[8]];
      v23 = v22[9];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = _s4KnobV10IconConfigVMa(0);
      v27 = *(_QWORD *)(v26 - 8);
      v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      if (v54(v25, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v24 = *(_OWORD *)v25;
        v36 = *(int *)(v26 + 20);
        v53 = v27;
        v37 = v11;
        v38 = &v24[v36];
        v39 = &v25[v36];
        v40 = sub_23E136CFC();
        v41 = v38;
        v11 = v37;
        v42 = v39;
        v27 = v53;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v41, v42, v40);
        *(_QWORD *)&v24[*(int *)(v26 + 24)] = *(_QWORD *)&v25[*(int *)(v26 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v24, 0, 1, v26);
      }
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v44 = &a1[v43];
      v45 = &a2[v43];
      if (v55(v45, 2, v10))
      {
        v46 = _s4KnobV2IDOMa(0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v44, v45, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v44, 0, 2, v10);
      }
      *(_QWORD *)&v44[v22[5]] = *(_QWORD *)&v45[v22[5]];
      *(_QWORD *)&v44[v22[6]] = *(_QWORD *)&v45[v22[6]];
      v44[v22[7]] = v45[v22[7]];
      v44[v22[8]] = v45[v22[8]];
      v47 = v22[9];
      v18 = &v44[v47];
      v19 = &v45[v47];
      if (!v54(v19, 1, v26))
      {
        *(_OWORD *)v18 = *(_OWORD *)v19;
        v48 = *(int *)(v26 + 20);
        v49 = &v18[v48];
        v50 = &v19[v48];
        v51 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        *(_QWORD *)&v18[*(int *)(v26 + 24)] = *(_QWORD *)&v19[*(int *)(v26 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v18, 0, 1, v26);
        goto LABEL_28;
      }
      goto LABEL_19;
    case 1:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
      }
      v29 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v29[5]] = *(_QWORD *)&a2[v29[5]];
      *(_QWORD *)&a1[v29[6]] = *(_QWORD *)&a2[v29[6]];
      a1[v29[7]] = a2[v29[7]];
      a1[v29[8]] = a2[v29[8]];
      v30 = v29[9];
      v18 = &a1[v30];
      v19 = &a2[v30];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        goto LABEL_19;
      goto LABEL_20;
    case 0:
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
      {
        v9 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      }
      v16 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      a1[v16[7]] = a2[v16[7]];
      a1[v16[8]] = a2[v16[8]];
      v17 = v16[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
LABEL_19:
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_28:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_20:
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v32 = *(int *)(v20 + 20);
      v33 = &v18[v32];
      v34 = &v19[v32];
      v35 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_28;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_23E06F444(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  unsigned int (*v55)(char *, uint64_t, uint64_t);

  if (a1 == a2)
    return a1;
  sub_23DF73E54((uint64_t)a1, _s9KnobStateOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_23E134C80();
      v11 = *(_QWORD *)(v10 - 8);
      v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v55(a2, 2, v10))
      {
        v12 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
      }
      v16 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      a1[v16[7]] = a2[v16[7]];
      a1[v16[8]] = a2[v16[8]];
      v17 = v16[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      if (v54(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v18 = *(_OWORD *)v19;
        v29 = *(int *)(v20 + 20);
        v52 = v21;
        v53 = v11;
        v30 = &v18[v29];
        v31 = &v19[v29];
        v32 = sub_23E136CFC();
        v33 = v30;
        v34 = v31;
        v21 = v52;
        v11 = v53;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v33, v34, v32);
        *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v18, 0, 1, v20);
      }
      v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v36 = &a1[v35];
      v37 = &a2[v35];
      if (v55(v37, 2, v10))
      {
        v38 = _s4KnobV2IDOMa(0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v36, 0, 2, v10);
      }
      *(_QWORD *)&v36[v16[5]] = *(_QWORD *)&v37[v16[5]];
      *(_QWORD *)&v36[v16[6]] = *(_QWORD *)&v37[v16[6]];
      v36[v16[7]] = v37[v16[7]];
      v36[v16[8]] = v37[v16[8]];
      v39 = v16[9];
      v25 = &v36[v39];
      v26 = &v37[v39];
      if (!v54(v26, 1, v20))
      {
        *(_OWORD *)v25 = *(_OWORD *)v26;
        v41 = *(int *)(v20 + 20);
        v42 = &v25[v41];
        v43 = &v26[v41];
        v44 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        *(_QWORD *)&v25[*(int *)(v20 + 24)] = *(_QWORD *)&v26[*(int *)(v20 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
        goto LABEL_29;
      }
LABEL_24:
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
      }
      v23 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v23[5]] = *(_QWORD *)&a2[v23[5]];
      *(_QWORD *)&a1[v23[6]] = *(_QWORD *)&a2[v23[6]];
      a1[v23[7]] = a2[v23[7]];
      a1[v23[8]] = a2[v23[8]];
      v24 = v23[9];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = _s4KnobV10IconConfigVMa(0);
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        goto LABEL_28;
      goto LABEL_24;
    case 0:
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
      {
        v9 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      }
      v45 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v45[5]] = *(_QWORD *)&a2[v45[5]];
      *(_QWORD *)&a1[v45[6]] = *(_QWORD *)&a2[v45[6]];
      a1[v45[7]] = a2[v45[7]];
      a1[v45[8]] = a2[v45[8]];
      v46 = v45[9];
      v25 = &a1[v46];
      v26 = &a2[v46];
      v27 = _s4KnobV10IconConfigVMa(0);
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
LABEL_28:
        *(_OWORD *)v25 = *(_OWORD *)v26;
        v47 = *(int *)(v27 + 20);
        v48 = &v25[v47];
        v49 = &v26[v47];
        v50 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        goto LABEL_29;
      }
      goto LABEL_24;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_23E06FA88()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  result = _s4KnobVMa(319);
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    v4 = v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23E06FB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = _s4KnobVMa(0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23DF73E10(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_23E06FBE8 + 4 * byte_23E13ED30[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E06FBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_23DF89384(v1, v0, _s4KnobVMa);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23790);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E138050;
  sub_23DF89384(v0, v4 + v3, _s4KnobVMa);
  return v4;
}

BOOL sub_23E06FD10(double a1, double a2, double a3)
{
  double v3;
  double v4;
  BOOL v5;
  double v6;
  double v8;
  double v9;
  double v10;

  if (a1 <= 0.0)
  {
    if (a2 <= 0.0)
      goto LABEL_15;
    if (a2 > 1.0)
    {
      v4 = a1;
    }
    else
    {
      v4 = a1;
      if (a2 <= 0.0)
      {
LABEL_15:
        v4 = a2;
        if (a2 > 0.0)
          goto LABEL_26;
LABEL_36:
        if (a3 > 0.0)
        {
          v6 = 1.0;
          if (a3 <= 1.0 && a3 <= 0.0)
            return 0;
          goto LABEL_41;
        }
        return 0;
      }
    }
LABEL_35:
    a1 = a2;
    if (v4 > 0.0)
      goto LABEL_26;
    goto LABEL_36;
  }
  if (a1 > 1.0)
    goto LABEL_15;
  if (a2 > 0.0)
  {
    if (a2 <= 1.0)
      v3 = a2;
    else
      v3 = 1.0;
    if (v3 <= a1)
      v4 = a2;
    else
      v4 = a1;
    if (a2 > 1.0)
    {
      v5 = a1 < 1.0;
      goto LABEL_20;
    }
    if (a1 >= a2)
    {
      if (v4 > 0.0)
        goto LABEL_26;
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  v5 = a1 < 0.0;
  if (a1 >= 0.0)
    v4 = a2;
  else
    v4 = a1;
LABEL_20:
  if (v5)
    a1 = a2;
  if (v4 <= 0.0)
    goto LABEL_36;
LABEL_26:
  v6 = 1.0;
  if (v4 > 1.0)
    return 0;
  if (a3 <= 0.0)
  {
    if (v4 >= 0.0)
      return 0;
    goto LABEL_41;
  }
  if (a3 <= 1.0)
  {
    if (v4 < a3)
      goto LABEL_41;
    return 0;
  }
  if (v4 >= 1.0)
    return 0;
LABEL_41:
  if (a3 <= 0.0)
  {
    v6 = 0.0;
    v10 = 1.0;
    if (a1 <= 1.0)
      v10 = a1;
    if (a1 <= 0.0)
      v9 = 0.0;
    else
      v9 = v10;
  }
  else if (a3 <= v6)
  {
    if (a1 <= v6)
      v6 = a1;
    if (a1 <= 0.0)
      v9 = 0.0;
    else
      v9 = v6;
    v6 = a3;
  }
  else
  {
    if (a1 <= v6)
      v8 = a1;
    else
      v8 = v6;
    if (a1 <= 0.0)
      v9 = 0.0;
    else
      v9 = v8;
  }
  return v6 < v9;
}

void sub_23E06FE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23DF73E10(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_23E06FFA4 + 4 * byte_23E13ED34[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E06FFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23DF73E54(v0, _s9KnobStateOMa);
  sub_23DF89384(v2, v0, _s4KnobVMa);
  *(_QWORD *)(v0 + *(int *)(v1 + 20)) = v3;
  return swift_storeEnumTagMultiPayload();
}

void sub_23E07020C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  char *v27;
  _QWORD v28[14];

  v28[13] = a1;
  v2 = _s4KnobV10IconConfigVMa(0);
  v28[9] = *(_QWORD *)(v2 - 8);
  v28[10] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v28[7] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v28[5] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v28[3] = (char *)v28 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v28[2] = (char *)v28 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v28[1] = (char *)v28 - v11;
  v12 = sub_23E134C80();
  v28[11] = *(_QWORD *)(v12 - 8);
  v28[12] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v28[6] = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s4KnobV2IDOMa(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v28[4] = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v19 = _s4KnobVMa(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v28[8] = (char *)v28 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v23);
  v24 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v24);
  sub_23DF73E10(v1, (uint64_t)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
  v27 = (char *)sub_23E0704D8 + 4 * byte_23E13ED38[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E0704D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23DF89384(v0, v2, _s4KnobVMa);
  sub_23E1376A4();
  sub_23DF73E10(v2, v3, _s4KnobV2IDOMa);
  v6 = *(_QWORD *)(v4 - 104);
  v5 = *(_QWORD *)(v4 - 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 2, v5))
  {
    v7 = *(_QWORD *)(v4 - 112);
    sub_23E1376A4();
  }
  else
  {
    v8 = *(_QWORD *)(v4 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, v3, v5);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E13711C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    v7 = *(_QWORD *)(v4 - 112);
  }
  sub_23E1376C8();
  swift_retain();
  sub_23E136C18();
  swift_release();
  sub_23E1376B0();
  sub_23E1376B0();
  v9 = *(_QWORD *)(v4 - 184);
  sub_23E071CD4(v2 + *(int *)(v1 + 36), v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 48))(v9, 1, v7) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    v10 = *(_QWORD *)(v4 - 136);
    sub_23DF89384(v9, v10, _s4KnobV10IconConfigVMa);
    sub_23E1376B0();
    sub_23E1371C4();
    sub_23E136CFC();
    sub_23DF73F28(&qword_256D23768, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4070], MEMORY[0x24BDF4080]);
    sub_23E13711C();
    sub_23E136C18();
    sub_23DF73E54(v10, _s4KnobV10IconConfigVMa);
  }
  return sub_23DF73E54(v2, _s4KnobVMa);
}

uint64_t sub_23E070D78(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))sub_23E07020C);
}

uint64_t sub_23E070D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))sub_23E07020C);
}

uint64_t sub_23E070D98()
{
  return sub_23DF73F28(&qword_256D21038, _s9KnobStateOMa, (uint64_t)&unk_23E13ED98);
}

uint64_t sub_23E070DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t (*v9)(_QWORD);
  double v10;
  uint64_t result;
  uint64_t v13;

  v1 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - v5;
  v8 = *(unsigned __int8 *)(v0 + *(int *)(v7 + 28));
  sub_23DF73E10(v0, (uint64_t)&v13 - v5, v9);
  if (v8 != 1)
  {
    sub_23DF73E54((uint64_t)v6, _s4KnobVMa);
LABEL_10:
    sub_23DF73E10(v0, (uint64_t)v3, _s4KnobVMa);
    return sub_23DF73E54((uint64_t)v3, _s4KnobVMa);
  }
  v10 = *(double *)&v6[*(int *)(v1 + 20)];
  result = sub_23DF73E54((uint64_t)v6, _s4KnobVMa);
  if (v10 > 0.0 && (v10 > 1.0 || v10 >= 0.3))
    goto LABEL_10;
  return result;
}

uint64_t sub_23E070FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s4KnobV2IDOMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23DF73E10(v1, (uint64_t)v8, _s4KnobV2IDOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23E1376A4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_23E1376D4();
}

uint64_t sub_23E071134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = _s4KnobV10IconConfigVMa(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E134C80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s4KnobV2IDOMa(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 2, v9))
  {
    sub_23E1376A4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v17 = _s4KnobVMa(0);
  sub_23E1376C8();
  swift_retain();
  sub_23E136C18();
  swift_release();
  sub_23E1376B0();
  sub_23E1376B0();
  sub_23E071CD4(v1 + *(int *)(v17 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_23E1376B0();
  sub_23DF89384((uint64_t)v8, (uint64_t)v5, _s4KnobV10IconConfigVMa);
  sub_23E1376B0();
  sub_23E1371C4();
  sub_23E136CFC();
  sub_23DF73F28(&qword_256D23768, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4070], MEMORY[0x24BDF4080]);
  sub_23E13711C();
  sub_23E136C18();
  return sub_23DF73E54((uint64_t)v5, _s4KnobV10IconConfigVMa);
}

uint64_t sub_23E071430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_23E134C80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v0, (uint64_t)v7, _s4KnobV2IDOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return sub_23E1376A4();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_23E1376A4();
  sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E13711C();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_23E071570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23DF73E10(v1, (uint64_t)v8, _s4KnobV2IDOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23E1376A4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_23E1376D4();
}

uint64_t sub_23E0716DC()
{
  return sub_23DF73F28(&qword_256D23748, _s4KnobV2IDOMa, (uint64_t)&unk_23E13EE00);
}

uint64_t sub_23E07170C()
{
  sub_23E137698();
  sub_23E1371C4();
  sub_23E136CFC();
  sub_23DF73F28(&qword_256D23768, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4070], MEMORY[0x24BDF4080]);
  sub_23E13711C();
  sub_23E136C18();
  return sub_23E1376D4();
}

uint64_t sub_23E0717AC()
{
  sub_23E1371C4();
  sub_23E136CFC();
  sub_23DF73F28(&qword_256D23768, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4070], MEMORY[0x24BDF4080]);
  sub_23E13711C();
  return sub_23E136C18();
}

uint64_t sub_23E071834()
{
  sub_23E137698();
  sub_23E1371C4();
  sub_23E136CFC();
  sub_23DF73F28(&qword_256D23768, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4070], MEMORY[0x24BDF4080]);
  sub_23E13711C();
  sub_23E136C18();
  return sub_23E1376D4();
}

uint64_t sub_23E0718D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF73E10(v1, a1, _s4KnobV2IDOMa);
}

uint64_t sub_23E0718F4(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))sub_23E071134);
}

uint64_t sub_23E071904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))sub_23E071134);
}

uint64_t sub_23E071914()
{
  return sub_23DF73F28(&qword_256D23750, _s4KnobVMa, (uint64_t)&unk_23E13EE68);
}

uint64_t sub_23E071940()
{
  return sub_23DF73F28(&qword_256D23758, _s4KnobV2IDOMa, (uint64_t)&unk_23E13EE28);
}

uint64_t sub_23E07196C()
{
  return sub_23DF73F28(&qword_256D23760, _s4KnobV10IconConfigVMa, (uint64_t)&unk_23E13EF48);
}

uint64_t sub_23E071998()
{
  sub_23E137698();
  sub_23E1376C8();
  return sub_23E1376D4();
}

uint64_t sub_23E0719E0()
{
  return sub_23E1376C8();
}

uint64_t sub_23E071A10()
{
  sub_23E137698();
  sub_23E1376C8();
  return sub_23E1376D4();
}

BOOL sub_23E071A54(double *a1, double *a2)
{
  return *a1 == *a2;
}

BOOL sub_23E071A68(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;

  v2 = *a2;
  if (*a1 <= 0.0)
  {
    v3 = 0.0;
    if (v2 <= 0.0)
    {
      v4 = 0.0;
    }
    else
    {
      v4 = 1.0;
      if (v2 <= 1.0)
        v4 = *a2;
    }
  }
  else
  {
    v3 = 1.0;
    v4 = 0.0;
    if (*a1 <= 1.0)
    {
      if (v2 > 0.0)
      {
        if (v2 <= 1.0)
          v4 = *a2;
        else
          v4 = 1.0;
      }
      v3 = *a1;
    }
    else if (v2 > 0.0)
    {
      if (v2 <= 1.0)
        v4 = *a2;
      else
        v4 = 1.0;
    }
  }
  return v3 < v4;
}

BOOL sub_23E071AE0(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;

  v2 = *a1;
  if (*a2 <= 0.0)
  {
    v3 = 0.0;
    if (v2 <= 0.0)
    {
      v4 = 0.0;
    }
    else
    {
      v4 = 1.0;
      if (v2 <= 1.0)
        v4 = *a1;
    }
  }
  else
  {
    v3 = 1.0;
    v4 = 0.0;
    if (*a2 <= 1.0)
    {
      if (v2 > 0.0)
      {
        if (v2 <= 1.0)
          v4 = *a1;
        else
          v4 = 1.0;
      }
      v3 = *a2;
    }
    else if (v2 > 0.0)
    {
      if (v2 <= 1.0)
        v4 = *a1;
      else
        v4 = 1.0;
    }
  }
  return v3 >= v4;
}

BOOL sub_23E071B58(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;

  v2 = *a2;
  if (*a1 <= 0.0)
  {
    v3 = 0.0;
    if (v2 <= 0.0)
    {
      v4 = 0.0;
    }
    else
    {
      v4 = 1.0;
      if (v2 <= 1.0)
        v4 = *a2;
    }
  }
  else
  {
    v3 = 1.0;
    v4 = 0.0;
    if (*a1 <= 1.0)
    {
      if (v2 > 0.0)
      {
        if (v2 <= 1.0)
          v4 = *a2;
        else
          v4 = 1.0;
      }
      v3 = *a1;
    }
    else if (v2 > 0.0)
    {
      if (v2 <= 1.0)
        v4 = *a2;
      else
        v4 = 1.0;
    }
  }
  return v3 >= v4;
}

BOOL sub_23E071BD0(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;

  v2 = *a1;
  if (*a2 <= 0.0)
  {
    v3 = 0.0;
    if (v2 <= 0.0)
    {
      v4 = 0.0;
    }
    else
    {
      v4 = 1.0;
      if (v2 <= 1.0)
        v4 = *a1;
    }
  }
  else
  {
    v3 = 1.0;
    v4 = 0.0;
    if (*a2 <= 1.0)
    {
      if (v2 > 0.0)
      {
        if (v2 <= 1.0)
          v4 = *a1;
        else
          v4 = 1.0;
      }
      v3 = *a2;
    }
    else if (v2 > 0.0)
    {
      if (v2 <= 1.0)
        v4 = *a1;
      else
        v4 = 1.0;
    }
  }
  return v3 < v4;
}

uint64_t sub_23E071C48(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if ((v2 || (sub_23E137614() & 1) != 0) && (_s4KnobV10IconConfigVMa(0), (sub_23E136CF0() & 1) != 0))
    return sub_23E136BDC();
  else
    return 0;
}

uint64_t sub_23E071CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E071D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s4KnobV2IDOMa(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23778);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_23DF73E10(a1, (uint64_t)v13, _s4KnobV2IDOMa);
  sub_23DF73E10(a2, v15, _s4KnobV2IDOMa);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v13, 2, v4);
  if (!v17)
  {
    sub_23DF73E10((uint64_t)v13, (uint64_t)v10, _s4KnobV2IDOMa);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_23DF73E54((uint64_t)v13, _s4KnobV2IDOMa);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_23DF89C7C((uint64_t)v13, &qword_256D23778);
    v18 = 0;
    return v18 & 1;
  }
  sub_23DF73E54((uint64_t)v13, _s4KnobV2IDOMa);
  v18 = 1;
  return v18 & 1;
}

BOOL sub_23E071F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  _QWORD *v42;
  uint64_t *v43;
  _QWORD *v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = _s4KnobV10IconConfigVMa(0);
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v47 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23770);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)&v46 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v51 = (uint64_t)&v46 - v12;
  v13 = sub_23E134C80();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s4KnobV2IDOMa(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23778);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_23DF73E10(a1, (uint64_t)v22, _s4KnobV2IDOMa);
  sub_23DF73E10(a2, v24, _s4KnobV2IDOMa);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v26 = v25(v22, 2, v13);
  if (v26)
  {
    if (v26 == 1)
    {
      if (v25((char *)v24, 2, v13) == 1)
        goto LABEL_11;
LABEL_8:
      v27 = &qword_256D23778;
      v28 = (uint64_t)v22;
LABEL_9:
      sub_23DF89C7C(v28, v27);
      return 0;
    }
    if (v25((char *)v24, 2, v13) != 2)
      goto LABEL_8;
  }
  else
  {
    sub_23DF73E10((uint64_t)v22, (uint64_t)v19, _s4KnobV2IDOMa);
    if (v25((char *)v24, 2, v13))
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v24, v13);
    v29 = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
    v30 = *(void (**)(char *, uint64_t))(v14 + 8);
    v30(v16, v13);
    v30(v19, v13);
    if ((v29 & 1) == 0)
    {
      sub_23DF73E54((uint64_t)v22, _s4KnobV2IDOMa);
      return 0;
    }
  }
LABEL_11:
  sub_23DF73E54((uint64_t)v22, _s4KnobV2IDOMa);
  v31 = _s4KnobVMa(0);
  if (*(double *)(a1 + *(int *)(v31 + 20)) != *(double *)(a2 + *(int *)(v31 + 20)))
    return 0;
  v32 = (int *)v31;
  if ((sub_23E136BDC() & 1) == 0
    || *(unsigned __int8 *)(a1 + v32[7]) != *(unsigned __int8 *)(a2 + v32[7])
    || *(unsigned __int8 *)(a1 + v32[8]) != *(unsigned __int8 *)(a2 + v32[8]))
  {
    return 0;
  }
  v33 = a1 + v32[9];
  v34 = v51;
  sub_23E071CD4(v33, v51);
  v35 = a2 + v32[9];
  v36 = v50;
  sub_23E071CD4(v35, v50);
  v37 = v53;
  v38 = v53 + *(int *)(v5 + 48);
  sub_23E071CD4(v34, v53);
  sub_23E071CD4(v36, v38);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  v40 = v52;
  if (v39(v37, 1, v52) == 1)
  {
    sub_23DF89C7C(v36, &qword_256D20EF0);
    sub_23DF89C7C(v34, &qword_256D20EF0);
    if (v39(v38, 1, v40) == 1)
    {
      sub_23DF89C7C(v37, &qword_256D20EF0);
      return 1;
    }
    v43 = &qword_256D23770;
    goto LABEL_31;
  }
  v42 = v48;
  sub_23E071CD4(v37, (uint64_t)v48);
  if (v39(v38, 1, v40) == 1)
  {
    v43 = &qword_256D23770;
LABEL_30:
    sub_23DF89C7C(v36, &qword_256D20EF0);
    sub_23DF89C7C(v34, &qword_256D20EF0);
    sub_23DF73E54((uint64_t)v42, _s4KnobV10IconConfigVMa);
LABEL_31:
    v28 = v37;
    v27 = v43;
    goto LABEL_9;
  }
  v44 = v47;
  sub_23DF89384(v38, (uint64_t)v47, _s4KnobV10IconConfigVMa);
  if ((*v42 != *v44 || v42[1] != v44[1]) && (sub_23E137614() & 1) == 0 || (sub_23E136CF0() & 1) == 0)
  {
    sub_23DF73E54((uint64_t)v44, _s4KnobV10IconConfigVMa);
    v43 = &qword_256D20EF0;
    goto LABEL_30;
  }
  v45 = sub_23E136BDC();
  sub_23DF73E54((uint64_t)v44, _s4KnobV10IconConfigVMa);
  sub_23DF89C7C(v36, &qword_256D20EF0);
  sub_23DF89C7C(v34, &qword_256D20EF0);
  sub_23DF73E54((uint64_t)v42, _s4KnobV10IconConfigVMa);
  sub_23DF89C7C(v37, &qword_256D20EF0);
  return (v45 & 1) != 0;
}

void sub_23E0724D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD v19[3];
  uint64_t v20;

  v20 = a2;
  v3 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v3);
  v19[0] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v19[1] = (char *)v19 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v19[2] = (char *)v19 - v8;
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23780);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v19 + *(int *)(v16 + 48) - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(a1, (uint64_t)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), _s9KnobStateOMa);
  sub_23DF73E10(v20, (uint64_t)v17, _s9KnobStateOMa);
  v18 = (char *)sub_23E0726B0 + 4 * byte_23E13ED3C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_23E0726B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  sub_23DF73E10(v0, v2, _s9KnobStateOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23DF73E54(v2, _s4KnobVMa);
    sub_23DF89C7C(v0, &qword_256D23780);
    return 0;
  }
  else
  {
    sub_23DF89384(v1, v3, _s4KnobVMa);
    v4 = sub_23E071F48(v2, v3);
    sub_23DF73E54(v3, _s4KnobVMa);
    sub_23DF73E54(v2, _s4KnobVMa);
    sub_23DF73E54(v0, _s9KnobStateOMa);
  }
  return v4;
}

ValueMetadata *_s12RingLocationVMa()
{
  return &_s12RingLocationVN;
}

unint64_t sub_23E072958()
{
  unint64_t result;

  result = qword_256D23788;
  if (!qword_256D23788)
  {
    result = MEMORY[0x24264C55C](&unk_23E13EFC8, &_s12RingLocationVN);
    atomic_store(result, (unint64_t *)&qword_256D23788);
  }
  return result;
}

_BYTE *Device.Control.ViewSizeConstraint.init(minSize:maxSize:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  char v3;

  v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

void static Device.Control.ViewSizeConstraint.none.getter(_WORD *a1@<X8>)
{
  *a1 = 1028;
}

void *sub_23E0729C0()
{
  void *result;
  void *v1;

  v1 = &unk_250EC65D8;
  sub_23E073100((uint64_t *)&v1);
  result = v1;
  off_256D23798 = v1;
  return result;
}

void *static Device.Control.ViewSize.allCases.getter()
{
  return &unk_250EC6828;
}

uint64_t static Device.Control.ViewSize.largestToSmallest.getter()
{
  if (qword_256D1D3B8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void Device.Control.ViewSize.oneSizeLarger()(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1 + 1;
}

void Device.Control.ViewSize.oneSizeSmaller()(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 0x2010004u >> (8 * *v1);
}

uint64_t Device.Control.ViewSize.hash(into:)()
{
  return sub_23E1376A4();
}

BOOL static Device.Control.ViewSize.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL static Device.Control.ViewSize.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t Device.Control.ViewSize.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

BOOL sub_23E072B1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23E072B30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23E072B44(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23E072B58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void sub_23E072B6C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EC6850;
}

void Device.Control.ViewSizeConstraint.minSize.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void Device.Control.ViewSizeConstraint.maxSize.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t Device.Control.ViewSizeConstraint.hash(into:)()
{
  _BYTE *v0;
  int v1;

  v1 = v0[1];
  if (*v0 == 4)
  {
    sub_23E1376B0();
    if (v1 != 4)
    {
LABEL_3:
      sub_23E1376B0();
      return sub_23E1376A4();
    }
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376A4();
    if (v1 != 4)
      goto LABEL_3;
  }
  return sub_23E1376B0();
}

uint64_t Device.Control.ViewSizeConstraint.hashValue.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;

  v1 = *v0;
  v2 = v0[1];
  sub_23E137698();
  sub_23E1376B0();
  if (v1 != 4)
    sub_23E1376A4();
  sub_23E1376B0();
  if (v2 != 4)
    sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23E072CB0()
{
  _BYTE *v0;
  int v1;

  v1 = v0[1];
  if (*v0 == 4)
  {
    sub_23E1376B0();
    if (v1 != 4)
    {
LABEL_3:
      sub_23E1376B0();
      return sub_23E1376A4();
    }
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376A4();
    if (v1 != 4)
      goto LABEL_3;
  }
  return sub_23E1376B0();
}

uint64_t sub_23E072D2C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;

  v1 = *v0;
  v2 = v0[1];
  sub_23E137698();
  sub_23E1376B0();
  if (v1 != 4)
    sub_23E1376A4();
  sub_23E1376B0();
  if (v2 != 4)
    sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t Device.Control.ViewSizeConstraint.allowedViewSizes.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *v0;
  v2 = v0[1];
  v3 = MEMORY[0x24BEE4AF8];
  if (v1 == 4 || v1 == 0)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_23E09E39C(0, 1, 1);
    v3 = v19;
    v6 = *(_QWORD *)(v19 + 16);
    v5 = *(_QWORD *)(v19 + 24);
    v7 = v6 + 1;
    if (v6 >= v5 >> 1)
    {
      sub_23E09E39C(v5 > 1, v6 + 1, 1);
      v7 = v6 + 1;
      v3 = v19;
    }
    *(_QWORD *)(v3 + 16) = v7;
    *(_BYTE *)(v3 + v6 + 32) = 0;
  }
  if (v2)
  {
    if (v1 == 4 || v1 <= 1)
    {
      v20 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E09E39C(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v9 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      v11 = v9 + 1;
      if (v9 >= v10 >> 1)
      {
        v18 = *(_QWORD *)(v3 + 16);
        sub_23E09E39C(v10 > 1, v9 + 1, 1);
        v9 = v18;
        v3 = v20;
      }
      *(_QWORD *)(v3 + 16) = v11;
      *(_BYTE *)(v3 + v9 + 32) = 1;
    }
    if (v2 == 4)
      goto LABEL_29;
  }
  if (v2 >= 2)
  {
LABEL_29:
    if (v1 == 4 || v1 <= 2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E09E39C(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v13 = *(_QWORD *)(v3 + 16);
      v12 = *(_QWORD *)(v3 + 24);
      if (v13 >= v12 >> 1)
        sub_23E09E39C(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v3 + 16) = v13 + 1;
      *(_BYTE *)(v3 + v13 + 32) = 2;
    }
    if (v2 == 4)
      goto LABEL_31;
  }
  if (v2 >= 3)
  {
LABEL_31:
    if (v1 <= 4)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E09E39C(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v15 = *(_QWORD *)(v3 + 16);
      v14 = *(_QWORD *)(v3 + 24);
      if (v15 >= v14 >> 1)
        sub_23E09E39C(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v3 + 16) = v15 + 1;
      *(_BYTE *)(v3 + v15 + 32) = 3;
    }
  }
  v16 = sub_23E073FAC(v3, (void (*)(void))sub_23E074348, (uint64_t)&type metadata for Device.Control.ViewSize, (void (*)(char *, _QWORD))sub_23E07D3EC);
  swift_release();
  return v16;
}

BOOL Device.Control.ViewSizeConstraint.allows(size:)(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v5;

  v2 = *a1;
  v3 = v1[1];
  if (v3 != 4 && v3 < v2)
    return 0;
  v5 = *v1;
  return v5 == 4 || v2 >= v5;
}

_BYTE *Device.Control.ViewSizeConstraint.closestAllowedSize(to:)@<X0>(_BYTE *result@<X0>, unsigned __int8 *a2@<X8>)
{
  unsigned __int8 *v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned __int8 v8;

  v3 = *result;
  v4 = *v2;
  v5 = v2[1];
  if (v3 >= v4 || v4 == 4)
    LOBYTE(v4) = *result;
  if (v5 >= v3 || v5 == 4)
    v8 = v4;
  else
    v8 = v2[1];
  *a2 = v8;
  return result;
}

uint64_t sub_23E073100(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E073E20(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23E073168(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23E073168(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _BYTE *v22;
  unsigned int v23;
  uint64_t v24;
  _BYTE *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_23E1375F0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(unsigned __int8 *)(v79 + i);
        v82 = v78;
        do
        {
          v83 = *(unsigned __int8 *)(v79 + v82);
          if (v83 >= v81)
            break;
          if (!v79)
            goto LABEL_141;
          *(_BYTE *)(v79 + v82 + 1) = v83;
          *(_BYTE *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v94 = result;
  v95 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (unsigned __int8 *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v93 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_23E0737E0((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(_QWORD *)&v87[16 * v12 - 16]), v84 + v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_23E073D94((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v93 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23E13729C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v95;
    v93 = v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  v9 = 0;
  v92 = v2;
  v10 = *v2;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v96 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(unsigned __int8 *)(v10 + v9);
      v15 = *(unsigned __int8 *)(v10 + v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(unsigned __int8 *)(v10 + v9);
          if (v15 < v14 == v16 >= v17)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_BYTE *)(v10 + v19);
              *(_BYTE *)(v10 + v19) = *(_BYTE *)(v10 + v18);
              *(_BYTE *)(v10 + v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v94)
      goto LABEL_47;
    v21 = v13 + v94;
    if (__OFADD__(v13, v94))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (_BYTE *)(v10 + v9);
      do
      {
        v23 = *(unsigned __int8 *)(v10 + v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *(v25 - 1);
          if (v26 >= v23)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v26;
          *--v25 = v23;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23E073A18(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v96;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_23E073A18((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v96;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_23E0737E0((unsigned __int8 *)(v10 + *(_QWORD *)v71), (unsigned __int8 *)(v10 + *(_QWORD *)v74), v10 + v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v96;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v95;
    if (v9 >= v95)
    {
      v2 = v92;
      v8 = v93;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23E0737E0(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t result;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;

  v22 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v14 = &v4[v9];
      v20 = &v4[v9];
      v22 = v6;
      if (v7 < v6 && (unsigned __int8 *)a3 != v6)
      {
        v15 = (unsigned __int8 *)(a3 - 1);
        while (1)
        {
          v16 = v15 + 1;
          v17 = v6 - 1;
          v18 = *(v6 - 1);
          if (v18 >= *(v14 - 1))
          {
            v20 = v14 - 1;
            if (v16 < v14 || v15 >= v14 || v16 != v14)
              *v15 = *(v14 - 1);
            --v14;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v16 != v6 || v15 >= v6)
              *v15 = v18;
            v22 = --v6;
            if (v17 <= v7)
              goto LABEL_38;
          }
          --v15;
          if (v14 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        v11 = *v6;
        v12 = *v4;
        if (v12 >= v11)
        {
          if (v7 != v4)
            *v7 = v12;
          v21 = ++v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
            *v7 = v11;
        }
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v22 = v7;
    }
LABEL_38:
    sub_23E073BEC((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

char *sub_23E073A18(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D237C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23E073B10(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E073C88(a1, a2, a3, type metadata accessor for Device.ControlGroup);
}

char *sub_23E073B1C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_23E1375A8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

uint64_t sub_23E073BC8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E073C88(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DC28]);
}

uint64_t sub_23E073BD4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E073C88(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23E073BE0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E073C88(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DAA8]);
}

char *sub_23E073BEC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    result = (char *)sub_23E1375A8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

uint64_t sub_23E073C7C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E073C88(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t sub_23E073C88(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_23E1375A8();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23E073D94(uint64_t a1)
{
  return sub_23E073A18(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E073DA8(_QWORD *a1)
{
  return sub_23E09E5EC(0, a1[2], 0, a1);
}

uint64_t sub_23E073DBC(uint64_t a1)
{
  return sub_23E09E484(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E073DD0(uint64_t a1)
{
  return sub_23E09E7E0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E073DE4(_QWORD *a1)
{
  return sub_23E09E7EC(0, a1[2], 0, a1);
}

uint64_t sub_23E073DF8(_QWORD *a1)
{
  return sub_23E09E800(0, a1[2], 0, a1);
}

uint64_t sub_23E073E0C(_QWORD *a1)
{
  return sub_23E09E814(0, a1[2], 0, a1);
}

uint64_t sub_23E073E20(uint64_t a1)
{
  return sub_23E09E994(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E073E34(_QWORD *a1)
{
  return sub_23E09E470(0, a1[2], 0, a1);
}

BOOL _s22HomeAccessoryControlUI6DeviceV0C0V18ViewSizeConstraintV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v2 == 4)
  {
    if (v4 != 4)
      return 0;
  }
  else if (v4 == 4 || v2 != v4)
  {
    return 0;
  }
  if (v3 != 4)
    return v5 != 4 && v3 == v5;
  return v5 == 4;
}

uint64_t sub_23E073EA4(uint64_t a1)
{
  return sub_23E073F08(a1, (uint64_t (*)(uint64_t))type metadata accessor for HMCharacteristicValueTargetHumidifierDehumidifierState, qword_256D237E0, (uint64_t)&unk_23E1381F8, (void (*)(uint64_t *, uint64_t))sub_23E07CCBC);
}

uint64_t sub_23E073EC8(uint64_t a1)
{
  return sub_23E073FAC(a1, (void (*)(void))sub_23E07438C, (uint64_t)&type metadata for Device.Control.ThermostatState.Mode, (void (*)(char *, _QWORD))sub_23E07CCD0);
}

uint64_t sub_23E073EE4(uint64_t a1)
{
  return sub_23E073F08(a1, (uint64_t (*)(uint64_t))type metadata accessor for HMCharacteristicValueTargetSecuritySystemState, &qword_256D237D0, (uint64_t)&unk_23E13823C, (void (*)(uint64_t *, uint64_t))sub_23E07CDEC);
}

uint64_t sub_23E073F08(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t))
{
  uint64_t v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = *(_QWORD *)(a1 + 16);
  a2(0);
  sub_23DF73F28(a3, a2, a4);
  result = sub_23E137320();
  v15 = result;
  if (v10)
  {
    v12 = (uint64_t *)(a1 + 32);
    do
    {
      v13 = *v12++;
      a5(&v14, v13);
      --v10;
    }
    while (v10);
    return v15;
  }
  return result;
}

uint64_t sub_23E073FAC(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_23E137320();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

unint64_t sub_23E074024()
{
  unint64_t result;

  result = qword_256D237A0;
  if (!qword_256D237A0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ViewSize, &type metadata for Device.Control.ViewSize);
    atomic_store(result, (unint64_t *)&qword_256D237A0);
  }
  return result;
}

unint64_t sub_23E07406C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D237A8;
  if (!qword_256D237A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D237B0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D237A8);
  }
  return result;
}

unint64_t sub_23E0740BC()
{
  unint64_t result;

  result = qword_256D237B8;
  if (!qword_256D237B8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ViewSizeConstraint, &type metadata for Device.Control.ViewSizeConstraint);
    atomic_store(result, (unint64_t *)&qword_256D237B8);
  }
  return result;
}

uint64_t _s8ViewSizeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E07414C + 4 * byte_23E13F045[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E074180 + 4 * byte_23E13F040[v4]))();
}

uint64_t sub_23E074180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E074188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E074190);
  return result;
}

uint64_t sub_23E07419C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E0741A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E0741A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0741B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.Control.ViewSize()
{
  return &type metadata for Device.Control.ViewSize;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s18ViewSizeConstraintVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 65284 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65284 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65284;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65284;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65284;
  }
LABEL_17:
  if (*(unsigned __int8 *)a1 <= 4u)
    v6 = 4;
  else
    v6 = *(unsigned __int8 *)a1;
  v7 = v6 - 5;
  if (*(unsigned __int8 *)a1 < 4u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t _s18ViewSizeConstraintVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E0742C8 + 4 * byte_23E13F04F[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_23E0742FC + 4 * byte_23E13F04A[v4]))();
}

uint64_t sub_23E0742FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23E074304(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23E07430CLL);
  return result;
}

uint64_t sub_23E074318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23E074320);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E074324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23E07432C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.Control.ViewSizeConstraint()
{
  return &type metadata for Device.Control.ViewSizeConstraint;
}

unint64_t sub_23E074348()
{
  unint64_t result;

  result = qword_256D237C0;
  if (!qword_256D237C0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ViewSize, &type metadata for Device.Control.ViewSize);
    atomic_store(result, (unint64_t *)&qword_256D237C0);
  }
  return result;
}

unint64_t sub_23E07438C()
{
  unint64_t result;

  result = qword_256D237D8;
  if (!qword_256D237D8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ThermostatState.Mode, &type metadata for Device.Control.ThermostatState.Mode);
    atomic_store(result, (unint64_t *)&qword_256D237D8);
  }
  return result;
}

uint64_t sub_23E0743E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0743F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TimerCell(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D23840);
}

uint64_t sub_23E074420()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E074430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v45;
  uint64_t (*v46)(void);
  uint64_t *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v51 = a1;
  v53 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v53);
  v4 = (_OWORD *)((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ControlBackgroundView();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v50 - v9;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23878);
  MEMORY[0x24BDAC7A8](v52);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23880);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23888);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = sub_23E1362D0();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23890);
  sub_23E0747F0(v2, (uint64_t)&v15[*(int *)(v19 + 44)]);
  LOBYTE(v2) = sub_23E13672C();
  sub_23E135D00();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v18, &qword_256D23880);
  v28 = &v18[*(int *)(v16 + 36)];
  *v28 = v2;
  *((_QWORD *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_23DF89C7C((uint64_t)v15, &qword_256D23880);
  v29 = sub_23E136FE4();
  v50 = v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23898);
  v32 = v51;
  v33 = v51 + *(int *)(v31 + 36);
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 50) = 0u;
  v34 = (uint64_t *)&v8[*(int *)(v5 + 20)];
  *v34 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v35 = *(int *)(v5 + 24);
  v36 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v8[v35] = MEMORY[0x24264B578](v36);
  sub_23DF89384((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v37 = (char *)v4 + *(int *)(v53 + 20);
  v38 = *MEMORY[0x24BDEEB68];
  v39 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  __asm { FMOV            V0.2D, #10.0 }
  *v4 = _Q0;
  v45 = (uint64_t)&v12[*(int *)(v52 + 36)];
  v46 = MEMORY[0x24BDED998];
  sub_23DF73E10((uint64_t)v4, v45, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v45 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
  sub_23DF73E10((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF73E54((uint64_t)v4, (uint64_t (*)(_QWORD))v46);
  sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89340((uint64_t)v12, v33, &qword_256D23878);
  v47 = (uint64_t *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D238A0) + 36));
  v48 = v50;
  *v47 = v29;
  v47[1] = v48;
  return sub_23DF89340((uint64_t)v18, v32, &qword_256D23888);
}

uint64_t sub_23E0747F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v4 = type metadata accessor for DeleteButton(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v34 - v7;
  v8 = sub_23E134FBC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D238A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - v15;
  v34 = sub_23E136384();
  sub_23E074BD8(a1, v44);
  v38 = v44[1];
  v39 = v44[0];
  v17 = v45;
  v19 = v46;
  v18 = v47;
  v37 = v48;
  v36 = v49;
  v40 = v50;
  if ((sub_23E134FB0() & 1) != 0)
  {
    v20 = type metadata accessor for CountDownTimer(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v21(v11, a1, v8);
    sub_23E075420((uint64_t)v11, (uint64_t)v16);
    v22 = type metadata accessor for CountDownTimer(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 0, 1, v22);
  }
  v23 = (uint64_t)v41;
  v21(v41, a1, v8);
  v35 = v16;
  v24 = v42;
  sub_23DF89C1C((uint64_t)v16, v42, &qword_256D238A8);
  sub_23DF73E10(v23, v43, type metadata accessor for DeleteButton);
  *(_QWORD *)a2 = v34;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v26 = v38;
  v25 = v39;
  *(_QWORD *)(a2 + 24) = v39;
  *(_QWORD *)(a2 + 32) = v26;
  *(_BYTE *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v18;
  v27 = v37;
  *(_QWORD *)(a2 + 64) = v37;
  v28 = v36;
  *(_BYTE *)(a2 + 72) = v36;
  *(_QWORD *)(a2 + 80) = v40;
  *(_WORD *)(a2 + 88) = 257;
  *(_QWORD *)(a2 + 96) = 0x4000000000000000;
  *(_QWORD *)(a2 + 104) = 0x4034000000000000;
  *(_BYTE *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 120) = 0x3FF0000000000000;
  v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D238B0);
  sub_23DF89C1C(v24, a2 + v29[16], &qword_256D238A8);
  v30 = a2 + v29[20];
  *(_QWORD *)v30 = 0x402E000000000000;
  *(_BYTE *)(v30 + 8) = 0;
  v31 = a2 + v29[24];
  v32 = v43;
  sub_23DF73E10(v43, v31, type metadata accessor for DeleteButton);
  sub_23DFA056C(v25, v26, v17);
  swift_bridgeObjectRetain();
  sub_23DFA056C(v18, v27, v28);
  swift_bridgeObjectRetain();
  sub_23DFA056C(v25, v26, v17);
  swift_bridgeObjectRetain();
  sub_23DFA056C(v18, v27, v28);
  swift_bridgeObjectRetain();
  sub_23DF73E54((uint64_t)v41, type metadata accessor for DeleteButton);
  sub_23DF89C7C((uint64_t)v35, &qword_256D238A8);
  sub_23DFA055C(v25, v26, v17);
  swift_bridgeObjectRelease();
  sub_23DFA055C(v18, v27, v28);
  swift_bridgeObjectRelease();
  sub_23DF73E54(v32, type metadata accessor for DeleteButton);
  sub_23DF89C7C(v42, &qword_256D238A8);
  sub_23DFA055C(v25, v26, v17);
  swift_bridgeObjectRelease();
  sub_23DFA055C(v18, v27, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E074BD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  int v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  int v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  char *v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v107 = a2;
  v3 = sub_23E134F74();
  v104 = *(_QWORD *)(v3 - 8);
  v105 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v103 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v102 = (char *)&v93 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0C8);
  MEMORY[0x24BDAC7A8](v7);
  v106 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0D0);
  v9 = MEMORY[0x24BDAC7A8](v98);
  v99 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)&v93 - v11;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0D8);
  v12 = MEMORY[0x24BDAC7A8](v96);
  v97 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v93 - v14;
  v16 = sub_23E134C20();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (void (*)(char *, uint64_t))((char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v18);
  v108 = (char *)&v93 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v113 = (char *)&v93 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v112 = (char *)&v93 - v25;
  v26 = sub_23E134F8C();
  v114 = v16;
  v110 = v15;
  v111 = a1;
  v109 = v20;
  if (!v27)
    v26 = sub_23E1371A0();
  v116 = v26;
  v117 = v27;
  sub_23DF8DC18();
  v28 = sub_23E13693C();
  v30 = v29;
  v32 = v31 & 1;
  sub_23E136834();
  sub_23E1367B0();
  swift_release();
  v33 = sub_23E136900();
  v35 = v34;
  v37 = v36;
  swift_release();
  v38 = v37 & 1;
  sub_23DFA055C(v28, v30, v32);
  swift_bridgeObjectRelease();
  LODWORD(v116) = sub_23E136540();
  v101 = sub_23E1368DC();
  v100 = v39;
  v94 = v40;
  v42 = v41;
  sub_23DFA055C(v33, v35, v38);
  swift_bridgeObjectRelease();
  v43 = v112;
  sub_23E134C14();
  sub_23E134F50();
  v44 = v109;
  sub_23E134F44();
  v45 = v108;
  sub_23E134BE4();
  if ((sub_23E134BF0() & 1) != 0)
  {
    v46 = 4;
    v47 = v114;
  }
  else
  {
    v47 = v114;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v45, v114);
    v46 = 2;
    v45 = v43;
  }
  v48 = v113;
  v49 = (uint64_t)v110;
  (*(void (**)(char *, char *, uint64_t))(v17 + 8 * v46))(v113, v45, v47);
  sub_23E134F44();
  sub_23DF73F28(&qword_256D1F0E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  result = sub_23E13714C();
  if ((result & 1) != 0)
  {
    v108 = v42;
    v51 = v98;
    v52 = v95;
    v53 = &v95[*(int *)(v98 + 48)];
    v54 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v17 + 32);
    v54(v95, (void (*)(_QWORD, _QWORD))v44, v47);
    v55 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v55(v53, v48, v47);
    v56 = v99;
    v57 = &v99[*(int *)(v51 + 48)];
    v55(v99, v52, v47);
    v55(v57, v53, v47);
    v58 = (uint64_t)v97;
    v54(v97, (void (*)(_QWORD, _QWORD))v56, v47);
    v93 = v17;
    v59 = *(void (**)(char *, uint64_t))(v17 + 8);
    v59(v57, v47);
    v60 = &v56[*(int *)(v51 + 48)];
    v54(v56, (void (*)(_QWORD, _QWORD))v52, v47);
    v54(v60, (void (*)(_QWORD, _QWORD))v53, v47);
    v54((char *)(v58 + *(int *)(v96 + 36)), (void (*)(_QWORD, _QWORD))v60, v47);
    v109 = v59;
    v59(v56, v47);
    sub_23DF89340(v58, v49, &qword_256D1F0D8);
    v61 = v102;
    sub_23E134F80();
    v63 = v103;
    v62 = v104;
    v64 = v105;
    (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v103, *MEMORY[0x24BE4D968], v105);
    sub_23DF73F28(qword_256D238D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D970], MEMORY[0x24BE4D978]);
    sub_23E13723C();
    sub_23E13723C();
    v65 = v116;
    v66 = v115;
    v67 = *(void (**)(char *, uint64_t))(v62 + 8);
    v67(v63, v64);
    v67(v61, v64);
    if (v65 == v66)
    {
      v68 = 1;
      v69 = v106;
    }
    else
    {
      sub_23E134F68();
      v69 = v106;
      sub_23E134BFC();
      v68 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v69, v68, 1, v47);
    v70 = v94 & 1;
    sub_23E134F68();
    v71 = sub_23E1368B8();
    v73 = v72;
    v75 = v74 & 1;
    sub_23E1367BC();
    sub_23E1367B0();
    swift_release();
    sub_23E13678C();
    swift_release();
    v76 = sub_23E136900();
    v78 = v77;
    v80 = v79;
    swift_release();
    sub_23DFA055C(v71, v73, v75);
    swift_bridgeObjectRelease();
    LODWORD(v116) = sub_23E136534();
    v81 = sub_23E1368DC();
    v83 = v82;
    v85 = v84;
    LOBYTE(v71) = v86 & 1;
    sub_23DFA055C(v76, v78, v80 & 1);
    swift_bridgeObjectRelease();
    LOBYTE(v116) = v70;
    LOBYTE(v115) = v71;
    v87 = v107;
    v88 = v108;
    v89 = v101;
    v90 = v100;
    *v107 = v101;
    v87[1] = v90;
    *((_BYTE *)v87 + 16) = v70;
    v87[3] = (uint64_t)v88;
    v87[4] = v81;
    v87[5] = v83;
    *((_BYTE *)v87 + 48) = v71;
    v87[7] = v85;
    sub_23DFA056C(v89, v90, v70);
    swift_bridgeObjectRetain();
    sub_23DFA056C(v81, v83, v71);
    swift_bridgeObjectRetain();
    sub_23DFA056C(v89, v90, v70);
    swift_bridgeObjectRetain();
    v91 = v114;
    v92 = v109;
    v109(v113, v114);
    v92(v112, v91);
    sub_23DFA055C(v89, v90, v70);
    swift_bridgeObjectRelease();
    sub_23DFA055C(v81, v83, v115);
    swift_bridgeObjectRelease();
    sub_23DFA055C(v89, v90, v116);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_23E075420@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double result;
  uint64_t v18;
  _QWORD v19[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D238B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CountDownTimer(0);
  v8 = *(int *)(v7 + 20);
  sub_23E07562C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v10 = sub_23E137494();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  v11 = sub_23E137404();

  sub_23DF89C7C((uint64_t)v6, &qword_256D238B8);
  v19[1] = v11;
  sub_23E1373F8();
  sub_23DF73F28(&qword_256D238C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v12 = sub_23E135C4C();
  swift_release();
  *(_QWORD *)(a2 + v8) = v12;
  v13 = sub_23E134FBC();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a2, a1, v13);
  sub_23E134F68();
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  result = v16 + -1.0;
  v18 = a2 + *(int *)(v7 + 24);
  *(double *)v18 = v16 + -1.0;
  *(_QWORD *)(v18 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for DeleteButton(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D23930);
}

uint64_t type metadata accessor for CountDownTimer(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D239C0);
}

unint64_t sub_23E07562C()
{
  unint64_t result;

  result = qword_256D238C0;
  if (!qword_256D238C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D238C0);
  }
  return result;
}

uint64_t sub_23E075668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23E0756A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E134FBC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23E0756D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23E07571C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23E075760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23E0757A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23E0757E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23E075834()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23E075884()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134FBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E0758EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23E134FBC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23E07598C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_23E0759E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E075A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E075AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23E075B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_release();
  return a1;
}

uint64_t sub_23E075BDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E075BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E134FBC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E075C64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E075C70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E134FBC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23E075CE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134FBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23E075D6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23A00;
  if (!qword_256D23A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23898);
    v2[0] = sub_23E075DF0();
    v2[1] = sub_23DF89B88(&qword_256D23A18, &qword_256D238A0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23A00);
  }
  return result;
}

unint64_t sub_23E075DF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23A08;
  if (!qword_256D23A08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23888);
    v2[0] = sub_23DF89B88(&qword_256D23A10, &qword_256D23880, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23A08);
  }
  return result;
}

uint64_t sub_23E075E74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E075E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t (**v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)(uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[11];
  char v83;
  int v84;
  char v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  char v97;

  v69 = a1;
  v66 = sub_23E134FBC();
  v75 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CountDownTimer(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v61 = v3;
  v6 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E1373E0();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A50);
  MEMORY[0x24BDAC7A8](v62);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A58);
  MEMORY[0x24BDAC7A8](v74);
  v73 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A60);
  v15 = *(_QWORD *)(v14 - 8);
  v67 = v14;
  v68 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v76 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E136FE4();
  v58 = v18;
  v59 = v17;
  sub_23E0764C8(v1, (uint64_t)v82);
  v60 = sub_23E137014();
  v19 = (uint64_t *)(v1 + *(int *)(v5 + 24));
  v20 = v1;
  v77 = v1;
  v21 = *v19;
  v22 = v19[1];
  *(_QWORD *)&v86 = v21;
  *((_QWORD *)&v86 + 1) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A68);
  sub_23E136D98();
  v94 = v82[8];
  v95 = v82[9];
  v96 = v82[10];
  v90 = v82[4];
  v91 = v82[5];
  v92 = v82[6];
  v93 = v82[7];
  v86 = v82[0];
  v87 = v82[1];
  v88 = v82[2];
  v23 = v78;
  v97 = v83;
  v89 = v82[3];
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_23E1373EC();

  sub_23DF73E10(v20, (uint64_t)v7, type metadata accessor for CountDownTimer);
  v25 = *(unsigned __int8 *)(v4 + 80);
  v71 = ((v25 + 16) & ~v25) + v6;
  v72 = (v25 + 16) & ~v25;
  v26 = v72;
  v70 = v25 | 7;
  v27 = swift_allocObject();
  v28 = (uint64_t)v7;
  sub_23DF89384((uint64_t)v7, v27 + v26, type metadata accessor for CountDownTimer);
  v30 = v62;
  v29 = v63;
  v31 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(&v12[*(int *)(v62 + 52)], v10, v64);
  v32 = v58;
  *(_QWORD *)v12 = v59;
  *((_QWORD *)v12 + 1) = v32;
  v33 = v95;
  *((_OWORD *)v12 + 9) = v94;
  *((_OWORD *)v12 + 10) = v33;
  *((_OWORD *)v12 + 11) = v96;
  v12[192] = v97;
  v34 = v91;
  *((_OWORD *)v12 + 5) = v90;
  *((_OWORD *)v12 + 6) = v34;
  v35 = v93;
  *((_OWORD *)v12 + 7) = v92;
  *((_OWORD *)v12 + 8) = v35;
  v36 = v87;
  *((_OWORD *)v12 + 1) = v86;
  *((_OWORD *)v12 + 2) = v36;
  v37 = v89;
  *((_OWORD *)v12 + 3) = v88;
  *((_OWORD *)v12 + 4) = v37;
  *(_WORD *)(v12 + 193) = 257;
  *(_DWORD *)(v12 + 195) = v84;
  v12[199] = v85;
  *((_QWORD *)v12 + 25) = v60;
  *((_QWORD *)v12 + 26) = v23;
  v38 = (uint64_t (**)(uint64_t))&v12[*(int *)(v30 + 56)];
  *v38 = sub_23E077294;
  v38[1] = (uint64_t (*)(uint64_t))v27;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v31);
  v39 = *(_QWORD *)(v77 + *(int *)(v61 + 20));
  sub_23DF73E10(v77, v28, type metadata accessor for CountDownTimer);
  v40 = swift_allocObject();
  v41 = v72;
  sub_23DF89384(v28, v40 + v72, type metadata accessor for CountDownTimer);
  v42 = v73;
  sub_23DF89C1C((uint64_t)v12, v73, &qword_256D23A50);
  v43 = v74;
  *(_QWORD *)(v42 + *(int *)(v74 + 52)) = v39;
  v44 = (uint64_t (**)(uint64_t))(v42 + *(int *)(v43 + 56));
  *v44 = sub_23E07733C;
  v44[1] = (uint64_t (*)(uint64_t))v40;
  swift_retain();
  sub_23DF89C7C((uint64_t)v12, &qword_256D23A50);
  v46 = v65;
  v45 = v66;
  v47 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v65, v77, v66);
  sub_23DF73E10(v47, v28, type metadata accessor for CountDownTimer);
  v48 = swift_allocObject();
  sub_23DF89384(v28, v48 + v41, type metadata accessor for CountDownTimer);
  v49 = sub_23DF89B88(&qword_256D23A70, &qword_256D23A58, MEMORY[0x24BDEDA68]);
  v50 = sub_23DF73F28(&qword_256D23A78, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9B0], MEMORY[0x24BE4D9C0]);
  v51 = v73;
  v52 = v74;
  sub_23E136B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v45);
  sub_23DF89C7C(v51, &qword_256D23A58);
  sub_23DF73E10(v77, v28, type metadata accessor for CountDownTimer);
  v53 = swift_allocObject();
  sub_23DF89384(v28, v53 + v72, type metadata accessor for CountDownTimer);
  v78 = v52;
  v79 = v45;
  v80 = v49;
  v81 = v50;
  swift_getOpaqueTypeConformance2();
  v54 = v67;
  v55 = v76;
  sub_23E1369CC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v55, v54);
}

uint64_t sub_23E0764C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = sub_23E134F74();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v40 - v9;
  if (qword_256D1D3C0 != -1)
    swift_once();
  v11 = qword_256D346D0;
  v12 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CountDownTimer(0) + 24));
  v13 = *v12;
  v14 = v12[1];
  v42 = v13;
  v43 = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A68);
  sub_23E136D98();
  v15 = v41;
  sub_23E134FA4();
  v17 = v16;
  sub_23E135DCC();
  v18 = v42;
  v19 = v44;
  v20 = v45;
  v21 = v46;
  v40 = sub_23E136C48();
  KeyPath = swift_getKeyPath();
  sub_23E137080();
  v24 = v23;
  v26 = v25;
  sub_23E134F80();
  if (v15 / v17 <= 1.0)
    v27 = v15 / v17;
  else
    v27 = 1.0;
  v28 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BE4D968], v4);
  sub_23DF73F28(qword_256D238D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D970], MEMORY[0x24BE4D978]);
  sub_23E13723C();
  sub_23E13723C();
  v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v8, v4);
  v29(v10, v4);
  v30 = sub_23E136CB4();
  sub_23E13681C();
  v31 = sub_23E1367B0();
  swift_release();
  v32 = swift_getKeyPath();
  v33 = sub_23E13672C();
  sub_23E135D00();
  LOBYTE(v41) = 0;
  *(_QWORD *)a2 = v11;
  *(_WORD *)(a2 + 8) = 256;
  *(_QWORD *)(a2 + 16) = 0;
  *(double *)(a2 + 24) = v27;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v28;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 64) = v21;
  v34 = v40;
  *(_QWORD *)(a2 + 72) = KeyPath;
  *(_QWORD *)(a2 + 80) = v34;
  *(_QWORD *)(a2 + 88) = 0x4012D97C7F3321D2;
  *(_QWORD *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v26;
  *(_QWORD *)(a2 + 112) = v30;
  *(_QWORD *)(a2 + 120) = v32;
  *(_QWORD *)(a2 + 128) = v31;
  *(_BYTE *)(a2 + 136) = v33;
  *(_QWORD *)(a2 + 144) = v35;
  *(_QWORD *)(a2 + 152) = v36;
  *(_QWORD *)(a2 + 160) = v37;
  *(_QWORD *)(a2 + 168) = v38;
  *(_BYTE *)(a2 + 176) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E076804()
{
  sub_23E134F68();
  type metadata accessor for CountDownTimer(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A68);
  return sub_23E136DA4();
}

uint64_t sub_23E076874(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  void (*v13)(char *, uint64_t);
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;

  v3 = sub_23E134F74();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D970];
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_23E134F80();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BE4D968], v3);
  sub_23DF73F28(qword_256D238D0, v4, MEMORY[0x24BE4D978]);
  sub_23E13723C();
  sub_23E13723C();
  v11 = v19;
  v12 = v21;
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v3);
  result = ((uint64_t (*)(char *, uint64_t))v13)(v10, v3);
  if (v11 == *(_QWORD *)&v12)
  {
    v15 = (uint64_t *)(a2 + *(int *)(type metadata accessor for CountDownTimer(0) + 24));
    v17 = v15[1];
    v19 = *v15;
    v16 = v19;
    v20 = v17;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A68);
    sub_23E136D98();
    v18 = v21 + -1.0;
    v19 = v16;
    v20 = v17;
    sub_23E136DA4();
    swift_release();
    v19 = v16;
    v20 = v17;
    result = sub_23E136D98();
    if (v21 < 0.0)
    {
      v19 = v16;
      v20 = v17;
      v21 = 0.0;
      return sub_23E136DA4();
    }
  }
  return result;
}

uint64_t sub_23E076A4C()
{
  sub_23E134F68();
  type metadata accessor for CountDownTimer(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A68);
  return sub_23E136DA4();
}

uint64_t sub_23E076AC0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23E1372C0();
  v0[3] = sub_23E1372B4();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23E076B3C;
  return sub_23E134F38();
}

uint64_t sub_23E076B3C()
{
  swift_task_dealloc();
  sub_23E1372A8();
  return swift_task_switch();
}

uint64_t sub_23E076BB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E076BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  __int16 v28;

  v1 = type metadata accessor for DeleteButton(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = sub_23E136FE4();
  v6 = v5;
  sub_23E076D50((uint64_t)&v20);
  v7 = v20;
  v8 = v21;
  v9 = BYTE1(v21);
  v10 = v23;
  v11 = BYTE8(v23);
  v12 = v26;
  v13 = v24;
  v14 = v25;
  v15 = v22;
  v20 = v4;
  v21 = v6;
  *(_QWORD *)&v22 = v7;
  BYTE8(v22) = v8;
  BYTE9(v22) = v9;
  v23 = v15;
  *(_QWORD *)&v24 = v10;
  BYTE8(v24) = v11;
  v25 = v13;
  v26 = v14;
  v27 = v12;
  v28 = 257;
  sub_23DF73E10(v0, (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DeleteButton);
  v16 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = swift_allocObject();
  sub_23DF89384((uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for DeleteButton);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A20);
  sub_23E07707C();
  sub_23E1369CC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23E076D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_256D1D3C0 != -1)
    swift_once();
  v2 = qword_256D346D0;
  swift_retain();
  v3 = sub_23E136CB4();
  sub_23E13681C();
  v4 = sub_23E1367B0();
  swift_release();
  KeyPath = swift_getKeyPath();
  v6 = sub_23E13672C();
  result = sub_23E135D00();
  *(_QWORD *)a1 = v2;
  *(_WORD *)(a1 + 8) = 256;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = KeyPath;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_23E076E28(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E1372E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_23DF73E10(a1, (uint64_t)v10, a2);
  sub_23E1372C0();
  v15 = sub_23E1372B4();
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v18;
  sub_23DF89384((uint64_t)v10, v17 + v16, a2);
  sub_23DFA2660((uint64_t)v13, a4, v17);
  return swift_release();
}

uint64_t sub_23E076F70()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23E1372C0();
  v0[3] = sub_23E1372B4();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23E0446AC;
  return sub_23E134F98();
}

uint64_t sub_23E076FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DeleteButton(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23E077060()
{
  return sub_23E077404(type metadata accessor for DeleteButton, (uint64_t)&unk_250ECC6C8, (uint64_t)&unk_256D23A48);
}

unint64_t sub_23E07707C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23A28;
  if (!qword_256D23A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23A20);
    v2[0] = sub_23DF89B88(&qword_256D23A30, &qword_256D23A38, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23A28);
  }
  return result;
}

uint64_t sub_23E077100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DeleteButton(0) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23E077178()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for DeleteButton(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23DF83188;
  return sub_23E076F70();
}

uint64_t sub_23E0771FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_23E136BD0();
  MEMORY[0x24BDAC7A8](v0);
  (*(void (**)(char *, _QWORD))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDF3C28]);
  result = sub_23E136C9C();
  qword_256D346D0 = result;
  return result;
}

uint64_t sub_23E077294(uint64_t a1)
{
  return sub_23E077348(a1, (uint64_t (*)(uint64_t, uint64_t))sub_23E076804);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CountDownTimer(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E07733C(uint64_t a1)
{
  return sub_23E077348(a1, sub_23E076874);
}

uint64_t sub_23E077348(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CountDownTimer(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_23E077398()
{
  type metadata accessor for CountDownTimer(0);
  return sub_23E076A4C();
}

uint64_t sub_23E0773E8()
{
  return sub_23E077404(type metadata accessor for CountDownTimer, (uint64_t)&unk_250ECC790, (uint64_t)&unk_256D23A88);
}

uint64_t sub_23E077404(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_23E076E28(v3 + ((v7 + 16) & ~v7), a1, a2, a3);
}

uint64_t sub_23E07745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CountDownTimer(0) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = sub_23E134FBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0774FC()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for CountDownTimer(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23DFA67E4;
  return sub_23E076AC0();
}

uint64_t sub_23E077588()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23A20);
  sub_23E07707C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0775D4()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23A60);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23A58);
  sub_23E134FBC();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9B0];
  sub_23DF89B88(&qword_256D23A70, &qword_256D23A58, MEMORY[0x24BDEDA68]);
  sub_23DF73F28(&qword_256D23A78, v0, MEMORY[0x24BE4D9C0]);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

_QWORD *_s24ColorPickerNavigationBarVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s24ColorPickerNavigationBarVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *_s24ColorPickerNavigationBarVMa()
{
  return &_s24ColorPickerNavigationBarVN;
}

uint64_t _s17ColorPickerResultOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E07776C + 4 * byte_23E13F3E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E0777A0 + 4 * byte_23E13F3E0[v4]))();
}

uint64_t sub_23E0777A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0777A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E0777B0);
  return result;
}

uint64_t sub_23E0777BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E0777C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E0777C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0777D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17ColorPickerResultOMa()
{
  return &_s17ColorPickerResultON;
}

unint64_t sub_23E0777F0()
{
  unint64_t result;

  result = qword_256D23A90;
  if (!qword_256D23A90)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F464, &_s17ColorPickerResultON);
    atomic_store(result, (unint64_t *)&qword_256D23A90);
  }
  return result;
}

uint64_t sub_23E077834()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E077844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  char v68;
  char *v69;
  int *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  char *v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  _BYTE v117[7];
  unsigned __int8 v118;
  _BYTE v119[7];
  unsigned __int8 v120;
  _BYTE v121[7];
  unsigned __int8 v122;
  _BYTE v123[7];
  unsigned __int8 v124;
  _BYTE v125[7];
  unsigned __int8 v126;
  _BYTE v127[7];
  unsigned __int8 v128;
  _BYTE v129[7];
  unsigned __int8 v130;
  _BYTE v131[7];
  unsigned __int8 v132;
  _BYTE v133[7];
  unsigned __int8 v134;
  _BYTE v135[7];
  unsigned __int8 v136;
  _BYTE v137[7];
  char v138;
  _BYTE v139[7];
  char v140;
  _BYTE v141[7];
  char v142;
  _BYTE v143[7];
  char v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  unsigned __int8 v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  unsigned __int8 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  uint64_t v167;
  unsigned __int8 v168;
  char *v169;
  unsigned __int8 v170;
  uint64_t v171;
  uint64_t v172;

  v111 = a1;
  v112 = a2;
  v95 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23AB0);
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v98 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23AB8);
  v5 = MEMORY[0x24BDAC7A8](v97);
  v109 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v108 = (uint64_t)&v78 - v7;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22A20);
  MEMORY[0x24BDAC7A8](v116);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8E0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23AC0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23AC8);
  v113 = *(_QWORD **)(v110 - 8);
  v17 = MEMORY[0x24BDAC7A8](v110);
  v107 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v94 = (char *)&v78 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v78 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v78 - v24;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v111;
  *(_QWORD *)(v26 + 24) = v112;
  swift_retain();
  sub_23E136DEC();
  v96 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v96(v16, v13, v10);
  v114 = v14;
  v115 = v16;
  *(_WORD *)&v16[*(int *)(v14 + 36)] = 257;
  v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v101 = v13;
  v102 = v10;
  v27(v13, v10);
  v28 = *MEMORY[0x24BDECF38];
  v29 = sub_23E135F7C();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104);
  v30(v9, v28, v29);
  v103 = sub_23E0786A8();
  result = sub_23E137158();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v92 = v28;
  v93 = v27;
  v32 = sub_23E0786F0();
  v33 = sub_23DF89B88(&qword_256D22A48, &qword_256D22A20, MEMORY[0x24BEE30C8]);
  v83 = v32;
  v106 = v33;
  v34 = (uint64_t)v115;
  sub_23E136A44();
  sub_23DF89C7C((uint64_t)v9, &qword_256D22A20);
  sub_23DF89C7C(v34, &qword_256D23AC0);
  v35 = (void (*)(char *, char *, uint64_t))v113[4];
  v104 = v23;
  v105 = v25;
  v82 = v35;
  v35(v25, v23, v110);
  sub_23E136FE4();
  sub_23E136060();
  v84 = v145;
  v85 = v147;
  v86 = v149;
  v87 = v151;
  v88 = v153;
  v89 = v155;
  v91 = v157;
  v90 = v158;
  v144 = 1;
  v142 = v146;
  v140 = v148;
  v138 = v150;
  v136 = v152;
  v134 = v154;
  v132 = v156;
  sub_23E1371A0();
  sub_23E136840();
  v36 = sub_23E136900();
  v37 = (uint64_t)v9;
  v38 = v29;
  v39 = v30;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  swift_bridgeObjectRelease();
  swift_release();
  KeyPath = swift_getKeyPath();
  v159 = v36;
  v160 = v41;
  v47 = v39;
  v48 = v38;
  v49 = v37;
  LOBYTE(v161) = v43 & 1;
  v162 = v45;
  v163 = KeyPath;
  v164 = 1;
  LOBYTE(v165) = 0;
  v47((char *)v37, *MEMORY[0x24BDECEA0], v48);
  result = sub_23E137158();
  if ((result & 1) == 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23028);
  sub_23E056D94();
  v50 = v98;
  sub_23E136A44();
  sub_23DF89C7C(v37, &qword_256D22A20);
  sub_23DFA055C(v159, v160, v161);
  swift_bridgeObjectRelease();
  swift_release();
  v52 = v99;
  v51 = v100;
  v53 = v109;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 16))(v109, v50, v100);
  *(_QWORD *)(v53 + *(int *)(v97 + 36)) = 0x3FF0000000000000;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
  v54 = v108;
  sub_23E07877C(v53, v108);
  sub_23E136FE4();
  sub_23E136060();
  v78 = v159;
  v79 = v161;
  v80 = v163;
  v81 = v165;
  v97 = v167;
  v98 = v169;
  v99 = v172;
  v100 = v171;
  v130 = 1;
  v128 = v160;
  v126 = v162;
  v124 = v164;
  v122 = v166;
  v120 = v168;
  v118 = v170;
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v111;
  *(_QWORD *)(v55 + 24) = v112;
  swift_retain();
  v56 = v101;
  sub_23E136DEC();
  v57 = v115;
  v58 = v102;
  v96(v115, v56, v102);
  *(_WORD *)&v57[*(int *)(v114 + 36)] = 257;
  v93(v56, v58);
  v47((char *)v49, v92, v48);
  result = sub_23E137158();
  if ((result & 1) != 0)
  {
    v59 = v94;
    v60 = (uint64_t)v115;
    sub_23E136A44();
    sub_23DF89C7C(v49, &qword_256D22A20);
    sub_23DF89C7C(v60, &qword_256D23AC0);
    v61 = v104;
    v62 = v110;
    v82(v104, v59, v110);
    v63 = (void (*)(char *, char *, uint64_t))v113[2];
    v63(v59, v105, v62);
    v64 = v53;
    v65 = v144;
    v66 = v54;
    v67 = v142;
    LOBYTE(v60) = v140;
    v68 = v138;
    LODWORD(v96) = v136;
    LODWORD(v101) = v134;
    LODWORD(v102) = v132;
    sub_23DF89C1C(v66, v64, &qword_256D23AB8);
    LODWORD(v103) = v130;
    LODWORD(v106) = v128;
    LODWORD(v111) = v126;
    LODWORD(v112) = v124;
    LODWORD(v114) = v122;
    LODWORD(v115) = v120;
    LODWORD(v116) = v118;
    v63(v107, v61, v62);
    v69 = v95;
    v63(v95, v59, v62);
    v70 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D23AD8);
    v71 = &v69[v70[12]];
    *(_QWORD *)v71 = 0;
    v71[8] = v65;
    *(_DWORD *)(v71 + 9) = *(_DWORD *)v143;
    *((_DWORD *)v71 + 3) = *(_DWORD *)&v143[3];
    *((_QWORD *)v71 + 2) = v84;
    v71[24] = v67;
    *(_DWORD *)(v71 + 25) = *(_DWORD *)v141;
    *((_DWORD *)v71 + 7) = *(_DWORD *)&v141[3];
    *((_QWORD *)v71 + 4) = v85;
    v71[40] = v60;
    *((_DWORD *)v71 + 11) = *(_DWORD *)&v139[3];
    *(_DWORD *)(v71 + 41) = *(_DWORD *)v139;
    *((_QWORD *)v71 + 6) = v86;
    v71[56] = v68;
    *((_DWORD *)v71 + 15) = *(_DWORD *)&v137[3];
    *(_DWORD *)(v71 + 57) = *(_DWORD *)v137;
    *((_QWORD *)v71 + 8) = v87;
    v71[72] = (char)v96;
    *((_DWORD *)v71 + 19) = *(_DWORD *)&v135[3];
    *(_DWORD *)(v71 + 73) = *(_DWORD *)v135;
    *((_QWORD *)v71 + 10) = v88;
    v71[88] = (char)v101;
    *(_DWORD *)(v71 + 89) = *(_DWORD *)v133;
    *((_DWORD *)v71 + 23) = *(_DWORD *)&v133[3];
    *((_QWORD *)v71 + 12) = v89;
    v71[104] = v102;
    *(_DWORD *)(v71 + 105) = *(_DWORD *)v131;
    *((_DWORD *)v71 + 27) = *(_DWORD *)&v131[3];
    v72 = v90;
    *((_QWORD *)v71 + 14) = v91;
    *((_QWORD *)v71 + 15) = v72;
    v73 = v109;
    sub_23DF89C1C(v109, (uint64_t)&v69[v70[16]], &qword_256D23AB8);
    v74 = &v69[v70[20]];
    *(_QWORD *)v74 = 0;
    v74[8] = v103;
    *(_DWORD *)(v74 + 9) = *(_DWORD *)v129;
    *((_DWORD *)v74 + 3) = *(_DWORD *)&v129[3];
    *((_QWORD *)v74 + 2) = v78;
    v74[24] = v106;
    *(_DWORD *)(v74 + 25) = *(_DWORD *)v127;
    *((_DWORD *)v74 + 7) = *(_DWORD *)&v127[3];
    *((_QWORD *)v74 + 4) = v79;
    v74[40] = v111;
    *((_DWORD *)v74 + 11) = *(_DWORD *)&v125[3];
    *(_DWORD *)(v74 + 41) = *(_DWORD *)v125;
    *((_QWORD *)v74 + 6) = v80;
    v74[56] = v112;
    *((_DWORD *)v74 + 15) = *(_DWORD *)&v123[3];
    *(_DWORD *)(v74 + 57) = *(_DWORD *)v123;
    *((_QWORD *)v74 + 8) = v81;
    v74[72] = v114;
    *((_DWORD *)v74 + 19) = *(_DWORD *)&v121[3];
    *(_DWORD *)(v74 + 73) = *(_DWORD *)v121;
    *((_QWORD *)v74 + 10) = v97;
    v74[88] = (char)v115;
    *(_DWORD *)(v74 + 89) = *(_DWORD *)v119;
    *((_DWORD *)v74 + 23) = *(_DWORD *)&v119[3];
    *((_QWORD *)v74 + 12) = v98;
    v74[104] = v116;
    *(_DWORD *)(v74 + 105) = *(_DWORD *)v117;
    *((_DWORD *)v74 + 27) = *(_DWORD *)&v117[3];
    v75 = v99;
    *((_QWORD *)v74 + 14) = v100;
    *((_QWORD *)v74 + 15) = v75;
    v76 = v107;
    v63(&v69[v70[24]], v107, v62);
    v77 = (void (*)(char *, uint64_t))v113[1];
    v77(v104, v62);
    sub_23DF89C7C(v108, &qword_256D23AB8);
    v77(v105, v62);
    v77(v76, v62);
    sub_23DF89C7C(v73, &qword_256D23AB8);
    return ((uint64_t (*)(char *, uint64_t))v77)(v59, v62);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_23E0783BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_23E1371A0();
  sub_23E136C54();
  v2 = sub_23E1368D0();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_23E07846C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_23E1371A0();
  v2 = sub_23E1368F4();
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  sub_23E136C54();
  v7 = sub_23E1368D0();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_23DFA055C(v2, v4, v6 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_23E078558@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  _OWORD v12[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23A98);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  *(_QWORD *)v5 = sub_23E1362D0();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23AA0);
  sub_23E077844(v7, v6, &v5[*(int *)(v8 + 44)]);
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C((uint64_t)v5, a1, &qword_256D23A98);
  v9 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D23AA8) + 36));
  v10 = v12[1];
  *v9 = v12[0];
  v9[1] = v10;
  v9[2] = v12[2];
  return sub_23DF89C7C((uint64_t)v5, &qword_256D23A98);
}

uint64_t sub_23E078660()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E078684()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

unint64_t sub_23E0786A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D22A38;
  if (!qword_256D22A38)
  {
    v1 = sub_23E135F7C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDECF78], v1);
    atomic_store(result, (unint64_t *)&qword_256D22A38);
  }
  return result;
}

unint64_t sub_23E0786F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23AD0;
  if (!qword_256D23AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23AC0);
    v2[0] = sub_23DF89B88(&qword_256D226E8, &qword_256D1E8E0, MEMORY[0x24BDF43B0]);
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23AD0);
  }
  return result;
}

uint64_t sub_23E07877C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0787C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

unint64_t sub_23E0787EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23AE0;
  if (!qword_256D23AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23AA8);
    v2[0] = sub_23DF89B88(&qword_256D23AE8, &qword_256D23A98, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23AE0);
  }
  return result;
}

ValueMetadata *_s17FullColorSpectrumVMa()
{
  return &_s17FullColorSpectrumVN;
}

uint64_t sub_23E078884()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E078894(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v19;
  double v20;
  long double v21;
  double v22;
  double v23;
  uint64_t v24;

  v10 = sub_23E135328();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E135BD4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x24BE4DCB0])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_23E0A97B8();
    v20 = v19;
    v22 = pow(v21, 1.0 / a5);
    v23 = sub_23E078BD4(v20, fmax(v22, a4), a2, a3);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return *(_QWORD *)&v23;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
}

uint64_t sub_23E078A34@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;
  long double v7;
  double v8;
  double v9;
  double v10;
  long double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = *(double *)v5;
  v7 = *(double *)(v5 + 8);
  sub_23E078C98(a2, a3, *MEMORY[0x24BDBEFB0], *(CGFloat *)(MEMORY[0x24BDBEFB0] + 8), a4, a5);
  v11 = v10;
  v12 = 0.0;
  if (v9 >= v8)
    v12 = (v9 - v8) / (1.0 - v8);
  pow(v12, v7);
  sub_23E0A9664(v11);
  v13 = *MEMORY[0x24BE4DCB0];
  v14 = sub_23E135328();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(a1, v13, v14);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
}

uint64_t sub_23E078B04(uint64_t a1, CGFloat a2, CGFloat a3)
{
  double *v3;

  return sub_23E078894(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_23E078B20@<X0>(CGContext *(**a1)@<X0>(CGContext **a1@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *v1;
  v4 = v1[1];
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v4;
  *a1 = sub_23E078D7C;
  a1[1] = (CGContext *(*)@<X0>(CGContext **@<X8>))result;
  return result;
}

unint64_t sub_23E078B6C(uint64_t a1)
{
  unint64_t result;

  result = sub_23E078B90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E078B90()
{
  unint64_t result;

  result = qword_256D23AF0;
  if (!qword_256D23AF0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F544, &_s17FullColorSpectrumVN);
    atomic_store(result, (unint64_t *)&qword_256D23AF0);
  }
  return result;
}

double sub_23E078BD4(double a1, double a2, CGFloat a3, CGFloat a4)
{
  CGFloat v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  CGFloat v11;
  CGFloat v12;
  double MidX;
  CGRect v15;

  v5 = a3;
  if (a4 < a3)
    a3 = a4;
  v6 = a3 * 0.5 * a2 + 0.0;
  v7 = (a1 + -0.4) * 6.28318531;
  v8 = *MEMORY[0x24BDBEFB0];
  v9 = *(double *)(MEMORY[0x24BDBEFB0] + 8);
  v10 = *MEMORY[0x24BDBEFB0];
  v11 = v9;
  v12 = v5;
  MidX = CGRectGetMidX(*(CGRect *)(&a4 - 3));
  v15.origin.x = v8;
  v15.origin.y = v9;
  v15.size.width = v5;
  v15.size.height = a4;
  CGRectGetMidY(v15);
  return __sincos_stret(v7).__cosval * v6 + MidX;
}

void sub_23E078C98(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  double MidX;
  long double v13;
  CGRect v14;
  CGRect v15;

  v14.origin.x = a3;
  v14.origin.y = a4;
  v14.size.width = a5;
  v14.size.height = a6;
  MidX = CGRectGetMidX(v14);
  v15.origin.x = a3;
  v15.origin.y = a4;
  v15.size.width = a5;
  v15.size.height = a6;
  v13 = CGRectGetMidY(v15) - a2;
  atan2(v13, a1 - MidX);
}

uint64_t sub_23E078D6C()
{
  return swift_deallocObject();
}

CGContext *sub_23E078D7C@<X0>(CGContext **a1@<X8>)
{
  uint64_t v1;
  double v3;
  long double v4;
  double v5;
  double v6;
  CGContext *result;

  v3 = *(double *)(v1 + 16);
  v4 = *(double *)(v1 + 24);
  sub_23E135E80();
  result = sub_23E078DBC(v5, v6, v3, v4);
  *a1 = result;
  return result;
}

CGContext *sub_23E078DBC(double a1, double a2, double a3, long double a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  CGColorSpace *DeviceRGB;
  CGContext *v12;
  CGContext *v13;
  _BYTE *Data;
  _BYTE *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double MidX;
  CGFloat v28;
  double v29;
  long double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  BOOL v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  CGContextRef v47;
  CGImageRef Image;
  CGImage *v49;
  CGContextRef v51;
  CGColorSpace *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  long double v59;
  double v60;
  CGRect v61;
  CGRect v62;

  v59 = a4;
  v60 = a3;
  v6 = sub_23E135BD4();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= -9.22337204e18)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if ((*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_78;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v9 = (uint64_t)a1;
  if ((unint64_t)((uint64_t)a1 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v10 = (uint64_t)a2;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v12 = CGBitmapContextCreateWithData(0, (uint64_t)a1, (uint64_t)a2, 8uLL, 4 * v9, DeviceRGB, 1u, 0, 0);
  v13 = v12;
  if (v12)
  {
    if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
    {
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    Data = CGBitmapContextGetData(v12);
    if (Data)
    {
      if (v10 < 0)
      {
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      v51 = v13;
      v52 = DeviceRGB;
      if (v10)
      {
        if (v9 < 0)
        {
LABEL_84:
          __break(1u);
          JUMPOUT(0x23E0793E4);
        }
        v15 = Data;
        v16 = 0;
        if ((double)v10 >= (double)v9)
          v17 = (double)v9;
        else
          v17 = (double)v10;
        v56 = v17 * 0.5;
        v53 = 1.0 - v60;
        v55 = 6.28318531;
        v54 = 0.4;
        while (1)
        {
          if (v16 == v10)
            goto LABEL_75;
          if (v9)
            break;
LABEL_18:
          if (++v16 == v10)
            goto LABEL_53;
        }
        v18 = 0;
        while (1)
        {
          v19 = v18 * v10;
          if ((unsigned __int128)(v18 * (__int128)v10) >> 64 != (v18 * v10) >> 63)
            break;
          v20 = __OFADD__(v19, v16);
          v21 = v19 + v16;
          if (v20)
            goto LABEL_59;
          v22 = v21 / v9;
          v23 = v21 % v9;
          v24 = CGPointMake(Data);
          v26 = v25;
          v61.origin.x = 0.0;
          v61.origin.y = 0.0;
          v61.size.width = (double)v9;
          v61.size.height = (double)v10;
          MidX = CGRectGetMidX(v61);
          v62.origin.x = 0.0;
          v62.origin.y = 0.0;
          v62.size.width = (double)v9;
          v62.size.height = (double)v10;
          v28 = CGRectGetMidY(v62) - v26;
          v29 = v24 - MidX;
          v30 = atan2(v28, v29);
          v31 = v30 / v55 + v54;
          if (v31 >= 0.0)
            v32 = v31;
          else
            v32 = v31 + 1.0;
          v33 = sqrt(v29 * v29 + v28 * v28) / v56;
          if (v33 <= 1.0)
            v34 = v33;
          else
            v34 = 1.0;
          v35 = v33 > 0.0;
          v36 = 0.0;
          if (!v35)
            v34 = 0.0;
          if (v34 >= v60)
            v36 = (v34 - v60) / v53;
          pow(v36, v59);
          v37 = fmod(v32, 1.0) * 6.0;
          if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
            goto LABEL_60;
          if (v37 <= -9.22337204e18)
            goto LABEL_61;
          if (v37 >= 9.22337204e18)
            goto LABEL_62;
          sub_23E135BC8();
          v38 = v22 * v9;
          if ((unsigned __int128)(v22 * (__int128)v9) >> 64 != (v22 * v9) >> 63)
            goto LABEL_63;
          v20 = __OFADD__(v23, v38);
          v39 = v23 + v38;
          if (v20)
            goto LABEL_64;
          if ((unint64_t)(v39 - 0x2000000000000000) >> 62 != 3)
            goto LABEL_65;
          sub_23E135BB0();
          v41 = v40 * 255.0;
          if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) == 0)
            goto LABEL_66;
          if (v41 <= -1.0)
            goto LABEL_67;
          if (v41 >= 256.0)
            goto LABEL_68;
          v42 = 4 * v39;
          v15[v42] = (int)v41;
          sub_23E135BA4();
          v44 = v43 * 255.0;
          if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) == 0)
            goto LABEL_69;
          if (v44 <= -1.0)
            goto LABEL_70;
          if (v44 >= 256.0)
            goto LABEL_71;
          v15[v42 | 1] = (int)v44;
          sub_23E135B98();
          v46 = v45 * 255.0;
          if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
            goto LABEL_72;
          if (v46 <= -1.0)
            goto LABEL_73;
          if (v46 >= 256.0)
            goto LABEL_74;
          ++v18;
          v15[v42 | 2] = (int)v46;
          v15[v42 | 3] = -1;
          Data = (_BYTE *)(*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v8, v58);
          if (v9 == v18)
            goto LABEL_18;
        }
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
LABEL_53:
      v47 = v51;
      Image = CGBitmapContextCreateImage(v51);
      if (Image)
      {
        v49 = Image;
        sub_23E13630C();
        sub_23E136924();
        v13 = (CGContext *)sub_23E136D20();

        return v13;
      }

    }
    else
    {

    }
    return 0;
  }

  return v13;
}

unint64_t sub_23E079400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D23AF8;
  if (!qword_256D23AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23B00);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEC6F8], v1);
    atomic_store(result, (unint64_t *)&qword_256D23AF8);
  }
  return result;
}

void destroy for MicaIconView(id *a1)
{

  swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MicaIconView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(void **)(a2 + 32);
  a1[4] = v6;
  v7 = v3;
  v8 = v4;
  swift_bridgeObjectRetain();
  v9 = v6;
  return a1;
}

uint64_t assignWithCopy for MicaIconView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void **)(a2 + 32);
  v11 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for MicaIconView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for MicaIconView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MicaIconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MicaIconView()
{
  return &type metadata for MicaIconView;
}

uint64_t sub_23E07965C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E07966C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  id v12;
  id v13;
  id v14;
  _OWORD *v15;
  __int128 v16;
  _OWORD v18[3];
  __int128 v19;
  CGRect v20;
  CGRect v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23B08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E079964();
  v7 = *(void **)v1;
  v8 = *(void **)(v1 + 8);
  v19 = *(_OWORD *)(v1 + 16);
  v9 = *(void **)(v1 + 32);
  v10 = swift_allocObject();
  v11 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 48) = *(_QWORD *)(v1 + 32);
  v12 = v7;
  v13 = v8;
  sub_23E0799E4((uint64_t)&v19);
  v14 = v9;
  sub_23E135E50();
  objc_msgSend(v13, sel_frame);
  CGRectGetWidth(v20);
  objc_msgSend(v13, sel_frame);
  CGRectGetHeight(v21);
  sub_23E136FE4();
  sub_23E135E5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a1, v6, v3);
  v15 = (_OWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D23B18) + 36));
  v16 = v18[1];
  *v15 = v18[0];
  v15[1] = v16;
  v15[2] = v18[2];
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_23E0797FC(void *a1, uint64_t a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;

  v3 = *(void **)(a2 + 8);
  v4 = objc_msgSend(v3, sel_superlayer);

  if (v4)
    return;
  v5 = objc_msgSend(a1, sel_sublayers);
  if (!v5)
  {
LABEL_13:
    objc_msgSend(a1, sel_addSublayer_, v3);
    return;
  }
  v6 = v5;
  sub_23E079964();
  v7 = sub_23E13726C();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23E137578();
    if (v8)
      goto LABEL_5;
LABEL_12:
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_12;
LABEL_5:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x24264BE18](i, v7);
      else
        v10 = *(id *)(v7 + 8 * i + 32);
      v11 = v10;
      objc_msgSend(v10, sel_removeFromSuperlayer);

    }
    goto LABEL_12;
  }
  __break(1u);
}

unint64_t sub_23E079964()
{
  unint64_t result;

  result = qword_256D23B10;
  if (!qword_256D23B10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D23B10);
  }
  return result;
}

uint64_t sub_23E0799A0()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23E0799DC(void *a1)
{
  uint64_t v1;

  sub_23E0797FC(a1, v1 + 16);
}

uint64_t sub_23E0799E4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_23E079A0C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  double Height;
  double Width;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  _OWORD v42[2];
  CATransform3D v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v14 = objc_msgSend(a1, sel_rootLayer);
  v15 = v14;
  if (!v14)
  {
    swift_bridgeObjectRelease();

    v18 = 0;
    a2 = 0;
    a3 = 0;
    v19 = 0;
LABEL_20:
    *a5 = v18;
    a5[1] = v15;
    a5[2] = a2;
    a5[3] = a3;
    a5[4] = v19;
    return;
  }
  objc_msgSend(v14, sel_setGeometryFlipped_, 1);
  if ((a4 & 1) != 0)
  {
    v16 = (void *)sub_23E137164();
    v17 = objc_msgSend(a1, sel_publishedObjectWithName_, v16);

    if (v17)
    {
      sub_23E1374DC();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    sub_23E079DA8((uint64_t)v42, (uint64_t)&v43);
    if (*(_QWORD *)&v43.m14)
    {
      sub_23E079964();
      if ((swift_dynamicCast() & 1) != 0)
      {
        objc_msgSend(v41, sel_bounds);
        Height = CGRectGetHeight(v44);
        objc_msgSend(v41, sel_bounds);
        Width = CGRectGetWidth(v45);
        objc_msgSend(v15, sel_bounds);
        v23 = v22;
        v25 = v24;
        objc_msgSend(v41, sel_bounds);
        v28 = v23 - v27;
        if (Width < Height)
          v28 = v25 - v26;
        v29 = v28 * 0.5;
        objc_msgSend(v15, sel_bounds);
        v47 = CGRectInset(v46, v29, v29);
        objc_msgSend(v15, sel_setBounds_, v47.origin.x, v47.origin.y, v47.size.width, v47.size.height);

      }
    }
    else
    {
      sub_23E079DF0((uint64_t)&v43);
    }
  }
  objc_msgSend(v15, sel_bounds);
  if (a7 / v31 >= a6 / v30)
    v32 = a6 / v30;
  else
    v32 = a7 / v31;
  objc_msgSend(v15, sel_setPosition_, a6 * 0.5, a7 * 0.5);
  CATransform3DMakeScale(&v43, v32, v32, 1.0);
  objc_msgSend(v15, sel_setTransform_, &v43);
  v33 = objc_allocWithZone(MEMORY[0x24BDE5788]);
  v18 = a1;
  swift_bridgeObjectRetain();
  v34 = v15;
  v35 = objc_msgSend(v33, sel_initWithLayer_, v34);
  if (v35)
  {
    v19 = v35;
    v36 = v35;
    objc_msgSend(v36, sel_setInitialStatesOfLayer_, v34);
    v37 = (void *)sub_23E137164();
    swift_bridgeObjectRelease();
    v38 = objc_msgSend(v34, sel_stateWithName_, v37);

    if (v38)
    {
      v39 = v38;
      v40 = objc_msgSend(v36, sel_layer);
      objc_msgSend(v36, sel_setState_ofLayer_, v39, v40);

      v36 = v40;
    }

    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_23E079DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E079DF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E079E34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23B20;
  if (!qword_256D23B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23B18);
    v2[0] = sub_23E079EA0();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23B20);
  }
  return result;
}

unint64_t sub_23E079EA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D23B28;
  if (!qword_256D23B28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23B08);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEBEC0], v1);
    atomic_store(result, (unint64_t *)&qword_256D23B28);
  }
  return result;
}

uint64_t sub_23E079EEC@<X0>(__int16 *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  float v6;
  float v7;
  BOOL v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  objc_msgSend((id)objc_opt_self(), sel_colorAtLocation_, fmax(fmin(a2 / a4 + a2 / a4 + -1.0, 1.0), -1.0), fmax(fmin(-(a3 / a5 + a3 / a5 + -1.0), 1.0), -1.0));
  v7 = roundf(v6);
  v9 = v7 >= 65536.0 || v7 <= -1.0;
  v10 = llroundf(v6);
  if (v9)
    v10 = 100;
  *a1 = v10;
  v11 = *MEMORY[0x24BE4DC88];
  v12 = sub_23E135328();
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
}

uint64_t sub_23E079FB8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SpectrumColorHelper()
{
  return objc_opt_self();
}

id sub_23E079FE8(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v7;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDDB50]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setOpaque_, 1);
  objc_msgSend(v3, sel_setPaused_, 1);
  objc_msgSend(v3, sel_setEnableSetNeedsDisplay_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CA8);
  sub_23E136648();
  v4 = objc_msgSend(objc_allocWithZone((Class)ColorTemperatureSpectrumRenderer), sel_initWithMetal_startColor_endColor_, v3, *(unsigned __int16 *)(a2 + 18), *(unsigned __int16 *)(a2 + 16));
  v5 = *(void **)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v4;
  swift_release();

  return v3;
}

uint64_t sub_23E07A0D8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t _s24ColorTemperatureSpectrumV11CoordinatorCMa()
{
  return objc_opt_self();
}

ValueMetadata *_s24ColorTemperatureSpectrumVMa()
{
  return &_s24ColorTemperatureSpectrumVN;
}

id sub_23E07A12C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23E079FE8(a1, *v1);
}

uint64_t sub_23E07A134@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s24ColorTemperatureSpectrumV11CoordinatorCMa();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_23E07A168@<X0>(__int16 *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v6;

  sub_23E079EEC(a1, a2, a3, a4, a5);
  v6 = sub_23E135328();
  return (*(uint64_t (**)(__int16 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

uint64_t sub_23E07A1AC(uint64_t a1, double a2)
{
  return sub_23E07A2F4(a1, a2);
}

uint64_t sub_23E07A1C4()
{
  sub_23E07A430();
  return sub_23E13645C();
}

uint64_t sub_23E07A214()
{
  sub_23E07A430();
  return sub_23E136408();
}

void sub_23E07A264()
{
  sub_23E07A430();
  sub_23E136450();
  __break(1u);
}

unint64_t sub_23E07A28C()
{
  unint64_t result;

  result = qword_256D23CA0;
  if (!qword_256D23CA0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F67C, &_s24ColorTemperatureSpectrumVN);
    atomic_store(result, (unint64_t *)&qword_256D23CA0);
  }
  return result;
}

unint64_t sub_23E07A2D0(uint64_t a1)
{
  unint64_t result;

  result = sub_23E07A28C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E07A2F4(uint64_t a1, double a2)
{
  unsigned int v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _WORD *v8;
  uint64_t result;
  void *v10;
  double v11;
  double v12;
  uint64_t v13;

  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_WORD *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_WORD *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  if ((*(unsigned int (**)(_WORD *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x24BE4DC88])
  {
    (*(void (**)(_WORD *, uint64_t))(v6 + 96))(v8, v5);
    LOWORD(v2) = *v8;
    v10 = (void *)objc_opt_self();
    *(float *)&v11 = (float)v2;
    objc_msgSend(v10, sel_positionForColor_, v11);
    *(double *)&result = (v12 + 1.0) * 0.5 * a2;
  }
  else
  {
    (*(void (**)(_WORD *, uint64_t))(v6 + 8))(v8, v5);
    *(double *)&result = 0.0;
  }
  return result;
}

unint64_t sub_23E07A430()
{
  unint64_t result;

  result = qword_256D23CB0;
  if (!qword_256D23CB0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F6CC, &_s24ColorTemperatureSpectrumVN);
    atomic_store(result, (unint64_t *)&qword_256D23CB0);
  }
  return result;
}

uint64_t sub_23E07A474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t EnumCaseMultiPayload;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v2 = v1;
  v4 = type metadata accessor for Device.Control(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)&v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23DFB7A04((uint64_t)v13);
  sub_23DF73E10(v2, a1, type metadata accessor for Device.ControlGroup);
  sub_23DF73E10(a1, (uint64_t)v10, type metadata accessor for Device.ControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload > 1)
  {
    sub_23DF89384((uint64_t)v10, (uint64_t)v7, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_23E138050;
    EnumCaseMultiPayload = sub_23DF89384((uint64_t)v7, v15 + v16, type metadata accessor for Device.Control);
  }
  else
  {
    v15 = *v10;
  }
  MEMORY[0x24BDAC7A8](EnumCaseMultiPayload);
  *(_QWORD *)&v19[-16] = v13;
  v17 = sub_23DFB99B0((void (*)(uint64_t))sub_23E07AAC0, (uint64_t)&v19[-32], v15, (uint64_t)v19);
  swift_bridgeObjectRelease();
  Device.ControlGroup.controls.setter(v17);
  return sub_23DF89C7C((uint64_t)v13, &qword_256D1D858);
}

uint64_t sub_23E07A680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F320);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEC8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)((char *)&v35 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v41 = a1;
  sub_23E1234C8((uint64_t)&v35 - v20);
  v39 = a2;
  sub_23DF89C1C(a2, (uint64_t)v19, &qword_256D1D858);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v22(v19, 0, 1, v5);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DF89C1C((uint64_t)v21, (uint64_t)v10, &qword_256D1EEC8);
  sub_23DF89C1C((uint64_t)v19, v23, &qword_256D1EEC8);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v24((uint64_t)v10, 1, v5) == 1)
  {
    sub_23DF89C7C((uint64_t)v19, &qword_256D1EEC8);
    sub_23DF89C7C((uint64_t)v21, &qword_256D1EEC8);
    if (v24(v23, 1, v5) == 1)
    {
LABEL_3:
      sub_23DF89C7C((uint64_t)v10, &qword_256D1EEC8);
      return sub_23DF73E10(v41, v42, type metadata accessor for Device.Control);
    }
    v36 = v10;
    v38 = v5;
    v27 = &qword_256D1F320;
    v28 = v41;
    v29 = v42;
    v30 = v39;
  }
  else
  {
    v26 = v37;
    v36 = v10;
    sub_23DF89C1C((uint64_t)v10, (uint64_t)v16, &qword_256D1EEC8);
    v38 = v5;
    if (v24(v23, 1, v5) == 1)
    {
      v27 = &qword_256D1F320;
    }
    else
    {
      sub_23E07AADC(v23, (uint64_t)v26);
      v31 = *v16 == *v26 && v16[1] == v26[1];
      if (v31 || (sub_23E137614() & 1) != 0)
      {
        type metadata accessor for IconDescriptor();
        if ((sub_23E135904() & 1) != 0)
        {
          v32 = *(int *)(v38 + 28);
          v33 = *(_QWORD *)((char *)v16 + v32) == *(_QWORD *)((char *)v26 + v32)
             && *(_QWORD *)((char *)v16 + v32 + 8) == *(_QWORD *)((char *)v26 + v32 + 8);
          if ((v33 || (sub_23E137614() & 1) != 0) && (sub_23E135904() & 1) != 0)
          {
            sub_23DF89C7C((uint64_t)v26, &qword_256D1D858);
            sub_23DF89C7C((uint64_t)v19, &qword_256D1EEC8);
            sub_23DF89C7C((uint64_t)v21, &qword_256D1EEC8);
            sub_23DF89C7C((uint64_t)v16, &qword_256D1D858);
            v10 = v36;
            goto LABEL_3;
          }
        }
      }
      sub_23DF89C7C((uint64_t)v26, &qword_256D1D858);
      v27 = &qword_256D1EEC8;
    }
    v30 = v39;
    sub_23DF89C7C((uint64_t)v19, &qword_256D1EEC8);
    sub_23DF89C7C((uint64_t)v21, &qword_256D1EEC8);
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D858);
    v29 = v42;
    v28 = v41;
  }
  v34 = (uint64_t)v40;
  sub_23DF89C7C((uint64_t)v36, v27);
  sub_23DF73E10(v28, v29, type metadata accessor for Device.Control);
  sub_23DF89C1C(v30, v34, &qword_256D1D858);
  v22((char *)v34, 0, 1, v38);
  return sub_23E122DDC(v34);
}

uint64_t sub_23E07AAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E07A680(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E07AADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for SheetBackgroundView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E07AB70 + 4 * byte_23E13F785[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E07ABA4 + 4 * byte_23E13F780[v4]))();
}

uint64_t sub_23E07ABA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E07ABAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E07ABB4);
  return result;
}

uint64_t sub_23E07ABC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E07ABC8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E07ABCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E07ABD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SheetBackgroundView()
{
  return &type metadata for SheetBackgroundView;
}

uint64_t sub_23E07ABF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E07AC00@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  uint64_t v21;
  __int16 v22;
  char v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[18];
  __int16 v35;
  char v36;

  v32 = a1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CB8);
  MEMORY[0x24BDAC7A8](v28);
  v3 = (uint64_t *)((char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21498);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E136F90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CC0);
  v11 = MEMORY[0x24BDAC7A8](v29);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CC8);
  MEMORY[0x24BDAC7A8](v31);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CD0);
  MEMORY[0x24BDAC7A8](v30);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*v1)
  {
    KeyPath = swift_getKeyPath();
    v33 = 0;
    v34[0] = KeyPath;
    memset(&v34[1], 0, 59);
    sub_23DF98590(KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0);
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CD8);
    sub_23E057338();
    sub_23E07B320(&qword_256D23CE8, &qword_256D23CD8, &qword_256D20610, &qword_256D20618);
    sub_23E136480();
    v21 = v34[17];
    v22 = v35;
    v23 = v36;
    v24 = *(_OWORD *)&v34[11];
    *(_OWORD *)v19 = *(_OWORD *)&v34[9];
    *((_OWORD *)v19 + 1) = v24;
    v25 = *(_OWORD *)&v34[15];
    *((_OWORD *)v19 + 2) = *(_OWORD *)&v34[13];
    *((_OWORD *)v19 + 3) = v25;
    *((_QWORD *)v19 + 8) = v21;
    *((_WORD *)v19 + 36) = v22;
    v19[74] = v23;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CF0);
    sub_23E07B3E0();
    sub_23E07B46C();
    sub_23E136480();
    return swift_release();
  }
  if (*v1 == 1)
  {
    if (qword_256D1D3C8 != -1)
      swift_once();
    v33 = qword_256D346D8;
    memset(v34, 0, 66);
    BYTE2(v34[8]) = 1;
    swift_retain_n();
    goto LABEL_7;
  }
  if ((sub_23E07B1DC() & 1) != 0)
  {
    sub_23E136F78();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
    sub_23DF89C1C((uint64_t)v6, (uint64_t)v13, &qword_256D21498);
    sub_23DF89C7C((uint64_t)v6, &qword_256D21498);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_23E07B518((uint64_t)v13, (uint64_t)v15);
    sub_23DF89C1C((uint64_t)v15, (uint64_t)v3, &qword_256D23CC0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CD8);
    sub_23E07B320(&qword_256D23CE0, &qword_256D23CC0, &qword_256D21490, &qword_256D21498);
    sub_23E07B320(&qword_256D23CE8, &qword_256D23CD8, &qword_256D20610, &qword_256D20618);
    sub_23E136480();
    sub_23DF89C7C((uint64_t)v15, &qword_256D23CC0);
  }
  else
  {
    *v3 = sub_23E136C30();
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CD8);
    sub_23E07B320(&qword_256D23CE0, &qword_256D23CC0, &qword_256D21490, &qword_256D21498);
    sub_23E07B320(&qword_256D23CE8, &qword_256D23CD8, &qword_256D20610, &qword_256D20618);
    sub_23E136480();
  }
  sub_23DF89C1C((uint64_t)v17, (uint64_t)v19, &qword_256D23CC8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CF0);
  sub_23E07B3E0();
  sub_23E07B46C();
  sub_23E136480();
  return sub_23DF89C7C((uint64_t)v17, &qword_256D23CC8);
}

uint64_t sub_23E07B19C()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  result = MEMORY[0x24264B578](v0);
  qword_256D346D8 = result;
  return result;
}

uint64_t sub_23E07B1DC()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v7;
  char v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F288]), sel_init);
  v1 = objc_msgSend(v0, sel_modelIdentifier);

  if (!v1)
    return 0;
  v2 = sub_23E137170();
  v4 = v3;

  v5 = v2 == 0x3431656E6F685069 && v4 == 0xEA0000000000362CLL;
  if (v5
    || (sub_23E137614() & 1) != 0
    || (v2 == 0x3231656E6F685069 ? (v7 = v4 == 0xEA0000000000382CLL) : (v7 = 0), v7))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v8 = sub_23E137614();
    swift_bridgeObjectRelease();
    return v8 & 1;
  }
}

uint64_t sub_23E07B320(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_23DFC55D8();
    v9[1] = sub_23E07B3A0(a3, a4);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E07B3A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF0710], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E07B3E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23CF8;
  if (!qword_256D23CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23CF0);
    v2[0] = sub_23E057338();
    v2[1] = sub_23E07B320(&qword_256D23CE8, &qword_256D23CD8, &qword_256D20610, &qword_256D20618);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23CF8);
  }
  return result;
}

unint64_t sub_23E07B46C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23D00;
  if (!qword_256D23D00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23CC8);
    v2[0] = sub_23E07B320(&qword_256D23CE0, &qword_256D23CC0, &qword_256D21490, &qword_256D21498);
    v2[1] = sub_23E07B320(&qword_256D23CE8, &qword_256D23CD8, &qword_256D20610, &qword_256D20618);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23D00);
  }
  return result;
}

uint64_t sub_23E07B518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E07B56C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D23D08;
  if (!qword_256D23D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D23D10);
    v2[0] = sub_23E07B3E0();
    v2[1] = sub_23E07B46C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D23D08);
  }
  return result;
}

uint64_t AccessoryControlInfo.Writer.HAPResult.init(characteristicValueMap:localCharacteristicValueMap:profileUpdate:serviceIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t result;

  *a5 = a1;
  a5[1] = a2;
  v8 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  result = sub_23DF73D88(a3, (uint64_t)a5 + *(int *)(v8 + 24));
  *(_QWORD *)((char *)a5 + *(int *)(v8 + 28)) = a4;
  return result;
}

uint64_t type metadata accessor for AccessoryControlInfo.Writer.HAPResult(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D23E88);
}

uint64_t sub_23E07B640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_23E135718();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v24 - v8;
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v24 - v11;
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v3 + 72) * v20, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_23E07D190((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_23E07B864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v15 + 63) >> 6;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    sub_23E07CF34((uint64_t)v8, v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_24;
      v21 = *(_QWORD *)(v14 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_24;
        v21 = *(_QWORD *)(v14 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_24;
          v21 = *(_QWORD *)(v14 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_20:
    v17 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(v12, 1, 1, v2, v10);
LABEL_25:
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v14 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

uint64_t static AccessoryControlInfo.Writer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D18);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DF73E10(a1, (uint64_t)v10, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23DF73E10(a2, v11, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23DF89384((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  LOBYTE(a2) = _s22HomeAccessoryControlUI16HAPControlSolverC6SourceV2eeoiySbAE_AEtFZ_0((uint64_t)v6, v11);
  sub_23DF73E54(v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF73E54((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  return a2 & 1;
}

uint64_t type metadata accessor for AccessoryControlInfo.Writer(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D23DA0);
}

uint64_t AccessoryControlInfo.Writer.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v5, v6);
  sub_23E1376A4();
  HAPControlSolver.Source.hash(into:)(a1);
  return sub_23DF73E54((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t AccessoryControlInfo.Writer.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[72];

  v1 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E137698();
  sub_23DF73E10(v0, (uint64_t)v3, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23E1376A4();
  HAPControlSolver.Source.hash(into:)((uint64_t)v6);
  sub_23DF73E54((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  return sub_23E1376D4();
}

uint64_t sub_23E07BD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D18);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DF73E10(a1, (uint64_t)v10, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23DF73E10(a2, v11, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23DF89384((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  LOBYTE(a2) = _s22HomeAccessoryControlUI16HAPControlSolverC6SourceV2eeoiySbAE_AEtFZ_0((uint64_t)v6, v11);
  sub_23DF73E54(v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF73E54((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  return a2 & 1;
}

uint64_t sub_23E07BE88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[72];

  MEMORY[0x24BDAC7A8](a1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E137698();
  sub_23DF73E10(v1, (uint64_t)v3, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23E1376A4();
  HAPControlSolver.Source.hash(into:)((uint64_t)v6);
  sub_23DF73E54((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  return sub_23E1376D4();
}

uint64_t sub_23E07BF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v4, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23E1376A4();
  HAPControlSolver.Source.hash(into:)(a1);
  return sub_23DF73E54((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t sub_23E07BFB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[72];

  MEMORY[0x24BDAC7A8](a1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E137698();
  sub_23DF73E10(v1, (uint64_t)v3, type metadata accessor for AccessoryControlInfo.Writer);
  sub_23E1376A4();
  HAPControlSolver.Source.hash(into:)((uint64_t)v6);
  sub_23DF73E54((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  return sub_23E1376D4();
}

uint64_t AccessoryControlInfo.Writer.set(_:controlId:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[15];
  char v26;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *a1;
  sub_23DF73E10(v4, (uint64_t)v16, v18);
  sub_23DF89384((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (!sub_23E130CA4((uint64_t)v13))
  {
    v22 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 1, 1, v22);
    goto LABEL_5;
  }
  v26 = v17;
  (*(void (**)(char *, uint64_t, _BYTE *))(v19 + 40))(&v26, a2, v13);
  v20 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v10, 1, v20) == 1)
  {
LABEL_5:
    sub_23E07F8D0((uint64_t)v10);
    v23 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
    return sub_23DF73E54((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }
  sub_23DF89384((uint64_t)v10, a3, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
  v21 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 0, 1, v21);
  return sub_23DF73E54((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t AccessoryControlInfo.Writer.set(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v3, (uint64_t)v14, v15);
  sub_23DF89384((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (!sub_23E130CA4((uint64_t)v11))
  {
    v19 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    goto LABEL_5;
  }
  (*(void (**)(uint64_t, char *))(v16 + 48))(a1, v11);
  v17 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v8, 1, v17) == 1)
  {
LABEL_5:
    sub_23E07F8D0((uint64_t)v8);
    v20 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }
  sub_23DF89384((uint64_t)v8, a2, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
  v18 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 0, 1, v18);
  return sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t AccessoryControlInfo.Writer.set(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_23DF73E10(v2, (uint64_t)v13, v15);
  sub_23DF89384((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (!sub_23E130CA4((uint64_t)v10))
  {
    v19 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
    goto LABEL_5;
  }
  v23 = v14;
  (*(void (**)(uint64_t *, char *))(v16 + 56))(&v23, v10);
  v17 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 1, v17) == 1)
  {
LABEL_5:
    sub_23E07F8D0((uint64_t)v7);
    v20 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }
  sub_23DF89384((uint64_t)v7, a2, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
  v18 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 0, 1, v18);
  return sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = *((_BYTE *)a1 + 8);
  v16 = a1[2];
  v15 = a1[3];
  v17 = *((_BYTE *)a1 + 32);
  v18 = *((_BYTE *)a1 + 33);
  sub_23DF73E10(v2, (uint64_t)v12, v19);
  sub_23DF89384((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (!sub_23E130CA4((uint64_t)v9))
  {
    v24 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
    goto LABEL_5;
  }
  v28 = v13;
  v29 = v14;
  v30 = v16;
  v31 = v15;
  v32 = v17;
  v33 = v18;
  (*(void (**)(uint64_t *, char *))(v20 + 72))(&v28, v9);
  v21 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v6, 1, v21) == 1)
  {
LABEL_5:
    sub_23E07F8D0((uint64_t)v6);
    v25 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v27, 1, 1, v25);
    return sub_23DF73E54((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }
  v22 = v27;
  sub_23DF89384((uint64_t)v6, v27, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
  v23 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  return sub_23DF73E54((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t AccessoryControlInfo.Writer.set(_:config:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  char v14;
  char v15;
  __int16 v16;
  char v17;
  __int16 v18;
  char v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[4];
  __int16 v33;
  char v34;
  __int16 v35;
  char v36;

  v29 = a1;
  v31 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccessoryControlInfo.Writer(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v14 = a2[1];
  v15 = a2[2];
  v16 = *((_WORD *)a2 + 2);
  v17 = a2[6];
  v18 = *((_WORD *)a2 + 4);
  v19 = a2[10];
  sub_23DF73E10(v30, (uint64_t)v12, v20);
  sub_23DF89384((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (!sub_23E130CA4((uint64_t)v9))
  {
    v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
    goto LABEL_5;
  }
  v32[0] = v13;
  v32[1] = v14;
  v32[2] = v15;
  v33 = v16;
  v34 = v17;
  v35 = v18;
  v36 = v19;
  (*(void (**)(uint64_t, _BYTE *, char *))(v21 + 64))(v29, v32, v9);
  v22 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v6, 1, v22) == 1)
  {
LABEL_5:
    sub_23E07F8D0((uint64_t)v6);
    v26 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v31, 1, 1, v26);
    return sub_23DF73E54((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }
  v23 = v31;
  sub_23DF89384((uint64_t)v6, v31, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
  v24 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  return sub_23DF73E54((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t AccessoryControlInfo.Writer.HAPResult.characteristicValueMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AccessoryControlInfo.Writer.HAPResult.localCharacteristicValueMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AccessoryControlInfo.Writer.HAPResult.profileUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0) + 24);
  return sub_23E07F924(v3, a1);
}

uint64_t AccessoryControlInfo.Writer.HAPResult.serviceIDs.getter()
{
  type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E07CAF0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;

  v4 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v24 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v12 = (unint64_t *)(a1
                             + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
    v13 = v12[1];
    v23 = *v12;
    swift_bridgeObjectRetain();
    v22 = v13;
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x24BEE4B08];
    v14 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v12;
    do
    {
      sub_23DF73E10(v15, (uint64_t)v7, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
      v16 = swift_bridgeObjectRetain();
      sub_23E07B864(v16);
      sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
      v15 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v10 = v24;
    v17 = v25;
    sub_23E07F924((uint64_t)v12 + *(int *)(v4 + 24), (uint64_t)v24);
    v18 = v22;
    v19 = v23;
  }
  else
  {
    v19 = sub_23E0ECA08(MEMORY[0x24BEE4AF8]);
    v20 = sub_23E135538();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
    v18 = 0;
    v17 = MEMORY[0x24BEE4B08];
  }
  *a2 = v19;
  a2[1] = v18;
  result = sub_23DF73D88((uint64_t)v10, (uint64_t)a2 + *(int *)(v4 + 24));
  *(unint64_t *)((char *)a2 + *(int *)(v4 + 28)) = v17;
  return result;
}

uint64_t sub_23E07CCBC(uint64_t *a1, uint64_t a2)
{
  return sub_23E07CE00(a1, a2, (uint64_t *)&unk_256D23F00, type metadata accessor for HMCharacteristicValueTargetHumidifierDehumidifierState);
}

uint64_t sub_23E07CCD0(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_23E137698();
  sub_23E1376A4();
  v6 = sub_23E1376D4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E07E05C(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E07CDEC(uint64_t *a1, uint64_t a2)
{
  return sub_23E07CE00(a1, a2, &qword_256D23EF0, type metadata accessor for HMCharacteristicValueTargetSecuritySystemState);
}

uint64_t sub_23E07CE00(uint64_t *a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v9 = *v4;
  sub_23E137698();
  sub_23E1376A4();
  v10 = sub_23E1376D4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v4;
    *v4 = 0x8000000000000000;
    sub_23E07E1B8(a2, v12, isUniquelyReferenced_nonNull_native, a3, a4);
    *v4 = v17;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(v9 + 48);
  if (*(_QWORD *)(v13 + 8 * v12) != a2)
  {
    v14 = ~v11;
    do
    {
      v12 = (v12 + 1) & v14;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v13 + 8 * v12) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v4 + 48) + 8 * v12);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E07CF34(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23DF73F28(&qword_256D1D570, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23E137110();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_23E137158();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E07E314((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23E07D190(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23E135718();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23DF73F28(&qword_256D1D808, v11, MEMORY[0x24BE4E3D8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23E137110();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23DF73F28(&qword_256D23EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], MEMORY[0x24BE4E3E0]);
      v21 = sub_23E137158();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E07E568((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23E07D3EC(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_23E137698();
  sub_23E1376A4();
  v6 = sub_23E1376D4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E07E7BC(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E07D508()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23EF8);
  result = sub_23E137518();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23E137698();
      sub_23E1376A4();
      result = sub_23E1376D4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E07D7B0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_23E137518();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v3 = v2;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
      sub_23E137698();
      sub_23E1376A4();
      result = sub_23E1376D4();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23E07DA54(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_23E137518();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_23DF73F28(v45, v44, v46);
      result = sub_23E137110();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_23E07DDB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23ED8);
  result = sub_23E137518();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23E137698();
      sub_23E1376A4();
      result = sub_23E1376D4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E07E05C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E07D508();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E07ECC8(&qword_256D23EF8);
      goto LABEL_14;
    }
    sub_23E07EE50();
  }
  v8 = *v3;
  sub_23E137698();
  sub_23E1376A4();
  result = sub_23E1376D4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_23E13762C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23E07E1B8(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(_QWORD))
{
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v8 = result;
  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E07D7B0(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23E07E918(a4);
      goto LABEL_14;
    }
    sub_23E07F0C8(v11, a4);
  }
  v12 = *v5;
  sub_23E137698();
  sub_23E1376A4();
  result = sub_23E1376D4();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a2 = result & ~v13;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = *(_QWORD *)(v12 + 48);
    if (*(_QWORD *)(v14 + 8 * a2) == v8)
    {
LABEL_13:
      a5(0);
      result = sub_23E13762C();
      __break(1u);
    }
    else
    {
      v15 = ~v13;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v14 + 8 * a2) == v8)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = v8;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_23E07E314(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E07DA54(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_256D23ED0, &qword_256D1D570, MEMORY[0x24BDCEA88]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_23E07EAA4((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_256D23ED0);
      goto LABEL_12;
    }
    sub_23E07F33C(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_256D23ED0, &qword_256D1D570, MEMORY[0x24BDCEA88]);
  }
  v13 = *v3;
  sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_23E137110();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_23E137158();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23E13762C();
  __break(1u);
  return result;
}

uint64_t sub_23E07E568(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23E135718();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E07DA54(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], &qword_256D23EE8, &qword_256D1D808, MEMORY[0x24BE4E3D8]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_23E07EAA4((uint64_t (*)(_QWORD))MEMORY[0x24BE4E3C8], &qword_256D23EE8);
      goto LABEL_12;
    }
    sub_23E07F33C(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], &qword_256D23EE8, &qword_256D1D808, MEMORY[0x24BE4E3D8]);
  }
  v13 = *v3;
  sub_23DF73F28(&qword_256D1D808, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], MEMORY[0x24BE4E3D8]);
  v14 = sub_23E137110();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23DF73F28(&qword_256D23EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], MEMORY[0x24BE4E3E0]);
      v19 = sub_23E137158();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23E13762C();
  __break(1u);
  return result;
}

uint64_t sub_23E07E7BC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E07DDB4();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E07ECC8(&qword_256D23ED8);
      goto LABEL_14;
    }
    sub_23E07F658();
  }
  v8 = *v3;
  sub_23E137698();
  sub_23E1376A4();
  result = sub_23E1376D4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_23E13762C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_23E07E918(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E13750C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E07EAA4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_23E13750C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_23E07ECC8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E13750C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E07EE50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23EF8);
  result = sub_23E137518();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23E137698();
    sub_23E1376A4();
    result = sub_23E1376D4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E07F0C8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_23E137518();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
    sub_23E137698();
    sub_23E1376A4();
    result = sub_23E1376D4();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v2;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E07F33C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_23E137518();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_23DF73F28(v40, v39, v41);
    result = sub_23E137110();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E07F658()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D23ED8);
  result = sub_23E137518();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23E137698();
    sub_23E1376A4();
    result = sub_23E1376D4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E07F8D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AccessoryControlInfo.Writer.Result(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D23E20);
}

uint64_t sub_23E07F924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E07F96C()
{
  return sub_23DF73F28(&qword_256D23D28, type metadata accessor for AccessoryControlInfo.Writer, (uint64_t)&protocol conformance descriptor for AccessoryControlInfo.Writer);
}

char *_s6WriterOwCP(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, _QWORD, uint64_t, int *);
  void (*v90)(char *, char *);
  void (*v91)(char *, char *);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23E134C80();
    v93 = *(_QWORD *)(v6 - 8);
    v94 = v6;
    v90 = *(void (**)(char *, char *))(v93 + 16);
    v90(a1, a2);
    v7 = (int *)type metadata accessor for HAPControlSolver.Source();
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23E134E9C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[v7[6]], &a2[v7[6]], v11);
    v13 = v7[7];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v7[8];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v7[9];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23E135334();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    a1[v7[10]] = a2[v7[10]];
    v29 = v7[11];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v32 = sub_23E134E60();
    v91 = *(void (**)(char *, char *))(*(_QWORD *)(v32 - 8) + 16);
    v92 = v32;
    v91(v30, v31);
    a1[v7[12]] = a2[v7[12]];
    v33 = v7[13];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = v7[14];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v38[8] = v39[8];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_QWORD *)&a1[v7[15]] = *(_QWORD *)&a2[v7[15]];
    *(_QWORD *)&a1[v7[16]] = *(_QWORD *)&a2[v7[16]];
    v40 = v7[17];
    v41 = &a1[v40];
    v42 = &a2[v40];
    v43 = sub_23E135ACC();
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v41, v42, v43);
    v45 = v7[18];
    v46 = &a1[v45];
    v47 = &a2[v45];
    v48 = sub_23E135580();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    v49 = v7[19];
    v50 = &a1[v49];
    v51 = &a2[v49];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(&a2[v49], 1, v94))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v90)(v50, v51, v94);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v50, 0, 1, v94);
    }
    v53 = v7[20];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v56 = sub_23E134FEC();
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v59 = v7[21];
    v60 = &a1[v59];
    v61 = &a2[v59];
    v62 = (int *)type metadata accessor for MatterControlSolver.Source(0);
    v63 = *((_QWORD *)v62 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v61, 1, v62))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v60, v61, v56);
      v65 = type metadata accessor for MatterControlSolver.SourcePath(0);
      v66 = *(int *)(v65 + 20);
      v67 = &v60[v66];
      v68 = &v61[v66];
      v69 = sub_23E134E78();
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
      v72 = v62[5];
      v73 = &v60[v72];
      v74 = &v61[v72];
      v75 = sub_23E13552C();
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_QWORD *)&v60[v62[6]] = *(_QWORD *)&v61[v62[6]];
      v60[v62[7]] = v61[v62[7]];
      v78 = v62[8];
      v79 = &v60[v78];
      v80 = &v61[v78];
      v79[2] = v80[2];
      *(_WORD *)v79 = *(_WORD *)v80;
      v81 = v62[9];
      v82 = &v60[v81];
      v83 = &v61[v81];
      swift_bridgeObjectRetain();
      ((void (*)(char *, char *, uint64_t))v91)(v82, v83, v92);
      v84 = v62[10];
      v85 = &v60[v84];
      v86 = &v61[v84];
      v87 = *((_QWORD *)v86 + 1);
      *(_QWORD *)v85 = *(_QWORD *)v86;
      *((_QWORD *)v85 + 1) = v87;
      v88 = *(void (**)(char *, _QWORD, uint64_t, int *))(v63 + 56);
      swift_bridgeObjectRetain();
      v88(v60, 0, 1, v62);
    }
  }
  return a1;
}

uint64_t _s6WriterOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(a1, v2);
  v5 = (int *)type metadata accessor for HAPControlSolver.Source();
  v6 = a1 + v5[5];
  v7 = sub_23E134E9C();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + v5[6], v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + v5[9];
  v10 = sub_23E135334();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + v5[11];
  v13 = sub_23E134E60();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1 + v5[17];
  v16 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + v5[18];
  v18 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + v5[19];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v19, 1, v2))
    v4(v19, v2);
  v20 = a1 + v5[20];
  v21 = sub_23E134FEC();
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23 = a1 + v5[21];
  v24 = type metadata accessor for MatterControlSolver.Source(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24);
  if (!(_DWORD)result)
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
    v26 = v23 + *(int *)(type metadata accessor for MatterControlSolver.SourcePath(0) + 20);
    v27 = sub_23E134E78();
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    v29 = v23 + *(int *)(v24 + 20);
    v30 = sub_23E13552C();
    v31 = *(_QWORD *)(v30 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    swift_bridgeObjectRelease();
    v14(v23 + *(int *)(v24 + 36), v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6WriterOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, _QWORD, uint64_t, int *);
  void (*v87)(uint64_t, uint64_t);
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v4 = sub_23E134C80();
  v90 = *(_QWORD *)(v4 - 8);
  v91 = v4;
  v87 = *(void (**)(uint64_t, uint64_t))(v90 + 16);
  v87(a1, a2);
  v5 = (int *)type metadata accessor for HAPControlSolver.Source();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E134E9C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + v5[6], a2 + v5[6], v9);
  v11 = v5[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v5[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v5[9];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_23E135334();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24(v21, 1, v22))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  v26 = v5[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23E134E60();
  v88 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v89 = v29;
  v88(v27, v28);
  *(_BYTE *)(a1 + v5[12]) = *(_BYTE *)(a2 + v5[12]);
  v30 = v5[13];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v5[14];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_QWORD *)(a1 + v5[15]) = *(_QWORD *)(a2 + v5[15]);
  *(_QWORD *)(a1 + v5[16]) = *(_QWORD *)(a2 + v5[16]);
  v37 = v5[17];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = sub_23E135ACC();
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41(v38, v39, v40);
  v42 = v5[18];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v5[19];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(a2 + v46, 1, v91))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    ((void (*)(void *, const void *, uint64_t))v87)(v47, v48, v91);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v47, 0, 1, v91);
  }
  v50 = v5[20];
  v51 = (void *)(a1 + v50);
  v52 = (const void *)(a2 + v50);
  v53 = sub_23E134FEC();
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v56 = v5[21];
  v57 = (char *)(a1 + v56);
  v58 = (char *)(a2 + v56);
  v59 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v60 = *((_QWORD *)v59 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v60 + 48))(v58, 1, v59))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v57, v58, v53);
    v62 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v63 = *(int *)(v62 + 20);
    v64 = &v57[v63];
    v65 = &v58[v63];
    v66 = sub_23E134E78();
    v67 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    v57[*(int *)(v62 + 24)] = v58[*(int *)(v62 + 24)];
    v69 = v59[5];
    v70 = &v57[v69];
    v71 = &v58[v69];
    v72 = sub_23E13552C();
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    *(_QWORD *)&v57[v59[6]] = *(_QWORD *)&v58[v59[6]];
    v57[v59[7]] = v58[v59[7]];
    v75 = v59[8];
    v76 = &v57[v75];
    v77 = &v58[v75];
    v76[2] = v77[2];
    *(_WORD *)v76 = *(_WORD *)v77;
    v78 = v59[9];
    v79 = &v57[v78];
    v80 = &v58[v78];
    swift_bridgeObjectRetain();
    ((void (*)(char *, char *, uint64_t))v88)(v79, v80, v89);
    v81 = v59[10];
    v82 = &v57[v81];
    v83 = &v58[v81];
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    v85 = *(void (**)(char *, _QWORD, uint64_t, int *))(v60 + 56);
    swift_bridgeObjectRetain();
    v85(v57, 0, 1, v59);
  }
  return a1;
}

uint64_t _s6WriterOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  int *v64;
  uint64_t v65;
  uint64_t (*v66)(_BYTE *, uint64_t, int *);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t, uint64_t);
  int v83;
  int v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int16 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  void (*v102)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(char *, uint64_t, uint64_t);
  int v110;
  int v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  void (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v4 = sub_23E134C80();
  v126 = *(_QWORD *)(v4 - 8);
  v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 24);
  v122(a1, a2, v4);
  v5 = (int *)type metadata accessor for HAPControlSolver.Source();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E134E9C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + v5[6], a2 + v5[6], v9);
  v11 = v5[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v5[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v5[9];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_23E135334();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v10) = v22(v18, 1, v20);
  v23 = v22(v19, 1, v20);
  if ((_DWORD)v10)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  v25 = v5[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_23E134E60();
  v124 = *(_QWORD *)(v28 - 8);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 24);
  v29(v26, v27, v28);
  *(_BYTE *)(a1 + v5[12]) = *(_BYTE *)(a2 + v5[12]);
  v30 = v5[13];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v5[14];
  v34 = a1 + v33;
  v35 = (uint64_t *)(a2 + v33);
  v36 = *v35;
  *(_BYTE *)(v34 + 8) = *((_BYTE *)v35 + 8);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(a1 + v5[15]) = *(_QWORD *)(a2 + v5[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v5[16]) = *(_QWORD *)(a2 + v5[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v5[17];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
  v41 = v5[18];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  v45 = v5[19];
  v46 = (void *)(a1 + v45);
  v47 = (const void *)(a2 + v45);
  v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  v49 = v48(a1 + v45, 1, v4);
  v50 = v48((uint64_t)v47, 1, v4);
  v125 = v28;
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, const void *, uint64_t))(v126 + 16))(v46, v47, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v46, 0, 1, v4);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v126 + 8))(v46, v4);
LABEL_12:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_13;
  }
  v122((uint64_t)v46, (uint64_t)v47, v4);
LABEL_13:
  v52 = v5[20];
  v53 = (void *)(a1 + v52);
  v54 = (void *)(a2 + v52);
  v55 = sub_23E134FEC();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  v123 = v29;
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
LABEL_18:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v53, v54, v55);
LABEL_19:
  v61 = v5[21];
  v62 = (_BYTE *)(a1 + v61);
  v63 = (_BYTE *)(a2 + v61);
  v64 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v65 = *((_QWORD *)v64 - 1);
  v66 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (v68)
    {
      sub_23DF73E54((uint64_t)v62, type metadata accessor for MatterControlSolver.Source);
      goto LABEL_25;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v56 + 24))(v62, v63, v55);
    v127 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v77 = *(int *)(v127 + 20);
    v78 = &v62[v77];
    v79 = &v63[v77];
    v80 = sub_23E134E78();
    v81 = *(_QWORD *)(v80 - 8);
    v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
    v83 = v82(v78, 1, v80);
    v84 = v82(v79, 1, v80);
    if (v83)
    {
      if (!v84)
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v84)
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 24))(v78, v79, v80);
LABEL_40:
        v62[*(int *)(v127 + 24)] = v63[*(int *)(v127 + 24)];
        v104 = v64[5];
        v105 = &v62[v104];
        v106 = &v63[v104];
        v107 = sub_23E13552C();
        v108 = *(_QWORD *)(v107 - 8);
        v109 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48);
        v110 = v109(v105, 1, v107);
        v111 = v109(v106, 1, v107);
        if (v110)
        {
          v112 = v123;
          if (!v111)
          {
            (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v106, v107);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
LABEL_46:
            *(_QWORD *)&v62[v64[6]] = *(_QWORD *)&v63[v64[6]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v62[v64[7]] = v63[v64[7]];
            v114 = v64[8];
            v115 = &v62[v114];
            v116 = &v63[v114];
            v117 = v116[2];
            *(_WORD *)v115 = *(_WORD *)v116;
            v115[2] = v117;
            v112((uint64_t)&v62[v64[9]], (uint64_t)&v63[v64[9]], v125);
            v118 = v64[10];
            v119 = &v62[v118];
            v120 = &v63[v118];
            *v119 = *v120;
            v119[1] = v120[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          v112 = v123;
          if (!v111)
          {
            (*(void (**)(char *, char *, uint64_t))(v108 + 24))(v105, v106, v107);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v108 + 8))(v105, v107);
        }
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v81 + 8))(v78, v80);
    }
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_40;
  }
  if (v68)
  {
LABEL_25:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v56 + 16))(v62, v63, v55);
  v69 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v70 = *(int *)(v69 + 20);
  v71 = &v62[v70];
  v72 = &v63[v70];
  v73 = sub_23E134E78();
  v74 = *(_QWORD *)(v73 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v62[*(int *)(v69 + 24)] = v63[*(int *)(v69 + 24)];
  v85 = v64[5];
  v86 = &v62[v85];
  v87 = &v63[v85];
  v88 = sub_23E13552C();
  v89 = *(_QWORD *)(v88 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
  }
  *(_QWORD *)&v62[v64[6]] = *(_QWORD *)&v63[v64[6]];
  v62[v64[7]] = v63[v64[7]];
  v91 = v64[8];
  v92 = &v62[v91];
  v93 = &v63[v91];
  v94 = *(_WORD *)v93;
  v92[2] = v93[2];
  *(_WORD *)v92 = v94;
  v95 = v64[9];
  v96 = &v62[v95];
  v97 = &v63[v95];
  v98 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
  swift_bridgeObjectRetain();
  v98(v96, v97, v125);
  v99 = v64[10];
  v100 = &v62[v99];
  v101 = &v63[v99];
  *v100 = *v101;
  v100[1] = v101[1];
  v102 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v65 + 56);
  swift_bridgeObjectRetain();
  v102(v62, 0, 1, v64);
  return a1;
}

uint64_t _s6WriterOwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, v4);
  v7 = (int *)type metadata accessor for HAPControlSolver.Source();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23E134E9C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[6], a2 + v7[6], v11);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  v13 = v7[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_23E135334();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_BYTE *)(a1 + v7[10]) = *(_BYTE *)(a2 + v7[10]);
  v19 = v7[11];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23E134E60();
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v68(v20, v21, v22);
  *(_BYTE *)(a1 + v7[12]) = *(_BYTE *)(a2 + v7[12]);
  *(_OWORD *)(a1 + v7[13]) = *(_OWORD *)(a2 + v7[13]);
  v23 = v7[14];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(a1 + v7[15]) = *(_QWORD *)(a2 + v7[15]);
  *(_QWORD *)(a1 + v7[16]) = *(_QWORD *)(a2 + v7[16]);
  v26 = v7[17];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = v7[18];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  v34 = v7[19];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a2 + v34, 1, v4))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v35, (uint64_t)v36, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v35, 0, 1, v4);
  }
  v38 = v7[20];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  v41 = sub_23E134FEC();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = v7[21];
  v45 = (char *)(a1 + v44);
  v46 = (char *)(a2 + v44);
  v47 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v48 = *((_QWORD *)v47 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v67 = v22;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v46, v41);
    v50 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v51 = *(int *)(v50 + 20);
    v52 = &v45[v51];
    v53 = &v46[v51];
    v54 = sub_23E134E78();
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v45[*(int *)(v50 + 24)] = v46[*(int *)(v50 + 24)];
    v57 = v47[5];
    v58 = &v45[v57];
    v59 = &v46[v57];
    v60 = sub_23E13552C();
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    *(_QWORD *)&v45[v47[6]] = *(_QWORD *)&v46[v47[6]];
    v45[v47[7]] = v46[v47[7]];
    v63 = v47[8];
    v64 = &v45[v63];
    v65 = &v46[v63];
    v64[2] = v65[2];
    *(_WORD *)v64 = *(_WORD *)v65;
    v68((uint64_t)&v45[v47[9]], (uint64_t)&v46[v47[9]], v67);
    *(_OWORD *)&v45[v47[10]] = *(_OWORD *)&v46[v47[10]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v48 + 56))(v45, 0, 1, v47);
  }
  return a1;
}

uint64_t _s6WriterOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  int *v69;
  uint64_t v70;
  uint64_t (*v71)(_BYTE *, uint64_t, int *);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v4 = sub_23E134C80();
  v123 = *(_QWORD *)(v4 - 8);
  v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 40);
  v119(a1, a2, v4);
  v5 = (int *)type metadata accessor for HAPControlSolver.Source();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E134E9C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + v5[6], a2 + v5[6], v9);
  v11 = v5[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = v5[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v5[9];
  v22 = (void *)(a1 + v21);
  v23 = (void *)(a2 + v21);
  v24 = sub_23E135334();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  LODWORD(v10) = v26(v22, 1, v24);
  v27 = v26(v23, 1, v24);
  if ((_DWORD)v10)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_7:
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  v29 = v5[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23E134E60();
  v121 = *(_QWORD *)(v32 - 8);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 40);
  v33(v30, v31, v32);
  *(_BYTE *)(a1 + v5[12]) = *(_BYTE *)(a2 + v5[12]);
  v34 = v5[13];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = v5[14];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  *(_QWORD *)(a1 + v5[15]) = *(_QWORD *)(a2 + v5[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v5[16]) = *(_QWORD *)(a2 + v5[16]);
  swift_bridgeObjectRelease();
  v42 = v5[17];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_23E135ACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  v46 = v5[18];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = sub_23E135580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  v50 = v5[19];
  v51 = (void *)(a1 + v50);
  v52 = (const void *)(a2 + v50);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
  v54 = v53(a1 + v50, 1, v4);
  v55 = v53((uint64_t)v52, 1, v4);
  v122 = v32;
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, const void *, uint64_t))(v123 + 32))(v51, v52, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v51, 0, 1, v4);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v123 + 8))(v51, v4);
LABEL_12:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_13;
  }
  v119((uint64_t)v51, (uint64_t)v52, v4);
LABEL_13:
  v57 = v5[20];
  v58 = (void *)(a1 + v57);
  v59 = (void *)(a2 + v57);
  v60 = sub_23E134FEC();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  v120 = v33;
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 32))(v58, v59, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
LABEL_18:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v61 + 40))(v58, v59, v60);
LABEL_19:
  v66 = v5[21];
  v67 = (_BYTE *)(a1 + v66);
  v68 = (_BYTE *)(a2 + v66);
  v69 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  v70 = *((_QWORD *)v69 - 1);
  v71 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v70 + 48);
  v72 = v71(v67, 1, v69);
  v73 = v71(v68, 1, v69);
  if (!v72)
  {
    if (v73)
    {
      sub_23DF73E54((uint64_t)v67, type metadata accessor for MatterControlSolver.Source);
      goto LABEL_25;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 40))(v67, v68, v60);
    v124 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v82 = *(int *)(v124 + 20);
    v83 = &v67[v82];
    v84 = &v68[v82];
    v85 = sub_23E134E78();
    v86 = *(_QWORD *)(v85 - 8);
    v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
    v88 = v87(v83, 1, v85);
    v89 = v87(v84, 1, v85);
    if (v88)
    {
      if (!v89)
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v83, v84, v85);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v89)
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v83, v84, v85);
LABEL_40:
        v67[*(int *)(v124 + 24)] = v68[*(int *)(v124 + 24)];
        v100 = v69[5];
        v101 = &v67[v100];
        v102 = &v68[v100];
        v103 = sub_23E13552C();
        v104 = *(_QWORD *)(v103 - 8);
        v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
        v106 = v105(v101, 1, v103);
        v107 = v105(v102, 1, v103);
        if (v106)
        {
          v108 = v120;
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v101, v102, v103);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
LABEL_46:
            *(_QWORD *)&v67[v69[6]] = *(_QWORD *)&v68[v69[6]];
            swift_bridgeObjectRelease();
            v67[v69[7]] = v68[v69[7]];
            v110 = v69[8];
            v111 = &v67[v110];
            v112 = &v68[v110];
            *(_WORD *)v111 = *(_WORD *)v112;
            v111[2] = v112[2];
            v108((uint64_t)&v67[v69[9]], (uint64_t)&v68[v69[9]], v122);
            v113 = v69[10];
            v114 = &v67[v113];
            v115 = (uint64_t *)&v68[v113];
            v117 = *v115;
            v116 = v115[1];
            *v114 = v117;
            v114[1] = v116;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          v108 = v120;
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v104 + 40))(v101, v102, v103);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v103);
        }
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v85);
    }
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_40;
  }
  if (v73)
  {
LABEL_25:
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 32))(v67, v68, v60);
  v74 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v75 = *(int *)(v74 + 20);
  v76 = &v67[v75];
  v77 = &v68[v75];
  v78 = sub_23E134E78();
  v79 = *(_QWORD *)(v78 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
  {
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  v67[*(int *)(v74 + 24)] = v68[*(int *)(v74 + 24)];
  v90 = v69[5];
  v91 = &v67[v90];
  v92 = &v68[v90];
  v93 = sub_23E13552C();
  v94 = *(_QWORD *)(v93 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
  {
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v91, v92, v93);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
  }
  *(_QWORD *)&v67[v69[6]] = *(_QWORD *)&v68[v69[6]];
  v67[v69[7]] = v68[v69[7]];
  v96 = v69[8];
  v97 = &v67[v96];
  v98 = &v68[v96];
  v97[2] = v98[2];
  *(_WORD *)v97 = *(_WORD *)v98;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v121 + 32))(&v67[v69[9]], &v68[v69[9]], v122);
  *(_OWORD *)&v67[v69[10]] = *(_OWORD *)&v68[v69[10]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v70 + 56))(v67, 0, 1, v69);
  return a1;
}

uint64_t _s6WriterOwet()
{
  type metadata accessor for HAPControlSolver.Source();
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E081F64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E134E9C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_22:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[9];
    }
    else
    {
      v17 = sub_23E134E60();
      v12 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v17;
        v13 = a3[11];
      }
      else
      {
        v18 = sub_23E135ACC();
        v12 = *(_QWORD *)(v18 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v18;
          v13 = a3[17];
        }
        else
        {
          v19 = sub_23E135580();
          v12 = *(_QWORD *)(v19 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v19;
            v13 = a3[18];
          }
          else
          {
            v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
            v12 = *(_QWORD *)(v20 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v20;
              v13 = a3[19];
            }
            else
            {
              v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
              v12 = *(_QWORD *)(v21 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v21;
                v13 = a3[20];
              }
              else
              {
                v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
                v12 = *(_QWORD *)(v8 - 8);
                v13 = a3[21];
              }
            }
          }
        }
      }
    }
    goto LABEL_22;
  }
  v14 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t _s6WriterOwst()
{
  type metadata accessor for HAPControlSolver.Source();
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E082168(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_23E134C80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_23E134E9C();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
        return result;
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219F0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v17 = sub_23E134E60();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[11];
        }
        else
        {
          v18 = sub_23E135ACC();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[17];
          }
          else
          {
            v19 = sub_23E135580();
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[18];
            }
            else
            {
              v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[19];
              }
              else
              {
                v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D219E8);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[20];
                }
                else
                {
                  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
                  v14 = *(_QWORD *)(v10 - 8);
                  v15 = a4[21];
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E08231C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E082A0C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HAPControlSolver.Source);
}

uint64_t *_s6WriterO6ResultOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v6 = a1;
    a1[1] = a2[1];
    v7 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    v8 = *(int *)(v7 + 24);
    v9 = (char *)v6 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E135538();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)v6 + *(int *)(v7 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 28));
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t _s6WriterO6ResultOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0) + 24);
  v3 = sub_23E135538();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *_s6WriterO6ResultOwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v6 = *(int *)(v5 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E135538();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(v5 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6WriterO6ResultOwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v5 = *(int *)(v4 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E135538();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(v4 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v4 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s6WriterO6ResultOwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v6 = *(int *)(v5 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E135538();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(v5 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 28));
  return a1;
}

_QWORD *_s6WriterO6ResultOwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v5 = *(int *)(v4 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E135538();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v6, v7, v8);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(v4 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v4 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6WriterO6ResultOwet()
{
  type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s6WriterO6ResultOwst()
{
  type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E082A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E082A0C(a1, a2, a3, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
}

uint64_t sub_23E082A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v7 + 84);
  }
  return result;
}

uint64_t *_s6WriterO9HAPResultVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E135538();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t _s6WriterO9HAPResultVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23E135538();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *_s6WriterO9HAPResultVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E135538();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6WriterO9HAPResultVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E135538();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s6WriterO9HAPResultVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E135538();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s6WriterO9HAPResultVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E135538();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6WriterO9HAPResultVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t _s6WriterO9HAPResultVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_2Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_23E083198()
{
  unint64_t v0;

  sub_23E083218();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23E083218()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D23E98[0])
  {
    sub_23E135538();
    v0 = sub_23E1374A0();
    if (!v1)
      atomic_store(v0, qword_256D23E98);
  }
}

uint64_t sub_23E083270()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23E0832D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E083338(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23E137578())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x24264BE18](0, a2);
LABEL_5:
      v6 = v5;
      sub_23DFF84F0(0, &qword_256D24038);
      v7 = sub_23E137428();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_23E137428();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x24264BE18](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_23E137428();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23E0834BC()
{
  qword_256D23F10 = 0x4059000000000000;
}

uint64_t sub_23E0834CC()
{
  return swift_weakLoadStrong();
}

uint64_t sub_23E0834DC()
{
  return swift_weakLoadStrong();
}

char *sub_23E0834EC(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return sub_23E083534(a1, a2, a3);
}

char *sub_23E083534(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  id v8;
  id v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  objc_super v17;

  v5 = *MEMORY[0x24BEE4EA0] & *v3;
  swift_weakInit();
  swift_weakInit();
  *((_BYTE *)v3 + qword_256D23F38) = 1;
  *(_QWORD *)((char *)v3 + qword_256D23F40) = 0;
  v6 = objc_allocWithZone(MEMORY[0x24BDF6C38]);
  v7 = v3;
  v8 = objc_msgSend(v6, sel_init);
  *(_QWORD *)((char *)v7 + qword_256D23F18) = v8;
  swift_weakAssign();
  swift_weakAssign();
  *(_QWORD *)((char *)v7 + qword_256D23F30) = a3;
  v9 = a3;

  v11 = (objc_class *)_s28SwipeDownDismissalControllerCMa(0, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), v10);
  v17.receiver = v7;
  v17.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v17, sel_init);
  v13 = *(void **)&v12[qword_256D23F18];
  v14 = v12;
  objc_msgSend(v13, sel_setDelegate_, v14);
  objc_msgSend(v13, sel__setCanPanHorizontally_, 0);
  objc_msgSend(v13, sel_addTarget_action_, v14, sel_panGestureRecognizerWithRecognized_);
  v15 = v13;
  objc_msgSend(v9, sel_addGestureRecognizer_, v15);

  swift_release();
  swift_release();

  return v14;
}

id sub_23E0836F0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + qword_256D23F18);
  objc_msgSend(*(id *)(v0 + qword_256D23F30), sel_removeGestureRecognizer_, v1);
  return objc_msgSend(v1, sel_removeTarget_action_, v0, sel_panGestureRecognizerWithRecognized_);
}

void sub_23E083748(void *a1)
{
  uint64_t v1;

  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 1uLL:
      *(_BYTE *)(v1 + qword_256D23F38) = 1;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      sub_23E083828(a1);
      break;
    case 3uLL:
      sub_23E0839D8(a1, 0);
      break;
    case 4uLL:
    case 5uLL:
      sub_23E0839D8(a1, 1);
      break;
    default:
      return;
  }
}

void sub_23E0837D4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_23E083748(v4);

}

void sub_23E083828(void *a1)
{
  uint64_t v1;
  uint64_t Strong;
  int v4;
  void *v5;
  void *v6;

  Strong = swift_weakLoadStrong();
  if (Strong
    && (v4 = *(unsigned __int8 *)(Strong
                                + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_allowsSwipeDownDismissal),
        swift_release(),
        v4 == 1))
  {
    if (*(_BYTE *)(v1 + qword_256D23F38) == 1)
    {
      objc_msgSend(a1, sel_setTranslation_inView_, *(_QWORD *)(v1 + qword_256D23F30), 0.0, 0.0);
      *(_BYTE *)(v1 + qword_256D23F38) = 0;
    }
    objc_msgSend(a1, sel_translationInView_, *(_QWORD *)(v1 + qword_256D23F30));
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23E135C88();
    }
    v5 = sub_23E083D90();
    objc_msgSend(v5, sel_setBounces_, 0);

  }
  else
  {
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23E135C88();
    }
    v6 = sub_23E083D90();
    objc_msgSend(v6, sel_setBounces_, 1);

    *(_BYTE *)(v1 + qword_256D23F38) = 1;
  }
}

uint64_t sub_23E0839D8(void *a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t ObjectType;
  double v11;

  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    if ((a2 & 1) != 0)
      goto LABEL_10;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    v7 = fabs(v11);
    if (qword_256D1D3D0 != -1)
      swift_once();
    if (*(double *)&qword_256D23F10 >= v7
      || (objc_msgSend(a1, sel_velocityInView_, *(_QWORD *)(v2 + qword_256D23F30), *(double *)&qword_256D23F10),
          v8 <= 0.0))
    {
LABEL_10:
      swift_getKeyPath();
      swift_getKeyPath();
      return sub_23E135C88();
    }
    else
    {
      if (*(_BYTE *)(v6 + 40) == 2)
      {
        if (MEMORY[0x24264C6DC](v6 + 16))
        {
          v9 = *(_QWORD *)(v6 + 24);
          ObjectType = swift_getObjectType();
          (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 24))(0, 0, 0, ObjectType, v9);
          swift_release();
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        sub_23DF8FB90();
      }
      return swift_release();
    }
  }
  return result;
}

BOOL sub_23E083B80(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  unint64_t v6;
  char v7;

  sub_23DFF84F0(0, &qword_256D24030);
  if ((sub_23E137428() & 1) == 0)
    return 0;
  v3 = sub_23E083D90();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_gestureRecognizers);

  if (!v5)
    return 0;
  sub_23DFF84F0(0, &qword_256D24038);
  v6 = sub_23E13726C();

  v7 = sub_23E083338(a2, v6);
  swift_bridgeObjectRelease();
  return (v7 & 1) != 0;
}

BOOL sub_23E083C68(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  BOOL v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_23E083B80((uint64_t)v6, (uint64_t)v7);

  return v9;
}

uint64_t sub_23E083CC8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_256D23F38);
}

uint64_t sub_23E083CD8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_256D23F38) = result;
  return result;
}

id sub_23E083CE8(id result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + qword_256D23F38) == 1)
  {
    result = objc_msgSend(result, sel_setTranslation_inView_, *(_QWORD *)(v1 + qword_256D23F30), 0.0, 0.0);
    *(_BYTE *)(v1 + qword_256D23F38) = 0;
  }
  return result;
}

void sub_23E083D3C(char a1)
{
  id v2;

  v2 = sub_23E083D90();
  objc_msgSend(v2, sel_setBounces_, a1 & 1);

}

void sub_23E083D7C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_256D23F40);
  *(_QWORD *)(v1 + qword_256D23F40) = a1;

}

void *sub_23E083D90()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = *(void **)(v0 + qword_256D23F40);
  if (!v1)
    goto LABEL_7;
  v2 = *(void **)(v0 + qword_256D23F30);
  v3 = v1;
  v4 = v2;
  v5 = objc_msgSend(v3, sel_superview);
  if (!v5)
  {
LABEL_6:

LABEL_7:
    v1 = (void *)sub_23E083E6C(0);
    v4 = *(id *)(v0 + qword_256D23F40);
    *(_QWORD *)(v0 + qword_256D23F40) = v1;
    v8 = v1;
    goto LABEL_8;
  }
  v6 = v5;
  while (v6 != v4)
  {
    v7 = objc_msgSend(v6, sel_superview);

    v6 = v7;
    if (!v7)
      goto LABEL_6;
  }

LABEL_8:
  return v1;
}

uint64_t sub_23E083E6C(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  SEL *p_type;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  SEL *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1)
    v3 = a1;
  else
    v3 = *(id *)(v1 + qword_256D23F30);
  v4 = a1;
  p_type = (SEL *)&stru_250ED0FF0.type;
  v6 = objc_msgSend(v3, sel_subviews);
  sub_23DFF84F0(0, &qword_256D24028);
  v7 = sub_23E13726C();

  if (v7 >> 62)
    goto LABEL_24;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v8 < 1)
      break;
    v9 = objc_msgSend(v3, p_type[352]);
    v10 = sub_23E13726C();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_23E137578();
      swift_bridgeObjectRelease();
      if (!v11)
      {
LABEL_17:

        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v11)
        goto LABEL_17;
    }
    v12 = 4;
    while (1)
    {
      v13 = (v10 & 0xC000000000000001) != 0
          ? (SEL *)MEMORY[0x24264BE18](v12 - 4, v10)
          : (SEL *)*(id *)(v10 + 8 * v12);
      p_type = v13;
      v14 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      objc_opt_self();
      v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        v16 = v15;
LABEL_21:

        swift_bridgeObjectRelease();
        return v16;
      }
      v16 = sub_23E083E6C(p_type);

      if (v16)
        goto LABEL_21;
      ++v12;
      if (v14 == v11)
        goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v8 = sub_23E137578();
    swift_bridgeObjectRelease();
  }

  return 0;
}

void sub_23E084074()
{
  sub_23E08424C();
}

id sub_23E084090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)_s28SwipeDownDismissalControllerCMa(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_23E0840DC(uint64_t a1)
{

  swift_weakDestroy();
  swift_weakDestroy();

}

uint64_t _s28SwipeDownDismissalControllerCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s28SwipeDownDismissalControllerCMn);
}

double sub_23E084150@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23E0841CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23E135C88();
}

void sub_23E08424C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

double sub_23E084278@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int16 v3;
  char v4;
  __int128 v5;
  __int128 v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  sub_23E035178();
  sub_23E136264();
  *(_WORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 49) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return result;
}

uint64_t AccessoryControlView.init(decorationButtons:device:controlModules:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t *v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  _OWORD v23[25];

  v22 = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnimationModel();
  swift_allocObject();
  v14 = sub_23DF90A80();
  sub_23DF73E10(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v15 = type metadata accessor for Device();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
  type metadata accessor for AccessoryControlsModel();
  swift_allocObject();
  v16 = sub_23E0A7D24((uint64_t)v13, a1);
  sub_23E085164(v23);
  *a6 = 0;
  v17 = (int *)type metadata accessor for AccessoryControlView();
  v18 = (char *)a6 + v17[11];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 50) = 0u;
  v19 = (_QWORD *)((char *)a6 + v17[12]);
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  swift_storeEnumTagMultiPayload();
  a6[1] = v14;
  a6[2] = v16;
  sub_23DF89340((uint64_t)v23, (uint64_t)a6 + v17[9], &qword_256D1EC28);
  result = sub_23DF89384(a2, (uint64_t)a6 + v17[7], (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v21 = (_QWORD *)((char *)a6 + v17[8]);
  *v21 = a3;
  v21[1] = a4;
  v21[2] = v22;
  *((_BYTE *)a6 + v17[10]) = 0;
  return result;
}

uint64_t AccessoryControlView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t KeyPath;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v2 = v1;
  v72 = a1;
  v3 = sub_23E135E74();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v59 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57[1] = v5;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (uint64_t)v57 - v6;
  v7 = sub_23E136594();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v69 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for AccessoryControlView();
  v66 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v67 = v9;
  v68 = (uint64_t)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24040);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_QWORD *)((char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24048);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24050);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24058);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24060);
  MEMORY[0x24BDAC7A8](v62);
  v23 = (char *)v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24068);
  MEMORY[0x24BDAC7A8](v73);
  v63 = (uint64_t)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24070);
  MEMORY[0x24BDAC7A8](v25);
  v65 = (char *)v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = sub_23E136FE4();
  v12[1] = v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24078);
  sub_23E084B34(v2, (uint64_t *)((char *)v12 + *(int *)(v28 + 44)));
  sub_23DF89C1C((uint64_t)v12, (uint64_t)v15, &qword_256D24040);
  v15[*(int *)(v13 + 36)] = 0;
  v29 = v64;
  sub_23DF89C7C((uint64_t)v12, &qword_256D24040);
  sub_23DF89340((uint64_t)v15, (uint64_t)v18, &qword_256D24048);
  v30 = *(_QWORD *)(v2 + 8);
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v31 = sub_23E135C34();
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v21, &qword_256D24050);
  v32 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v32 = v31;
  v32[1] = v30;
  swift_retain();
  sub_23DF89C7C((uint64_t)v18, &qword_256D24050);
  v33 = *(_QWORD *)(v2 + 16);
  type metadata accessor for AccessoryControlsModel();
  sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
  v34 = sub_23E135C34();
  sub_23DF89C1C((uint64_t)v21, (uint64_t)v23, &qword_256D24058);
  v35 = (uint64_t *)&v23[*(int *)(v62 + 36)];
  *v35 = v34;
  v35[1] = v33;
  swift_retain();
  sub_23DF89C7C((uint64_t)v21, &qword_256D24058);
  KeyPath = swift_getKeyPath();
  v37 = 0;
  v38 = 0;
  v39 = *(int *)(v29 + 40);
  if (*(_BYTE *)(v2 + v39) == 1)
  {
    v40 = v68;
    sub_23DF73E10(v2, v68, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
    v41 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v42 = swift_allocObject();
    sub_23DF89384(v40, v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_23E085564;
    *(_QWORD *)(v38 + 24) = v42;
    v37 = sub_23DF8D9A4;
  }
  v43 = v63;
  sub_23DF89C1C((uint64_t)v23, v63, &qword_256D24060);
  v44 = (uint64_t *)(v43 + *(int *)(v73 + 36));
  *v44 = KeyPath;
  v44[1] = (uint64_t)v37;
  v44[2] = v38;
  sub_23DF89C7C((uint64_t)v23, &qword_256D24060);
  v45 = v69;
  sub_23E136588();
  if ((*(_BYTE *)(v2 + v39) & 1) != 0)
  {
    v46 = v68;
    sub_23DF73E10(v2, v68, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
    v47 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v48 = swift_allocObject();
    sub_23DF89384(v46, v48 + v47, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
  }
  else
  {
    v49 = v58;
    sub_23DF9CD44(v58);
    v51 = v59;
    v50 = v60;
    v52 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v49, v61);
    v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v54 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v53, v51, v52);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v52);
  }
  sub_23E0852D4();
  v55 = (uint64_t)v65;
  sub_23E136A8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v71);
  sub_23DF89C7C(v43, &qword_256D24068);
  return sub_23DF89340(v55, v72, &qword_256D24070);
}

uint64_t sub_23E084B34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  int *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[400];
  _OWORD v75[4];
  __int16 v76;

  v52 = a2;
  v3 = type metadata accessor for Device();
  MEMORY[0x24BDAC7A8](v3);
  v59 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for AccessoryControlContainerView(0);
  v5 = MEMORY[0x24BDAC7A8](v60);
  v72 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v61 = (uint64_t *)((char *)&v52 - v7);
  v8 = (int *)type metadata accessor for AccessoryControlView();
  v9 = a1 + v8[11];
  v10 = *(_OWORD *)(v9 + 48);
  v75[2] = *(_OWORD *)(v9 + 32);
  v75[3] = v10;
  v76 = *(_WORD *)(v9 + 64);
  v11 = *(_OWORD *)(v9 + 16);
  v75[0] = *(_OWORD *)v9;
  v75[1] = v11;
  sub_23DF98EC8((uint64_t)v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v74);
  sub_23DF98EC8((uint64_t)v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  if (v74[48] == 1)
  {
    v12 = sub_23E136C24();
    v19 = sub_23E13672C();
    v14 = sub_23E136000();
    v20 = sub_23E13672C();
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v17 = sub_23E1360CC();
    v13 = v19;
    v15 = v20;
    v16 = 0x3FC999999999999ALL;
  }
  v73 = v15;
  v66 = v16;
  v67 = v13;
  v68 = v18;
  v69 = v17;
  sub_23DF98EC8((uint64_t)v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v74);
  sub_23DF98EC8((uint64_t)v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v70 = v14;
  v71 = v12;
  if ((v74[56] & 1) != 0)
  {
    v21 = sub_23E13672C();
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v64 = sub_23E1360CC();
    v65 = v22;
    v63 = 0x3F747AE147AE147BLL;
    v62 = 0x4024000000000000;
    v57 = 1;
    v58 = v21;
  }
  else
  {
    v57 = 0;
    v58 = 0;
    v62 = 0;
    v63 = 0;
    v64 = 1;
    v65 = 0;
  }
  v23 = sub_23E137050();
  v56 = *(_QWORD *)(a1 + 16);
  v24 = v56;
  v25 = v59;
  sub_23DF73E10(a1 + v8[7], v59, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v26 = v8[9];
  v27 = (uint64_t *)(a1 + v8[8]);
  v29 = v27[1];
  v53 = *v27;
  v28 = v53;
  v54 = v29;
  v55 = v27[2];
  v30 = v55;
  sub_23DF89340(a1 + v26, (uint64_t)v74, &qword_256D1EC28);
  KeyPath = swift_getKeyPath();
  v32 = (uint64_t)v61;
  *v61 = v23;
  *(_QWORD *)(v32 + 8) = v24;
  v33 = (int *)v60;
  sub_23DF89384(v25, v32 + *(int *)(v60 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v34 = (_QWORD *)(v32 + v33[7]);
  *v34 = v28;
  v34[1] = v29;
  v34[2] = v30;
  sub_23DF89340((uint64_t)v74, v32 + v33[8], &qword_256D1EC28);
  v35 = v32 + v33[9];
  *(_QWORD *)v35 = KeyPath;
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_OWORD *)(v35 + 40) = 0u;
  *(_OWORD *)(v35 + 50) = 0u;
  sub_23DF73E10(v32, v72, type metadata accessor for AccessoryControlContainerView);
  v37 = v70;
  v36 = v71;
  v38 = v52;
  v40 = v66;
  v39 = v67;
  *v52 = v71;
  v38[1] = v39;
  v41 = v73;
  v38[2] = v37;
  v38[3] = v41;
  v38[4] = 0;
  v38[5] = v40;
  v42 = v68;
  v38[6] = v69;
  v38[7] = v42;
  v43 = v57;
  v44 = v58;
  v38[8] = 0;
  v38[9] = v43;
  v38[10] = v62;
  v38[11] = v44;
  v45 = v64;
  v38[12] = v63;
  v38[13] = v45;
  v38[14] = v65;
  v46 = (uint64_t)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D24198) + 64);
  v47 = v72;
  sub_23DF73E10(v72, v46, type metadata accessor for AccessoryControlContainerView);
  sub_23E087D18(v36);
  v49 = v62;
  v48 = v63;
  v50 = v64;
  sub_23E087D48(0, v43, v62, v44, v63, v64);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23E087D5C((uint64_t)v74);
  sub_23E087F74(v32);
  sub_23E087F74(v47);
  sub_23E087FB0(0, v43, v49, v44, v48, v50);
  return sub_23E087FC4(v71);
}

double sub_23E084FDC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_23E035A98();
  sub_23E136264();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23E085028(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_23DF8D9A4;
    *(_QWORD *)(v4 + 24) = v3;
  }
  sub_23DF9765C(v1);
  sub_23E035A98();
  return sub_23E136270();
}

uint64_t sub_23E0850D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(v1 + 40) != 2)
    return sub_23DF8FB90();
  result = MEMORY[0x24264C6DC](v1 + 16);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 24))(0, 0, 0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_23E085164(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t type metadata accessor for AccessoryControlView()
{
  uint64_t result;

  result = qword_256D24138;
  if (!qword_256D24138)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E0851E4()
{
  return sub_23E136210();
}

uint64_t sub_23E085204()
{
  return sub_23E136210();
}

double sub_23E085224@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_23E035A98();
  sub_23E136264();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23E085274()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E135E74();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

unint64_t sub_23E0852D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24080;
  if (!qword_256D24080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24068);
    v2[0] = sub_23E085358();
    v2[1] = sub_23DF89B88(&qword_256D240D0, &qword_256D240D8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24080);
  }
  return result;
}

unint64_t sub_23E085358()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24088;
  if (!qword_256D24088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24060);
    v2[0] = sub_23E0853DC();
    v2[1] = sub_23DF89B88(&qword_256D240C0, &qword_256D240C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24088);
  }
  return result;
}

unint64_t sub_23E0853DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24090;
  if (!qword_256D24090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24058);
    v2[0] = sub_23E085460();
    v2[1] = sub_23DF89B88(&qword_256D240B0, &qword_256D240B8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24090);
  }
  return result;
}

unint64_t sub_23E085460()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D24098;
  if (!qword_256D24098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24050);
    v2 = sub_23E0854C4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D24098);
  }
  return result;
}

unint64_t sub_23E0854C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D240A0;
  if (!qword_256D240A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24048);
    v2[0] = sub_23DF89B88(&qword_256D240A8, &qword_256D24040, MEMORY[0x24BDF4750]);
    v2[1] = sub_23DF89B88(&qword_256D219C0, &qword_256D219C8, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D240A0);
  }
  return result;
}

uint64_t objectdestroy_9Tm_1()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for AccessoryControlView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + v1[7];
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = v3 + v1[9];
  if (*(_QWORD *)(v10 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v10 + 96))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    v11 = *(void **)(v10 + 168);
    if (v11)
    {

      swift_release();
      swift_release();
    }

    swift_release();
    swift_release();
    v12 = *(void **)(v10 + 312);
    if (v12)
    {

      swift_release();
      swift_release();
    }
    if (*(_QWORD *)(v10 + 344))
    {
      swift_release();
      swift_release();
    }
  }
  v13 = v3 + v1[11];
  sub_23DF985F0(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_BYTE *)(v13 + 64), *(_BYTE *)(v13 + 65));
  v14 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_23E135E74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_23E085820()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlView() - 8) + 80);
  return sub_23E0850D8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_23E085850()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E085874()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for AccessoryControlView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  __int128 v63;
  void *v64;
  _OWORD *v65;
  _OWORD *v66;
  void *v67;
  id v68;
  __int128 v69;
  uint64_t v70;
  id v71;
  __int128 v72;
  __int128 v73;
  void *v74;
  uint64_t v75;
  _OWORD *v76;
  _OWORD *v77;
  void *v78;
  id v79;
  __int128 v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v103;
  char v104;
  char v105;
  _QWORD *v107;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    v61 = (_QWORD *)(v60 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return v61;
  }
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  v107 = a1;
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  swift_retain();
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for Device();
  v12 = v11[5];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v11[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23E135910();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  v25 = v11[7];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = v11[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v103 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v103;
  *(_QWORD *)&v7[v11[9]] = *(_QWORD *)&v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  v7[v11[11]] = v8[v11[11]];
  v7[v11[12]] = v8[v11[12]];
  v7[v11[13]] = v8[v11[13]];
  *(_QWORD *)&v7[v11[14]] = *(_QWORD *)&v8[v11[14]];
  v7[v11[15]] = v8[v11[15]];
  v32 = v11[16];
  v33 = &v7[v32];
  v34 = &v8[v32];
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v35;
  v36 = v11[17];
  v37 = &v7[v36];
  v38 = &v8[v36];
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = v39;
  v40 = v11[18];
  v41 = &v7[v40];
  v42 = &v8[v40];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v7[v11[19]] = v8[v11[19]];
  v7[v11[20]] = v8[v11[20]];
  v44 = v11[21];
  v45 = &v7[v44];
  v46 = &v8[v44];
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *((_QWORD *)v45 + 1) = v47;
  v48 = a3[8];
  v49 = a3[9];
  v50 = (_QWORD *)((char *)v107 + v48);
  v51 = (_QWORD *)((char *)a2 + v48);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v50[2] = v51[2];
  v53 = (char *)v107 + v49;
  v54 = (char *)a2 + v49;
  v55 = *(_QWORD *)((char *)a2 + v49 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v55)
  {
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
    *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
    *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
    *((_WORD *)v53 + 24) = *((_WORD *)v54 + 24);
    v56 = *((_QWORD *)v54 + 8);
    v57 = *((_QWORD *)v54 + 9);
    *((_QWORD *)v53 + 7) = v55;
    *((_QWORD *)v53 + 8) = v56;
    *((_QWORD *)v53 + 9) = v57;
    v53[80] = v54[80];
    v58 = *((_QWORD *)v54 + 12);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v58)
    {
      *((_QWORD *)v53 + 11) = *((_QWORD *)v54 + 11);
      *((_QWORD *)v53 + 12) = v58;
      v59 = *((_QWORD *)v54 + 14);
      *((_QWORD *)v53 + 13) = *((_QWORD *)v54 + 13);
      *((_QWORD *)v53 + 14) = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v63 = *(_OWORD *)(v54 + 104);
      *(_OWORD *)(v53 + 88) = *(_OWORD *)(v54 + 88);
      *(_OWORD *)(v53 + 104) = v63;
    }
    v64 = (void *)*((_QWORD *)v54 + 15);
    *((_QWORD *)v53 + 15) = v64;
    v65 = v53 + 128;
    v66 = v54 + 128;
    v67 = (void *)*((_QWORD *)v54 + 21);
    v68 = v64;
    if (v67)
    {
      v69 = *((_OWORD *)v54 + 9);
      *v65 = *v66;
      *((_OWORD *)v53 + 9) = v69;
      *((_QWORD *)v53 + 20) = *((_QWORD *)v54 + 20);
      *((_QWORD *)v53 + 21) = v67;
      v70 = *((_QWORD *)v54 + 23);
      *((_QWORD *)v53 + 22) = *((_QWORD *)v54 + 22);
      *((_QWORD *)v53 + 23) = v70;
      v53[192] = v54[192];
      v71 = v67;
      swift_retain();
      swift_retain();
    }
    else
    {
      v72 = *((_OWORD *)v54 + 11);
      *((_OWORD *)v53 + 10) = *((_OWORD *)v54 + 10);
      *((_OWORD *)v53 + 11) = v72;
      v53[192] = v54[192];
      v73 = *((_OWORD *)v54 + 9);
      *v65 = *v66;
      *((_OWORD *)v53 + 9) = v73;
    }
    *(_OWORD *)(v53 + 200) = *(_OWORD *)(v54 + 200);
    *(_OWORD *)(v53 + 216) = *(_OWORD *)(v54 + 216);
    v74 = (void *)*((_QWORD *)v54 + 30);
    *((_QWORD *)v53 + 29) = *((_QWORD *)v54 + 29);
    *((_QWORD *)v53 + 30) = v74;
    v75 = *((_QWORD *)v54 + 32);
    *((_QWORD *)v53 + 31) = *((_QWORD *)v54 + 31);
    *((_QWORD *)v53 + 32) = v75;
    v53[264] = v54[264];
    v76 = v53 + 272;
    v77 = v54 + 272;
    v78 = (void *)*((_QWORD *)v54 + 39);
    v79 = v74;
    swift_retain();
    swift_retain();
    if (v78)
    {
      v80 = *((_OWORD *)v54 + 18);
      *v76 = *v77;
      *((_OWORD *)v53 + 18) = v80;
      *((_QWORD *)v53 + 38) = *((_QWORD *)v54 + 38);
      *((_QWORD *)v53 + 39) = v78;
      v81 = *((_QWORD *)v54 + 41);
      *((_QWORD *)v53 + 40) = *((_QWORD *)v54 + 40);
      *((_QWORD *)v53 + 41) = v81;
      v53[336] = v54[336];
      v82 = v78;
      swift_retain();
      swift_retain();
      v83 = *((_QWORD *)v54 + 43);
      if (v83)
      {
LABEL_13:
        v84 = *((_QWORD *)v54 + 44);
        *((_QWORD *)v53 + 43) = v83;
        *((_QWORD *)v53 + 44) = v84;
        swift_retain();
        swift_retain();
LABEL_16:
        v62 = v107;
        v53[360] = v54[360];
        v87 = *((_OWORD *)v54 + 24);
        *((_OWORD *)v53 + 23) = *((_OWORD *)v54 + 23);
        *((_OWORD *)v53 + 24) = v87;
        goto LABEL_17;
      }
    }
    else
    {
      v85 = *((_OWORD *)v54 + 20);
      *((_OWORD *)v53 + 19) = *((_OWORD *)v54 + 19);
      *((_OWORD *)v53 + 20) = v85;
      v53[336] = v54[336];
      v86 = *((_OWORD *)v54 + 18);
      *v76 = *v77;
      *((_OWORD *)v53 + 18) = v86;
      v83 = *((_QWORD *)v54 + 43);
      if (v83)
        goto LABEL_13;
    }
    *(_OWORD *)(v53 + 344) = *(_OWORD *)(v54 + 344);
    goto LABEL_16;
  }
  memcpy(v53, v54, 0x190uLL);
  v62 = v107;
LABEL_17:
  v88 = a3[11];
  *((_BYTE *)v62 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v89 = (uint64_t)v62 + v88;
  v90 = *(_QWORD *)((char *)a2 + v88);
  v91 = *(_QWORD *)((char *)a2 + v88 + 8);
  v92 = *(_QWORD *)((char *)a2 + v88 + 16);
  v93 = *(_QWORD *)((char *)a2 + v88 + 24);
  v94 = *(_QWORD *)((char *)a2 + v88 + 32);
  v95 = *(_QWORD *)((char *)a2 + v88 + 40);
  v96 = *(_QWORD *)((char *)a2 + v88 + 48);
  v97 = *(_QWORD *)((char *)a2 + v88 + 56);
  v104 = *((_BYTE *)a2 + v88 + 64);
  v105 = *((_BYTE *)a2 + v88 + 65);
  sub_23DF98590(v90, v91, v92, v93, v94, v95, v96, v97, v104, v105);
  *(_QWORD *)v89 = v90;
  *(_QWORD *)(v89 + 8) = v91;
  *(_QWORD *)(v89 + 16) = v92;
  *(_QWORD *)(v89 + 24) = v93;
  *(_QWORD *)(v89 + 32) = v94;
  *(_QWORD *)(v89 + 40) = v95;
  *(_QWORD *)(v89 + 48) = v96;
  *(_QWORD *)(v89 + 56) = v97;
  *(_BYTE *)(v89 + 64) = v104;
  v61 = v107;
  v98 = a3[12];
  v99 = (_QWORD *)((char *)v107 + v98);
  v100 = (_QWORD *)((char *)a2 + v98);
  *(_BYTE *)(v89 + 65) = v105;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v101 = sub_23E135E74();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v99, v100, v101);
  }
  else
  {
    *v99 = *v100;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v61;
}

uint64_t destroy for AccessoryControlView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  swift_release();
  v4 = a1 + a2[7];
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[9];
  if (*(_QWORD *)(v10 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v10 + 96))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    v11 = *(void **)(v10 + 168);
    if (v11)
    {

      swift_release();
      swift_release();
    }

    swift_release();
    swift_release();
    v12 = *(void **)(v10 + 312);
    if (v12)
    {

      swift_release();
      swift_release();
    }
    if (*(_QWORD *)(v10 + 344))
    {
      swift_release();
      swift_release();
    }
  }
  v13 = a1 + a2[11];
  sub_23DF985F0(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_BYTE *)(v13 + 64), *(_BYTE *)(v13 + 65));
  v14 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v15 = sub_23E135E74();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_QWORD *initializeWithCopy for AccessoryControlView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  void *v59;
  _OWORD *v60;
  _OWORD *v61;
  void *v62;
  id v63;
  __int128 v64;
  uint64_t v65;
  id v66;
  __int128 v67;
  __int128 v68;
  void *v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  void *v73;
  id v74;
  __int128 v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  v4 = a3[7];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E134C80();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  swift_retain();
  v8(v5, v6, v7);
  v9 = (int *)type metadata accessor for Device();
  v10 = v9[5];
  v11 = &v5[v10];
  v12 = &v6[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &v5[v14];
  v16 = &v6[v14];
  v17 = *(_QWORD *)&v6[v14 + 8];
  *(_QWORD *)v15 = *(_QWORD *)&v6[v14];
  *((_QWORD *)v15 + 1) = v17;
  v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_23E135910();
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  v23 = v9[7];
  v24 = &v5[v23];
  v25 = &v6[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v9[8];
  v28 = &v5[v27];
  v29 = &v6[v27];
  v98 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v98;
  *(_QWORD *)&v5[v9[9]] = *(_QWORD *)&v6[v9[9]];
  v5[v9[10]] = v6[v9[10]];
  v5[v9[11]] = v6[v9[11]];
  v5[v9[12]] = v6[v9[12]];
  v5[v9[13]] = v6[v9[13]];
  *(_QWORD *)&v5[v9[14]] = *(_QWORD *)&v6[v9[14]];
  v5[v9[15]] = v6[v9[15]];
  v30 = v9[16];
  v31 = &v5[v30];
  v32 = &v6[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = v9[17];
  v35 = &v5[v34];
  v36 = &v6[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v38 = v9[18];
  v39 = &v5[v38];
  v40 = &v6[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v5[v9[19]] = v6[v9[19]];
  v5[v9[20]] = v6[v9[20]];
  v42 = v9[21];
  v43 = &v5[v42];
  v44 = &v6[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  v46 = a3[8];
  v47 = a3[9];
  v48 = (_QWORD *)((char *)a1 + v46);
  v49 = (_QWORD *)((char *)a2 + v46);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v48[2] = v49[2];
  v51 = (_QWORD *)((char *)a1 + v47);
  v52 = (_QWORD *)((char *)a2 + v47);
  v53 = *(_QWORD *)((char *)a2 + v47 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (!v53)
  {
    memcpy(v51, v52, 0x190uLL);
    goto LABEL_15;
  }
  *v51 = *v52;
  *(_OWORD *)(v51 + 1) = *(_OWORD *)(v52 + 1);
  *(_OWORD *)(v51 + 3) = *(_OWORD *)(v52 + 3);
  v51[5] = v52[5];
  *((_WORD *)v51 + 24) = *((_WORD *)v52 + 24);
  v54 = v52[8];
  v55 = v52[9];
  v51[7] = v53;
  v51[8] = v54;
  v51[9] = v55;
  *((_BYTE *)v51 + 80) = *((_BYTE *)v52 + 80);
  v56 = v52[12];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v56)
  {
    v51[11] = v52[11];
    v51[12] = v56;
    v57 = v52[14];
    v51[13] = v52[13];
    v51[14] = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v58 = *(_OWORD *)(v52 + 13);
    *(_OWORD *)(v51 + 11) = *(_OWORD *)(v52 + 11);
    *(_OWORD *)(v51 + 13) = v58;
  }
  v59 = (void *)v52[15];
  v51[15] = v59;
  v60 = v51 + 16;
  v61 = v52 + 16;
  v62 = (void *)v52[21];
  v63 = v59;
  if (v62)
  {
    v64 = *((_OWORD *)v52 + 9);
    *v60 = *v61;
    *((_OWORD *)v51 + 9) = v64;
    v51[20] = v52[20];
    v51[21] = v62;
    v65 = v52[23];
    v51[22] = v52[22];
    v51[23] = v65;
    *((_BYTE *)v51 + 192) = *((_BYTE *)v52 + 192);
    v66 = v62;
    swift_retain();
    swift_retain();
  }
  else
  {
    v67 = *((_OWORD *)v52 + 11);
    *((_OWORD *)v51 + 10) = *((_OWORD *)v52 + 10);
    *((_OWORD *)v51 + 11) = v67;
    *((_BYTE *)v51 + 192) = *((_BYTE *)v52 + 192);
    v68 = *((_OWORD *)v52 + 9);
    *v60 = *v61;
    *((_OWORD *)v51 + 9) = v68;
  }
  *(_OWORD *)(v51 + 25) = *(_OWORD *)(v52 + 25);
  *(_OWORD *)(v51 + 27) = *(_OWORD *)(v52 + 27);
  v69 = (void *)v52[30];
  v51[29] = v52[29];
  v51[30] = v69;
  v70 = v52[32];
  v51[31] = v52[31];
  v51[32] = v70;
  *((_BYTE *)v51 + 264) = *((_BYTE *)v52 + 264);
  v71 = v51 + 34;
  v72 = v52 + 34;
  v73 = (void *)v52[39];
  v74 = v69;
  swift_retain();
  swift_retain();
  if (!v73)
  {
    v80 = *((_OWORD *)v52 + 20);
    *((_OWORD *)v51 + 19) = *((_OWORD *)v52 + 19);
    *((_OWORD *)v51 + 20) = v80;
    *((_BYTE *)v51 + 336) = *((_BYTE *)v52 + 336);
    v81 = *((_OWORD *)v52 + 18);
    *v71 = *v72;
    *((_OWORD *)v51 + 18) = v81;
    v78 = v52[43];
    if (v78)
      goto LABEL_11;
LABEL_13:
    *(_OWORD *)(v51 + 43) = *(_OWORD *)(v52 + 43);
    goto LABEL_14;
  }
  v75 = *((_OWORD *)v52 + 18);
  *v71 = *v72;
  *((_OWORD *)v51 + 18) = v75;
  v51[38] = v52[38];
  v51[39] = v73;
  v76 = v52[41];
  v51[40] = v52[40];
  v51[41] = v76;
  *((_BYTE *)v51 + 336) = *((_BYTE *)v52 + 336);
  v77 = v73;
  swift_retain();
  swift_retain();
  v78 = v52[43];
  if (!v78)
    goto LABEL_13;
LABEL_11:
  v79 = v52[44];
  v51[43] = v78;
  v51[44] = v79;
  swift_retain();
  swift_retain();
LABEL_14:
  *((_BYTE *)v51 + 360) = *((_BYTE *)v52 + 360);
  v82 = *((_OWORD *)v52 + 24);
  *((_OWORD *)v51 + 23) = *((_OWORD *)v52 + 23);
  *((_OWORD *)v51 + 24) = v82;
LABEL_15:
  v83 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v84 = (char *)a1 + v83;
  v85 = *(_QWORD *)((char *)a2 + v83 + 8);
  v97 = *(_QWORD *)((char *)a2 + v83);
  v86 = *(_QWORD *)((char *)a2 + v83 + 16);
  v87 = *(_QWORD *)((char *)a2 + v83 + 24);
  v88 = *(_QWORD *)((char *)a2 + v83 + 32);
  v89 = *(_QWORD *)((char *)a2 + v83 + 40);
  v90 = *(_QWORD *)((char *)a2 + v83 + 48);
  v91 = *(_QWORD *)((char *)a2 + v83 + 56);
  v99 = *((_BYTE *)a2 + v83 + 64);
  v100 = *((_BYTE *)a2 + v83 + 65);
  sub_23DF98590(v97, v85, v86, v87, v88, v89, v90, v91, v99, v100);
  *(_QWORD *)v84 = v97;
  *((_QWORD *)v84 + 1) = v85;
  *((_QWORD *)v84 + 2) = v86;
  *((_QWORD *)v84 + 3) = v87;
  *((_QWORD *)v84 + 4) = v88;
  *((_QWORD *)v84 + 5) = v89;
  *((_QWORD *)v84 + 6) = v90;
  *((_QWORD *)v84 + 7) = v91;
  v84[64] = v99;
  v92 = a3[12];
  v93 = (_QWORD *)((char *)a1 + v92);
  v94 = (_QWORD *)((char *)a2 + v92);
  v84[65] = v100;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v95 = sub_23E135E74();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
  }
  else
  {
    *v93 = *v94;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for AccessoryControlView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  void *v54;
  _OWORD *v55;
  _OWORD *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  void *v60;
  id v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  void *v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  id v70;
  __int128 v71;
  void *v72;
  id v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  void *v80;
  void *v81;
  id v82;
  _OWORD *v83;
  _OWORD *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  id v88;
  __int128 v89;
  void *v90;
  id v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  void *v98;
  void *v99;
  id v100;
  _OWORD *v101;
  _OWORD *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  id v106;
  __int128 v107;
  void *v108;
  id v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  int *v144;
  char v145;
  _QWORD *v146;
  _QWORD *v147;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v15[v17];
  v19 = &v16[v17];
  v20 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v10[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_retain();
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v27 = v10[16];
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v10[17];
  v31 = &v7[v30];
  v32 = &v8[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v10[18];
  v34 = &v7[v33];
  v35 = &v8[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v36 = v10[21];
  v37 = &v7[v36];
  v38 = &v8[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[8];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[9];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = *(_QWORD *)((char *)a1 + v42 + 56);
  v46 = *(_QWORD *)((char *)a2 + v42 + 56);
  if (!v45)
  {
    if (!v46)
    {
LABEL_10:
      memcpy(v43, v44, 0x190uLL);
      goto LABEL_47;
    }
    *v43 = *v44;
    v50 = *(_OWORD *)(v44 + 1);
    *(_OWORD *)(v43 + 3) = *(_OWORD *)(v44 + 3);
    *(_OWORD *)(v43 + 1) = v50;
    v43[5] = v44[5];
    *((_BYTE *)v43 + 48) = *((_BYTE *)v44 + 48);
    *((_BYTE *)v43 + 49) = *((_BYTE *)v44 + 49);
    v43[7] = v44[7];
    v43[8] = v44[8];
    v43[9] = v44[9];
    *((_BYTE *)v43 + 80) = *((_BYTE *)v44 + 80);
    v51 = v44[12];
    swift_retain();
    swift_retain();
    swift_retain();
    if (v51)
    {
      v43[11] = v44[11];
      v43[12] = v44[12];
      v43[13] = v44[13];
      v43[14] = v44[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v53 = *(_OWORD *)(v44 + 13);
      *(_OWORD *)(v43 + 11) = *(_OWORD *)(v44 + 11);
      *(_OWORD *)(v43 + 13) = v53;
    }
    v54 = (void *)v44[15];
    v43[15] = v54;
    v55 = v43 + 16;
    v56 = v44 + 16;
    v57 = v44[21];
    v58 = v54;
    if (v57)
    {
      v59 = *((_OWORD *)v44 + 9);
      *v55 = *v56;
      *((_OWORD *)v43 + 9) = v59;
      v43[20] = v44[20];
      v60 = (void *)v44[21];
      v43[21] = v60;
      v43[22] = v44[22];
      v43[23] = v44[23];
      *((_BYTE *)v43 + 192) = *((_BYTE *)v44 + 192);
      v61 = v60;
      swift_retain();
      swift_retain();
    }
    else
    {
      *v55 = *v56;
      v62 = *((_OWORD *)v44 + 9);
      v63 = *((_OWORD *)v44 + 10);
      v64 = *((_OWORD *)v44 + 11);
      *((_BYTE *)v43 + 192) = *((_BYTE *)v44 + 192);
      *((_OWORD *)v43 + 10) = v63;
      *((_OWORD *)v43 + 11) = v64;
      *((_OWORD *)v43 + 9) = v62;
    }
    v65 = *(_OWORD *)(v44 + 25);
    *(_OWORD *)(v43 + 27) = *(_OWORD *)(v44 + 27);
    *(_OWORD *)(v43 + 25) = v65;
    v43[29] = v44[29];
    v66 = (void *)v44[30];
    v43[30] = v66;
    v43[31] = v44[31];
    v43[32] = v44[32];
    *((_BYTE *)v43 + 264) = *((_BYTE *)v44 + 264);
    v67 = v43 + 34;
    v68 = v44 + 34;
    v69 = v44[39];
    v70 = v66;
    swift_retain();
    swift_retain();
    if (v69)
    {
      v71 = *((_OWORD *)v44 + 18);
      *v67 = *v68;
      *((_OWORD *)v43 + 18) = v71;
      v43[38] = v44[38];
      v72 = (void *)v44[39];
      v43[39] = v72;
      v43[40] = v44[40];
      v43[41] = v44[41];
      *((_BYTE *)v43 + 336) = *((_BYTE *)v44 + 336);
      v73 = v72;
      swift_retain();
      swift_retain();
      v74 = v44[43];
      if (v74)
      {
LABEL_20:
        v43[43] = v74;
        v43[44] = v44[44];
        swift_retain();
        swift_retain();
LABEL_23:
        *((_BYTE *)v43 + 360) = *((_BYTE *)v44 + 360);
        v78 = *((_OWORD *)v44 + 24);
        *((_OWORD *)v43 + 23) = *((_OWORD *)v44 + 23);
        *((_OWORD *)v43 + 24) = v78;
        goto LABEL_47;
      }
    }
    else
    {
      *v67 = *v68;
      v75 = *((_OWORD *)v44 + 18);
      v76 = *((_OWORD *)v44 + 19);
      v77 = *((_OWORD *)v44 + 20);
      *((_BYTE *)v43 + 336) = *((_BYTE *)v44 + 336);
      *((_OWORD *)v43 + 19) = v76;
      *((_OWORD *)v43 + 20) = v77;
      *((_OWORD *)v43 + 18) = v75;
      v74 = v44[43];
      if (v74)
        goto LABEL_20;
    }
    *(_OWORD *)(v43 + 43) = *(_OWORD *)(v44 + 43);
    goto LABEL_23;
  }
  if (!v46)
  {
    sub_23E0871F4((uint64_t)v43);
    goto LABEL_10;
  }
  *v43 = *v44;
  v43[1] = v44[1];
  v43[2] = v44[2];
  v43[3] = v44[3];
  v43[4] = v44[4];
  v43[5] = v44[5];
  *((_BYTE *)v43 + 48) = *((_BYTE *)v44 + 48);
  *((_BYTE *)v43 + 49) = *((_BYTE *)v44 + 49);
  v43[7] = v44[7];
  swift_retain();
  swift_release();
  v43[8] = v44[8];
  swift_retain();
  swift_release();
  v43[9] = v44[9];
  swift_retain();
  swift_release();
  *((_BYTE *)v43 + 80) = *((_BYTE *)v44 + 80);
  v47 = v43 + 11;
  v48 = v44 + 11;
  v49 = v44[12];
  if (v43[12])
  {
    if (v49)
    {
      v43[11] = v44[11];
      v43[12] = v44[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v43[13] = v44[13];
      v43[14] = v44[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23DF89C7C((uint64_t)(v43 + 11), &qword_256D22C80);
      v52 = *(_OWORD *)(v44 + 13);
      *v47 = *v48;
      *(_OWORD *)(v43 + 13) = v52;
    }
  }
  else if (v49)
  {
    v43[11] = v44[11];
    v43[12] = v44[12];
    v43[13] = v44[13];
    v43[14] = v44[14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v79 = *(_OWORD *)(v44 + 13);
    *v47 = *v48;
    *(_OWORD *)(v43 + 13) = v79;
  }
  v80 = (void *)v43[15];
  v81 = (void *)v44[15];
  v43[15] = v81;
  v82 = v81;

  v83 = v43 + 16;
  v84 = v44 + 16;
  v85 = (void *)v43[21];
  v86 = v44[21];
  if (v85)
  {
    if (v86)
    {
      v43[16] = v44[16];
      v43[17] = v44[17];
      v43[18] = v44[18];
      v43[19] = v44[19];
      v43[20] = v44[20];
      v87 = (void *)v44[21];
      v43[21] = v87;
      v88 = v87;

      v43[22] = v44[22];
      swift_retain();
      swift_release();
      v43[23] = v44[23];
      swift_retain();
      swift_release();
      *((_BYTE *)v43 + 192) = *((_BYTE *)v44 + 192);
    }
    else
    {
      sub_23E053CFC((uint64_t)(v43 + 16));
      *v83 = *v84;
      v93 = *((_OWORD *)v44 + 10);
      v92 = *((_OWORD *)v44 + 11);
      v94 = *((_OWORD *)v44 + 9);
      *((_BYTE *)v43 + 192) = *((_BYTE *)v44 + 192);
      *((_OWORD *)v43 + 10) = v93;
      *((_OWORD *)v43 + 11) = v92;
      *((_OWORD *)v43 + 9) = v94;
    }
  }
  else if (v86)
  {
    v89 = *((_OWORD *)v44 + 9);
    *v83 = *v84;
    *((_OWORD *)v43 + 9) = v89;
    v43[20] = v44[20];
    v90 = (void *)v44[21];
    v43[21] = v90;
    v43[22] = v44[22];
    v43[23] = v44[23];
    *((_BYTE *)v43 + 192) = *((_BYTE *)v44 + 192);
    v91 = v90;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v83 = *v84;
    v95 = *((_OWORD *)v44 + 9);
    v96 = *((_OWORD *)v44 + 10);
    v97 = *((_OWORD *)v44 + 11);
    *((_BYTE *)v43 + 192) = *((_BYTE *)v44 + 192);
    *((_OWORD *)v43 + 10) = v96;
    *((_OWORD *)v43 + 11) = v97;
    *((_OWORD *)v43 + 9) = v95;
  }
  v43[25] = v44[25];
  v43[26] = v44[26];
  v43[27] = v44[27];
  v43[28] = v44[28];
  v43[29] = v44[29];
  v98 = (void *)v44[30];
  v99 = (void *)v43[30];
  v43[30] = v98;
  v100 = v98;

  v43[31] = v44[31];
  swift_retain();
  swift_release();
  v43[32] = v44[32];
  swift_retain();
  swift_release();
  *((_BYTE *)v43 + 264) = *((_BYTE *)v44 + 264);
  v101 = v43 + 34;
  v102 = v44 + 34;
  v103 = (void *)v43[39];
  v104 = v44[39];
  if (v103)
  {
    if (v104)
    {
      v43[34] = v44[34];
      v43[35] = v44[35];
      v43[36] = v44[36];
      v43[37] = v44[37];
      v43[38] = v44[38];
      v105 = (void *)v44[39];
      v43[39] = v105;
      v106 = v105;

      v43[40] = v44[40];
      swift_retain();
      swift_release();
      v43[41] = v44[41];
      swift_retain();
      swift_release();
      *((_BYTE *)v43 + 336) = *((_BYTE *)v44 + 336);
    }
    else
    {
      sub_23E053CFC((uint64_t)(v43 + 34));
      *v101 = *v102;
      v111 = *((_OWORD *)v44 + 19);
      v110 = *((_OWORD *)v44 + 20);
      v112 = *((_OWORD *)v44 + 18);
      *((_BYTE *)v43 + 336) = *((_BYTE *)v44 + 336);
      *((_OWORD *)v43 + 19) = v111;
      *((_OWORD *)v43 + 20) = v110;
      *((_OWORD *)v43 + 18) = v112;
    }
  }
  else if (v104)
  {
    v107 = *((_OWORD *)v44 + 18);
    *v101 = *v102;
    *((_OWORD *)v43 + 18) = v107;
    v43[38] = v44[38];
    v108 = (void *)v44[39];
    v43[39] = v108;
    v43[40] = v44[40];
    v43[41] = v44[41];
    *((_BYTE *)v43 + 336) = *((_BYTE *)v44 + 336);
    v109 = v108;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v101 = *v102;
    v113 = *((_OWORD *)v44 + 18);
    v114 = *((_OWORD *)v44 + 19);
    v115 = *((_OWORD *)v44 + 20);
    *((_BYTE *)v43 + 336) = *((_BYTE *)v44 + 336);
    *((_OWORD *)v43 + 19) = v114;
    *((_OWORD *)v43 + 20) = v115;
    *((_OWORD *)v43 + 18) = v113;
  }
  v116 = v44[43];
  if (!v43[43])
  {
    if (v116)
    {
      v43[43] = v116;
      v43[44] = v44[44];
      swift_retain();
      swift_retain();
      goto LABEL_46;
    }
LABEL_45:
    *(_OWORD *)(v43 + 43) = *(_OWORD *)(v44 + 43);
    goto LABEL_46;
  }
  if (!v116)
  {
    sub_23E053D28((uint64_t)(v43 + 43));
    goto LABEL_45;
  }
  v43[43] = v116;
  swift_retain();
  swift_release();
  v43[44] = v44[44];
  swift_retain();
  swift_release();
LABEL_46:
  *((_BYTE *)v43 + 360) = *((_BYTE *)v44 + 360);
  v43[46] = v44[46];
  v43[47] = v44[47];
  v43[48] = v44[48];
  v43[49] = v44[49];
LABEL_47:
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v117 = a3[11];
  v146 = a1;
  v147 = a2;
  v118 = (char *)a1 + v117;
  v119 = (char *)v147 + v117;
  v120 = *(_QWORD *)v119;
  v121 = *((_QWORD *)v119 + 1);
  v122 = *((_QWORD *)v119 + 2);
  v123 = *((_QWORD *)v119 + 3);
  v124 = *((_QWORD *)v119 + 4);
  v125 = *((_QWORD *)v119 + 5);
  v144 = a3;
  v127 = *((_QWORD *)v119 + 6);
  v126 = *((_QWORD *)v119 + 7);
  v128 = v119[64];
  v145 = v119[65];
  sub_23DF98590(*(_QWORD *)v119, v121, v122, v123, v124, v125, v127, v126, v128, v145);
  v129 = *(_QWORD *)v118;
  v130 = *((_QWORD *)v118 + 1);
  v131 = *((_QWORD *)v118 + 2);
  v132 = *((_QWORD *)v118 + 3);
  v133 = *((_QWORD *)v118 + 4);
  v134 = *((_QWORD *)v118 + 5);
  v135 = *((_QWORD *)v118 + 6);
  v136 = *((_QWORD *)v118 + 7);
  v137 = v118[64];
  v138 = v118[65];
  *(_QWORD *)v118 = v120;
  *((_QWORD *)v118 + 1) = v121;
  *((_QWORD *)v118 + 2) = v122;
  *((_QWORD *)v118 + 3) = v123;
  *((_QWORD *)v118 + 4) = v124;
  *((_QWORD *)v118 + 5) = v125;
  *((_QWORD *)v118 + 6) = v127;
  *((_QWORD *)v118 + 7) = v126;
  v118[64] = v128;
  v118[65] = v145;
  sub_23DF985F0(v129, v130, v131, v132, v133, v134, v135, v136, v137, v138);
  if (v146 != v147)
  {
    v139 = v144[12];
    v140 = (_QWORD *)((char *)v146 + v139);
    v141 = (_QWORD *)((char *)v147 + v139);
    sub_23DF89C7C((uint64_t)v146 + v139, &qword_256D1E710);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v142 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
    }
    else
    {
      *v140 = *v141;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v146;
}

uint64_t sub_23E0871F4(uint64_t a1)
{
  destroy for TransitionTileView.Config(a1);
  return a1;
}

uint64_t initializeWithTake for AccessoryControlView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  *(_OWORD *)(v7 + v10[5]) = *(_OWORD *)(v8 + v10[5]);
  v11 = v10[6];
  v12 = v7 + v11;
  v13 = v8 + v11;
  *(_OWORD *)(v7 + v11) = *(_OWORD *)(v8 + v11);
  v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v15 = v12 + v14;
  v16 = v13 + v14;
  v17 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)(v7 + v10[7]) = *(_OWORD *)(v8 + v10[7]);
  *(_OWORD *)(v7 + v10[8]) = *(_OWORD *)(v8 + v10[8]);
  *(_QWORD *)(v7 + v10[9]) = *(_QWORD *)(v8 + v10[9]);
  *(_BYTE *)(v7 + v10[10]) = *(_BYTE *)(v8 + v10[10]);
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_BYTE *)(v7 + v10[12]) = *(_BYTE *)(v8 + v10[12]);
  *(_BYTE *)(v7 + v10[13]) = *(_BYTE *)(v8 + v10[13]);
  *(_QWORD *)(v7 + v10[14]) = *(_QWORD *)(v8 + v10[14]);
  *(_BYTE *)(v7 + v10[15]) = *(_BYTE *)(v8 + v10[15]);
  *(_OWORD *)(v7 + v10[16]) = *(_OWORD *)(v8 + v10[16]);
  *(_OWORD *)(v7 + v10[17]) = *(_OWORD *)(v8 + v10[17]);
  *(_OWORD *)(v7 + v10[18]) = *(_OWORD *)(v8 + v10[18]);
  *(_BYTE *)(v7 + v10[19]) = *(_BYTE *)(v8 + v10[19]);
  *(_BYTE *)(v7 + v10[20]) = *(_BYTE *)(v8 + v10[20]);
  *(_OWORD *)(v7 + v10[21]) = *(_OWORD *)(v8 + v10[21]);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  memcpy((void *)(a1 + v19), (const void *)(a2 + v19), 0x190uLL);
  v22 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v25;
  *(_WORD *)(v23 + 64) = *(_WORD *)(v24 + 64);
  v26 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v26;
  v27 = a3[12];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = sub_23E135E74();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for AccessoryControlView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  void *v66;
  void *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  void *v72;
  void *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for Device();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = v11[6];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = *(_QWORD *)&v9[v17 + 8];
  *(_QWORD *)v18 = *(_QWORD *)&v9[v17];
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v22 = &v18[v21];
  v23 = &v19[v21];
  v24 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = v11[7];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v30 = v11[8];
  v31 = &v8[v30];
  v32 = &v9[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  swift_bridgeObjectRelease();
  v8[v11[10]] = v9[v11[10]];
  v8[v11[11]] = v9[v11[11]];
  v8[v11[12]] = v9[v11[12]];
  v8[v11[13]] = v9[v11[13]];
  *(_QWORD *)&v8[v11[14]] = *(_QWORD *)&v9[v11[14]];
  swift_release();
  v8[v11[15]] = v9[v11[15]];
  v35 = v11[16];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  v40 = v11[17];
  v41 = &v8[v40];
  v42 = &v9[v40];
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  v45 = v11[18];
  v46 = &v8[v45];
  v47 = &v9[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  v8[v11[19]] = v9[v11[19]];
  v8[v11[20]] = v9[v11[20]];
  v50 = v11[21];
  v51 = &v8[v50];
  v52 = &v9[v50];
  v54 = *(_QWORD *)v52;
  v53 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = v54;
  *((_QWORD *)v51 + 1) = v53;
  swift_bridgeObjectRelease();
  v55 = a3[8];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);
  swift_release();
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_release();
  *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
  swift_bridgeObjectRelease();
  v58 = a3[9];
  v59 = (_OWORD *)((char *)a1 + v58);
  v60 = (_OWORD *)((char *)a2 + v58);
  if (!*(_QWORD *)((char *)a1 + v58 + 56))
    goto LABEL_7;
  v61 = *((_QWORD *)v60 + 7);
  if (!v61)
  {
    sub_23E0871F4((uint64_t)v59);
LABEL_7:
    memcpy(v59, v60, 0x190uLL);
    goto LABEL_26;
  }
  v62 = v60[1];
  *v59 = *v60;
  v59[1] = v62;
  v59[2] = v60[2];
  *((_BYTE *)v59 + 48) = *((_BYTE *)v60 + 48);
  *((_BYTE *)v59 + 49) = *((_BYTE *)v60 + 49);
  *((_QWORD *)v59 + 7) = v61;
  swift_release();
  *((_QWORD *)v59 + 8) = *((_QWORD *)v60 + 8);
  swift_release();
  *((_QWORD *)v59 + 9) = *((_QWORD *)v60 + 9);
  swift_release();
  *((_BYTE *)v59 + 80) = *((_BYTE *)v60 + 80);
  if (*((_QWORD *)v59 + 12))
  {
    v63 = *((_QWORD *)v60 + 12);
    if (v63)
    {
      *((_QWORD *)v59 + 11) = *((_QWORD *)v60 + 11);
      *((_QWORD *)v59 + 12) = v63;
      swift_bridgeObjectRelease();
      v64 = *((_QWORD *)v60 + 14);
      *((_QWORD *)v59 + 13) = *((_QWORD *)v60 + 13);
      *((_QWORD *)v59 + 14) = v64;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_23DF89C7C((uint64_t)v59 + 88, &qword_256D22C80);
  }
  v65 = *(_OWORD *)((char *)v60 + 104);
  *(_OWORD *)((char *)v59 + 88) = *(_OWORD *)((char *)v60 + 88);
  *(_OWORD *)((char *)v59 + 104) = v65;
LABEL_10:
  v66 = (void *)*((_QWORD *)v59 + 15);
  *((_QWORD *)v59 + 15) = *((_QWORD *)v60 + 15);

  v67 = (void *)*((_QWORD *)v59 + 21);
  if (v67)
  {
    v68 = *((_QWORD *)v60 + 21);
    if (v68)
    {
      v69 = v60[9];
      v59[8] = v60[8];
      v59[9] = v69;
      *((_QWORD *)v59 + 20) = *((_QWORD *)v60 + 20);
      *((_QWORD *)v59 + 21) = v68;

      *((_QWORD *)v59 + 22) = *((_QWORD *)v60 + 22);
      swift_release();
      *((_QWORD *)v59 + 23) = *((_QWORD *)v60 + 23);
      swift_release();
      *((_BYTE *)v59 + 192) = *((_BYTE *)v60 + 192);
      goto LABEL_15;
    }
    sub_23E053CFC((uint64_t)(v59 + 8));
  }
  v70 = v60[11];
  v59[10] = v60[10];
  v59[11] = v70;
  *((_BYTE *)v59 + 192) = *((_BYTE *)v60 + 192);
  v71 = v60[9];
  v59[8] = v60[8];
  v59[9] = v71;
LABEL_15:
  *(_OWORD *)((char *)v59 + 200) = *(_OWORD *)((char *)v60 + 200);
  *(_OWORD *)((char *)v59 + 216) = *(_OWORD *)((char *)v60 + 216);
  *((_QWORD *)v59 + 29) = *((_QWORD *)v60 + 29);
  v72 = (void *)*((_QWORD *)v59 + 30);
  *((_QWORD *)v59 + 30) = *((_QWORD *)v60 + 30);

  *((_QWORD *)v59 + 31) = *((_QWORD *)v60 + 31);
  swift_release();
  *((_QWORD *)v59 + 32) = *((_QWORD *)v60 + 32);
  swift_release();
  *((_BYTE *)v59 + 264) = *((_BYTE *)v60 + 264);
  v73 = (void *)*((_QWORD *)v59 + 39);
  if (v73)
  {
    v74 = *((_QWORD *)v60 + 39);
    if (v74)
    {
      v75 = v60[18];
      v59[17] = v60[17];
      v59[18] = v75;
      *((_QWORD *)v59 + 38) = *((_QWORD *)v60 + 38);
      *((_QWORD *)v59 + 39) = v74;

      *((_QWORD *)v59 + 40) = *((_QWORD *)v60 + 40);
      swift_release();
      *((_QWORD *)v59 + 41) = *((_QWORD *)v60 + 41);
      swift_release();
      *((_BYTE *)v59 + 336) = *((_BYTE *)v60 + 336);
      goto LABEL_20;
    }
    sub_23E053CFC((uint64_t)(v59 + 17));
  }
  v76 = v60[20];
  v59[19] = v60[19];
  v59[20] = v76;
  *((_BYTE *)v59 + 336) = *((_BYTE *)v60 + 336);
  v77 = v60[18];
  v59[17] = v60[17];
  v59[18] = v77;
LABEL_20:
  if (!*((_QWORD *)v59 + 43))
  {
LABEL_24:
    *(_OWORD *)((char *)v59 + 344) = *(_OWORD *)((char *)v60 + 344);
    goto LABEL_25;
  }
  v78 = *((_QWORD *)v60 + 43);
  if (!v78)
  {
    sub_23E053D28((uint64_t)v59 + 344);
    goto LABEL_24;
  }
  *((_QWORD *)v59 + 43) = v78;
  swift_release();
  *((_QWORD *)v59 + 44) = *((_QWORD *)v60 + 44);
  swift_release();
LABEL_25:
  *((_BYTE *)v59 + 360) = *((_BYTE *)v60 + 360);
  v79 = v60[24];
  v59[23] = v60[23];
  v59[24] = v79;
LABEL_26:
  v80 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = v82[64];
  v84 = v82[65];
  v85 = *(_QWORD *)v81;
  v86 = *((_QWORD *)v81 + 1);
  v87 = *((_QWORD *)v81 + 2);
  v88 = *((_QWORD *)v81 + 3);
  v89 = *((_QWORD *)v81 + 4);
  v90 = *((_QWORD *)v81 + 5);
  v91 = *((_QWORD *)v81 + 6);
  v92 = *((_QWORD *)v81 + 7);
  v93 = v81[64];
  v94 = v81[65];
  v95 = *((_OWORD *)v82 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v95;
  v96 = *((_OWORD *)v82 + 3);
  *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
  *((_OWORD *)v81 + 3) = v96;
  v81[64] = v83;
  v81[65] = v84;
  sub_23DF985F0(v85, v86, v87, v88, v89, v90, v91, v92, v93, v94);
  if (a1 != a2)
  {
    v97 = a3[12];
    v98 = (char *)a1 + v97;
    v99 = (char *)a2 + v97;
    sub_23DF89C7C((uint64_t)a1 + v97, &qword_256D1E710);
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v101 = sub_23E135E74();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v98, v99, v101);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E087A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Device();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryControlView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E087B24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Device();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23E087BC4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Device();
  if (v0 <= 0x3F)
  {
    sub_23DFEC3F4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

