__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s14descr250ECA309O18RGBColorWheelSpaceVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s14descr250ECA309O18RGBColorWheelSpaceVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_23DF73EB8(a1, &qword_256D1D4A0);
}

uint64_t initializeBufferWithCopyOfBuffer for AnimationModel.Visibility.DimmingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AccessoryControlSheetFrameModifier.CardFrameModifier(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccessoryControlSheetFrameModifier.CardFrameModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_23DF73EB8(a1, &qword_256D1D4A8);
}

uint64_t sub_23DF735A0@<X0>(char *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = v14 + *(int *)(v10 + 48);
  v16 = *MEMORY[0x24BE4E238];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  *(_QWORD *)(v15 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

BOOL sub_23DF737D4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_23DF737E8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

ValueMetadata *_s12OutletSwitchVMa()
{
  return &_s12OutletSwitchVN;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_23DF73EB8(a1, &qword_256D1D4B0);
}

uint64_t sub_23DF73818()
{
  return sub_23DF73F28((unint64_t *)&qword_256D1D4B8, (uint64_t (*)(uint64_t))type metadata accessor for HAPControlSolver.Source, (uint64_t)&protocol conformance descriptor for HAPControlSolver.Source);
}

uint64_t sub_23DF73848()
{
  return sub_23E1376A4();
}

uint64_t sub_23DF73874()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23DF738B8()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

_QWORD *sub_23DF738F8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24264C544]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23DF73948(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = (int *)type metadata accessor for AccessoryControlInfo(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v46 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v46);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1356DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E1359AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v48 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE4E238], v9);
  v47 = type metadata accessor for HAPControlSolver.Source();
  v49 = a1;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23DF73DD0((uint64_t)v15);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v44 = v16;
    v45 = v17;
    v20 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v48, v15, v16);
    type metadata accessor for AccessoryControlSolver.HAP();
    swift_storeEnumTagMultiPayload();
    v22 = v49;
    v21 = v50;
    sub_23E12C404(v49, v20, v50);
    sub_23DF73E54((uint64_t)v6, type metadata accessor for ControlTextModifier.Config);
    sub_23E135988();
    v23 = v21;
    sub_23DF73E10(v21, (uint64_t)&v4[v2[5]], type metadata accessor for AccessoryControlInfo.State);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject();
    v46 = xmmword_23E138050;
    *(_OWORD *)(v26 + 16) = xmmword_23E138050;
    sub_23DF73E10(v22, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v27 = v47;
    v28 = *(_BYTE *)(v22 + *(int *)(v47 + 48));
    v29 = (uint64_t *)(v22 + *(int *)(v47 + 52));
    v30 = *v29;
    v31 = v29[1];
    v32 = &v4[v2[7]];
    v33 = v2[9];
    *(_QWORD *)&v4[v2[11]] = v26;
    v4[v2[6]] = v28;
    *(_QWORD *)v32 = v30;
    *((_QWORD *)v32 + 1) = v31;
    *(_WORD *)&v4[v2[8]] = 1027;
    v4[v33] = 12;
    v4[v2[10]] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v34 = type metadata accessor for AccessoryControlGroup(0);
    v35 = *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80);
    v36 = (v35 + 32) & ~v35;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v46;
    v37 = v19 + v36;
    sub_23DF73E10((uint64_t)v4, v37, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v38 = (uint64_t *)(v22 + *(int *)(v27 + 28));
    v39 = *v38;
    v40 = v38[1];
    v41 = (_QWORD *)(v37 + *(int *)(v34 + 24));
    v42 = (_QWORD *)(v37 + *(int *)(v34 + 20));
    *v42 = v39;
    v42[1] = v40;
    *v41 = 0;
    v41[1] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v4, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54(v23, type metadata accessor for AccessoryControlInfo.State);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v20, v44);
  }
  return v19;
}

uint64_t sub_23DF73D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DF73DD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DF73E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23DF73E54(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for HMCharacteristicValueTargetHumidifierDehumidifierState(uint64_t a1)
{
  sub_23DF73EB8(a1, &qword_256D1D548);
}

void type metadata accessor for HMCharacteristicValueTargetSecuritySystemState(uint64_t a1)
{
  sub_23DF73EB8(a1, &qword_256D1D550);
}

void sub_23DF73EB8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23DF73EFC()
{
  return sub_23DF73F28(&qword_256D1D558, (uint64_t (*)(uint64_t))type metadata accessor for HMCharacteristicValueTargetHumidifierDehumidifierState, (uint64_t)&unk_23E138190);
}

uint64_t sub_23DF73F28(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24264C55C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DF73F68()
{
  return sub_23DF73F28(&qword_256D1D560, (uint64_t (*)(uint64_t))type metadata accessor for HMCharacteristicValueTargetSecuritySystemState, (uint64_t)&unk_23E138128);
}

void DataModel.ObjectIdentifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_23E134C80();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for DataModel.ObjectIdentifier();
  MEMORY[0x24BDAC7A8](v3);
  sub_23DF73E10(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_23DF74094 + 4 * byte_23E138290[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF74094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);

  v5 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568) + 48);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v6(v3, v1, v0);
  v6(v2, v5, v0);
  sub_23E1376A4();
  sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E13711C();
  sub_23E13711C();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v2, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v3, v0);
}

uint64_t type metadata accessor for DataModel.ObjectIdentifier()
{
  uint64_t result;

  result = qword_256D1D728;
  if (!qword_256D1D728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DataModel.ObjectIdentifier.hashValue.getter()
{
  sub_23E137698();
  DataModel.ObjectIdentifier.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23DF74294()
{
  sub_23E137698();
  DataModel.ObjectIdentifier.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23DF742D4()
{
  sub_23E137698();
  DataModel.ObjectIdentifier.hash(into:)();
  return sub_23E1376D4();
}

uint64_t DataModel.objectIdentifier(for:homeID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  unsigned int (*v49)(_QWORD, _QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  unint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  unsigned int (*v149)(_QWORD, _QWORD, _QWORD);
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(char *, uint64_t, uint64_t, uint64_t);

  v163 = a1;
  v161 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D578);
  MEMORY[0x24BDAC7A8](v5);
  v154 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D580);
  MEMORY[0x24BDAC7A8](v7);
  v158 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D588);
  MEMORY[0x24BDAC7A8](v9);
  v159 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D590);
  MEMORY[0x24BDAC7A8](v11);
  v157 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E135124();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v150 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v151 = (char *)&v147 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v152 = (char *)&v147 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v153 = (char *)&v147 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v147 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v156 = (char *)&v147 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v160 = (char *)&v147 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v147 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v147 - v36;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23E134DA0();
  v42 = *(_QWORD *)(v41 + 16);
  v162 = v3;
  v155 = v28;
  if (v42)
  {
    v43 = a2;
    v44 = sub_23DF84CA8(a2);
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v37, *(_QWORD *)(v41 + 56) + *(_QWORD *)(v14 + 72) * v44, v13);
      v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v47 = v37;
      v48 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v43 = a2;
  }
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v47 = v37;
  v48 = 1;
LABEL_6:
  v164 = v46;
  v46(v47, v48, 1, v13);
  swift_bridgeObjectRelease();
  v49 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v14 + 48);
  if (v49(v37, 1, v13))
  {
    sub_23DF89C7C((uint64_t)v37, &qword_256D1D598);
    v50 = sub_23E1352BC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v40, 1, 1, v50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v37, v13);
    sub_23DF89C7C((uint64_t)v37, &qword_256D1D598);
    v51 = sub_23E1350E8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    if (*(_QWORD *)(v51 + 16) && (v52 = sub_23DF84CA8(v163), (v53 & 1) != 0))
    {
      v54 = v52;
      v148 = *(_QWORD *)(v51 + 56);
      v55 = sub_23E1352BC();
      v149 = v49;
      v56 = *(_QWORD *)(v55 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v40, v148 + *(_QWORD *)(v56 + 72) * v54, v55);
      v49 = v149;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v40, 0, 1, v55);
    }
    else
    {
      v55 = sub_23E1352BC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v40, 1, 1, v55);
    }
    swift_bridgeObjectRelease();
    sub_23E1352BC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v40, 1, v55) != 1)
    {
      sub_23DF89C7C((uint64_t)v40, &qword_256D1D5A0);
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
      v78 = v161;
      v79 = v161 + *(int *)(v77 + 48);
      v80 = sub_23E134C80();
      v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
      v81(v78, v163, v80);
      v81(v79, v43, v80);
      v82 = type metadata accessor for DataModel.ObjectIdentifier();
      goto LABEL_74;
    }
  }
  sub_23DF89C7C((uint64_t)v40, &qword_256D1D5A0);
  v57 = sub_23E134DA0();
  if (*(_QWORD *)(v57 + 16) && (v58 = sub_23DF84CA8(v43), (v59 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v35, *(_QWORD *)(v57 + 56) + *(_QWORD *)(v14 + 72) * v58, v13);
    v60 = 0;
  }
  else
  {
    v60 = 1;
  }
  v61 = (uint64_t)v160;
  v164(v35, v60, 1, v13);
  swift_bridgeObjectRelease();
  if (v49(v35, 1, v13))
  {
    v62 = v43;
    sub_23DF89C7C((uint64_t)v35, &qword_256D1D598);
    v63 = sub_23E135898();
    v64 = (uint64_t)v157;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v157, 1, 1, v63);
    v65 = (uint64_t)v158;
    v66 = (uint64_t)v159;
  }
  else
  {
    v67 = v153;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v153, v35, v13);
    sub_23DF89C7C((uint64_t)v35, &qword_256D1D598);
    v68 = sub_23E135118();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v67, v13);
    if (*(_QWORD *)(v68 + 16))
    {
      v69 = sub_23DF84CA8(v163);
      if ((v70 & 1) != 0)
      {
        v71 = v69;
        v72 = *(_QWORD *)(v68 + 56);
        v73 = sub_23E135898();
        v149 = v49;
        v74 = v43;
        v75 = *(_QWORD *)(v73 - 8);
        v64 = (uint64_t)v157;
        (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v157, v72 + *(_QWORD *)(v75 + 72) * v71, v73);
        v76 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56);
        v62 = v74;
        v49 = v149;
        v76(v64, 0, 1, v73);
      }
      else
      {
        v62 = v43;
        v73 = sub_23E135898();
        v64 = (uint64_t)v157;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v157, 1, 1, v73);
      }
      v65 = (uint64_t)v158;
      v66 = (uint64_t)v159;
      v61 = (uint64_t)v160;
    }
    else
    {
      v62 = v43;
      v73 = sub_23E135898();
      v64 = (uint64_t)v157;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v157, 1, 1, v73);
      v65 = (uint64_t)v158;
      v66 = (uint64_t)v159;
    }
    swift_bridgeObjectRelease();
    sub_23E135898();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v64, 1, v73) != 1)
    {
      sub_23DF89C7C(v64, &qword_256D1D590);
      v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
      v78 = v161;
      v100 = v161 + *(int *)(v99 + 48);
      v101 = sub_23E134C80();
      v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
      v102(v78, v163, v101);
      v102(v100, v62, v101);
      v82 = type metadata accessor for DataModel.ObjectIdentifier();
      goto LABEL_74;
    }
  }
  sub_23DF89C7C(v64, &qword_256D1D590);
  v83 = sub_23E134DA0();
  if (*(_QWORD *)(v83 + 16))
  {
    v84 = v62;
    v85 = sub_23DF84CA8(v62);
    if ((v86 & 1) != 0)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v61, *(_QWORD *)(v83 + 56) + *(_QWORD *)(v14 + 72) * v85, v13);
      v87 = 0;
    }
    else
    {
      v87 = 1;
    }
  }
  else
  {
    v87 = 1;
    v84 = v62;
  }
  v164((char *)v61, v87, 1, v13);
  swift_bridgeObjectRelease();
  if (v49(v61, 1, v13))
  {
    sub_23DF89C7C(v61, &qword_256D1D598);
    v88 = sub_23E1354FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v66, 1, 1, v88);
    goto LABEL_42;
  }
  v89 = v152;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v152, v61, v13);
  sub_23DF89C7C(v61, &qword_256D1D598);
  v90 = sub_23E1350F4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v89, v13);
  if (*(_QWORD *)(v90 + 16))
  {
    v149 = v49;
    v91 = sub_23DF84CA8(v163);
    if ((v92 & 1) != 0)
    {
      v93 = v91;
      v94 = v65;
      v95 = *(_QWORD *)(v90 + 56);
      v96 = sub_23E1354FC();
      v97 = *(_QWORD *)(v96 - 8);
      v98 = v95 + *(_QWORD *)(v97 + 72) * v93;
      v65 = v94;
      v66 = (uint64_t)v159;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v159, v98, v96);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56))(v66, 0, 1, v96);
    }
    else
    {
      v96 = sub_23E1354FC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v66, 1, 1, v96);
    }
    v49 = v149;
  }
  else
  {
    v96 = sub_23E1354FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v66, 1, 1, v96);
  }
  swift_bridgeObjectRelease();
  sub_23E1354FC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v66, 1, v96) == 1)
  {
LABEL_42:
    sub_23DF89C7C(v66, &qword_256D1D588);
    v103 = sub_23E134DA0();
    if (*(_QWORD *)(v103 + 16) && (v104 = sub_23DF84CA8(v84), (v105 & 1) != 0))
    {
      v106 = (uint64_t)v156;
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v156, *(_QWORD *)(v103 + 56) + *(_QWORD *)(v14 + 72) * v104, v13);
      v107 = 0;
    }
    else
    {
      v107 = 1;
      v106 = (uint64_t)v156;
    }
    v164((char *)v106, v107, 1, v13);
    swift_bridgeObjectRelease();
    if (v49(v106, 1, v13))
    {
      sub_23DF89C7C(v106, &qword_256D1D598);
      v108 = sub_23E135670();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v65, 1, 1, v108);
    }
    else
    {
      v109 = v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v151, v106, v13);
      sub_23DF89C7C(v106, &qword_256D1D598);
      v110 = sub_23E135100();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v109, v13);
      if (*(_QWORD *)(v110 + 16))
      {
        v149 = v49;
        v111 = sub_23DF84CA8(v163);
        if ((v112 & 1) != 0)
        {
          v113 = v111;
          v114 = v65;
          v115 = *(_QWORD *)(v110 + 56);
          v116 = sub_23E135670();
          v117 = *(_QWORD *)(v116 - 8);
          v118 = v115 + *(_QWORD *)(v117 + 72) * v113;
          v65 = v114;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 16))(v114, v118, v116);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
        }
        else
        {
          v116 = sub_23E135670();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v65, 1, 1, v116);
        }
        v49 = v149;
      }
      else
      {
        v116 = sub_23E135670();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v65, 1, 1, v116);
      }
      swift_bridgeObjectRelease();
      sub_23E135670();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v65, 1, v116) != 1)
      {
        v139 = &qword_256D1D580;
        v140 = v65;
LABEL_73:
        sub_23DF89C7C(v140, v139);
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
        v78 = v161;
        v144 = v161 + *(int *)(v143 + 48);
        v145 = sub_23E134C80();
        v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 16);
        v146(v78, v163, v145);
        v146(v144, v84, v145);
        v82 = type metadata accessor for DataModel.ObjectIdentifier();
        goto LABEL_74;
      }
    }
    sub_23DF89C7C(v65, &qword_256D1D580);
    v123 = sub_23E134DA0();
    if (*(_QWORD *)(v123 + 16))
    {
      v124 = v49;
      v125 = sub_23DF84CA8(v84);
      if ((v126 & 1) != 0)
      {
        v127 = (uint64_t)v155;
        (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v155, *(_QWORD *)(v123 + 56) + *(_QWORD *)(v14 + 72) * v125, v13);
        v128 = 0;
LABEL_61:
        v164((char *)v127, v128, 1, v13);
        swift_bridgeObjectRelease();
        if (v124(v127, 1, v13))
        {
          sub_23DF89C7C(v127, &qword_256D1D598);
          v129 = sub_23E1357E4();
          v130 = (uint64_t)v154;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v154, 1, 1, v129);
LABEL_71:
          sub_23DF89C7C(v130, &qword_256D1D578);
          v141 = type metadata accessor for DataModel.ObjectIdentifier();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v161, 1, 1, v141);
        }
        v131 = v150;
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v150, v127, v13);
        sub_23DF89C7C(v127, &qword_256D1D598);
        v132 = sub_23E13510C();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v131, v13);
        if (*(_QWORD *)(v132 + 16))
        {
          v133 = sub_23DF84CA8(v163);
          v130 = (uint64_t)v154;
          if ((v134 & 1) != 0)
          {
            v135 = v133;
            v136 = *(_QWORD *)(v132 + 56);
            v137 = sub_23E1357E4();
            v138 = *(_QWORD *)(v137 - 8);
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v138 + 16))(v130, v136 + *(_QWORD *)(v138 + 72) * v135, v137);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v138 + 56))(v130, 0, 1, v137);
          }
          else
          {
            v137 = sub_23E1357E4();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v130, 1, 1, v137);
          }
        }
        else
        {
          v137 = sub_23E1357E4();
          v130 = (uint64_t)v154;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v154, 1, 1, v137);
        }
        swift_bridgeObjectRelease();
        sub_23E1357E4();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 48))(v130, 1, v137) == 1)
          goto LABEL_71;
        v139 = &qword_256D1D578;
        v140 = v130;
        goto LABEL_73;
      }
    }
    else
    {
      v124 = v49;
    }
    v128 = 1;
    v127 = (uint64_t)v155;
    goto LABEL_61;
  }
  sub_23DF89C7C(v66, &qword_256D1D588);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
  v78 = v161;
  v120 = v161 + *(int *)(v119 + 48);
  v121 = sub_23E134C80();
  v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
  v122(v78, v163, v121);
  v122(v120, v84, v121);
  v82 = type metadata accessor for DataModel.ObjectIdentifier();
LABEL_74:
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v78, 0, 1, v82);
}

void DataModel.device(for:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);
  char *v62;
  _QWORD v63[21];
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v83 = a1;
  v63[17] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D578);
  MEMORY[0x24BDAC7A8](v2);
  v63[20] = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23E1357E4();
  v63[19] = *(_QWORD *)(v64 - 8);
  v4 = MEMORY[0x24BDAC7A8](v64);
  v63[2] = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v63[1] = (char *)v63 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D580);
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E135670();
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63[10] = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v63[9] = (char *)v63 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D588);
  MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23E1354FC();
  v74 = *(_QWORD *)(v76 - 8);
  v15 = MEMORY[0x24BDAC7A8](v76);
  v63[8] = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v63[7] = (char *)v63 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  MEMORY[0x24BDAC7A8](v18);
  v63[6] = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D590);
  MEMORY[0x24BDAC7A8](v20);
  v72 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23E135898();
  v69 = *(_QWORD *)(v22 - 8);
  v70 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v63[5] = (char *)v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v63[12] = (char *)v63 - v25;
  v26 = sub_23E135124();
  v84 = *(_QWORD *)(v26 - 8);
  v85 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v63[11] = (char *)v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v63[16] = (char *)v63 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v63[15] = (char *)v63 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v63[14] = (char *)v63 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v63[13] = (char *)v63 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v65 = (char *)v63 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v73 = (char *)v63 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v79 = (char *)v63 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v71 = (char *)v63 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v45);
  v67 = (char *)v63 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23E1352BC();
  v66 = *(_QWORD *)(v68 - 8);
  v47 = MEMORY[0x24BDAC7A8](v68);
  v63[4] = (char *)v63 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v63[3] = (char *)v63 - v49;
  v86 = sub_23E134C80();
  v87 = *(_QWORD *)(v86 - 8);
  v50 = MEMORY[0x24BDAC7A8](v86);
  v82 = (char *)v63 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v50);
  v81 = (char *)v63 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v55 = MEMORY[0x24BDAC7A8](v54);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v58 = MEMORY[0x24BDAC7A8](v57);
  MEMORY[0x24BDAC7A8](v58);
  v59 = type metadata accessor for DataModel.ObjectIdentifier();
  MEMORY[0x24BDAC7A8](v59);
  sub_23DF73E10(v83, (uint64_t)v63 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0), v61);
  v62 = (char *)sub_23DF758D4 + 4 * byte_23E138294[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF758D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  void (*v28)(uint64_t, uint64_t);

  v5 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568) + 48);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 32);
  v7 = v0;
  v8 = *(_QWORD *)(v4 - 96);
  v6(v2, v7, v8);
  v6(v3, v5, v8);
  v9 = sub_23E134DA0();
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_23DF84CA8(v3), (v11 & 1) != 0))
  {
    (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v4 - 112) + 16))(v1, *(_QWORD *)(v9 + 56) + *(_QWORD *)(*(_QWORD *)(v4 - 112) + 72) * v10, *(_QWORD *)(v4 - 104));
    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  v14 = *(_QWORD *)(v4 - 112);
  v13 = *(_QWORD *)(v4 - 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v1, v12, 1, v13);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v1, 1, v13))
  {
    sub_23DF89C7C(v1, &qword_256D1D598);
    v15 = *(_QWORD *)(v4 - 256);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 264) + 56))(v15, 1, 1, *(_QWORD *)(v4 - 248));
    v16 = *(_QWORD *)(v4 - 96);
    v17 = *(_QWORD *)(v4 - 72);
LABEL_12:
    sub_23DF89C7C(v15, &qword_256D1D5A0);
    sub_23DF86F1C();
    swift_allocError();
    swift_willThrow();
    v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(v3, v16);
    return ((uint64_t (*)(uint64_t, uint64_t))v25)(v2, v16);
  }
  v18 = *(_QWORD *)(v4 - 344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v1, v13);
  sub_23DF89C7C(v1, &qword_256D1D598);
  v19 = sub_23E1350E8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v13);
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_23DF84CA8(v2), (v21 & 1) != 0))
  {
    v22 = *(_QWORD *)(v4 - 264);
    v15 = *(_QWORD *)(v4 - 256);
    v23 = *(_QWORD *)(v4 - 248);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v22 + 16))(v15, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v22 + 72) * v20, v23);
    v24 = 0;
    v16 = *(_QWORD *)(v4 - 96);
    v17 = *(_QWORD *)(v4 - 72);
  }
  else
  {
    v24 = 1;
    v16 = *(_QWORD *)(v4 - 96);
    v17 = *(_QWORD *)(v4 - 72);
    v15 = *(_QWORD *)(v4 - 256);
    v23 = *(_QWORD *)(v4 - 248);
    v22 = *(_QWORD *)(v4 - 264);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v15, v24, 1, v23);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v23) == 1)
    goto LABEL_12;
  v26 = *(_QWORD *)(v4 - 424);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v26, v15, v23);
  v27 = *(char **)(v4 - 416);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v27, v26, v23);
  Device.init(staticService:)(v27, *(_QWORD *)(v4 - 312));
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v23);
  v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v28(v3, v16);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v2, v16);
}

uint64_t Device.init(staticService:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD *);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  char v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t result;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t *v97;
  char *v98;
  _QWORD *v99;
  char *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;

  v126 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5B8);
  MEMORY[0x24BDAC7A8](v3);
  v119 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E134E9C();
  v124 = *(_QWORD *)(v5 - 8);
  v125 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v123 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v118 = (char *)&v100 - v8;
  v122 = sub_23E1352BC();
  v114 = *(_QWORD *)(v122 - 8);
  v9 = MEMORY[0x24BDAC7A8](v122);
  v121 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v120 = (char *)&v100 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v100 = (char *)&v100 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v127 = (char *)&v100 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v106 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v108 = (char *)&v100 - v19;
  v20 = sub_23E135910();
  v109 = *(_QWORD *)(v20 - 8);
  v110 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v107 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = (_QWORD *)sub_23E134E54();
  v22 = *(v117 - 1);
  v23 = MEMORY[0x24BDAC7A8](v117);
  v105 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v100 - v25;
  v27 = sub_23E134E60();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v100 - v32;
  v104 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v104);
  v35 = (uint64_t *)((char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = sub_23E134C80();
  v115 = *(_QWORD *)(v36 - 8);
  v116 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v113 = (char *)&v100 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135268();
  v38 = sub_23E13528C();
  v111 = v39;
  v112 = v38;
  sub_23E135178();
  sub_23E134E24();
  v40 = *(void (**)(char *, uint64_t))(v28 + 8);
  v40(v33, v27);
  v41 = sub_23E134E48();
  v103 = v42;
  v43 = *(void (**)(char *, _QWORD *))(v22 + 8);
  v44 = v26;
  v45 = (uint64_t)v117;
  v43(v44, v117);
  sub_23E135178();
  v46 = v105;
  sub_23E134E24();
  v47 = v27;
  v48 = a1;
  v40(v31, v47);
  v49 = v107;
  sub_23E134E3C();
  v43(v46, (_QWORD *)v45);
  v50 = v103;
  *v35 = v41;
  v35[1] = v50;
  v51 = *(int *)(v104 + 20);
  v117 = v35;
  v52 = (uint64_t)v108;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))((char *)v35 + v51, v49, v110);
  sub_23E135250();
  v53 = sub_23E1359D0();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  if (v55(v52, 1, v53) == 1)
  {
    sub_23DF89C7C(v52, &qword_256D1D5C0);
    v109 = 0;
    v110 = 0;
  }
  else
  {
    v56 = sub_23E1359B8();
    v109 = v57;
    v110 = v56;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
  }
  v58 = sub_23E1352A4();
  v107 = v59;
  v108 = (char *)v58;
  v105 = (char *)sub_23E135298();
  LODWORD(v104) = sub_23E135160();
  LODWORD(v103) = sub_23E135214();
  v101 = sub_23E135274();
  v102 = sub_23E135190();
  v60 = (uint64_t)v106;
  sub_23E135250();
  v61 = v55(v60, 1, v53);
  v62 = v125;
  v63 = v122;
  v65 = v118;
  v64 = (uint64_t)v119;
  if (v61 == 1)
  {
    sub_23DF89C7C(v60, &qword_256D1D5C0);
    v66 = v114;
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
    v68 = v127;
    v67(v127, (uint64_t)v48, v63);
    v69 = v124;
  }
  else
  {
    v70 = sub_23E1359C4();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v60, v53);
    v66 = v114;
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
    v68 = v127;
    v67(v127, (uint64_t)v48, v63);
    v71 = (char *)v70;
    v69 = v124;
    if (v71)
    {
      v72 = *(void (**)(char *, uint64_t))(v66 + 8);
      v73 = v101;
      v119 = v71;
      v72(v127, v63);
      goto LABEL_12;
    }
  }
  sub_23E13513C();
  v74 = v100;
  v67(v100, (uint64_t)v68, v63);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v64, 1, v62) == 1)
  {
    sub_23E1351A8();
    v72 = *(void (**)(char *, uint64_t))(v66 + 8);
    v72(v74, v63);
    sub_23DF89C7C(v64, &qword_256D1D5B8);
  }
  else
  {
    v72 = *(void (**)(char *, uint64_t))(v66 + 8);
    v72(v74, v63);
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v65, v64, v62);
  }
  v73 = v101;
  v119 = (char *)sub_23E134E90();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v62);
  v72(v127, v63);
LABEL_12:
  LODWORD(v124) = v73 & 1;
  LODWORD(v127) = sub_23E13519C();
  v75 = v120;
  v67(v120, (uint64_t)v48, v63);
  v118 = (char *)sub_23E1351E4();
  v114 = v76;
  v72(v75, v63);
  v77 = v121;
  v67(v121, (uint64_t)v48, v63);
  v120 = (char *)sub_23E13525C();
  v106 = v78;
  v72(v77, v63);
  v79 = sub_23E135280();
  v81 = v80;
  v82 = sub_23E135244();
  v83 = v123;
  sub_23E1351A8();
  LOBYTE(v77) = sub_23E134E84();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v83, v62);
  v72(v48, v63);
  v84 = (int *)type metadata accessor for Device();
  v85 = v126;
  v86 = (uint64_t *)(v126 + v84[7]);
  v87 = (_QWORD *)(v126 + v84[8]);
  v88 = v84[12];
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v126, v113, v116);
  v89 = (uint64_t *)(v85 + v84[5]);
  v90 = v111;
  *v89 = v112;
  v89[1] = v90;
  result = sub_23DF89384((uint64_t)v117, v85 + v84[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v92 = v109;
  *v86 = v110;
  v86[1] = v92;
  *(_BYTE *)(v85 + v84[10]) = v104 & 1;
  *(_BYTE *)(v85 + v84[11]) = v103 & 1;
  *(_BYTE *)(v85 + v88) = v124;
  *(_BYTE *)(v85 + v84[13]) = v102 & 1;
  *(_QWORD *)(v85 + v84[14]) = v119;
  *(_BYTE *)(v85 + v84[15]) = v127 & 1;
  v93 = (_QWORD *)(v85 + v84[16]);
  v94 = v114;
  *v93 = v118;
  v93[1] = v94;
  v95 = (_QWORD *)(v85 + v84[17]);
  v96 = v106;
  *v95 = v120;
  v95[1] = v96;
  v97 = (uint64_t *)(v85 + v84[18]);
  *v97 = v79;
  v97[1] = v81;
  v98 = v107;
  *v87 = v108;
  v87[1] = v98;
  *(_QWORD *)(v85 + v84[9]) = v105;
  *(_BYTE *)(v85 + v84[19]) = v82 & 1;
  *(_BYTE *)(v85 + v84[20]) = v77 & 1;
  v99 = (_QWORD *)(v85 + v84[21]);
  *v99 = 0;
  v99[1] = 0;
  return result;
}

uint64_t Device.init(staticServiceGroup:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t *v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  char *v100;
  char *v101;

  v99 = a2;
  v3 = sub_23E135910();
  v94 = *(_QWORD *)(v3 - 8);
  v95 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v93 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_23E134E54();
  v90 = *(_QWORD *)(v92 - 8);
  v5 = MEMORY[0x24BDAC7A8](v92);
  v91 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v87 = (char *)&v77 - v7;
  v89 = sub_23E134E60();
  v85 = *(_QWORD *)(v89 - 8);
  v8 = MEMORY[0x24BDAC7A8](v89);
  v86 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v84 = (char *)&v77 - v10;
  v88 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v88);
  v98 = (uint64_t *)((char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_23E134C80();
  v96 = *(_QWORD *)(v12 - 8);
  v97 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v101 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5B8);
  MEMORY[0x24BDAC7A8](v14);
  v83 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E134E9C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v100 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23E1352BC();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4DC28];
  v24 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v77 - v28;
  v30 = sub_23E135838();
  v31 = sub_23DF85210(v30, v23, &qword_256D1D840, MEMORY[0x24BE4DC38], (void (*)(char *, char *))sub_23E12CF88);
  sub_23DF7AC7C(v31, v23, (uint64_t)v21);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22) == 1)
  {
    v32 = sub_23E135898();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a1, v32);
    sub_23DF89C7C((uint64_t)v21, &qword_256D1D5A0);
    v33 = type metadata accessor for Device();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v99, 1, 1, v33);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v21, v22);
    v35 = (uint64_t)v83;
    sub_23E13513C();
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v22);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v35, 1, v16);
    v81 = v29;
    v82 = v22;
    v79 = v16;
    v77 = v17;
    if (v36 == 1)
    {
      sub_23E1351A8();
      v80 = *(void (**)(char *, uint64_t))(v24 + 8);
      v80(v27, v22);
      sub_23DF89C7C(v35, &qword_256D1D5B8);
    }
    else
    {
      v80 = *(void (**)(char *, uint64_t))(v24 + 8);
      v80(v27, v22);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v100, v35, v16);
    }
    sub_23E13585C();
    v83 = (char *)sub_23E135874();
    v78 = v37;
    v38 = v84;
    sub_23E1357FC();
    v39 = v87;
    sub_23E134E24();
    v40 = *(void (**)(char *, uint64_t))(v85 + 8);
    v41 = v89;
    v40(v38, v89);
    v42 = sub_23E134E48();
    v44 = v43;
    v45 = *(void (**)(char *, uint64_t))(v90 + 8);
    v46 = v92;
    v45(v39, v92);
    v47 = v86;
    sub_23E1357FC();
    v48 = v91;
    sub_23E134E24();
    v40(v47, v41);
    v49 = v93;
    sub_23E134E3C();
    v45(v48, v46);
    v50 = (uint64_t)v98;
    *v98 = v42;
    *(_QWORD *)(v50 + 8) = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v50 + *(int *)(v88 + 20), v49, v95);
    v51 = sub_23E13588C();
    v94 = v52;
    v95 = v51;
    v93 = (char *)sub_23E135880();
    LODWORD(v92) = sub_23E1357F0();
    LODWORD(v91) = sub_23E13582C();
    LODWORD(v90) = sub_23E135808();
    v53 = v100;
    v89 = sub_23E134E90();
    LODWORD(v88) = sub_23E135814();
    v54 = sub_23E135820();
    v86 = v55;
    v87 = (char *)v54;
    v56 = sub_23E135850();
    v84 = v57;
    v85 = v56;
    v58 = sub_23E135868();
    v60 = v59;
    LOBYTE(v47) = sub_23E135844();
    v61 = sub_23E134E84();
    v62 = sub_23E135898();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(a1, v62);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v53, v79);
    v80(v81, v82);
    v63 = (int *)type metadata accessor for Device();
    v64 = v99;
    v65 = (_QWORD *)(v99 + v63[7]);
    v66 = (uint64_t *)(v99 + v63[8]);
    v67 = v63[12];
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v99, v101, v97);
    v68 = (_QWORD *)(v64 + v63[5]);
    v69 = v78;
    *v68 = v83;
    v68[1] = v69;
    sub_23DF89384(v50, v64 + v63[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    *v65 = 0;
    v65[1] = 0;
    *(_BYTE *)(v64 + v63[10]) = v92 & 1;
    *(_BYTE *)(v64 + v63[11]) = v91 & 1;
    *(_BYTE *)(v64 + v67) = 2;
    *(_BYTE *)(v64 + v63[13]) = v90 & 1;
    *(_QWORD *)(v64 + v63[14]) = v89;
    *(_BYTE *)(v64 + v63[15]) = v88 & 1;
    v70 = (_QWORD *)(v64 + v63[16]);
    v71 = v86;
    *v70 = v87;
    v70[1] = v71;
    v72 = (uint64_t *)(v64 + v63[17]);
    v73 = v84;
    *v72 = v85;
    v72[1] = (uint64_t)v73;
    v74 = (uint64_t *)(v64 + v63[18]);
    *v74 = v58;
    v74[1] = v60;
    v75 = v94;
    *v66 = v95;
    v66[1] = v75;
    *(_QWORD *)(v64 + v63[9]) = v93;
    *(_BYTE *)(v64 + v63[19]) = v47 & 1;
    *(_BYTE *)(v64 + v63[20]) = v61 & 1;
    v76 = (_QWORD *)(v64 + v63[21]);
    *v76 = 0;
    v76[1] = 0;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v63 - 1) + 56))(v64, 0, 1, v63);
  }
}

uint64_t Device.init(staticAccessory:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  int *v76;
  uint64_t v77;
  uint64_t *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t result;
  unint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;

  v116 = a2;
  v95 = sub_23E134E9C();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_23E1354FC();
  v112 = *(_QWORD *)(v115 - 8);
  v4 = MEMORY[0x24BDAC7A8](v115);
  v114 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v113 = (char *)&v92 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v111 = (char *)&v92 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v9);
  v104 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v101 = (char *)&v92 - v14;
  v15 = sub_23E135910();
  v102 = *(_QWORD *)(v15 - 8);
  v103 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v100 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23E134E54();
  v17 = *(_QWORD *)(v99 - 8);
  v18 = MEMORY[0x24BDAC7A8](v99);
  v110 = (uint64_t *)((char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v92 - v20;
  v22 = sub_23E134E60();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v92 - v27;
  v98 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v98);
  v30 = (uint64_t *)((char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_23E134C80();
  v108 = *(_QWORD *)(v31 - 8);
  v109 = v31;
  MEMORY[0x24BDAC7A8](v31);
  v107 = (char *)&v92 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1354C0();
  v33 = sub_23E1354D8();
  v105 = v34;
  v106 = v33;
  sub_23E1353D0();
  sub_23E134E24();
  v35 = *(void (**)(char *, uint64_t))(v23 + 8);
  v36 = v22;
  v35(v28, v22);
  v37 = sub_23E134E48();
  v96 = v38;
  v97 = v37;
  v39 = *(void (**)(char *, uint64_t))(v17 + 8);
  v40 = v99;
  v39(v21, v99);
  sub_23E1353D0();
  v41 = (uint64_t)v110;
  sub_23E134E24();
  v35(v26, v36);
  v42 = v100;
  sub_23E134E3C();
  v39((char *)v41, v40);
  v43 = v96;
  *v30 = v97;
  v30[1] = v43;
  v44 = *(int *)(v98 + 20);
  v110 = v30;
  v45 = (uint64_t)v101;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))((char *)v30 + v44, v42, v103);
  sub_23E1354A8();
  v46 = sub_23E1359D0();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v48(v45, 1, v46) == 1)
  {
    sub_23DF89C7C(v45, &qword_256D1D5C0);
    v102 = 0xE000000000000000;
    v103 = 0;
  }
  else
  {
    v49 = sub_23E1359B8();
    v102 = v50;
    v103 = v49;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
  }
  v51 = sub_23E1354F0();
  v100 = v52;
  v101 = (char *)v51;
  v99 = sub_23E1354E4();
  LODWORD(v98) = sub_23E1353C4();
  LODWORD(v97) = sub_23E135478();
  v53 = sub_23E135484();
  LODWORD(v96) = sub_23E1353DC();
  v54 = (uint64_t)v104;
  sub_23E1353B8();
  v55 = sub_23E1352BC();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55);
  v58 = v115;
  if (v57 == 1)
  {
    v59 = &qword_256D1D5A0;
  }
  else
  {
    v60 = v54;
    v54 = (uint64_t)v92;
    sub_23E135250();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v60, v55);
    if (v48(v54, 1, v46) != 1)
    {
      v65 = sub_23E1359C4();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v54, v46);
      v62 = v111;
      v61 = v112;
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
      v63(v111, (uint64_t)a1, v58);
      if (v65)
        goto LABEL_10;
      goto LABEL_9;
    }
    v59 = &qword_256D1D5C0;
  }
  sub_23DF89C7C(v54, v59);
  v62 = v111;
  v61 = v112;
  v63 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
  v63(v111, (uint64_t)a1, v58);
LABEL_9:
  v64 = v93;
  sub_23E13546C();
  v65 = sub_23E134E90();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v95);
LABEL_10:
  v112 = v65;
  v66 = *(void (**)(char *, uint64_t))(v61 + 8);
  v66(v62, v58);
  LODWORD(v104) = v53 & 1;
  LODWORD(v111) = sub_23E1353E8();
  v67 = v113;
  v63(v113, (uint64_t)a1, v58);
  v95 = sub_23E135400();
  v94 = v68;
  v66(v67, v58);
  v69 = v114;
  v63(v114, (uint64_t)a1, v58);
  v113 = (char *)sub_23E1354B4();
  v71 = v70;
  v66(v69, v58);
  v72 = sub_23E1354CC();
  v74 = v73;
  v75 = sub_23E13549C();
  LOBYTE(v69) = sub_23E1353F4();
  v66(a1, v58);
  v76 = (int *)type metadata accessor for Device();
  v77 = v116;
  v78 = (uint64_t *)(v116 + v76[7]);
  v79 = (_QWORD *)(v116 + v76[8]);
  v80 = v76[12];
  (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v116, v107, v109);
  v81 = (uint64_t *)(v77 + v76[5]);
  v82 = v105;
  *v81 = v106;
  v81[1] = v82;
  result = sub_23DF89384((uint64_t)v110, v77 + v76[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v84 = v102;
  *v78 = v103;
  v78[1] = v84;
  *(_BYTE *)(v77 + v76[10]) = v98 & 1;
  *(_BYTE *)(v77 + v76[11]) = v97 & 1;
  *(_BYTE *)(v77 + v80) = (_BYTE)v104;
  *(_BYTE *)(v77 + v76[13]) = v96 & 1;
  *(_QWORD *)(v77 + v76[14]) = v112;
  *(_BYTE *)(v77 + v76[15]) = v111 & 1;
  v85 = (uint64_t *)(v77 + v76[16]);
  v86 = v94;
  *v85 = v95;
  v85[1] = v86;
  v87 = (_QWORD *)(v77 + v76[17]);
  *v87 = v113;
  v87[1] = v71;
  v88 = (uint64_t *)(v77 + v76[18]);
  *v88 = v72;
  v88[1] = v74;
  v90 = v99;
  v89 = v100;
  *v79 = v101;
  v79[1] = v89;
  *(_QWORD *)(v77 + v76[9]) = v90;
  *(_BYTE *)(v77 + v76[19]) = v75 & 1;
  *(_BYTE *)(v77 + v76[20]) = v69 & 1;
  v91 = (_QWORD *)(v77 + v76[21]);
  *v91 = 0;
  v91[1] = 0;
  return result;
}

uint64_t Device.init(staticMediaSystem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = sub_23E135598();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_23E134C80();
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135628();
  v13 = sub_23E135640();
  v51 = v14;
  v52 = v13;
  v15 = sub_23E1355D4();
  v17 = v16;
  v18 = (char *)v10 + *(int *)(v8 + 20);
  v19 = *MEMORY[0x24BE4E5A8];
  v20 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  *v10 = v15;
  v10[1] = v17;
  v21 = sub_23E135658();
  v55 = v22;
  v56 = v21;
  v54 = sub_23E13564C();
  v50 = sub_23E1355E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE4E108], v4);
  v49 = sub_23E13558C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v48 = sub_23E1355EC();
  v23 = sub_23E135604();
  v46 = v24;
  v47 = v23;
  v25 = sub_23E13561C();
  v45 = v26;
  v27 = sub_23E135634();
  v29 = v28;
  LOBYTE(v15) = sub_23E135610();
  v30 = sub_23E135670();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
  v31 = (int *)type metadata accessor for Device();
  v32 = (_QWORD *)(a2 + v31[7]);
  v33 = (uint64_t *)(a2 + v31[8]);
  v34 = v31[12];
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(a2, v53, v58);
  v35 = (uint64_t *)(a2 + v31[5]);
  v36 = v51;
  *v35 = v52;
  v35[1] = v36;
  result = sub_23DF89384((uint64_t)v10, a2 + v31[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  *v32 = 0;
  v32[1] = 0;
  *(_BYTE *)(a2 + v31[10]) = 0;
  *(_BYTE *)(a2 + v31[11]) = 1;
  *(_BYTE *)(a2 + v34) = 2;
  *(_BYTE *)(a2 + v31[13]) = v50 & 1;
  *(_QWORD *)(a2 + v31[14]) = v49;
  *(_BYTE *)(a2 + v31[15]) = v48 & 1;
  v38 = (uint64_t *)(a2 + v31[16]);
  v39 = v46;
  *v38 = v47;
  v38[1] = v39;
  v40 = (uint64_t *)(a2 + v31[17]);
  v41 = v45;
  *v40 = v25;
  v40[1] = v41;
  v42 = (uint64_t *)(a2 + v31[18]);
  *v42 = v27;
  v42[1] = v29;
  v43 = v55;
  *v33 = v56;
  v33[1] = v43;
  *(_QWORD *)(a2 + v31[9]) = v54;
  *(_BYTE *)(a2 + v31[19]) = v15 & 1;
  *(_BYTE *)(a2 + v31[20]) = 0;
  v44 = (_QWORD *)(a2 + v31[21]);
  *v44 = 0;
  v44[1] = 0;
  return result;
}

uint64_t Device.init(staticMediaProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = sub_23E135598();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_23E134C80();
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E13579C();
  v13 = sub_23E1357B4();
  v51 = v14;
  v52 = v13;
  v15 = sub_23E135748();
  v17 = v16;
  v18 = (char *)v10 + *(int *)(v8 + 20);
  v19 = *MEMORY[0x24BE4E5A8];
  v20 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  *v10 = v15;
  v10[1] = v17;
  v21 = sub_23E1357D8();
  v55 = v22;
  v56 = v21;
  v54 = sub_23E1357C0();
  v50 = sub_23E135754();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE4E108], v4);
  v49 = sub_23E13558C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v48 = sub_23E135760();
  v23 = sub_23E13576C();
  v46 = v24;
  v47 = v23;
  v25 = sub_23E135790();
  v45 = v26;
  v27 = sub_23E1357A8();
  v29 = v28;
  LOBYTE(v15) = sub_23E135784();
  v30 = sub_23E1357E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
  v31 = (int *)type metadata accessor for Device();
  v32 = (_QWORD *)(a2 + v31[7]);
  v33 = (uint64_t *)(a2 + v31[8]);
  v34 = v31[12];
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(a2, v53, v58);
  v35 = (uint64_t *)(a2 + v31[5]);
  v36 = v51;
  *v35 = v52;
  v35[1] = v36;
  result = sub_23DF89384((uint64_t)v10, a2 + v31[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  *v32 = 0;
  v32[1] = 0;
  *(_BYTE *)(a2 + v31[10]) = 0;
  *(_BYTE *)(a2 + v31[11]) = 1;
  *(_BYTE *)(a2 + v34) = 2;
  *(_BYTE *)(a2 + v31[13]) = v50 & 1;
  *(_QWORD *)(a2 + v31[14]) = v49;
  *(_BYTE *)(a2 + v31[15]) = v48 & 1;
  v38 = (uint64_t *)(a2 + v31[16]);
  v39 = v46;
  *v38 = v47;
  v38[1] = v39;
  v40 = (uint64_t *)(a2 + v31[17]);
  v41 = v45;
  *v40 = v25;
  v40[1] = v41;
  v42 = (uint64_t *)(a2 + v31[18]);
  *v42 = v27;
  v42[1] = v29;
  v43 = v55;
  *v33 = v56;
  v33[1] = v43;
  *(_QWORD *)(a2 + v31[9]) = v54;
  *(_BYTE *)(a2 + v31[19]) = v15 & 1;
  *(_BYTE *)(a2 + v31[20]) = 0;
  v44 = (_QWORD *)(a2 + v31[21]);
  *v44 = 0;
  v44[1] = 0;
  return result;
}

void DataModel.controls(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD);
  char *v64;
  _QWORD v65[10];
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v100 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D578);
  MEMORY[0x24BDAC7A8](v1);
  v67 = (char *)v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23E1357E4();
  v65[9] = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v65[0] = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D580);
  MEMORY[0x24BDAC7A8](v4);
  v81 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_23E135670();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v65[1] = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_23E134D7C();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_23E134DF4();
  v83 = *(_QWORD *)(v84 - 8);
  v8 = MEMORY[0x24BDAC7A8](v84);
  v76 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)v65 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D588);
  MEMORY[0x24BDAC7A8](v11);
  v95 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_23E1354FC();
  v94 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v80 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D590);
  MEMORY[0x24BDAC7A8](v14);
  v90 = (char *)v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E135898();
  v88 = *(_QWORD *)(v16 - 8);
  v89 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v65[8] = (char *)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v18);
  v65[7] = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_23E135124();
  v102 = *(_QWORD *)(v101 - 8);
  v20 = MEMORY[0x24BDAC7A8](v101);
  v65[2] = (char *)v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v65[3] = (char *)v65 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v75 = (char *)v65 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v74 = (char *)v65 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v73 = (char *)v65 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v72 = (char *)v65 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v68 = (char *)v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v71 = (char *)v65 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v93 = (char *)v65 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v65[4] = (char *)v65 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v92 = (char *)v65 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  MEMORY[0x24BDAC7A8](v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v43);
  v85 = (char *)v65 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23E1352BC();
  v86 = *(_QWORD *)(v45 - 8);
  v87 = v45;
  v46 = MEMORY[0x24BDAC7A8](v45);
  v65[5] = (char *)v65 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v65[6] = (char *)v65 - v48;
  v49 = sub_23E134C80();
  v103 = *(_QWORD *)(v49 - 8);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v99 = (char *)v65 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v50);
  v96 = (char *)v65 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v97 = (char *)v65 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v98 = (char *)v65 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v59 = MEMORY[0x24BDAC7A8](v58);
  v60 = MEMORY[0x24BDAC7A8](v59);
  MEMORY[0x24BDAC7A8](v60);
  v61 = type metadata accessor for DataModel.ObjectIdentifier();
  MEMORY[0x24BDAC7A8](v61);
  sub_23DF73E10(v100, (uint64_t)v65 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0), v63);
  v64 = (char *)sub_23DF78B08 + 4 * byte_23E138298[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23DF78B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);

  v6 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568) + 48);
  v7 = *(_QWORD *)(v5 - 72);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(v4, v0, v2);
  v8(v1, v6, v2);
  v9 = (_QWORD *)sub_23E134DA0();
  if (v9[2])
  {
    v10 = sub_23DF84CA8(v1);
    v11 = *(_QWORD *)(v5 - 112);
    v12 = *(_QWORD *)(v5 - 96);
    if ((v13 & 1) != 0)
    {
      (*(void (**)(uint64_t, unint64_t, _QWORD))(v12 + 16))(v3, v9[7] + *(_QWORD *)(v12 + 72) * v10, *(_QWORD *)(v5 - 112));
      v14 = 0;
    }
    else
    {
      v14 = 1;
    }
  }
  else
  {
    v14 = 1;
    v11 = *(_QWORD *)(v5 - 112);
    v12 = *(_QWORD *)(v5 - 96);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v3, v14, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11))
  {
    sub_23DF89C7C(v3, &qword_256D1D598);
    v15 = *(_QWORD *)(v5 - 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 240) + 56))(v15, 1, 1, *(_QWORD *)(v5 - 232));
  }
  else
  {
    v9 = *(_QWORD **)(v5 - 352);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v12 + 16))(v9, v3, v11);
    sub_23DF89C7C(v3, &qword_256D1D598);
    v16 = sub_23E1350E8();
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
    if (*(_QWORD *)(v16 + 16) && (v9 = (_QWORD *)v16, v17 = sub_23DF84CA8(v4), (v18 & 1) != 0))
    {
      v15 = *(_QWORD *)(v5 - 248);
      v19 = *(_QWORD *)(v5 - 240);
      v20 = *(_QWORD *)(v5 - 232);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(v15, *(_QWORD *)(v16 + 56) + *(_QWORD *)(v19 + 72) * v17, v20);
      v21 = 0;
    }
    else
    {
      v21 = 1;
      v19 = *(_QWORD *)(v5 - 240);
      v20 = *(_QWORD *)(v5 - 232);
      v15 = *(_QWORD *)(v5 - 248);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v15, v21, 1, v20);
    swift_bridgeObjectRelease();
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v20);
    v7 = *(_QWORD *)(v5 - 72);
    if (v22 != 1)
    {
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
      *(_QWORD *)(v5 - 96) = v4;
      v25 = *(_QWORD *)(v5 - 432);
      v24(v25, v15, v20);
      v26 = *(_QWORD *)(v5 - 440);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v26, v25, v20);
      v27 = *(_QWORD *)(v5 - 424);
      sub_23E014044(v26, v27);
      v28 = sub_23E02FC4C(v27, 0);
      sub_23DF73E54(v27, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
      v9 = (_QWORD *)swift_allocObject();
      *((_OWORD *)v9 + 1) = xmmword_23E138050;
      v9[4] = 0;
      v9[5] = 0;
      v9[7] = 0;
      v9[8] = 0;
      v9[6] = v28;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v20);
      v29 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v29(v1, v2);
      v29(*(_QWORD *)(v5 - 96), v2);
      return v9;
    }
  }
  sub_23DF89C7C(v15, &qword_256D1D5A0);
  sub_23DF86F1C();
  swift_allocError();
  swift_willThrow();
  v23 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v23(v1, v2);
  v23(v4, v2);
  return v9;
}

double static Device.controls(with:)(uint64_t a1)
{
  return sub_23DF83D98(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DC28], (void (*)(char *))sub_23E014044);
}

{
  return sub_23DF83D98(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DAA8], (void (*)(char *))sub_23E014DD4);
}

void DataModel.containsDevice(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  char *v43;
  _QWORD v44[11];
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v54 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D578);
  MEMORY[0x24BDAC7A8](v1);
  v44[7] = (char *)v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D580);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D588);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D590);
  MEMORY[0x24BDAC7A8](v7);
  v44[10] = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23E135898();
  v49 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44[1] = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23E135124();
  v53 = *(_QWORD *)(v56 - 8);
  v10 = MEMORY[0x24BDAC7A8](v56);
  v44[2] = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v44[6] = (char *)v44 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v44[5] = (char *)v44 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v44[4] = (char *)v44 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v44[3] = (char *)v44 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v44[8] = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v48 = (char *)v44 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v47 = (char *)v44 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v44[0] = (char *)v44 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v44[9] = (char *)v44 - v30;
  v55 = sub_23E134C80();
  v57 = *(_QWORD *)(v55 - 8);
  v31 = MEMORY[0x24BDAC7A8](v55);
  v52 = (char *)v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v51 = (char *)v44 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v39 = MEMORY[0x24BDAC7A8](v38);
  MEMORY[0x24BDAC7A8](v39);
  v40 = type metadata accessor for DataModel.ObjectIdentifier();
  MEMORY[0x24BDAC7A8](v40);
  sub_23DF73E10(v54, (uint64_t)v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0), v42);
  v43 = (char *)sub_23DF7A000 + 4 * byte_23E13829C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF7A000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);

  v5 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568) + 48);
  v6 = *(_QWORD *)(v4 - 96);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v8 = *(_QWORD *)(v4 - 112);
  v7(v3, v1, v8);
  v7(v0, v5, v8);
  v9 = sub_23E134DA0();
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_23DF84CA8(v0), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(v4 - 136);
    (*(void (**)(uint64_t, unint64_t, _QWORD))(v12 + 16))(v2, *(_QWORD *)(v9 + 56) + *(_QWORD *)(v12 + 72) * v10, *(_QWORD *)(v4 - 104));
    v13 = 0;
  }
  else
  {
    v13 = 1;
    v12 = *(_QWORD *)(v4 - 136);
  }
  v14 = *(_QWORD *)(v4 - 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v2, v13, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v2, 1, v14))
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v15(v0, v8);
    v15(v3, v8);
    sub_23DF89C7C(v2, &qword_256D1D598);
    v16 = sub_23E1352BC();
    v17 = *(_QWORD *)(v4 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v17, 1, 1, v16);
  }
  else
  {
    v18 = *(_QWORD *)(v4 - 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v18, v2, v14);
    sub_23DF89C7C(v2, &qword_256D1D598);
    v19 = sub_23E1350E8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v14);
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_23DF84CA8(v3), (v21 & 1) != 0))
    {
      v22 = v20;
      v23 = *(_QWORD *)(v19 + 56);
      v24 = sub_23E1352BC();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = v23 + *(_QWORD *)(v25 + 72) * v22;
      v17 = *(_QWORD *)(v4 - 216);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v17, v26, v24);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
    }
    else
    {
      v24 = sub_23E1352BC();
      v17 = *(_QWORD *)(v4 - 216);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v27(v0, v8);
    v27(v3, v8);
    sub_23E1352BC();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v17, 1, v24) != 1)
    {
      sub_23DF89C7C(v17, &qword_256D1D5A0);
      return 1;
    }
  }
  sub_23DF89C7C(v17, &qword_256D1D5A0);
  return 0;
}

uint64_t sub_23DF7AC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23DF7AC7C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DE10], a2);
}

uint64_t sub_23DF7AC7C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  result = sub_23DF861F4(a1);
  if ((v8 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v7)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v9 = a2(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a3;
    v12 = 1;
  }
  else
  {
    sub_23DF86294(result, v7, 0, a1, a2, a3);
    v9 = a2(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a3;
    v12 = 0;
  }
  return v10(v11, v12, 1, v9);
}

uint64_t DataModel.set(control:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v4 = type metadata accessor for Device.Control.IncrementalState(0);
  v3[17] = v4;
  v3[18] = *(_QWORD *)(v4 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v5 = sub_23E134E9C();
  v3[31] = v5;
  v3[32] = *(_QWORD *)(v5 - 8);
  v3[33] = swift_task_alloc();
  type metadata accessor for DataModel.ObjectIdentifier();
  v3[34] = swift_task_alloc();
  v6 = sub_23E134C80();
  v3[35] = v6;
  v3[36] = *(_QWORD *)(v6 - 8);
  v3[37] = swift_task_alloc();
  v7 = type metadata accessor for Device.Control(0);
  v3[38] = v7;
  v3[39] = *(_QWORD *)(v7 - 8);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v8 = type metadata accessor for Device.Control.ColorState(0);
  v3[54] = v8;
  v3[55] = *(_QWORD *)(v8 - 8);
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  v3[58] = type metadata accessor for Device.Control.Kind(0);
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v3[68] = swift_task_alloc();
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  v9 = sub_23E1356DC();
  v3[71] = v9;
  v3[72] = *(_QWORD *)(v9 - 8);
  v3[73] = swift_task_alloc();
  v3[74] = type metadata accessor for Device.Control.Source(0);
  v3[75] = swift_task_alloc();
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v3[78] = swift_task_alloc();
  v3[79] = swift_task_alloc();
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  sub_23E1372C0();
  v3[82] = sub_23E1372B4();
  v3[83] = sub_23E1372A8();
  v3[84] = v10;
  return swift_task_switch();
}

void sub_23DF7B168()
{
  _QWORD *v0;
  char *v1;

  sub_23DF73E10(v0[14] + *(int *)(v0[38] + 24), v0[81], type metadata accessor for Device.Control.Source);
  v1 = (char *)sub_23DF7B1DC + 4 * word_23E1382A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF7B1DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[81];
  v2 = v0[73];
  v3 = v0[72];
  v4 = v0[71];
  v5 = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650) + 48));
  v0[85] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v4);
  v6 = (_QWORD *)swift_task_alloc();
  v0[86] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_23DF7D2C8;
  return sub_23DF87958(v0[14], v0[73], v5);
}

uint64_t sub_23DF7B268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;
  int v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  _QWORD *v74;

  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = **(_QWORD **)(v0 + 648);
  *(_QWORD *)(v0 + 704) = v5;
  sub_23DF73E10(v4 + *(int *)(v3 + 20), v2, type metadata accessor for Device.Control.Kind);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    v17 = *(_QWORD *)(v0 + 536);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DF73E54(v17, type metadata accessor for Device.Control.Kind);
    goto LABEL_5;
  }
  *(_QWORD *)(v1 - 176) = v3;
  *(_QWORD *)(v1 - 144) = v5;
  v6 = *(_QWORD *)(v0 + 560);
  v7 = *(_QWORD *)(v0 + 552);
  v8 = *(_QWORD *)(v0 + 536);
  v10 = *(_QWORD *)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 440);
  v11 = (unsigned __int8 *)(v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48));
  *(_DWORD *)(v1 - 168) = *v11;
  *(_DWORD *)(v1 - 120) = v11[1];
  *(_DWORD *)(v1 - 184) = v11[2];
  *(_DWORD *)(v1 - 160) = *((unsigned __int16 *)v11 + 2);
  v12 = v11[6];
  v13 = *((unsigned __int16 *)v11 + 4);
  v14 = v11[10];
  sub_23DF89340(v8, v6, &qword_256D1D5E8);
  sub_23DF89C1C(v6, v7, &qword_256D1D5E8);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v15(v7, 1, v10) == 1)
  {
    v16 = *(_QWORD *)(v0 + 552);
    sub_23DF89C7C(*(_QWORD *)(v0 + 560), &qword_256D1D5E8);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v16, &qword_256D1D5E8);
LABEL_5:
    v18 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v1 - 224) = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v1 - 216) = v18;
    v19 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 224);
    *(_QWORD *)(v1 - 200) = v19;
    v20 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v1 - 184) = v20;
    v21 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v1 - 176) = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v1 - 168) = v21;
    *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v1 - 112) = v22;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v24 = *(_DWORD *)(v1 - 120);
  *(_DWORD *)(v1 - 208) = v14;
  *(_DWORD *)(v1 - 200) = v13;
  *(_DWORD *)(v1 - 192) = v12;
  v25 = *(_QWORD *)(v0 + 120);
  sub_23DF89384(*(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 456), type metadata accessor for Device.Control.ColorState);
  DataModel.controls(for:)(v25);
  *(_QWORD *)(v1 - 112) = 0;
  *(_QWORD *)(v1 - 216) = v15;
  v26 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 - 96) = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(v27 + 16);
  v29 = *(_QWORD *)(v1 - 144);
  if (v28)
  {
    swift_bridgeObjectRetain();
    v30 = 48;
    do
    {
      v31 = swift_bridgeObjectRetain();
      sub_23DF84834(v31, (uint64_t (*)(void))sub_23E0076E4, type metadata accessor for Device.ControlGroup);
      v30 += 40;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    v32 = *(_QWORD *)(v1 - 96);
    v33 = *(_DWORD *)(v1 - 120);
  }
  else
  {
    LOBYTE(v33) = v24;
    v32 = v26;
  }
  *(_QWORD *)(v1 - 96) = v26;
  v34 = *(_QWORD *)(v32 + 16);
  v35 = *(_DWORD *)(v1 - 160);
  if (v34)
  {
    v36 = *(_QWORD *)(v0 + 312);
    v37 = *(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8);
    v38 = v32 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v39 = *(_QWORD *)(v37 + 72);
    *(_QWORD *)(v1 - 224) = v32;
    swift_bridgeObjectRetain();
    *(_OWORD *)(v1 - 112) = xmmword_23E138050;
    do
    {
      sub_23DF73E10(v38, *(_QWORD *)(v0 + 392), type metadata accessor for Device.ControlGroup.LayoutType);
      if (swift_getEnumCaseMultiPayload() < 2)
      {
        v40 = **(_QWORD **)(v0 + 392);
      }
      else
      {
        v41 = *(_QWORD *)(v0 + 352);
        sub_23DF89384(*(_QWORD *)(v0 + 392), v41, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        v42 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = *(_OWORD *)(v1 - 112);
        v43 = v40 + v42;
        v33 = *(_DWORD *)(v1 - 120);
        sub_23DF89384(v41, v43, type metadata accessor for Device.Control);
      }
      sub_23DF84834(v40, (uint64_t (*)(void))sub_23E007818, type metadata accessor for Device.Control);
      v38 += v39;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v44 = *(_QWORD *)(v1 - 96);
    v29 = *(_QWORD *)(v1 - 144);
    v35 = *(_DWORD *)(v1 - 160);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x24BEE4AF8];
  }
  v45 = *(_QWORD *)(v44 + 16);
  v46 = *(_DWORD *)(v1 - 168);
  if (v45)
  {
    v47 = *(_QWORD *)(v0 + 312);
    v48 = v44 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    v49 = *(_QWORD *)(v47 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23DF73E10(v48, *(_QWORD *)(v0 + 344), type metadata accessor for Device.Control);
      if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) != 0)
        break;
      sub_23DF73E54(*(_QWORD *)(v0 + 344), type metadata accessor for Device.Control);
      v48 += v49;
      if (!--v45)
      {
        swift_bridgeObjectRelease();
        v50 = 1;
        goto LABEL_26;
      }
    }
    v51 = *(_QWORD *)(v0 + 424);
    v52 = *(_QWORD *)(v0 + 344);
    swift_bridgeObjectRelease();
    sub_23DF89384(v52, v51, type metadata accessor for Device.Control);
    v50 = 0;
LABEL_26:
    v33 = *(_DWORD *)(v1 - 120);
    v35 = *(_DWORD *)(v1 - 160);
  }
  else
  {
    v50 = 1;
  }
  v53 = *(_QWORD *)(v0 + 424);
  v55 = *(_QWORD *)(v0 + 304);
  v54 = *(_QWORD *)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v53, v50, 1, v55);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v53, 1, v55) == 1)
  {
    v56 = *(_QWORD *)(v0 + 560);
    v57 = *(_QWORD *)(v0 + 456);
    sub_23DF89C7C(*(_QWORD *)(v0 + 424), &qword_256D1D5E0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DF73E54(v57, type metadata accessor for Device.Control.ColorState);
    sub_23DF89C7C(v56, &qword_256D1D5E8);
    goto LABEL_5;
  }
  v58 = *(_QWORD *)(v0 + 424);
  sub_23DF73E10(v58 + *(int *)(*(_QWORD *)(v1 - 176) + 20), *(_QWORD *)(v0 + 528), type metadata accessor for Device.Control.Kind);
  sub_23DF73E54(v58, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    v64 = *(_QWORD *)(v0 + 560);
    v65 = *(_QWORD *)(v0 + 528);
    v66 = *(_QWORD *)(v0 + 456);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DF73E54(v66, type metadata accessor for Device.Control.ColorState);
    sub_23DF89C7C(v64, &qword_256D1D5E8);
    sub_23DF73E54(v65, type metadata accessor for Device.Control.Kind);
    goto LABEL_5;
  }
  v59 = *(_QWORD *)(v0 + 544);
  v60 = *(_QWORD *)(v0 + 432);
  sub_23DF89340(*(_QWORD *)(v0 + 528), v59, &qword_256D1D5E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 - 216))(v59, 1, v60) == 1)
  {
    v61 = *(_QWORD *)(v0 + 560);
    v62 = *(_QWORD *)(v0 + 544);
    v63 = *(_QWORD *)(v0 + 456);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DF73E54(v63, type metadata accessor for Device.Control.ColorState);
    sub_23DF89C7C(v61, &qword_256D1D5E8);
    sub_23DF89C7C(v62, &qword_256D1D5E8);
    goto LABEL_5;
  }
  v67 = *(_QWORD *)(v0 + 288);
  v68 = *(_QWORD *)(v0 + 296);
  v70 = *(_QWORD *)(v0 + 272);
  v69 = *(_QWORD *)(v0 + 280);
  v71 = *(_QWORD *)(v0 + 120);
  sub_23DF89384(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 448), type metadata accessor for Device.Control.ColorState);
  *(_BYTE *)(v0 + 50) = v46;
  *(_BYTE *)(v0 + 51) = v33;
  *(_BYTE *)(v0 + 52) = *(_DWORD *)(v1 - 184);
  *(_WORD *)(v0 + 54) = v35;
  *(_BYTE *)(v0 + 56) = *(_DWORD *)(v1 - 192);
  *(_WORD *)(v0 + 58) = *(_DWORD *)(v1 - 200);
  *(_BYTE *)(v0 + 60) = *(_DWORD *)(v1 - 208);
  sub_23DF73E10(v71, v70, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v68, v70 + *(int *)(v72 + 48), v69);
  v73 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  *(_QWORD *)(v0 + 712) = v73;
  v73(v70, v69);
  v74 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v74;
  *v74 = v0;
  v74[1] = sub_23DF7D968;
  return sub_23DF7FF64(*(_QWORD *)(v0 + 456), v0 + 50, v29, *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 448));
}

uint64_t sub_23DF7D2C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 696) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF7D334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 568);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7D64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 568);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7D968()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 728) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 712))(*(_QWORD *)(v2 + 296), *(_QWORD *)(v2 + 280));
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF7DA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  swift_release();
  sub_23DF73E54(v3, type metadata accessor for Device.Control.ColorState);
  sub_23DF73E54(v2, type metadata accessor for Device.Control.ColorState);
  sub_23DF89C7C(v1, &qword_256D1D5E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7DD40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 752) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF7DDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7E0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7E3E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 776) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DF7E44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  swift_release();
  sub_23DF73E54(v6, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v4, &qword_256D1D5D8);
  sub_23DF73E54(v5, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v3, &qword_256D1D5D8);
  sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7E7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  swift_release();
  sub_23DF73E54(v6, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v4, &qword_256D1D5D8);
  sub_23DF73E54(v5, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v3, &qword_256D1D5D8);
  sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7EB48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 800) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DF7EBB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  swift_release();
  sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7EEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  swift_release();
  sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7F218()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DF7F27C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 600);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  swift_release();
  sub_23DF73E54(v6, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v4, &qword_256D1D5D8);
  sub_23DF73E54(v5, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v3, &qword_256D1D5D8);
  sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7F5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 600);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  swift_release();
  sub_23DF73E54(v6, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v4, &qword_256D1D5D8);
  sub_23DF73E54(v5, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF89C7C(v3, &qword_256D1D5D8);
  sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7F978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  swift_release();
  sub_23DF73E54(v3, type metadata accessor for Device.Control.ColorState);
  sub_23DF73E54(v2, type metadata accessor for Device.Control.ColorState);
  sub_23DF89C7C(v1, &qword_256D1D5E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF7FCB0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t (*v30)(char *);
  uint64_t v31;

  v30 = a1;
  v27 = a3;
  v5 = sub_23E1357E4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - v10;
  v12 = *(_QWORD *)(a2 + 56);
  v28 = a2 + 56;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v29 = (unint64_t)(v13 + 63) >> 6;
  v31 = a2;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v6 + 72) * i, v5);
    v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    v24 = v30(v9);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return swift_release();
    }
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = v27;
      v23(v27, v9, v5);
      v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
      break;
    if (v17 >= v29)
      goto LABEL_28;
    v21 = *(_QWORD *)(v28 + 8 * v17);
    if (!v21)
    {
      v22 = v17 + 1;
      if (v17 + 1 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 2;
      if (v17 + 2 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 3;
      if (v17 + 3 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
      {
LABEL_16:
        v17 = v22;
        goto LABEL_17;
      }
      v22 = v17 + 4;
      if (v17 + 4 < v29)
      {
        v21 = *(_QWORD *)(v28 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v17 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_31;
            if (v17 >= v29)
              goto LABEL_28;
            v21 = *(_QWORD *)(v28 + 8 * v17);
            ++v22;
            if (v21)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v25 = v27;
      swift_release();
      v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23DF7FF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6[38] = a5;
  v6[39] = v5;
  v6[36] = a3;
  v6[37] = a4;
  v6[35] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  v6[40] = swift_task_alloc();
  v7 = sub_23E1352BC();
  v6[41] = v7;
  v6[42] = *(_QWORD *)(v7 - 8);
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v8 = sub_23E1356DC();
  v6[45] = v8;
  v6[46] = *(_QWORD *)(v8 - 8);
  v6[47] = swift_task_alloc();
  v9 = sub_23E134C80();
  v6[48] = v9;
  v6[49] = *(_QWORD *)(v9 - 8);
  v6[50] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v6[51] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v6[52] = swift_task_alloc();
  v6[53] = swift_task_alloc();
  v10 = sub_23E135328();
  v6[54] = v10;
  v6[55] = *(_QWORD *)(v10 - 8);
  v6[56] = swift_task_alloc();
  v11 = sub_23E135AF0();
  v6[57] = v11;
  v6[58] = *(_QWORD *)(v11 - 8);
  v6[59] = swift_task_alloc();
  v12 = sub_23E135A0C();
  v6[60] = v12;
  v6[61] = *(_QWORD *)(v12 - 8);
  v6[62] = swift_task_alloc();
  v6[63] = swift_task_alloc();
  sub_23E1372C0();
  v6[64] = sub_23E1372B4();
  v6[65] = sub_23E1372A8();
  v6[66] = v13;
  return swift_task_switch();
}

uint64_t sub_23DF80168()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, unint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, _QWORD, uint64_t);
  uint64_t v74;
  double *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);

  v71 = *((_QWORD *)v0 + 55);
  v74 = *((_QWORD *)v0 + 54);
  v68 = *((_QWORD *)v0 + 53);
  v65 = *((_QWORD *)v0 + 35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7A0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23E138050;
  sub_23E135AD8();
  *((_QWORD *)v0 + 34) = v1;
  sub_23DF73F28(&qword_256D1D7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4EA00], MEMORY[0x24BE4EA10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7B0);
  sub_23DF89B88(&qword_256D1D7B8, &qword_256D1D7B0, MEMORY[0x24BEE12C8]);
  sub_23E1374F4();
  sub_23E1359DC();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23E138050;
  sub_23E135AE4();
  *((_QWORD *)v0 + 33) = v2;
  sub_23E1374F4();
  sub_23E1359DC();
  *((_QWORD *)v0 + 32) = MEMORY[0x24BEE4B08];
  sub_23DF89C1C(v65, v68, &qword_256D1D7F0);
  v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  if (v3(v68, 1, v74) == 1)
  {
    sub_23DF89C7C(*((_QWORD *)v0 + 53), &qword_256D1D7F0);
LABEL_31:
    v33 = *((_QWORD *)v0 + 35);
    v34 = *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20);
    if ((*(_BYTE *)(v33 + v34 + 8) & 1) != 0)
      goto LABEL_45;
    v35 = *(double *)(v33 + v34);
    v36 = *((_QWORD *)v0 + 38) + v34;
    if ((*(_BYTE *)(v36 + 8) & 1) == 0 && v35 == *(double *)v36)
      goto LABEL_45;
    v37 = *((_QWORD *)v0 + 46);
    v38 = *((_QWORD *)v0 + 47);
    v39 = *((_QWORD *)v0 + 45);
    v76 = *((_QWORD *)v0 + 39);
    v40 = *((_QWORD *)v0 + 36);
    v41 = *((_QWORD *)v0 + 37);
    *((_QWORD *)v0 + 24) = MEMORY[0x24BEE13C8];
    v0[21] = v35 * 100.0;
    v73 = *(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104);
    v73(v38, *MEMORY[0x24BE4E230], v39);
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7C0);
    *((_QWORD *)v0 + 10) = v70;
    v42 = sub_23DF89B88(&qword_256D1D7C8, &qword_256D1D7C0, MEMORY[0x24BEE1728]);
    *((_QWORD *)v0 + 11) = v42;
    *((_QWORD *)v0 + 7) = v40;
    swift_bridgeObjectRetain();
    sub_23E1359F4();
    v43 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v43(v38, v39);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 21));
    v44 = swift_task_alloc();
    *(_QWORD *)(v44 + 16) = v76;
    *(_QWORD *)(v44 + 24) = v41;
    v45 = sub_23DF82638((void (*)(char *))sub_23DF89BC8, v44, v40);
    swift_task_dealloc();
    v46 = *(_QWORD *)(v45 + 16);
    if (v46)
    {
      v67 = v42;
      v77 = v43;
      v47 = 0;
      v48 = *((_QWORD *)v0 + 42);
      v49 = v45 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
      v50 = *(_QWORD *)(v48 + 72);
      v51 = *(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 16);
      do
      {
        v56 = *((_QWORD *)v0 + 43);
        v55 = *((_QWORD *)v0 + 44);
        v57 = *((_QWORD *)v0 + 41);
        v51(v55, v49, v57);
        v51(v56, v55, v57);
        if ((v47 & 1) != 0)
          v47 = 1;
        else
          v47 = sub_23E13516C() & 1;
        v52 = *((_QWORD *)v0 + 44);
        v53 = *((_QWORD *)v0 + 41);
        v54 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v54(*((_QWORD *)v0 + 43), v53);
        v54(v52, v53);
        v49 += v50;
        --v46;
      }
      while (v46);
      swift_bridgeObjectRelease();
      v58 = v35 > 0.0;
      v59 = (v35 > 0.0) ^ v47;
      v43 = v77;
      v42 = v67;
      if ((v59 & 1) == 0)
        goto LABEL_45;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v35 <= 0.0)
      {
LABEL_45:
        v63 = (_QWORD *)swift_task_alloc();
        *((_QWORD *)v0 + 67) = v63;
        *v63 = v0;
        v63[1] = sub_23DF808F4;
        return sub_23DF872B8(*((_QWORD *)v0 + 63));
      }
      v58 = 1;
    }
    v60 = *((_QWORD *)v0 + 47);
    v61 = *((_QWORD *)v0 + 45);
    v62 = *((_QWORD *)v0 + 36);
    *((_QWORD *)v0 + 20) = MEMORY[0x24BEE1328];
    *((_BYTE *)v0 + 136) = v58;
    v73(v60, *MEMORY[0x24BE4E238], v61);
    *((_QWORD *)v0 + 5) = v70;
    *((_QWORD *)v0 + 6) = v42;
    *((_QWORD *)v0 + 2) = v62;
    swift_bridgeObjectRetain();
    sub_23E1359F4();
    v43(v60, v61);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 17));
    goto LABEL_45;
  }
  v4 = *((_QWORD *)v0 + 54);
  v5 = *((_QWORD *)v0 + 52);
  v6 = *((_QWORD *)v0 + 38);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*((_QWORD *)v0 + 55) + 32))(*((_QWORD *)v0 + 56), *((_QWORD *)v0 + 53), v4);
  sub_23DF89C1C(v6, v5, &qword_256D1D7F0);
  if (v3(v5, 1, v4) == 1)
  {
    sub_23DF89C7C(*((_QWORD *)v0 + 52), &qword_256D1D7F0);
  }
  else
  {
    v7 = *((_QWORD *)v0 + 55);
    v8 = *((_QWORD *)v0 + 54);
    v9 = *((_QWORD *)v0 + 52);
    v10 = sub_23E0A88A0(*((_QWORD *)v0 + 56));
    v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v9, v8);
    if (v10)
    {
      v11(*((_QWORD *)v0 + 56), *((_QWORD *)v0 + 54));
      goto LABEL_31;
    }
  }
  v69 = (uint64_t)(v0 + 32);
  v12 = *((_QWORD *)v0 + 36);
  v13 = *(_QWORD *)(v12 + 56);
  v64 = v12 + 56;
  v72 = v12;
  v75 = v0;
  v14 = *((_QWORD *)v0 + 49);
  v15 = -1;
  v16 = -1 << *(_BYTE *)(v12 + 32);
  if (-v16 < 64)
    v15 = ~(-1 << -(char)v16);
  v17 = v15 & v13;
  v66 = (unint64_t)(63 - v16) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  if (!v17)
    goto LABEL_11;
LABEL_10:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    v25 = *((_QWORD *)v75 + 51);
    v26 = *((_QWORD *)v75 + 48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v25, *(_QWORD *)(v72 + 48) + *(_QWORD *)(v14 + 72) * i, v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v25, 1, v26) == 1)
    {
      swift_release();
      v0 = v75;
LABEL_30:
      (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)v0 + 55) + 8))(*((_QWORD *)v0 + 56), *((_QWORD *)v0 + 54));
      goto LABEL_31;
    }
    v27 = *((_QWORD *)v75 + 62);
    v28 = *((_QWORD *)v75 + 63);
    v29 = *((_QWORD *)v75 + 56);
    v30 = *((_QWORD *)v75 + 50);
    v31 = *((_QWORD *)v75 + 48);
    v32 = *((_QWORD *)v75 + 37);
    (*(void (**)(NSObject *, _QWORD, uint64_t))(v14 + 32))(v30, *((_QWORD *)v75 + 51), v31);
    sub_23DF810E0(v29, v30, v32, v28, v27, v69);
    result = (*(uint64_t (**)(NSObject *, uint64_t))(v14 + 8))(v30, v31);
    if (v17)
      goto LABEL_10;
LABEL_11:
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    v0 = v75;
    if (v22 >= v66)
      goto LABEL_29;
    v23 = *(_QWORD *)(v64 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v66)
        goto LABEL_29;
      v23 = *(_QWORD *)(v64 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v66)
          goto LABEL_29;
        v23 = *(_QWORD *)(v64 + 8 * v19);
        if (!v23)
          break;
      }
    }
LABEL_24:
    v17 = (v23 - 1) & v23;
  }
  v24 = v22 + 3;
  if (v24 >= v66)
  {
LABEL_29:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v14 + 56))(*((_QWORD *)v75 + 51), 1, 1, *((_QWORD *)v75 + 48));
    swift_release();
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v64 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v66)
      goto LABEL_29;
    v23 = *(_QWORD *)(v64 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_24;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_23DF808F4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 544) = v2;
  *v2 = v4;
  v2[1] = sub_23DF8095C;
  return sub_23DF872B8(*(_QWORD *)(v1 + 496));
}

uint64_t sub_23DF8095C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DF809AC()
{
  uint64_t v0;
  BOOL v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 256) + 16))
  {
    v1 = sub_23DF82AB0(*(_QWORD *)(v0 + 280));
    if (qword_256D1D270 != -1)
      swift_once();
    v2 = sub_23E135C10();
    __swift_project_value_buffer(v2, (uint64_t)qword_256D1EAC0);
    v3 = sub_23E135BF8();
    v4 = sub_23E137368();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v18 = v6;
      *(_DWORD *)v5 = 67240450;
      *(_DWORD *)(v0 + 568) = v1;
      sub_23E1374B8();
      *(_WORD *)(v5 + 8) = 2082;
      swift_beginAccess();
      sub_23E135718();
      sub_23DF73F28(&qword_256D1D808, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], MEMORY[0x24BE4E3D8]);
      swift_bridgeObjectRetain();
      v7 = sub_23E137314();
      v9 = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 248) = sub_23E0AB274(v7, v9, &v18);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DF71000, v3, v4, "Setting natural light on (%{BOOL,public}d on profiles (%{public}s)", (uint8_t *)v5, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24264C628](v6, -1, -1);
      MEMORY[0x24264C628](v5, -1, -1);
    }

    swift_beginAccess();
    v10 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F8);
    *(_QWORD *)(v0 + 128) = sub_23DF89B88(&qword_256D1D800, &qword_256D1D7F8, MEMORY[0x24BEE1728]);
    *(_QWORD *)(v0 + 96) = v10;
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 552) = v11;
    *v11 = v0;
    v11[1] = sub_23DF80D50;
    return sub_23E13570C();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 504);
    v15 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 496);
    v16 = *(_QWORD *)(v0 + 480);
    swift_release();
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v17(v14, v16);
    v17(v13, v16);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23DF80D50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 560) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_23DF89C7C(*(_QWORD *)(v2 + 320), &qword_256D1D598);
    __swift_destroy_boxed_opaque_existential_0Tm(v2 + 96);
  }
  return swift_task_switch();
}

uint64_t sub_23DF80DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF80EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v3, v4);
  v5(v1, v4);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF80FFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23DF89AC0((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E0F134C(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_23E1356DC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_23DF89C7C(a1, &qword_256D1D790);
    sub_23DF86330(a2, v9);
    v7 = sub_23E1356DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_23DF89C7C((uint64_t)v9, &qword_256D1D790);
  }
}

void sub_23DF810E0(uint64_t a1, NSObject *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  void (*v57)(char *, os_log_t, uint64_t);
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  os_log_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  void (*v72)(char *, char *, unint64_t);
  void (*v73)(_QWORD, _QWORD, _QWORD);
  uint64_t v74;
  unint64_t v75;
  void (*v76)(char *, os_log_t, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  unint64_t v88;
  os_log_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint8_t *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  double v106;
  char v107;
  double v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  double v122;
  char v123;
  double *v124;
  void (*v125)(char *, unint64_t, uint64_t);
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  NSObject *v130;
  os_log_type_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  void (*v138)(char *, unint64_t);
  uint64_t v139;
  unint64_t v140;
  os_log_t v141;
  void (*v142)(char *, unint64_t);
  void (*v143)(char *, uint64_t);
  int v144;
  char *v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  double v149;
  char v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint8_t *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint8_t *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  unint64_t v180;
  char *v181;
  char *v182;
  _QWORD *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  unint64_t v189;
  uint64_t v190;
  os_log_t v191;
  unint64_t v192;
  unsigned __int16 v193;
  unsigned __int8 v194;
  uint64_t v195;
  os_log_t v196;

  v171 = a6;
  v167 = a5;
  v179 = a1;
  v180 = a4;
  v191 = a2;
  v187 = sub_23E134C80();
  v189 = *(_QWORD *)(v187 - 8);
  v7 = MEMORY[0x24BDAC7A8](v187);
  v186 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v188 = (char *)&v162 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v181 = (char *)&v162 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v175 = (char *)&v162 - v13;
  v177 = sub_23E135A0C();
  v184 = *(_QWORD *)(v177 - 8);
  v14 = MEMORY[0x24BDAC7A8](v177);
  v178 = (char *)&v162 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v182 = (char *)&v162 - v16;
  v166 = sub_23E1356DC();
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v164 = (char *)&v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_23E135328();
  v173 = *(_QWORD *)(v174 - 8);
  v18 = MEMORY[0x24BDAC7A8](v174);
  v163 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v172 = (char *)&v162 - v20;
  v170 = sub_23E135580();
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v168 = (char *)&v162 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v22);
  v183 = (uint64_t *)((char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = sub_23E135124();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v162 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v162 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23E1352BC();
  v190 = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v176 = (char *)&v162 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v162 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v185 = (char *)&v162 - v40;
  v41 = sub_23E134DA0();
  if (*(_QWORD *)(v41 + 16))
  {
    v42 = a3;
    v43 = sub_23DF84CA8(a3);
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v30, *(_QWORD *)(v41 + 56) + *(_QWORD *)(v25 + 72) * v43, v24);
      v45 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v42 = a3;
  }
  v45 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v30, v45, 1, v24);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v30, 1, v24))
  {
    sub_23DF89C7C((uint64_t)v30, &qword_256D1D598);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v33, 1, 1, v34);
    v46 = v42;
    v48 = v188;
    v47 = v189;
LABEL_14:
    sub_23DF89C7C((uint64_t)v33, &qword_256D1D5A0);
    if (qword_256D1D270 != -1)
      swift_once();
    v56 = sub_23E135C10();
    __swift_project_value_buffer(v56, (uint64_t)qword_256D1EAC0);
    v57 = *(void (**)(char *, os_log_t, uint64_t))(v47 + 16);
    v58 = v187;
    v57(v48, v191, v187);
    v59 = v186;
    v57(v186, (os_log_t)v46, v58);
    v60 = sub_23E135BF8();
    v61 = sub_23E137350();
    v62 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      v63 = swift_slowAlloc();
      v191 = (os_log_t)swift_slowAlloc();
      v192 = (unint64_t)v191;
      *(_DWORD *)v63 = 136446466;
      sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      LODWORD(v190) = v62;
      v64 = sub_23E1375FC();
      v196 = (os_log_t)sub_23E0AB274(v64, v65, (uint64_t *)&v192);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      v66 = *(void (**)(char *, uint64_t))(v47 + 8);
      v66(v48, v58);
      *(_WORD *)(v63 + 12) = 2082;
      v67 = sub_23E1375FC();
      v196 = (os_log_t)sub_23E0AB274(v67, v68, (uint64_t *)&v192);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      v66(v59, v58);
      _os_log_impl(&dword_23DF71000, v60, (os_log_type_t)v190, "While setting light color could not find service for serviceID: %{public}s homeID: %{public}s", (uint8_t *)v63, 0x16u);
      v69 = v191;
      swift_arrayDestroy();
      MEMORY[0x24264C628](v69, -1, -1);
      MEMORY[0x24264C628](v63, -1, -1);
    }
    else
    {
      v70 = *(void (**)(char *, uint64_t))(v47 + 8);
      v70(v48, v58);
      v70(v59, v58);
    }

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
  sub_23DF89C7C((uint64_t)v30, &qword_256D1D598);
  v49 = sub_23E1350E8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if (*(_QWORD *)(v49 + 16))
  {
    v50 = sub_23DF84CA8((uint64_t)v191);
    v51 = v34;
    v52 = v190;
    if ((v53 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v190 + 16))(v33, *(_QWORD *)(v49 + 56) + *(_QWORD *)(v190 + 72) * v50, v34);
      v54 = 0;
    }
    else
    {
      v54 = 1;
    }
  }
  else
  {
    v54 = 1;
    v51 = v34;
    v52 = v190;
  }
  v47 = v189;
  v46 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v52 + 56))(v33, v54, 1, v51);
  swift_bridgeObjectRelease();
  v55 = (*(uint64_t (**)(char *, uint64_t, unint64_t))(v52 + 48))(v33, 1, v51);
  v48 = v188;
  if (v55 == 1)
    goto LABEL_14;
  v71 = v185;
  (*(void (**)(void))(v52 + 32))();
  v72 = *(void (**)(char *, char *, unint64_t))(v52 + 16);
  v72(v39, v71, v51);
  v73 = (void (*)(_QWORD, _QWORD, _QWORD))v183;
  sub_23E014044((uint64_t)v39, (uint64_t)v183);
  sub_23E0AB9B0((uint64_t)v73, (uint64_t)&v192);
  sub_23DF73E54((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (v192 == 2)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v74 = sub_23E135C10();
    __swift_project_value_buffer(v74, (uint64_t)qword_256D1EAC0);
    v75 = v47;
    v76 = *(void (**)(char *, os_log_t, uint64_t))(v47 + 16);
    v77 = v175;
    v78 = v187;
    v76(v175, v191, v187);
    v79 = v181;
    v76(v181, (os_log_t)v46, v78);
    v80 = sub_23E135BF8();
    v81 = sub_23E137350();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc();
      v191 = (os_log_t)swift_slowAlloc();
      v192 = (unint64_t)v191;
      *(_DWORD *)v82 = 136446466;
      v189 = v82 + 4;
      sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v83 = sub_23E1375FC();
      v196 = (os_log_t)sub_23E0AB274(v83, v84, (uint64_t *)&v192);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      v189 = v51;
      v85 = *(void (**)(char *, uint64_t))(v75 + 8);
      v85(v77, v78);
      *(_WORD *)(v82 + 12) = 2082;
      v86 = v181;
      v87 = sub_23E1375FC();
      v196 = (os_log_t)sub_23E0AB274(v87, v88, (uint64_t *)&v192);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      v85(v86, v78);
      _os_log_impl(&dword_23DF71000, v80, v81, "While setting light color could not get color config for serviceID: %{public}s homeID: %{public}s", (uint8_t *)v82, 0x16u);
      v89 = v191;
      swift_arrayDestroy();
      MEMORY[0x24264C628](v89, -1, -1);
      MEMORY[0x24264C628](v82, -1, -1);

      (*(void (**)(char *, unint64_t))(v190 + 8))(v185, v189);
    }
    else
    {

      v104 = *(void (**)(char *, uint64_t))(v75 + 8);
      v104(v79, v78);
      v104(v77, v78);
      (*(void (**)(char *, unint64_t))(v52 + 8))(v71, v51);
    }
    return;
  }
  v90 = v193 | (v194 << 16);
  v91 = v192 & 0x100;
  v92 = v192 & 0x10000;
  v189 = v192;
  if ((v192 & 1) != 0)
  {
    v93 = v168;
    v94 = v192 & 0x100;
    sub_23E1351D8();
    v95 = sub_23E135568();
    (*(void (**)(char *, uint64_t))(v169 + 8))(v93, v170);
    sub_23E07B640(v95);
    v91 = v94;
  }
  v96 = v182;
  v97 = v178;
  v98 = v180;
  LODWORD(v188) = v90;
  v186 = (char *)v91;
  v187 = v92;
  if (v92)
  {
    if (v91)
    {
      v116 = v178;
      v117 = v173;
      v118 = v172;
      v119 = v174;
      v183 = *(_QWORD **)(v173 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v183)(v172, v179, v174);
      v120 = (*(uint64_t (**)(char *, uint64_t))(v117 + 88))(v118, v119);
      if (v120 == *MEMORY[0x24BE4DCB0])
      {
        v121 = LightbulbColor.toHSV.getter();
        v97 = v116;
        v98 = v180;
        if ((v123 & 1) == 0)
          sub_23DF82F50(*(double *)&v121, v122);
        (*(void (**)(char *, uint64_t))(v173 + 8))(v172, v174);
        goto LABEL_49;
      }
      v97 = v116;
      if (v120 == *MEMORY[0x24BE4DCA8])
      {
        v124 = (double *)v172;
        (*(void (**)(char *, uint64_t))(v173 + 96))(v172, v174);
        v108 = *v124;
        v109 = v124[1];
      }
      else
      {
        v144 = (int)v188;
        if (v120 != *MEMORY[0x24BE4DC88])
        {
          v98 = v180;
          if (v120 != *MEMORY[0x24BE4DC90])
          {
            sub_23E137608();
            __break(1u);
            return;
          }
          (*(void (**)(char *, uint64_t))(v173 + 96))(v172, v174);
          swift_release();
          goto LABEL_49;
        }
        v145 = v172;
        (*(void (**)(char *, uint64_t))(v173 + 96))(v172, v174);
        v146 = *(unsigned __int16 *)v145;
        if ((v189 & 0x1000000000000) != 0
          || (v144 & 0x10000) != 0
          || v146 >= WORD2(v189) && v146 <= (unsigned __int16)v144)
        {
          v195 = MEMORY[0x24BEE4478];
          LOWORD(v192) = v146;
          v111 = v165;
          v113 = v164;
          v114 = v166;
          (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v164, *MEMORY[0x24BE4E290], v166);
          v112 = v180;
          goto LABEL_40;
        }
        v147 = v179;
        *(double *)&v148 = COERCE_DOUBLE(LightbulbColor.toHSV.getter());
        if ((v150 & 1) != 0)
        {
          if (qword_256D1D270 != -1)
            swift_once();
          v151 = sub_23E135C10();
          __swift_project_value_buffer(v151, (uint64_t)qword_256D1EAC0);
          v152 = v163;
          v153 = v174;
          ((void (*)(char *, uint64_t, uint64_t))v183)(v163, v147, v174);
          v154 = sub_23E135BF8();
          v155 = sub_23E137350();
          if (os_log_type_enabled(v154, v155))
          {
            v191 = v154;
            v156 = (uint8_t *)swift_slowAlloc();
            v157 = swift_slowAlloc();
            v192 = v157;
            *(_DWORD *)v156 = 136446210;
            v158 = LightbulbColor.description.getter();
            v196 = (os_log_t)sub_23E0AB274(v158, v159, (uint64_t *)&v192);
            v96 = v182;
            sub_23E1374B8();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v173 + 8))(v152, v153);
            v154 = v191;
            _os_log_impl(&dword_23DF71000, v191, v155, "Couldn't convert color temperature to Hue/Saturation %{public}s", v156, 0xCu);
            swift_arrayDestroy();
            v160 = v157;
            v97 = v178;
            MEMORY[0x24264C628](v160, -1, -1);
            v161 = v156;
            v71 = v185;
            MEMORY[0x24264C628](v161, -1, -1);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v173 + 8))(v152, v153);
          }

          v98 = v180;
          goto LABEL_49;
        }
        v108 = *(double *)&v148;
        v109 = v149;
      }
      v98 = v180;
    }
    else
    {
      *(double *)&v105 = COERCE_DOUBLE(LightbulbColor.toHSV.getter());
      if ((v107 & 1) != 0)
        goto LABEL_49;
      v108 = *(double *)&v105;
      v109 = v106;
    }
    sub_23DF82F50(v108, v109);
    goto LABEL_49;
  }
  if (!v91)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v99 = sub_23E135C10();
    __swift_project_value_buffer(v99, (uint64_t)qword_256D1EAC0);
    v100 = sub_23E135BF8();
    v101 = sub_23E137350();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v102 = 0;
      _os_log_impl(&dword_23DF71000, v100, v101, "Accessory does not support any Color attributes!", v102, 2u);
      v103 = v102;
      v71 = v185;
      MEMORY[0x24264C628](v103, -1, -1);
    }

    goto LABEL_49;
  }
  v110 = LightbulbColor.toTemperature.getter();
  if ((v110 & 0x10000) == 0)
  {
    v195 = MEMORY[0x24BEE4478];
    LOWORD(v192) = v110;
    v111 = v165;
    v112 = v98;
    v113 = v164;
    v114 = v166;
    (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v164, *MEMORY[0x24BE4E290], v166);
LABEL_40:
    sub_23E1359E8();
    v115 = v113;
    v98 = v112;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v115, v114);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v192);
  }
LABEL_49:
  v125 = *(void (**)(char *, unint64_t, uint64_t))(v184 + 16);
  v126 = v98;
  v127 = v177;
  v125(v96, v126, v177);
  if (qword_256D1D270 != -1)
    swift_once();
  v128 = sub_23E135C10();
  __swift_project_value_buffer(v128, (uint64_t)qword_256D1EAC0);
  v125(v97, (unint64_t)v96, v127);
  v129 = v176;
  v72(v176, v71, v51);
  v130 = sub_23E135BF8();
  v131 = sub_23E137368();
  v132 = v131;
  if (os_log_type_enabled(v130, v131))
  {
    v180 = v189 & 1;
    v181 = (char *)HIDWORD(v189);
    v133 = swift_slowAlloc();
    v191 = (os_log_t)swift_slowAlloc();
    v196 = v191;
    *(_DWORD *)v133 = 136446722;
    sub_23DF73F28(&qword_256D1D7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E800], MEMORY[0x24BE4E808]);
    LODWORD(v183) = v132;
    v134 = sub_23E1375FC();
    v192 = sub_23E0AB274(v134, v135, (uint64_t *)&v196);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    v184 = *(_QWORD *)(v184 + 8);
    ((void (*)(char *, uint64_t))v184)(v97, v127);
    *(_WORD *)(v133 + 12) = 2082;
    sub_23DF73F28(&qword_256D1D818, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DC28], MEMORY[0x24BE4DC48]);
    v136 = sub_23E1375FC();
    v192 = sub_23E0AB274(v136, v137, (uint64_t *)&v196);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    v138 = *(void (**)(char *, unint64_t))(v190 + 8);
    v138(v129, v51);
    *(_WORD *)(v133 + 22) = 2082;
    LOBYTE(v192) = v180;
    BYTE1(v192) = BYTE1(v186);
    BYTE2(v192) = BYTE2(v187);
    WORD2(v192) = (_WORD)v181;
    BYTE6(v192) = BYTE6(v189) & 1;
    v193 = (unsigned __int16)v188;
    v194 = BYTE2(v188) & 1;
    v139 = sub_23E137194();
    v192 = sub_23E0AB274(v139, v140, (uint64_t *)&v196);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DF71000, v130, (os_log_type_t)v183, "Setting Light characteristics (%{public}s) for service (%{public}s) colorConfig: (%{public}s)", (uint8_t *)v133, 0x20u);
    v141 = v191;
    swift_arrayDestroy();
    MEMORY[0x24264C628](v141, -1, -1);
    MEMORY[0x24264C628](v133, -1, -1);

    ((void (*)(char *, uint64_t))v184)(v182, v127);
    v138(v185, v51);
  }
  else
  {

    v142 = *(void (**)(char *, unint64_t))(v190 + 8);
    v142(v129, v51);
    v143 = *(void (**)(char *, uint64_t))(v184 + 8);
    v143(v97, v127);
    v143(v96, v127);
    v142(v71, v51);
  }
}

uint64_t sub_23DF823FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];

  v6 = sub_23E135124();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E134DA0();
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_23DF84CA8(a2), (v15 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v14, v6);
    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, v16, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D598);
    v17 = sub_23E1352BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D598);
    v19 = sub_23E1350E8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_23DF84CA8(a1), (v21 & 1) != 0))
    {
      v22 = v20;
      v23 = *(_QWORD *)(v19 + 56);
      v24 = sub_23E1352BC();
      v25 = *(_QWORD *)(v24 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16))(a3, v23 + *(_QWORD *)(v25 + 72) * v22, v24);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(a3, 0, 1, v24);
    }
    else
    {
      v26 = sub_23E1352BC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a3, 1, 1, v26);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23DF82638(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(unint64_t, char *, uint64_t);
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  void (*v49)(char *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a2;
  v49 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E1352BC();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)&v40 - v11;
  v12 = sub_23E134C80();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a3 + 56);
  v46 = a3 + 56;
  v20 = 1 << *(_BYTE *)(a3 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v47 = (unint64_t)(v20 + 63) >> 6;
  v52 = a3;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v45 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v22)
    {
      v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v26 = v25 | (v24 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v24++, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v24 >= v47)
      goto LABEL_34;
    v28 = *(_QWORD *)(v46 + 8 * v24);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v18, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v13 + 72) * v26, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
    {
      swift_release();
      return v45;
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    v49(v15);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v39 = v45;
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v7, 1, v51) == 1)
    {
      result = sub_23DF89C7C((uint64_t)v7, &qword_256D1D5A0);
    }
    else
    {
      v30 = v51;
      v42 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      v42(v43, v7, v51);
      v31 = v30;
      v32 = (uint64_t (*)(unint64_t, char *, uint64_t))v42;
      v42(v44, v43, v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v45 = sub_23E007B58(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
      v34 = *(_QWORD *)(v45 + 16);
      v33 = *(_QWORD *)(v45 + 24);
      v35 = v34 + 1;
      if (v34 >= v33 >> 1)
      {
        v40 = *(_QWORD *)(v45 + 16);
        v41 = v34 + 1;
        v38 = sub_23E007B58(v33 > 1, v34 + 1, 1, v45);
        v34 = v40;
        v35 = v41;
        v45 = v38;
      }
      v36 = v44;
      v37 = v45;
      *(_QWORD *)(v45 + 16) = v35;
      result = v32(v37+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v34, v36, v51);
    }
  }
  v29 = v24 + 1;
  if (v24 + 1 >= v47)
    goto LABEL_34;
  v28 = *(_QWORD *)(v46 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v29 = v24 + 2;
  if (v24 + 2 >= v47)
    goto LABEL_34;
  v28 = *(_QWORD *)(v46 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v29 = v24 + 3;
  if (v24 + 3 >= v47)
    goto LABEL_34;
  v28 = *(_QWORD *)(v46 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v29 = v24 + 4;
  if (v24 + 4 >= v47)
  {
LABEL_34:
    v39 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
LABEL_35:
    swift_release();
    return v39;
  }
  v28 = *(_QWORD *)(v46 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v24 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v24 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v24 >= v47)
      goto LABEL_34;
    v28 = *(_QWORD *)(v46 + 8 * v24);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_38:
  __break(1u);
  return result;
}

BOOL sub_23DF82AB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _BOOL8 v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  sub_23DF89C1C(a1, (uint64_t)v4, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D1D7F0);
    return 0;
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v13(v11, v4, v5);
    v13(v9, v11, v5);
    v12 = (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) == *MEMORY[0x24BE4DC90];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v12;
}

uint64_t sub_23DF82C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t result;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_23E13534C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v14 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (unsigned __int8 *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Device.Control(0);
  sub_23DF73E10(a1 + *(int *)(v17 + 20), (uint64_t)v16, type metadata accessor for Device.Control.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE4AE0] + 8;
        v25 = type metadata accessor for Device.Control.Kind;
        v26 = (uint64_t)v16;
      }
      else
      {
        v19 = *v16;
        if (v19 == 2)
        {
          *(_OWORD *)a2 = 0u;
          *(_OWORD *)(a2 + 16) = 0u;
        }
        else
        {
          *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE1328];
          *(_BYTE *)a2 = v19 & 1;
        }
        v26 = (uint64_t)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48)];
        v25 = type metadata accessor for Device.Control.BinaryViewConfig;
      }
      return sub_23DF73E54(v26, v25);
    }
    v23 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48)];
    sub_23DF89340((uint64_t)v16, (uint64_t)v13, &qword_256D1D5D8);
    sub_23DF89C1C((uint64_t)v13, (uint64_t)v11, &qword_256D1D5D8);
    v24 = type metadata accessor for Device.Control.IncrementalState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v11, 1, v24) == 1)
    {
      sub_23DF89C7C((uint64_t)v11, &qword_256D1D5D8);
      sub_23DF89C7C((uint64_t)v13, &qword_256D1D5D8);
    }
    else
    {
      (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
      sub_23DF73E54((uint64_t)v11, type metadata accessor for Device.Control.IncrementalState);
      if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x24BE4DD08])
      {
        (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
        v27 = *v7;
        *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE13C8];
        *(_QWORD *)a2 = v27;
        sub_23DF89C7C((uint64_t)v13, &qword_256D1D5D8);
LABEL_18:
        v25 = type metadata accessor for Device.Control.IncrementalConfig;
        v26 = (uint64_t)v23;
        return sub_23DF73E54(v26, v25);
      }
      sub_23DF89C7C((uint64_t)v13, &qword_256D1D5D8);
      (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    }
    *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE4AE0] + 8;
    goto LABEL_18;
  }
  v20 = *(_QWORD *)v16;
  v21 = v16[8];
  result = swift_bridgeObjectRelease();
  if (v21 == 1)
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE1768];
    *(_QWORD *)a2 = v20;
  }
  return result;
}

uint64_t sub_23DF82F50(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, _QWORD, uint64_t);
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14[3];
  uint64_t v15;

  v4 = sub_23E1356DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BEE13C8];
  v15 = MEMORY[0x24BEE13C8];
  *(double *)v14 = a1 * 360.0;
  v9 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v9(v7, *MEMORY[0x24BE4E340], v4);
  sub_23E1359E8();
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  v15 = v8;
  *(double *)v14 = a2 * 100.0;
  v9(v7, *MEMORY[0x24BE4E240], v4);
  sub_23E1359E8();
  v10(v7, v4);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  v11 = sub_23E1356D0();
  v15 = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(boxed_opaque_existential_0, *MEMORY[0x24BE4E350], v11);
  v9(v7, *MEMORY[0x24BE4E290], v4);
  sub_23E1359E8();
  v10(v7, v4);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
}

void sub_23DF83104(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  DataModel.device(for:)(a1, a2);
}

void sub_23DF83118(uint64_t a1)
{
  DataModel.controls(for:)(a1);
}

uint64_t sub_23DF8312C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23DF83188;
  return DataModel.set(control:for:)(a1, a2);
}

uint64_t sub_23DF83188()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23DF831D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_23E134DC4();
  result = sub_23E135C40();
  *a1 = result;
  return result;
}

uint64_t Device.init(actionService:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD *);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;

  v4 = sub_23E134E9C();
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1350D0();
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v97 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v95 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v77 - v11;
  v12 = sub_23E135910();
  v88 = *(_QWORD *)(v12 - 8);
  v89 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v86 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = (_QWORD *)sub_23E134E54();
  v14 = *(v96 - 1);
  v15 = MEMORY[0x24BDAC7A8](v96);
  v85 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v77 - v17;
  v83 = sub_23E134E60();
  v19 = *(_QWORD *)(v83 - 8);
  v20 = MEMORY[0x24BDAC7A8](v83);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v77 - v23;
  v84 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v84);
  v26 = (uint64_t *)((char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_23E134C80();
  v93 = *(_QWORD *)(v27 - 8);
  v94 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v92 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1350A0();
  v29 = sub_23E1350B8();
  v90 = v30;
  v91 = v29;
  sub_23E135004();
  sub_23E134E24();
  v31 = *(void (**)(char *, uint64_t))(v19 + 8);
  v32 = v24;
  v33 = v83;
  v31(v32, v83);
  v34 = sub_23E134E48();
  v81 = v35;
  v82 = v34;
  v36 = *(void (**)(char *, _QWORD *))(v14 + 8);
  v37 = v18;
  v38 = (uint64_t)v96;
  v36(v37, v96);
  sub_23E135004();
  v39 = v85;
  sub_23E134E24();
  v31(v22, v33);
  v40 = v86;
  sub_23E134E3C();
  v36(v39, (_QWORD *)v38);
  v41 = a1;
  v42 = v81;
  *v26 = v82;
  v26[1] = v42;
  v43 = *(int *)(v84 + 20);
  v96 = v26;
  v44 = (uint64_t)v87;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))((char *)v26 + v43, v40, v89);
  sub_23E135094();
  v45 = sub_23E1359D0();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v47(v44, 1, v45) == 1)
  {
    sub_23DF89C7C(v44, &qword_256D1D5C0);
    v88 = 0;
    v89 = 0;
  }
  else
  {
    v48 = sub_23E1359B8();
    v88 = v49;
    v89 = v48;
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  }
  v50 = sub_23E13501C();
  v51 = (uint64_t)v95;
  sub_23E135094();
  if (v47(v51, 1, v45) == 1)
  {
    sub_23DF89C7C(v51, &qword_256D1D5C0);
    v53 = v97;
    v52 = v98;
    v54 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, a1, v99);
LABEL_7:
    v56 = v78;
    sub_23E134FF8();
    v55 = sub_23E134E90();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v56, v80);
    goto LABEL_8;
  }
  v55 = sub_23E1359C4();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v51, v45);
  v53 = v97;
  v52 = v98;
  v54 = v99;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, v41, v99);
  if (!v55)
    goto LABEL_7;
LABEL_8:
  v57 = *(void (**)(char *, uint64_t))(v52 + 8);
  v57(v53, v54);
  v58 = v50 & 1;
  v59 = v55;
  v98 = sub_23E1350AC();
  v61 = v60;
  v62 = sub_23E1350AC();
  v64 = v63;
  LODWORD(v99) = sub_23E135034();
  v57(v41, v54);
  v65 = (int *)type metadata accessor for Device();
  v66 = (uint64_t *)(a2 + v65[7]);
  v67 = (_QWORD *)(a2 + v65[8]);
  v68 = v65[12];
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(a2, v92, v94);
  v69 = (uint64_t *)(a2 + v65[5]);
  v70 = v90;
  *v69 = v91;
  v69[1] = v70;
  result = sub_23DF89384((uint64_t)v96, a2 + v65[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v72 = v88;
  *v66 = v89;
  v66[1] = v72;
  *(_BYTE *)(a2 + v65[10]) = 0;
  *(_BYTE *)(a2 + v65[11]) = 0;
  *(_BYTE *)(a2 + v68) = 2;
  *(_BYTE *)(a2 + v65[13]) = v58;
  *(_QWORD *)(a2 + v65[14]) = v59;
  *(_BYTE *)(a2 + v65[15]) = 1;
  v73 = (uint64_t *)(a2 + v65[16]);
  *v73 = v98;
  v73[1] = v61;
  v74 = (uint64_t *)(a2 + v65[17]);
  *v74 = v62;
  v74[1] = v64;
  v75 = (_QWORD *)(a2 + v65[18]);
  *v75 = 0;
  v75[1] = 0;
  *v67 = 0;
  v67[1] = 0;
  *(_QWORD *)(a2 + v65[9]) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(a2 + v65[19]) = 0;
  *(_BYTE *)(a2 + v65[20]) = v99 & 1;
  v76 = (_QWORD *)(a2 + v65[21]);
  *v76 = 0;
  v76[1] = 0;
  return result;
}

uint64_t Device.init(actionServiceGroup:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  int *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;

  v4 = sub_23E135910();
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v81 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E134E54();
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v64 - v9;
  v74 = sub_23E134E60();
  v70 = *(_QWORD *)(v74 - 8);
  v10 = MEMORY[0x24BDAC7A8](v74);
  v71 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v64 - v12;
  v73 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v73);
  v15 = (uint64_t *)((char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = sub_23E134C80();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v86 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E134E9C();
  v77 = *(_QWORD *)(v17 - 8);
  v78 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v85 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D660);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23E1350D0();
  v23 = MEMORY[0x24BE4DAA8];
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23E135694();
  sub_23DF7AC7C(v27, (uint64_t (*)(_QWORD))v23, (uint64_t)v21);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22) == 1)
  {
    v28 = sub_23E1356C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
    sub_23DF89C7C((uint64_t)v21, &qword_256D1D660);
    v29 = type metadata accessor for Device();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a2, 1, 1, v29);
  }
  else
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v66 = v26;
    v67 = v22;
    v31(v26, v21, v22);
    sub_23E134FF8();
    sub_23E1356A0();
    v32 = sub_23E1356B8();
    v68 = v33;
    v69 = v32;
    sub_23E13567C();
    v34 = v72;
    sub_23E134E24();
    v35 = *(void (**)(char *, uint64_t))(v70 + 8);
    v36 = v74;
    v35(v13, v74);
    v70 = sub_23E134E48();
    v65 = v37;
    v64 = v15;
    v38 = *(void (**)(char *, uint64_t))(v75 + 8);
    v39 = v34;
    v40 = v76;
    v38(v39, v76);
    v41 = v71;
    sub_23E13567C();
    v42 = v79;
    sub_23E134E24();
    v35(v41, v36);
    v43 = v81;
    sub_23E134E3C();
    v38(v42, v40);
    v44 = (uint64_t)v64;
    v45 = v65;
    *v64 = v70;
    *(_QWORD *)(v44 + 8) = v45;
    (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v44 + *(int *)(v73 + 20), v43, v84);
    LOBYTE(v84) = sub_23E135688() & 1;
    LODWORD(v84) = v84;
    v46 = v85;
    v83 = sub_23E134E90();
    v81 = (char *)sub_23E1356AC();
    v48 = v47;
    v49 = sub_23E1356AC();
    v51 = v50;
    v52 = sub_23E134E84();
    v53 = sub_23E1356C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(a1, v53);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v78);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v66, v67);
    v54 = (int *)type metadata accessor for Device();
    v55 = (_QWORD *)(a2 + v54[7]);
    v56 = (_QWORD *)(a2 + v54[8]);
    v57 = v54[12];
    (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(a2, v86, v82);
    v58 = (uint64_t *)(a2 + v54[5]);
    v59 = v68;
    *v58 = v69;
    v58[1] = v59;
    sub_23DF89384(v44, a2 + v54[6], (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    *v55 = 0;
    v55[1] = 0;
    *(_BYTE *)(a2 + v54[10]) = 0;
    *(_BYTE *)(a2 + v54[11]) = 0;
    *(_BYTE *)(a2 + v57) = 2;
    *(_BYTE *)(a2 + v54[13]) = v84;
    *(_QWORD *)(a2 + v54[14]) = v83;
    *(_BYTE *)(a2 + v54[15]) = 1;
    v60 = (_QWORD *)(a2 + v54[16]);
    *v60 = v81;
    v60[1] = v48;
    v61 = (uint64_t *)(a2 + v54[17]);
    *v61 = v49;
    v61[1] = v51;
    v62 = (_QWORD *)(a2 + v54[18]);
    *v62 = 0;
    v62[1] = 0;
    *v56 = 0;
    v56[1] = 0;
    *(_QWORD *)(a2 + v54[9]) = MEMORY[0x24BEE4B08];
    *(_BYTE *)(a2 + v54[19]) = 0;
    *(_BYTE *)(a2 + v54[20]) = v52 & 1;
    v63 = (_QWORD *)(a2 + v54[21]);
    *v63 = 0;
    v63[1] = 0;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v54 - 1) + 56))(a2, 0, 1, v54);
  }
}

double sub_23DF83D98(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v5 = a2(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - v7;
  v9 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  a3(v8);
  v12 = sub_23E02FC4C((uint64_t)v11, 0);
  sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
  v13 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = 0;
  *(_QWORD *)(v13 + 56) = 0;
  *(_QWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 48) = v12;
  return result;
}

uint64_t sub_23DF83EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  _QWORD v10[2];

  v0 = sub_23E134C80();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v10 - v5;
  sub_23E135778();
  sub_23E1354C0();
  v7 = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_23DF83F90(uint64_t a1)
{
  return sub_23DF84834(a1, (uint64_t (*)(void))sub_23E0076E4, type metadata accessor for Device.ControlGroup);
}

uint64_t sub_23DF83FA4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_23E007A38(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23DF84100(uint64_t a1)
{
  return sub_23DF84834(a1, (uint64_t (*)(void))sub_23E007818, type metadata accessor for Device.Control);
}

uint64_t sub_23DF84114(uint64_t a1)
{
  return sub_23DF84834(a1, (uint64_t (*)(void))sub_23E007B6C, type metadata accessor for AccessoryControlInfo.Writer);
}

uint64_t sub_23DF84128(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, char *, uint64_t);
  void (*v47)(_QWORD *);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t);
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[4];

  v59 = a2;
  v9 = sub_23E135328();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v55 = (uint64_t)&v49 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v49 - v17;
  v56 = a4;
  v19 = a4 >> 1;
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v20)
  {
    __break(1u);
    goto LABEL_26;
  }
  v60 = a1;
  a1 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v5 = v22 + v21;
  if (__OFADD__(v22, v21))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v58 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(a1 + 24) >> 1, v24 < v5))
  {
    if (v22 <= v5)
      v25 = v22 + v21;
    else
      v25 = v22;
    a1 = sub_23E007B94(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *v4 = a1;
    v24 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v26 = *(_QWORD *)(a1 + 16);
  v27 = v24 - v26;
  if (v19 == a3)
  {
    if (v21 <= 0)
    {
      v21 = 0;
      v5 = a3;
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v27 < v21)
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v21 & 0x8000000000000000) == 0)
  {
    v28 = *(_QWORD *)(v10 + 72);
    v29 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v28 * v26;
    v30 = v59 + v28 * a3;
    if (v30 >= v29 + v28 * v21 || v29 >= v30 + v28 * v21)
    {
      swift_arrayInitWithCopy();
      if (v21)
      {
        v32 = *(_QWORD *)(a1 + 16);
        v20 = __OFADD__(v32, v21);
        v33 = v32 + v21;
        if (v20)
        {
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        *(_QWORD *)(a1 + 16) = v33;
      }
      v5 = v19;
LABEL_23:
      if (v21 != v27)
        return swift_unknownObjectRelease();
LABEL_28:
      v21 = *(_QWORD *)(a1 + 16);
      v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v50(v18, 1, 1, v9);
      a1 = v55;
      sub_23DF89C1C((uint64_t)v18, v55, &qword_256D1D7F0);
      v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v54(a1, 1, v9) == 1)
      {
LABEL_29:
        sub_23DF89C7C((uint64_t)v18, &qword_256D1D7F0);
        swift_unknownObjectRelease();
        return sub_23DF89C7C(a1, &qword_256D1D7F0);
      }
      do
      {
LABEL_34:
        sub_23DF89C7C(a1, &qword_256D1D7F0);
        v36 = *v4;
        v37 = *(_QWORD *)(*v4 + 24);
        if ((uint64_t)(v37 >> 1) < v21 + 1)
        {
          v38 = v5;
          v48 = sub_23E007B94(v37 > 1, v21 + 1, 1, v36);
          *v4 = v48;
          v53 = v48;
          v49 = *(_QWORD *)(v48 + 24) >> 1;
        }
        else
        {
          v49 = v37 >> 1;
          v53 = v36;
          v38 = v5;
        }
        v39 = *(unsigned __int8 *)(v10 + 80);
        v40 = v58;
        sub_23DF89C1C((uint64_t)v18, v58, &qword_256D1D7F0);
        if (v54(v40, 1, v9) == 1)
        {
          v41 = v58;
LABEL_38:
          sub_23DF89C7C(v41, &qword_256D1D7F0);
          v35 = v21;
          v5 = v38;
        }
        else
        {
          v51 = v53 + ((v39 + 32) & ~v39);
          v42 = v49;
          if (v21 > v49)
            v42 = v21;
          v52 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
          v53 = v42;
          v43 = v57;
          v41 = v58;
          while (1)
          {
            v45 = v41;
            v46 = v52;
            v52((uint64_t)v43, (char *)v45, v9);
            if (v53 == v21)
              break;
            sub_23DF89C7C((uint64_t)v18, &qword_256D1D7F0);
            v46(v51 + *(_QWORD *)(v10 + 72) * v21, v43, v9);
            if (v38 == v19)
            {
              v44 = 1;
              v38 = v19;
            }
            else
            {
              v47 = sub_23DF866CC(v61, v38, v60, v59, a3, v56);
              (*(void (**)(char *))(v10 + 16))(v18);
              ((void (*)(uint64_t *, _QWORD))v47)(v61, 0);
              v20 = __OFADD__(v38++, 1);
              if (v20)
                goto LABEL_50;
              v44 = 0;
              v43 = v57;
            }
            v50(v18, v44, 1, v9);
            v41 = v58;
            sub_23DF89C1C((uint64_t)v18, v58, &qword_256D1D7F0);
            ++v21;
            if (v54(v41, 1, v9) == 1)
              goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v9);
          v35 = v53;
          v21 = v53;
          v5 = v38;
        }
        *(_QWORD *)(*v4 + 16) = v35;
        a1 = v55;
        sub_23DF89C1C((uint64_t)v18, v55, &qword_256D1D7F0);
      }
      while (v54(a1, 1, v9) != 1);
      goto LABEL_29;
    }
  }
LABEL_51:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23DF846BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23E007CE4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23DF8480C(uint64_t a1)
{
  return sub_23DF84834(a1, (uint64_t (*)(void))sub_23E007B80, type metadata accessor for AccessoryControlInfo);
}

uint64_t sub_23DF84820(uint64_t a1)
{
  return sub_23DF84834(a1, (uint64_t (*)(void))sub_23E008028, type metadata accessor for AccessoryControlGroup);
}

uint64_t sub_23DF84834(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23DF849AC(uint64_t a1)
{
  return sub_23DF849D4(a1, (uint64_t (*)(void))sub_23E0081B8, _s21ColorSwatchPickerViewV9CellValueOMa);
}

uint64_t sub_23DF849C0(uint64_t a1)
{
  return sub_23DF849D4(a1, (uint64_t (*)(void))sub_23E0081CC, _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa);
}

uint64_t sub_23DF849D4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23DF84B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Device.ControlGroup.controls.getter();
  *a1 = result;
  return result;
}

unint64_t sub_23DF84B78(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_23E134E78();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540];
  sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
  v3 = sub_23E137110();
  return sub_23DF84EA0(a1, v3, v2, &qword_256D1D778, MEMORY[0x24BE4D560]);
}

unint64_t sub_23DF84C10(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_23E1356DC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370];
  sub_23DF73F28(&qword_256D1D760, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E380]);
  v3 = sub_23E137110();
  return sub_23DF84EA0(a1, v3, v2, &qword_256D1D768, MEMORY[0x24BE4E388]);
}

unint64_t sub_23DF84CA8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_23E134C80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v3 = sub_23E137110();
  return sub_23DF84EA0(a1, v3, v2, &qword_256D1D848, MEMORY[0x24BDCEA98]);
}

unint64_t sub_23DF84D40(unsigned __int16 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x24264BF50](*(_QWORD *)(v1 + 40), a1, 2);
  return sub_23DF84FD0(a1, v3);
}

unint64_t sub_23DF84D74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E13768C();
  return sub_23DF85070(a1, v2);
}

unint64_t sub_23DF84DA4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_23E134E9C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888];
  sub_23DF73F28(&qword_256D1D780, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8A8]);
  v3 = sub_23E137110();
  return sub_23DF84EA0(a1, v3, v2, &qword_256D1D788, MEMORY[0x24BE4D8B0]);
}

unint64_t sub_23DF84E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23E137698();
  sub_23E1371C4();
  v4 = sub_23E1376D4();
  return sub_23DF8510C(a1, a2, v4);
}

unint64_t sub_23DF84EA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_23DF73F28(v21, v20, v22);
      v17 = sub_23E137158();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_23DF84FD0(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23DF85070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23DF8510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23E137614() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23E137614() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23DF851EC(uint64_t a1)
{
  return sub_23DF85210(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DC28], &qword_256D1D840, MEMORY[0x24BE4DC38], (void (*)(char *, char *))sub_23E12CF88);
}

uint64_t sub_23DF85210(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  sub_23DF73F28(a3, a2, v32);
  result = sub_23E137320();
  v20 = 0;
  v21 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v32 = (unint64_t)(v22 + 63) >> 6;
  v33 = result;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v26 = v25 | (v20 << 6);
      goto LABEL_5;
    }
    v27 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v32)
      goto LABEL_24;
    v28 = *(_QWORD *)(v31 + 8 * v27);
    ++v20;
    if (!v28)
    {
      v20 = v27 + 1;
      if (v27 + 1 >= v32)
        goto LABEL_24;
      v28 = *(_QWORD *)(v31 + 8 * v20);
      if (!v28)
      {
        v20 = v27 + 2;
        if (v27 + 2 >= v32)
          goto LABEL_24;
        v28 = *(_QWORD *)(v31 + 8 * v20);
        if (!v28)
        {
          v20 = v27 + 3;
          if (v27 + 3 >= v32)
            goto LABEL_24;
          v28 = *(_QWORD *)(v31 + 8 * v20);
          if (!v28)
          {
            v20 = v27 + 4;
            if (v27 + 4 >= v32)
              goto LABEL_24;
            v28 = *(_QWORD *)(v31 + 8 * v20);
            if (!v28)
            {
              v20 = v27 + 5;
              if (v27 + 5 >= v32)
              {
LABEL_24:
                swift_release();
                return v33;
              }
              v28 = *(_QWORD *)(v31 + 8 * v20);
              v29 = v27 + 5;
              if (!v28)
                break;
            }
          }
        }
      }
    }
LABEL_23:
    v24 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v20 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v18, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v10 + 72) * v26, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v18, v9);
    a5(v16, v13);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  while (1)
  {
    v20 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v20 >= v32)
      goto LABEL_24;
    v28 = *(_QWORD *)(v31 + 8 * v20);
    ++v29;
    if (v28)
      goto LABEL_23;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23DF854A4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23E1357E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23DF73F28(&qword_256D1D828, v11, MEMORY[0x24BE4E480]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23E137110();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23DF73F28(&qword_256D1D830, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E470], MEMORY[0x24BE4E488]);
      v21 = sub_23E137158();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23DF85700((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23DF85700(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23E1357E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 <= v10)
  {
    if ((a3 & 1) != 0)
      sub_23DF85E70();
    else
      sub_23DF85B30();
    v12 = *v3;
    sub_23DF73F28(&qword_256D1D828, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E470], MEMORY[0x24BE4E480]);
    v13 = sub_23E137110();
    v14 = -1 << *(_BYTE *)(v12 + 32);
    a2 = v13 & ~v14;
    if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v15 = ~v14;
      v16 = *(_QWORD *)(v7 + 72);
      v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      do
      {
        v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
        sub_23DF73F28(&qword_256D1D830, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E470], MEMORY[0x24BE4E488]);
        v18 = sub_23E137158();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if ((v18 & 1) != 0)
          goto LABEL_14;
        a2 = (a2 + 1) & v15;
      }
      while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
  else if ((a3 & 1) == 0)
  {
    sub_23DF858FC();
  }
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_14:
  result = sub_23E13762C();
  __break(1u);
  return result;
}

void *sub_23DF858FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_23E1357E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D838);
  v6 = *v0;
  v7 = sub_23E13750C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_31:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v21 >= v17)
      goto LABEL_29;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_29;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_29;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v17)
            goto LABEL_29;
          v22 = *(_QWORD *)(v10 + 8 * v13);
          if (!v22)
          {
            v13 = v21 + 4;
            if (v21 + 4 >= v17)
            {
LABEL_29:
              result = (void *)swift_release();
              v1 = v25;
              goto LABEL_31;
            }
            v22 = *(_QWORD *)(v10 + 8 * v13);
            v23 = v21 + 4;
            if (!v22)
              break;
          }
        }
      }
    }
LABEL_28:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_29;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_28;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23DF85B30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_23E1357E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D838);
  v7 = sub_23E137518();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_36:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_25;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v19 >= v33)
      goto LABEL_34;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_34;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_34;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
        {
          v15 = v19 + 3;
          if (v19 + 3 >= v33)
            goto LABEL_34;
          v20 = *(_QWORD *)(v32 + 8 * v15);
          if (!v20)
          {
            v15 = v19 + 4;
            if (v19 + 4 >= v33)
            {
LABEL_34:
              result = swift_release_n();
              v1 = v31;
              goto LABEL_36;
            }
            v20 = *(_QWORD *)(v32 + 8 * v15);
            v21 = v19 + 4;
            if (!v20)
              break;
          }
        }
      }
    }
LABEL_24:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_25:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_23DF73F28(&qword_256D1D828, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E470], MEMORY[0x24BE4E480]);
    result = sub_23E137110();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_34;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_24;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23DF85E70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t i;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_23E1357E4();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D838);
  v6 = sub_23E137518();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_34;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_34;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_34;
            v19 = v35[v14];
            if (!v19)
            {
              v14 = v18 + 3;
              if (v18 + 3 >= v34)
                goto LABEL_34;
              v19 = v35[v14];
              if (!v19)
              {
                v14 = v18 + 4;
                if (v18 + 4 >= v34)
                {
LABEL_34:
                  swift_release();
                  v1 = v33;
                  v32 = 1 << *(_BYTE *)(v5 + 32);
                  if (v32 >= 64)
                    bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  else
                    *v35 = -1 << v32;
                  *(_QWORD *)(v5 + 16) = 0;
                  break;
                }
                v19 = v35[v14];
                for (i = v18 + 4; !v19; ++i)
                {
                  v14 = i + 1;
                  if (__OFADD__(i, 1))
                    goto LABEL_40;
                  if (v14 >= v34)
                    goto LABEL_34;
                  v19 = v35[v14];
                }
              }
            }
          }
        }
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_23DF73F28(&qword_256D1D828, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E470], MEMORY[0x24BE4E480]);
      result = sub_23E137110();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23DF861F4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23DF86294@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  if ((a3 & 1) != 0)
    goto LABEL_10;
  v6 = result;
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      v8 = *(_QWORD *)(a4 + 48);
      v9 = a5(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a6, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v6, v9);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

double sub_23DF86330@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23DF84C10(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E0F19B4();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_23E1356DC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_23DF89AC0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_23DF8642C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_23DF8642C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_23E1356DC();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23E137500();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23DF73F28(&qword_256D1D760, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E380]);
        v18 = sub_23E137110();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (*sub_23DF866CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(_QWORD *a1)
{
  uint64_t v10;
  uint64_t v11;
  void (*result)(_QWORD *);

  v10 = sub_23E135328();
  *a1 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  a1[1] = v11;
  result = (void (*)(_QWORD *))malloc(*(_QWORD *)(v11 + 64));
  a1[2] = (uint64_t)result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void))(v11 + 16))();
    return sub_23DF86770;
  }
  return result;
}

void sub_23DF86770(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

void _s13HomeDataModel0bC0C0A18AccessoryControlUIE16ObjectIdentifierO2eeoiySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD v33[12];
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v2 = sub_23E134C80();
  v33[10] = *(_QWORD *)(v2 - 8);
  v33[11] = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v33[5] = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v33[9] = (char *)v33 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v33[6] = (char *)v33 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v33[3] = (char *)v33 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v33[8] = (char *)v33 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v33[4] = (char *)v33 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v33[1] = (char *)v33 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v33[7] = (char *)v33 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v33[2] = (char *)v33 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v33[0] = (char *)v33 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v24 = type metadata accessor for DataModel.ObjectIdentifier();
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  MEMORY[0x24BDAC7A8](v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D850);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v33 + *(int *)(v29 + 48) - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v34, (uint64_t)v33 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
  sub_23DF73E10(v35, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
  v32 = (char *)sub_23DF86A74 + 4 * byte_23E1382AE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF86A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  char v18;

  sub_23DF73E10(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568) + 48);
  v7 = v4 + v6;
  if (swift_getEnumCaseMultiPayload())
  {
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 112) + 8);
    v9 = *(_QWORD *)(v5 - 104);
    v8(v4 + v6, v9);
    v8(v4, v9);
    sub_23DF89C7C(v1, &qword_256D1D850);
LABEL_6:
    v18 = 0;
    return v18 & 1;
  }
  v10 = v0 + v6;
  v12 = *(_QWORD *)(v5 - 112);
  v11 = *(_QWORD *)(v5 - 104);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v13(v2, v0, v11);
  v14 = *(_QWORD *)(v5 - 192);
  v13(v14, v7, v11);
  v15 = v10;
  v16 = v14;
  v13(v3, v15, v11);
  LOBYTE(v14) = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
  v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(v4, v11);
  if ((v14 & 1) == 0)
  {
    v17(v3, v11);
    v17(v16, v11);
    v17(v2, v11);
    sub_23DF73E54(v1, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
    goto LABEL_6;
  }
  v18 = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
  v17(v3, v11);
  v17(v16, v11);
  v17(v2, v11);
  sub_23DF73E54(v1, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
  return v18 & 1;
}

unint64_t sub_23DF86F1C()
{
  unint64_t result;

  result = qword_256D1D5B0;
  if (!qword_256D1D5B0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for DeviceError, &type metadata for DeviceError);
    atomic_store(result, (unint64_t *)&qword_256D1D5B0);
  }
  return result;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV8controls4with13stateSnapshotSayAC0C6ModuleVG0A9DataModel06StaticB0V_AJ05StateI0VSgtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = sub_23E134DF4();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E134D7C();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D578);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E1357E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v29 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E135124();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23E031640(a1);
  sub_23DF89C1C(a2, (uint64_t)v16, &qword_256D1D598);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D598);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v21 = sub_23E13510C();
    v22 = sub_23DF85210(v21, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E470], &qword_256D1D828, MEMORY[0x24BE4E480], (void (*)(char *, char *))sub_23DF854A4);
    MEMORY[0x24BDAC7A8](v22);
    *(&v28 - 2) = a1;
    sub_23DF7FCB0((uint64_t (*)(char *))sub_23DF89C60, v22, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      sub_23DF89C7C((uint64_t)v10, &qword_256D1D578);
    }
    else
    {
      v23 = (uint64_t)v29;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v29, v10, v11);
      v24 = v30;
      sub_23E1350DC();
      v25 = (uint64_t)v33;
      sub_23E134D58();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v32);
      v26 = _s22HomeAccessoryControlUI6DeviceV8controls4with11currentUserSayAC0C6ModuleVG0A9DataModel18StaticMediaProfileV_AJ0mI0VtFZ_0(v23, v25);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v35);
      sub_23DF83FA4(v26);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v11);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  return v36;
}

uint64_t sub_23DF872B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D598);
  v1[4] = swift_task_alloc();
  v2 = sub_23E135A0C();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  sub_23E1372C0();
  v1[8] = sub_23E1372B4();
  v1[9] = sub_23E1372A8();
  v1[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23DF87370()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;

  if (qword_256D1D270 != -1)
    swift_once();
  v1 = v0[3];
  v3 = v0[6];
  v2 = v0[7];
  v4 = v0[5];
  v5 = sub_23E135C10();
  __swift_project_value_buffer(v5, (uint64_t)qword_256D1EAC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v6 = sub_23E135BF8();
  v7 = sub_23E137368();
  v8 = os_log_type_enabled(v6, v7);
  v10 = v0[6];
  v9 = v0[7];
  v11 = v0[5];
  if (v8)
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v12 = 136446210;
    sub_23DF73F28(&qword_256D1D7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E800], MEMORY[0x24BE4E808]);
    v13 = sub_23E1375FC();
    v0[2] = sub_23E0AB274(v13, v14, &v18);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_23DF71000, v6, v7, "Created write request for: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v17, -1, -1);
    MEMORY[0x24264C628](v12, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v10 + 8))(v0[7], v0[5]);
  }

  sub_23E134DC4();
  v0[11] = sub_23E134DB8();
  v15 = (_QWORD *)swift_task_alloc();
  v0[12] = v15;
  *v15 = v0;
  v15[1] = sub_23DF875AC;
  return sub_23E134DAC();
}

uint64_t sub_23DF875AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(*(_QWORD *)v0 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();

  sub_23DF89C7C(v2, &qword_256D1D598);
  return swift_task_switch();
}

uint64_t sub_23DF87618()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF8765C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = a2;
  v3 = sub_23E135AF0();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v4 = sub_23E135A0C();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  sub_23E1372C0();
  v2[16] = sub_23E1372B4();
  v2[17] = sub_23E1372A8();
  v2[18] = v5;
  return swift_task_switch();
}

uint64_t sub_23DF87718()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7A0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23E138050;
  sub_23E135AD8();
  v0[7] = v2;
  sub_23DF73F28(&qword_256D1D7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4EA00], MEMORY[0x24BE4EA10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7B0);
  sub_23DF89B88(&qword_256D1D7B8, &qword_256D1D7B0, MEMORY[0x24BEE12C8]);
  sub_23E1374F4();
  sub_23E1359DC();
  v0[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7C0);
  v0[6] = sub_23DF89B88(&qword_256D1D7C8, &qword_256D1D7C0, MEMORY[0x24BEE1728]);
  v0[2] = v1;
  swift_bridgeObjectRetain();
  sub_23E135A00();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_23DF878AC;
  return sub_23DF872B8(v0[15]);
}

uint64_t sub_23DF878AC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DF878F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF87958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  sub_23E1372C0();
  v3[17] = sub_23E1372B4();
  v3[18] = sub_23E1372A8();
  v3[19] = v4;
  return swift_task_switch();
}

uint64_t sub_23DF879C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  sub_23DF82C18(*(_QWORD *)(v0 + 112), v0 + 16);
  sub_23DF89C1C(v0 + 16, v0 + 80, &qword_256D1D790);
  if (*(_QWORD *)(v0 + 104))
  {
    v1 = *(_QWORD *)(v0 + 120);
    sub_23DF89AC0((_OWORD *)(v0 + 80), (_OWORD *)(v0 + 48));
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
    v4 = (v3 + 32) & ~v3;
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_23E138050;
    v6 = v5 + v4;
    v7 = v6 + *(int *)(v2 + 48);
    v8 = sub_23E1356DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v1, v8);
    sub_23DF89AD0(v0 + 48, v7);
    v9 = sub_23E0ECA08(v5);
    *(_QWORD *)(v0 + 160) = v9;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_23DF87B50;
    return sub_23DF8765C(v9, *(_QWORD *)(v0 + 128));
  }
  else
  {
    sub_23DF89C7C(v0 + 16, &qword_256D1D790);
    swift_release();
    sub_23DF89C7C(v0 + 80, &qword_256D1D790);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23DF87B50()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF87BA4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 48);
  sub_23DF89C7C(v0 + 16, &qword_256D1D790);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF87BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 240) = a2;
  *(_QWORD *)(v4 + 248) = a3;
  v7 = sub_23E134E9C();
  *(_QWORD *)(v4 + 256) = v7;
  *(_QWORD *)(v4 + 264) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  v8 = sub_23E1356DC();
  *(_QWORD *)(v4 + 280) = v8;
  *(_QWORD *)(v4 + 288) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  v9 = swift_task_alloc();
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v4 + 304) = v9;
  *(_QWORD *)(v4 + 312) = v10;
  *(_QWORD *)(v4 + 320) = *(_QWORD *)(a1 + 24);
  *(_WORD *)(v4 + 384) = *(_WORD *)(a1 + 32);
  *(_QWORD *)(v4 + 328) = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(v4 + 336) = *(_QWORD *)(a4 + 24);
  *(_BYTE *)(v4 + 386) = *(_BYTE *)(a4 + 32);
  sub_23E1372C0();
  *(_QWORD *)(v4 + 344) = sub_23E1372B4();
  *(_QWORD *)(v4 + 352) = sub_23E1372A8();
  *(_QWORD *)(v4 + 360) = v11;
  return swift_task_switch();
}

uint64_t sub_23DF87D00()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  __n128 v3;
  __n128 v4;
  double v5;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  void (*v20)(uint64_t, uint64_t);
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  _QWORD *v30;

  v1 = *(unsigned __int8 *)(v0 + 384);
  v2 = sub_23E0ECA08(MEMORY[0x24BEE4AF8]);
  if (v1)
  {
    if (v1 == 1)
    {
      if (*(_BYTE *)(v0 + 386) != 1)
      {
        v5 = *(double *)(v0 + 320);
        v7 = *(_QWORD *)(v0 + 312);
        goto LABEL_17;
      }
      v5 = *(double *)(v0 + 320);
      if (*(double *)(v0 + 312) != *(double *)(v0 + 328) || v5 != *(double *)(v0 + 336))
      {
        v7 = *(_QWORD *)(v0 + 312);
LABEL_17:
        v16 = *(_QWORD *)(v0 + 288);
        v15 = *(_QWORD *)(v0 + 296);
        v17 = *(_QWORD *)(v0 + 280);
        v18 = *(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104);
        v18(v15, *MEMORY[0x24BE4E2A8], v17);
        *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE13C8];
        *(_QWORD *)(v0 + 16) = v7;
        sub_23DF89AC0((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_23E0F134C((_OWORD *)(v0 + 48), v15, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
        v20(v15, v17);
        v18(v15, *MEMORY[0x24BE4E298], v17);
        *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE13C8];
        *(double *)(v0 + 80) = v5;
        sub_23DF89AC0((_OWORD *)(v0 + 80), (_OWORD *)(v0 + 112));
        v21 = swift_isUniquelyReferenced_nonNull_native();
        sub_23E0F134C((_OWORD *)(v0 + 112), v15, v21);
        swift_bridgeObjectRelease();
        v20(v15, v17);
      }
    }
  }
  else
  {
    v3.n128_u64[0] = *(_QWORD *)(v0 + 328);
    v4.n128_u64[0] = *(_QWORD *)(v0 + 312);
    if (*(_BYTE *)(v0 + 386))
      v8 = 0;
    else
      v8 = v4.n128_f64[0] == v3.n128_f64[0];
    if (!v8)
    {
      v10 = *(_QWORD *)(v0 + 264);
      v9 = *(_QWORD *)(v0 + 272);
      v11 = *(_QWORD *)(v0 + 256);
      (*(void (**)(_QWORD, _QWORD, _QWORD, __n128, __n128))(*(_QWORD *)(v0 + 288) + 104))(*(_QWORD *)(v0 + 304), *MEMORY[0x24BE4E2C0], *(_QWORD *)(v0 + 280), v3, v4);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v9, *MEMORY[0x24BE4D610], v11);
      sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
      sub_23E13723C();
      sub_23E13723C();
      v13 = *(_QWORD *)(v0 + 264);
      v12 = *(_QWORD *)(v0 + 272);
      v14 = *(_QWORD *)(v0 + 256);
      if (*(_QWORD *)(v0 + 224) == *(_QWORD *)(v0 + 208) && *(_QWORD *)(v0 + 232) == *(_QWORD *)(v0 + 216))
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
      }
      else
      {
        v22 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
        if ((v22 & 1) == 0)
        {
          v24 = *(_QWORD *)(v0 + 304);
          v23 = *(_QWORD *)(v0 + 312);
          v25 = *(_QWORD *)(v0 + 288);
          v26 = *(_QWORD *)(v0 + 296);
          v27 = *(_QWORD *)(v0 + 280);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v24, v27);
          *(_QWORD *)(v0 + 200) = MEMORY[0x24BEE13C8];
          *(_QWORD *)(v0 + 176) = v23;
          sub_23DF89AC0((_OWORD *)(v0 + 176), (_OWORD *)(v0 + 144));
          v28 = swift_isUniquelyReferenced_nonNull_native();
          sub_23E0F134C((_OWORD *)(v0 + 144), v26, v28);
          swift_bridgeObjectRelease();
          v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
          v29(v26, v27);
          v29(v24, v27);
          goto LABEL_21;
        }
      }
      __asm { BR              X10 }
    }
  }
LABEL_21:
  *(_QWORD *)(v0 + 368) = v2;
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v30;
  *v30 = v0;
  v30[1] = sub_23DF880C8;
  return sub_23DF8765C(v2, *(_QWORD *)(v0 + 240));
}

uint64_t sub_23DF880C8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF8811C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF88178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[20] = a3;
  v4[21] = a4;
  v4[18] = a1;
  v4[19] = a2;
  v5 = sub_23E13534C();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for Device.Control.Source(0);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v6 = sub_23E1356DC();
  v4[29] = v6;
  v4[30] = *(_QWORD *)(v6 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  sub_23E1372C0();
  v4[34] = sub_23E1372B4();
  v4[35] = sub_23E1372A8();
  v4[36] = v7;
  return swift_task_switch();
}

uint64_t sub_23DF88298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(uint64_t, uint64_t);
  int v21;
  int v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(double *, uint64_t);
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  double v34;
  unint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;

  sub_23DF73E10(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 224), type metadata accessor for Device.Control.Source);
  if (swift_getEnumCaseMultiPayload())
  {
    v1 = *(_QWORD *)(v0 + 224);
    swift_release();
    v2 = v1;
LABEL_5:
    sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v8 = *(_QWORD *)(v0 + 160);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
  v10 = *(_QWORD *)(v6 + *(int *)(v9 + 48));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v11(v3, v6, v4);
  sub_23DF73E10(v8, v7, type metadata accessor for Device.Control.Source);
  if (swift_getEnumCaseMultiPayload())
  {
    v12 = *(_QWORD *)(v0 + 216);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 232));
    swift_release();
    swift_bridgeObjectRelease();
    v2 = v12;
    goto LABEL_5;
  }
  v14 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + *(int *)(v9 + 48));
  ((void (*)(_QWORD))v11)(*(_QWORD *)(v0 + 256));
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v19(v14, v17, v16);
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 88);
  v21 = v20(v14, v16);
  if (v21 != *MEMORY[0x24BE4DD08])
  {
    v45 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 256);
    v48 = *(_QWORD *)(v0 + 232);
    v47 = *(_QWORD *)(v0 + 240);
    v49 = *(_QWORD *)(v0 + 200);
    v50 = *(_QWORD *)(v0 + 176);
    v51 = *(_QWORD *)(v0 + 184);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    v52 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v52(v46, v48);
    v52(v45, v48);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
    goto LABEL_6;
  }
  v22 = v21;
  v53 = v18;
  v24 = *(_QWORD *)(v0 + 192);
  v23 = *(double **)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 168);
  v27 = *(void (**)(double *, uint64_t))(*(_QWORD *)(v0 + 184) + 96);
  v27(v23, v25);
  v28 = *v23;
  v19(v24, v26, v25);
  if (v20(v24, v25) != v22)
  {
    v45 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 256);
    v48 = *(_QWORD *)(v0 + 232);
    v47 = *(_QWORD *)(v0 + 240);
    v51 = *(_QWORD *)(v0 + 184);
    v49 = *(_QWORD *)(v0 + 192);
    v50 = *(_QWORD *)(v0 + 176);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v30 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 232);
  v31 = *(_QWORD *)(v0 + 240);
  v33 = *(double **)(v0 + 192);
  v27(v33, *(_QWORD *)(v0 + 176));
  v34 = *v33;
  v35 = sub_23E0ECA08(MEMORY[0x24BEE4AF8]);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  v36(v30, v29, v32);
  *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE13C8];
  *(double *)(v0 + 16) = v28;
  sub_23DF89AC0((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23E0F134C((_OWORD *)(v0 + 48), v30, isUniquelyReferenced_nonNull_native);
  v38 = v35;
  swift_bridgeObjectRelease();
  v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  *(_QWORD *)(v0 + 296) = v39;
  v39(v30, v32);
  if (v28 > 0.0 == v34 <= 0.0)
  {
    v40 = *(_QWORD *)(v0 + 248);
    v41 = *(_QWORD *)(v0 + 232);
    v36(v40, *(_QWORD *)(v0 + 264), v41);
    *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE1328];
    *(_BYTE *)(v0 + 80) = v28 > 0.0;
    sub_23DF89AC0((_OWORD *)(v0 + 80), (_OWORD *)(v0 + 112));
    v42 = swift_isUniquelyReferenced_nonNull_native();
    sub_23E0F134C((_OWORD *)(v0 + 112), v40, v42);
    swift_bridgeObjectRelease();
    v39(v40, v41);
  }
  *(_QWORD *)(v0 + 304) = v38;
  v43 = sub_23E0DA7A0(v10, v53);
  *(_QWORD *)(v0 + 312) = v43;
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v44;
  *v44 = v0;
  v44[1] = sub_23DF886D8;
  return sub_23DF8765C(v38, v43);
}

uint64_t sub_23DF886D8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF88740()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 232);
  swift_release();
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF887EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[19] = a3;
  v4[20] = a4;
  v4[18] = a2;
  v4[21] = type metadata accessor for Device.Control.Source(0);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v6 = sub_23E1356DC();
  v4[24] = v6;
  v4[25] = *(_QWORD *)(v6 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v7 = swift_task_alloc();
  v8 = *a1;
  v4[28] = v7;
  v4[29] = v8;
  sub_23E1372C0();
  v4[30] = sub_23E1372B4();
  v4[31] = sub_23E1372A8();
  v4[32] = v9;
  return swift_task_switch();
}

uint64_t sub_23DF888DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23DF73E10(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 184), type metadata accessor for Device.Control.Source);
  if (swift_getEnumCaseMultiPayload())
  {
    v1 = *(_QWORD *)(v0 + 184);
    swift_release();
LABEL_5:
    sub_23DF73E54(v1, type metadata accessor for Device.Control.Source);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
  v9 = *(_QWORD *)(v5 + *(int *)(v8 + 48));
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v10(v2, v5, v4);
  sub_23DF73E10(v7, v6, type metadata accessor for Device.Control.Source);
  if (swift_getEnumCaseMultiPayload())
  {
    v1 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192));
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v30 = v9;
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 160);
  v29 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + *(int *)(v8 + 48));
  ((void (*)(_QWORD))v10)(*(_QWORD *)(v0 + 216));
  v15 = sub_23E0ECA08(MEMORY[0x24BEE4AF8]);
  v16 = *(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16);
  if (v12 != v14)
  {
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 200);
    v16(v18, *(_QWORD *)(v0 + 216), v19);
    *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v0 + 16) = v17;
    sub_23DF89AC0((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23E0F134C((_OWORD *)(v0 + 48), v18, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v18, v19);
  }
  v22 = *(_QWORD *)(v0 + 200);
  v21 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 192);
  v16(v21, *(_QWORD *)(v0 + 224), v23);
  *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v0 + 80) = v12 != v14;
  sub_23DF89AC0((_OWORD *)(v0 + 80), (_OWORD *)(v0 + 112));
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_23E0F134C((_OWORD *)(v0 + 112), v21, v24);
  *(_QWORD *)(v0 + 264) = v15;
  swift_bridgeObjectRelease();
  v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  *(_QWORD *)(v0 + 272) = v25;
  v25(v21, v23);
  v26 = sub_23E0DA7A0(v30, v29);
  *(_QWORD *)(v0 + 280) = v26;
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v27;
  *v27 = v0;
  v27[1] = sub_23DF88BD0;
  return sub_23DF8765C(v15, v26);
}

uint64_t sub_23DF88BD0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF88C38()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 192);
  swift_release();
  v1(v2, v4);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF88CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[20] = a3;
  v4[21] = a4;
  v4[18] = a1;
  v4[19] = a2;
  v5 = sub_23E13534C();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for Device.Control.Source(0);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v6 = sub_23E1356DC();
  v4[29] = v6;
  v4[30] = *(_QWORD *)(v6 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  sub_23E1372C0();
  v4[34] = sub_23E1372B4();
  v4[35] = sub_23E1372A8();
  v4[36] = v7;
  return swift_task_switch();
}

uint64_t sub_23DF88DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(uint64_t, uint64_t);
  int v21;
  int v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(double *, uint64_t);
  double v28;
  double v29;
  double *v30;
  double v31;
  double v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;

  sub_23DF73E10(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 224), type metadata accessor for Device.Control.Source);
  if (swift_getEnumCaseMultiPayload())
  {
    v1 = *(_QWORD *)(v0 + 224);
    swift_release();
    v2 = v1;
LABEL_5:
    sub_23DF73E54(v2, type metadata accessor for Device.Control.Source);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v8 = *(_QWORD *)(v0 + 152);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
  v10 = *(_QWORD *)(v6 + *(int *)(v9 + 48));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v11(v3, v6, v4);
  sub_23DF73E10(v8, v7, type metadata accessor for Device.Control.Source);
  if (swift_getEnumCaseMultiPayload())
  {
    v12 = *(_QWORD *)(v0 + 216);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 232));
    swift_release();
    swift_bridgeObjectRelease();
    v2 = v12;
    goto LABEL_5;
  }
  v52 = v10;
  v14 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + *(int *)(v9 + 48));
  ((void (*)(_QWORD))v11)(*(_QWORD *)(v0 + 256));
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v19(v14, v17, v16);
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 88);
  v21 = v20(v14, v16);
  if (v21 != *MEMORY[0x24BE4DD00])
  {
    v44 = *(_QWORD *)(v0 + 264);
    v45 = *(_QWORD *)(v0 + 256);
    v47 = *(_QWORD *)(v0 + 232);
    v46 = *(_QWORD *)(v0 + 240);
    v48 = *(_QWORD *)(v0 + 200);
    v49 = *(_QWORD *)(v0 + 176);
    v50 = *(_QWORD *)(v0 + 184);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    v51 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v51(v45, v47);
    v51(v44, v47);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    goto LABEL_6;
  }
  v22 = v21;
  v24 = *(_QWORD *)(v0 + 192);
  v23 = *(double **)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 168);
  v27 = *(void (**)(double *, uint64_t))(*(_QWORD *)(v0 + 184) + 96);
  v27(v23, v25);
  v28 = *v23;
  v29 = v23[1];
  v19(v24, v26, v25);
  if (v20(v24, v25) != v22)
  {
    v44 = *(_QWORD *)(v0 + 264);
    v45 = *(_QWORD *)(v0 + 256);
    v47 = *(_QWORD *)(v0 + 232);
    v46 = *(_QWORD *)(v0 + 240);
    v50 = *(_QWORD *)(v0 + 184);
    v48 = *(_QWORD *)(v0 + 192);
    v49 = *(_QWORD *)(v0 + 176);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v30 = *(double **)(v0 + 192);
  v27(v30, *(_QWORD *)(v0 + 176));
  v31 = *v30;
  v32 = v30[1];
  v33 = sub_23E0ECA08(MEMORY[0x24BEE4AF8]);
  if (v29 != v32)
  {
    v34 = *(_QWORD *)(v0 + 240);
    v35 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 16))(v35, *(_QWORD *)(v0 + 264), v36);
    *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE13C8];
    *(double *)(v0 + 16) = v29;
    sub_23DF89AC0((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23E0F134C((_OWORD *)(v0 + 48), v35, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  }
  if (v28 != v31)
  {
    v38 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 232);
    v39 = *(_QWORD *)(v0 + 240);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 16))(v38, *(_QWORD *)(v0 + 256), v40);
    *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE13C8];
    *(double *)(v0 + 80) = v28;
    sub_23DF89AC0((_OWORD *)(v0 + 80), (_OWORD *)(v0 + 112));
    v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_23E0F134C((_OWORD *)(v0 + 112), v38, v41);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  }
  *(_QWORD *)(v0 + 296) = v33;
  v42 = sub_23E0DA7A0(v18, v52);
  *(_QWORD *)(v0 + 304) = v42;
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v43;
  *v43 = v0;
  v43[1] = sub_23DF8922C;
  return sub_23DF8765C(v33, v42);
}

uint64_t sub_23DF8922C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23DF89294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF89340(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23DF89384(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23DF893C8()
{
  return sub_23DF73F28((unint64_t *)&unk_256D1D668, (uint64_t (*)(uint64_t))type metadata accessor for DataModel.ObjectIdentifier, (uint64_t)&protocol conformance descriptor for DataModel.ObjectIdentifier);
}

uint64_t sub_23DF893F4(uint64_t a1)
{
  uint64_t result;

  result = sub_23DF73F28(&qword_256D1D6B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D430], (uint64_t)&protocol conformance descriptor for DataModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23DF89430()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t _s16ObjectIdentifierOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23DF89490 + 4 * byte_23E1382B6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t _s16ObjectIdentifierOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      v3 = sub_23E134C80();
      v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v5(a1, v3);
      v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568) + 48);
      result = ((uint64_t (*)(uint64_t, uint64_t))v5)(v4, v3);
      break;
    default:
      return result;
  }
  return result;
}

void _s16ObjectIdentifierOwcp()
{
  char *v0;

  v0 = (char *)sub_23DF89704 + 4 * byte_23E1382BE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF89704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  v2 = sub_23E134C80();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v3(v0, v1, v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
  v3(v0 + *(int *)(v4 + 48), v1 + *(int *)(v4 + 48), v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t _s16ObjectIdentifierOwca(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23DF73E54(result, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
    v2 = (char *)&loc_23DF897D4 + 4 * byte_23E1382C2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void _s16ObjectIdentifierOwtk()
{
  char *v0;

  v0 = (char *)sub_23DF8988C + 4 * byte_23E1382C6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DF8988C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  v2 = sub_23E134C80();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v3(v0, v1, v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D568);
  v3(v0 + *(int *)(v4 + 48), v1 + *(int *)(v4 + 48), v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t _s16ObjectIdentifierOwta(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23DF73E54(result, (uint64_t (*)(_QWORD))type metadata accessor for DataModel.ObjectIdentifier);
    v2 = (char *)&loc_23DF8995C + 4 * byte_23E1382CA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t _s16ObjectIdentifierOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s16ObjectIdentifierOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23DF899E8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23DF899F8()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t *v9;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v6 = &v5;
    swift_getTupleTypeLayout2();
    v7 = &v4;
    swift_getTupleTypeLayout2();
    v8 = &v3;
    swift_getTupleTypeLayout2();
    v9 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_OWORD *sub_23DF89AC0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23DF89AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24264C550](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23DF89B88(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24264C55C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DF89BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23DF823FC(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23DF89C1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23DF89C60()
{
  return sub_23DF83EB4() & 1;
}

uint64_t sub_23DF89C7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23DF89CB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v35 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_23DF89F20(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v43 = a3;
    v10 = *(int *)(a3 + 36);
    v11 = (_QWORD *)(a1 + v10);
    v12 = a2 + v10;
    v13 = *(_QWORD *)(a2 + v10 + 8);
    *v11 = *(_QWORD *)(a2 + v10);
    v11[1] = v13;
    v14 = type metadata accessor for IconDescriptor();
    v15 = *(int *)(v14 + 20);
    v41 = v12 + v15;
    v42 = (char *)v11 + v15;
    v16 = sub_23E135910();
    v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v17(v42, v41, v16);
    v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
    v19 = (_QWORD *)((char *)v11 + v18);
    v20 = (_QWORD *)(v12 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = *(int *)(v14 + 20);
    v23 = (char *)v19 + v22;
    v24 = (char *)v20 + v22;
    swift_bridgeObjectRetain();
    v17(v23, (uint64_t)v24, v16);
    v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
    *(_QWORD *)((char *)v11 + *(int *)(v25 + 20)) = *(_QWORD *)(v12 + *(int *)(v25 + 20));
    v26 = *(int *)(v25 + 24);
    v27 = (_QWORD *)((char *)v11 + v26);
    v28 = (_QWORD *)(v12 + v26);
    v29 = type metadata accessor for ControlTextModifier.Config(0);
    swift_retain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v36 = v28[1];
      *v27 = *v28;
      v27[1] = v36;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v27 = *v28;
      v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v32 = (char *)v27 + v31;
      v33 = (char *)v28 + v31;
      v34 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      swift_storeEnumTagMultiPayload();
    }
    v37 = *(int *)(v43 + 40);
    v38 = a1 + v37;
    v39 = a2 + v37;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
    *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23DF89F20(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_23DF89F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;

  sub_23DF8A078(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for IconDescriptor();
  v6 = v4 + *(int *)(v5 + 20);
  v7 = sub_23E135910();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v8(v9 + *(int *)(v5 + 20), v7);
  v10 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  swift_release();
  v11 = v4 + *(int *)(v10 + 24);
  type metadata accessor for ControlTextModifier.Config(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v13 = v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v14 = sub_23E134C20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  return swift_release();
}

uint64_t sub_23DF8A078(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_23DF8A084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_23DF89F20(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v41 = a3;
  v9 = *(int *)(a3 + 36);
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v13 = type metadata accessor for IconDescriptor();
  v14 = *(int *)(v13 + 20);
  v39 = v11 + v14;
  v40 = (char *)v10 + v14;
  v15 = sub_23E135910();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v16(v40, v39, v15);
  v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v18 = (_QWORD *)((char *)v10 + v17);
  v19 = (_QWORD *)(v11 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = *(int *)(v13 + 20);
  v22 = (char *)v18 + v21;
  v23 = (char *)v19 + v21;
  swift_bridgeObjectRetain();
  v16(v22, (uint64_t)v23, v15);
  v24 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  *(_QWORD *)((char *)v10 + *(int *)(v24 + 20)) = *(_QWORD *)(v11 + *(int *)(v24 + 20));
  v25 = *(int *)(v24 + 24);
  v26 = (_QWORD *)((char *)v10 + v25);
  v27 = (_QWORD *)(v11 + v25);
  v28 = type metadata accessor for ControlTextModifier.Config(0);
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v34 = v27[1];
    *v26 = *v27;
    v26[1] = v34;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v31 = (char *)v26 + v30;
    v32 = (char *)v27 + v30;
    v33 = sub_23E134C20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    swift_storeEnumTagMultiPayload();
  }
  v35 = *(int *)(v41 + 40);
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_23DF8A2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_23DF89F20(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_23DF8A078(v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v37 = a3;
  v10 = *(int *)(a3 + 36);
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for IconDescriptor();
  v14 = *(int *)(v13 + 20);
  v15 = (char *)v11 + v14;
  v16 = v12 + v14;
  v17 = sub_23E135910();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v20 = (char *)v11 + v19;
  v21 = v12 + v19;
  *(_QWORD *)v20 = *(_QWORD *)(v12 + v19);
  *((_QWORD *)v20 + 1) = *(_QWORD *)(v12 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18(&v20[*(int *)(v13 + 20)], v21 + *(int *)(v13 + 20), v17);
  v22 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  *(_QWORD *)((char *)v11 + *(int *)(v22 + 20)) = *(_QWORD *)(v12 + *(int *)(v22 + 20));
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v23 = *(int *)(v22 + 24);
    v24 = (_QWORD *)((char *)v11 + v23);
    v25 = (_QWORD *)(v12 + v23);
    sub_23DF73E54((uint64_t)v11 + v23, type metadata accessor for ControlTextModifier.Config);
    v26 = type metadata accessor for ControlTextModifier.Config(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *v24 = *v25;
      v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v29 = (char *)v24 + v28;
      v30 = (char *)v25 + v28;
      v31 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      swift_storeEnumTagMultiPayload();
    }
  }
  v32 = *(int *)(v37 + 40);
  v33 = a1 + v32;
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 8) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  *(_QWORD *)(v33 + 16) = v34[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23DF8A57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = type metadata accessor for IconDescriptor();
  v10 = *(int *)(v9 + 20);
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_23E135910();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v16 = (_OWORD *)(v7 + v15);
  v17 = (_OWORD *)(v8 + v15);
  *v16 = *v17;
  v14((uint64_t)v16 + *(int *)(v9 + 20), (uint64_t)v17 + *(int *)(v9 + 20), v13);
  v18 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  *(_QWORD *)(v7 + *(int *)(v18 + 20)) = *(_QWORD *)(v8 + *(int *)(v18 + 20));
  v19 = *(int *)(v18 + 24);
  v20 = (_QWORD *)(v7 + v19);
  v21 = (_QWORD *)(v8 + v19);
  v22 = type metadata accessor for ControlTextModifier.Config(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v24 = (char *)v20 + v23;
    v25 = (char *)v21 + v23;
    v26 = sub_23E134C20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    swift_storeEnumTagMultiPayload();
  }
  v27 = *(int *)(a3 + 40);
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  return a1;
}

uint64_t sub_23DF8A740(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_23DF8A078(v8, v9);
  v10 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v10;
  swift_release();
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_release();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v11 = *(int *)(a3 + 36);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t)a2 + v11;
  v14 = *(uint64_t *)((char *)a2 + v11 + 8);
  *v12 = *(uint64_t *)((char *)a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for IconDescriptor();
  v16 = *(int *)(v15 + 20);
  v17 = (char *)v12 + v16;
  v18 = v13 + v16;
  v19 = sub_23E135910();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v22 = (char *)v12 + v21;
  v23 = v13 + v21;
  v24 = *(_QWORD *)(v13 + v21 + 8);
  *(_QWORD *)v22 = *(_QWORD *)(v13 + v21);
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v20(&v22[*(int *)(v15 + 20)], v23 + *(int *)(v15 + 20), v19);
  v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  *(_QWORD *)((char *)v12 + *(int *)(v25 + 20)) = *(_QWORD *)(v13 + *(int *)(v25 + 20));
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    v26 = *(int *)(v25 + 24);
    v27 = (_QWORD *)((char *)v12 + v26);
    v28 = (_QWORD *)(v13 + v26);
    sub_23DF73E54((uint64_t)v12 + v26, type metadata accessor for ControlTextModifier.Config);
    v29 = type metadata accessor for ControlTextModifier.Config(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v27 = *v28;
      v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v31 = (char *)v27 + v30;
      v32 = (char *)v28 + v30;
      v33 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      swift_storeEnumTagMultiPayload();
    }
  }
  v34 = *(int *)(a3 + 40);
  v35 = a1 + v34;
  v36 = (uint64_t)a2 + v34;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  swift_release();
  return a1;
}

uint64_t sub_23DF8A964()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF8A970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Device.Control.BinaryViewConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_23DF8A9EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF8A9F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Device.Control.BinaryViewConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SwitchControlView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D1D8C0);
}

uint64_t sub_23DF8AA80()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device.Control.BinaryViewConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23DF8AB20()
{
  return swift_getOpaqueTypeConformance2();
}

void (*sub_23DF8AB30(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  v6 = *(_BYTE *)(v1 + 40);
  *((_BYTE *)v3 + 19) = v6;
  *v3 = v4;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D948);
  MEMORY[0x24264B734]();
  return sub_23DF8ABB4;
}

void sub_23DF8ABB4(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v1[1] = v3;
  *((_BYTE *)v1 + 16) = v4;
  *((_BYTE *)v1 + 18) = v2;
  sub_23E136E70();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_23DF8AC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (**v55)(double);
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (**v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t KeyPath;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  _QWORD *v87;
  unint64_t v88;
  char v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _QWORD v139[2];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  __int16 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  char v152;
  uint64_t v153;

  v109 = a1;
  v136 = a3;
  v135 = sub_23E13636C();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v133 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_23E13660C();
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v123 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D910);
  MEMORY[0x24BDAC7A8](v122);
  v121 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D918);
  MEMORY[0x24BDAC7A8](v120);
  v119 = (uint64_t)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for ValueThrottleModifier.Config(0);
  MEMORY[0x24BDAC7A8](v112);
  v137 = (uint64_t)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D920);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D928);
  MEMORY[0x24BDAC7A8](v126);
  v114 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D930);
  v13 = MEMORY[0x24BDAC7A8](v115);
  v117 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v118 = (uint64_t)&v105 - v15;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D938);
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v138 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D940);
  v17 = MEMORY[0x24BDAC7A8](v132);
  v129 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v131 = (char *)&v105 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v130 = (char *)&v105 - v21;
  v22 = type metadata accessor for SwitchControlView(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = v22;
  v116 = v22;
  v25 = *(_QWORD *)(v23 + 64);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135E80();
  v28 = v27 * 0.5;
  v29 = v27 * 0.25;
  sub_23DF73E10(a2, (uint64_t)v26, type metadata accessor for SwitchControlView);
  v30 = *(unsigned __int8 *)(v23 + 80);
  v111 = v30 | 7;
  v31 = swift_allocObject();
  *(double *)(v31 + 16) = v29;
  sub_23DF89384((uint64_t)v26, v31 + ((v30 + 24) & ~v30), type metadata accessor for SwitchControlView);
  v32 = a2;
  v108 = *(_QWORD *)(a2 + 24);
  v107 = *(_QWORD *)(a2 + 32);
  v106 = *(unsigned __int8 *)(a2 + 40);
  v146 = v108;
  v147 = v107;
  LOBYTE(v148) = v106;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D948);
  v113 = v33;
  MEMORY[0x24264B734](&v140);
  if ((v140 & 1) != 0)
    v34 = 0.0;
  else
    v34 = v28;
  v35 = a2 + *(int *)(v24 + 40);
  v36 = *(_QWORD *)v35;
  v37 = *(_BYTE *)(v35 + 8);
  v38 = *(_QWORD *)(v35 + 16);
  v146 = v36;
  LOBYTE(v147) = v37;
  v148 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
  sub_23E136D98();
  if ((_BYTE)v141)
    v39 = v34;
  else
    v39 = *(double *)&v140;
  *v11 = sub_23E136FD8();
  v11[1] = v40;
  v110 = v11;
  v41 = (uint64_t *)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D958) + 44));
  *v41 = sub_23E136FCC();
  v41[1] = v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D960);
  sub_23DF8BA7C(a2, v109, (uint64_t)v41 + *(int *)(v43 + 44), v39, v29);
  v44 = v112;
  v45 = v137;
  v46 = (double *)(v137 + *(int *)(v112 + 24));
  *v46 = v34;
  v47 = *MEMORY[0x24BE4DD08];
  v48 = sub_23E13534C();
  (*(void (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
  v105 = v32;
  v146 = v108;
  v147 = v107;
  LOBYTE(v148) = v106;
  MEMORY[0x24264B734](&v140, v33);
  v49 = v140 != 2;
  v50 = v45 + *(int *)(v44 + 28);
  v51 = *MEMORY[0x24BE4DF18];
  v52 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
  *(_QWORD *)v45 = 0;
  *(double *)(v45 + 8) = v28;
  *(_BYTE *)(v45 + *(int *)(v44 + 32)) = v49;
  sub_23DF73E10(v32, (uint64_t)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SwitchControlView);
  v53 = (v30 + 16) & ~v30;
  v54 = swift_allocObject();
  sub_23DF89384((uint64_t)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v54 + v53, type metadata accessor for SwitchControlView);
  v55 = (uint64_t (**)(double))(v54 + ((v53 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v55 = sub_23DF8D574;
  v55[1] = (uint64_t (*)(double))v31;
  v56 = (uint64_t)v114;
  v57 = &v114[*(int *)(v126 + 36)];
  v140 = 0;
  LOBYTE(v141) = 1;
  v142 = 0;
  v143 = 1;
  v144 = 0;
  v145 = 513;
  v126 = v31;
  swift_retain();
  sub_23E136D8C();
  v58 = v147;
  v59 = v148;
  v60 = v149;
  v61 = v150;
  v62 = v151;
  v63 = v152;
  v64 = v153;
  *(_QWORD *)v57 = v146;
  v57[8] = v58;
  *((_QWORD *)v57 + 2) = v59;
  v57[24] = v60;
  *((_QWORD *)v57 + 4) = v61;
  v57[40] = v62;
  v57[41] = v63;
  *((_QWORD *)v57 + 6) = v64;
  v65 = type metadata accessor for ValueThrottleModifier(0);
  sub_23DF89384(v137, (uint64_t)&v57[*(int *)(v65 + 20)], type metadata accessor for ValueThrottleModifier.Config);
  v66 = (uint64_t (**)(uint64_t))&v57[*(int *)(v65 + 24)];
  *v66 = sub_23DF8D764;
  v66[1] = (uint64_t (*)(uint64_t))v54;
  v67 = v56;
  sub_23DF89340((uint64_t)v110, v56, &qword_256D1D920);
  v68 = v105;
  sub_23DF73E10(v105, (uint64_t)v26, type metadata accessor for SwitchControlView);
  v69 = swift_allocObject();
  sub_23DF89384((uint64_t)v26, v69 + v53, type metadata accessor for SwitchControlView);
  v70 = swift_allocObject();
  *(_QWORD *)(v70 + 16) = sub_23DF8D954;
  *(_QWORD *)(v70 + 24) = v69;
  KeyPath = swift_getKeyPath();
  v72 = v119;
  sub_23DF89C1C(v56, v119, &qword_256D1D928);
  v73 = v72 + *(int *)(v120 + 36);
  *(_BYTE *)v73 = 1;
  *(_QWORD *)(v73 + 8) = sub_23DF8D9A4;
  *(_QWORD *)(v73 + 16) = v70;
  *(_QWORD *)(v73 + 24) = KeyPath;
  *(_BYTE *)(v73 + 32) = 0;
  sub_23DF89C1C(v72, v121, &qword_256D1D918);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D968);
  sub_23DF8D9B4();
  sub_23DF8DB00();
  v74 = (uint64_t)v117;
  sub_23E136480();
  sub_23DF89C7C(v72, &qword_256D1D918);
  v75 = v118;
  sub_23DF89340(v74, v118, &qword_256D1D930);
  swift_release();
  sub_23DF89C7C(v67, &qword_256D1D928);
  v76 = v123;
  sub_23E1365E8();
  v77 = sub_23DF8DBAC();
  v78 = v115;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v76, v125);
  sub_23DF89C7C(v75, &qword_256D1D930);
  v79 = *(_QWORD *)(v68 + 32);
  v80 = *(_BYTE *)(v68 + 40);
  v146 = *(_QWORD *)(v68 + 24);
  v147 = v79;
  LOBYTE(v148) = v80;
  v81 = v113;
  MEMORY[0x24264B734](&v140);
  v82 = (uint64_t *)(v68 + *(int *)(v116 + 36));
  if (v140 != 2 && (v140 & 1) == 0)
    v82 = (uint64_t *)((char *)v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28));
  v84 = *v82;
  v83 = v82[1];
  swift_bridgeObjectRetain();
  if (qword_256D1D460 != -1)
    swift_once();
  swift_beginAccess();
  if (*((_QWORD *)off_256D25FB8 + 2))
  {
    swift_bridgeObjectRetain();
    sub_23DF84E3C(v84, v83);
    v86 = v85;
    swift_bridgeObjectRelease();
    if ((v86 & 1) != 0)
    {
      swift_beginAccess();
      v87 = off_256D25FB8;
      if (*((_QWORD *)off_256D25FB8 + 2))
      {
        swift_bridgeObjectRetain();
        v88 = sub_23DF84E3C(v84, v83);
        if ((v89 & 1) != 0)
        {
          v90 = (uint64_t *)(v87[7] + 16 * v88);
          v84 = *v90;
          v91 = v90[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          v83 = v91;
          goto LABEL_19;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
  }
LABEL_19:
  v140 = v84;
  v141 = v83;
  v139[0] = v78;
  v139[1] = v77;
  swift_getOpaqueTypeConformance2();
  sub_23DF8DC18();
  v92 = (uint64_t)v129;
  v93 = v128;
  v94 = v138;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v94, v93);
  v95 = *(_QWORD *)(v68 + 32);
  v96 = *(_BYTE *)(v68 + 40);
  v140 = *(_QWORD *)(v68 + 24);
  v141 = v95;
  LOBYTE(v142) = v96;
  MEMORY[0x24264B734](v139, v81);
  v140 = sub_23E1371A0();
  v141 = v97;
  v98 = (uint64_t)v131;
  sub_23E135FB8();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v92, &qword_256D1D940);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9C0);
  v99 = v134;
  v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_23E138410;
  sub_23E136360();
  sub_23E136354();
  v140 = v100;
  sub_23DF73F28(&qword_256D1D9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9D0);
  sub_23DF89B88(&qword_256D1D9D8, &qword_256D1D9D0, MEMORY[0x24BEE12C8]);
  v101 = v133;
  v102 = v135;
  sub_23E1374F4();
  v103 = (uint64_t)v130;
  sub_23E135FD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v102);
  sub_23DF89C7C(v98, &qword_256D1D940);
  return sub_23DF89340(v103, v136, &qword_256D1D940);
}

uint64_t sub_23DF8B920(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v6 = type metadata accessor for SwitchControlView(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 24);
  v21 = v9;
  v22 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D948);
  MEMORY[0x24264B734](&v23);
  v12 = v23;
  sub_23DF73E10(a1, (uint64_t)v8, type metadata accessor for SwitchControlView);
  if (v12 == 2)
    return sub_23DF73E54((uint64_t)v8, type metadata accessor for SwitchControlView);
  v14 = *((_QWORD *)v8 + 4);
  v15 = v8[40];
  v20 = *((_QWORD *)v8 + 3);
  v21 = v14;
  v22 = v15;
  MEMORY[0x24264B734](&v23, v11);
  v16 = v23;
  result = sub_23DF73E54((uint64_t)v8, type metadata accessor for SwitchControlView);
  if (v16 == 2 || ((v16 & 1) == 0) == a2 <= a3)
  {
    v17 = *(_QWORD *)(a1 + 32);
    v18 = *(_BYTE *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 24);
    v21 = v17;
    v22 = v18;
    LOBYTE(v23) = a2 <= a3;
    return sub_23E136E70();
  }
  return result;
}

uint64_t sub_23DF8BA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  char *v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;

  v96 = a2;
  v109 = a3;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9E0);
  MEMORY[0x24BDAC7A8](v107);
  v108 = (uint64_t)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9E8);
  v102 = *(_QWORD *)(v9 - 8);
  v103 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v100 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9F0);
  v11 = MEMORY[0x24BDAC7A8](v106);
  v99 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v105 = (uint64_t)&v87 - v13;
  v92 = type metadata accessor for KnobView(0);
  MEMORY[0x24BDAC7A8](v92);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9F8);
  MEMORY[0x24BDAC7A8](v91);
  v93 = (uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA00);
  MEMORY[0x24BDAC7A8](v94);
  v98 = (uint64_t)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA08);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v97 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v104 = (uint64_t)&v87 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v101 = (uint64_t)&v87 - v23;
  v87 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v87);
  v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ControlTextModifier(0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA10);
  MEMORY[0x24BDAC7A8](v90);
  v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ControlBackgroundView();
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v87 - v35;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA18);
  v37 = MEMORY[0x24BDAC7A8](v88);
  v95 = (uint64_t)&v87 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v87 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v110 = (uint64_t)&v87 - v42;
  *(_QWORD *)v34 = swift_getKeyPath();
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  *(_OWORD *)(v34 + 40) = 0u;
  *(_OWORD *)(v34 + 50) = 0u;
  v43 = (uint64_t *)&v34[*(int *)(v31 + 20)];
  *v43 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v44 = *(int *)(v31 + 24);
  v45 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v34[v44] = MEMORY[0x24264B578](v45);
  v89 = v36;
  sub_23DF89384((uint64_t)v34, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  if (a4 > a5)
  {
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v46 = a1 + *(int *)(type metadata accessor for SwitchControlView(0) + 36);
    v47 = type metadata accessor for Device.Control.BinaryViewConfig(0);
    sub_23DF73E10(v46 + *(int *)(v47 + 24), (uint64_t)v25, type metadata accessor for ControlTextModifier.Config);
  }
  sub_23DF89384((uint64_t)v25, (uint64_t)v28, type metadata accessor for ControlTextModifier.Config);
  v48 = *(_QWORD *)(a1 + 48);
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v49 = sub_23E1360CC();
  v51 = v50;
  v111 = 1;
  sub_23E136D8C();
  v52 = v112;
  v53 = a1;
  v54 = *((_QWORD *)&v112 + 1);
  sub_23DF73E10((uint64_t)v28, (uint64_t)v30, type metadata accessor for ControlTextModifier);
  v55 = &v30[*(int *)(v90 + 36)];
  *(_QWORD *)v55 = v49;
  *((_QWORD *)v55 + 1) = v51;
  *((_QWORD *)v55 + 2) = v48;
  v55[24] = v52;
  *((_QWORD *)v55 + 4) = v54;
  v56 = v53;
  sub_23DF73E54((uint64_t)v28, type metadata accessor for ControlTextModifier);
  v57 = (uint64_t)v89;
  sub_23DF73E10((uint64_t)v89, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89340((uint64_t)v30, (uint64_t)&v41[*(int *)(v88 + 36)], &qword_256D1DA10);
  sub_23DF73E54(v57, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89340((uint64_t)v41, v110, &qword_256D1DA18);
  v58 = *(_QWORD *)v56;
  v59 = *(_BYTE *)(v56 + 8);
  sub_23DF89F20(*(_QWORD *)v56, v59);
  LOBYTE(v49) = sub_23DF9C59C(v58, v59);
  sub_23DF8A078(v58, v59);
  if ((v49 & 1) != 0)
  {
    v60 = v56 + *(int *)(type metadata accessor for SwitchControlView(0) + 36);
    v61 = *(_QWORD *)(v60 + *(int *)(type metadata accessor for Device.Control.BinaryViewConfig(0) + 20));
    swift_retain();
  }
  else
  {
    sub_23E136C48();
    v61 = sub_23E136C60();
    swift_release();
  }
  v62 = *(_QWORD *)(v56 + 16);
  v63 = *(_BYTE *)(v56 + 56);
  v64 = type metadata accessor for SwitchControlView(0);
  v65 = (int *)v92;
  sub_23DF89C1C(v56 + *(int *)(v64 + 36), (uint64_t)&v15[*(int *)(v92 + 24)], &qword_256D1D858);
  v66 = *(_QWORD *)(v56 + 48);
  *(_QWORD *)v15 = v62;
  v15[8] = v63;
  v15[v65[7]] = a4 <= a5;
  *(_QWORD *)&v15[v65[8]] = v61;
  *(_QWORD *)&v15[v65[9]] = v66;
  v67 = v93;
  sub_23DF73E10((uint64_t)v15, v93, type metadata accessor for KnobView);
  v68 = v67 + *(int *)(v91 + 36);
  *(_QWORD *)v68 = 0;
  *(double *)(v68 + 8) = a4;
  swift_retain();
  sub_23DF73E54((uint64_t)v15, type metadata accessor for KnobView);
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  v69 = v98;
  sub_23DF89C1C(v67, v98, &qword_256D1D9F8);
  v70 = (_OWORD *)(v69 + *(int *)(v94 + 36));
  v71 = v113;
  *v70 = v112;
  v70[1] = v71;
  v70[2] = v114;
  sub_23DF89C7C(v67, &qword_256D1D9F8);
  sub_23DF8E904(&qword_256D1DA30, &qword_256D1DA00, (uint64_t (*)(void))sub_23DF8DCB4, MEMORY[0x24BDEBEE0]);
  v72 = v100;
  sub_23E1369CC();
  KeyPath = swift_getKeyPath();
  v75 = v102;
  v74 = v103;
  v76 = (uint64_t)v99;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v72, v103);
  v77 = v76 + *(int *)(v106 + 36);
  *(_QWORD *)v77 = KeyPath;
  *(_BYTE *)(v77 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
  v78 = v105;
  sub_23DF89340(v76, v105, &qword_256D1D9F0);
  sub_23DF89C1C(v78, v108, &qword_256D1D9F0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA48);
  sub_23DF8DD38();
  sub_23DF8DDC4();
  v79 = (uint64_t)v97;
  sub_23E136480();
  sub_23DF89C7C(v78, &qword_256D1D9F0);
  v80 = v104;
  sub_23DF89340(v79, v104, &qword_256D1DA08);
  sub_23DF89C7C(v69, &qword_256D1DA00);
  v81 = v101;
  sub_23DF89340(v80, v101, &qword_256D1DA08);
  v82 = v110;
  v83 = v95;
  sub_23DF89C1C(v110, v95, &qword_256D1DA18);
  sub_23DF89C1C(v81, v80, &qword_256D1DA08);
  v84 = v109;
  sub_23DF89C1C(v83, v109, &qword_256D1DA18);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA60);
  sub_23DF89C1C(v80, v84 + *(int *)(v85 + 48), &qword_256D1DA08);
  swift_release();
  sub_23DF89C7C(v81, &qword_256D1DA08);
  sub_23DF89C7C(v82, &qword_256D1DA18);
  sub_23DF89C7C(v80, &qword_256D1DA08);
  return sub_23DF89C7C(v83, &qword_256D1DA18);
}

uint64_t sub_23DF8C484(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, double))
{
  double v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(double *)a1;
  v5 = *(unsigned __int8 *)(a1 + 8);
  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_23DF89F20(*(_QWORD *)a2, v7);
  v8 = sub_23DF9C59C(v6, v7);
  result = sub_23DF8A078(v6, v7);
  if ((v8 & 1) != 0)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        type metadata accessor for SwitchControlView(0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
        return sub_23E136DA4();
      }
    }
    else
    {
      type metadata accessor for SwitchControlView(0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
      v10 = sub_23E136DA4();
      return a3(v10, v4);
    }
  }
  return result;
}

uint64_t sub_23DF8C5C8(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint8_t *v9;
  BOOL *v10;
  void (*v11)(uint64_t);
  int v12;
  _QWORD v14[2];
  char v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_BYTE *)(a1 + 40);
  v14[0] = *(_QWORD *)(a1 + 24);
  v14[1] = v1;
  v15 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D948);
  MEMORY[0x24264B734](&v16, v3);
  v4 = v16;
  if (v16 != 2)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v5 = sub_23E135C10();
    __swift_project_value_buffer(v5, (uint64_t)qword_256D1EAC0);
    v6 = sub_23E135BF8();
    v7 = sub_23E137368();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (v4 & 1) == 0;
      v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v9 = 67109120;
      LODWORD(v14[0]) = v8;
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v6, v7, "SwitchView setting %{BOOL}d", v9, 8u);
      MEMORY[0x24264C628](v9, -1, -1);
    }

  }
  v11 = sub_23DF8AB30(v14);
  v12 = *v10;
  if (v12 != 2)
    *v10 = (v12 & 1) == 0;
  return ((uint64_t (*)(_QWORD *, _QWORD))v11)(v14, 0);
}

uint64_t sub_23DF8C748()
{
  return sub_23E136A2C();
}

uint64_t sub_23DF8C760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  double v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v2, (uint64_t)v6, type metadata accessor for SwitchControlView);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  sub_23DF89384((uint64_t)v6, v8 + v7, type metadata accessor for SwitchControlView);
  v9 = *(_QWORD *)v2;
  v10 = *(_BYTE *)(v2 + 8);
  sub_23DF89F20(v9, v10);
  v11 = sub_23DF9C59C(v9, v10);
  result = sub_23DF8A078(v9, v10);
  v13 = 0.5;
  if ((v11 & 1) != 0)
    v13 = 1.0;
  *(_QWORD *)a2 = sub_23DF8C85C;
  *(_QWORD *)(a2 + 8) = v8;
  *(double *)(a2 + 16) = v13;
  return result;
}

uint64_t sub_23DF8C85C(uint64_t a1)
{
  return sub_23DF8E8A8(a1, type metadata accessor for SwitchControlView, (uint64_t (*)(uint64_t, uint64_t))sub_23DF8AC10);
}

uint64_t sub_23DF8C870@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  char v34;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB30);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB38);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB40);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135E80();
  v13 = v12 * 0.05;
  v14 = type metadata accessor for KnobView(0);
  v15 = *(double *)(a1 + *(int *)(v14 + 36)) - v13;
  *v5 = sub_23E136FE4();
  v5[1] = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB48);
  sub_23DF8CB10(a1, (uint64_t)v5 + *(int *)(v17 + 44), v15);
  if (qword_256D1D210 != -1)
    swift_once();
  v18 = qword_256D345E0;
  v19 = *(int *)(v14 + 28);
  v20 = *(_BYTE *)(a1 + v19);
  sub_23DF89C1C((uint64_t)v5, (uint64_t)v8, &qword_256D1DB30);
  v21 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v21 = v18;
  v21[8] = v20;
  swift_retain();
  sub_23DF89C7C((uint64_t)v5, &qword_256D1DB30);
  v22 = sub_23E13672C();
  sub_23E135D00();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_23DF89C1C((uint64_t)v8, (uint64_t)v11, &qword_256D1DB38);
  v31 = &v11[*(int *)(v9 + 36)];
  *v31 = v22;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_23DF89C7C((uint64_t)v8, &qword_256D1DB38);
  v34 = *(_BYTE *)(a1 + v19);
  sub_23DF8E904(&qword_256D1DB50, &qword_256D1DB40, (uint64_t (*)(void))sub_23DF8E96C, MEMORY[0x24BDECC60]);
  sub_23E136B88();
  return sub_23DF89C7C((uint64_t)v11, &qword_256D1DB40);
}

uint64_t sub_23DF8CB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB78);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v36 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v34 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = type metadata accessor for IconDescriptor();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v34 - v19;
  v21 = (int *)type metadata accessor for KnobView(0);
  v22 = a1 + v21[6];
  sub_23DF73E10(v22, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v23 = *(unsigned __int8 *)(a1 + 8);
  v24 = *(unsigned __int8 *)(a1 + v21[7]);
  v25 = sub_23E136C48();
  v26 = *(_QWORD *)(a1 + v21[8]);
  sub_23DF8CDE0(v23, v24, v25, v26, (uint64_t)v14, a3);
  swift_release();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  sub_23DF73E10(v22 + *(int *)(v27 + 28), (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  sub_23E136C24();
  v28 = sub_23E136C60();
  swift_release();
  sub_23DF8CDE0(v23, v24 ^ 1, v26, v28, (uint64_t)v12, a3);
  swift_release();
  v29 = v35;
  sub_23DF89C1C((uint64_t)v14, v35, &qword_256D1DB78);
  v30 = v36;
  sub_23DF89C1C((uint64_t)v12, v36, &qword_256D1DB78);
  v31 = v37;
  sub_23DF89C1C(v29, v37, &qword_256D1DB78);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB80);
  sub_23DF89C1C(v30, v31 + *(int *)(v32 + 48), &qword_256D1DB78);
  sub_23DF89C7C((uint64_t)v12, &qword_256D1DB78);
  sub_23DF73E54((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  sub_23DF89C7C((uint64_t)v14, &qword_256D1DB78);
  sub_23DF73E54((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  sub_23DF89C7C(v30, &qword_256D1DB78);
  return sub_23DF89C7C(v29, &qword_256D1DB78);
}

uint64_t sub_23DF8CDE0@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v47 = a3;
  v48 = a4;
  v49 = a2;
  v46 = a1;
  v50 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB88);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (double *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB90);
  MEMORY[0x24BDAC7A8](v44);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB98);
  MEMORY[0x24BDAC7A8](v45);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (char *)v13 + *(int *)(v11 + 20);
  v19 = *MEMORY[0x24BDEEB68];
  v20 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  *v13 = a6;
  v13[1] = a6;
  v21 = sub_23E136FE4();
  v42 = v22;
  v43 = v21;
  swift_bridgeObjectRetain();
  sub_23E136CB4();
  type metadata accessor for IconDescriptor();
  sub_23E1358F8();
  v23 = sub_23E1363B4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
  v41 = sub_23E136CE4();
  swift_release();
  sub_23DF89C7C((uint64_t)v10, &qword_256D1DB88);
  if (qword_256D1D208 != -1)
    swift_once();
  v24 = qword_256D345D8;
  KeyPath = swift_getKeyPath();
  v26 = *v6;
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  swift_retain();
  v27 = sub_23E1360CC();
  v29 = v28;
  v30 = swift_getKeyPath();
  v31 = MEMORY[0x24BDED998];
  sub_23DF73E10((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v32 = &v15[*(int *)(v44 + 36)];
  *(_QWORD *)v32 = v41;
  *((_QWORD *)v32 + 1) = KeyPath;
  *((_QWORD *)v32 + 2) = v24;
  *((_QWORD *)v32 + 3) = v27;
  *((_QWORD *)v32 + 4) = v29;
  *((_QWORD *)v32 + 5) = v26;
  v32[48] = v46 & 1;
  v33 = v47;
  *((_QWORD *)v32 + 7) = v30;
  *((_QWORD *)v32 + 8) = v33;
  v34 = v42;
  *((_QWORD *)v32 + 9) = v43;
  *((_QWORD *)v32 + 10) = v34;
  swift_retain();
  sub_23DF73E54((uint64_t)v13, (uint64_t (*)(_QWORD))v31);
  v35 = swift_getKeyPath();
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v17, &qword_256D1DB90);
  v36 = (uint64_t *)&v17[*(int *)(v45 + 36)];
  v37 = v48;
  *v36 = v35;
  v36[1] = v37;
  swift_retain();
  sub_23DF89C7C((uint64_t)v15, &qword_256D1DB90);
  if ((v49 & 1) != 0)
    v38 = 1.0;
  else
    v38 = 0.0;
  v39 = v50;
  sub_23DF89C1C((uint64_t)v17, v50, &qword_256D1DB98);
  *(double *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB78) + 36)) = v38;
  return sub_23DF89C7C((uint64_t)v17, &qword_256D1DB98);
}

id sub_23DF8D188()
{
  void *v0;

  if (qword_256D1D200 != -1)
    swift_once();
  v0 = (void *)qword_256D345D0;
  objc_msgSend((id)qword_256D345D0, sel_impactOccurred);
  return objc_msgSend(v0, sel_prepare);
}

uint64_t sub_23DF8D1EC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_23DF73E10(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for KnobView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_23DF89384((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for KnobView);
  *a2 = sub_23DF8E894;
  a2[1] = (uint64_t (*)(uint64_t))v7;
  return result;
}

id sub_23DF8D2A0()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6AF0]), sel_init);
  result = objc_msgSend(v0, sel_prepare);
  qword_256D345D0 = (uint64_t)v0;
  return result;
}

uint64_t sub_23DF8D2E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1367E0();
  v3 = sub_23E1367C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = sub_23E136804();
  result = sub_23DF89C7C((uint64_t)v2, &qword_256D1DBA0);
  qword_256D345D8 = v4;
  return result;
}

uint64_t sub_23DF8D3A4()
{
  uint64_t result;

  result = sub_23E136FFC();
  qword_256D345E0 = result;
  return result;
}

uint64_t sub_23DF8D3DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for SwitchControlView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  sub_23DF8A078(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(v1 + 36);
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for IconDescriptor();
  v5 = v3 + *(int *)(v4 + 20);
  v6 = sub_23E135910();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v7(v8 + *(int *)(v4 + 20), v6);
  v9 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  swift_release();
  v10 = v3 + *(int *)(v9 + 24);
  type metadata accessor for ControlTextModifier.Config(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v12 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v13 = sub_23E134C20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF8D574(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwitchControlView(0) - 8) + 80);
  return sub_23DF8B920(v1 + ((v3 + 24) & ~v3), a1, *(double *)(v1 + 16));
}

uint64_t sub_23DF8D5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for SwitchControlView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  sub_23DF8A078(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(v1 + 36);
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for IconDescriptor();
  v5 = v3 + *(int *)(v4 + 20);
  v6 = sub_23E135910();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v7(v8 + *(int *)(v4 + 20), v6);
  v9 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  swift_release();
  v10 = v3 + *(int *)(v9 + 24);
  type metadata accessor for ControlTextModifier.Config(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v12 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v13 = sub_23E134C20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF8D764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SwitchControlView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23DF8C484(a1, v1 + v4, *(uint64_t (**)(uint64_t, double))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for SwitchControlView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  sub_23DF8A078(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(v1 + 36);
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for IconDescriptor();
  v5 = v3 + *(int *)(v4 + 20);
  v6 = sub_23E135910();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v7(v8 + *(int *)(v4 + 20), v6);
  v9 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  swift_release();
  v10 = v3 + *(int *)(v9 + 24);
  type metadata accessor for ControlTextModifier.Config(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v12 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v13 = sub_23E134C20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF8D954()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwitchControlView(0) - 8) + 80);
  return sub_23DF8C5C8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_23DF8D980()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF8D9A4()
{
  uint64_t v0;

  return sub_23DFF9A54(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t sub_23DF8D9B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1D970;
  if (!qword_256D1D970)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D918);
    v2[0] = sub_23DF8DA20();
    v2[1] = sub_23DF8DABC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1D970);
  }
  return result;
}

unint64_t sub_23DF8DA20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1D978;
  if (!qword_256D1D978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D928);
    v2[0] = sub_23DF89B88(&qword_256D1D980, &qword_256D1D920, MEMORY[0x24BDF4750]);
    v2[1] = sub_23DF73F28(&qword_256D1D988, type metadata accessor for ValueThrottleModifier, (uint64_t)&protocol conformance descriptor for ValueThrottleModifier);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1D978);
  }
  return result;
}

unint64_t sub_23DF8DABC()
{
  unint64_t result;

  result = qword_256D1D990;
  if (!qword_256D1D990)
  {
    result = MEMORY[0x24264C55C](&unk_23E13BA00, &type metadata for AlwaysEnabledTapGestureModifier);
    atomic_store(result, (unint64_t *)&qword_256D1D990);
  }
  return result;
}

unint64_t sub_23DF8DB00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D1D998;
  if (!qword_256D1D998)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D968);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D928);
    v2[3] = sub_23DF8DA20();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1D998);
  }
  return result;
}

unint64_t sub_23DF8DBAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1D9B0;
  if (!qword_256D1D9B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D930);
    v2[0] = sub_23DF8D9B4();
    v2[1] = sub_23DF8DB00();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1D9B0);
  }
  return result;
}

unint64_t sub_23DF8DC18()
{
  unint64_t result;

  result = qword_256D1D9B8;
  if (!qword_256D1D9B8)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256D1D9B8);
  }
  return result;
}

uint64_t type metadata accessor for KnobView(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D1DAC0);
}

uint64_t sub_23DF8DC70(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23DF8DCB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DA38;
  if (!qword_256D1DA38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9F8);
    v2[0] = sub_23DF73F28(&qword_256D1DA40, type metadata accessor for KnobView, (uint64_t)&unk_23E13858C);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DA38);
  }
  return result;
}

unint64_t sub_23DF8DD38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DA50;
  if (!qword_256D1DA50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DA48);
    v2[0] = sub_23DF8E904(&qword_256D1DA30, &qword_256D1DA00, (uint64_t (*)(void))sub_23DF8DCB4, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_23DF8DABC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DA50);
  }
  return result;
}

unint64_t sub_23DF8DDC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D1DA58;
  if (!qword_256D1DA58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9F0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DA00);
    v2[3] = sub_23DF8E904(&qword_256D1DA30, &qword_256D1DA00, (uint64_t (*)(void))sub_23DF8DCB4, MEMORY[0x24BDEBEE0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DA58);
  }
  return result;
}

_QWORD *sub_23DF8DE98(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[6];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t)a2 + v7;
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    v27 = type metadata accessor for IconDescriptor();
    v11 = *(int *)(v27 + 20);
    v12 = (char *)v8 + v11;
    v13 = (char *)(v9 + v11);
    v14 = sub_23E135910();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v16 = v15;
    v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
    v18 = (_QWORD *)((char *)v8 + v17);
    v19 = (_QWORD *)(v9 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = *(int *)(v27 + 20);
    v22 = (char *)v18 + v21;
    v23 = (char *)v19 + v21;
    swift_bridgeObjectRetain();
    v16(v22, v23, v14);
    v24 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)v4 + v24) = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_23DF8DFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v2 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for IconDescriptor();
  v4 = v2 + *(int *)(v3 + 20);
  v5 = sub_23E135910();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v6(v7 + *(int *)(v3 + 20), v5);
  return swift_release();
}

uint64_t sub_23DF8E094(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  v25 = type metadata accessor for IconDescriptor();
  v10 = *(int *)(v25 + 20);
  v11 = (char *)v7 + v10;
  v12 = (char *)(v8 + v10);
  v13 = sub_23E135910();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v15 = v14;
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v17 = (_QWORD *)((char *)v7 + v16);
  v18 = (_QWORD *)(v8 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = *(int *)(v25 + 20);
  v21 = (char *)v17 + v20;
  v22 = (char *)v18 + v20;
  swift_bridgeObjectRetain();
  v15(v21, v22, v13);
  v23 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  return a1;
}

uint64_t sub_23DF8E1B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = *(_QWORD *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for IconDescriptor();
  v10 = *(int *)(v9 + 20);
  v11 = (char *)v7 + v10;
  v12 = v8 + v10;
  v13 = sub_23E135910();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v16 = (char *)v7 + v15;
  v17 = v8 + v15;
  *(_QWORD *)v16 = *(_QWORD *)(v8 + v15);
  *((_QWORD *)v16 + 1) = *(_QWORD *)(v8 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14(&v16[*(int *)(v9 + 20)], v17 + *(int *)(v9 + 20), v13);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_23DF8E2F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = type metadata accessor for IconDescriptor();
  v10 = *(int *)(v9 + 20);
  v11 = (char *)(v7 + v10);
  v12 = (char *)(v8 + v10);
  v13 = sub_23E135910();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v16 = (char *)(v7 + v15);
  v17 = (char *)(v8 + v15);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v14(&v16[*(int *)(v9 + 20)], &v17[*(int *)(v9 + 20)], v13);
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_23DF8E3F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for IconDescriptor();
  v11 = *(int *)(v10 + 20);
  v12 = (char *)v7 + v11;
  v13 = v8 + v11;
  v14 = sub_23E135910();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v17 = (char *)v7 + v16;
  v18 = v8 + v16;
  v19 = *(_QWORD *)(v8 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(v8 + v16);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v15(&v17[*(int *)(v10 + 20)], v18 + *(int *)(v10 + 20), v14);
  v20 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_23DF8E508()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF8E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23DF8E598()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF8E5A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_23DF8E624()
{
  unint64_t v0;

  sub_23DF8E6BC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23DF8E6BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_256D1DAD0)
  {
    v2 = type metadata accessor for IconDescriptor();
    v5 = type metadata accessor for StateDependentValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_256D1DAD0);
  }
}

unint64_t sub_23DF8E714()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DB10;
  if (!qword_256D1DB10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DB18);
    v2[0] = sub_23DF89B88(&qword_256D1DB20, &qword_256D1DB28, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DB10);
  }
  return result;
}

uint64_t sub_23DF8E798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF8E7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v1 = type metadata accessor for KnobView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for IconDescriptor();
  v5 = v3 + *(int *)(v4 + 20);
  v6 = sub_23E135910();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v7(v8 + *(int *)(v4 + 20), v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF8E894(uint64_t a1)
{
  return sub_23DF8E8A8(a1, type metadata accessor for KnobView, (uint64_t (*)(uint64_t, uint64_t))sub_23DF8C870);
}

uint64_t sub_23DF8E8A8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t sub_23DF8E904(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DF8E96C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DB58;
  if (!qword_256D1DB58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DB38);
    v2[0] = sub_23DF89B88(&qword_256D1DB60, &qword_256D1DB30, MEMORY[0x24BDF4750]);
    v2[1] = sub_23DF89B88(&qword_256D1DB68, &qword_256D1DB70, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DB58);
  }
  return result;
}

uint64_t sub_23DF8EA18()
{
  return sub_23DF89B88(&qword_256D1DBA8, qword_256D1DBB0, MEMORY[0x24BDEC6F8]);
}

uint64_t StateDependentValue.value(for:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if ((a1 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3);
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 16))(a3, v3 + *(int *)(a2 + 28));
}

uint64_t static StateDependentValue.static<A>(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - v10;
  v12 = *(void (**)(char *, uint64_t))(v6 + 16);
  v12((char *)&v18 - v10, a1);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v9, a1, a2);
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v13(a3, v11, a2);
  v16 = type metadata accessor for StateDependentValue(0, a2, v14, v15);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a3 + *(int *)(v16 + 28), v9, a2);
}

uint64_t StateDependentValue.init(on:off:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v11(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for StateDependentValue(0, a3, v7, v8) + 28);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v9, a2, a3);
}

uint64_t type metadata accessor for StateDependentValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateDependentValue);
}

uint64_t StateDependentValue.on.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t StateDependentValue.off.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t StateDependentValue<A>.hash(into:)()
{
  sub_23E13711C();
  return sub_23E13711C();
}

uint64_t StateDependentValue<A>.hashValue.getter()
{
  sub_23E137698();
  sub_23E13711C();
  sub_23E13711C();
  return sub_23E1376D4();
}

uint64_t sub_23DF8ECD8()
{
  return StateDependentValue<A>.hashValue.getter();
}

uint64_t sub_23DF8ECE0()
{
  return StateDependentValue<A>.hash(into:)();
}

uint64_t sub_23DF8ECE8()
{
  sub_23E137698();
  StateDependentValue<A>.hash(into:)();
  return sub_23E1376D4();
}

uint64_t static StateDependentValue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  if ((sub_23E137158() & 1) == 0)
    return 0;
  type metadata accessor for StateDependentValue(0, a3, v4, v5);
  return sub_23E137158() & 1;
}

uint64_t sub_23DF8EDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x24264C55C](&protocol conformance descriptor for <A> StateDependentValue<A>, a1, &v4);
}

uint64_t sub_23DF8EDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static StateDependentValue<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_23DF8EDE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23DF8EDEC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23DF8EE58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, *(_QWORD *)(a3 + 16));
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_23DF8EF0C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_23DF8EF74(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_23DF8EFE0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_23DF8F04C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_23DF8F0B8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_23DF8F124(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23DF8F1E4 + 4 * byte_23E138640[(v7 - 1)]))();
}

void sub_23DF8F234(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24264C4D8](a1, v6, a5);
}

_QWORD *_s9ColorLensVwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s9ColorLensVwxx()
{
  return swift_release();
}

_QWORD *_s9ColorLensVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *_s9ColorLensVwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s9ColorLensVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s9ColorLensVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s9ColorLensVMa()
{
  return &_s9ColorLensVN;
}

uint64_t sub_23DF8F584()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_23DF8F594()
{
  qword_256D345E8 = 0x4008000000000000;
}

void sub_23DF8F5A4()
{
  qword_256D345F0 = 0x4008000000000000;
}

uint64_t sub_23DF8F5B4()
{
  uint64_t result;

  result = sub_23E136C48();
  qword_256D345F8 = result;
  return result;
}

uint64_t sub_23DF8F5D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1)
    KeyPath = swift_getKeyPath();
  else
    KeyPath = 0;
  v5 = qword_256D1D218;
  swift_retain();
  if (v5 != -1)
    swift_once();
  sub_23E135DCC();
  if (qword_256D1D228 != -1)
    swift_once();
  v6 = qword_256D345F8;
  v7 = swift_getKeyPath();
  *a2 = KeyPath;
  a2[1] = a1;
  a2[2] = v9;
  a2[3] = v10;
  a2[4] = v11;
  a2[5] = v12;
  a2[6] = v13;
  a2[7] = v7;
  a2[8] = v6;
  sub_23DF8F8A4(KeyPath);
  swift_retain();
  return sub_23DF8F8D4(KeyPath);
}

uint64_t sub_23DF8F70C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[9];
  char v31;

  v3 = sub_23E136BD0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = sub_23E136FE4();
  v29 = v9;
  sub_23DF8F5D0(v7, v30);
  v10 = v30[0];
  v11 = v30[1];
  v12 = v30[2];
  v13 = v30[3];
  v14 = v30[4];
  v15 = v30[5];
  v16 = v30[6];
  v17 = v30[7];
  v18 = v30[8];
  if (qword_256D1D220 != -1)
    swift_once();
  v19 = qword_256D345F0;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF3C18], v3);
  v20 = sub_23E136C9C();
  v21 = sub_23E13672C();
  result = sub_23E135D00();
  v31 = 0;
  v23 = v29;
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v23;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v18;
  *(_QWORD *)(a1 + 88) = v20;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = v21;
  *(_DWORD *)(a1 + 124) = *(_DWORD *)((char *)v30 + 3);
  *(_DWORD *)(a1 + 121) = v30[0];
  *(_QWORD *)(a1 + 128) = v24;
  *(_QWORD *)(a1 + 136) = v25;
  *(_QWORD *)(a1 + 144) = v26;
  *(_QWORD *)(a1 + 152) = v27;
  *(_BYTE *)(a1 + 160) = v31;
  return result;
}

uint64_t sub_23DF8F8A4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23DF8F8D4(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23DF8F900()
{
  return sub_23DF8E904(&qword_256D1DC38, &qword_256D1DC40, sub_23DF8F934, MEMORY[0x24BDECC60]);
}

uint64_t sub_23DF8F934()
{
  return sub_23DF8E904(&qword_256D1DC48, &qword_256D1DC50, (uint64_t (*)(void))sub_23DF8F958, MEMORY[0x24BDEC468]);
}

unint64_t sub_23DF8F958()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1DC58;
  if (!qword_256D1DC58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DC60);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_256D1DC58);
  }
  return result;
}

BOOL sub_23DF8F9A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s22HomeAccessoryControlUI0B13ControlsStyleV010BackgroundF0O9hashValueSivg_0()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23DF8FA00()
{
  return sub_23E1376A4();
}

uint64_t sub_23DF8FA28()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23DF8FA68()
{
  return sub_23DF8FAB8();
}

uint64_t sub_23DF8FA7C()
{
  return sub_23DF8FAB8();
}

uint64_t sub_23DF8FA90()
{
  return sub_23DF8FAB8();
}

uint64_t sub_23DF8FAA4()
{
  return sub_23DF8FAB8();
}

uint64_t sub_23DF8FAB8()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

double sub_23DF8FB20()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23DF8FB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  if (MEMORY[0x24264C6DC](v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
    swift_unknownObjectRelease();
  }
  if (qword_256D1D260 != -1)
    swift_once();
  sub_23E135EEC();
  if (qword_256D1D250 != -1)
    swift_once();
  sub_23E135EEC();
  if (qword_256D1D240 != -1)
    swift_once();
  sub_23E135EEC();
  if (qword_256D1D230 != -1)
    swift_once();
  MEMORY[0x24BDAC7A8](qword_256D34600);
  return sub_23E135EEC();
}

uint64_t sub_23DF8FD3C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23E135C88();
}

uint64_t sub_23DF8FDAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23E135C88();
}

uint64_t sub_23DF8FE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t ObjectType;
  double v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v31 = a2;
  v32 = a3;
  v4 = sub_23E1370B0();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E1370D4();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1370EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = 0;
  swift_retain();
  sub_23E135C88();
  v16 = *(unsigned __int8 *)(a1 + 41);
  if (MEMORY[0x24264C6DC](a1 + 16))
  {
    v17 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v17 + 32))(ObjectType, v17);
    swift_unknownObjectRelease();
  }
  if (v16)
    v19 = 0.0;
  else
    v19 = 0.4939;
  sub_23DF975A0();
  v20 = (void *)sub_23E1373BC();
  sub_23E1370E0();
  MEMORY[0x24264B9C8](v13, v19);
  v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  v30(v13, v9);
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  *(_BYTE *)(v22 + 24) = v16;
  v24 = v31;
  v23 = v32;
  *(_QWORD *)(v22 + 32) = v31;
  *(_QWORD *)(v22 + 40) = v23;
  aBlock[4] = sub_23DF97634;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23DFA4B54;
  aBlock[3] = &block_descriptor;
  v25 = _Block_copy(aBlock);
  sub_23DF9765C(v24);
  swift_release();
  sub_23E1370BC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23DF73F28((unint64_t *)&unk_256D1EA10, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFC8);
  sub_23DF89B88(&qword_256D1EA20, &qword_256D1DFC8, MEMORY[0x24BEE12C8]);
  v26 = v33;
  v27 = v37;
  sub_23E1374F4();
  MEMORY[0x24264BC5C](v15, v8, v26, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
  return ((uint64_t (*)(char *, uint64_t))v30)(v15, v9);
}

uint64_t sub_23DF90184(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  void (*v14)(_QWORD, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    v10 = MEMORY[0x24264C6DC](result + 16);
    v11 = *(_QWORD *)(v9 + 24);
    result = swift_release();
    if (v10)
    {
      ObjectType = swift_getObjectType();
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = a1;
      v13[3] = a3;
      v13[4] = a4;
      v14 = *(void (**)(_QWORD, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v11 + 24);
      swift_retain();
      sub_23DF9765C(a3);
      v14(a2 & 1, sub_23DF976A0, v13, ObjectType, v11);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_23DF9028C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = MEMORY[0x24264C6DC](result + 16);
    v6 = *(_QWORD *)(v4 + 24);
    result = swift_release();
    if (v5)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
      result = swift_unknownObjectRelease();
    }
  }
  if (a2)
    return a2(result);
  return result;
}

uint64_t sub_23DF90330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  sub_23DF977E0(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldShowControlView;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFD0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldTurnOnTileTextVisibility, v2);
  v3(v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldShowBackground, v2);
  v3(v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldShowHeaderFooter, v2);
  v4 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__swipeDismissOffset;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_23DF90400()
{
  return type metadata accessor for AnimationModel();
}

uint64_t type metadata accessor for AnimationModel()
{
  uint64_t result;

  result = qword_256D1DCB8;
  if (!qword_256D1DCB8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DF90444()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DF90518(319, &qword_256D1DCC8);
  if (v0 <= 0x3F)
  {
    sub_23DF90518(319, qword_256D1DCD0);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_23DF90518(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23E135CA0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AnimationModel.TranistionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.TranistionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23DF90644 + 4 * byte_23E138845[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23DF90678 + 4 * byte_23E138840[v4]))();
}

uint64_t sub_23DF90678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DF90680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DF90688);
  return result;
}

uint64_t sub_23DF90694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DF9069CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23DF906A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DF906A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DF906B4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23DF906BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.TranistionType()
{
  return &type metadata for AnimationModel.TranistionType;
}

ValueMetadata *type metadata accessor for AnimationModel.BackgroundTapDismissal()
{
  return &type metadata for AnimationModel.BackgroundTapDismissal;
}

uint64_t destroy for AnimationModel.Visibility.DimmingView()
{
  return swift_release();
}

uint64_t initializeWithCopy for AnimationModel.Visibility.DimmingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AnimationModel.Visibility.DimmingView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for AnimationModel.Visibility.DimmingView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModel.Visibility.DimmingView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.Visibility.DimmingView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.DimmingView()
{
  return &type metadata for AnimationModel.Visibility.DimmingView;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility()
{
  return &type metadata for AnimationModel.Visibility;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.TileTextView()
{
  return &type metadata for AnimationModel.Visibility.TileTextView;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect;
}

uint64_t initializeWithCopy for AnimationModel.MatchedGeometryEffect.Icon(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnimationModel.MatchedGeometryEffect.Icon(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnimationModel.MatchedGeometryEffect.Icon(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModel.MatchedGeometryEffect.Icon(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.MatchedGeometryEffect.Icon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect.Icon()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect.Icon;
}

uint64_t sub_23DF90A70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF90A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFD8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 32) = 0;
  *(_WORD *)(v0 + 40) = 2;
  v9 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldShowControlView;
  v20 = 0;
  sub_23E135C64();
  v10 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v10(v9, v8, v5);
  v11 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldTurnOnTileTextVisibility;
  v19 = 1;
  sub_23E135C64();
  v10(v11, v8, v5);
  v12 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldShowBackground;
  v18 = 0;
  sub_23E135C64();
  v10(v12, v8, v5);
  v13 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__shouldShowHeaderFooter;
  v17 = 0;
  sub_23E135C64();
  v10(v13, v8, v5);
  v14 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI14AnimationModel__swipeDismissOffset;
  v16 = 0;
  sub_23E135C64();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v14, v4, v1);
  return v0;
}

uint64_t sub_23DF90C60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AnimationModel();
  result = sub_23E135C40();
  *a1 = result;
  return result;
}

uint64_t sub_23DF90C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E010);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E018);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E020);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v15(v8, a1, v5);
      v15(v11, (uint64_t)v8, v5);
      swift_storeEnumTagMultiPayload();
      sub_23DF97CF0();
      sub_23DF89B88(&qword_256D1E030, &qword_256D1E010, MEMORY[0x24BDEFB78]);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v19 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v14, a1, v5);
        v17 = 0;
      }
      else
      {
        v17 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, v17, 1, v5);
      sub_23DF89C1C((uint64_t)v14, (uint64_t)v11, &qword_256D1E020);
      swift_storeEnumTagMultiPayload();
      sub_23DF97CF0();
      sub_23DF89B88(&qword_256D1E030, &qword_256D1E010, MEMORY[0x24BDEFB78]);
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v14, &qword_256D1E020);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF90F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF90C9C(a1, *v2, a2);
}

uint64_t sub_23DF90F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t (**v20)();
  _QWORD v21[2];

  v21[1] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E1E8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E1F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E1F8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v17(v10, a1, v7);
      v17(v13, (uint64_t)v10, v7);
      swift_storeEnumTagMultiPayload();
      sub_23DF98D5C();
      sub_23DF89B88(&qword_256D1E208, &qword_256D1E1E8, MEMORY[0x24BDEFB78]);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = a2;
      *(_QWORD *)(v19 + 24) = a3;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, a1, v7);
      v20 = (uint64_t (**)())&v16[*(int *)(v14 + 36)];
      *v20 = sub_23DF98D54;
      v20[1] = (uint64_t (*)())v19;
      v20[2] = 0;
      v20[3] = 0;
      sub_23DF89C1C((uint64_t)v16, (uint64_t)v13, &qword_256D1E1F8);
      swift_storeEnumTagMultiPayload();
      sub_23DF98D5C();
      sub_23DF89B88(&qword_256D1E208, &qword_256D1E1E8, MEMORY[0x24BDEFB78]);
      swift_retain();
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v16, &qword_256D1E1F8);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF91234()
{
  if (qword_256D1D248 != -1)
    swift_once();
  MEMORY[0x24BDAC7A8](qword_256D34618);
  sub_23E135EEC();
  if (qword_256D1D258 != -1)
    swift_once();
  MEMORY[0x24BDAC7A8](qword_256D34628);
  return sub_23E135EEC();
}

uint64_t sub_23DF91344(uint64_t a1)
{
  uint64_t result;

  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_23E135C88();
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF913FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF90F90(a1, *v2, v2[1], a2);
}

uint64_t sub_23DF91404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t (**v20)();
  _QWORD v21[2];

  v21[1] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E050);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E058);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E060);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v17(v10, a1, v7);
      v17(v13, (uint64_t)v10, v7);
      swift_storeEnumTagMultiPayload();
      sub_23DF97DA4();
      sub_23DF89B88(&qword_256D1E070, &qword_256D1E050, MEMORY[0x24BDEFB78]);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = a2;
      *(_QWORD *)(v19 + 24) = a3;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, a1, v7);
      v20 = (uint64_t (**)())&v16[*(int *)(v14 + 36)];
      *v20 = sub_23DF97D6C;
      v20[1] = (uint64_t (*)())v19;
      v20[2] = 0;
      v20[3] = 0;
      sub_23DF89C1C((uint64_t)v16, (uint64_t)v13, &qword_256D1E060);
      swift_storeEnumTagMultiPayload();
      sub_23DF97DA4();
      sub_23DF89B88(&qword_256D1E070, &qword_256D1E050, MEMORY[0x24BDEFB78]);
      swift_retain();
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v16, &qword_256D1E060);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF916A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF91404(a1, *v2, v2[1], a2);
}

uint64_t sub_23DF916B0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  if (a1)
  {
    if (*(_BYTE *)(a1 + 40) == 2)
    {
      result = MEMORY[0x24264C6DC](a1 + 16);
      if (result)
      {
        v3 = *(_QWORD *)(a1 + 24);
        ObjectType = swift_getObjectType();
        v5 = *(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 24);
        swift_retain();
        v5(0, 0, 0, ObjectType, v3);
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_retain();
      sub_23DF8FB90();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF917BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  v1 = v0[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF00);
  sub_23DF89B88(&qword_256D1DF08, &qword_256D1DF00, MEMORY[0x24BDEFB78]);
  sub_23E1369CC();
  return swift_release();
}

uint64_t sub_23DF91868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E038);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E040);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v11 = v19;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E048);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, a1, v12);
    v13 = &v7[*(int *)(v5 + 36)];
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = v11;
    v14 = sub_23E13702C();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v15 = v19;
    sub_23DF89C1C((uint64_t)v7, (uint64_t)v10, &qword_256D1E038);
    v16 = (uint64_t *)&v10[*(int *)(v8 + 36)];
    *v16 = v14;
    v16[1] = v15;
    sub_23DF89C7C((uint64_t)v7, &qword_256D1E038);
    return sub_23DF89340((uint64_t)v10, v18, &qword_256D1E040);
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF91AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[64];
  double v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;

  v67 = a1;
  v72 = a2;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E290);
  v68 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v65 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E298);
  MEMORY[0x24BDAC7A8](v69);
  v71 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E2A0);
  MEMORY[0x24BDAC7A8](v61);
  v64 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E2A8);
  v6 = MEMORY[0x24BDAC7A8](v70);
  v62 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t)&v60 - v8;
  v9 = *v2;
  v60 = *((_QWORD *)v2 + 1);
  v10 = *((_QWORD *)v2 + 2);
  v83 = *((_QWORD *)v2 + 3);
  v11 = *((_QWORD *)v2 + 4);
  v12 = *((_QWORD *)v2 + 5);
  v14 = *((_QWORD *)v2 + 6);
  v13 = *((_QWORD *)v2 + 7);
  v15 = *((_QWORD *)v2 + 8);
  v16 = *((_QWORD *)v2 + 9);
  v17 = *((unsigned __int8 *)v2 + 80);
  v18 = *((unsigned __int8 *)v2 + 81);
  v19 = v2[11];
  v20 = v2[12];
  v87 = v10;
  v88 = v83;
  v89 = v11;
  v90 = v12;
  v91 = v14;
  v92 = v13;
  v93 = v15;
  v94 = v16;
  v95 = v17;
  v96 = v18;
  v81 = v9;
  swift_retain();
  v21 = v83;
  sub_23DF98590(v10, v83, v11, v12, v14, v13, v15, v16, v17, v18);
  sub_23DF98590(v10, v21, v11, v12, v14, v13, v15, v16, v17, v18);
  sub_23DF9C754((uint64_t)&v85);
  v22 = v16;
  v73 = v18;
  v80 = v17;
  v74 = v10;
  v75 = v11;
  v76 = v12;
  v78 = v14;
  v79 = v13;
  v82 = v15;
  sub_23DF985F0(v10, v83, v11, v12, v14, v13, v15, v16, v17, v18);
  if (v86 != 1)
  {
    swift_release();
    sub_23DF985F0(v74, v83, v75, v76, v78, v79, v82, v16, v80, v73);
    goto LABEL_13;
  }
  swift_retain();
  v23 = v73;
  v24 = v80;
  v25 = v74;
  v26 = v83;
  v27 = v75;
  v28 = v76;
  v29 = v78;
  v30 = v79;
  v31 = v82;
  sub_23DF98590(v74, v83, v75, v76, v78, v79, v82, v22, v80, v73);
  sub_23DF98590(v25, v26, v27, v28, v29, v30, v31, v22, v24, v23);
  v66 = v22;
  sub_23DF9C754((uint64_t)v84);
  v59 = v24;
  v32 = v26;
  v33 = v26;
  v34 = v27;
  v35 = v82;
  sub_23DF985F0(v25, v32, v27, v28, v29, v30, v82, v66, v59, v23);
  swift_release();
  LOBYTE(v27) = v80;
  v36 = v35;
  v37 = v66;
  sub_23DF985F0(v25, v33, v34, v28, v29, v30, v36, v66, v80, v23);
  swift_release();
  sub_23DF985F0(v25, v33, v34, v28, v29, v30, v82, v37, v27, v23);
  if ((v84[56] & 2) == 0)
  {
LABEL_13:
    v55 = v68;
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    v57 = v65;
    v58 = v77;
    v56(v65, v67, v77);
    v56(v71, (uint64_t)v57, v58);
    swift_storeEnumTagMultiPayload();
    sub_23DF8E904(&qword_256D1E2B0, &qword_256D1E2A8, (uint64_t (*)(void))sub_23DF9915C, MEMORY[0x24BDECC38]);
    sub_23DF89B88(&qword_256D1E2C0, &qword_256D1E290, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v57, v58);
  }
  if (v81 == 0.0)
  {
    swift_retain();
    sub_23DF98590(v74, v83, v75, v76, v78, v79, v82, v66, v80, v73);
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v38 = -v85;
    v39 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v64, v67, v77);
    v40 = v39 + *(int *)(v61 + 36);
    *(_QWORD *)v40 = 0;
    *(double *)(v40 + 8) = v38;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    v41 = v73;
    v42 = v80;
    v43 = v74;
    v44 = v83;
    v45 = v75;
    v46 = v76;
    v47 = v66;
    sub_23DF98590(v74, v83, v75, v76, v78, v79, v82, v66, v80, v73);
    swift_retain();
    sub_23E135C7C();
    swift_release_n();
    swift_release();
    swift_release();
    sub_23DF985F0(v43, v44, v45, v46, v78, v79, v82, v47, v42, v41);
    v48 = 0.0;
    if (v85 / v20 >= 0.0)
      v48 = v85 / v20;
    if (v85 / v20 <= 1.0)
      v49 = v48;
    else
      v49 = 1.0;
    v50 = 1.0 - (1.0 - v19) * v49;
    if (v50 > v19)
      v19 = v50;
    v51 = v64;
    v52 = v62;
    sub_23DF89C1C(v64, v62, &qword_256D1E2A0);
    *(double *)(v52 + *(int *)(v70 + 36)) = v19;
    sub_23DF89C7C(v51, &qword_256D1E2A0);
    v53 = v63;
    sub_23DF89340(v52, v63, &qword_256D1E2A8);
    sub_23DF89C1C(v53, (uint64_t)v71, &qword_256D1E2A8);
    swift_storeEnumTagMultiPayload();
    sub_23DF8E904(&qword_256D1E2B0, &qword_256D1E2A8, (uint64_t (*)(void))sub_23DF9915C, MEMORY[0x24BDECC38]);
    sub_23DF89B88(&qword_256D1E2C0, &qword_256D1E290, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return sub_23DF89C7C(v53, &qword_256D1E2A8);
  }
  return result;
}

uint64_t sub_23DF92480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF91868(a1, *v2, a2);
}

uint64_t sub_23DF92488@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD v25[2];

  v25[0] = a3;
  v25[1] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E490);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E498);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E4A0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v15 = sub_23E1360CC();
  v17 = v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E4A8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  if ((a2 & 1) != 0)
  {
    v19(v14, a1, v18);
    v20 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    *v20 = v15;
    v20[1] = v17;
    v20[2] = v25[0];
    v21 = &qword_256D1E4A0;
    sub_23DF89C1C((uint64_t)v14, (uint64_t)v11, &qword_256D1E4A0);
    swift_storeEnumTagMultiPayload();
    sub_23DF99BD8();
    sub_23DF99CA0();
    sub_23E136480();
    v22 = (uint64_t)v14;
  }
  else
  {
    v19(v8, a1, v18);
    v23 = (uint64_t *)&v8[*(int *)(v6 + 36)];
    *v23 = v15;
    v23[1] = v17;
    v21 = &qword_256D1E490;
    sub_23DF89C1C((uint64_t)v8, (uint64_t)v11, &qword_256D1E490);
    swift_storeEnumTagMultiPayload();
    sub_23DF99BD8();
    sub_23DF99CA0();
    sub_23E136480();
    v22 = (uint64_t)v8;
  }
  return sub_23DF89C7C(v22, v21);
}

uint64_t sub_23DF926CC()
{
  return sub_23E135E44();
}

uint64_t sub_23DF926E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23DF92488(a1, *(_BYTE *)v2, *(_QWORD *)(v2 + 8), a2);
}

uint64_t sub_23DF926F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v21 = a1;
  v22 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E148);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E150);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E158);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v17(v16, v21, v13);
      v17(v12, (uint64_t)v16, v13);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E160, &qword_256D1E158, MEMORY[0x24BDEFB78]);
      sub_23DF98114();
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v23)
        v19 = 0.0;
      else
        v19 = 1.0;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v21, v13);
      *(double *)&v7[*(int *)(v4 + 36)] = v19;
      sub_23DF89340((uint64_t)v7, (uint64_t)v9, &qword_256D1E148);
      sub_23DF89C1C((uint64_t)v9, (uint64_t)v12, &qword_256D1E148);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E160, &qword_256D1E158, MEMORY[0x24BDEFB78]);
      sub_23DF98114();
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v9, &qword_256D1E148);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF929F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF926F0(a1, *v2, a2);
}

uint64_t sub_23DF929F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)();
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v27 = a3;
  v30 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF38);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF40);
  v9 = MEMORY[0x24BDAC7A8](v29);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - v12;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF48);
  MEMORY[0x24BDAC7A8](v28);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF50);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
      v20(v19, a1, v16);
      v20(v15, (uint64_t)v19, v16);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1DF58, &qword_256D1DF50, MEMORY[0x24BDEFB78]);
      sub_23DF8E904(&qword_256D1DF60, &qword_256D1DF40, (uint64_t (*)(void))sub_23DF9738C, MEMORY[0x24BDECC38]);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    else
    {
      v22 = swift_allocObject();
      v23 = v27;
      *(_QWORD *)(v22 + 16) = a2;
      *(_QWORD *)(v22 + 24) = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, a1, v16);
      v24 = (uint64_t (**)())&v8[*(int *)(v6 + 36)];
      *v24 = sub_23DF9730C;
      v24[1] = (uint64_t (*)())v22;
      v24[2] = 0;
      v24[3] = 0;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain_n();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v31)
        v25 = 1.0;
      else
        v25 = 0.0;
      sub_23DF89C1C((uint64_t)v8, (uint64_t)v11, &qword_256D1DF38);
      *(double *)&v11[*(int *)(v29 + 36)] = v25;
      sub_23DF89C7C((uint64_t)v8, &qword_256D1DF38);
      sub_23DF89340((uint64_t)v11, (uint64_t)v13, &qword_256D1DF40);
      sub_23DF89C1C((uint64_t)v13, (uint64_t)v15, &qword_256D1DF40);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1DF58, &qword_256D1DF50, MEMORY[0x24BDEFB78]);
      sub_23DF8E904(&qword_256D1DF60, &qword_256D1DF40, (uint64_t (*)(void))sub_23DF9738C, MEMORY[0x24BDECC38]);
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v13, &qword_256D1DF40);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF92DD4(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  if (*a3 != -1)
    swift_once();
  MEMORY[0x24BDAC7A8](*a4);
  return sub_23E135EEC();
}

uint64_t sub_23DF92E64(uint64_t a1)
{
  uint64_t result;

  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_23E135C88();
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF92F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF929F8(a1, *v2, v2[1], a2);
}

uint64_t sub_23DF92F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t result;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v31[1] = a3;
  v33 = a1;
  v37 = a4;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E400);
  v5 = MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v31 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)v31 - v14;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E408);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (uint64_t)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E410);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E418);
  MEMORY[0x24BDAC7A8](v35);
  v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E420);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!*(_BYTE *)(a2 + 40))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v40)
        v28 = 1.0;
      else
        v28 = 0.01;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v7, v33, v21);
      *(double *)&v7[*(int *)(v38 + 36)] = v28;
      sub_23DF89340((uint64_t)v7, (uint64_t)v10, &qword_256D1E400);
      sub_23DF89C1C((uint64_t)v10, v36, &qword_256D1E400);
      swift_storeEnumTagMultiPayload();
      sub_23DF99820();
      sub_23DF998A4();
      sub_23E136480();
      v27 = (uint64_t)v10;
      return sub_23DF89C7C(v27, &qword_256D1E400);
    }
    if (*(_BYTE *)(a2 + 40) == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v39)
        v25 = 1.0;
      else
        v25 = 0.01;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v13, v33, v21);
      *(double *)&v13[*(int *)(v38 + 36)] = v25;
      v26 = v32;
      sub_23DF89340((uint64_t)v13, v32, &qword_256D1E400);
      sub_23DF89C1C(v26, (uint64_t)v18, &qword_256D1E400);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E430, &qword_256D1E420, MEMORY[0x24BDEFB78]);
      sub_23DF998A4();
      sub_23E136480();
      sub_23DF89C1C((uint64_t)v20, v36, &qword_256D1E418);
      swift_storeEnumTagMultiPayload();
      sub_23DF99820();
      sub_23E136480();
      sub_23DF89C7C((uint64_t)v20, &qword_256D1E418);
      v27 = v26;
      return sub_23DF89C7C(v27, &qword_256D1E400);
    }
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v30(v24, v33, v21);
    v30(v18, (uint64_t)v24, v21);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D1E430, &qword_256D1E420, MEMORY[0x24BDEFB78]);
    sub_23DF998A4();
    sub_23E136480();
    sub_23DF89C1C((uint64_t)v20, v36, &qword_256D1E418);
    swift_storeEnumTagMultiPayload();
    sub_23DF99820();
    sub_23E136480();
    sub_23DF89C7C((uint64_t)v20, &qword_256D1E418);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF9349C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF92F1C(a1, *v2, v2[1], a2);
}

uint64_t sub_23DF934A4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _BYTE v23[16];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF10);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v23[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v23[-v18];
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF20);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, a1, v20);
      *(double *)&v19[*(int *)(v11 + 36)] = a4;
      sub_23DF89C1C((uint64_t)v19, (uint64_t)v10, &qword_256D1DF18);
      swift_storeEnumTagMultiPayload();
      sub_23DF97288();
      sub_23E136480();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (!v23[15])
        a4 = a3;
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF20);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, a1, v21);
      *(double *)&v14[*(int *)(v11 + 36)] = a4;
      sub_23DF89340((uint64_t)v14, (uint64_t)v17, &qword_256D1DF18);
      sub_23DF89C1C((uint64_t)v17, (uint64_t)v10, &qword_256D1DF18);
      swift_storeEnumTagMultiPayload();
      sub_23DF97288();
      sub_23E136480();
      v19 = v17;
    }
    return sub_23DF89C7C((uint64_t)v19, &qword_256D1DF18);
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF9376C(uint64_t a1)
{
  uint64_t v1;

  return sub_23DF934A4(a1, *(_QWORD *)(v1 + 16), *(double *)v1, *(double *)(v1 + 8));
}

uint64_t sub_23DF93778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t result;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v31[1] = a3;
  v33 = a1;
  v37 = a4;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E398);
  v5 = MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v31 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)v31 - v14;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3A0);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (uint64_t)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3A8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3B0);
  MEMORY[0x24BDAC7A8](v35);
  v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3B8);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!*(_BYTE *)(a2 + 40))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v40)
        v28 = 1.0;
      else
        v28 = 0.0;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v7, v33, v21);
      *(double *)&v7[*(int *)(v38 + 36)] = v28;
      sub_23DF89340((uint64_t)v7, (uint64_t)v10, &qword_256D1E398);
      sub_23DF89C1C((uint64_t)v10, v36, &qword_256D1E398);
      swift_storeEnumTagMultiPayload();
      sub_23DF99718();
      sub_23DF9979C();
      sub_23E136480();
      v27 = (uint64_t)v10;
      return sub_23DF89C7C(v27, &qword_256D1E398);
    }
    if (*(_BYTE *)(a2 + 40) == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v39)
        v25 = 1.0;
      else
        v25 = 0.0;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v13, v33, v21);
      *(double *)&v13[*(int *)(v38 + 36)] = v25;
      v26 = v32;
      sub_23DF89340((uint64_t)v13, v32, &qword_256D1E398);
      sub_23DF89C1C(v26, (uint64_t)v18, &qword_256D1E398);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E3C8, &qword_256D1E3B8, MEMORY[0x24BDEFB78]);
      sub_23DF9979C();
      sub_23E136480();
      sub_23DF89C1C((uint64_t)v20, v36, &qword_256D1E3B0);
      swift_storeEnumTagMultiPayload();
      sub_23DF99718();
      sub_23E136480();
      sub_23DF89C7C((uint64_t)v20, &qword_256D1E3B0);
      v27 = v26;
      return sub_23DF89C7C(v27, &qword_256D1E398);
    }
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v30(v24, v33, v21);
    v30(v18, (uint64_t)v24, v21);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D1E3C8, &qword_256D1E3B8, MEMORY[0x24BDEFB78]);
    sub_23DF9979C();
    sub_23E136480();
    sub_23DF89C1C((uint64_t)v20, v36, &qword_256D1E3B0);
    swift_storeEnumTagMultiPayload();
    sub_23DF99718();
    sub_23E136480();
    sub_23DF89C7C((uint64_t)v20, &qword_256D1E3B0);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF93CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF93778(a1, *v2, v2[1], a2);
}

uint64_t sub_23DF93CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t result;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v31[1] = a3;
  v33 = a1;
  v37 = a4;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E330);
  v5 = MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v31 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)v31 - v14;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E338);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (uint64_t)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E340);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E348);
  MEMORY[0x24BDAC7A8](v35);
  v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E350);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!*(_BYTE *)(a2 + 40))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v40)
        v28 = 1.0;
      else
        v28 = 0.0;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v7, v33, v21);
      *(double *)&v7[*(int *)(v38 + 36)] = v28;
      sub_23DF89340((uint64_t)v7, (uint64_t)v10, &qword_256D1E330);
      sub_23DF89C1C((uint64_t)v10, v36, &qword_256D1E330);
      swift_storeEnumTagMultiPayload();
      sub_23DF99578();
      sub_23DF995FC();
      sub_23E136480();
      v27 = (uint64_t)v10;
      return sub_23DF89C7C(v27, &qword_256D1E330);
    }
    if (*(_BYTE *)(a2 + 40) == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v39)
        v25 = 1.0;
      else
        v25 = 0.0;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v13, v33, v21);
      *(double *)&v13[*(int *)(v38 + 36)] = v25;
      v26 = v32;
      sub_23DF89340((uint64_t)v13, v32, &qword_256D1E330);
      sub_23DF89C1C(v26, (uint64_t)v18, &qword_256D1E330);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E360, &qword_256D1E350, MEMORY[0x24BDEFB78]);
      sub_23DF995FC();
      sub_23E136480();
      sub_23DF89C1C((uint64_t)v20, v36, &qword_256D1E348);
      swift_storeEnumTagMultiPayload();
      sub_23DF99578();
      sub_23E136480();
      sub_23DF89C7C((uint64_t)v20, &qword_256D1E348);
      v27 = v26;
      return sub_23DF89C7C(v27, &qword_256D1E330);
    }
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v30(v24, v33, v21);
    v30(v18, (uint64_t)v24, v21);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D1E360, &qword_256D1E350, MEMORY[0x24BDEFB78]);
    sub_23DF995FC();
    sub_23E136480();
    sub_23DF89C1C((uint64_t)v20, v36, &qword_256D1E348);
    swift_storeEnumTagMultiPayload();
    sub_23DF99578();
    sub_23E136480();
    sub_23DF89C7C((uint64_t)v20, &qword_256D1E348);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF94270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF93CF8(a1, *v2, v2[1], a2);
}

uint64_t sub_23DF94278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v21 = a1;
  v22 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E510);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E518);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E520);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v17(v16, v21, v13);
      v17(v12, (uint64_t)v16, v13);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E528, &qword_256D1E520, MEMORY[0x24BDEFB78]);
      sub_23DF9A048();
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      if (v23)
        v19 = 1.0;
      else
        v19 = 0.0;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v21, v13);
      *(double *)&v7[*(int *)(v4 + 36)] = v19;
      sub_23DF89340((uint64_t)v7, (uint64_t)v9, &qword_256D1E510);
      sub_23DF89C1C((uint64_t)v9, (uint64_t)v12, &qword_256D1E510);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E528, &qword_256D1E520, MEMORY[0x24BDEFB78]);
      sub_23DF9A048();
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v9, &qword_256D1E510);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF94578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF94278(a1, *v2, a2);
}

uint64_t sub_23DF94580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[2];
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v88 = a4;
  v89 = a5;
  v78 = (char *)a3;
  v86 = a1;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E078);
  MEMORY[0x24BDAC7A8](v90);
  v85 = (uint64_t)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E080);
  MEMORY[0x24BDAC7A8](v82);
  v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_23E13657C();
  MEMORY[0x24BDAC7A8](v79);
  v10 = (uint64_t *)((char *)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E088);
  MEMORY[0x24BDAC7A8](v80);
  v12 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E090);
  v13 = MEMORY[0x24BDAC7A8](v81);
  v15 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v84 = (uint64_t)v77 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E098);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v83 = (uint64_t)v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v77 - v20;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0A0);
  MEMORY[0x24BDAC7A8](v87);
  v23 = (char *)v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0A8);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
      v30 = v26;
      v29(v28, v86, v26);
      v29(v23, (uint64_t)v28, v30);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E0B8, &qword_256D1E0A8, MEMORY[0x24BDEFB78]);
      sub_23DF89B88(&qword_256D1E0C0, &qword_256D1E078, MEMORY[0x24BDF5428]);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v30);
    }
    else
    {
      v77[1] = v26;
      v78 = v23;
      v32 = v26;
      v33 = sub_23E1365D0();
      sub_23E137080();
      v35 = v34;
      v37 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v21, v86, v32);
      v38 = &v21[*(int *)(v17 + 36)];
      v77[0] = (uint64_t)v21;
      *(_QWORD *)v38 = 0x6C6F72746E6F63;
      *((_QWORD *)v38 + 1) = 0xE700000000000000;
      v39 = v88;
      *((_QWORD *)v38 + 2) = v88;
      *((_DWORD *)v38 + 6) = v33;
      *((_QWORD *)v38 + 4) = v35;
      *((_QWORD *)v38 + 5) = v37;
      v38[48] = 1;
      v40 = sub_23E136C30();
      sub_23E1364BC();
      v42 = v41;
      v44 = v43;
      v46 = v45;
      v48 = v47;
      v49 = (char *)v10 + *(int *)(v79 + 20);
      v50 = *MEMORY[0x24BDEEB68];
      v51 = sub_23E136324();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v49, v50, v51);
      *v10 = v42;
      v10[1] = v44;
      v10[2] = v46;
      v10[3] = v48;
      v52 = MEMORY[0x24BDEFEC8];
      sub_23DF73E10((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC8]);
      *(_WORD *)&v8[*(int *)(v82 + 36)] = 256;
      sub_23DF89C1C((uint64_t)v8, (uint64_t)&v12[*(int *)(v80 + 36)], &qword_256D1E080);
      *(_QWORD *)v12 = v40;
      *((_WORD *)v12 + 4) = 256;
      swift_retain();
      sub_23DF89C7C((uint64_t)v8, &qword_256D1E080);
      sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))v52);
      swift_release();
      LODWORD(v52) = sub_23E1365D0();
      sub_23E137080();
      v54 = v53;
      v56 = v55;
      sub_23DF89C1C((uint64_t)v12, (uint64_t)v15, &qword_256D1E088);
      v57 = &v15[*(int *)(v81 + 36)];
      *(_QWORD *)v57 = 0x756F72676B636162;
      *((_QWORD *)v57 + 1) = 0xEA0000000000646ELL;
      *((_QWORD *)v57 + 2) = v39;
      *((_DWORD *)v57 + 6) = (_DWORD)v52;
      *((_QWORD *)v57 + 4) = v54;
      *((_QWORD *)v57 + 5) = v56;
      v57[48] = 1;
      sub_23DF89C7C((uint64_t)v12, &qword_256D1E088);
      v58 = v84;
      sub_23DF89340((uint64_t)v15, v84, &qword_256D1E090);
      v59 = sub_23E136C30();
      LODWORD(v40) = sub_23E1365DC();
      sub_23E137080();
      v61 = v60;
      v63 = v62;
      v64 = sub_23E136C30();
      v65 = sub_23E1365D0();
      sub_23E137080();
      v67 = v66;
      v69 = v68;
      v70 = (uint64_t)v21;
      v71 = v83;
      sub_23DF89C1C(v70, v83, &qword_256D1E098);
      sub_23DF89C1C(v58, (uint64_t)v15, &qword_256D1E090);
      v72 = v85;
      sub_23DF89C1C(v71, v85, &qword_256D1E098);
      v73 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0B0);
      sub_23DF89C1C((uint64_t)v15, v72 + v73[12], &qword_256D1E090);
      v74 = v72 + v73[16];
      *(_QWORD *)v74 = v59;
      *(_WORD *)(v74 + 8) = 256;
      *(_QWORD *)(v74 + 16) = 0x726564616568;
      *(_QWORD *)(v74 + 24) = 0xE600000000000000;
      v75 = v88;
      *(_QWORD *)(v74 + 32) = v88;
      *(_DWORD *)(v74 + 40) = v40;
      *(_QWORD *)(v74 + 48) = v61;
      *(_QWORD *)(v74 + 56) = v63;
      *(_BYTE *)(v74 + 64) = 1;
      v76 = v72 + v73[20];
      *(_QWORD *)v76 = v64;
      *(_WORD *)(v76 + 8) = 256;
      *(_QWORD *)(v76 + 16) = 0x6E6F74747562;
      *(_QWORD *)(v76 + 24) = 0xE600000000000000;
      *(_QWORD *)(v76 + 32) = v75;
      *(_DWORD *)(v76 + 40) = v65;
      *(_QWORD *)(v76 + 48) = v67;
      *(_QWORD *)(v76 + 56) = v69;
      *(_BYTE *)(v76 + 64) = 1;
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_23DF89C7C((uint64_t)v15, &qword_256D1E090);
      sub_23DF89C7C(v71, &qword_256D1E098);
      sub_23DF89C1C(v72, (uint64_t)v78, &qword_256D1E078);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E0B8, &qword_256D1E0A8, MEMORY[0x24BDEFB78]);
      sub_23DF89B88(&qword_256D1E0C0, &qword_256D1E078, MEMORY[0x24BDF5428]);
      sub_23E136480();
      sub_23DF89C7C(v72, &qword_256D1E078);
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_23DF89C7C(v58, &qword_256D1E090);
      return sub_23DF89C7C(v77[0], &qword_256D1E098);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF94CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF94580(a1, *v2, v2[1], v2[2], a2);
}

uint64_t sub_23DF94CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[2];

  v26[0] = a3;
  v26[1] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E370);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E378);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E380);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(unsigned __int8 *)(a2 + 40) - 1 >= 2)
    {
      v20 = sub_23E1365D0();
      sub_23E137080();
      v22 = v21;
      v24 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
      v25 = &v10[*(int *)(v8 + 36)];
      *(_QWORD *)v25 = 0x6E6F74747562;
      *((_QWORD *)v25 + 1) = 0xE600000000000000;
      *((_QWORD *)v25 + 2) = a4;
      *((_DWORD *)v25 + 6) = v20;
      *((_QWORD *)v25 + 4) = v22;
      *((_QWORD *)v25 + 5) = v24;
      v25[48] = 1;
      sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D1E370);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E388, &qword_256D1E380, MEMORY[0x24BDEFB78]);
      sub_23DF99680(&qword_256D1E390, &qword_256D1E370, &qword_256D1E388, &qword_256D1E380);
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v10, &qword_256D1E370);
    }
    else
    {
      v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      v18(v17, a1, v14);
      v18(v13, (uint64_t)v17, v14);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E388, &qword_256D1E380, MEMORY[0x24BDEFB78]);
      sub_23DF99680(&qword_256D1E390, &qword_256D1E370, &qword_256D1E388, &qword_256D1E380);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF94FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF94CEC(a1, *v2, v2[1], v2[2], a2);
}

uint64_t sub_23DF94FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[2];

  v26[0] = a3;
  v26[1] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E3E8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(unsigned __int8 *)(a2 + 40) - 1 >= 2)
    {
      v20 = sub_23E1365DC();
      sub_23E137080();
      v22 = v21;
      v24 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
      v25 = &v10[*(int *)(v8 + 36)];
      *(_QWORD *)v25 = 0x726564616568;
      *((_QWORD *)v25 + 1) = 0xE600000000000000;
      *((_QWORD *)v25 + 2) = a4;
      *((_DWORD *)v25 + 6) = v20;
      *((_QWORD *)v25 + 4) = v22;
      *((_QWORD *)v25 + 5) = v24;
      v25[48] = 1;
      sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D1E3D8);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E3F0, &qword_256D1E3E8, MEMORY[0x24BDEFB78]);
      sub_23DF99680(&qword_256D1E3F8, &qword_256D1E3D8, &qword_256D1E3F0, &qword_256D1E3E8);
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v10, &qword_256D1E3D8);
    }
    else
    {
      v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      v18(v17, a1, v14);
      v18(v13, (uint64_t)v17, v14);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E3F0, &qword_256D1E3E8, MEMORY[0x24BDEFB78]);
      sub_23DF99680(&qword_256D1E3F8, &qword_256D1E3D8, &qword_256D1E3F0, &qword_256D1E3E8);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF952D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF94FE8(a1, *v2, v2[1], v2[2], a2);
}

uint64_t sub_23DF952E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  __int128 v14;
  __int128 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  char v19;
  char v20;
  uint64_t v21;
  _BYTE *v22;
  char v23;
  uint64_t result;
  _BYTE v26[72];
  __int128 v27;
  _OWORD v28[9];
  __int16 v29;
  _OWORD v30[4];
  __int16 v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E210);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E218);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E220);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2[3];
  v28[1] = v2[2];
  v28[2] = v14;
  v28[3] = v2[4];
  *(_OWORD *)((char *)&v28[3] + 10) = *(__int128 *)((char *)v2 + 74);
  v15 = v2[1];
  v27 = *v2;
  v28[0] = v15;
  sub_23DF95600((uint64_t)&v27, a1, (uint64_t)v7);
  v30[2] = *(_OWORD *)((char *)&v28[2] + 8);
  v30[3] = *(_OWORD *)((char *)&v28[3] + 8);
  v31 = WORD4(v28[4]);
  v30[0] = *(_OWORD *)((char *)v28 + 8);
  v30[1] = *(_OWORD *)((char *)&v28[1] + 8);
  v28[7] = *(_OWORD *)((char *)&v28[2] + 8);
  v28[8] = *(_OWORD *)((char *)&v28[3] + 8);
  v29 = WORD4(v28[4]);
  v28[5] = *(_OWORD *)((char *)v28 + 8);
  v28[6] = *(_OWORD *)((char *)&v28[1] + 8);
  sub_23DF98E30((uint64_t)&v27);
  sub_23DF98EC8((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v26);
  sub_23DF98EC8((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v26[1] != 1)
  {
    v20 = sub_23E13672C();
    goto LABEL_9;
  }
  v16 = sub_23E136744();
  v17 = sub_23E136750();
  v18 = sub_23E136768();
  v19 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v16)
    v19 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v17)
    v19 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v18)
  {
    v20 = sub_23E13675C();
LABEL_9:
    v19 = v20;
  }
  sub_23DF98F1C((uint64_t)&v27);
  v21 = sub_23E136000();
  sub_23DF89C1C((uint64_t)v7, (uint64_t)v10, &qword_256D1E210);
  v22 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v22 = v21;
  v22[8] = v19;
  sub_23DF89C7C((uint64_t)v7, &qword_256D1E210);
  if ((_QWORD)v27)
  {
    v23 = *(_BYTE *)(v27 + 40) == 0;
    sub_23DF98E30((uint64_t)&v27);
    sub_23DFF8FFC(v23, (uint64_t)v10, &v27, (uint64_t)v13);
    sub_23DF89C7C((uint64_t)v10, &qword_256D1E218);
    return sub_23DF89340((uint64_t)v13, a2, &qword_256D1E220);
  }
  else
  {
    sub_23DF98E30((uint64_t)&v27);
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF95600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(void);
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE v91[16];
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[26];

  v85 = a2;
  v89 = a3;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E228);
  v4 = MEMORY[0x24BDAC7A8](v90);
  v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v79 - v7;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E230);
  MEMORY[0x24BDAC7A8](v84);
  *(_QWORD *)&v80 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E238);
  MEMORY[0x24BDAC7A8](v86);
  v88 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E240);
  MEMORY[0x24BDAC7A8](v82);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E248);
  MEMORY[0x24BDAC7A8](v87);
  v83 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E13657C();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E250);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v79 - v23;
  v25 = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
  {
    v26 = *(unsigned __int8 *)(v25 + 40);
    if (*(_BYTE *)(v25 + 40))
    {
      v81 = v22;
      if (v26 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_23E135C7C();
        swift_release();
        swift_release();
        swift_release();
        if (v95 == 1)
        {
          v27 = *(_OWORD *)(a1 + 40);
          v28 = *(_OWORD *)(a1 + 72);
          v97 = *(_OWORD *)(a1 + 56);
          v98 = v28;
          *(_WORD *)v99 = *(_WORD *)(a1 + 88);
          v95 = *(_OWORD *)(a1 + 24);
          v96 = v27;
          sub_23DF98E30(a1);
          sub_23DF98EC8((uint64_t)&v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
          sub_23DF9C754((uint64_t)v91);
          sub_23DF98EC8((uint64_t)&v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
          sub_23DF98F1C(a1);
          v79 = v92;
          v29 = v93;
          v30 = v94;
          v31 = &v16[*(int *)(v14 + 20)];
          v32 = *MEMORY[0x24BDEEB68];
          v33 = sub_23E136324();
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
          *(_OWORD *)v16 = v79;
          *((_QWORD *)v16 + 2) = v29;
          *((_QWORD *)v16 + 3) = v30;
          v34 = v81;
          v35 = (uint64_t)&v24[*(int *)(v81 + 36)];
          v36 = MEMORY[0x24BDEFEC8];
          sub_23DF73E10((uint64_t)v16, v35, (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC8]);
          *(_WORD *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E080) + 36)) = 256;
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E258);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v24, v85, v37);
          sub_23DF73E54((uint64_t)v16, (uint64_t (*)(_QWORD))v36);
          v38 = v80;
          sub_23DF89340((uint64_t)v24, v80, &qword_256D1E250);
          v39 = 0;
          v40 = v88;
          v41 = (uint64_t)v83;
        }
        else
        {
          v39 = 1;
          v40 = v88;
          v41 = (uint64_t)v83;
          v34 = v81;
          v38 = v80;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v38, v39, 1, v34);
        sub_23DF89C1C(v38, (uint64_t)v12, &qword_256D1E230);
        swift_storeEnumTagMultiPayload();
        sub_23DF98FD8();
        sub_23DF99074();
        sub_23E136480();
        sub_23DF89C1C(v41, v40, &qword_256D1E248);
        swift_storeEnumTagMultiPayload();
        sub_23DF98FB4();
        sub_23DF990D8();
        sub_23E136480();
        sub_23DF89C7C(v41, &qword_256D1E248);
        v65 = v38;
        v66 = &qword_256D1E230;
      }
      else
      {
        v67 = *(_OWORD *)(a1 + 40);
        v68 = *(_OWORD *)(a1 + 72);
        v97 = *(_OWORD *)(a1 + 56);
        v98 = v68;
        *(_WORD *)v99 = *(_WORD *)(a1 + 88);
        v95 = *(_OWORD *)(a1 + 24);
        v96 = v67;
        sub_23DF98E30(a1);
        sub_23DF98EC8((uint64_t)&v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
        sub_23DF9C754((uint64_t)v91);
        sub_23DF98EC8((uint64_t)&v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
        sub_23DF98F1C(a1);
        v80 = v92;
        v69 = v93;
        v70 = v94;
        v71 = &v16[*(int *)(v14 + 20)];
        v72 = *MEMORY[0x24BDEEB68];
        v73 = sub_23E136324();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v71, v72, v73);
        *(_OWORD *)v16 = v80;
        *((_QWORD *)v16 + 2) = v69;
        *((_QWORD *)v16 + 3) = v70;
        v74 = (uint64_t)&v21[*(int *)(v81 + 36)];
        v75 = MEMORY[0x24BDEFEC8];
        sub_23DF73E10((uint64_t)v16, v74, (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC8]);
        *(_WORD *)(v74 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E080) + 36)) = 256;
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E258);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v21, v85, v76);
        sub_23DF73E54((uint64_t)v16, (uint64_t (*)(_QWORD))v75);
        sub_23DF89340((uint64_t)v21, (uint64_t)v24, &qword_256D1E250);
        sub_23DF89C1C((uint64_t)v24, (uint64_t)v12, &qword_256D1E250);
        swift_storeEnumTagMultiPayload();
        sub_23DF98FD8();
        sub_23DF99074();
        v77 = (uint64_t)v83;
        sub_23E136480();
        sub_23DF89C1C(v77, v88, &qword_256D1E248);
        swift_storeEnumTagMultiPayload();
        sub_23DF98FB4();
        sub_23DF990D8();
        sub_23E136480();
        sub_23DF89C7C(v77, &qword_256D1E248);
        v65 = (uint64_t)v24;
        v66 = &qword_256D1E250;
      }
    }
    else
    {
      v42 = *(_OWORD *)(a1 + 48);
      v97 = *(_OWORD *)(a1 + 32);
      v98 = v42;
      *(_OWORD *)v99 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v99[10] = *(_OWORD *)(a1 + 74);
      v43 = *(_OWORD *)(a1 + 16);
      v95 = *(_OWORD *)a1;
      v96 = v43;
      v44 = v22;
      sub_23DF95FCC();
      v46 = v45;
      v48 = v47;
      v50 = v49;
      v52 = v51;
      v53 = &v16[*(int *)(v14 + 20)];
      v54 = *MEMORY[0x24BDEEB68];
      v55 = sub_23E136324();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
      *(_QWORD *)v16 = v46;
      *((_QWORD *)v16 + 1) = v48;
      *((_QWORD *)v16 + 2) = v50;
      *((_QWORD *)v16 + 3) = v52;
      v56 = (uint64_t)&v24[*(int *)(v44 + 36)];
      v57 = MEMORY[0x24BDEFEC8];
      sub_23DF73E10((uint64_t)v16, v56, (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC8]);
      *(_WORD *)(v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E080) + 36)) = 256;
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E258);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v24, v85, v58);
      sub_23DF73E54((uint64_t)v16, (uint64_t (*)(_QWORD))v57);
      v59 = *(_QWORD *)(a1 + 16);
      LODWORD(v56) = sub_23E1365D0();
      sub_23E137080();
      v61 = v60;
      v63 = v62;
      sub_23DF89C1C((uint64_t)v24, (uint64_t)v6, &qword_256D1E250);
      v64 = &v6[*(int *)(v90 + 36)];
      *(_QWORD *)v64 = 0x756F72676B636162;
      *((_QWORD *)v64 + 1) = 0xEA0000000000646ELL;
      *((_QWORD *)v64 + 2) = v59;
      *((_DWORD *)v64 + 6) = v56;
      *((_QWORD *)v64 + 4) = v61;
      *((_QWORD *)v64 + 5) = v63;
      v64[48] = 1;
      sub_23DF89C7C((uint64_t)v24, &qword_256D1E250);
      sub_23DF89340((uint64_t)v6, (uint64_t)v8, &qword_256D1E228);
      sub_23DF89C1C((uint64_t)v8, v88, &qword_256D1E228);
      swift_storeEnumTagMultiPayload();
      sub_23DF98FB4();
      sub_23DF990D8();
      sub_23E136480();
      v65 = (uint64_t)v8;
      v66 = &qword_256D1E228;
    }
    return sub_23DF89C7C(v65, v66);
  }
  else
  {
    sub_23DF98E30(a1);
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF95FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 80);
  v9 = *(_BYTE *)(v0 + 88);
  v7 = *(_BYTE *)(v0 + 89);
  if (*(_QWORD *)v0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    if ((v13 & 1) != 0)
    {
      v13 = v1;
      v14 = v2;
      v15 = v4;
      v16 = v3;
      v17 = v6;
      v18 = v5;
      v19 = v10;
      v20 = v11;
      v21 = v9;
      v22 = v7;
      swift_retain();
      sub_23DF98590(v1, v2, v4, v3, v6, v5, v10, v11, v9, v7);
      sub_23DF98590(v1, v2, v4, v3, v6, v5, v10, v11, v9, v7);
      sub_23DF9C754((uint64_t)v12);
      sub_23DF985F0(v1, v2, v4, v3, v6, v5, v10, v11, v9, v7);
      swift_release();
      return sub_23DF985F0(v1, v2, v4, v3, v6, v5, v10, v11, v9, v7);
    }
    else
    {
      return sub_23E1364BC();
    }
  }
  else
  {
    sub_23DF98590(v1, v2, v4, v3, v6, v5, v10, v11, v9, v7);
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF96230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[2];

  v26[0] = a3;
  v26[1] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E4E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E4F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E4F8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      v18(v17, a1, v14);
      v18(v13, (uint64_t)v17, v14);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E500, &qword_256D1E4F8, MEMORY[0x24BDEFB78]);
      sub_23DF99680(&qword_256D1E508, &qword_256D1E4E8, &qword_256D1E500, &qword_256D1E4F8);
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      v20 = sub_23E1365D0();
      sub_23E137080();
      v22 = v21;
      v24 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
      v25 = &v10[*(int *)(v8 + 36)];
      *(_QWORD *)v25 = 0x6C6F72746E6F63;
      *((_QWORD *)v25 + 1) = 0xE700000000000000;
      *((_QWORD *)v25 + 2) = a4;
      *((_DWORD *)v25 + 6) = v20;
      *((_QWORD *)v25 + 4) = v22;
      *((_QWORD *)v25 + 5) = v24;
      v25[48] = 1;
      sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D1E4E8);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1E500, &qword_256D1E4F8, MEMORY[0x24BDEFB78]);
      sub_23DF99680(&qword_256D1E508, &qword_256D1E4E8, &qword_256D1E500, &qword_256D1E4F8);
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v10, &qword_256D1E4E8);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF96520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23DF96230(a1, *v2, v2[1], v2[2], a2);
}

uint64_t sub_23DF9652C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t result;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD v30[2];
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a5;
  v30[1] = a3;
  v31 = a4;
  v36 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF78);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF80);
  MEMORY[0x24BDAC7A8](v35);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF88);
  MEMORY[0x24BDAC7A8](v34);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DF90);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(_BYTE *)(a2 + 40) == 2)
    {
      v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v21(v20, a1, v17);
      v21(v16, (uint64_t)v20, v17);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1DFA0, &qword_256D1DF90, MEMORY[0x24BDEFB78]);
      sub_23DF97428();
      sub_23E136480();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    else
    {
      if ((v32 & 1) != 0)
      {
        v23 = sub_23E1365D0();
        sub_23E137080();
        v25 = v24;
        v27 = v26;
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v12, a1, v17);
        v28 = &v12[*(int *)(v33 + 36)];
        *(_QWORD *)v28 = 1852793705;
        *((_QWORD *)v28 + 1) = 0xE400000000000000;
        *((_QWORD *)v28 + 2) = v31;
        *((_DWORD *)v28 + 6) = v23;
        *((_QWORD *)v28 + 4) = v25;
        *((_QWORD *)v28 + 5) = v27;
        v28[48] = 1;
        sub_23DF89C1C((uint64_t)v12, (uint64_t)v10, &qword_256D1DF78);
        swift_storeEnumTagMultiPayload();
        sub_23DF99680(&qword_256D1DF98, &qword_256D1DF78, &qword_256D1DFA0, &qword_256D1DF90);
        sub_23DF89B88(&qword_256D1DFA0, &qword_256D1DF90, MEMORY[0x24BDEFB78]);
        sub_23E136480();
        sub_23DF89C7C((uint64_t)v12, &qword_256D1DF78);
      }
      else
      {
        v29 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        v29(v20, a1, v17);
        v29(v10, (uint64_t)v20, v17);
        swift_storeEnumTagMultiPayload();
        sub_23DF99680(&qword_256D1DF98, &qword_256D1DF78, &qword_256D1DFA0, &qword_256D1DF90);
        sub_23DF89B88(&qword_256D1DFA0, &qword_256D1DF90, MEMORY[0x24BDEFB78]);
        sub_23E136480();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      }
      sub_23DF89C1C((uint64_t)v14, (uint64_t)v16, &qword_256D1DF80);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D1DFA0, &qword_256D1DF90, MEMORY[0x24BDEFB78]);
      sub_23DF97428();
      sub_23E136480();
      return sub_23DF89C7C((uint64_t)v14, &qword_256D1DF80);
    }
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF96994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23DF9652C(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

uint64_t sub_23DF969A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF969B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF969C4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DF969D8()
{
  unint64_t result;

  result = qword_256D1DEF8;
  if (!qword_256D1DEF8)
  {
    result = MEMORY[0x24264C55C](&unk_23E138ACC, &type metadata for AnimationModel.TranistionType);
    atomic_store(result, (unint64_t *)&qword_256D1DEF8);
  }
  return result;
}

uint64_t sub_23DF96A1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF96A40()
{
  uint64_t v0;

  return sub_23DF916B0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23DF96A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t (**v36)();
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;

  v3 = v2;
  v55 = a1;
  v60 = a2;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0C8);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0D0);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0D8);
  v6 = MEMORY[0x24BDAC7A8](v59);
  v52 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v54 = (uint64_t)&v49 - v8;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0E0);
  MEMORY[0x24BDAC7A8](v57);
  v58 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0E8);
  v13 = MEMORY[0x24BDAC7A8](v56);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v49 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F0);
  v61 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v2;
  if (*v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    if ((v63 & 1) != 0
      && (v63 = *(_OWORD *)(v2 + 3),
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140),
          sub_23E136D98(),
          (v62 & 1) == 0))
    {
      v22 = v2 + 2;
    }
    else
    {
      v22 = (uint64_t *)(v21 + 32);
    }
    v23 = *v22;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v24(v20, v55, v18);
    if (*(_BYTE *)(v21 + 40) == 2)
    {
      v25 = v2[2];
      v26 = (char *)v12 + *(int *)(v10 + 20);
      v27 = *MEMORY[0x24BDEEB68];
      v28 = sub_23E136324();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v26, v27, v28);
      *v12 = v25;
      v12[1] = v25;
      v29 = (uint64_t)&v15[*(int *)(v56 + 36)];
      v30 = MEMORY[0x24BDED998];
      sub_23DF73E10((uint64_t)v12, v29, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
      *(_WORD *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
      v24(v15, (uint64_t)v20, v18);
      sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))v30);
      v31 = &qword_256D1E0E8;
      sub_23DF89340((uint64_t)v15, (uint64_t)v17, &qword_256D1E0E8);
      sub_23DF89C1C((uint64_t)v17, v58, &qword_256D1E0E8);
      swift_storeEnumTagMultiPayload();
      sub_23DF97EEC();
      sub_23DF97F88();
      sub_23E136480();
      v32 = (uint64_t)v17;
    }
    else
    {
      v63 = *(_OWORD *)(v2 + 3);
      v33 = swift_allocObject();
      v34 = *((_OWORD *)v3 + 1);
      *(_OWORD *)(v33 + 16) = *(_OWORD *)v3;
      *(_OWORD *)(v33 + 32) = v34;
      *(_QWORD *)(v33 + 48) = v3[4];
      v35 = (uint64_t)v51;
      v24(v51, (uint64_t)v20, v18);
      v36 = (uint64_t (**)())(v35 + *(int *)(v49 + 36));
      *v36 = sub_23DF97E7C;
      v36[1] = (uint64_t (*)())v33;
      v36[2] = 0;
      v36[3] = 0;
      v37 = (char *)v12 + *(int *)(v10 + 20);
      v38 = *MEMORY[0x24BDEEB68];
      v39 = sub_23E136324();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
      *v12 = v23;
      v12[1] = v23;
      v40 = (uint64_t)v53;
      v41 = (uint64_t)&v53[*(int *)(v50 + 36)];
      v42 = MEMORY[0x24BDED998];
      sub_23DF73E10((uint64_t)v12, v41, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
      *(_WORD *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
      sub_23DF89C1C(v35, v40, &qword_256D1E0C8);
      swift_retain();
      sub_23DF97EC4((uint64_t)&v63);
      sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))v42);
      sub_23DF89C7C(v35, &qword_256D1E0C8);
      if (qword_256D1D230 != -1)
        swift_once();
      v43 = qword_256D34600;
      v44 = v52;
      sub_23DF89C1C(v40, v52, &qword_256D1E0D0);
      v45 = (uint64_t *)(v44 + *(int *)(v59 + 36));
      *v45 = v43;
      v45[1] = v23;
      swift_retain();
      sub_23DF89C7C(v40, &qword_256D1E0D0);
      v31 = &qword_256D1E0D8;
      v46 = v44;
      v47 = v54;
      sub_23DF89340(v46, v54, &qword_256D1E0D8);
      sub_23DF89C1C(v47, v58, &qword_256D1E0D8);
      swift_storeEnumTagMultiPayload();
      sub_23DF97EEC();
      sub_23DF97F88();
      sub_23E136480();
      v32 = v47;
    }
    sub_23DF89C7C(v32, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v20, v18);
  }
  else
  {
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DF970A0()
{
  uint64_t result;

  result = sub_23E136FFC();
  qword_256D34600 = result;
  return result;
}

uint64_t sub_23DF970D8()
{
  uint64_t result;

  result = sub_23E136FFC();
  qword_256D34608 = result;
  return result;
}

uint64_t sub_23DF9710C(uint64_t a1)
{
  return sub_23DF971AC(a1, &qword_256D34610);
}

uint64_t sub_23DF97130(uint64_t a1)
{
  return sub_23DF971AC(a1, &qword_256D34618);
}

uint64_t sub_23DF97154()
{
  uint64_t result;

  result = sub_23E136FFC();
  qword_256D34620 = result;
  return result;
}

uint64_t sub_23DF97188(uint64_t a1)
{
  return sub_23DF971AC(a1, &qword_256D34628);
}

uint64_t sub_23DF971AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;

  sub_23E136FFC();
  v3 = sub_23E137008();
  result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_23DF9720C()
{
  uint64_t result;

  result = sub_23E136FFC();
  qword_256D34630 = result;
  return result;
}

uint64_t sub_23DF97240@<X0>(_BYTE *a1@<X8>)
{
  return sub_23DF976AC(a1);
}

uint64_t sub_23DF97264()
{
  return sub_23DF97748();
}

unint64_t sub_23DF97288()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DF28;
  if (!qword_256D1DF28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DF18);
    v2[0] = sub_23DF89B88(&qword_256D1DF30, &qword_256D1DF20, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DF28);
  }
  return result;
}

uint64_t sub_23DF9730C()
{
  uint64_t v0;

  return sub_23DF92DD4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_256D1D238, &qword_256D34608);
}

uint64_t sub_23DF97344@<X0>(_BYTE *a1@<X8>)
{
  return sub_23DF976AC(a1);
}

uint64_t sub_23DF97368()
{
  return sub_23DF97748();
}

unint64_t sub_23DF9738C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DF68;
  if (!qword_256D1DF68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DF38);
    v2[0] = sub_23DF89B88(&qword_256D1DF58, &qword_256D1DF50, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DF68);
  }
  return result;
}

uint64_t sub_23DF97410()
{
  uint64_t v0;

  return sub_23DF92E64(*(_QWORD *)(v0 + 16));
}

unint64_t sub_23DF97428()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DFB8;
  if (!qword_256D1DFB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DF80);
    v2[0] = sub_23DF99680(&qword_256D1DF98, &qword_256D1DF78, &qword_256D1DFA0, &qword_256D1DF90);
    v2[1] = sub_23DF89B88(&qword_256D1DFA0, &qword_256D1DF90, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DFB8);
  }
  return result;
}

uint64_t sub_23DF974D4()
{
  return sub_23DF8FD3C();
}

uint64_t sub_23DF974FC()
{
  return sub_23DF8FD3C();
}

uint64_t sub_23DF97524()
{
  return sub_23DF8FDAC();
}

uint64_t sub_23DF9753C()
{
  uint64_t *v0;

  return sub_23DF8FE1C(v0[2], v0[3], v0[4]);
}

uint64_t sub_23DF97558@<X0>(_BYTE *a1@<X8>)
{
  return sub_23DF976AC(a1);
}

uint64_t sub_23DF9757C()
{
  return sub_23DF97748();
}

unint64_t sub_23DF975A0()
{
  unint64_t result;

  result = qword_256D1DFC0;
  if (!qword_256D1DFC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D1DFC0);
  }
  return result;
}

uint64_t sub_23DF975DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23DF97600()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF97634()
{
  uint64_t v0;

  return sub_23DF90184(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_23DF9765C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23DF9766C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF976A0()
{
  uint64_t v0;

  return sub_23DF9028C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23DF976AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23DF97724@<X0>(_BYTE *a1@<X8>)
{
  return sub_23DF976AC(a1);
}

uint64_t sub_23DF97748()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23E135C88();
}

uint64_t sub_23DF977B4()
{
  return sub_23DF97748();
}

uint64_t sub_23DF977E0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

ValueMetadata *type metadata accessor for AnimationModel.SwipeDownDismissal()
{
  return &type metadata for AnimationModel.SwipeDownDismissal;
}

ValueMetadata *type metadata accessor for AnimationModel.Presentation()
{
  return &type metadata for AnimationModel.Presentation;
}

ValueMetadata *type metadata accessor for AnimationModel.Presentation.SheetView()
{
  return &type metadata for AnimationModel.Presentation.SheetView;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect.TileView()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect.TileView;
}

uint64_t destroy for AnimationModel.CornerRadius()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AnimationModel.CornerRadius(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnimationModel.CornerRadius(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnimationModel.CornerRadius(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModel.CornerRadius(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.CornerRadius(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.CornerRadius()
{
  return &type metadata for AnimationModel.CornerRadius;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.TileView()
{
  return &type metadata for AnimationModel.Visibility.TileView;
}

uint64_t sub_23DF97A94()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DF00);
  sub_23DF89B88(&qword_256D1DF08, &qword_256D1DF00, MEMORY[0x24BDEFB78]);
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DF97AFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DFE0;
  if (!qword_256D1DFE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DFE8);
    v2[0] = sub_23DF97288();
    v2[1] = v2[0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DFE0);
  }
  return result;
}

unint64_t sub_23DF97B64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1DFF0;
  if (!qword_256D1DFF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1DFF8);
    v2[0] = sub_23DF89B88(&qword_256D1DF58, &qword_256D1DF50, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF8E904(&qword_256D1DF60, &qword_256D1DF40, (uint64_t (*)(void))sub_23DF9738C, MEMORY[0x24BDECC38]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1DFF0);
  }
  return result;
}

unint64_t sub_23DF97C0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E000;
  if (!qword_256D1E000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E008);
    v2[0] = sub_23DF89B88(&qword_256D1DFA0, &qword_256D1DF90, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF97428();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E000);
  }
  return result;
}

uint64_t sub_23DF97C90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF97CA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF97CB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF97CC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF97CD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF97CE0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DF97CF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D1E028;
  if (!qword_256D1E028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E020);
    v2 = sub_23DF89B88(&qword_256D1E030, &qword_256D1E010, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1E028);
  }
  return result;
}

uint64_t sub_23DF97D6C()
{
  uint64_t v0;

  return sub_23DF92DD4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_256D1D230, &qword_256D34600);
}

unint64_t sub_23DF97DA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E068;
  if (!qword_256D1E068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E060);
    v2[0] = sub_23DF89B88(&qword_256D1E070, &qword_256D1E050, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E068);
  }
  return result;
}

uint64_t sub_23DF97E28()
{
  uint64_t v0;

  return sub_23DF91344(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23DF97E50()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DF97E7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23DF97EC4(uint64_t a1)
{
  swift_retain();
  return a1;
}

unint64_t sub_23DF97EEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E100;
  if (!qword_256D1E100)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E0E8);
    v2[0] = sub_23DF89B88(&qword_256D1E108, &qword_256D1E0F0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D1E110, &qword_256D1E0F8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E100);
  }
  return result;
}

unint64_t sub_23DF97F88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E118;
  if (!qword_256D1E118)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E0D8);
    v2[0] = sub_23DF9800C();
    v2[1] = sub_23DF89B88(&qword_256D1E130, &qword_256D1E138, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E118);
  }
  return result;
}

unint64_t sub_23DF9800C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E120;
  if (!qword_256D1E120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E0D0);
    v2[0] = sub_23DF98090();
    v2[1] = sub_23DF89B88(&qword_256D1E110, &qword_256D1E0F8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E120);
  }
  return result;
}

unint64_t sub_23DF98090()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E128;
  if (!qword_256D1E128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E0C8);
    v2[0] = sub_23DF89B88(&qword_256D1E108, &qword_256D1E0F0, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E128);
  }
  return result;
}

unint64_t sub_23DF98114()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E168;
  if (!qword_256D1E168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E148);
    v2[0] = sub_23DF89B88(&qword_256D1E160, &qword_256D1E158, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E168);
  }
  return result;
}

unint64_t sub_23DF9819C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E170;
  if (!qword_256D1E170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E178);
    v2[0] = sub_23DF97CF0();
    v2[1] = sub_23DF89B88(&qword_256D1E030, &qword_256D1E010, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E170);
  }
  return result;
}

unint64_t sub_23DF98224()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E180;
  if (!qword_256D1E180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E040);
    v2[0] = sub_23DF982A8();
    v2[1] = sub_23DF89B88(&qword_256D1E198, &qword_256D1E1A0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E180);
  }
  return result;
}

unint64_t sub_23DF982A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E188;
  if (!qword_256D1E188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E038);
    v2[0] = sub_23DF89B88(&qword_256D1E190, &qword_256D1E048, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E188);
  }
  return result;
}

unint64_t sub_23DF98330()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E1A8;
  if (!qword_256D1E1A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E1B0);
    v2[0] = sub_23DF97DA4();
    v2[1] = sub_23DF89B88(&qword_256D1E070, &qword_256D1E050, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E1A8);
  }
  return result;
}

unint64_t sub_23DF983B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E1B8;
  if (!qword_256D1E1B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E1C0);
    v2[0] = sub_23DF89B88(&qword_256D1E0B8, &qword_256D1E0A8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D1E0C0, &qword_256D1E078, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E1B8);
  }
  return result;
}

uint64_t sub_23DF98454()
{
  return sub_23DF98488(&qword_256D1E1C8, &qword_256D1E1D0, (uint64_t (*)(void))sub_23DF97EEC, (uint64_t (*)(void))sub_23DF97F88);
}

uint64_t sub_23DF98488(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DF984FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E1D8;
  if (!qword_256D1E1D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E1E0);
    v2[0] = sub_23DF89B88(&qword_256D1E160, &qword_256D1E158, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF98114();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E1D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.Presentation.BackgroundView()
{
  return &type metadata for AnimationModel.Presentation.BackgroundView;
}

uint64_t sub_23DF98590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t result;

  if ((a10 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for AnimationModel.SwipeDownDismissal.BackgroundOpacity(uint64_t a1)
{
  swift_release();
  return sub_23DF985F0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80), *(_BYTE *)(a1 + 81));
}

uint64_t sub_23DF985F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t result;

  if ((a10 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for AnimationModel.SwipeDownDismissal.BackgroundOpacity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 80);
  v12 = *(_BYTE *)(a2 + 81);
  swift_retain();
  sub_23DF98590(v15, v5, v6, v7, v8, v9, v10, v14, v11, v12);
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 81) = v12;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for AnimationModel.SwipeDownDismissal.BackgroundOpacity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v23;
  char v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v23 = *(_BYTE *)(a2 + 80);
  v24 = *(_BYTE *)(a2 + 81);
  sub_23DF98590(v4, v5, v6, v7, v8, v9, v10, v11, v23, v24);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_BYTE *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 81);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v23;
  *(_BYTE *)(a1 + 81) = v24;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AnimationModel.SwipeDownDismissal.BackgroundOpacity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 72);
  v5 = *(_BYTE *)(a2 + 80);
  v6 = *(_BYTE *)(a2 + 81);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_BYTE *)(a1 + 80);
  v16 = *(_BYTE *)(a1 + 81);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 81) = v6;
  sub_23DF985F0(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModel.SwipeDownDismissal.BackgroundOpacity(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 104))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.SwipeDownDismissal.BackgroundOpacity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.SwipeDownDismissal.BackgroundOpacity()
{
  return &type metadata for AnimationModel.SwipeDownDismissal.BackgroundOpacity;
}

uint64_t destroy for AnimationModel.MatchedGeometryEffect.Background(uint64_t a1)
{
  swift_release();
  return sub_23DF985F0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
}

uint64_t initializeWithCopy for AnimationModel.MatchedGeometryEffect.Background(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v10 = *(_BYTE *)(a2 + 88);
  v11 = *(_BYTE *)(a2 + 89);
  swift_retain();
  sub_23DF98590(v3, v4, v5, v6, v7, v8, v9, v13, v10, v11);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v13;
  *(_BYTE *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 89) = v11;
  return a1;
}

uint64_t assignWithCopy for AnimationModel.MatchedGeometryEffect.Background(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v23;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = v2[1];
  *(_QWORD *)(a1 + 16) = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  v6 = v2[5];
  v7 = v2[6];
  v8 = v2[7];
  v9 = v2[8];
  v10 = v2[9];
  v11 = v2[10];
  v23 = *((_BYTE *)v2 + 88);
  LOBYTE(v2) = *((_BYTE *)v2 + 89);
  sub_23DF98590(v4, v5, v6, v7, v8, v9, v10, v11, v23, (char)v2);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_BYTE *)(a1 + 88);
  v21 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v23;
  *(_BYTE *)(a1 + 89) = (_BYTE)v2;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AnimationModel.MatchedGeometryEffect.Background(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 88);
  v5 = *(_BYTE *)(a2 + 89);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_BYTE *)(a1 + 88);
  v15 = *(_BYTE *)(a1 + 89);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v4;
  *(_BYTE *)(a1 + 89) = v5;
  sub_23DF985F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModel.MatchedGeometryEffect.Background(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 90))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.MatchedGeometryEffect.Background(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 90) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect.Background()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect.Background;
}

uint64_t sub_23DF98D24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF98D34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF98D44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF98D54()
{
  return sub_23DF91234();
}

unint64_t sub_23DF98D5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E200;
  if (!qword_256D1E200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E1F8);
    v2[0] = sub_23DF89B88(&qword_256D1E208, &qword_256D1E1E8, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E200);
  }
  return result;
}

uint64_t sub_23DF98DE0()
{
  uint64_t v0;

  return sub_23DF91344(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23DF98E08()
{
  uint64_t v0;

  return sub_23DF91344(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23DF98E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 88);
  v10 = *(_BYTE *)(a1 + 89);
  swift_retain();
  sub_23DF98590(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_23DF98EC8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_WORD *)(a1 + 64));
  return a1;
}

uint64_t sub_23DF98F1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 88);
  v10 = *(_BYTE *)(a1 + 89);
  swift_release();
  sub_23DF985F0(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_23DF98FB4()
{
  return sub_23DF98488(&qword_256D1E260, &qword_256D1E248, (uint64_t (*)(void))sub_23DF98FD8, (uint64_t (*)(void))sub_23DF99074);
}

unint64_t sub_23DF98FD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E268;
  if (!qword_256D1E268)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E250);
    v2[0] = sub_23DF89B88(&qword_256D1E270, &qword_256D1E258, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D1E278, &qword_256D1E080, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E268);
  }
  return result;
}

unint64_t sub_23DF99074()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D1E280;
  if (!qword_256D1E280)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E230);
    v2 = sub_23DF98FD8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1E280);
  }
  return result;
}

unint64_t sub_23DF990D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E288;
  if (!qword_256D1E288)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E228);
    v2[0] = sub_23DF98FD8();
    v2[1] = sub_23DF89B88(&qword_256D1DFA8, &qword_256D1DFB0, MEMORY[0x24BDEFFA0]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E288);
  }
  return result;
}

unint64_t sub_23DF9915C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E2B8;
  if (!qword_256D1E2B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E2A0);
    v2[0] = sub_23DF89B88(&qword_256D1E2C0, &qword_256D1E290, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E2B8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AnimationModel.Visibility.BottomViewControllerHostingView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithTake for AnimationModel.Visibility.BottomViewControllerHostingView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.BottomViewControllerHostingView()
{
  return &type metadata for AnimationModel.Visibility.BottomViewControllerHostingView;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect.Button()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect.Button;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.DecorationButtonView()
{
  return &type metadata for AnimationModel.Visibility.DecorationButtonView;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect.TitleDescriptionHeader()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect.TitleDescriptionHeader;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.HeaderView()
{
  return &type metadata for AnimationModel.Visibility.HeaderView;
}

unint64_t sub_23DF9929C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E2C8;
  if (!qword_256D1E2C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E2D0);
    v2[0] = sub_23DF98D5C();
    v2[1] = sub_23DF89B88(&qword_256D1E208, &qword_256D1E1E8, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E2C8);
  }
  return result;
}

uint64_t sub_23DF99320()
{
  return sub_23DF98488(&qword_256D1E2D8, &qword_256D1E220, (uint64_t (*)(void))sub_23DF99354, sub_23DF993D8);
}

unint64_t sub_23DF99354()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E2E0;
  if (!qword_256D1E2E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E2E8);
    v2[0] = sub_23DF993D8();
    v2[1] = sub_23DF89B88(&qword_256D1E310, &qword_256D1E318, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E2E0);
  }
  return result;
}

uint64_t sub_23DF993D8()
{
  return sub_23DF8E904(&qword_256D1E2F0, &qword_256D1E218, (uint64_t (*)(void))sub_23DF993FC, MEMORY[0x24BDF1050]);
}

unint64_t sub_23DF993FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D1E2F8;
  if (!qword_256D1E2F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E210);
    v2 = sub_23DF98488(&qword_256D1E300, &qword_256D1E308, sub_23DF98FB4, (uint64_t (*)(void))sub_23DF990D8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1E2F8);
  }
  return result;
}

unint64_t sub_23DF99484()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E320;
  if (!qword_256D1E320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E328);
    v2[0] = sub_23DF8E904(&qword_256D1E2B0, &qword_256D1E2A8, (uint64_t (*)(void))sub_23DF9915C, MEMORY[0x24BDECC38]);
    v2[1] = sub_23DF89B88(&qword_256D1E2C0, &qword_256D1E290, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E320);
  }
  return result;
}

uint64_t sub_23DF99528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF99538()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF99548()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF99558()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF99568()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DF99578()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E358;
  if (!qword_256D1E358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E348);
    v2[0] = sub_23DF89B88(&qword_256D1E360, &qword_256D1E350, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF995FC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E358);
  }
  return result;
}

unint64_t sub_23DF995FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E368;
  if (!qword_256D1E368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E330);
    v2[0] = sub_23DF89B88(&qword_256D1E360, &qword_256D1E350, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E368);
  }
  return result;
}

uint64_t sub_23DF99680(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_23DF89B88(a3, a4, MEMORY[0x24BDEFB78]);
    v9[1] = sub_23DF89B88(&qword_256D1DFA8, &qword_256D1DFB0, MEMORY[0x24BDEFFA0]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DF99718()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E3C0;
  if (!qword_256D1E3C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E3B0);
    v2[0] = sub_23DF89B88(&qword_256D1E3C8, &qword_256D1E3B8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF9979C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E3C0);
  }
  return result;
}

unint64_t sub_23DF9979C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E3D0;
  if (!qword_256D1E3D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E398);
    v2[0] = sub_23DF89B88(&qword_256D1E3C8, &qword_256D1E3B8, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E3D0);
  }
  return result;
}

unint64_t sub_23DF99820()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E428;
  if (!qword_256D1E428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E418);
    v2[0] = sub_23DF89B88(&qword_256D1E430, &qword_256D1E420, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF998A4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E428);
  }
  return result;
}

unint64_t sub_23DF998A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E438;
  if (!qword_256D1E438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E400);
    v2[0] = sub_23DF89B88(&qword_256D1E430, &qword_256D1E420, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E438);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnimationModel.ControlAnimation(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModel.ControlAnimation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.ControlAnimation()
{
  return &type metadata for AnimationModel.ControlAnimation;
}

uint64_t sub_23DF999CC()
{
  return sub_23DF98488(&qword_256D1E440, &qword_256D1E448, (uint64_t (*)(void))sub_23DF99578, (uint64_t (*)(void))sub_23DF995FC);
}

unint64_t sub_23DF99A04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E450;
  if (!qword_256D1E450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E458);
    v2[0] = sub_23DF89B88(&qword_256D1E388, &qword_256D1E380, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF99680(&qword_256D1E390, &qword_256D1E370, &qword_256D1E388, &qword_256D1E380);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E450);
  }
  return result;
}

uint64_t sub_23DF99AB0()
{
  return sub_23DF98488(&qword_256D1E460, &qword_256D1E468, (uint64_t (*)(void))sub_23DF99718, (uint64_t (*)(void))sub_23DF9979C);
}

unint64_t sub_23DF99AE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E470;
  if (!qword_256D1E470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E478);
    v2[0] = sub_23DF89B88(&qword_256D1E3F0, &qword_256D1E3E8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF99680(&qword_256D1E3F8, &qword_256D1E3D8, &qword_256D1E3F0, &qword_256D1E3E8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E470);
  }
  return result;
}

uint64_t sub_23DF99B94()
{
  return sub_23DF98488(&qword_256D1E480, &qword_256D1E488, (uint64_t (*)(void))sub_23DF99820, (uint64_t (*)(void))sub_23DF998A4);
}

uint64_t sub_23DF99BC8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DF99BD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E4B0;
  if (!qword_256D1E4B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E4A0);
    v2[0] = sub_23DF89B88(&qword_256D1E4B8, &qword_256D1E4A8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF99C5C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E4B0);
  }
  return result;
}

unint64_t sub_23DF99C5C()
{
  unint64_t result;

  result = qword_256D1E4C0;
  if (!qword_256D1E4C0)
  {
    result = MEMORY[0x24264C55C](&unk_23E1392B8, &type metadata for AnimationModel.MatchedGeometryEffect.Control);
    atomic_store(result, (unint64_t *)&qword_256D1E4C0);
  }
  return result;
}

unint64_t sub_23DF99CA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E4C8;
  if (!qword_256D1E4C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E490);
    v2[0] = sub_23DF89B88(&qword_256D1E4B8, &qword_256D1E4A8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF99D24();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E4C8);
  }
  return result;
}

unint64_t sub_23DF99D24()
{
  unint64_t result;

  result = qword_256D1E4D0;
  if (!qword_256D1E4D0)
  {
    result = MEMORY[0x24264C55C](&unk_23E139268, &type metadata for AnimationModel.Visibility.ControlView);
    atomic_store(result, (unint64_t *)&qword_256D1E4D0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AnimationModel.MatchedGeometryEffect.Control(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

_QWORD *_s22HomeAccessoryControlUI14AnimationModelC21MatchedGeometryEffectV8TileViewVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for AnimationModel.MatchedGeometryEffect.Control(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t _s22HomeAccessoryControlUI14AnimationModelC21MatchedGeometryEffectV8TileViewVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s22HomeAccessoryControlUI14AnimationModelC21MatchedGeometryEffectV8TileViewVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.MatchedGeometryEffect.Control()
{
  return &type metadata for AnimationModel.MatchedGeometryEffect.Control;
}

_QWORD *assignWithCopy for AccessoryControlSheetView.BottomView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlSheetView.BottomView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlSheetView.BottomView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModel.Visibility.ControlView()
{
  return &type metadata for AnimationModel.Visibility.ControlView;
}

uint64_t sub_23DF99FF4()
{
  return sub_23DF98488(&qword_256D1E4D8, &qword_256D1E4E0, (uint64_t (*)(void))sub_23DF99BD8, (uint64_t (*)(void))sub_23DF99CA0);
}

uint64_t sub_23DF9A028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF9A038()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DF9A048()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E530;
  if (!qword_256D1E530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E510);
    v2[0] = sub_23DF89B88(&qword_256D1E528, &qword_256D1E520, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E530);
  }
  return result;
}

unint64_t sub_23DF9A0D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E538;
  if (!qword_256D1E538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E540);
    v2[0] = sub_23DF89B88(&qword_256D1E500, &qword_256D1E4F8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF99680(&qword_256D1E508, &qword_256D1E4E8, &qword_256D1E500, &qword_256D1E4F8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E538);
  }
  return result;
}

unint64_t sub_23DF9A180()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E548;
  if (!qword_256D1E548)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E550);
    v2[0] = sub_23DF89B88(&qword_256D1E528, &qword_256D1E520, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF9A048();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E548);
  }
  return result;
}

uint64_t *sub_23DF9A22C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135D60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23DF9A30C(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_23DF9A37C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23E135D60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_retain();
  return a1;
}

_QWORD *sub_23DF9A434(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1DA20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_23DF9A514(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23E135D60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  return a1;
}

char *sub_23DF9A5C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1DA20);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135D60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_23DF9A698()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF9A6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23DF9A730()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF9A73C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t _s9ColorWellVMa()
{
  uint64_t result;

  result = qword_256D1E5B8;
  if (!qword_256D1E5B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DF9A7F4()
{
  unint64_t v0;

  sub_23DF9A874();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23DF9A874()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D1E5C8[0])
  {
    sub_23E135D60();
    v0 = sub_23E135D9C();
    if (!v1)
      atomic_store(v0, qword_256D1E5C8);
  }
}

uint64_t sub_23DF9A8C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF9A8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t KeyPath;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int v197;
  uint64_t v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;

  v193 = a2;
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E608);
  MEMORY[0x24BDAC7A8](v184);
  v189 = (uint64_t)&v151 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E610);
  MEMORY[0x24BDAC7A8](v186);
  v188 = (uint64_t)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E618);
  MEMORY[0x24BDAC7A8](v185);
  v190 = (uint64_t)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E620);
  v6 = MEMORY[0x24BDAC7A8](v187);
  v192 = (uint64_t)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v191 = (uint64_t)&v151 - v8;
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E628);
  MEMORY[0x24BDAC7A8](v183);
  v174 = (uint64_t)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8);
  MEMORY[0x24BDAC7A8](v171);
  v172 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E630);
  v11 = MEMORY[0x24BDAC7A8](v170);
  v13 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v173 = (uint64_t)&v151 - v14;
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E638);
  v15 = MEMORY[0x24BDAC7A8](v168);
  v17 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v195 = (uint64_t)&v151 - v18;
  v164 = sub_23E135D60();
  v167 = *(_QWORD *)(v164 - 8);
  v19 = MEMORY[0x24BDAC7A8](v164);
  v163 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v160 = (uint64_t)&v151 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v166 = (char *)&v151 - v23;
  KeyPath = sub_23E136F90();
  v158 = *(_QWORD *)(KeyPath - 8);
  MEMORY[0x24BDAC7A8](KeyPath);
  v25 = (char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E640);
  MEMORY[0x24BDAC7A8](v157);
  v165 = (uint64_t)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E648);
  v27 = MEMORY[0x24BDAC7A8](v161);
  v169 = (uint64_t)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v162 = (char *)&v151 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v194 = (uint64_t)&v151 - v31;
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E650);
  MEMORY[0x24BDAC7A8](v178);
  v180 = (uint64_t)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E658);
  MEMORY[0x24BDAC7A8](v179);
  v156 = (char *)&v151 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E660);
  MEMORY[0x24BDAC7A8](v152);
  v35 = (char *)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E668);
  MEMORY[0x24BDAC7A8](v153);
  v37 = (char *)&v151 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E670);
  v38 = MEMORY[0x24BDAC7A8](v154);
  v40 = (char *)&v151 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v155 = (char *)&v151 - v41;
  v198 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v198);
  v43 = (char *)&v151 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E678);
  v44 = MEMORY[0x24BDAC7A8](v176);
  v46 = (char *)&v151 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v177 = (uint64_t)&v151 - v47;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E680);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v182 = (uint64_t)&v151 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v181 = (char *)&v151 - v51;
  v52 = _s9ColorWellVMa();
  v53 = a1;
  v54 = *(_QWORD *)(a1 + *(int *)(v52 + 20));
  __asm { FMOV            V0.2D, #10.0 }
  v199 = _Q0;
  if (v54)
  {
    v60 = &v43[*(int *)(v198 + 20)];
    v156 = v13;
    v197 = *MEMORY[0x24BDEEB68];
    v61 = v197;
    v154 = v52;
    v62 = sub_23E136324();
    v155 = v17;
    v196 = v62;
    v153 = *(_QWORD *)(*(_QWORD *)(v62 - 8) + 104);
    ((void (*)(char *, uint64_t, uint64_t))v153)(v60, v61, v62);
    *(_OWORD *)v43 = v199;
    swift_retain();
    v63 = v25;
    sub_23E136F78();
    v175 = v54;
    v64 = v165;
    sub_23DF9BB38((uint64_t)v43, v165);
    v65 = v157;
    v66 = v158;
    v67 = KeyPath;
    (*(void (**)(uint64_t, char *, uint64_t))(v158 + 16))(v64 + *(int *)(v157 + 52), v63, KeyPath);
    *(_WORD *)(v64 + *(int *)(v65 + 56)) = 256;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v67);
    sub_23DF9BB7C((uint64_t)v43);
    KeyPath = swift_getKeyPath();
    v68 = v160;
    v151 = v53;
    sub_23DF9C970(v160);
    v69 = *MEMORY[0x24BDEB400];
    v70 = v167;
    v71 = *(void (**)(char *, uint64_t, uint64_t))(v167 + 104);
    v72 = v163;
    v73 = v164;
    v71(v163, *MEMORY[0x24BDEB400], v164);
    sub_23DF9BEA8();
    v74 = sub_23E137158();
    v75 = *(void (**)(char *, uint64_t))(v70 + 8);
    v75(v72, v73);
    v75((char *)v68, v73);
    if ((v74 & 1) != 0)
      v76 = *MEMORY[0x24BDEB3F0];
    else
      v76 = v69;
    v77 = v166;
    v71(v166, v76, v73);
    v78 = (uint64_t)v162;
    v79 = (uint64_t *)&v162[*(int *)(v161 + 36)];
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v79 + *(int *)(v80 + 28), v77, v73);
    *v79 = KeyPath;
    sub_23DF89C1C(v64, v78, &qword_256D1E640);
    v75(v77, v73);
    sub_23DF89C7C(v64, &qword_256D1E640);
    v81 = v194;
    sub_23DF89340(v78, v194, &qword_256D1E648);
    v82 = v198;
    v83 = v197;
    v84 = v196;
    v85 = (void (*)(char *, uint64_t, uint64_t))v153;
    ((void (*)(char *, _QWORD, uint64_t))v153)(&v43[*(int *)(v198 + 20)], v197, v196);
    *(_OWORD *)v43 = v199;
    v86 = v177;
    sub_23DF9BB38((uint64_t)v43, v177);
    v87 = v176;
    v88 = v175;
    *(_QWORD *)(v86 + *(int *)(v176 + 52)) = v175;
    *(_WORD *)(v86 + *(int *)(v87 + 56)) = 256;
    v89 = v88;
    swift_retain();
    sub_23DF9BB7C((uint64_t)v43);
    v90 = 1.0 - *(double *)(v151 + *(int *)(v154 + 24));
    v91 = (uint64_t)v155;
    sub_23DF89C1C(v86, (uint64_t)v155, &qword_256D1E678);
    *(double *)(v91 + *(int *)(v168 + 36)) = v90;
    sub_23DF89C7C(v86, &qword_256D1E678);
    v92 = v195;
    sub_23DF89340(v91, v195, &qword_256D1E638);
    v85(&v43[*(int *)(v82 + 20)], v83, v84);
    *(_OWORD *)v43 = v199;
    v93 = v172;
    sub_23DF9BB38((uint64_t)v43, v172);
    *(_WORD *)(v93 + *(int *)(v171 + 36)) = 256;
    v94 = (uint64_t)v156;
    sub_23DF89C1C(v93, (uint64_t)&v156[*(int *)(v170 + 36)], &qword_256D1E0F8);
    *(_QWORD *)v94 = v89;
    *(_WORD *)(v94 + 8) = 256;
    swift_retain();
    sub_23DF89C7C(v93, &qword_256D1E0F8);
    sub_23DF9BB7C((uint64_t)v43);
    v95 = v173;
    sub_23DF89340(v94, v173, &qword_256D1E630);
    v96 = v169;
    sub_23DF89C1C(v81, v169, &qword_256D1E648);
    sub_23DF89C1C(v92, v91, &qword_256D1E638);
    sub_23DF89C1C(v95, v94, &qword_256D1E630);
    v97 = v174;
    sub_23DF89C1C(v96, v174, &qword_256D1E648);
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B8);
    sub_23DF89C1C(v91, v97 + *(int *)(v98 + 48), &qword_256D1E638);
    sub_23DF89C1C(v94, v97 + *(int *)(v98 + 64), &qword_256D1E630);
    sub_23DF89C7C(v94, &qword_256D1E630);
    sub_23DF89C7C(v91, &qword_256D1E638);
    sub_23DF89C7C(v96, &qword_256D1E648);
    sub_23DF89C1C(v97, v180, &qword_256D1E628);
    swift_storeEnumTagMultiPayload();
    v99 = MEMORY[0x24BDF5428];
    sub_23DF89B88(&qword_256D1E690, &qword_256D1E628, MEMORY[0x24BDF5428]);
    sub_23DF89B88(&qword_256D1E698, &qword_256D1E658, v99);
    v100 = (uint64_t)v181;
    sub_23E136480();
    swift_release();
    sub_23DF89C7C(v97, &qword_256D1E628);
    sub_23DF89C7C(v95, &qword_256D1E630);
    sub_23DF89C7C(v195, &qword_256D1E638);
    v101 = v194;
    v102 = &qword_256D1E648;
  }
  else
  {
    v103 = v198;
    v104 = &v43[*(int *)(v198 + 20)];
    v105 = *MEMORY[0x24BDEEB68];
    v106 = sub_23E136324();
    v107 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 104);
    v107(v104, v105, v106);
    *(_OWORD *)v43 = v199;
    v108 = sub_23E136C0C();
    sub_23DF9BB38((uint64_t)v43, (uint64_t)v46);
    v109 = v176;
    *(_QWORD *)&v46[*(int *)(v176 + 52)] = v108;
    *(_WORD *)&v46[*(int *)(v109 + 56)] = 256;
    sub_23DF9BB7C((uint64_t)v43);
    v110 = v177;
    sub_23DF89340((uint64_t)v46, v177, &qword_256D1E678);
    v111 = &v43[*(int *)(v103 + 20)];
    v197 = v105;
    v196 = v106;
    v107(v111, v105, v106);
    __asm { FMOV            V0.2D, #1.5 }
    *(_OWORD *)v43 = _Q0;
    sub_23E136FE4();
    sub_23E135E5C();
    sub_23DF9BB38((uint64_t)v43, (uint64_t)v35);
    v113 = &v35[*(int *)(v152 + 36)];
    v114 = v201;
    *(_OWORD *)v113 = v200;
    *((_OWORD *)v113 + 1) = v114;
    *((_OWORD *)v113 + 2) = v202;
    sub_23DF9BB7C((uint64_t)v43);
    v115 = sub_23E136BF4();
    v116 = swift_getKeyPath();
    sub_23DF89C1C((uint64_t)v35, (uint64_t)v37, &qword_256D1E660);
    v117 = (uint64_t *)&v37[*(int *)(v153 + 36)];
    *v117 = v116;
    v117[1] = v115;
    sub_23DF89C7C((uint64_t)v35, &qword_256D1E660);
    sub_23E137080();
    v119 = v118;
    v121 = v120;
    sub_23DF89C1C((uint64_t)v37, (uint64_t)v40, &qword_256D1E668);
    v122 = &v40[*(int *)(v154 + 36)];
    *(_QWORD *)v122 = 0xBFE921FB54442D18;
    *((_QWORD *)v122 + 1) = v119;
    *((_QWORD *)v122 + 2) = v121;
    sub_23DF89C7C((uint64_t)v37, &qword_256D1E668);
    v123 = (uint64_t)v155;
    sub_23DF89340((uint64_t)v40, (uint64_t)v155, &qword_256D1E670);
    sub_23DF89C1C(v110, (uint64_t)v46, &qword_256D1E678);
    sub_23DF89C1C(v123, (uint64_t)v40, &qword_256D1E670);
    v124 = (uint64_t)v156;
    sub_23DF89C1C((uint64_t)v46, (uint64_t)v156, &qword_256D1E678);
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E688);
    sub_23DF89C1C((uint64_t)v40, v124 + *(int *)(v125 + 48), &qword_256D1E670);
    sub_23DF89C7C((uint64_t)v40, &qword_256D1E670);
    sub_23DF89C7C((uint64_t)v46, &qword_256D1E678);
    sub_23DF89C1C(v124, v180, &qword_256D1E658);
    swift_storeEnumTagMultiPayload();
    v126 = MEMORY[0x24BDF5428];
    sub_23DF89B88(&qword_256D1E690, &qword_256D1E628, MEMORY[0x24BDF5428]);
    sub_23DF89B88(&qword_256D1E698, &qword_256D1E658, v126);
    v100 = (uint64_t)v181;
    sub_23E136480();
    sub_23DF89C7C(v124, &qword_256D1E658);
    sub_23DF89C7C(v123, &qword_256D1E670);
    v101 = v110;
    v102 = &qword_256D1E678;
  }
  sub_23DF89C7C(v101, v102);
  v127 = &v43[*(int *)(v198 + 20)];
  sub_23E136324();
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v196 - 8) + 104))(v127, v197);
  *(_OWORD *)v43 = v199;
  sub_23E135DCC();
  v128 = v189;
  sub_23DF9BB38((uint64_t)v43, v189);
  v129 = v128 + *(int *)(v184 + 36);
  v130 = v204;
  *(_OWORD *)v129 = v203;
  *(_OWORD *)(v129 + 16) = v130;
  *(_QWORD *)(v129 + 32) = v205;
  sub_23DF9BB7C((uint64_t)v43);
  v131 = sub_23E136C24();
  v132 = swift_getKeyPath();
  v133 = v188;
  sub_23DF89C1C(v128, v188, &qword_256D1E608);
  v134 = (uint64_t *)(v133 + *(int *)(v186 + 36));
  *v134 = v132;
  v134[1] = v131;
  sub_23DF89C7C(v128, &qword_256D1E608);
  v135 = v190;
  sub_23DF89C1C(v133, v190, &qword_256D1E610);
  *(_QWORD *)(v135 + *(int *)(v185 + 36)) = 0x3FC3333333333333;
  sub_23DF89C7C(v133, &qword_256D1E610);
  LOBYTE(v131) = sub_23E13672C();
  sub_23E135D00();
  v137 = v136;
  v139 = v138;
  v141 = v140;
  v143 = v142;
  v144 = v192;
  sub_23DF89C1C(v135, v192, &qword_256D1E618);
  v145 = v144 + *(int *)(v187 + 36);
  *(_BYTE *)v145 = v131;
  *(_QWORD *)(v145 + 8) = v137;
  *(_QWORD *)(v145 + 16) = v139;
  *(_QWORD *)(v145 + 24) = v141;
  *(_QWORD *)(v145 + 32) = v143;
  *(_BYTE *)(v145 + 40) = 0;
  sub_23DF89C7C(v135, &qword_256D1E618);
  v146 = v191;
  sub_23DF89340(v144, v191, &qword_256D1E620);
  v147 = v182;
  sub_23DF89C1C(v100, v182, &qword_256D1E680);
  sub_23DF89C1C(v146, v144, &qword_256D1E620);
  v148 = v193;
  sub_23DF89C1C(v147, v193, &qword_256D1E680);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6A0);
  sub_23DF89C1C(v144, v148 + *(int *)(v149 + 48), &qword_256D1E620);
  sub_23DF89C7C(v146, &qword_256D1E620);
  sub_23DF89C7C(v100, &qword_256D1E680);
  sub_23DF89C7C(v144, &qword_256D1E620);
  return sub_23DF89C7C(v147, &qword_256D1E680);
}

uint64_t sub_23DF9BAF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = sub_23E136FE4();
  a1[1] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E600);
  return sub_23DF9A8D8(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_23DF9BB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E136030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DF9BB7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E136030();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_23DF9BBB8@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v11;
  __int128 v12;
  char v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  sub_23E136894();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMaxY(v15);
  sub_23E13687C();
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMaxX(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMinY(v17);
  sub_23E136888();
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMinX(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMinY(v19);
  sub_23E136888();
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetMinX(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetMaxY(v21);
  sub_23E136888();
  sub_23E136870();
  result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_23DF9BD1C()
{
  return sub_23E136D44();
}

void (*sub_23DF9BD34(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_23E135CD0();
  return sub_23DF9BD90;
}

void sub_23DF9BD90(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_23DF9BDC0()
{
  sub_23DF9C030();
  return sub_23E136D80();
}

uint64_t sub_23DF9BE10()
{
  sub_23DF9C030();
  return sub_23E136D50();
}

uint64_t sub_23DF9BE60()
{
  sub_23DF9C030();
  return sub_23E136D68();
}

unint64_t sub_23DF9BEA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1E6A8;
  if (!qword_256D1E6A8)
  {
    v1 = sub_23E135D60();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEB440], v1);
    atomic_store(result, (unint64_t *)&qword_256D1E6A8);
  }
  return result;
}

ValueMetadata *_s8TriangleVMa()
{
  return &_s8TriangleVN;
}

uint64_t sub_23DF9BF00()
{
  return sub_23DF89B88(&qword_256D1E6C0, &qword_256D1E6C8, MEMORY[0x24BDF4750]);
}

uint64_t sub_23DF9BF2C()
{
  return sub_23DF89B88(&qword_256D1E6D0, &qword_256D1E6D8, MEMORY[0x24BDEB358]);
}

unint64_t sub_23DF9BF5C()
{
  unint64_t result;

  result = qword_256D1E6E0;
  if (!qword_256D1E6E0)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_256D1E6E0);
  }
  return result;
}

unint64_t sub_23DF9BFA4()
{
  unint64_t result;

  result = qword_256D1E6E8;
  if (!qword_256D1E6E8)
  {
    result = MEMORY[0x24264C55C](&unk_23E139458, &_s8TriangleVN);
    atomic_store(result, (unint64_t *)&qword_256D1E6E8);
  }
  return result;
}

unint64_t sub_23DF9BFEC()
{
  unint64_t result;

  result = qword_256D1E6F0;
  if (!qword_256D1E6F0)
  {
    result = MEMORY[0x24264C55C](&unk_23E139408, &_s8TriangleVN);
    atomic_store(result, (unint64_t *)&qword_256D1E6F0);
  }
  return result;
}

unint64_t sub_23DF9C030()
{
  unint64_t result;

  result = qword_256D1E6F8;
  if (!qword_256D1E6F8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1394A8, &_s8TriangleVN);
    atomic_store(result, (unint64_t *)&qword_256D1E6F8);
  }
  return result;
}

id BottomViewControllerHostingView.makeUIViewController(context:)()
{
  id *v0;

  return *v0;
}

uint64_t BottomViewControllerHostingView.updateUIViewController(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  id v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v18;
  __int16 v19;
  char v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  __int16 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v3 = *(void **)v2;
  v16 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 40);
  v13 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 48);
  v18 = *(_QWORD *)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)(v2 + 72);
  v10 = *(_BYTE *)(v2 + 80);
  v11 = *(_BYTE *)(v2 + 81);
  ObjectType = swift_getObjectType();
  v35 = v4;
  v36 = v5;
  v37 = v13;
  v38 = v6;
  v39 = v7;
  v40 = v18;
  v41 = v8;
  v42 = v9;
  v43 = v10;
  v44 = v11;
  v14 = v3;
  sub_23DF98590(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);
  sub_23DF98590(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);
  sub_23DF9C754((uint64_t)&v27);
  sub_23DF985F0(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);

  sub_23DF985F0(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);
  v19 = v27;
  v20 = v28;
  v21 = v29;
  v22 = v30;
  v23 = v31;
  v24 = v32;
  v25 = v33;
  v26 = v34;
  (*(void (**)(__int16 *, uint64_t, uint64_t, uint64_t))(v16 + 24))(&v19, a2, ObjectType, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
}

id BottomViewControllerHostingView.sizeThatFits(_:uiViewController:context:)(uint64_t a1, char a2)
{
  return sub_23DF9D1C0(a1, a2 & 1);
}

id sub_23DF9C29C()
{
  id *v0;

  return *v0;
}

uint64_t sub_23DF9C2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  id v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v18;
  __int16 v19;
  char v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  __int16 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v3 = *(void **)v2;
  v16 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 40);
  v13 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 48);
  v18 = *(_QWORD *)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)(v2 + 72);
  v10 = *(_BYTE *)(v2 + 80);
  v11 = *(_BYTE *)(v2 + 81);
  ObjectType = swift_getObjectType();
  v35 = v4;
  v36 = v5;
  v37 = v13;
  v38 = v6;
  v39 = v7;
  v40 = v18;
  v41 = v8;
  v42 = v9;
  v43 = v10;
  v44 = v11;
  v14 = v3;
  sub_23DF98590(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);
  sub_23DF98590(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);
  sub_23DF9C754((uint64_t)&v27);
  sub_23DF985F0(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);

  sub_23DF985F0(v4, v5, v13, v6, v7, v18, v8, v9, v10, v11);
  v19 = v27;
  v20 = v28;
  v21 = v29;
  v22 = v30;
  v23 = v31;
  v24 = v32;
  v25 = v33;
  v26 = v34;
  (*(void (**)(__int16 *, uint64_t, uint64_t, uint64_t))(v16 + 24))(&v19, a2, ObjectType, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
}

id sub_23DF9C49C(uint64_t a1, char a2)
{
  return sub_23DF9D1C0(a1, a2 & 1);
}

uint64_t sub_23DF9C4D8()
{
  sub_23DF9D648();
  return sub_23E1366C0();
}

uint64_t sub_23DF9C528()
{
  sub_23DF9D648();
  return sub_23E136690();
}

void sub_23DF9C578()
{
  sub_23DF9D648();
  sub_23E1366B4();
  __break(1u);
}

uint64_t sub_23DF9C59C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_23E136258();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_23E13735C();
  v9 = sub_23E1366F0();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_23E0AB274(1819242306, 0xE400000000000000, &v15);
    sub_23E1374B8();
    _os_log_impl(&dword_23DF71000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v12, -1, -1);
    MEMORY[0x24264C628](v11, -1, -1);
  }

  sub_23E13624C();
  swift_getAtKeyPath();
  sub_23DF8A078(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_23DF9C754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  __int128 v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_23E136258();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 65) == 1)
  {
    v8 = *(_BYTE *)(v1 + 64);
    v9 = *(_QWORD *)(v1 + 56);
    v10 = *(_DWORD *)(v1 + 48);
    v11 = *(_BYTE *)(v1 + 8);
    *(_WORD *)a1 = *(_QWORD *)v1;
    *(_BYTE *)(a1 + 8) = v11 & 1;
    v12 = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(a1 + 32) = v12;
    *(_BYTE *)(a1 + 48) = v10 & 1;
    *(_BYTE *)(a1 + 49) = BYTE1(v10) & 1;
    *(_QWORD *)(a1 + 56) = v9;
    *(_BYTE *)(a1 + 64) = v8;
  }
  else
  {
    sub_23DF98EC8(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    v13 = sub_23E13735C();
    v14 = sub_23E1366F0();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v16 = 136315138;
      v18 = v16 + 4;
      v20 = sub_23E0AB274(0xD000000000000016, 0x800000023E144590, &v21);
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      v17 = v19;
      swift_arrayDestroy();
      MEMORY[0x24264C628](v17, -1, -1);
      MEMORY[0x24264C628](v16, -1, -1);
    }

    sub_23E13624C();
    swift_getAtKeyPath();
    sub_23DF98EC8(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23DF9C970@<X0>(uint64_t a1@<X8>)
{
  return sub_23DF9CD78(&qword_256D1DA20, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_23DF9C9A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17[2];
  char v18;

  v2 = v1;
  v4 = sub_23E136258();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(v2, (uint64_t)v17, qword_256D1E720);
  if (v18 == 1)
    return sub_23DF9D6A8(v17, a1);
  v9 = sub_23E13735C();
  v10 = sub_23E1366F0();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15[1] = a1;
    v14 = v13;
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15[2] = sub_23E0AB274(0xD00000000000001ALL, 0x800000023E1445B0, &v16);
    sub_23E1374B8();
    _os_log_impl(&dword_23DF71000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v14, -1, -1);
    MEMORY[0x24264C628](v12, -1, -1);
  }

  sub_23E13624C();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_23DF9CB84(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_23E136258();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_23E13735C();
  v9 = sub_23E1366F0();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_23E0AB274(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_23E1374B8();
    _os_log_impl(&dword_23DF71000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v12, -1, -1);
    MEMORY[0x24264C628](v11, -1, -1);
  }

  sub_23E13624C();
  swift_getAtKeyPath();
  sub_23DF8A078(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_23DF9CD44@<X0>(uint64_t a1@<X8>)
{
  return sub_23DF9CD78(&qword_256D1E710, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_23DF9CD78@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_23E136258();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_23E13735C();
    v21 = sub_23E1366F0();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_23E0AB274(v28, v26, &v30);
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264C628](v24, -1, -1);
      MEMORY[0x24264C628](v23, -1, -1);
    }

    sub_23E13624C();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_23DF9CFB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v6 = sub_23E136258();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    sub_23DF9765C(a1);
  }
  else
  {
    swift_retain();
    v10 = sub_23E13735C();
    v11 = sub_23E1366F0();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_23E0AB274(0xD000000000000012, 0x800000023E144570, &v17);
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264C628](v14, -1, -1);
      MEMORY[0x24264C628](v13, -1, -1);
    }

    sub_23E13624C();
    swift_getAtKeyPath();
    sub_23DF9D68C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

uint64_t sub_23DF9D18C@<X0>(uint64_t a1@<X8>)
{
  return sub_23DF9CD78(&qword_256D1E718, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

id sub_23DF9D1C0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t ObjectType;
  id result;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v6 = *(void **)v2;
  v5 = *(_QWORD *)(v2 + 8);
  ObjectType = swift_getObjectType();
  result = objc_msgSend(v6, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

    v10 = (*(double (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    v11 = *(double *)&a1;
    if (v10 <= *(double *)&a1)
      v12 = v10;
    else
      v12 = *(double *)&a1;
    if ((a2 & 1) != 0)
    {
      v12 = v10;
      v11 = 1.0;
    }
    if (v10 <= 0.0)
      v13 = v11;
    else
      v13 = v12;
    return *(id *)&v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_23DF9D28C()
{
  unint64_t result;

  result = qword_256D1E700;
  if (!qword_256D1E700)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for BottomViewControllerHostingView, &type metadata for BottomViewControllerHostingView);
    atomic_store(result, (unint64_t *)&qword_256D1E700);
  }
  return result;
}

uint64_t sub_23DF9D2D0()
{
  return MEMORY[0x24BDF5560];
}

uint64_t destroy for BottomViewControllerHostingView(uint64_t a1)
{

  return sub_23DF985F0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80), *(_BYTE *)(a1 + 81));
}

uint64_t initializeWithCopy for BottomViewControllerHostingView(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  uint64_t v15;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  v6 = *((_QWORD *)a2 + 4);
  v7 = *((_QWORD *)a2 + 5);
  v8 = *((_QWORD *)a2 + 6);
  v9 = *((_QWORD *)a2 + 7);
  v10 = *((_QWORD *)a2 + 8);
  v15 = *((_QWORD *)a2 + 9);
  v11 = *((_BYTE *)a2 + 80);
  v12 = *((_BYTE *)a2 + 81);
  v13 = (id)v3;
  sub_23DF98590(v4, v5, v6, v7, v8, v9, v10, v15, v11, v12);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 81) = v12;
  return a1;
}

uint64_t assignWithCopy for BottomViewControllerHostingView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v27;

  v2 = a2;
  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v4;

  *(_QWORD *)(a1 + 8) = v5;
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_QWORD *)(v2 + 48);
  v13 = *(_QWORD *)(v2 + 56);
  v14 = *(_QWORD *)(v2 + 64);
  v15 = *(_QWORD *)(v2 + 72);
  v27 = *(_BYTE *)(v2 + 80);
  LOBYTE(v2) = *(_BYTE *)(v2 + 81);
  sub_23DF98590(v8, v9, v10, v11, v12, v13, v14, v15, v27, v2);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(_QWORD *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 72);
  v24 = *(_BYTE *)(a1 + 80);
  v25 = *(_BYTE *)(a1 + 81);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 80) = v27;
  *(_BYTE *)(a1 + 81) = v2;
  sub_23DF985F0(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BottomViewControllerHostingView(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_BYTE *)(a2 + 81);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 80);
  v15 = *(_BYTE *)(a1 + 81);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 81) = v5;
  sub_23DF985F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomViewControllerHostingView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 82))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomViewControllerHostingView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 82) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomViewControllerHostingView()
{
  return &type metadata for BottomViewControllerHostingView;
}

uint64_t dispatch thunk of AccessoryControlBottomViewController.contentSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccessoryControlBottomViewController.disableScrollingIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AccessoryControlBottomViewController.update(with:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

unint64_t sub_23DF9D648()
{
  unint64_t result;

  result = qword_256D1E708;
  if (!qword_256D1E708)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for BottomViewControllerHostingView, &type metadata for BottomViewControllerHostingView);
    atomic_store(result, (unint64_t *)&qword_256D1E708);
  }
  return result;
}

uint64_t sub_23DF9D68C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_23DF9D698(result);
  else
    return swift_release();
}

uint64_t sub_23DF9D698(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23DF9D6A8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_23DF9D6C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  char v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    v29 = *(_BYTE *)(a2 + 64);
    v30 = *(_BYTE *)(a2 + 65);
    sub_23DF98590(*(_QWORD *)a2, v7, v8, v9, v10, v11, v13, v12, v29, v30);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v12;
    *(_BYTE *)(a1 + 64) = v29;
    *(_BYTE *)(a1 + 65) = v30;
    v14 = (_QWORD *)(a1 + 72);
    v15 = (_QWORD *)(a2 + 72);
    v16 = *(_BYTE *)(a2 + 112);
    if ((v16 & 1) != 0)
    {
      v17 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 96) = v17;
      (**(void (***)(_QWORD *, _QWORD *))(v17 - 8))(v14, v15);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    *(_BYTE *)(a1 + 112) = v16;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v19 = *(int *)(a3 + 28);
    v20 = a1 + v19;
    v21 = a2 + v19;
    v22 = sub_23E134C80();
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    v24 = *(int *)(a3 + 32);
    v25 = a1 + v24;
    v26 = a2 + v24;
    v27 = sub_23E134CF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t sub_23DF9D854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23DF985F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), *(_BYTE *)(a1 + 65));
  if ((*(_BYTE *)(a1 + 112) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + 72);
  else
    swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_23E134CF8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_23DF9D914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v28;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v27 = *(_BYTE *)(a2 + 64);
  v28 = *(_BYTE *)(a2 + 65);
  sub_23DF98590(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v27, v28);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v27;
  *(_BYTE *)(a1 + 65) = v28;
  v13 = (_QWORD *)(a1 + 72);
  v14 = (_QWORD *)(a2 + 72);
  v15 = *(_BYTE *)(a2 + 112);
  if ((v15 & 1) != 0)
  {
    v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 96) = v16;
    (**(void (***)(_QWORD *, _QWORD *))(v16 - 8))(v13, v14);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  *(_BYTE *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v17 = *(int *)(a3 + 28);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23E134C80();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  v22 = *(int *)(a3 + 32);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

uint64_t sub_23DF9DA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  char v34;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v33 = *(_BYTE *)(a2 + 64);
  v34 = *(_BYTE *)(a2 + 65);
  sub_23DF98590(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v33, v34);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_BYTE *)(a1 + 64);
  v22 = *(_BYTE *)(a1 + 65);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v33;
  *(_BYTE *)(a1 + 65) = v34;
  sub_23DF985F0(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    sub_23DF89C7C(a1 + 72, qword_256D1E720);
    if ((*(_BYTE *)(a2 + 112) & 1) != 0)
    {
      v23 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 96) = v23;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 72, a2 + 72);
      *(_BYTE *)(a1 + 112) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 112) = 0;
      swift_retain();
    }
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(int *)(a3 + 28);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = *(int *)(a3 + 32);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

uint64_t sub_23DF9DC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = *(_OWORD *)(a2 + 97);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 97) = v8;
  v12 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = *(int *)(a3 + 32);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_23DF9DCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(_BYTE *)(a2 + 65);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_BYTE *)(a1 + 64);
  v17 = *(_BYTE *)(a1 + 65);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 65) = v7;
  sub_23DF985F0(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  if (a1 != a2)
  {
    sub_23DF89C7C(a1 + 72, qword_256D1E720);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v20 = *(int *)(a3 + 28);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = *(int *)(a3 + 32);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t sub_23DF9DE1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF9DE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E134C80();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_23E134CF8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_23DF9DEC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DF9DED4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 120) = (a2 - 1);
  }
  else
  {
    v8 = sub_23E134C80();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_23E134CF8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for TimersControlView()
{
  uint64_t result;

  result = qword_256D1E780;
  if (!qword_256D1E780)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DF9DFAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    result = sub_23E134CF8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23DF9E054()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DF9E064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  _OWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(void);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;

  v154 = a2;
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7D0);
  MEMORY[0x24BDAC7A8](v146);
  v135 = (uint64_t)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v129);
  v132 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TimersControlView();
  v123 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v124 = v6;
  v125 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7D8);
  MEMORY[0x24BDAC7A8](v126);
  v131 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7E0);
  MEMORY[0x24BDAC7A8](v127);
  v130 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7E8);
  v9 = MEMORY[0x24BDAC7A8](v128);
  v11 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v134 = (uint64_t)&v120 - v12;
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7F0);
  MEMORY[0x24BDAC7A8](v140);
  v141 = (uint64_t)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7F8);
  v137 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v136 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E800);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v145 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v144 = (char *)&v120 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E808);
  MEMORY[0x24BDAC7A8](v19);
  v152 = (uint64_t *)((char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E810);
  v21 = MEMORY[0x24BDAC7A8](v150);
  v143 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v151 = (char *)&v120 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v155 = (uint64_t)&v120 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E818);
  MEMORY[0x24BDAC7A8](v26);
  v149 = (char *)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23E136F00();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v139 = (char *)&v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E820);
  MEMORY[0x24BDAC7A8](v138);
  v148 = (char *)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E828);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v157 = (uint64_t)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v156 = (uint64_t)&v120 - v35;
  v36 = sub_23E134FBC();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v160 = (uint64_t)&v120 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v120 - v40;
  v153 = a1;
  v42 = *(_QWORD *)(a1 + 120);
  v43 = MEMORY[0x24BEE4AF8];
  v161 = MEMORY[0x24BEE4AF8];
  v44 = *(_QWORD *)(v42 + 16);
  result = swift_bridgeObjectRetain();
  v159 = v44;
  v133 = v11;
  v147 = v32;
  if (v44)
  {
    v121 = v29;
    v122 = v28;
    v46 = 0;
    v158 = v42;
    while (v46 < *(_QWORD *)(v42 + 16))
    {
      v47 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      v48 = *(_QWORD *)(v37 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v41, v42 + v47 + v48 * v46, v36);
      if ((sub_23E134F5C() & 1) != 0)
      {
        v49 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
        v49(v160, v41, v36);
        v50 = v161;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E204(0, *(_QWORD *)(v50 + 16) + 1, 1);
          v50 = v161;
        }
        v52 = *(_QWORD *)(v50 + 16);
        v51 = *(_QWORD *)(v50 + 24);
        if (v52 >= v51 >> 1)
        {
          sub_23E09E204(v51 > 1, v52 + 1, 1);
          v50 = v161;
        }
        *(_QWORD *)(v50 + 16) = v52 + 1;
        result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v49)(v50 + v47 + v52 * v48, v160, v36);
        v161 = v50;
        v42 = v158;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v41, v36);
      }
      if (v159 == ++v46)
      {
        v160 = v161;
        v28 = v122;
        v29 = v121;
        v53 = v139;
        v54 = v138;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v53 = v139;
    v54 = v138;
    v160 = v43;
LABEL_14:
    swift_bridgeObjectRelease();
    sub_23E136EF4();
    v55 = sub_23E136540();
    v56 = sub_23E13672C();
    v57 = (uint64_t)v148;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v148, v53, v28);
    v58 = v57 + *(int *)(v54 + 36);
    *(_DWORD *)v58 = v55;
    *(_BYTE *)(v58 + 4) = v56;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v53, v28);
    KeyPath = swift_getKeyPath();
    v60 = (uint64_t)v149;
    sub_23E136F84();
    v61 = sub_23E136F90();
    v62 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56);
    v62(v60, 0, 1, v61);
    v63 = v157;
    v64 = (uint64_t *)(v157 + *(int *)(v147 + 36));
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E830);
    sub_23DF89C1C(v60, (uint64_t)v64 + *(int *)(v65 + 28), &qword_256D1E818);
    *v64 = KeyPath;
    sub_23DF89C1C(v57, v63, &qword_256D1E820);
    sub_23DF89C7C(v60, &qword_256D1E818);
    sub_23DF89C7C(v57, &qword_256D1E820);
    sub_23DF89340(v63, v156, &qword_256D1E828);
    v66 = sub_23E1362D0();
    v67 = (uint64_t)v152;
    *v152 = v66;
    *(_QWORD *)(v67 + 8) = 0;
    *(_BYTE *)(v67 + 16) = 1;
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E838);
    v69 = v153;
    v70 = v160;
    sub_23DF9EF10(v153, v160, v67 + *(int *)(v68 + 44));
    v71 = swift_getKeyPath();
    sub_23E136F84();
    v62(v60, 0, 1, v61);
    v72 = (uint64_t)v151;
    v73 = (uint64_t *)&v151[*(int *)(v150 + 36)];
    sub_23DF89C1C(v60, (uint64_t)v73 + *(int *)(v65 + 28), &qword_256D1E818);
    *v73 = v71;
    sub_23DF89C1C(v67, v72, &qword_256D1E808);
    sub_23DF89C7C(v60, &qword_256D1E818);
    sub_23DF89C7C(v67, &qword_256D1E808);
    v74 = v72;
    v75 = v155;
    sub_23DF89340(v74, v155, &qword_256D1E810);
    if (*(_QWORD *)(v70 + 16))
    {
      v161 = v70;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8A8);
      sub_23E134C80();
      type metadata accessor for TimerCell(0);
      sub_23DF89B88(&qword_256D1E8B0, &qword_256D1E8A8, MEMORY[0x24BEE12D8]);
      sub_23DF73F28(&qword_256D1E890, type metadata accessor for TimerCell, (uint64_t)&unk_23E13F1F4);
      sub_23DF73F28(&qword_256D1E8B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9B0], MEMORY[0x24BE4D9C8]);
      v76 = v136;
      sub_23E136F18();
      v77 = v137;
      v78 = v142;
      (*(void (**)(uint64_t, char *, uint64_t))(v137 + 16))(v141, v76, v142);
      swift_storeEnumTagMultiPayload();
      sub_23DFA04D0();
      sub_23DF89B88(&qword_256D1E898, &qword_256D1E7D0, MEMORY[0x24BDF5428]);
      v79 = (uint64_t)v144;
      sub_23E136480();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
    }
    else
    {
      swift_release();
      v80 = v125;
      sub_23DF73E10(v69, v125, (uint64_t (*)(_QWORD))type metadata accessor for TimersControlView);
      v81 = (*(unsigned __int8 *)(v123 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
      v82 = swift_allocObject();
      v83 = sub_23DF89384(v80, v82 + v81, (uint64_t (*)(_QWORD))type metadata accessor for TimersControlView);
      MEMORY[0x24BDAC7A8](v83);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E840);
      sub_23DFA03E0();
      v84 = (uint64_t)v131;
      sub_23E136DEC();
      v85 = sub_23E136FE4();
      v87 = v86;
      v88 = (uint64_t *)(v84 + *(int *)(v126 + 36));
      *v88 = sub_23E136FE4();
      v88[1] = v89;
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E870);
      sub_23DFA017C((uint64_t)v88 + *(int *)(v90 + 44));
      v91 = (uint64_t *)((char *)v88 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E878) + 36));
      *v91 = v85;
      v91[1] = v87;
      v92 = v132;
      v93 = &v132[*(int *)(v129 + 20)];
      v94 = *MEMORY[0x24BDEEB68];
      v95 = sub_23E136324();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 104))(v93, v94, v95);
      __asm { FMOV            V0.2D, #10.0 }
      *v92 = _Q0;
      v101 = (uint64_t)v130;
      v102 = (uint64_t)&v130[*(int *)(v127 + 36)];
      v103 = MEMORY[0x24BDED998];
      sub_23DF73E10((uint64_t)v92, v102, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
      *(_WORD *)(v102 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
      sub_23DF89C1C(v84, v101, &qword_256D1E7D8);
      sub_23DF73E54((uint64_t)v92, (uint64_t (*)(_QWORD))v103);
      sub_23DF89C7C(v84, &qword_256D1E7D8);
      v104 = (uint64_t)v133;
      sub_23DF89C1C(v101, (uint64_t)v133, &qword_256D1E7E0);
      *(_WORD *)(v104 + *(int *)(v128 + 36)) = 256;
      sub_23DF89C7C(v101, &qword_256D1E7E0);
      v105 = v134;
      sub_23DF89340(v104, v134, &qword_256D1E7E8);
      sub_23E136FE4();
      sub_23E135E5C();
      v106 = v161;
      LOBYTE(v88) = v162;
      v107 = v163;
      LOBYTE(v84) = v164;
      v108 = v165;
      v109 = v166;
      sub_23DF89C1C(v105, v104, &qword_256D1E7E8);
      v110 = v135;
      sub_23DF89C1C(v104, v135, &qword_256D1E7E8);
      v111 = v110 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E880) + 48);
      *(_QWORD *)v111 = 0;
      *(_BYTE *)(v111 + 8) = 1;
      *(_QWORD *)(v111 + 16) = v106;
      *(_BYTE *)(v111 + 24) = (_BYTE)v88;
      *(_QWORD *)(v111 + 32) = v107;
      *(_BYTE *)(v111 + 40) = v84;
      *(_QWORD *)(v111 + 48) = v108;
      *(_QWORD *)(v111 + 56) = v109;
      sub_23DF89C7C(v104, &qword_256D1E7E8);
      sub_23DF89C1C(v110, v141, &qword_256D1E7D0);
      swift_storeEnumTagMultiPayload();
      sub_23DFA04D0();
      sub_23DF89B88(&qword_256D1E898, &qword_256D1E7D0, MEMORY[0x24BDF5428]);
      v79 = (uint64_t)v144;
      sub_23E136480();
      v112 = v110;
      v75 = v155;
      sub_23DF89C7C(v112, &qword_256D1E7D0);
      sub_23DF89C7C(v105, &qword_256D1E7E8);
    }
    v113 = (uint64_t)v145;
    v114 = (uint64_t)v143;
    v115 = v156;
    v116 = v157;
    sub_23DF89C1C(v156, v157, &qword_256D1E828);
    sub_23DF89C1C(v75, v114, &qword_256D1E810);
    sub_23DF89C1C(v79, v113, &qword_256D1E800);
    v117 = v75;
    v118 = v154;
    sub_23DF89C1C(v116, v154, &qword_256D1E828);
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8A0);
    sub_23DF89C1C(v114, v118 + *(int *)(v119 + 48), &qword_256D1E810);
    sub_23DF89C1C(v113, v118 + *(int *)(v119 + 64), &qword_256D1E800);
    sub_23DF89C7C(v79, &qword_256D1E800);
    sub_23DF89C7C(v117, &qword_256D1E810);
    sub_23DF89C7C(v115, &qword_256D1E828);
    sub_23DF89C7C(v113, &qword_256D1E800);
    sub_23DF89C7C(v114, &qword_256D1E810);
    return sub_23DF89C7C(v116, &qword_256D1E828);
  }
  return result;
}

uint64_t sub_23DF9EF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  double v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v56;
  __int128 v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  __int128 v80;
  _BYTE v81[24];
  __int128 v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v75 = a2;
  v60 = a1;
  v76 = a3;
  v4 = type metadata accessor for TimersControlView();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = *(_QWORD *)(v67 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v65 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8E0);
  v72 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v70 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8E8);
  v7 = MEMORY[0x24BDAC7A8](v71);
  v73 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)&v56 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v56 - v11;
  v12 = sub_23E13660C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8F0);
  v63 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v58 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8F8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v59 = (char *)&v56 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v61 = (uint64_t)&v56 - v22;
  v23 = sub_23E1362D0();
  sub_23DF9F570(a1, (uint64_t)&v80);
  v24 = *(_QWORD *)&v81[16];
  v25 = v82;
  v26 = *((_QWORD *)&v82 + 1);
  v57 = *(_OWORD *)v81;
  v56 = v80;
  v27 = sub_23E136828();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v80 = v23;
  *((_QWORD *)&v80 + 1) = 0x4024000000000000;
  v81[0] = 0;
  *(_OWORD *)&v81[8] = v56;
  v82 = v57;
  v83 = v24;
  v84 = v25;
  v85 = v26;
  v86 = KeyPath;
  v87 = v27;
  sub_23E1365F4();
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E900);
  v30 = sub_23DFA0744();
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v31 = *((_QWORD *)&v82 + 1);
  v32 = v83;
  v33 = v84;
  swift_release();
  swift_release();
  swift_release();
  sub_23DFA055C(v31, v32, v33);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)&v80 = sub_23E1371A0();
  *((_QWORD *)&v80 + 1) = v34;
  v78 = v29;
  v79 = v30;
  swift_getOpaqueTypeConformance2();
  sub_23DF8DC18();
  v35 = (uint64_t)v59;
  v36 = v62;
  v37 = v58;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v36);
  v38 = v61;
  sub_23DF89340(v35, v61, &qword_256D1E8F8);
  v39 = v60;
  v40 = v65;
  sub_23DF73E10(v60, v65, (uint64_t (*)(_QWORD))type metadata accessor for TimersControlView);
  v41 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  v42 = swift_allocObject();
  sub_23DF89384(v40, v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for TimersControlView);
  v77 = v39;
  v43 = v70;
  sub_23E136DEC();
  if (*(_QWORD *)(v75 + 16))
    v44 = 1.0;
  else
    v44 = 0.0;
  v45 = v72;
  v46 = v66;
  v47 = v74;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v66, v43, v74);
  *(double *)&v46[*(int *)(v71 + 36)] = v44;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v47);
  v48 = (uint64_t)v46;
  v49 = v69;
  sub_23DF89340(v48, v69, &qword_256D1E8E8);
  v50 = v64;
  sub_23DF89C1C(v38, v64, &qword_256D1E8F8);
  v51 = v73;
  sub_23DF89C1C(v49, v73, &qword_256D1E8E8);
  v52 = v76;
  sub_23DF89C1C(v50, v76, &qword_256D1E8F8);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E930);
  v54 = v52 + *(int *)(v53 + 48);
  *(_QWORD *)v54 = 0;
  *(_BYTE *)(v54 + 8) = 1;
  sub_23DF89C1C(v51, v52 + *(int *)(v53 + 64), &qword_256D1E8E8);
  sub_23DF89C7C(v49, &qword_256D1E8E8);
  sub_23DF89C7C(v38, &qword_256D1E8F8);
  sub_23DF89C7C(v51, &qword_256D1E8E8);
  return sub_23DF89C7C(v50, &qword_256D1E8F8);
}

uint64_t sub_23DF9F570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[72];
  _OWORD v24[4];
  __int16 v25;

  v22 = sub_23E136CB4();
  v21 = sub_23E136C84();
  KeyPath = swift_getKeyPath();
  sub_23E1371A0();
  v5 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v5;
  v25 = *(_WORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v6;
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v23);
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v23[0] == 1)
    sub_23E136C84();
  else
    sub_23E136C48();
  v7 = sub_23E1368D0();
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v11 & 1;
  sub_23E1367F8();
  v13 = sub_23E1368AC();
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  sub_23DFA055C(v7, v9, v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v15;
  *(_BYTE *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23DFA056C(v13, v15, v19);
  swift_bridgeObjectRetain();
  sub_23DFA055C(v13, v15, v19);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DF9F770(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_23DF9C9A0((uint64_t)v6);
  v2 = v7;
  v3 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v4 = type metadata accessor for TimersControlView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(a1 + *(int *)(v4 + 28), v2, v3);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
}

uint64_t sub_23DF9F7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _BYTE v24[72];
  _OWORD v25[4];
  __int16 v26;

  sub_23E1371A0();
  v4 = *(_OWORD *)(a1 + 48);
  v25[2] = *(_OWORD *)(a1 + 32);
  v25[3] = v4;
  v26 = *(_WORD *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 16);
  v25[0] = *(_OWORD *)a1;
  v25[1] = v5;
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v24);
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v24[0] == 1)
    sub_23E136C54();
  else
    sub_23E136C48();
  v6 = sub_23E1368D0();
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v10 & 1;
  sub_23E136828();
  v12 = sub_23E136900();
  v14 = v13;
  v16 = v15;
  swift_release();
  sub_23DFA055C(v6, v8, v11);
  swift_bridgeObjectRelease();
  sub_23E1367F8();
  v17 = sub_23E1368AC();
  v19 = v18;
  LOBYTE(v8) = v20;
  v22 = v21;
  sub_23DFA055C(v12, v14, v16 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v22;
  return result;
}

uint64_t sub_23DF9F994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23E134FBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_23DF9F9D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for TimersControlView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E134CF8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (void **)((char *)&v23[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v10 + 16))(v12, a1 + *(int *)(v2 + 32), v9);
  if ((*(unsigned int (**)(void **, uint64_t))(v10 + 88))(v12, v9) == *MEMORY[0x24BE4D2D0])
  {
    (*(void (**)(void **, uint64_t))(v10 + 96))(v12, v9);
    v13 = *v12;
    v14 = sub_23E1372E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
    sub_23DF73E10(a1, (uint64_t)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TimersControlView);
    sub_23E1372C0();
    v15 = v13;
    v16 = sub_23E1372B4();
    v17 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v18 = (_QWORD *)swift_allocObject();
    v19 = MEMORY[0x24BEE6930];
    v18[2] = v16;
    v18[3] = v19;
    v18[4] = v15;
    sub_23DF89384((uint64_t)v5, (uint64_t)v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for TimersControlView);
    sub_23DFA2514((uint64_t)v8, (uint64_t)&unk_256D1E8D8, (uint64_t)v18);
    swift_release();

  }
  else
  {
    (*(void (**)(void **, uint64_t))(v10 + 8))(v12, v9);
    sub_23DF9C9A0((uint64_t)v23);
    v20 = v24;
    v21 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(a1 + *(int *)(v2 + 28), v20, v21);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  }
}

uint64_t sub_23DF9FC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a4;
  v5[8] = a5;
  sub_23E1372C0();
  v5[9] = sub_23E1372B4();
  v5[10] = sub_23E1372A8();
  v5[11] = v6;
  return swift_task_switch();
}

uint64_t sub_23DF9FC84()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23E134D28();
  *(_QWORD *)(v0 + 96) = sub_23E134D04();
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(type metadata accessor for TimersControlView() + 28);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_23DF9FD08;
  return sub_23E134D10();
}

uint64_t sub_23DF9FD08(char a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 96);
  *(_BYTE *)(*(_QWORD *)v1 + 116) = a1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23DF9FD64()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 116);
  swift_release();
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 64) + *(int *)(v0 + 112);
    sub_23DF9C9A0(v0 + 16);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DF9FDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v28 = sub_23E1362D0();
  sub_23DF9FF98(a1, (uint64_t)v29);
  v4 = v29[0];
  v5 = v29[1];
  v6 = v30;
  v7 = v31;
  v27 = v32;
  v8 = v33;
  v9 = sub_23E136738();
  v10 = sub_23E136744();
  v11 = sub_23E136768();
  v12 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v9)
    v12 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v10)
    v12 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v11)
    v12 = sub_23E13675C();
  sub_23E135D00();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = sub_23E136750();
  result = sub_23E135D00();
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v27;
  *(_BYTE *)(a2 + 64) = v8;
  *(_BYTE *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v16;
  *(_QWORD *)(a2 + 96) = v18;
  *(_QWORD *)(a2 + 104) = v20;
  *(_BYTE *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = v21;
  *(_QWORD *)(a2 + 128) = v23;
  *(_QWORD *)(a2 + 136) = v24;
  *(_QWORD *)(a2 + 144) = v25;
  *(_QWORD *)(a2 + 152) = v26;
  *(_BYTE *)(a2 + 160) = 0;
  return result;
}

uint64_t sub_23DF9FF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  _BYTE v24[80];
  _OWORD v25[4];
  __int16 v26;

  sub_23E1371A0();
  sub_23E136828();
  v4 = sub_23E136900();
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_release();
  v9 = *(_OWORD *)(a1 + 48);
  v25[2] = *(_OWORD *)(a1 + 32);
  v25[3] = v9;
  v26 = *(_WORD *)(a1 + 64);
  v10 = *(_OWORD *)(a1 + 16);
  v25[0] = *(_OWORD *)a1;
  v25[1] = v10;
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v24);
  sub_23DF98EC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v24[0] == 1)
    sub_23E136C54();
  else
    sub_23E136C48();
  v11 = sub_23E1368D0();
  v13 = v12;
  v15 = v14;
  swift_release();
  sub_23DFA055C(v4, v6, v8 & 1);
  swift_bridgeObjectRelease();
  sub_23E1367F8();
  v16 = sub_23E1368AC();
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  sub_23DFA055C(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  *(_BYTE *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  sub_23DFA056C(v16, v18, v22);
  swift_bridgeObjectRetain();
  sub_23DFA055C(v16, v18, v22);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DFA017C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for ControlBackgroundView();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13 - v6;
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 50) = 0u;
  v8 = (uint64_t *)&v5[*(int *)(v2 + 20)];
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(v2 + 24);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v5[v9] = MEMORY[0x24264B578](v10);
  sub_23DF89384((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  if (qword_256D1D268 != -1)
    swift_once();
  v11 = qword_256D34638;
  sub_23DF73E10((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF73E10((uint64_t)v5, a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C0) + 48)) = v11;
  swift_retain_n();
  sub_23DF73E54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  swift_release();
  return sub_23DF73E54((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
}

uint64_t sub_23DFA0334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_23E136390();
  *(_QWORD *)(a1 + 8) = 0x4024000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E7C8);
  return sub_23DF9E064(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_23DFA037C()
{
  uint64_t v0;
  uint64_t result;

  sub_23E136C24();
  v0 = sub_23E136C60();
  result = swift_release();
  qword_256D34638 = v0;
  return result;
}

uint64_t sub_23DFA03CC()
{
  return sub_23DFA08E8((uint64_t (*)(uint64_t))sub_23DF9F9D0);
}

uint64_t sub_23DFA03D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF9FDFC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23DFA03E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E848;
  if (!qword_256D1E848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E840);
    v2[0] = sub_23DFA044C();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E848);
  }
  return result;
}

unint64_t sub_23DFA044C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E850;
  if (!qword_256D1E850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E858);
    v2[0] = sub_23DF89B88(&qword_256D1E860, &qword_256D1E868, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E850);
  }
  return result;
}

unint64_t sub_23DFA04D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D1E888;
  if (!qword_256D1E888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E7F8);
    v2 = sub_23DF73F28(&qword_256D1E890, type metadata accessor for TimerCell, (uint64_t)&unk_23E13F1F4);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1E888);
  }
  return result;
}

uint64_t sub_23DFA055C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_23DFA056C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_23DFA05A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for TimersControlView();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();

  v3 = v0 + v2;
  sub_23DF985F0(*(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v2 + 8), *(_QWORD *)(v0 + v2 + 16), *(_QWORD *)(v0 + v2 + 24), *(_QWORD *)(v0 + v2 + 32), *(_QWORD *)(v0 + v2 + 40), *(_QWORD *)(v0 + v2 + 48), *(_QWORD *)(v0 + v2 + 56), *(_BYTE *)(v0 + v2 + 64), *(_BYTE *)(v0 + v2 + 65));
  if ((*(_BYTE *)(v0 + v2 + 112) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v2 + 72);
  else
    swift_release();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 28);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 32);
  v7 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23DFA06A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TimersControlView() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23DF83188;
  return sub_23DF9FC18(a1, v5, v6, v7, v8);
}

unint64_t sub_23DFA0744()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1E908;
  if (!qword_256D1E908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1E900);
    v2[0] = sub_23DF89B88(&qword_256D1E910, &qword_256D1E918, MEMORY[0x24BDF4498]);
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1E908);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TimersControlView();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  sub_23DF985F0(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64), *(_BYTE *)(v2 + 65));
  if ((*(_BYTE *)(v2 + 112) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v2 + 72);
  else
    swift_release();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 28);
  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + *(int *)(v1 + 32);
  v6 = sub_23E134CF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_23DFA08DC()
{
  return sub_23DFA08E8(sub_23DF9F770);
}

uint64_t sub_23DFA08E8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TimersControlView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_23DFA0924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF9F7E4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23DFA0934()
{
  return sub_23DF89B88(&qword_256D1E938, (uint64_t *)&unk_256D1E940, MEMORY[0x24BDF4700]);
}

id sub_23DFA0960()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaPlayerWrapperView.Coordinator()), sel_init);
}

uint64_t sub_23DFA0980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EA40);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v39 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v31[-v6];
  v8 = *(_QWORD *)(a1 + 24);
  v36 = *(_QWORD *)(a1 + 16);
  v37 = &v31[-v6];
  v9 = *(unsigned __int8 *)(a1 + 32);
  if (v9 == 1)
  {
    sub_23E136EF4();
    v10 = sub_23E136F00();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 0, 1, v10);
  }
  else
  {
    v11 = sub_23E136F00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  }
  swift_bridgeObjectRetain();
  sub_23DFA2298(a1);
  type metadata accessor for MediaPlayerWrapperView.Coordinator();
  sub_23DFA1F90(&qword_256D1E9F0, v12, (uint64_t (*)(uint64_t))type metadata accessor for MediaPlayerWrapperView.Coordinator, (uint64_t)&unk_23E1397E8);
  v13 = (_BYTE *)sub_23E135DB4();
  sub_23DFA22E0(a1);
  v13[OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_useCompactLayout] = v9;
  v14 = v13;
  sub_23DFA1434(0, 0, 1);

  v35 = *(unsigned __int8 *)(a1 + 8);
  v34 = *(_QWORD *)a1;
  sub_23DFA2298(a1);
  v15 = sub_23E135DB4();
  v33 = v8;
  v16 = (void *)v15;
  sub_23DFA22E0(a1);
  v32 = v9;

  sub_23DFA2298(a1);
  v17 = (void *)sub_23E135DB4();
  sub_23DFA22E0(a1);

  sub_23E136FE4();
  sub_23E135E5C();
  v19 = v39;
  v18 = v40;
  v20 = v41;
  v21 = v42;
  v22 = v43;
  v23 = v44;
  v24 = v45;
  v25 = v37;
  sub_23DFA2328((uint64_t)v37, (uint64_t)v39);
  v26 = v38;
  sub_23DFA2328((uint64_t)v19, v38);
  v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EA48) + 48);
  v28 = v33;
  *(_QWORD *)v27 = v36;
  *(_QWORD *)(v27 + 8) = v28;
  *(_BYTE *)(v27 + 16) = v32;
  *(_QWORD *)(v27 + 24) = v14;
  *(_BYTE *)(v27 + 32) = v35;
  *(_QWORD *)(v27 + 40) = v34;
  *(_QWORD *)(v27 + 48) = v18;
  *(_BYTE *)(v27 + 56) = v20;
  *(_QWORD *)(v27 + 64) = v21;
  *(_BYTE *)(v27 + 72) = v22;
  *(_QWORD *)(v27 + 80) = v23;
  *(_QWORD *)(v27 + 88) = v24;
  swift_bridgeObjectRetain();
  v29 = v14;
  sub_23DFA2370((uint64_t)v25);

  swift_bridgeObjectRelease();
  return sub_23DFA2370((uint64_t)v19);
}

uint64_t sub_23DFA0C6C@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  uint64_t v4;
  _OWORD v6[2];
  _OWORD v7[2];

  v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  v7[0] = v1[2];
  *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)v1 + 41);
  *(_QWORD *)a1 = sub_23E136378();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EA38);
  return sub_23DFA0980((uint64_t)v6, a1 + *(int *)(v4 + 44));
}

id sub_23DFA0CD4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = objc_allocWithZone(MEMORY[0x24BE64320]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_23E137164();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithRouteUID_, v4);

  if (v1)
    v6 = 4;
  else
    v6 = 2;
  objc_msgSend(v5, sel_setLayout_, v6);
  objc_msgSend(v5, sel_setSupportsHorizontalLayout_, 1);
  objc_msgSend(v5, sel_setContext_, 3);
  objc_msgSend(v5, sel_setContentEdgeInsets_, *MEMORY[0x24BDF7718], *(double *)(MEMORY[0x24BDF7718] + 8), *(double *)(MEMORY[0x24BDF7718] + 16), *(double *)(MEMORY[0x24BDF7718] + 24));
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE64330]), sel_init);
  objc_msgSend(v5, sel_setStylingProvider_, v7);

  objc_msgSend(v5, sel_setDelegate_, v2);
  if (qword_256D1D270 != -1)
    swift_once();
  v8 = sub_23E135C10();
  __swift_project_value_buffer(v8, (uint64_t)qword_256D1EAC0);
  v9 = v5;
  v10 = sub_23E135BF8();
  v11 = sub_23E137368();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = v9;
    sub_23E1374B8();
    *v13 = v9;

    _os_log_impl(&dword_23DF71000, v10, v11, "Creating new MRUNowPlayingViewController: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EA28);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v13, -1, -1);
    MEMORY[0x24264C628](v12, -1, -1);

  }
  else
  {

  }
  return v9;
}

uint64_t sub_23DFA0F6C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = sub_23E1370B0();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E1370D4();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D1EA00);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  sub_23DF975A0();
  v19 = sub_23E1373BC();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_23DFA1F44;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23DFA4B54;
  aBlock[3] = &block_descriptor_0;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  swift_release();
  sub_23E1370BC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_23DFA1F90((unint64_t *)&unk_256D1EA10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFC8);
  sub_23DF89B88(&qword_256D1EA20, &qword_256D1DFC8, MEMORY[0x24BEE12C8]);
  sub_23E1374F4();
  v17 = (void *)v19;
  MEMORY[0x24264BC98](0, v9, v6, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v21);
}

void sub_23DFA11E8(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double *v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  char *v14;

  v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    v2 = v1;
    sub_23DFA1ABC();
    objc_msgSend(v2, sel_sizeThatFits_);
    v4 = v3;
    v6 = v5;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D1EA00);
    sub_23E1366E4();
    v7 = (double *)&v14[OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize];
    if (*(double *)&v14[OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize] == v4
      && *(double *)&v14[OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize + 8] == v6)
    {

    }
    else
    {
      *v7 = v4;
      v7[1] = v6;
      type metadata accessor for MediaPlayerWrapperView.Coordinator();
      sub_23DFA1F90(&qword_256D1E9F0, v9, (uint64_t (*)(uint64_t))type metadata accessor for MediaPlayerWrapperView.Coordinator, (uint64_t)&unk_23E1397E8);
      sub_23E135C40();
      sub_23E135C58();

      swift_release();
    }
    if (qword_256D1D270 != -1)
      swift_once();
    v10 = sub_23E135C10();
    __swift_project_value_buffer(v10, (uint64_t)qword_256D1EAC0);
    v11 = sub_23E135BF8();
    v12 = sub_23E137368();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      *(_DWORD *)v13 = 134218240;
      sub_23E1374B8();
      *(_WORD *)(v13 + 12) = 2048;
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v11, v12, "update MediaPlayerConrolView with new width: %f new height: %f", (uint8_t *)v13, 0x16u);
      MEMORY[0x24264C628](v13, -1, -1);
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_23DFA1434(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  double *v4;
  double v5;
  double v6;
  char v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v14;

  v4 = (double *)(v3 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize);
  v5 = *(double *)(v3 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize);
  v6 = *(double *)(v3 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize + 8);
  if ((a3 & 1) != 0)
  {
    v9 = *(_BYTE *)(v3 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_useCompactLayout);
    sub_23DFA1ABC();
    a1 = v10;
    sub_23DFA1ABC();
    *(double *)&a2 = v11 * 0.6;
    v12 = v11 * 0.25;
    if ((v9 & 1) != 0)
      *(double *)&a2 = v12;
  }
  if (v5 != *(double *)&a1 || v6 != *(double *)&a2)
  {
    *v4 = *(double *)&a1;
    v4[1] = *(double *)&a2;
    type metadata accessor for MediaPlayerWrapperView.Coordinator();
    sub_23DFA1F90(&qword_256D1E9F0, v14, (uint64_t (*)(uint64_t))type metadata accessor for MediaPlayerWrapperView.Coordinator, (uint64_t)&unk_23E1397E8);
    sub_23E135C40();
    sub_23E135C58();
    swift_release();
  }
}

uint64_t sub_23DFA1520(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v20 = sub_23E136660();
  v11 = *(_QWORD *)(v20 - 8);
  v12 = MEMORY[0x24BDAC7A8](v20);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
    v12 = sub_23E136FFC();
  v19 = (uint64_t)&v19;
  MEMORY[0x24BDAC7A8](v12);
  *(&v19 - 2) = a2;
  *(&v19 - 1) = a3;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v5;
  v15[4] = a4;
  v15[5] = a5;
  v16 = a1;
  v17 = v5;
  sub_23DF9765C(a4);
  sub_23E136654();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E9E8);
  sub_23E135EE0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v20);
}

void sub_23DFA16A0(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  double *v12;
  uint64_t v14;

  v5 = objc_msgSend(a1, sel_view);
  if (v5)
  {
    v6 = v5;
    sub_23DFA1ABC();
    objc_msgSend(v6, sel_sizeThatFits_);
    v8 = v7;
    v10 = v9;

    v12 = (double *)(a2 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize);
    if (*(double *)(a2 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize) != v8
      || *(double *)(a2 + OBJC_IVAR____TtCV22HomeAccessoryControlUI22MediaPlayerWrapperView11Coordinator_viewSize + 8) != v10)
    {
      *v12 = v8;
      v12[1] = v10;
      type metadata accessor for MediaPlayerWrapperView.Coordinator();
      sub_23DFA1F90(&qword_256D1E9F0, v14, (uint64_t (*)(uint64_t))type metadata accessor for MediaPlayerWrapperView.Coordinator, (uint64_t)&unk_23E1397E8);
      sub_23E135C40();
      sub_23E135C58();
      v11 = swift_release();
    }
    if (a3)
      a3(v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_23DFA188C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaPlayerWrapperView.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MediaPlayerWrapperView.Coordinator()
{
  return objc_opt_self();
}

uint64_t sub_23DFA18DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MediaPlayerWrapperView.Coordinator();
  result = sub_23E135C40();
  *a1 = result;
  return result;
}

uint64_t sub_23DFA1914@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  uint64_t result;

  v3 = *(uint64_t (**)(void))(v1 + 16);
  if (v3)
    result = v3();
  *a1 = v3 == 0;
  return result;
}

uint64_t sub_23DFA195C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_23DFA1998()
{
  uint64_t v0;

  sub_23DFA16A0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_23DFA19A8(void *a1, uint64_t a2)
{
  return sub_23DFA0F6C(a1, a2);
}

id sub_23DFA19BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 24);
  *a1 = v2;
  return v2;
}

uint64_t sub_23DFA19C8()
{
  return sub_23E136684();
}

uint64_t sub_23DFA19F8()
{
  sub_23DFA1FD0();
  return sub_23E1366C0();
}

uint64_t sub_23DFA1A48()
{
  sub_23DFA1FD0();
  return sub_23E136690();
}

void sub_23DFA1A98()
{
  sub_23DFA1FD0();
  sub_23E1366B4();
  __break(1u);
}

void sub_23DFA1ABC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  CGRect v11;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2)
  {
    v3 = objc_msgSend(v0, sel_currentDevice);
    v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

    if (v4 == (id)1)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v6 = objc_msgSend(v5, sel_keyWindow);

      if (v6)
      {
        v7 = objc_msgSend(v6, sel_rootViewController);
        if (v7 && (v8 = v7, v9 = objc_msgSend(v7, sel_view), v8, v9))
        {
          objc_msgSend(v9, sel_frame);
          CGRectGetWidth(v11);

        }
        else
        {

        }
      }
    }
  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v10, sel_bounds);

  }
}

uint64_t sub_23DFA1CA0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23DFA1CC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void destroy for MediaPlayerWrapperView(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for MediaPlayerWrapperView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for MediaPlayerWrapperView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MediaPlayerWrapperView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for MediaPlayerWrapperView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaPlayerWrapperView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerWrapperView()
{
  return &type metadata for MediaPlayerWrapperView;
}

unint64_t sub_23DFA1E88()
{
  unint64_t result;

  result = qword_256D1E9F8;
  if (!qword_256D1E9F8)
  {
    result = MEMORY[0x24264C55C](&unk_23E139820, &type metadata for MediaPlayerWrapperView);
    atomic_store(result, (unint64_t *)&qword_256D1E9F8);
  }
  return result;
}

uint64_t sub_23DFA1ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D1EA00);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23DFA1F44()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D1EA00);
  sub_23DFA11E8(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_23DFA1F90(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24264C55C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DFA1FD0()
{
  unint64_t result;

  result = qword_256D1EA30;
  if (!qword_256D1EA30)
  {
    result = MEMORY[0x24264C55C](&unk_23E139870, &type metadata for MediaPlayerWrapperView);
    atomic_store(result, (unint64_t *)&qword_256D1EA30);
  }
  return result;
}

id sub_23DFA2014(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

void destroy for MediaPlayerView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_23DFA2050(*(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_BYTE *)(a1 + 56));
}

void sub_23DFA2050(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t initializeWithCopy for MediaPlayerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_23DFA2014(v4, v5, v6);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for MediaPlayerView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v2 + 32);
  v4 = *(_QWORD *)(v2 + 40);
  v5 = *(void **)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_23DFA2014(v4, v5, v2);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v2;
  sub_23DFA2050(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaPlayerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v5;
  sub_23DFA2050(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaPlayerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaPlayerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerView()
{
  return &type metadata for MediaPlayerView;
}

uint64_t sub_23DFA2288()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFA2298(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRetain();
  sub_23DFA2014(v2, v3, v4);
  return a1;
}

uint64_t sub_23DFA22E0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  swift_bridgeObjectRelease();
  sub_23DFA2050(v2, v3, v4);
  return a1;
}

uint64_t sub_23DFA2328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFA2370(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DFA23B0()
{
  return sub_23DF89B88(&qword_256D1EA50, &qword_256D1EA58, MEMORY[0x24BDF4700]);
}

uint64_t sub_23DFA23E4()
{
  uint64_t v0;

  v0 = sub_23E135C10();
  __swift_allocate_value_buffer(v0, qword_256D1EAC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D1EAC0);
  return sub_23E135C04();
}

uint64_t static Logger.accessoryControlsLogger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D1D270 != -1)
    swift_once();
  v2 = sub_23E135C10();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D1EAC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23DFA2514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23E1372E4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23E1372D8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23DF89C7C(a1, &qword_256D1E8C8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E1372A8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23DFA2660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23E1372E4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23E1372D8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23DF89C7C(a1, &qword_256D1E8C8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E1372A8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC58);
  return swift_task_create();
}

uint64_t AccessoryControlModelView.presentingVCDismissalTask.getter()
{
  return swift_retain();
}

uint64_t AccessoryControlModelView.presentingVCDismissalTask.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 60);
  result = swift_release();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*AccessoryControlModelView.presentingVCDismissalTask.modify())()
{
  return CGPointMake;
}

uint64_t sub_23DFA2808@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unsigned __int8 *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _UNKNOWN **v52;

  v38 = a4;
  v47 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v45 = a3[1];
  v46 = v15;
  v16 = a3[8];
  v17 = *((_QWORD *)a3 + 2);
  v18 = *((_QWORD *)a3 + 3);
  v19 = *((_QWORD *)a3 + 4);
  v20 = *((_QWORD *)a3 + 5);
  v43 = a3[48];
  v44 = v16;
  v42 = a3[49];
  v41 = *((_QWORD *)a3 + 7);
  v40 = a3[64];
  v22 = (int *)type metadata accessor for AccessoryControlModelView(0, a5, a6, v21);
  v23 = v22[12];
  v24 = type metadata accessor for Device();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
  type metadata accessor for AccessoryControlsModel();
  swift_allocObject();
  *(_QWORD *)(a7 + v23) = sub_23E0A7D24((uint64_t)v14, MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(a7 + v22[15]) = 0;
  v25 = (uint64_t *)(a7 + v22[13]);
  swift_unknownObjectRetain();
  *v25 = sub_23E135F1C();
  v25[1] = v26;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v39 = a1;
  v29(a7, a1, AssociatedTypeWitness);
  v30 = (uint64_t *)(a7 + v22[14]);
  type metadata accessor for TransitionTileHelper();
  sub_23DF73F28((unint64_t *)&qword_256D1EC40, (uint64_t (*)(uint64_t))type metadata accessor for TransitionTileHelper, (uint64_t)&protocol conformance descriptor for TransitionTileHelper);
  swift_retain();
  *v30 = sub_23E135F1C();
  v30[1] = v31;
  v32 = v38;
  sub_23DF89C1C(v38, (uint64_t)&v48, &qword_256D1EAD8);
  if (v49)
  {
    swift_unknownObjectRelease();
    swift_release();
    sub_23DF89C7C(v32, &qword_256D1EAD8);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v39, AssociatedTypeWitness);
    sub_23DF9D6A8(&v48, (uint64_t)&v50);
  }
  else
  {
    v33 = type metadata accessor for EmptyAlarmAndTimerUIViewBuilder();
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = 0;
    v34[3] = 0xE000000000000000;
    v34[4] = 0;
    v34[5] = 0xE000000000000000;
    v51 = v33;
    v52 = &off_250ECEAA8;
    swift_unknownObjectRelease();
    swift_release();
    *(_QWORD *)&v50 = v34;
    sub_23DF89C7C(v32, &qword_256D1EAD8);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v39, AssociatedTypeWitness);
    sub_23DF89C7C((uint64_t)&v48, &qword_256D1EAD8);
  }
  result = sub_23DF9D6A8(&v50, a7 + v22[10]);
  *(_QWORD *)(a7 + v22[9]) = v47;
  v36 = a7 + v22[11];
  *(_BYTE *)v36 = v46;
  *(_BYTE *)(v36 + 1) = v45;
  *(_BYTE *)(v36 + 8) = v44;
  *(_QWORD *)(v36 + 16) = v17;
  *(_QWORD *)(v36 + 24) = v18;
  *(_QWORD *)(v36 + 32) = v19;
  *(_QWORD *)(v36 + 40) = v20;
  *(_BYTE *)(v36 + 48) = v43;
  *(_BYTE *)(v36 + 49) = v42;
  *(_QWORD *)(v36 + 56) = v41;
  *(_BYTE *)(v36 + 64) = v40;
  return result;
}

uint64_t AccessoryControlModelView.init(deviceModel:deviceIdentifier:tileHelper:decorationButtons:style:alarmAndTimerUIViewBuilder:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unsigned __int16 *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  int v27;
  __int128 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;

  v30 = a4;
  v35 = a2;
  v33 = a1;
  v31 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v32 = AssociatedTypeWitness;
  v34 = v12;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v25 - v13;
  v29 = *a3;
  v15 = *((_BYTE *)a3 + 8);
  v28 = *((_OWORD *)a3 + 1);
  v16 = *((_QWORD *)a3 + 4);
  v17 = *((_QWORD *)a3 + 5);
  v27 = *((unsigned __int8 *)a3 + 48);
  v18 = *((_BYTE *)a3 + 49);
  v19 = *((_QWORD *)a3 + 7);
  v26 = *((unsigned __int8 *)a3 + 64);
  (*(void (**)(char *, uint64_t))(v20 + 16))((char *)&v25 - v13, a1);
  type metadata accessor for AnimationModel();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  v21 = sub_23DF90A80();
  LOWORD(v37) = v29;
  v38 = v15;
  v39 = v28;
  v40 = v16;
  v41 = v17;
  v42 = v27;
  v43 = v18;
  v44 = v19;
  v45 = v26;
  v22 = v30;
  sub_23DF89C1C(v30, (uint64_t)v36, &qword_256D1EAD8);
  sub_23DFA2808((uint64_t)v14, v21, (unsigned __int8 *)&v37, (uint64_t)v36, a5, a6, v31);
  type metadata accessor for AccessoryControlModelView(0, a5, a6, v23);
  swift_getKeyPath();
  swift_getKeyPath();
  v37 = v35;
  swift_retain();
  sub_23E135C88();
  swift_unknownObjectRelease();
  swift_release();
  sub_23DF89C7C(v22, &qword_256D1EAD8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v32);
}

uint64_t type metadata accessor for AccessoryControlModelView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AccessoryControlModelView);
}

uint64_t AccessoryControlModelView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v40 = a2;
  v5 = type metadata accessor for Device();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v34 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v34 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v34 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v34 - v19;
  v22 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  swift_unknownObjectRetain();
  v38 = v22;
  v39 = v21;
  LOBYTE(v23) = v23(v2, v22, v21);
  swift_unknownObjectRelease();
  if ((v23 & 1) == 0)
    AccessoryControlModelView.dismiss(completion:)(0, 0, a1);
  v24 = *(_QWORD *)(v2 + *(int *)(a1 + 48)) + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device;
  swift_beginAccess();
  sub_23DF89C1C(v24, (uint64_t)v20, &qword_256D1D5A8);
  sub_23DFA32A4(a1, (uint64_t)v18);
  sub_23DF89C1C((uint64_t)v20, (uint64_t)v15, &qword_256D1D5A8);
  v25 = v37;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  if (v26(v15, 1, v37) != 1)
  {
    v27 = v35;
    sub_23DF89384((uint64_t)v15, v35, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    sub_23DF89C1C((uint64_t)v18, (uint64_t)v12, &qword_256D1D5A8);
    if (v26(v12, 1, v25) == 1)
    {
      sub_23DF73E54(v27, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      sub_23DF89C7C((uint64_t)v12, &qword_256D1D5A8);
      goto LABEL_14;
    }
    v28 = (uint64_t)v12;
    v29 = v34;
    sub_23DF89384(v28, v34, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v30 = *(int *)(v25 + 48);
    v31 = *(unsigned __int8 *)(v27 + v30);
    v32 = *(unsigned __int8 *)(v29 + v30);
    if (v31 == 2)
    {
      if (v32 == 2)
        goto LABEL_13;
    }
    else if (v32 != 2 && ((((v32 & 1) == 0) ^ v31) & 1) != 0)
    {
      goto LABEL_13;
    }
    AccessoryControlModelView.dismiss(completion:)(0, 0, a1);
LABEL_13:
    sub_23DF73E54(v29, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    sub_23DF73E54(v27, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    goto LABEL_14;
  }
  sub_23DF89C7C((uint64_t)v15, &qword_256D1D5A8);
LABEL_14:
  sub_23DFA3850(v3, (uint64_t)v18, v38, v39, v40);
  sub_23DF89C7C((uint64_t)v20, &qword_256D1D5A8);
  return sub_23DF89C7C((uint64_t)v18, &qword_256D1D5A8);
}

uint64_t AccessoryControlModelView.dismiss(completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v3 + *(int *)(a3 + 56) + 8);
  swift_beginAccess();
  *(_BYTE *)(v13 + 16) = 1;
  v14 = sub_23E1372E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a3);
  sub_23E1372C0();
  sub_23DF9765C(a1);
  v15 = sub_23E1372B4();
  v16 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  v19 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v18 + 16) = v15;
  *(_QWORD *)(v18 + 24) = v19;
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a3 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, a3);
  v20 = (uint64_t *)(v18 + v17);
  *v20 = a1;
  v20[1] = a2;
  sub_23DFA2514((uint64_t)v12, (uint64_t)&unk_256D1EAE8, v18);
  return swift_release();
}

uint64_t sub_23DFA32A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;

  v3 = v2;
  v75 = a2;
  v5 = type metadata accessor for Device();
  v6 = *(_QWORD *)(v5 - 8);
  v73 = (int *)v5;
  v74 = v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v66 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v65 = (uint64_t)&v62 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v72 = (char *)&v62 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v71 = (char *)&v62 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v69 = (char *)&v62 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v62 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v68 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v67 = (char *)&v62 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v70 = (uint64_t)&v62 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v62 - v26;
  v28 = *(int *)(a1 + 48);
  v29 = *(_QWORD *)(v2 + v28) + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device;
  swift_beginAccess();
  v76 = v27;
  sub_23DF89C1C(v29, (uint64_t)v27, &qword_256D1D5A8);
  v30 = *(_QWORD *)(a1 + 16);
  v31 = *(_QWORD *)(a1 + 24);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24);
  swift_unknownObjectRetain();
  v32(v2, v30, v31);
  swift_unknownObjectRelease();
  v33 = (uint64_t)v71;
  v34 = (uint64_t)v72;
  v35 = (uint64_t)v69;
  v64 = v28;
  v62 = a1;
  v63 = v3;
  v36 = (uint64_t)v76;
  v37 = v70;
  sub_23DF89C1C((uint64_t)v76, v70, &qword_256D1D5A8);
  v38 = v73;
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v74 + 48))(v37, 1, v73) == 1)
  {
    sub_23DF89C7C(v36, &qword_256D1D5A8);
    sub_23DF89C7C(v37, &qword_256D1D5A8);
    v40 = v74;
    v39 = v75;
    v41 = v63;
    v42 = (uint64_t)v18;
    v44 = (uint64_t)v67;
    v43 = (uint64_t)v68;
    goto LABEL_11;
  }
  v45 = v35;
  sub_23DF89384(v37, v35, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v46 = v38[9];
  v47 = *(_QWORD *)(v35 + v46);
  v42 = (uint64_t)v18;
  v48 = *(_QWORD *)&v18[v46];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = sub_23E1230F4(v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v36, &qword_256D1D5A8);
  sub_23DF73E10(v45, v33, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  sub_23DF73E10((uint64_t)v18, v34, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  if ((v49 & 1) == 0)
  {
    sub_23DF73E54(v34, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    sub_23DF73E54(v33, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v52 = v65;
    sub_23DF89384(v45, v65, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v53 = v66;
    sub_23DF73E10(v42, v66, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    goto LABEL_9;
  }
  v50 = *(unsigned __int8 *)(v33 + v38[11]);
  sub_23DF73E54(v33, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v51 = *(unsigned __int8 *)(v34 + v38[11]);
  sub_23DF73E54(v34, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v52 = v65;
  sub_23DF89384(v45, v65, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v53 = v66;
  sub_23DF73E10(v42, v66, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  if (v50 != v51)
  {
LABEL_9:
    sub_23DF73E54(v53, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    sub_23DF73E54(v52, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v40 = v74;
    v39 = v75;
    v41 = v63;
    v44 = (uint64_t)v67;
    v43 = (uint64_t)v68;
    v56 = v62;
    goto LABEL_10;
  }
  v54 = *(unsigned __int8 *)(v52 + v38[12]);
  sub_23DF73E54(v52, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v55 = *(unsigned __int8 *)(v53 + v38[12]);
  sub_23DF73E54(v53, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v39 = v75;
  v41 = v63;
  v44 = (uint64_t)v67;
  v43 = (uint64_t)v68;
  v56 = v62;
  if (v54 == 2)
  {
    v40 = v74;
    if (v55 == 2)
      goto LABEL_11;
    goto LABEL_10;
  }
  v40 = v74;
  if (v55 == 2 || ((((v55 & 1) == 0) ^ v54) & 1) == 0)
  {
LABEL_10:
    v57 = *(_QWORD *)(v41 + *(int *)(v56 + 56) + 8);
    swift_beginAccess();
    *(_BYTE *)(v57 + 16) = 1;
  }
LABEL_11:
  v58 = *(_QWORD *)(v41 + v64);
  sub_23DF73E10(v42, v44, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v59 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v40 + 56);
  v59(v44, 0, 1, v38);
  sub_23DF89340(v44, v43, &qword_256D1D5A8);
  v60 = v58 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device;
  swift_beginAccess();
  sub_23DFA6708(v43, v60);
  swift_endAccess();
  sub_23DF89384(v42, v39, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, int *))v59)(v39, 0, 1, v38);
}

uint64_t sub_23DFA3850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  double (*v71)(uint64_t);
  uint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  _BYTE v99[400];
  _BYTE v100[400];
  _BYTE v101[400];
  _QWORD v102[51];

  v91 = a2;
  v97 = a5;
  v8 = (int *)type metadata accessor for AccessoryControlView();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v84 = (uint64_t)&v80 - v12;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EBC8);
  MEMORY[0x24BDAC7A8](v83);
  v93 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EBB8);
  MEMORY[0x24BDAC7A8](v85);
  v87 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EBA8);
  MEMORY[0x24BDAC7A8](v86);
  v90 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EB98);
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v89 = (uint64_t)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v88 = (uint64_t)&v80 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Device();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v92 = (uint64_t)&v80 - v28;
  v98 = (int *)type metadata accessor for AccessoryControlModelView(0, a3, a4, v29);
  v94 = a1;
  v30 = sub_23DFA3F70((uint64_t)v98);
  if (!v31)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v97, 1, 1, v96);
  v33 = v30;
  v34 = v31;
  v35 = v32;
  sub_23DF89C1C(v91, (uint64_t)v22, &qword_256D1D5A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_23DF89C7C((uint64_t)v22, &qword_256D1D5A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v97, 1, 1, v96);
  }
  v37 = v92;
  sub_23DF89384((uint64_t)v22, v92, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v38 = *(_QWORD *)(v94 + v98[9]);
  v39 = v11;
  v40 = *(_QWORD *)(v94 + v98[12]);
  v81 = v27;
  v82 = v33;
  v41 = (uint64_t)v27;
  v42 = v94;
  sub_23DF73E10(v37, v41, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23DFA4094((uint64_t)v98, (uint64_t)v102);
  sub_23DF89340((uint64_t)v102, (uint64_t)v100, &qword_256D1EC28);
  *v39 = 0;
  v43 = (char *)v39 + v8[11];
  *(_QWORD *)v43 = swift_getKeyPath();
  *(_OWORD *)(v43 + 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  *(_OWORD *)(v43 + 40) = 0u;
  *(_OWORD *)(v43 + 50) = 0u;
  v44 = (_QWORD *)((char *)v39 + v8[12]);
  *v44 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  swift_storeEnumTagMultiPayload();
  v39[1] = v38;
  v39[2] = v40;
  sub_23DF89340((uint64_t)v100, (uint64_t)v39 + v8[9], &qword_256D1EC28);
  sub_23DF89384((uint64_t)v81, (uint64_t)v39 + v8[7], (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v45 = (_QWORD *)((char *)v39 + v8[8]);
  *v45 = v82;
  v45[1] = v34;
  v91 = v34;
  v81 = (char *)v35;
  v45[2] = v35;
  *((_BYTE *)v39 + v8[10]) = 1;
  v46 = v84;
  sub_23DF89384((uint64_t)v39, v84, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
  v47 = v42 + v98[11];
  LOWORD(v42) = *(_WORD *)v47;
  v48 = *(_BYTE *)(v47 + 8);
  v80 = *(_OWORD *)(v47 + 16);
  v49 = *(_QWORD *)(v47 + 32);
  v50 = *(_QWORD *)(v47 + 40);
  LOBYTE(v38) = *(_BYTE *)(v47 + 48);
  LOBYTE(v39) = *(_BYTE *)(v47 + 49);
  v51 = *(_QWORD *)(v47 + 56);
  v52 = *(_BYTE *)(v47 + 64);
  KeyPath = swift_getKeyPath();
  v54 = v93;
  sub_23DF73E10(v46, v93, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
  v55 = v54 + *(int *)(v83 + 36);
  *(_QWORD *)v55 = KeyPath;
  *(_WORD *)(v55 + 8) = v42;
  *(_BYTE *)(v55 + 16) = v48;
  *(_OWORD *)(v55 + 24) = v80;
  *(_QWORD *)(v55 + 40) = v49;
  *(_QWORD *)(v55 + 48) = v50;
  *(_BYTE *)(v55 + 56) = v38;
  *(_BYTE *)(v55 + 57) = (_BYTE)v39;
  *(_QWORD *)(v55 + 64) = v51;
  *(_BYTE *)(v55 + 72) = v52;
  sub_23DF73E54(v46, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlView);
  v56 = sub_23E137038();
  sub_23DFA4094((uint64_t)v98, (uint64_t)v99);
  sub_23DF89340((uint64_t)v99, (uint64_t)v101, &qword_256D1EC28);
  sub_23DF89340((uint64_t)v101, (uint64_t)v102, &qword_256D1EC28);
  v57 = sub_23DFA625C((uint64_t)v102);
  v58 = 0;
  v59 = 0;
  v60 = 0;
  v61 = 0;
  if (v57 != 1)
  {
    sub_23DFA638C((uint64_t)v101);
    v58 = v102[46];
    v59 = v102[47];
    v60 = v102[48];
    v61 = v102[49];
  }
  v62 = v93;
  v63 = v87;
  sub_23DF89C1C(v93, v87, &qword_256D1EBC8);
  v64 = v63 + *(int *)(v85 + 36);
  *(_QWORD *)v64 = v56;
  *(_QWORD *)(v64 + 8) = v58;
  *(_QWORD *)(v64 + 16) = v59;
  *(_QWORD *)(v64 + 24) = v60;
  *(_QWORD *)(v64 + 32) = v61;
  *(_BYTE *)(v64 + 40) = v57 == 1;
  sub_23DF89C7C(v62, &qword_256D1EBC8);
  v65 = swift_getKeyPath();
  v66 = v98;
  v67 = v94;
  v68 = (uint64_t)v90;
  v69 = (uint64_t *)&v90[*(int *)(v86 + 36)];
  sub_23DFA62B4(v94 + v98[10], (uint64_t)(v69 + 1));
  *v69 = v65;
  sub_23DF89340(v63, v68, &qword_256D1EBB8);
  v70 = swift_getKeyPath();
  v71 = *(double (**)(uint64_t))(**(_QWORD **)(v67 + v66[14] + 8) + 208);
  v72 = swift_retain();
  v73 = v71(v72);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v74 = v89;
  sub_23DF89C1C(v68, v89, &qword_256D1EBA8);
  v75 = v96;
  v76 = (uint64_t *)(v74 + *(int *)(v96 + 36));
  *v76 = v70;
  *((double *)v76 + 1) = v73;
  sub_23DF89C7C(v68, &qword_256D1EBA8);
  sub_23DF73E54(v92, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v77 = v88;
  sub_23DF89340(v74, v88, &qword_256D1EB98);
  v78 = v77;
  v79 = v97;
  sub_23DF89340(v78, v97, &qword_256D1EB98);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v79, 0, 1, v75);
}

uint64_t sub_23DFA3F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (uint64_t *)(*(_QWORD *)(v1 + *(int *)(a1 + 48))
                 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_controlModules);
  v5 = *v3;
  v4 = v3[1];
  swift_unknownObjectRetain();
  sub_23DFA6694(v5, v4);
  v6 = DeviceDataModel.controlsBinding(for:)(v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v8 = v7;
  v10 = v9;
  sub_23DFA66CC(v5, v4);
  swift_unknownObjectRelease();
  v11 = *v3;
  v12 = v3[1];
  *v3 = v6;
  v3[1] = v8;
  v3[2] = v10;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23DFA66CC(v11, v12);
  return v6;
}

uint64_t sub_23DFA4094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void (*v5)(_OWORD *__return_ptr, uint64_t);
  uint64_t v6;
  double (*v7)(uint64_t);
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v17[3];
  char v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _OWORD v45[3];
  char v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v5 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(_QWORD **)(v2 + *(int *)(a1 + 56) + 8) + 168);
  v6 = swift_retain();
  v5(v17, v6);
  swift_release();
  v7 = *(double (**)(uint64_t))(**(_QWORD **)(v2 + *(int *)(a1 + 56) + 8) + 176);
  v8 = swift_retain();
  v9 = v7(v8);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_release();
  v45[0] = v17[0];
  v45[1] = v17[1];
  v45[2] = v17[2];
  v46 = v18;
  v47 = v19;
  v48 = v20;
  v49 = v21;
  v50 = v22;
  v51 = v23;
  v52 = v24;
  v53 = v25;
  v54 = v26;
  v55 = v27;
  v56 = v28;
  v57 = v29;
  v58 = v30;
  v59 = v31;
  v60 = v32;
  v61 = v33;
  v62 = v34;
  v63 = v35;
  v64 = v36;
  v65 = v37;
  v66 = v38;
  v67 = v39;
  v68 = v40;
  v69 = v41;
  v70 = v42;
  v71 = v43;
  v72 = v44;
  v73 = v9;
  v74 = v11;
  v75 = v13;
  v76 = v15;
  CGPointMake(v45);
  return sub_23DF89340((uint64_t)v45, a2, &qword_256D1EC28);
}

uint64_t sub_23DFA4258()
{
  sub_23DFA6650();
  return sub_23E136264();
}

uint64_t sub_23DFA4294(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_23DFA62B4(a1, (uint64_t)v3);
  sub_23DFA62B4((uint64_t)v3, (uint64_t)&v2);
  sub_23DFA6650();
  sub_23E136270();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
}

double sub_23DFA42F0@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  sub_23DFA660C();
  sub_23E136264();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23DFA433C()
{
  sub_23DFA660C();
  return sub_23E136270();
}

uint64_t sub_23DFA4384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v11 = sub_23E1370B0();
  v8[14] = v11;
  v8[15] = *(_QWORD *)(v11 - 8);
  v8[16] = swift_task_alloc();
  v12 = sub_23E1370D4();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = swift_task_alloc();
  v14 = type metadata accessor for AccessoryControlModelView(0, a7, a8, v13);
  v8[20] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[21] = v15;
  v8[22] = *(_QWORD *)(v15 + 64);
  v8[23] = swift_task_alloc();
  v16 = sub_23E1370EC();
  v8[24] = v16;
  v8[25] = *(_QWORD *)(v16 - 8);
  v8[26] = swift_task_alloc();
  sub_23E1372C0();
  v8[27] = sub_23E1372B4();
  v8[28] = sub_23E1372A8();
  v8[29] = v17;
  return swift_task_switch();
}

uint64_t sub_23DFA44AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + *(int *)(*(_QWORD *)(v0 + 160) + 60));
  *(_QWORD *)(v0 + 240) = v1;
  if (v1)
  {
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v2;
    *v2 = v0;
    v2[1] = sub_23DFA47C4;
    return sub_23E1372F0();
  }
  else
  {
    swift_release();
    v4 = *(_QWORD *)(v0 + 208);
    v24 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 72);
    sub_23DF975A0();
    v16 = *(_OWORD *)(v0 + 96);
    v18 = (void *)sub_23E1373BC();
    sub_23E1370E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v11, v8);
    v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v16;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v13 + v12, v5, v8);
    v14 = (uint64_t *)(v13 + ((v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v14 = v10;
    v14[1] = v9;
    *(_QWORD *)(v0 + 48) = sub_23DFA61C8;
    *(_QWORD *)(v0 + 56) = v13;
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_23DFA4B54;
    *(_QWORD *)(v0 + 40) = &block_descriptor_1;
    v15 = _Block_copy((const void *)(v0 + 16));
    sub_23DF9765C(v10);
    sub_23E1370BC();
    *(_QWORD *)(v0 + 64) = MEMORY[0x24BEE4AF8];
    sub_23DF73F28((unint64_t *)&unk_256D1EA10, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFC8);
    sub_23DF89B88(&qword_256D1EA20, &qword_256D1DFC8, MEMORY[0x24BEE12C8]);
    sub_23E1374F4();
    MEMORY[0x24264BC5C](v4, v17, v19, v15);
    _Block_release(v15);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v17, v23);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v4, v25);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23DFA47C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DFA4810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  __int128 v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 72);
  sub_23DF975A0();
  v14 = *(_OWORD *)(v0 + 96);
  v16 = (void *)sub_23E1373BC();
  sub_23E1370E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v5);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v14;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v2, v5);
  v11 = (uint64_t *)(v10 + ((v4 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v11 = v7;
  v11[1] = v6;
  *(_QWORD *)(v0 + 48) = sub_23DFA61C8;
  *(_QWORD *)(v0 + 56) = v10;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23DFA4B54;
  *(_QWORD *)(v0 + 40) = &block_descriptor_1;
  v12 = _Block_copy((const void *)(v0 + 16));
  sub_23DF9765C(v7);
  sub_23E1370BC();
  *(_QWORD *)(v0 + 64) = MEMORY[0x24BEE4AF8];
  sub_23DF73F28((unint64_t *)&unk_256D1EA10, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFC8);
  sub_23DF89B88(&qword_256D1EA20, &qword_256D1DFC8, MEMORY[0x24BEE12C8]);
  sub_23E1374F4();
  MEMORY[0x24264BC5C](v1, v15, v17, v12);
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v15, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v23);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DFA4AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;

  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for AccessoryControlModelView(0, a4, a5, a4) + 36));
  if (*(_BYTE *)(v7 + 40) != 2)
    return sub_23DF8FB90();
  result = MEMORY[0x24264C6DC](v7 + 16);
  if (result)
  {
    v9 = *(_QWORD *)(v7 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(0, a2, a3, ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23DFA4B54(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23DFA4B84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23DFA4C04()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_23E135C88();
}

uint64_t sub_23DFA4C80(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23DFA67E8;
  return v6(a1);
}

uint64_t sub_23DFA4CE4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23DFA4D48;
  return v6(a1);
}

uint64_t sub_23DFA4D48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23DFA4D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  v5 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  v9 = v4 + v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v9, AssociatedTypeWitness);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v9 + *(int *)(v5 + 40));
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v4 + v8))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFA4EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(_QWORD *)(type metadata accessor for AccessoryControlModelView(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v4[2];
  v12 = v4[3];
  v13 = (uint64_t)v4 + v10;
  v14 = (_QWORD *)((char *)v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v17;
  *v17 = v5;
  v17[1] = sub_23DF83188;
  return sub_23DFA4384(a1, v11, v12, v13, v15, v16, v7, v8);
}

uint64_t sub_23DFA4F74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFA4FA8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23DFA4FB0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23DFA5064(_QWORD *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, unint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000F8) != 0
    || (v7 = *(_QWORD *)(v5 + 64),
        ((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    v25 = *a2;
    *a1 = v25;
    a1 = (_QWORD *)(v25 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v8 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    v9 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *v8 = *v9;
    v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    v13 = **(void (***)(unint64_t, unint64_t, uint64_t))(v12 - 8);
    swift_retain();
    v13(v10, v11, v12);
    v14 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
    v15 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v17 = *(_OWORD *)(v15 + 32);
    v16 = *(_OWORD *)(v15 + 48);
    v18 = *(_OWORD *)(v15 + 16);
    *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
    *(_OWORD *)(v14 + 32) = v17;
    *(_OWORD *)(v14 + 48) = v16;
    *(_OWORD *)(v14 + 16) = v18;
    v19 = (_QWORD *)((v10 + 119) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)((v11 + 119) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v21[1] = v22[1];
    v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v24;
    v23[1] = v24[1];
    *(_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_23DFA5248(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v4 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_23DFA52F4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, unint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = **(void (***)(unint64_t, unint64_t, uint64_t))(v11 - 8);
  swift_retain();
  v12(v9, v10, v11);
  v13 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v16 = *(_OWORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 48);
  v17 = *(_OWORD *)(v14 + 16);
  *(_BYTE *)(v13 + 64) = *(_BYTE *)(v14 + 64);
  *(_OWORD *)(v13 + 32) = v16;
  *(_OWORD *)(v13 + 48) = v15;
  *(_OWORD *)(v13 + 16) = v17;
  v18 = (_QWORD *)((v9 + 119) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)((v10 + 119) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v20[1] = v21[1];
  v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  *(_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23DFA5464(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v10 = (uint64_t *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  __swift_assign_boxed_opaque_existential_1(v10, (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFF8));
  v12 = ((unint64_t)v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((v9 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_BYTE *)(v12 + 49) = *(_BYTE *)(v13 + 49);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  v14 = (_QWORD *)(((unint64_t)v10 + 119) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v11 + 119) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_retain();
  swift_release();
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_23DFA5780(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_OWORD *)v10;
  v11 = *(_OWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_OWORD *)v9 = v12;
  *(_OWORD *)(v9 + 16) = v11;
  v13 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_OWORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 48);
  v17 = *(_OWORD *)(v14 + 16);
  *(_BYTE *)(v13 + 64) = *(_BYTE *)(v14 + 64);
  *(_OWORD *)(v13 + 32) = v16;
  *(_OWORD *)(v13 + 48) = v15;
  *(_OWORD *)(v13 + 16) = v17;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v18 = (_QWORD *)((v9 + 119) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)((v10 + 119) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  *(_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23DFA5890(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0Tm(v9);
  v11 = *(_OWORD *)v10;
  v12 = *(_OWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_BYTE *)(v13 + 1) = *(_BYTE *)(v14 + 1);
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_BYTE *)(v13 + 49) = *(_BYTE *)(v14 + 49);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_BYTE *)(v13 + 64) = *(_BYTE *)(v14 + 64);
  v15 = (_QWORD *)((v9 + 119) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v10 + 119) & 0xFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_release();
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_unknownObjectRelease();
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_release();
  *(_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_23DFA5A28(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_23DFA5B98(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((((((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 119) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 119) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((((((((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_23DFA5CD4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23DFA5D4CLL);
}

void sub_23DFA5CDC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x23DFA5CE4);
  JUMPOUT(0x23DFA5D4CLL);
}

void sub_23DFA5D28()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23DFA5D4CLL);
}

void sub_23DFA5D30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23DFA5D4CLL);
}

uint64_t sub_23DFA5D38@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x23DFA5D4CLL);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x23DFA5D48);
    JUMPOUT(0x23DFA5D44);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t sub_23DFA5D64()
{
  return sub_23DFA5DBC(&qword_256D1EB70, &qword_256D1EB78, sub_23DFA5D98, MEMORY[0x24BDF3F50]);
}

uint64_t sub_23DFA5D98()
{
  return sub_23DFA5DBC(&qword_256D1EB80, &qword_256D1EB88, (uint64_t (*)(void))sub_23DFA5E20, MEMORY[0x24BDF5578]);
}

uint64_t sub_23DFA5DBC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x24264C55C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DFA5E20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1EB90;
  if (!qword_256D1EB90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1EB98);
    v2[0] = sub_23DFA5EA4();
    v2[1] = sub_23DF89B88(&qword_256D1EC08, &qword_256D1EC10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1EB90);
  }
  return result;
}

unint64_t sub_23DFA5EA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1EBA0;
  if (!qword_256D1EBA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1EBA8);
    v2[0] = sub_23DFA5F28();
    v2[1] = sub_23DF89B88(&qword_256D1EBF8, &qword_256D1EC00, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1EBA0);
  }
  return result;
}

unint64_t sub_23DFA5F28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1EBB0;
  if (!qword_256D1EBB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1EBB8);
    v2[0] = sub_23DFA5FAC();
    v2[1] = sub_23DF89B88(&qword_256D1EBE8, &qword_256D1EBF0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1EBB0);
  }
  return result;
}

unint64_t sub_23DFA5FAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1EBC0;
  if (!qword_256D1EBC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1EBC8);
    v2[0] = sub_23DF73F28(&qword_256D1EBD0, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlView, (uint64_t)&protocol conformance descriptor for AccessoryControlView);
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1EBD8, &qword_256D1EBE0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1EBC0);
  }
  return result;
}

uint64_t sub_23DFA6048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23DFA67E4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D1EC18 + dword_256D1EC18))(a1, v4);
}

uint64_t sub_23DFA60B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  v5 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v4 + v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v9, AssociatedTypeWitness);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v9 + *(int *)(v5 + 40));
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v4 + v8))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFA61C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(type metadata accessor for AccessoryControlModelView(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t *)(v4 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23DFA4AA0(v4 + v8, *v9, v9[1], v5, v6);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_23DFA625C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23DFA6274()
{
  sub_23DFA6650();
  return sub_23E136264();
}

uint64_t sub_23DFA62B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

double sub_23DFA62F8@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  sub_23DFA660C();
  sub_23E136264();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23DFA6344()
{
  sub_23DFA660C();
  return sub_23E136270();
}

uint64_t sub_23DFA638C(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  sub_23DFA6424(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(void **)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(void **)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void **)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((void **)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1));
  return a1;
}

uint64_t sub_23DFA6424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t result;

  if (a8)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_23DFA65A4(a12, a13);

    sub_23DFA65D4(a17, a18, a19, a20, a21, a22);
    swift_release();
    swift_release();

    sub_23DFA65D4(a35, a36, a37, a38, a39, a40);
    return sub_23DF8F8D4(a44);
  }
  return result;
}

uint64_t sub_23DFA65A4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23DFA65D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t result;

  if (a6)
  {

    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_23DFA660C()
{
  unint64_t result;

  result = qword_256D1EC30;
  if (!qword_256D1EC30)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CF10, &_s16SafeAreaInsetKeyVN);
    atomic_store(result, (unint64_t *)&qword_256D1EC30);
  }
  return result;
}

unint64_t sub_23DFA6650()
{
  unint64_t result;

  result = qword_256D1EC38;
  if (!qword_256D1EC38)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CED8, &_s29AlarmAndTimerUIViewBuilderKeyVN);
    atomic_store(result, (unint64_t *)&qword_256D1EC38);
  }
  return result;
}

uint64_t sub_23DFA6694(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23DFA66CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23DFA6708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFA6750()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFA6774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23DF83188;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D1EC48 + dword_256D1EC48))(a1, v4);
}

uint64_t DeviceDataModel.controlsBinding(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;

  v5 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v21 - v10;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 32))(a1, a2, a3);
  if (!v4)
  {
    v13 = result;
    v23 = 0;
    v21 = sub_23E1372C0();
    swift_bridgeObjectRetain();
    v14 = sub_23E1372B4();
    v15 = (_QWORD *)swift_allocObject();
    v22 = v13;
    v16 = MEMORY[0x24BEE6930];
    v15[2] = v14;
    v15[3] = v16;
    v15[4] = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, AssociatedTypeWitness);
    swift_unknownObjectRetain();
    v17 = sub_23E1372B4();
    v18 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v19 = (char *)swift_allocObject();
    *((_QWORD *)v19 + 2) = v17;
    *((_QWORD *)v19 + 3) = MEMORY[0x24BEE6930];
    *((_QWORD *)v19 + 4) = a2;
    v20 = v22;
    *((_QWORD *)v19 + 5) = a3;
    *((_QWORD *)v19 + 6) = v20;
    *((_QWORD *)v19 + 7) = v5;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v18], v11, AssociatedTypeWitness);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC60);
    sub_23E136E94();
    return v24;
  }
  return result;
}

uint64_t static DeviceError.== infix(_:_:)()
{
  return 1;
}

uint64_t DeviceError.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t DeviceError.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23DFA6A28()
{
  return 1;
}

uint64_t sub_23DFA6A30()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23DFA6A70()
{
  return sub_23E1376A4();
}

uint64_t sub_23DFA6A94()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23DFA6AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = type metadata accessor for Device.Control(0);
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v8 = sub_23E134C80();
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v6[17] = swift_task_alloc();
  sub_23E1372C0();
  v6[18] = sub_23E1372B4();
  v6[19] = sub_23E1372A8();
  v6[20] = v9;
  return swift_task_switch();
}

uint64_t sub_23DFA6BF0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  unsigned __int8 *v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t (*v55)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 200) = v2;
  v3 = 1 << v2;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  result = swift_bridgeObjectRetain();
  v7 = 0;
  if (v5)
    goto LABEL_8;
LABEL_9:
  while (2)
  {
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_66:
      __break(1u);
      return result;
    }
    v12 = (unint64_t)((1 << *(_BYTE *)(v0 + 200)) + 63) >> 6;
    v10 = *(_QWORD *)(v0 + 16);
    if (v11 < v12)
    {
      v13 = v10 + 64;
      v14 = *(_QWORD *)(v10 + 64 + 8 * v11);
      ++v7;
      if (v14)
        goto LABEL_26;
      v7 = v11 + 1;
      if (v11 + 1 >= v12)
        break;
      v14 = *(_QWORD *)(v13 + 8 * v7);
      if (v14)
        goto LABEL_26;
      v7 = v11 + 2;
      if (v11 + 2 >= v12)
        break;
      v14 = *(_QWORD *)(v13 + 8 * v7);
      if (v14)
        goto LABEL_26;
      v7 = v11 + 3;
      if (v11 + 3 >= v12)
        break;
      v14 = *(_QWORD *)(v13 + 8 * v7);
      if (v14)
        goto LABEL_26;
      v7 = v11 + 4;
      if (v11 + 4 >= v12)
        break;
      v14 = *(_QWORD *)(v13 + 8 * v7);
      if (v14)
      {
LABEL_26:
        v5 = (v14 - 1) & v14;
        v9 = __clz(__rbit64(v14)) + (v7 << 6);
        while (1)
        {
          *(_QWORD *)(v0 + 168) = v5;
          *(_QWORD *)(v0 + 176) = v7;
          v16 = *(_QWORD *)(v0 + 136);
          v17 = *(_QWORD *)(v0 + 112);
          v18 = *(_QWORD *)(v0 + 120);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v16, *(_QWORD *)(v10 + 48) + *(_QWORD *)(v18 + 72) * v9, v17);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
            goto LABEL_64;
          v19 = *(_QWORD *)(v0 + 24);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
          if (!*(_QWORD *)(v19 + 16))
            goto LABEL_7;
          v20 = sub_23DF84CA8(*(_QWORD *)(v0 + 128));
          if ((v21 & 1) == 0)
            goto LABEL_7;
          v23 = *(_QWORD *)(v0 + 96);
          v22 = *(_QWORD *)(v0 + 104);
          v24 = *(_QWORD *)(v0 + 16);
          v25 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 72);
          sub_23DF73E10(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 56) + v25 * v20, v23, type metadata accessor for Device.Control);
          sub_23DF89384(v23, v22, type metadata accessor for Device.Control);
          if (!*(_QWORD *)(v24 + 16))
            break;
          v26 = sub_23DF84CA8(*(_QWORD *)(v0 + 128));
          if ((v27 & 1) == 0)
            break;
          v29 = *(_QWORD *)(v0 + 80);
          v28 = *(_QWORD *)(v0 + 88);
          sub_23DF73E10(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 56) + v26 * v25, v29, type metadata accessor for Device.Control);
          sub_23DF89384(v29, v28, type metadata accessor for Device.Control);
          if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0
            || (v30 = *(int *)(*(_QWORD *)(v0 + 64) + 20),
                _s22HomeAccessoryControlUI6DeviceV0C0V4KindO2eeoiySbAG_AGtFZ_0(*(_QWORD *)(v0 + 104) + v30, *(_QWORD *)(v0 + 88) + v30), (v31 & 1) == 0)|| (v32 = *(int *)(*(_QWORD *)(v0 + 64) + 24), static Device.Control.Source.== infix(_:_:)(*(_QWORD *)(v0 + 104) + v32, *(_QWORD *)(v0 + 88) + v32), (v33 & 1) == 0)|| (v34 = *(_QWORD *)(v0 + 104), v35 = *(_QWORD *)(v0 + 88), v36 = *(int **)(v0 + 64), *(unsigned __int8 *)(v34 + v36[7]) != *(unsigned __int8 *)(v35 + v36[7])))
          {
LABEL_62:
            v55 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 48) + 40)
                                                                         + *(_QWORD *)(*(_QWORD *)(v0 + 48) + 40));
            v54 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 184) = v54;
            *v54 = v0;
            v54[1] = sub_23DFA710C;
            return v55(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
          }
          v37 = v36[8];
          v38 = (_QWORD *)(v34 + v37);
          v39 = *(_QWORD *)(v34 + v37 + 8);
          v40 = (_QWORD *)(v35 + v37);
          v41 = v40[1];
          if (v39)
          {
            if (!v41)
              goto LABEL_62;
            if (*v38 != *v40 || v39 != v41)
            {
              if ((sub_23E137614() & 1) == 0)
                goto LABEL_62;
              v34 = *(_QWORD *)(v0 + 104);
              v35 = *(_QWORD *)(v0 + 88);
              v36 = *(int **)(v0 + 64);
            }
          }
          else if (v41)
          {
            goto LABEL_62;
          }
          v42 = v36[9];
          v43 = *(unsigned __int8 *)(v34 + v42);
          v44 = *(unsigned __int8 *)(v34 + v42 + 1);
          v45 = (unsigned __int8 *)(v35 + v42);
          v46 = *v45;
          v47 = v45[1];
          if (v43 == 4)
          {
            if (v46 != 4)
              goto LABEL_62;
          }
          else if (v46 == 4 || v43 != v46)
          {
            goto LABEL_62;
          }
          if (v44 == 4)
          {
            if (v47 != 4)
              goto LABEL_62;
          }
          else if (v47 == 4 || v44 != v47)
          {
            goto LABEL_62;
          }
          v48 = v36[10];
          v49 = *(unsigned __int8 *)(v34 + v48);
          v50 = *(unsigned __int8 *)(v35 + v48);
          if (v49 == 12)
          {
            if (v50 != 12)
              goto LABEL_62;
          }
          else if (v50 == 12 || v49 != v50)
          {
            goto LABEL_62;
          }
          if (*(unsigned __int8 *)(v34 + v36[11]) != *(unsigned __int8 *)(v35 + v36[11]))
            goto LABEL_62;
          v52 = *(_QWORD *)(v0 + 120);
          v51 = *(_QWORD *)(v0 + 128);
          v53 = *(_QWORD *)(v0 + 112);
          sub_23DF73E54(v35, type metadata accessor for Device.Control);
          sub_23DF73E54(v34, type metadata accessor for Device.Control);
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
          v5 = *(_QWORD *)(v0 + 168);
          v7 = *(_QWORD *)(v0 + 176);
          if (!v5)
            goto LABEL_9;
LABEL_8:
          v8 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
          v9 = v8 | (v7 << 6);
          v10 = *(_QWORD *)(v0 + 16);
        }
        sub_23DF73E54(*(_QWORD *)(v0 + 104), type metadata accessor for Device.Control);
LABEL_7:
        result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
        if (!v5)
          continue;
        goto LABEL_8;
      }
      v15 = v11 + 5;
      if (v15 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (v14)
        {
          v7 = v15;
          goto LABEL_26;
        }
        while (1)
        {
          v7 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_66;
          if (v7 >= v12)
            goto LABEL_63;
          v14 = *(_QWORD *)(v13 + 8 * v7);
          ++v15;
          if (v14)
            goto LABEL_26;
        }
      }
    }
    break;
  }
LABEL_63:
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 112));
LABEL_64:
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DFA710C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23DFA716C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  int *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  unsigned __int8 *v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  _QWORD *v50;
  uint64_t (*v51)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
LABEL_2:
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  sub_23DF73E54(v2, type metadata accessor for Device.Control);
  sub_23DF73E54(v1, type metadata accessor for Device.Control);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v8 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v7 << 6);
      v11 = *(_QWORD *)(v0 + 16);
      goto LABEL_25;
    }
    v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
      return result;
    }
    v13 = (unint64_t)((1 << *(_BYTE *)(v0 + 200)) + 63) >> 6;
    v11 = *(_QWORD *)(v0 + 16);
    if (v12 >= v13)
      goto LABEL_59;
    v14 = v11 + 64;
    v15 = *(_QWORD *)(v11 + 64 + 8 * v12);
    ++v7;
    if (!v15)
    {
      v7 = v12 + 1;
      if (v12 + 1 >= v13)
        goto LABEL_59;
      v15 = *(_QWORD *)(v14 + 8 * v7);
      if (!v15)
      {
        v7 = v12 + 2;
        if (v12 + 2 >= v13)
          goto LABEL_59;
        v15 = *(_QWORD *)(v14 + 8 * v7);
        if (!v15)
        {
          v7 = v12 + 3;
          if (v12 + 3 >= v13)
            goto LABEL_59;
          v15 = *(_QWORD *)(v14 + 8 * v7);
          if (!v15)
          {
            v7 = v12 + 4;
            if (v12 + 4 >= v13)
              goto LABEL_59;
            v15 = *(_QWORD *)(v14 + 8 * v7);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_24:
    v8 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v7 << 6);
LABEL_25:
    *(_QWORD *)(v0 + 168) = v8;
    *(_QWORD *)(v0 + 176) = v7;
    v17 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(v17, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v19 + 72) * v10, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
      goto LABEL_60;
    v20 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
    if (*(_QWORD *)(v20 + 16))
    {
      v21 = sub_23DF84CA8(*(_QWORD *)(v0 + 128));
      if ((v22 & 1) != 0)
      {
        v24 = *(_QWORD *)(v0 + 96);
        v23 = *(_QWORD *)(v0 + 104);
        v25 = *(_QWORD *)(v0 + 16);
        v26 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 72);
        sub_23DF73E10(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 56) + v26 * v21, v24, type metadata accessor for Device.Control);
        sub_23DF89384(v24, v23, type metadata accessor for Device.Control);
        if (*(_QWORD *)(v25 + 16))
        {
          v27 = sub_23DF84CA8(*(_QWORD *)(v0 + 128));
          if ((v28 & 1) != 0)
          {
            v30 = *(_QWORD *)(v0 + 80);
            v29 = *(_QWORD *)(v0 + 88);
            sub_23DF73E10(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 56) + v27 * v26, v30, type metadata accessor for Device.Control);
            sub_23DF89384(v30, v29, type metadata accessor for Device.Control);
            if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
              goto LABEL_57;
            v31 = *(int *)(*(_QWORD *)(v0 + 64) + 20);
            _s22HomeAccessoryControlUI6DeviceV0C0V4KindO2eeoiySbAG_AGtFZ_0(*(_QWORD *)(v0 + 104) + v31, *(_QWORD *)(v0 + 88) + v31);
            if ((v32 & 1) == 0)
              goto LABEL_57;
            v33 = *(int *)(*(_QWORD *)(v0 + 64) + 24);
            static Device.Control.Source.== infix(_:_:)(*(_QWORD *)(v0 + 104) + v33, *(_QWORD *)(v0 + 88) + v33);
            if ((v34 & 1) == 0)
              goto LABEL_57;
            v1 = *(_QWORD *)(v0 + 104);
            v2 = *(_QWORD *)(v0 + 88);
            v35 = *(int **)(v0 + 64);
            if (*(unsigned __int8 *)(v1 + v35[7]) != *(unsigned __int8 *)(v2 + v35[7]))
              goto LABEL_57;
            v36 = v35[8];
            v37 = (_QWORD *)(v1 + v36);
            v38 = *(_QWORD *)(v1 + v36 + 8);
            v39 = (_QWORD *)(v2 + v36);
            v40 = v39[1];
            if (v38)
            {
              if (!v40)
                goto LABEL_57;
              if (*v37 != *v39 || v38 != v40)
              {
                if ((sub_23E137614() & 1) != 0)
                {
                  v1 = *(_QWORD *)(v0 + 104);
                  v2 = *(_QWORD *)(v0 + 88);
                  v35 = *(int **)(v0 + 64);
                  goto LABEL_41;
                }
LABEL_57:
                v51 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 48) + 40)
                                                                             + *(_QWORD *)(*(_QWORD *)(v0 + 48) + 40));
                v50 = (_QWORD *)swift_task_alloc();
                *(_QWORD *)(v0 + 184) = v50;
                *v50 = v0;
                v50[1] = sub_23DFA710C;
                return v51(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
              }
            }
            else if (v40)
            {
              goto LABEL_57;
            }
LABEL_41:
            v41 = v35[9];
            v42 = *(unsigned __int8 *)(v1 + v41);
            v43 = *(unsigned __int8 *)(v1 + v41 + 1);
            v44 = (unsigned __int8 *)(v2 + v41);
            v45 = *v44;
            v46 = v44[1];
            if (v42 == 4)
            {
              if (v45 != 4)
                goto LABEL_57;
            }
            else if (v45 == 4 || v42 != v45)
            {
              goto LABEL_57;
            }
            if (v43 == 4)
            {
              if (v46 != 4)
                goto LABEL_57;
            }
            else if (v46 == 4 || v43 != v46)
            {
              goto LABEL_57;
            }
            v47 = v35[10];
            v48 = *(unsigned __int8 *)(v1 + v47);
            v49 = *(unsigned __int8 *)(v2 + v47);
            if (v48 == 12)
            {
              if (v49 != 12)
                goto LABEL_57;
            }
            else if (v49 == 12 || v48 != v49)
            {
              goto LABEL_57;
            }
            if (*(unsigned __int8 *)(v1 + v35[11]) == *(unsigned __int8 *)(v2 + v35[11]))
              goto LABEL_2;
            goto LABEL_57;
          }
        }
        sub_23DF73E54(*(_QWORD *)(v0 + 104), type metadata accessor for Device.Control);
      }
    }
    result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  }
  v16 = v12 + 5;
  if (v16 < v13)
  {
    v15 = *(_QWORD *)(v14 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        v7 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_62;
        if (v7 >= v13)
          goto LABEL_59;
        v15 = *(_QWORD *)(v14 + 8 * v7);
        ++v16;
        if (v15)
          goto LABEL_24;
      }
    }
    v7 = v16;
    goto LABEL_24;
  }
LABEL_59:
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 112));
LABEL_60:
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DFA7654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  swift_release();
  sub_23DF73E54(v5, type metadata accessor for Device.Control);
  sub_23DF73E54(v4, type metadata accessor for Device.Control);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DFA7728()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23DFA7754@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DFA7760(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v28 = a7;
  v29 = a8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v28 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s22HomeAccessoryControlUI6DeviceV0C6ModuleV18controlsDictionary4withSDy10Foundation4UUIDVAC0C0VGSayAEG_tFZ_0(*a1);
  v20 = _s22HomeAccessoryControlUI6DeviceV0C6ModuleV18controlsDictionary4withSDy10Foundation4UUIDVAC0C0VGSayAEG_tFZ_0(a4);
  v21 = sub_23E1372E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a6, AssociatedTypeWitness);
  sub_23E1372C0();
  swift_unknownObjectRetain();
  v22 = sub_23E1372B4();
  v23 = (*(unsigned __int8 *)(v13 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  *((_QWORD *)v24 + 2) = v22;
  *((_QWORD *)v24 + 3) = v25;
  v26 = v29;
  *((_QWORD *)v24 + 4) = v28;
  *((_QWORD *)v24 + 5) = v26;
  *((_QWORD *)v24 + 6) = a5;
  *((_QWORD *)v24 + 7) = v19;
  *((_QWORD *)v24 + 8) = v20;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v24[v23], v15, AssociatedTypeWitness);
  sub_23DFA7DA8((uint64_t)v18, (uint64_t)&unk_256D1EC80, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_23DFA7918()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_23DFA79AC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[4];
  v4 = v1[5];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_23DFA7760(a1, v1[2], v1[3], v1[6], v1[7], (uint64_t)v1 + ((v5 + 64) & ~v5), v3, v4);
}

unint64_t sub_23DFA7A1C()
{
  unint64_t result;

  result = qword_256D1EC68;
  if (!qword_256D1EC68)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for DeviceError, &type metadata for DeviceError);
    atomic_store(result, (unint64_t *)&qword_256D1EC68);
  }
  return result;
}

uint64_t dispatch thunk of DeviceDataModel.device(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DeviceDataModel.controls(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DeviceDataModel.set(control:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23DF83188;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DeviceDataModel.containsDevice(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t getEnumTagSinglePayload for DeviceError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for DeviceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23DFA7BB0 + 4 * byte_23E139B70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23DFA7BD0 + 4 * byte_23E139B75[v4]))();
}

_BYTE *sub_23DFA7BB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23DFA7BD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23DFA7BD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23DFA7BE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23DFA7BE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23DFA7BF0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23DFA7BFC()
{
  return 0;
}

ValueMetadata *type metadata accessor for DeviceError()
{
  return &type metadata for DeviceError;
}

uint64_t sub_23DFA7C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;
  uint64_t v15;

  v8[2] = sub_23E1372C0();
  v8[3] = sub_23E1372B4();
  v13 = (_QWORD *)swift_task_alloc();
  v8[4] = v13;
  *v13 = v8;
  v13[1] = sub_23DFA7CB8;
  return sub_23DFA6AE0(a5, a6, a7, a8, v15);
}

uint64_t sub_23DFA7CB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23E1372A8();
  return swift_task_switch();
}

uint64_t sub_23DFA7D40()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DFA7D74()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23DFA7DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23E1372E4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23E1372D8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23DF89C7C(a1, &qword_256D1E8C8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E1372A8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_23DFA7EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v50 = a1;
  v38 = a2;
  v3 = sub_23E134C80();
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  v37 = *(_QWORD *)(v51 - 8);
  v5 = MEMORY[0x24BDAC7A8](v51);
  v43 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)v36 - v7;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC8);
  v8 = MEMORY[0x24BDAC7A8](v46);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)v36 - v11;
  v13 = *v2;
  v12 = v2[1];
  v14 = v2[2];
  v15 = v2[3];
  v17 = v2[4];
  v16 = v2[5];
  v18 = v2[6];
  swift_getKeyPath();
  v54 = v13;
  v55 = v12;
  v56 = v14;
  v57 = v15;
  v58 = v17;
  v59 = v16;
  v60 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECD0);
  sub_23E136E7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v19 = v61;
  v20 = v62;
  v21 = v63;
  v54 = v61;
  v55 = v62;
  v56 = v63;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECD8);
  v23 = sub_23DFAAFE8(&qword_256D1ECE0, &qword_256D1ECE8);
  sub_23E136EA0();
  v24 = v53;
  v64 = v53;
  v54 = v19;
  v55 = v20;
  v56 = v21;
  sub_23E136EAC();
  if (v24 == v61)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v38, 1, 1, v51);
  }
  else
  {
    v42 = v10;
    v41 = v19;
    v40 = v20;
    v39 = v21;
    v36[2] = v22;
    v36[1] = v23;
    v26 = (uint64_t)v43;
    while (1)
    {
      v61 = v24;
      v54 = v19;
      v55 = v20;
      v56 = v21;
      v27 = (uint64_t)v45;
      sub_23E136EC4();
      v54 = v19;
      v55 = v20;
      v56 = v21;
      sub_23E136EB8();
      sub_23DF89340(v27, (uint64_t)v10, &qword_256D1ECC8);
      swift_getKeyPath();
      sub_23E136E7C();
      swift_release();
      v29 = v54;
      v28 = v55;
      v30 = v56;
      v61 = v54;
      v62 = v55;
      v63 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECF0);
      sub_23DFAAFE8(&qword_256D1ECF8, &qword_256D1ED00);
      sub_23E136EA0();
      v31 = v52;
      v53 = v52;
      v54 = v29;
      v55 = v28;
      v56 = v30;
      sub_23E136EAC();
      v32 = (uint64_t)v44;
      if (v31 != v61)
        break;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v10 = v42;
      sub_23DF89C7C((uint64_t)v42, &qword_256D1ECC8);
      v24 = v64;
      v19 = v41;
      v20 = v40;
      v54 = v41;
      v55 = v40;
      v21 = v39;
      v56 = v39;
      sub_23E136EAC();
      if (v24 == v61)
        goto LABEL_2;
    }
    while (1)
    {
      v61 = v31;
      v54 = v29;
      v55 = v28;
      v56 = v30;
      sub_23E136EC4();
      v54 = v29;
      v55 = v28;
      v56 = v30;
      sub_23E136EB8();
      sub_23DF89340(v32, v26, &qword_256D1EC90);
      sub_23DFAB028();
      v33 = v47;
      sub_23E136ED0();
      v34 = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v49);
      if ((v34 & 1) != 0)
        break;
      sub_23DF89C7C(v26, &qword_256D1EC90);
      v31 = v53;
      v54 = v29;
      v55 = v28;
      v56 = v30;
      sub_23E136EAC();
      if (v31 == v61)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_23DF89C7C((uint64_t)v42, &qword_256D1ECC8);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v35 = v38;
    sub_23DF89340(v26, v38, &qword_256D1EC90);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v51);
  }
}

void sub_23DFA8494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v7[32];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24BDAC7A8](v0);
  v1 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v7[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24264B734](v0);
  sub_23DF73E10((uint64_t)&v6[*(int *)(v4 + 20)], (uint64_t)v3, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v6, type metadata accessor for Device.Control);
  Device.Control.Kind.primitive.getter();
  sub_23DF73E54((uint64_t)v3, type metadata accessor for Device.Control.Kind);
  __asm { BR              X10 }
}

uint64_t sub_23DFA85F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  sub_23DF89C1C(v1, v0, &qword_256D1EC90);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_23DF89340(v0, v5 + v4, &qword_256D1EC90);
  sub_23DF89C1C(v1, v0, &qword_256D1EC90);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  sub_23DF89340(v0, v6 + v4, &qword_256D1EC90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA8);
  sub_23E136E94();
  return *(_QWORD *)(v3 - 104);
}

uint64_t sub_23DFA87AC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned __int8 *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734](v8);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload())
  {
    result = sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
    v10 = 0;
  }
  else
  {
    v11 = *v4;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
    result = sub_23DF73E54((uint64_t)&v4[*(int *)(v12 + 48)], type metadata accessor for Device.Control.BinaryViewConfig);
    v10 = v11 & 1;
    if (v11 == 2)
      v10 = 2;
  }
  *a1 = v10;
  return result;
}

uint64_t sub_23DFA88F8(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  int v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control.Kind(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (unsigned __int8 *)&v25 - v9;
  v11 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734]();
  sub_23DF73E10((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v10, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload())
  {
    v17 = type metadata accessor for Device.Control.Kind;
    v18 = (uint64_t)v10;
  }
  else
  {
    v19 = v8;
    v25 = v2;
    v20 = *v10;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
    sub_23DF89384((uint64_t)&v10[*(int *)(v21 + 48)], (uint64_t)v16, type metadata accessor for Device.Control.BinaryViewConfig);
    if (v26 == 2)
    {
      v17 = type metadata accessor for Device.Control.BinaryViewConfig;
      v18 = (uint64_t)v16;
    }
    else
    {
      if (v20 == 2)
        v22 = 2;
      else
        v22 = v26 & 1;
      swift_getKeyPath();
      sub_23E136E7C();
      swift_release();
      v23 = (uint64_t)&v19[*(int *)(v21 + 48)];
      *v19 = v22;
      sub_23DF73E10((uint64_t)v16, v23, type metadata accessor for Device.Control.BinaryViewConfig);
      swift_storeEnumTagMultiPayload();
      sub_23E136E70();
      sub_23DF89C7C((uint64_t)v4, &qword_256D1ECA0);
      v18 = (uint64_t)v16;
      v17 = type metadata accessor for Device.Control.BinaryViewConfig;
    }
  }
  return sub_23DF73E54(v18, v17);
}

void sub_23DFA8B80(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v8 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24264B734](v1);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  Device.Control.Kind.primitive.getter();
  sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
  __asm { BR              X10 }
}

uint64_t sub_23DFA8CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  sub_23DF89C1C(v2, v1, &qword_256D1EC90);
  v4 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_23DF89340(v1, v5 + v4, &qword_256D1EC90);
  sub_23DF89C1C(v2, v1, &qword_256D1EC90);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  sub_23DF89340(v1, v6 + v4, &qword_256D1EC90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v7 = *(_QWORD *)(v3 - 96);
  sub_23E136E94();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
}

uint64_t sub_23DFA8ED8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734](v11);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48)];
    sub_23DF89340((uint64_t)v4, (uint64_t)v10, &qword_256D1D5D8);
    sub_23DF73E54(v12, type metadata accessor for Device.Control.IncrementalConfig);
    return sub_23DF89340((uint64_t)v10, (uint64_t)a1, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
    *a1 = 0;
    v14 = *MEMORY[0x24BE4DD08];
    v15 = sub_23E13534C();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a1, v14, v15);
    v16 = type metadata accessor for Device.Control.IncrementalState(0);
    *((_BYTE *)a1 + *(int *)(v16 + 20)) = 0;
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
}

uint64_t sub_23DFA90D8(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA0);
  MEMORY[0x24BDAC7A8](v21);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Device.Control.Kind(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734]();
  sub_23DF73E10((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)v8, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v11, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8);
    sub_23DF89384((uint64_t)&v8[*(int *)(v15 + 48)], (uint64_t)v14, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF89C7C((uint64_t)v8, &qword_256D1D5D8);
    swift_getKeyPath();
    sub_23E136E7C();
    swift_release();
    v16 = (uint64_t)&v6[*(int *)(v15 + 48)];
    sub_23DF89C1C(v20, (uint64_t)v6, &qword_256D1D5D8);
    sub_23DF73E10((uint64_t)v14, v16, type metadata accessor for Device.Control.IncrementalConfig);
    swift_storeEnumTagMultiPayload();
    sub_23E136E70();
    sub_23DF89C7C((uint64_t)v2, &qword_256D1ECA0);
    v17 = (uint64_t)v14;
    v18 = type metadata accessor for Device.Control.IncrementalConfig;
  }
  else
  {
    v18 = type metadata accessor for Device.Control.Kind;
    v17 = (uint64_t)v8;
  }
  return sub_23DF73E54(v17, v18);
}

void sub_23DFA934C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  v7[1] = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v1 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24264B734](v0);
  sub_23DF73E10((uint64_t)&v6[*(int *)(v4 + 20)], (uint64_t)v3, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v6, type metadata accessor for Device.Control);
  Device.Control.Kind.primitive.getter();
  sub_23DF73E54((uint64_t)v3, type metadata accessor for Device.Control.Kind);
  __asm { BR              X10 }
}

uint64_t sub_23DFA94A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = sub_23E137614();
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    sub_23DF89C1C(v2, v1, &qword_256D1EC90);
    v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 120) + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    sub_23DF89340(v1, v8 + v7, &qword_256D1EC90);
    sub_23DF89C1C(v2, v1, &qword_256D1EC90);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    sub_23DF89340(v1, v9 + v7, &qword_256D1EC90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECB8);
    result = sub_23E136E94();
    v10 = *(_QWORD *)(v3 - 96);
    v11 = *(_BYTE *)(v3 - 88);
    *(_OWORD *)v0 = *(_OWORD *)(v3 - 112);
    *(_QWORD *)(v0 + 16) = v10;
    *(_BYTE *)(v0 + 24) = v11;
  }
  else
  {
    *(_QWORD *)v0 = 0;
    *(_QWORD *)(v0 + 8) = 0;
    *(_BYTE *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
  }
  return result;
}

uint64_t sub_23DFA9680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;

  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734](v8);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v9 = *(_QWORD *)v4;
    v10 = v4[8];
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
    v9 = 0;
    v10 = 0;
  }
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v10;
  return result;
}

uint64_t sub_23DFA97B8(uint64_t *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA0);
  MEMORY[0x24BDAC7A8](v19);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Device.Control.Kind(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = *((_BYTE *)a1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734]();
  sub_23DF73E10((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v9, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v12, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() != 2)
    return sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control.Kind);
  v15 = *((_QWORD *)v9 + 2);
  v16 = v9[24];
  swift_getKeyPath();
  sub_23E136E7C();
  swift_release();
  *(_QWORD *)v7 = v13;
  v7[8] = v14;
  *((_QWORD *)v7 + 2) = v15;
  v7[24] = v16;
  swift_storeEnumTagMultiPayload();
  sub_23E136E70();
  return sub_23DF89C7C((uint64_t)v3, &qword_256D1ECA0);
}

void sub_23DFA99A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  v7 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v1 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24264B734](v0);
  sub_23DF73E10((uint64_t)&v6[*(int *)(v4 + 20)], (uint64_t)v3, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v6, type metadata accessor for Device.Control);
  Device.Control.Kind.primitive.getter();
  sub_23DF73E54((uint64_t)v3, type metadata accessor for Device.Control.Kind);
  __asm { BR              X10 }
}

uint64_t sub_23DFA9AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;

  v4 = sub_23E137614();
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    sub_23DF89C1C(v2, v1, &qword_256D1EC90);
    v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 144) + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    sub_23DF89340(v1, v8 + v7, &qword_256D1EC90);
    sub_23DF89C1C(v2, v1, &qword_256D1EC90);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    sub_23DF89340(v1, v9 + v7, &qword_256D1EC90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECB0);
    result = sub_23E136E94();
    v10 = *(_QWORD *)(v3 - 128);
    v11 = *(_WORD *)(v3 - 88);
    *(_QWORD *)v0 = *(_QWORD *)(v3 - 136);
    *(_QWORD *)(v0 + 8) = v10;
    v12 = *(_OWORD *)(v3 - 104);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v3 - 120);
    *(_OWORD *)(v0 + 32) = v12;
    *(_WORD *)(v0 + 48) = v11;
  }
  else
  {
    *(_WORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)v0 = 0u;
  }
  return result;
}

uint64_t sub_23DFA9CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;
  __int16 v12;
  uint64_t v13;

  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734](v8);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 5)
  {
    v10 = *(_OWORD *)v4;
    v11 = *((_OWORD *)v4 + 1);
    v12 = *((_WORD *)v4 + 16);
  }
  else
  {
    result = sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
    v10 = 0uLL;
    v12 = 255;
    v11 = 0uLL;
  }
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v11;
  *(_WORD *)(a1 + 32) = v12;
  return result;
}

uint64_t sub_23DFA9E14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control.Kind(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  v26 = a1[2];
  v27 = v14;
  v25 = a1[3];
  v24 = *((unsigned __int16 *)a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734]();
  sub_23DF73E10((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v10, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() != 5)
    return sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.Kind);
  v22 = *(_OWORD *)(v10 + 40);
  v16 = *((_QWORD *)v10 + 7);
  v17 = v10[64];
  v18 = *((_QWORD *)v10 + 9);
  v23 = v2;
  v19 = v10[80];
  swift_getKeyPath();
  sub_23E136E7C();
  swift_release();
  *(_QWORD *)v8 = v27;
  *((_QWORD *)v8 + 1) = v15;
  v20 = v25;
  *((_QWORD *)v8 + 2) = v26;
  *((_QWORD *)v8 + 3) = v20;
  *((_WORD *)v8 + 16) = v24;
  *(_OWORD *)(v8 + 40) = v22;
  *((_QWORD *)v8 + 7) = v16;
  v8[64] = v17;
  *((_QWORD *)v8 + 9) = v18;
  v8[80] = v19;
  swift_storeEnumTagMultiPayload();
  sub_23E136E70();
  return sub_23DF89C7C((uint64_t)v4, &qword_256D1ECA0);
}

void sub_23DFAA054(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v8 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24264B734](v1);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  Device.Control.Kind.primitive.getter();
  sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
  __asm { BR              X10 }
}

uint64_t sub_23DFAA1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_23E137614();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    sub_23DF89C1C(v2, v1, &qword_256D1EC90);
    v5 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = 0;
    sub_23DF89340(v1, v6 + v5, &qword_256D1EC90);
    sub_23DF89C1C(v2, v1, &qword_256D1EC90);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    sub_23DF89340(v1, v7 + v5, &qword_256D1EC90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    v8 = *(_QWORD *)(v3 - 96);
    sub_23E136E94();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(*(_QWORD *)(v3 - 96), 1, 1, v11);
  }
}

uint64_t sub_23DFAA3A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734](v8);
  sub_23DF73E10((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() == 3)
    return sub_23DF89340((uint64_t)v4, a1, &qword_256D1D5E8);
  sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.Kind);
  v10 = type metadata accessor for Device.Control.ColorState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
}

uint64_t sub_23DFAA4F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  char v17;
  int v18;
  int v19;
  char *v20;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Device.Control.Kind(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - v8;
  v10 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  MEMORY[0x24264B734]();
  sub_23DF73E10((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v9, type metadata accessor for Device.Control.Kind);
  sub_23DF73E54((uint64_t)v12, type metadata accessor for Device.Control);
  if (swift_getEnumCaseMultiPayload() != 3)
    return sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control.Kind);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640);
  v14 = &v9[*(int *)(v13 + 48)];
  v15 = *v14;
  v26 = v1;
  v16 = v14[1];
  v17 = v14[2];
  v18 = *((unsigned __int16 *)v14 + 2);
  v24 = v14[6];
  v25 = v18;
  v19 = *((unsigned __int16 *)v14 + 4);
  v22 = v14[10];
  v23 = v19;
  sub_23DF89C7C((uint64_t)v9, &qword_256D1D5E8);
  swift_getKeyPath();
  sub_23E136E7C();
  swift_release();
  v20 = &v7[*(int *)(v13 + 48)];
  sub_23DF89C1C(v27, (uint64_t)v7, &qword_256D1D5E8);
  *v20 = v15;
  v20[1] = v16;
  v20[2] = v17;
  *((_WORD *)v20 + 2) = v25;
  v20[6] = v24;
  *((_WORD *)v20 + 4) = v23;
  v20[10] = v22;
  swift_storeEnumTagMultiPayload();
  sub_23E136E70();
  return sub_23DF89C7C((uint64_t)v3, &qword_256D1ECA0);
}

uint64_t sub_23DFAA75C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_23DFAA7FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v5 + 72) & ~v5);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23DFA67E4;
  return sub_23DFA7C14(a1, v6, v7, v8, v9, v10, v11, v4);
}

uint64_t sub_23DFAA8D4()
{
  return sub_23DFAAAB0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23DFA8ED8);
}

uint64_t sub_23DFAA8E4(uint64_t a1)
{
  return sub_23DFAAF8C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_23DFA90D8);
}

uint64_t sub_23DFAA8F4@<X0>(char *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  return sub_23DFA87AC(a1);
}

uint64_t sub_23DFAA93C(unsigned __int8 *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  return sub_23DFA88F8(a1);
}

uint64_t sub_23DFAA984@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  return sub_23DFA9CE0(a1);
}

uint64_t sub_23DFAA9CC(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  return sub_23DFA9E14(a1);
}

uint64_t sub_23DFAAA14@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  return sub_23DFA9680(a1);
}

uint64_t sub_23DFAAA5C(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  return sub_23DFA97B8(a1);
}

uint64_t sub_23DFAAAA4()
{
  return sub_23DFAAAB0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23DFAA3A4);
}

uint64_t sub_23DFAAAB0(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int EnumCaseMultiPayload;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t, uint64_t);
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v3 = v0 + v2 + *(int *)(v1 + 32);
  v4 = sub_23E134C80();
  v5 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = type metadata accessor for Device.Control(0);
  v7 = v3 + *(int *)(v6 + 20);
  type metadata accessor for Device.Control.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for IconDescriptor();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23E135910();
      v12 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
      v12(v10, v11);
      v13 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v12(v13 + *(int *)(v9 + 20), v11);
      v14 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v15 = v8 + *(int *)(v14 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_13;
      if (!EnumCaseMultiPayload)
      {
        v17 = v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v18 = sub_23E134C20();
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      }
      break;
    case 1u:
      v19 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v7, 1, v19))
      {
        v20 = sub_23E13534C();
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v7, v20);
      }
      v21 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for IconDescriptor();
      v23 = v21 + *(int *)(v22 + 20);
      v24 = sub_23E135910();
      v25 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
      v25(v23, v24);
      v26 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v25(v26 + *(int *)(v22 + 20), v24);
      v27 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v28 = v21 + *(int *)(v27 + 28);
      v29 = sub_23E135520();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      break;
    case 2u:
    case 4u:
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v30 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v7, 1, v30))
      {
        v31 = sub_23E135328();
        v32 = *(_QWORD *)(v31 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v32 + 48))(v7, 1, v31))
          (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v7, v31);
      }
      break;
    case 6u:
      v5(v7, v4);
      break;
    default:
      break;
  }
  v33 = v3 + *(int *)(v6 + 24);
  type metadata accessor for Device.Control.Source(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v34 = sub_23E1356DC();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      swift_bridgeObjectRelease();
      break;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      v35 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v36 = sub_23E134E9C();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      break;
    case 3u:
    case 4u:
    case 5u:
      swift_release();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23DFAAF80(uint64_t a1)
{
  return sub_23DFAAF8C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_23DFAA4F4);
}

uint64_t sub_23DFAAF8C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v4 + 32) & ~v4));
}

uint64_t sub_23DFAAFE8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12B8], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DFAB028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1ED08;
  if (!qword_256D1ED08)
  {
    v1 = type metadata accessor for Device.Control(255);
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control, v1);
    atomic_store(result, (unint64_t *)&qword_256D1ED08);
  }
  return result;
}

uint64_t AccessoryControlInfo.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AccessoryControlInfo.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccessoryControlInfo(0);
  return sub_23DF73E10(v1 + *(int *)(v3 + 20), a1, type metadata accessor for AccessoryControlInfo.State);
}

uint64_t AccessoryControlInfo.state.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 20);
  return sub_23DFAB438(a1, v3);
}

uint64_t (*AccessoryControlInfo.state.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlInfo(0);
  return CGPointMake;
}

uint64_t AccessoryControlInfo.role.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlInfo(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AccessoryControlInfo.role.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for AccessoryControlInfo(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*AccessoryControlInfo.role.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlInfo(0);
  return CGPointMake;
}

uint64_t AccessoryControlInfo.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlInfo.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AccessoryControlInfo.accessibilityIdentifier.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlInfo(0);
  return CGPointMake;
}

uint64_t AccessoryControlInfo.sizeConstraint.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlInfo(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t AccessoryControlInfo.sizeConstraint.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for AccessoryControlInfo(0);
  *(_WORD *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*AccessoryControlInfo.sizeConstraint.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlInfo(0);
  return CGPointMake;
}

uint64_t AccessoryControlInfo.preferredViewType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlInfo(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t AccessoryControlInfo.preferredViewType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for AccessoryControlInfo(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*AccessoryControlInfo.preferredViewType.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlInfo(0);
  return CGPointMake;
}

uint64_t AccessoryControlInfo.enabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 40));
}

uint64_t AccessoryControlInfo.enabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryControlInfo(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*AccessoryControlInfo.enabled.modify())(_QWORD)
{
  type metadata accessor for AccessoryControlInfo(0);
  return CGPointMake;
}

uint64_t AccessoryControlInfo.writers.getter()
{
  type metadata accessor for AccessoryControlInfo(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DFAB404()
{
  uint64_t v0;

  return sub_23DFB3DE8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for AccessoryControlInfo(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D1EDC0);
}

uint64_t type metadata accessor for AccessoryControlInfo.State(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D1EE80);
}

uint64_t sub_23DFAB438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryControlInfo.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *static AccessoryControlInfo.writeBlock.getter()
{
  void *v0;

  swift_beginAccess();
  v0 = off_256D1ED18;
  swift_retain();
  return v0;
}

uint64_t static AccessoryControlInfo.writeBlock.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  off_256D1ED18 = a1;
  qword_256D1ED20 = a2;
  return swift_release();
}

uint64_t (*static AccessoryControlInfo.writeBlock.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AccessoryControlInfo.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  _BYTE *v4;
  int v5;
  uint64_t v6;

  sub_23E134C80();
  sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E13711C();
  v3 = (int *)type metadata accessor for AccessoryControlInfo(0);
  AccessoryControlInfo.State.hash(into:)(a1);
  sub_23E1376A4();
  if (*(_QWORD *)(v1 + v3[7] + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  v4 = (_BYTE *)(v1 + v3[8]);
  v5 = v4[1];
  if (*v4 == 4)
  {
    sub_23E1376B0();
    if (v5 != 4)
    {
LABEL_6:
      sub_23E1376B0();
      sub_23E1376A4();
      goto LABEL_9;
    }
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376A4();
    if (v5 != 4)
      goto LABEL_6;
  }
  sub_23E1376B0();
LABEL_9:
  if (*(_BYTE *)(v1 + v3[9]) == 12)
  {
    sub_23E1376B0();
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376A4();
  }
  sub_23E1376B0();
  v6 = *(_QWORD *)(v1 + v3[11]);
  swift_bridgeObjectRetain();
  sub_23DFAE21C(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t AccessoryControlInfo.hashValue.getter()
{
  return sub_23DFAC010((void (*)(_BYTE *))AccessoryControlInfo.hash(into:));
}

uint64_t sub_23DFAB734(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))AccessoryControlInfo.hash(into:));
}

uint64_t sub_23DFAB744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))AccessoryControlInfo.hash(into:));
}

uint64_t sub_23DFAB750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void AccessoryControlInfo.State.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  char *v17;
  _QWORD v18[6];
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v21 = a1;
  v2 = type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Device.Control.IncrementalState(0);
  v18[4] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18[3] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  v18[5] = (char *)v18 - v8;
  v9 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23E134C20();
  v18[1] = *(_QWORD *)(v10 - 8);
  v18[2] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v18[0] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v12);
  v13 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v13);
  v14 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v14);
  sub_23DF73E10(v1, (uint64_t)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  v17 = (char *)sub_23DFABA08 + 4 * byte_23E139D10[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DFABA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(unsigned __int8 *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40) + 48));
  sub_23DF89384(v3, v1, type metadata accessor for Device.Control.BinaryViewConfig);
  sub_23E1376A4();
  sub_23E1371C4();
  type metadata accessor for IconDescriptor();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  sub_23E13711C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  sub_23E1371C4();
  sub_23E13711C();
  sub_23E136C18();
  sub_23DF73E10(v1 + *(int *)(v2 + 24), v0, type metadata accessor for ControlTextModifier.Config);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23E1376A4();
      sub_23E1371C4();
      swift_bridgeObjectRelease();
      if (v5 == 2)
        goto LABEL_8;
    }
    else
    {
      sub_23E1376A4();
      if (v5 == 2)
        goto LABEL_8;
    }
    goto LABEL_6;
  }
  v7 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
  v9 = *(_QWORD *)(v4 - 192);
  v8 = *(_QWORD *)(v4 - 184);
  v10 = *(_QWORD *)(v4 - 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v9, v7, v10);
  sub_23E1376A4();
  sub_23E1376C8();
  sub_23DF73F28(&qword_256D1ED50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E13711C();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  if (v5 != 2)
LABEL_6:
    sub_23E1376B0();
LABEL_8:
  sub_23E1376B0();
  return sub_23DF73E54(v1, type metadata accessor for Device.Control.BinaryViewConfig);
}

uint64_t AccessoryControlInfo.State.hashValue.getter()
{
  return sub_23DFAC010((void (*)(_BYTE *))AccessoryControlInfo.State.hash(into:));
}

uint64_t sub_23DFAC010(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_23E137698();
  a1(v3);
  return sub_23E1376D4();
}

uint64_t sub_23DFAC054(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))AccessoryControlInfo.State.hash(into:));
}

uint64_t sub_23DFAC060(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_23E137698();
  a3(v5);
  return sub_23E1376D4();
}

uint64_t sub_23DFAC0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))AccessoryControlInfo.State.hash(into:));
}

uint64_t sub_23DFAC0B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_23E137698();
  a4(v6);
  return sub_23E1376D4();
}

uint64_t sub_23DFAC0EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryControlInfo(0);
  sub_23DF73E10(v1 + *(int *)(v12 + 20), (uint64_t)v11, type metadata accessor for AccessoryControlInfo.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v16 = (uint64_t)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48)];
    sub_23DF89384((uint64_t)v11, (uint64_t)v5, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF89C1C((uint64_t)v5, a1, &qword_256D1D858);
    sub_23DF73E54((uint64_t)v5, type metadata accessor for Device.Control.IncrementalConfig);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
    return sub_23DF89C7C(v16, &qword_256D1D5D8);
  }
  else if (EnumCaseMultiPayload)
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
    return sub_23DF73E54((uint64_t)v11, type metadata accessor for AccessoryControlInfo.State);
  }
  else
  {
    sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for Device.Control.BinaryViewConfig);
    sub_23DF89C1C((uint64_t)v8, a1, &qword_256D1D858);
    sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control.BinaryViewConfig);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 0, 1, v14);
  }
}

uint64_t sub_23DFAC324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(a1, 1) == 1)
    return sub_23DF89C7C(a1, &qword_256D1EEC8);
  sub_23DF89340(a1, (uint64_t)v17, &qword_256D1D858);
  v20 = v1 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 20);
  sub_23DF73E10(v20, (uint64_t)v14, type metadata accessor for AccessoryControlInfo.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30);
    v28 = (uint64_t)&v14[*(int *)(v27 + 48)];
    sub_23DF89384((uint64_t)v14, (uint64_t)v8, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF89340(v28, (uint64_t)v5, &qword_256D1D5D8);
    sub_23DFB3DA0((uint64_t)v17, (uint64_t)v8);
    sub_23DF73E54(v20, type metadata accessor for AccessoryControlInfo.State);
    v29 = v20 + *(int *)(v27 + 48);
    sub_23DF73E10((uint64_t)v8, v20, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF89340((uint64_t)v5, v29, &qword_256D1D5D8);
    swift_storeEnumTagMultiPayload();
    v25 = (uint64_t)v8;
    v26 = type metadata accessor for Device.Control.IncrementalConfig;
  }
  else if (EnumCaseMultiPayload)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1D858);
    v26 = type metadata accessor for AccessoryControlInfo.State;
    v25 = (uint64_t)v14;
  }
  else
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
    v23 = v14[*(int *)(v22 + 48)];
    sub_23DF89384((uint64_t)v14, (uint64_t)v11, type metadata accessor for Device.Control.BinaryViewConfig);
    sub_23DFB3DA0((uint64_t)v17, (uint64_t)v11);
    sub_23DF73E54(v20, type metadata accessor for AccessoryControlInfo.State);
    v24 = *(int *)(v22 + 48);
    sub_23DF73E10((uint64_t)v11, v20, type metadata accessor for Device.Control.BinaryViewConfig);
    *(_BYTE *)(v20 + v24) = v23;
    swift_storeEnumTagMultiPayload();
    v25 = (uint64_t)v11;
    v26 = type metadata accessor for Device.Control.BinaryViewConfig;
  }
  return sub_23DF73E54(v25, v26);
}

uint64_t sub_23DFAC63C()
{
  uint64_t v0;
  char v1;
  unsigned __int8 v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  _BYTE v8[40];

  sub_23DF89340(v0, (uint64_t)&v5, &qword_256D1ECB0);
  v1 = v6;
  v2 = v7;
  sub_23DF89340(v0, (uint64_t)v8, &qword_256D1ECB0);
  if (v8[32] == 0xFF)
    return sub_23E1376B0();
  sub_23E1376B0();
  if ((v1 & 1) != 0)
  {
    sub_23E1376B0();
    v4 = v2;
    if (v2)
    {
LABEL_5:
      if (v4 == 1)
      {
        sub_23E1376A4();
        sub_23E1376C8();
        sub_23E1376C8();
      }
      else
      {
        sub_23E1376A4();
      }
      return sub_23E1376A4();
    }
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376C8();
    v4 = v2;
    if (v2)
      goto LABEL_5;
  }
  sub_23E1376A4();
  sub_23E1376C8();
  return sub_23E1376A4();
}

uint64_t sub_23DFAC758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v15;
  uint64_t v16;
  char *v17;

  v1 = sub_23E135328();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v17 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.ColorState(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(v0, (uint64_t)v13, &qword_256D1D5E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
    return sub_23E1376B0();
  sub_23DF89384((uint64_t)v13, (uint64_t)v10, type metadata accessor for Device.Control.ColorState);
  sub_23E1376B0();
  sub_23DF89C1C((uint64_t)v10, (uint64_t)v6, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    v15 = v17;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v17, v6, v1);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v15, v1);
  }
  if (v10[*(int *)(v7 + 20) + 8] == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376C8();
  }
  return sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.ColorState);
}

uint64_t sub_23DFAC9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = sub_23E13552C();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v23 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E134E78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MatterControlSolver.Source(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(v0, (uint64_t)v17, &qword_256D1EEE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) != 1)
  {
    sub_23DF89384((uint64_t)v17, (uint64_t)v14, type metadata accessor for MatterControlSolver.Source);
    sub_23E1376B0();
    sub_23E134FEC();
    sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
    sub_23E13711C();
    v19 = type metadata accessor for MatterControlSolver.SourcePath(0);
    sub_23DF89C1C((uint64_t)&v14[*(int *)(v19 + 20)], (uint64_t)v10, &qword_256D1EEE0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
    {
      sub_23E1376B0();
    }
    else
    {
      v20 = v22;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v22, v10, v5);
      sub_23E1376B0();
      sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
      sub_23E13711C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
    }
    __asm { BR              X10 }
  }
  return sub_23E1376B0();
}

uint64_t sub_23DFACEF8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (int *)type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v21);
  v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for Device.ControlGroup(0);
  v9 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  if (v12)
  {
    v14 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v20 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_23DF73E10(v14, (uint64_t)v11, type metadata accessor for Device.ControlGroup);
      sub_23DF73E10((uint64_t)v11, (uint64_t)v8, type metadata accessor for Device.ControlGroup.LayoutType);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          sub_23DF89384((uint64_t)v8, (uint64_t)v6, type metadata accessor for Device.Control);
          sub_23E1376A4();
          sub_23E134C80();
          sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
          sub_23E13711C();
          Device.Control.Kind.hash(into:)(a1);
          Device.Control.Source.hash(into:)(a1);
          sub_23E1376A4();
          if (*(_QWORD *)&v6[v4[8] + 8])
          {
            sub_23E1376B0();
            swift_bridgeObjectRetain();
            sub_23E1371C4();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_23E1376B0();
          }
          v17 = &v6[v4[9]];
          v18 = v17[1];
          if (*v17 == 4)
          {
            sub_23E1376B0();
            if (v18 != 4)
              goto LABEL_15;
LABEL_17:
            sub_23E1376B0();
          }
          else
          {
            sub_23E1376B0();
            sub_23E1376A4();
            if (v18 == 4)
              goto LABEL_17;
LABEL_15:
            sub_23E1376B0();
            sub_23E1376A4();
          }
          if (v6[v4[10]] == 12)
          {
            sub_23E1376B0();
          }
          else
          {
            sub_23E1376B0();
            sub_23E1376A4();
          }
          sub_23E1376B0();
          sub_23DF73E54((uint64_t)v6, type metadata accessor for Device.Control);
          goto LABEL_22;
        }
        v16 = *v8;
      }
      else
      {
        v16 = *v8;
      }
      sub_23E1376A4();
      sub_23DFAD2F8(a1, v16);
      swift_bridgeObjectRelease();
LABEL_22:
      if (*(_QWORD *)&v11[*(int *)(v22 + 20) + 8])
      {
        sub_23E1376B0();
        swift_bridgeObjectRetain();
        sub_23E1371C4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E1376B0();
      }
      if (*(_QWORD *)&v11[*(int *)(v22 + 24) + 8])
      {
        sub_23E1376B0();
        swift_bridgeObjectRetain();
        sub_23E1371C4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E1376B0();
      }
      result = sub_23DF73E54((uint64_t)v11, type metadata accessor for Device.ControlGroup);
      v14 += v20;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_23DFAD2F8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;

  v4 = (int *)type metadata accessor for Device.Control(0);
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  if (v8)
  {
    v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_23DF73E10(v10, (uint64_t)v7, type metadata accessor for Device.Control);
      sub_23E134C80();
      sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E13711C();
      Device.Control.Kind.hash(into:)(a1);
      Device.Control.Source.hash(into:)(a1);
      sub_23E1376A4();
      if (*(_QWORD *)&v7[v4[8] + 8])
      {
        sub_23E1376B0();
        swift_bridgeObjectRetain();
        sub_23E1371C4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E1376B0();
      }
      v12 = &v7[v4[9]];
      v13 = v12[1];
      if (*v12 == 4)
      {
        sub_23E1376B0();
        if (v13 == 4)
          goto LABEL_12;
      }
      else
      {
        sub_23E1376B0();
        sub_23E1376A4();
        if (v13 == 4)
        {
LABEL_12:
          sub_23E1376B0();
          goto LABEL_13;
        }
      }
      sub_23E1376B0();
      sub_23E1376A4();
LABEL_13:
      if (v7[v4[10]] == 12)
      {
        sub_23E1376B0();
      }
      else
      {
        sub_23E1376B0();
        sub_23E1376A4();
      }
      sub_23E1376B0();
      result = sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_23DFAD53C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  if (v3)
  {
    v5 = (uint64_t *)(a2 + 56);
    do
    {
      v6 = *v5;
      sub_23E1376A4();
      swift_retain();
      swift_bridgeObjectRetain_n();
      sub_23E1371C4();
      swift_bridgeObjectRelease();
      sub_23E1376B0();
      if (v6)
      {
        swift_retain();
        sub_23E136C18();
        swift_bridgeObjectRelease();
        result = swift_release_n();
      }
      else
      {
        swift_release();
        result = swift_bridgeObjectRelease();
      }
      v5 += 4;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_23DFAD618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  int EnumCaseMultiPayload;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  _BYTE *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v4 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v50 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v49 - v8;
  v59 = type metadata accessor for AccessoryControlInfo(0);
  v10 = MEMORY[0x24BDAC7A8](v59);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v62 = (uint64_t)&v49 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v61 = (uint64_t)&v49 - v15;
  v58 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v58);
  v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = type metadata accessor for AccessoryControlGroup(0);
  v18 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  v56 = v21;
  if (v21)
  {
    v23 = 0;
    v55 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v54 = *(_QWORD *)(v18 + 72);
    v51 = v12;
    v53 = v17;
    v60 = v20;
    while (1)
    {
      sub_23DF73E10(v55 + v54 * v23, (uint64_t)v20, type metadata accessor for AccessoryControlGroup);
      sub_23DF73E10((uint64_t)v20, (uint64_t)v17, type metadata accessor for AccessoryControlGroup.LayoutType);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        v27 = (uint64_t)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
        v28 = (uint64_t)v17;
        v29 = v61;
        sub_23DF89384(v28, v61, type metadata accessor for AccessoryControlInfo);
        sub_23DF89384(v27, v62, type metadata accessor for AccessoryControlInfo);
        sub_23E1376A4();
        v30 = sub_23E134C80();
        sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v52 = v30;
        sub_23E13711C();
        v31 = (int *)v59;
        AccessoryControlInfo.State.hash(into:)(a1);
        sub_23E1376A4();
        if (*(_QWORD *)(v29 + v31[7] + 8))
        {
          sub_23E1376B0();
          swift_bridgeObjectRetain();
          sub_23E1371C4();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23E1376B0();
        }
        v32 = (_BYTE *)(v61 + v31[8]);
        v33 = v32[1];
        if (*v32 == 4)
        {
          sub_23E1376B0();
        }
        else
        {
          sub_23E1376B0();
          sub_23E1376A4();
        }
        sub_23E1376B0();
        if (v33 != 4)
          sub_23E1376A4();
        if (*(_BYTE *)(v61 + v31[9]) == 12)
        {
          sub_23E1376B0();
        }
        else
        {
          sub_23E1376B0();
          sub_23E1376A4();
        }
        v34 = v61;
        sub_23E1376B0();
        v35 = *(_QWORD *)(v34 + v31[11]);
        swift_bridgeObjectRetain();
        sub_23DFAE21C(a1, v35);
        swift_bridgeObjectRelease();
        v36 = v62;
        sub_23E13711C();
        AccessoryControlInfo.State.hash(into:)(a1);
        sub_23E1376A4();
        if (*(_QWORD *)(v36 + v31[7] + 8))
        {
          sub_23E1376B0();
          swift_bridgeObjectRetain();
          sub_23E1371C4();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23E1376B0();
        }
        v12 = v51;
        v37 = (_BYTE *)(v62 + v31[8]);
        v38 = v37[1];
        if (*v37 == 4)
        {
          sub_23E1376B0();
        }
        else
        {
          sub_23E1376B0();
          sub_23E1376A4();
        }
        v20 = v60;
        sub_23E1376B0();
        if (v38 != 4)
          sub_23E1376A4();
        if (*(_BYTE *)(v62 + v31[9]) == 12)
        {
          sub_23E1376B0();
        }
        else
        {
          sub_23E1376B0();
          sub_23E1376A4();
        }
        v39 = v62;
        sub_23E1376B0();
        v40 = *(_QWORD *)(v39 + v31[11]);
        swift_bridgeObjectRetain();
        sub_23DFAE21C(a1, v40);
        swift_bridgeObjectRelease();
        sub_23DF73E54(v39, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v61, type metadata accessor for AccessoryControlInfo);
        goto LABEL_47;
      }
      v25 = (int *)v59;
      if (EnumCaseMultiPayload != 1)
        break;
      v26 = *v17;
      sub_23E1376A4();
      sub_23DFADEA4(a1, v26);
      swift_bridgeObjectRelease();
LABEL_47:
      v48 = v57;
      sub_23E1371C4();
      if (*(_QWORD *)&v20[*(int *)(v48 + 24) + 8])
      {
        sub_23E1376B0();
        swift_bridgeObjectRetain();
        v20 = v60;
        sub_23E1371C4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E1376B0();
      }
      v17 = v53;
      ++v23;
      result = sub_23DF73E54((uint64_t)v20, type metadata accessor for AccessoryControlGroup);
      if (v23 == v56)
        return result;
    }
    sub_23DF89384((uint64_t)v17, (uint64_t)v12, type metadata accessor for AccessoryControlInfo);
    sub_23E1376A4();
    sub_23E134C80();
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E13711C();
    AccessoryControlInfo.State.hash(into:)(a1);
    sub_23E1376A4();
    if (*(_QWORD *)&v12[v25[7] + 8])
    {
      sub_23E1376B0();
      swift_bridgeObjectRetain();
      sub_23E1371C4();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E1376B0();
    }
    v41 = &v12[v25[8]];
    v42 = v41[1];
    if (*v41 == 4)
    {
      sub_23E1376B0();
      if (v42 != 4)
      {
LABEL_36:
        sub_23E1376B0();
        sub_23E1376A4();
LABEL_39:
        if (v12[v25[9]] == 12)
        {
          sub_23E1376B0();
        }
        else
        {
          sub_23E1376B0();
          sub_23E1376A4();
        }
        sub_23E1376B0();
        v43 = *(_QWORD *)&v12[v25[11]];
        sub_23E1376A4();
        v44 = *(_QWORD *)(v43 + 16);
        if (v44)
        {
          v52 = v23;
          v45 = v50;
          v46 = v43 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
          swift_bridgeObjectRetain();
          v47 = *(_QWORD *)(v45 + 72);
          do
          {
            sub_23DF73E10(v46, (uint64_t)v9, type metadata accessor for AccessoryControlInfo.Writer);
            sub_23DF73E10((uint64_t)v9, (uint64_t)v7, type metadata accessor for AccessoryControlInfo.Writer);
            sub_23E1376A4();
            HAPControlSolver.Source.hash(into:)(a1);
            sub_23DF73E54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlInfo.Writer);
            v46 += v47;
            --v44;
          }
          while (v44);
          swift_bridgeObjectRelease();
          v12 = v51;
          v23 = v52;
        }
        sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlInfo);
        v20 = v60;
        goto LABEL_47;
      }
    }
    else
    {
      sub_23E1376B0();
      sub_23E1376A4();
      if (v42 != 4)
        goto LABEL_36;
    }
    sub_23E1376B0();
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_23DFADEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v26 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v10 = (int *)type metadata accessor for AccessoryControlInfo(0);
  v11 = *((_QWORD *)v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  v30 = v14;
  if (v14)
  {
    v16 = 0;
    v28 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v27 = *(_QWORD *)(v11 + 72);
    v25 = v10;
    v29 = v13;
    do
    {
      v31 = v16;
      sub_23DF73E10(v28 + v27 * v16, (uint64_t)v13, type metadata accessor for AccessoryControlInfo);
      sub_23E134C80();
      sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E13711C();
      AccessoryControlInfo.State.hash(into:)(a1);
      sub_23E1376A4();
      if (*(_QWORD *)&v13[v10[7] + 8])
      {
        sub_23E1376B0();
        swift_bridgeObjectRetain();
        sub_23E1371C4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E1376B0();
      }
      v17 = &v13[v10[8]];
      v18 = v17[1];
      if (*v17 == 4)
      {
        sub_23E1376B0();
        if (v18 == 4)
          goto LABEL_11;
      }
      else
      {
        sub_23E1376B0();
        sub_23E1376A4();
        if (v18 == 4)
        {
LABEL_11:
          sub_23E1376B0();
          goto LABEL_12;
        }
      }
      sub_23E1376B0();
      sub_23E1376A4();
LABEL_12:
      if (v13[v10[9]] == 12)
      {
        sub_23E1376B0();
      }
      else
      {
        sub_23E1376B0();
        sub_23E1376A4();
      }
      sub_23E1376B0();
      v19 = *(_QWORD *)&v13[v10[11]];
      sub_23E1376A4();
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
      {
        v21 = v26;
        v22 = v19 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
        swift_bridgeObjectRetain();
        v23 = *(_QWORD *)(v21 + 72);
        do
        {
          sub_23DF73E10(v22, (uint64_t)v9, type metadata accessor for AccessoryControlInfo.Writer);
          sub_23DF73E10((uint64_t)v9, (uint64_t)v7, type metadata accessor for AccessoryControlInfo.Writer);
          sub_23E1376A4();
          HAPControlSolver.Source.hash(into:)(a1);
          sub_23DF73E54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
          sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlInfo.Writer);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        v10 = v25;
      }
      v16 = v31 + 1;
      v13 = v29;
      result = sub_23DF73E54((uint64_t)v29, type metadata accessor for AccessoryControlInfo);
    }
    while (v16 != v30);
  }
  return result;
}

uint64_t sub_23DFAE21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  v11 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  if (v11)
  {
    v13 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v14 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_23DF73E10(v13, (uint64_t)v10, type metadata accessor for AccessoryControlInfo.Writer);
      sub_23DF73E10((uint64_t)v10, (uint64_t)v8, type metadata accessor for AccessoryControlInfo.Writer);
      sub_23E1376A4();
      HAPControlSolver.Source.hash(into:)(a1);
      sub_23DF73E54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      result = sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlInfo.Writer);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_23DFAE344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = type metadata accessor for DisplayControl(0);
  v4 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23E1376A4();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23DF73E10(v9, (uint64_t)v6, type metadata accessor for DisplayControl);
      sub_23E134C80();
      sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E13711C();
      v11 = (int *)type metadata accessor for Device.Control(0);
      Device.Control.Kind.hash(into:)(a1);
      Device.Control.Source.hash(into:)(a1);
      sub_23E1376A4();
      if (*(_QWORD *)&v6[v11[8] + 8])
      {
        sub_23E1376B0();
        swift_bridgeObjectRetain();
        sub_23E1371C4();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E1376B0();
      }
      v12 = &v6[v11[9]];
      v13 = v12[1];
      if (*v12 == 4)
      {
        sub_23E1376B0();
        if (v13 == 4)
          goto LABEL_12;
      }
      else
      {
        sub_23E1376B0();
        sub_23E1376A4();
        if (v13 == 4)
        {
LABEL_12:
          sub_23E1376B0();
          goto LABEL_13;
        }
      }
      sub_23E1376B0();
      sub_23E1376A4();
LABEL_13:
      if (v6[v11[10]] == 12)
      {
        sub_23E1376B0();
      }
      else
      {
        sub_23E1376B0();
        sub_23E1376A4();
      }
      sub_23E1376B0();
      sub_23E1376A4();
      result = sub_23DF73E54((uint64_t)v6, type metadata accessor for DisplayControl);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_23DFAE5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v19[0] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ColorControl.GridElement(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = *(_QWORD *)(a2 + 16);
  v19[1] = a1;
  result = sub_23E1376A4();
  if (v14)
  {
    v16 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v17 = *(_QWORD *)(v8 + 72);
    v18 = v19[0];
    do
    {
      sub_23DF73E10(v16, (uint64_t)v13, type metadata accessor for ColorControl.GridElement);
      sub_23DF73E10((uint64_t)v13, (uint64_t)v11, type metadata accessor for ColorControl.GridElement);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 2, v4))
      {
        sub_23E1376A4();
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v11, v4);
        sub_23E1376A4();
        sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
        sub_23E13711C();
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
      }
      result = sub_23DF73E54((uint64_t)v13, type metadata accessor for ColorControl.GridElement);
      v16 += v17;
      --v14;
    }
    while (v14);
  }
  return result;
}

uint64_t _s22HomeAccessoryControlUI0bC4InfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  uint64_t v20;
  int v21;
  int v22;

  if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for AccessoryControlInfo(0);
  _s22HomeAccessoryControlUI0bC4InfoV5StateO2eeoiySbAE_AEtFZ_0(a1 + v4[5], a2 + v4[5]);
  if ((v5 & 1) == 0 || *(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6]))
    return 0;
  v7 = v4[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  if (v9)
  {
    if (!v11)
      return 0;
    v12 = *v8 == *v10 && v9 == v11;
    if (!v12 && (sub_23E137614() & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  v13 = v4[8];
  v14 = *(unsigned __int8 *)(a1 + v13);
  v15 = *(unsigned __int8 *)(a1 + v13 + 1);
  v16 = (unsigned __int8 *)(a2 + v13);
  v17 = *v16;
  v18 = v16[1];
  if (v14 == 4)
  {
    if (v17 != 4)
      return 0;
  }
  else if (v17 == 4 || v14 != v17)
  {
    return 0;
  }
  if (v15 == 4)
  {
    if (v18 != 4)
      return 0;
  }
  else if (v18 == 4 || v15 != v18)
  {
    return 0;
  }
  v20 = v4[9];
  v21 = *(unsigned __int8 *)(a1 + v20);
  v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 12)
  {
    if (v22 == 12)
      goto LABEL_32;
    return 0;
  }
  if (v22 == 12 || v21 != v22)
    return 0;
LABEL_32:
  if (*(unsigned __int8 *)(a1 + v4[10]) != *(unsigned __int8 *)(a2 + v4[10]))
    return 0;
  return sub_23E11CCF4(*(_QWORD *)(a1 + v4[11]), *(_QWORD *)(a2 + v4[11]));
}

void _s22HomeAccessoryControlUI0bC4InfoV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;

  v55 = a1;
  v56 = (char *)a2;
  v2 = type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for Device.Control.ColorState(0);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v36[1] = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF10);
  MEMORY[0x24BDAC7A8](v42);
  v47 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)v36 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)v36 - v11;
  v43 = type metadata accessor for Device.Control.IncrementalState(0);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v36[0] = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF18);
  MEMORY[0x24BDAC7A8](v40);
  v46 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v38 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v49 = (char *)v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v51 = (char *)v36 - v19;
  v20 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v20);
  v52 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v37);
  v48 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AccessoryControlInfo.State(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  MEMORY[0x24BDAC7A8](v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF20);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v36 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (uint64_t)&v33[*(int *)(v31 + 48)];
  sub_23DF73E10(v55, (uint64_t)v33, type metadata accessor for AccessoryControlInfo.State);
  sub_23DF73E10((uint64_t)v56, v34, type metadata accessor for AccessoryControlInfo.State);
  v56 = v33;
  v35 = (char *)sub_23DFAED68 + 4 * word_23E139D1C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23DFAED68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)(v2 - 200);
  v4 = (_QWORD *)v1;
  sub_23DF73E10(v3, v1, type metadata accessor for AccessoryControlInfo.State);
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40) + 48);
  v6 = *(unsigned __int8 *)(v1 + v5);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23DF73E54(v1, type metadata accessor for Device.Control.BinaryViewConfig);
    sub_23DF89C7C(v3, &qword_256D1EF20);
LABEL_19:
    v11 = 0;
    return v11 & 1;
  }
  v7 = *(unsigned __int8 *)(v0 + v5);
  v8 = *(_QWORD **)(v2 - 264);
  sub_23DF89384(v0, (uint64_t)v8, type metadata accessor for Device.Control.BinaryViewConfig);
  if ((*v4 != *v8 || v4[1] != v8[1]) && (sub_23E137614() & 1) == 0
    || (type metadata accessor for IconDescriptor(), (sub_23E135904() & 1) == 0)
    || ((v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28),
         *(_QWORD *)((char *)v4 + v9) != *(_QWORD *)((char *)v8 + v9))
     || *(_QWORD *)((char *)v4 + v9 + 8) != *(_QWORD *)((char *)v8 + v9 + 8))
    && (sub_23E137614() & 1) == 0
    || (sub_23E135904() & 1) == 0
    || (sub_23E136BDC() & 1) == 0
    || (v10 = *(int *)(*(_QWORD *)(v2 - 352) + 24),
        (_s22HomeAccessoryControlUI0C12TextModifierV6ConfigO2eeoiySbAE_AEtFZ_0((uint64_t)v4 + v10, (uint64_t)v8 + v10) & 1) == 0))
  {
    sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control.BinaryViewConfig);
    sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.BinaryViewConfig);
LABEL_18:
    sub_23DF73E54(v3, type metadata accessor for AccessoryControlInfo.State);
    goto LABEL_19;
  }
  sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control.BinaryViewConfig);
  sub_23DF73E54((uint64_t)v4, type metadata accessor for Device.Control.BinaryViewConfig);
  if (v6 == 2)
  {
    if (v7 != 2)
      goto LABEL_18;
  }
  else if (v7 == 2 || ((v6 ^ v7) & 1) != 0)
  {
    goto LABEL_18;
  }
  sub_23DF73E54(v3, type metadata accessor for AccessoryControlInfo.State);
  v11 = 1;
  return v11 & 1;
}

uint64_t sub_23DFAF8D4()
{
  return sub_23DF73F28(&qword_256D1ED58, type metadata accessor for AccessoryControlInfo, (uint64_t)&protocol conformance descriptor for AccessoryControlInfo);
}

uint64_t sub_23DFAF900()
{
  return sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_23DFAF92C()
{
  return sub_23DF73F28(&qword_256D1ED60, type metadata accessor for AccessoryControlInfo.State, (uint64_t)&protocol conformance descriptor for AccessoryControlInfo.State);
}

char *initializeBufferWithCopyOfBuffer for AccessoryControlInfo(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E134C80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v13 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v13;
        v89 = type metadata accessor for IconDescriptor();
        v14 = *(int *)(v89 + 20);
        v15 = &v10[v14];
        v16 = &v11[v14];
        v17 = sub_23E135910();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        v19 = v18;
        v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v21 = &v10[v20];
        v22 = &v11[v20];
        v23 = *((_QWORD *)v22 + 1);
        *(_QWORD *)v21 = *(_QWORD *)v22;
        *((_QWORD *)v21 + 1) = v23;
        v24 = *(int *)(v89 + 20);
        v25 = &v21[v24];
        v26 = &v22[v24];
        swift_bridgeObjectRetain();
        v19(v25, v26, v17);
        v27 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v10[*(int *)(v27 + 20)] = *(_QWORD *)&v11[*(int *)(v27 + 20)];
        v28 = *(int *)(v27 + 24);
        v29 = &v10[v28];
        v30 = &v11[v28];
        v31 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v76 = *((_QWORD *)v30 + 1);
          *(_QWORD *)v29 = *(_QWORD *)v30;
          *((_QWORD *)v29 + 1) = v76;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v29 = *(_QWORD *)v30;
          v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v34 = &v29[v33];
          v35 = &v30[v33];
          v36 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
          swift_storeEnumTagMultiPayload();
        }
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v10[*(int *)(v77 + 48)] = v11[*(int *)(v77 + 48)];
        goto LABEL_23;
      case 1u:
        v38 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v38;
        v90 = type metadata accessor for IconDescriptor();
        v39 = *(int *)(v90 + 20);
        v40 = &v10[v39];
        v41 = &v11[v39];
        v42 = sub_23E135910();
        v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        v43(v40, v41, v42);
        v44 = v43;
        v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v46 = &v10[v45];
        v47 = &v11[v45];
        v48 = *((_QWORD *)v47 + 1);
        *(_QWORD *)v46 = *(_QWORD *)v47;
        *((_QWORD *)v46 + 1) = v48;
        v49 = *(int *)(v90 + 20);
        v50 = &v46[v49];
        v51 = &v47[v49];
        swift_bridgeObjectRetain();
        v44(v50, v51, v42);
        v52 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v10[v52[5]] = *(_QWORD *)&v11[v52[5]];
        *(_QWORD *)&v10[v52[6]] = *(_QWORD *)&v11[v52[6]];
        v53 = v52[7];
        v88 = &v11[v53];
        v91 = &v10[v53];
        v54 = sub_23E135520();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_retain();
        swift_retain();
        v55(v91, v88, v54);
        *(_QWORD *)&v10[v52[8]] = *(_QWORD *)&v11[v52[8]];
        *(_QWORD *)&v10[v52[9]] = *(_QWORD *)&v11[v52[9]];
        *(_QWORD *)&v10[v52[10]] = *(_QWORD *)&v11[v52[10]];
        v56 = v52[11];
        v57 = &v10[v56];
        v58 = &v11[v56];
        v57[8] = v58[8];
        *(_QWORD *)v57 = *(_QWORD *)v58;
        v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v60 = &v10[v59];
        v61 = &v11[v59];
        v62 = type metadata accessor for Device.Control.IncrementalState(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v72 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v60, v61, v72);
          v60[*(int *)(v62 + 20)] = v61[*(int *)(v62 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        goto LABEL_23;
      case 2u:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        v10[8] = v11[8];
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        v10[24] = v11[24];
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 3u:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *(_DWORD *)(v10 + 7) = *(_DWORD *)(v11 + 7);
        v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v66 = &v10[v65];
        v67 = &v11[v65];
        v68 = type metadata accessor for Device.Control.ColorState(0);
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          v73 = sub_23E135328();
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v67, 1, v73))
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v66, v67, v73);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v66, 0, 1, v73);
          }
          v78 = *(int *)(v68 + 20);
          v79 = &v66[v78];
          v80 = &v67[v78];
          *(_QWORD *)v79 = *(_QWORD *)v80;
          v79[8] = v80[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        goto LABEL_23;
      case 4u:
        v71 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v71;
        v10[16] = v11[16];
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 6u:
        v8(v10, v11, v7);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v81 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    v82 = &a1[v81];
    v83 = &a2[v81];
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    v85 = a3[9];
    *(_WORD *)&a1[a3[8]] = *(_WORD *)&a2[a3[8]];
    a1[v85] = a2[v85];
    v86 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    *(_QWORD *)&a1[v86] = *(_QWORD *)&a2[v86];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccessoryControlInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_23E134C80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v7 = type metadata accessor for IconDescriptor();
      v8 = v6 + *(int *)(v7 + 20);
      v9 = sub_23E135910();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(v8, v9);
      v11 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v10(v11 + *(int *)(v7 + 20), v9);
      v12 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v13 = v6 + *(int *)(v12 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_9;
      if (!EnumCaseMultiPayload)
      {
        v15 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v16 = sub_23E134C20();
        goto LABEL_8;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v17 = type metadata accessor for IconDescriptor();
      v18 = v6 + *(int *)(v17 + 20);
      v19 = sub_23E135910();
      v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
      v20(v18, v19);
      v21 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v20(v21 + *(int *)(v17 + 20), v19);
      v22 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v23 = v6 + *(int *)(v22 + 28);
      v24 = sub_23E135520();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      v15 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v25 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v15, 1, v25))
      {
        v16 = sub_23E13534C();
LABEL_8:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      break;
    case 2u:
    case 4u:
LABEL_9:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v26 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v27 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
      {
        v28 = sub_23E135328();
        v29 = *(_QWORD *)(v28 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28))
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
      }
      break;
    case 6u:
      v5(v6, v4);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccessoryControlInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;

  v6 = sub_23E134C80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v12;
      v87 = type metadata accessor for IconDescriptor();
      v13 = *(int *)(v87 + 20);
      v14 = &v9[v13];
      v15 = &v10[v13];
      v16 = sub_23E135910();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      v18 = v17;
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v20 = &v9[v19];
      v21 = &v10[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = *(int *)(v87 + 20);
      v24 = &v20[v23];
      v25 = &v21[v23];
      swift_bridgeObjectRetain();
      v18(v24, v25, v16);
      v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      *(_QWORD *)&v9[*(int *)(v26 + 20)] = *(_QWORD *)&v10[*(int *)(v26 + 20)];
      v27 = *(int *)(v26 + 24);
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = type metadata accessor for ControlTextModifier.Config(0);
      swift_retain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v74 = *((_QWORD *)v29 + 1);
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v74;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v33 = &v28[v32];
        v34 = &v29[v32];
        v35 = sub_23E134C20();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        swift_storeEnumTagMultiPayload();
      }
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
      v9[*(int *)(v75 + 48)] = v10[*(int *)(v75 + 48)];
      goto LABEL_21;
    case 1u:
      v36 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v36;
      v88 = type metadata accessor for IconDescriptor();
      v37 = *(int *)(v88 + 20);
      v38 = &v9[v37];
      v39 = &v10[v37];
      v40 = sub_23E135910();
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      v41(v38, v39, v40);
      v42 = v41;
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v44 = &v9[v43];
      v45 = &v10[v43];
      v46 = *((_QWORD *)v45 + 1);
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = v46;
      v47 = *(int *)(v88 + 20);
      v48 = &v44[v47];
      v49 = &v45[v47];
      swift_bridgeObjectRetain();
      v42(v48, v49, v40);
      v50 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
      *(_QWORD *)&v9[v50[5]] = *(_QWORD *)&v10[v50[5]];
      *(_QWORD *)&v9[v50[6]] = *(_QWORD *)&v10[v50[6]];
      v51 = v50[7];
      v86 = &v10[v51];
      v89 = &v9[v51];
      v52 = sub_23E135520();
      v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
      swift_retain();
      swift_retain();
      v53(v89, v86, v52);
      *(_QWORD *)&v9[v50[8]] = *(_QWORD *)&v10[v50[8]];
      *(_QWORD *)&v9[v50[9]] = *(_QWORD *)&v10[v50[9]];
      *(_QWORD *)&v9[v50[10]] = *(_QWORD *)&v10[v50[10]];
      v54 = v50[11];
      v55 = &v9[v54];
      v56 = &v10[v54];
      v55[8] = v56[8];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v58 = &v9[v57];
      v59 = &v10[v57];
      v60 = type metadata accessor for Device.Control.IncrementalState(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v70 = sub_23E13534C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v58, v59, v70);
        v58[*(int *)(v60 + 20)] = v59[*(int *)(v60 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      goto LABEL_21;
    case 2u:
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      v9[24] = v10[24];
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 3u:
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *(_DWORD *)(v9 + 7) = *(_DWORD *)(v10 + 7);
      v63 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v64 = &v9[v63];
      v65 = &v10[v63];
      v66 = type metadata accessor for Device.Control.ColorState(0);
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v71 = sub_23E135328();
        v72 = *(_QWORD *)(v71 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v65, 1, v71))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v64, v65, v71);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v64, 0, 1, v71);
        }
        v76 = *(int *)(v66 + 20);
        v77 = &v64[v76];
        v78 = &v65[v76];
        *(_QWORD *)v77 = *(_QWORD *)v78;
        v77[8] = v78[8];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      goto LABEL_21;
    case 4u:
      v69 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v69;
      v9[16] = v10[16];
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 6u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  v79 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v80 = (_QWORD *)(a1 + v79);
  v81 = (_QWORD *)(a2 + v79);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  v83 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v83) = *(_BYTE *)(a2 + v83);
  v84 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v84) = *(_QWORD *)(a2 + v84);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccessoryControlInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_23DF73E54(a1 + v8, type metadata accessor for AccessoryControlInfo.State);
    v11 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
        v85 = type metadata accessor for IconDescriptor();
        v12 = *(int *)(v85 + 20);
        v13 = &v9[v12];
        v14 = &v10[v12];
        v15 = sub_23E135910();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        v17 = v16;
        v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v19 = &v9[v18];
        v20 = &v10[v18];
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
        v21 = *(int *)(v85 + 20);
        v22 = &v19[v21];
        v23 = &v20[v21];
        swift_bridgeObjectRetain();
        v17(v22, v23, v15);
        v24 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v9[*(int *)(v24 + 20)] = *(_QWORD *)&v10[*(int *)(v24 + 20)];
        v25 = *(int *)(v24 + 24);
        v26 = &v9[v25];
        v27 = &v10[v25];
        v28 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v31 = &v26[v30];
          v32 = &v27[v30];
          v33 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
          swift_storeEnumTagMultiPayload();
        }
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v9[*(int *)(v72 + 48)] = v10[*(int *)(v72 + 48)];
        goto LABEL_22;
      case 1u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
        v86 = type metadata accessor for IconDescriptor();
        v34 = *(int *)(v86 + 20);
        v35 = &v9[v34];
        v36 = &v10[v34];
        v37 = sub_23E135910();
        v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v35, v36, v37);
        v39 = v38;
        v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v41 = &v9[v40];
        v42 = &v10[v40];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
        v43 = *(int *)(v86 + 20);
        v44 = &v41[v43];
        v45 = &v42[v43];
        swift_bridgeObjectRetain();
        v39(v44, v45, v37);
        v46 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v9[v46[5]] = *(_QWORD *)&v10[v46[5]];
        *(_QWORD *)&v9[v46[6]] = *(_QWORD *)&v10[v46[6]];
        v47 = v46[7];
        v84 = &v10[v47];
        v87 = &v9[v47];
        v48 = sub_23E135520();
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
        swift_retain();
        swift_retain();
        v49(v87, v84, v48);
        *(_QWORD *)&v9[v46[8]] = *(_QWORD *)&v10[v46[8]];
        *(_QWORD *)&v9[v46[9]] = *(_QWORD *)&v10[v46[9]];
        *(_QWORD *)&v9[v46[10]] = *(_QWORD *)&v10[v46[10]];
        v50 = v46[11];
        v51 = &v9[v50];
        v52 = &v10[v50];
        v53 = v52[8];
        *(_QWORD *)v51 = *(_QWORD *)v52;
        v51[8] = v53;
        v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v55 = &v9[v54];
        v56 = &v10[v54];
        v57 = type metadata accessor for Device.Control.IncrementalState(0);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          v68 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v55, v56, v68);
          v55[*(int *)(v57 + 20)] = v56[*(int *)(v57 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        goto LABEL_22;
      case 2u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        v9[8] = v10[8];
        v60 = *((_QWORD *)v10 + 2);
        v9[24] = v10[24];
        *((_QWORD *)v9 + 2) = v60;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 3u:
        v61 = *(_QWORD *)v10;
        *(_DWORD *)(v9 + 7) = *(_DWORD *)(v10 + 7);
        *(_QWORD *)v9 = v61;
        v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v63 = &v9[v62];
        v64 = &v10[v62];
        v65 = type metadata accessor for Device.Control.ColorState(0);
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          v69 = sub_23E135328();
          v70 = *(_QWORD *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v64, 1, v69))
          {
            v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v63, v64, v69);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v63, 0, 1, v69);
          }
          v73 = *(int *)(v65 + 20);
          v74 = &v63[v73];
          v75 = &v64[v73];
          v76 = *(_QWORD *)v75;
          v74[8] = v75[8];
          *(_QWORD *)v74 = v76;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        goto LABEL_22;
      case 4u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
        v9[16] = v10[16];
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 6u:
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v77 = a3[7];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[8];
  v81 = (_BYTE *)(a1 + v80);
  v82 = (_BYTE *)(a2 + v80);
  *v81 = *v82;
  v81[1] = v82[1];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccessoryControlInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;

  v6 = sub_23E134C80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v12 = type metadata accessor for IconDescriptor();
      v13 = *(int *)(v12 + 20);
      v14 = &v9[v13];
      v15 = &v10[v13];
      v16 = sub_23E135910();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(v14, v15, v16);
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v19 = &v9[v18];
      v20 = &v10[v18];
      *(_OWORD *)v19 = *(_OWORD *)v20;
      v17(&v19[*(int *)(v12 + 20)], &v20[*(int *)(v12 + 20)], v16);
      v21 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      *(_QWORD *)&v9[*(int *)(v21 + 20)] = *(_QWORD *)&v10[*(int *)(v21 + 20)];
      v22 = *(int *)(v21 + 24);
      v23 = &v9[v22];
      v24 = &v10[v22];
      v25 = type metadata accessor for ControlTextModifier.Config(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v23 = *(_QWORD *)v24;
        v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v56 = &v23[v55];
        v57 = &v24[v55];
        v58 = sub_23E134C20();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        swift_storeEnumTagMultiPayload();
      }
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
      v9[*(int *)(v59 + 48)] = v10[*(int *)(v59 + 48)];
      goto LABEL_17;
    case 1u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v26 = type metadata accessor for IconDescriptor();
      v27 = *(int *)(v26 + 20);
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = sub_23E135910();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
      v31(v28, v29, v30);
      v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v33 = &v9[v32];
      v34 = &v10[v32];
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v31(&v33[*(int *)(v26 + 20)], &v34[*(int *)(v26 + 20)], v30);
      v35 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
      *(_QWORD *)&v9[v35[5]] = *(_QWORD *)&v10[v35[5]];
      *(_QWORD *)&v9[v35[6]] = *(_QWORD *)&v10[v35[6]];
      v36 = v35[7];
      v37 = &v9[v36];
      v38 = &v10[v36];
      v39 = sub_23E135520();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      *(_QWORD *)&v9[v35[8]] = *(_QWORD *)&v10[v35[8]];
      *(_QWORD *)&v9[v35[9]] = *(_QWORD *)&v10[v35[9]];
      *(_QWORD *)&v9[v35[10]] = *(_QWORD *)&v10[v35[10]];
      v40 = v35[11];
      v41 = &v9[v40];
      v42 = &v10[v40];
      v41[8] = v42[8];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v44 = &v9[v43];
      v45 = &v10[v43];
      v46 = type metadata accessor for Device.Control.IncrementalState(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v60 = sub_23E13534C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v44, v45, v60);
        v44[*(int *)(v46 + 20)] = v45[*(int *)(v46 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      goto LABEL_17;
    case 3u:
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *(_DWORD *)(v9 + 7) = *(_DWORD *)(v10 + 7);
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v50 = &v9[v49];
      v51 = &v10[v49];
      v52 = type metadata accessor for Device.Control.ColorState(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        v61 = sub_23E135328();
        v70 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v51, 1, v61))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v50, v51, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v50, 0, 1, v61);
        }
        v63 = *(int *)(v52 + 20);
        v64 = &v50[v63];
        v65 = &v51[v63];
        *(_QWORD *)v64 = *(_QWORD *)v65;
        v64[8] = v65[8];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      goto LABEL_17;
    case 6u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  v66 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v66) = *(_OWORD *)(a2 + v66);
  v67 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v68) = *(_QWORD *)(a2 + v68);
  return a1;
}

uint64_t assignWithTake for AccessoryControlInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    sub_23DF73E54(a1 + v8, type metadata accessor for AccessoryControlInfo.State);
    v11 = type metadata accessor for AccessoryControlInfo.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v12 = type metadata accessor for IconDescriptor();
        v13 = *(int *)(v12 + 20);
        v14 = &v9[v13];
        v15 = &v10[v13];
        v16 = sub_23E135910();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
        v17(v14, v15, v16);
        v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v19 = &v9[v18];
        v20 = &v10[v18];
        *(_OWORD *)v19 = *(_OWORD *)v20;
        v17(&v19[*(int *)(v12 + 20)], &v20[*(int *)(v12 + 20)], v16);
        v21 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v9[*(int *)(v21 + 20)] = *(_QWORD *)&v10[*(int *)(v21 + 20)];
        v22 = *(int *)(v21 + 24);
        v23 = &v9[v22];
        v24 = &v10[v22];
        v25 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v23 = *(_QWORD *)v24;
          v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v56 = &v23[v55];
          v57 = &v24[v55];
          v58 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
          swift_storeEnumTagMultiPayload();
        }
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        v9[*(int *)(v59 + 48)] = v10[*(int *)(v59 + 48)];
        goto LABEL_18;
      case 1u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v26 = type metadata accessor for IconDescriptor();
        v27 = *(int *)(v26 + 20);
        v28 = &v9[v27];
        v29 = &v10[v27];
        v30 = sub_23E135910();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
        v31(v28, v29, v30);
        v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v33 = &v9[v32];
        v34 = &v10[v32];
        *(_OWORD *)v33 = *(_OWORD *)v34;
        v31(&v33[*(int *)(v26 + 20)], &v34[*(int *)(v26 + 20)], v30);
        v35 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v9[v35[5]] = *(_QWORD *)&v10[v35[5]];
        *(_QWORD *)&v9[v35[6]] = *(_QWORD *)&v10[v35[6]];
        v36 = v35[7];
        v37 = &v9[v36];
        v38 = &v10[v36];
        v39 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        *(_QWORD *)&v9[v35[8]] = *(_QWORD *)&v10[v35[8]];
        *(_QWORD *)&v9[v35[9]] = *(_QWORD *)&v10[v35[9]];
        *(_QWORD *)&v9[v35[10]] = *(_QWORD *)&v10[v35[10]];
        v40 = v35[11];
        v41 = &v9[v40];
        v42 = &v10[v40];
        v41[8] = v42[8];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v44 = &v9[v43];
        v45 = &v10[v43];
        v46 = type metadata accessor for Device.Control.IncrementalState(0);
        v47 = *(_QWORD *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v60 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v44, v45, v60);
          v44[*(int *)(v46 + 20)] = v45[*(int *)(v46 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        goto LABEL_18;
      case 3u:
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *(_DWORD *)(v9 + 7) = *(_DWORD *)(v10 + 7);
        v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v50 = &v9[v49];
        v51 = &v10[v49];
        v52 = type metadata accessor for Device.Control.ColorState(0);
        v53 = *(_QWORD *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          v61 = sub_23E135328();
          v74 = *(_QWORD *)(v61 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v51, 1, v61))
          {
            v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v50, v51, v61);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v50, 0, 1, v61);
          }
          v63 = *(int *)(v52 + 20);
          v64 = &v50[v63];
          v65 = &v51[v63];
          *(_QWORD *)v64 = *(_QWORD *)v65;
          v64[8] = v65[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
        }
        goto LABEL_18;
      case 6u:
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v10, v6);
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  v66 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v71 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v71) = *(_BYTE *)(a2 + v71);
  v72 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v72) = *(_QWORD *)(a2 + v72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFB1B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for AccessoryControlInfo.State(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFB1C2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E134C80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for AccessoryControlInfo.State(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t sub_23DFB1CD0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for AccessoryControlInfo.State(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AccessoryControlInfo.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v31 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v31 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        v8 = type metadata accessor for IconDescriptor();
        v9 = *(int *)(v8 + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_23E135910();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = *((_QWORD *)v16 + 1);
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = v17;
        v18 = *(int *)(v8 + 20);
        v19 = &v15[v18];
        v20 = &v16[v18];
        swift_bridgeObjectRetain();
        v13(v19, v20, v12);
        v21 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&a1[*(int *)(v21 + 20)] = *(_QWORD *)&a2[*(int *)(v21 + 20)];
        v22 = *(int *)(v21 + 24);
        v23 = &a1[v22];
        v24 = &a2[v22];
        v25 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v74 = *((_QWORD *)v24 + 1);
          *(_QWORD *)v23 = *(_QWORD *)v24;
          *((_QWORD *)v23 + 1) = v74;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v23 = *(_QWORD *)v24;
          v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v28 = &v23[v27];
          v29 = &v24[v27];
          v30 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
          swift_storeEnumTagMultiPayload();
        }
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        a1[*(int *)(v75 + 48)] = a2[*(int *)(v75 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v33 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v33;
        v34 = type metadata accessor for IconDescriptor();
        v35 = *(int *)(v34 + 20);
        v36 = &a1[v35];
        v37 = &a2[v35];
        v38 = sub_23E135910();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = v43;
        v44 = *(int *)(v34 + 20);
        v45 = &v41[v44];
        v46 = &v42[v44];
        swift_bridgeObjectRetain();
        v39(v45, v46, v38);
        v47 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&a1[v47[5]] = *(_QWORD *)&a2[v47[5]];
        *(_QWORD *)&a1[v47[6]] = *(_QWORD *)&a2[v47[6]];
        v48 = v47[7];
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = sub_23E135520();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_retain();
        swift_retain();
        v52(v49, v50, v51);
        *(_QWORD *)&a1[v47[8]] = *(_QWORD *)&a2[v47[8]];
        *(_QWORD *)&a1[v47[9]] = *(_QWORD *)&a2[v47[9]];
        *(_QWORD *)&a1[v47[10]] = *(_QWORD *)&a2[v47[10]];
        v53 = v47[11];
        v54 = &a1[v53];
        v55 = &a2[v53];
        v54[8] = v55[8];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v57 = &a1[v56];
        v58 = &a2[v56];
        v59 = type metadata accessor for Device.Control.IncrementalState(0);
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          v70 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v57, v58, v70);
          v57[*(int *)(v59 + 20)] = v58[*(int *)(v59 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        }
        goto LABEL_17;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
        v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = type metadata accessor for Device.Control.ColorState(0);
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          v71 = sub_23E135328();
          v72 = *(_QWORD *)(v71 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v64, 1, v71))
          {
            v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v63, v64, v71);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v63, 0, 1, v71);
          }
          v76 = *(int *)(v65 + 20);
          v77 = &v63[v76];
          v78 = &v64[v76];
          *(_QWORD *)v77 = *(_QWORD *)v78;
          v77[8] = v78[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v68 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v68;
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v69 = sub_23E134C80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(a1, a2, v69);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for AccessoryControlInfo.State(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for IconDescriptor();
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_23E135910();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v6(v4, v5);
      v7 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v6(v7 + *(int *)(v3 + 20), v5);
      v8 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v9 = a1 + *(int *)(v8 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 1)
        goto LABEL_8;
      if (!(_DWORD)result)
      {
        a1 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v10 = sub_23E134C20();
        goto LABEL_13;
      }
      break;
    case 1:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for IconDescriptor();
      v12 = a1 + *(int *)(v11 + 20);
      v13 = sub_23E135910();
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v14(v12, v13);
      v15 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v14(v15 + *(int *)(v11 + 20), v13);
      v16 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v17 = a1 + *(int *)(v16 + 28);
      v18 = sub_23E135520();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v19 = type metadata accessor for Device.Control.IncrementalState(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(a1, 1, v19);
      if (!(_DWORD)result)
      {
        v10 = sub_23E13534C();
        goto LABEL_13;
      }
      break;
    case 2:
    case 4:
LABEL_8:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      v20 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v21 = type metadata accessor for Device.Control.ColorState(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21);
      if (!(_DWORD)result)
      {
        v22 = sub_23E135328();
        v23 = *(_QWORD *)(v22 - 8);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22);
        if (!(_DWORD)result)
        {
          v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
          v26 = v20;
          v24 = v22;
          goto LABEL_14;
        }
      }
      break;
    case 6:
      v10 = sub_23E134C80();
LABEL_13:
      v24 = v10;
      v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v26 = a1;
LABEL_14:
      result = v25(v26, v24);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for AccessoryControlInfo.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = type metadata accessor for IconDescriptor();
      v8 = *(int *)(v7 + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_23E135910();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      v17 = *(int *)(v7 + 20);
      v18 = &v14[v17];
      v19 = &v15[v17];
      swift_bridgeObjectRetain();
      v12(v18, v19, v11);
      v20 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      *(_QWORD *)&a1[*(int *)(v20 + 20)] = *(_QWORD *)&a2[*(int *)(v20 + 20)];
      v21 = *(int *)(v20 + 24);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = type metadata accessor for ControlTextModifier.Config(0);
      swift_retain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v71 = *((_QWORD *)v23 + 1);
        *(_QWORD *)v22 = *(_QWORD *)v23;
        *((_QWORD *)v22 + 1) = v71;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v27 = &v22[v26];
        v28 = &v23[v26];
        v29 = sub_23E134C20();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        swift_storeEnumTagMultiPayload();
      }
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
      a1[*(int *)(v72 + 48)] = a2[*(int *)(v72 + 48)];
      goto LABEL_22;
    case 1u:
      v30 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v30;
      v31 = type metadata accessor for IconDescriptor();
      v32 = *(int *)(v31 + 20);
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = sub_23E135910();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      v36(v33, v34, v35);
      v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      v41 = *(int *)(v31 + 20);
      v42 = &v38[v41];
      v43 = &v39[v41];
      swift_bridgeObjectRetain();
      v36(v42, v43, v35);
      v44 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
      *(_QWORD *)&a1[v44[5]] = *(_QWORD *)&a2[v44[5]];
      *(_QWORD *)&a1[v44[6]] = *(_QWORD *)&a2[v44[6]];
      v45 = v44[7];
      v46 = &a1[v45];
      v47 = &a2[v45];
      v48 = sub_23E135520();
      v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
      swift_retain();
      swift_retain();
      v49(v46, v47, v48);
      *(_QWORD *)&a1[v44[8]] = *(_QWORD *)&a2[v44[8]];
      *(_QWORD *)&a1[v44[9]] = *(_QWORD *)&a2[v44[9]];
      *(_QWORD *)&a1[v44[10]] = *(_QWORD *)&a2[v44[10]];
      v50 = v44[11];
      v51 = &a1[v50];
      v52 = &a2[v50];
      v51[8] = v52[8];
      *(_QWORD *)v51 = *(_QWORD *)v52;
      v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v54 = &a1[v53];
      v55 = &a2[v53];
      v56 = type metadata accessor for Device.Control.IncrementalState(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v67 = sub_23E13534C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v54, v55, v67);
        v54[*(int *)(v56 + 20)] = v55[*(int *)(v56 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      goto LABEL_22;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      swift_bridgeObjectRetain();
      goto LABEL_22;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
      v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v60 = &a1[v59];
      v61 = &a2[v59];
      v62 = type metadata accessor for Device.Control.ColorState(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v68 = sub_23E135328();
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v61, 1, v68))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v60, v61, v68);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v60, 0, 1, v68);
        }
        v73 = *(int *)(v62 + 20);
        v74 = &v60[v73];
        v75 = &v61[v73];
        *(_QWORD *)v74 = *(_QWORD *)v75;
        v74[8] = v75[8];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      goto LABEL_22;
    case 4u:
      v65 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v65;
      a1[16] = a2[16];
      swift_bridgeObjectRetain();
      goto LABEL_22;
    case 6u:
      v66 = sub_23E134C80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(a1, a2, v66);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for AccessoryControlInfo.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  char v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlInfo.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v6 = type metadata accessor for IconDescriptor();
        v7 = *(int *)(v6 + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_23E135910();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v13 = &a1[v12];
        v14 = &a2[v12];
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
        v15 = *(int *)(v6 + 20);
        v16 = &v13[v15];
        v17 = &v14[v15];
        swift_bridgeObjectRetain();
        v11(v16, v17, v10);
        v18 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&a1[*(int *)(v18 + 20)] = *(_QWORD *)&a2[*(int *)(v18 + 20)];
        v19 = *(int *)(v18 + 24);
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          *(_QWORD *)v20 = *(_QWORD *)v21;
          *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v20 = *(_QWORD *)v21;
          v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v25 = &v20[v24];
          v26 = &v21[v24];
          v27 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
          swift_storeEnumTagMultiPayload();
        }
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        a1[*(int *)(v69 + 48)] = a2[*(int *)(v69 + 48)];
        goto LABEL_23;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v28 = type metadata accessor for IconDescriptor();
        v29 = *(int *)(v28 + 20);
        v30 = &a1[v29];
        v31 = &a2[v29];
        v32 = sub_23E135910();
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v30, v31, v32);
        v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v35 = &a1[v34];
        v36 = &a2[v34];
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
        v37 = *(int *)(v28 + 20);
        v38 = &v35[v37];
        v39 = &v36[v37];
        swift_bridgeObjectRetain();
        v33(v38, v39, v32);
        v40 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&a1[v40[5]] = *(_QWORD *)&a2[v40[5]];
        *(_QWORD *)&a1[v40[6]] = *(_QWORD *)&a2[v40[6]];
        v41 = v40[7];
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = sub_23E135520();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_retain();
        swift_retain();
        v45(v42, v43, v44);
        *(_QWORD *)&a1[v40[8]] = *(_QWORD *)&a2[v40[8]];
        *(_QWORD *)&a1[v40[9]] = *(_QWORD *)&a2[v40[9]];
        *(_QWORD *)&a1[v40[10]] = *(_QWORD *)&a2[v40[10]];
        v46 = v40[11];
        v47 = &a1[v46];
        v48 = &a2[v46];
        v49 = v48[8];
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v47[8] = v49;
        v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = type metadata accessor for Device.Control.IncrementalState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
        {
          v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v65 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v51, v52, v65);
          v51[*(int *)(v53 + 20)] = v52[*(int *)(v53 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        goto LABEL_23;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v56 = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 2) = v56;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 3u:
        v57 = *(_QWORD *)a2;
        *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
        *(_QWORD *)a1 = v57;
        v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v59 = &a1[v58];
        v60 = &a2[v58];
        v61 = type metadata accessor for Device.Control.ColorState(0);
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        {
          v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          v66 = sub_23E135328();
          v67 = *(_QWORD *)(v66 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v60, 1, v66))
          {
            v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v59, v60, v66);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v59, 0, 1, v66);
          }
          v70 = *(int *)(v61 + 20);
          v71 = &v59[v70];
          v72 = &v60[v70];
          v73 = *(_QWORD *)v72;
          v71[8] = v72[8];
          *(_QWORD *)v71 = v73;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        goto LABEL_23;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 6u:
        v64 = sub_23E134C80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(a1, a2, v64);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for AccessoryControlInfo.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v6 = type metadata accessor for IconDescriptor();
      v7 = *(int *)(v6 + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23E135910();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v13 = &a1[v12];
      v14 = &a2[v12];
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v11(&v13[*(int *)(v6 + 20)], &v14[*(int *)(v6 + 20)], v10);
      v15 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
      v16 = *(int *)(v15 + 24);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for ControlTextModifier.Config(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v17 = *(_QWORD *)v18;
        v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v51 = &v17[v50];
        v52 = &v18[v50];
        v53 = sub_23E134C20();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        swift_storeEnumTagMultiPayload();
      }
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
      a1[*(int *)(v54 + 48)] = a2[*(int *)(v54 + 48)];
      goto LABEL_18;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v20 = type metadata accessor for IconDescriptor();
      v21 = *(int *)(v20 + 20);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = sub_23E135910();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v25(v22, v23, v24);
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v27 = &a1[v26];
      v28 = &a2[v26];
      *(_OWORD *)v27 = *(_OWORD *)v28;
      v25(&v27[*(int *)(v20 + 20)], &v28[*(int *)(v20 + 20)], v24);
      v29 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
      *(_QWORD *)&a1[v29[5]] = *(_QWORD *)&a2[v29[5]];
      *(_QWORD *)&a1[v29[6]] = *(_QWORD *)&a2[v29[6]];
      v30 = v29[7];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_23E135520();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      *(_QWORD *)&a1[v29[8]] = *(_QWORD *)&a2[v29[8]];
      *(_QWORD *)&a1[v29[9]] = *(_QWORD *)&a2[v29[9]];
      *(_QWORD *)&a1[v29[10]] = *(_QWORD *)&a2[v29[10]];
      v34 = v29[11];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v35[8] = v36[8];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = type metadata accessor for Device.Control.IncrementalState(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v55 = sub_23E13534C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v38, v39, v55);
        v38[*(int *)(v40 + 20)] = v39[*(int *)(v40 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      goto LABEL_18;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = type metadata accessor for Device.Control.ColorState(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v56 = sub_23E135328();
        v57 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v45, 1, v56))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v44, v45, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v44, 0, 1, v56);
        }
        v59 = *(int *)(v46 + 20);
        v60 = &v44[v59];
        v61 = &v45[v59];
        *(_QWORD *)v60 = *(_QWORD *)v61;
        v60[8] = v61[8];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      goto LABEL_18;
    case 6u:
      v49 = sub_23E134C80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(a1, a2, v49);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for AccessoryControlInfo.State(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlInfo.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v6 = type metadata accessor for IconDescriptor();
        v7 = *(int *)(v6 + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_23E135910();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
        v11(v8, v9, v10);
        v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v13 = &a1[v12];
        v14 = &a2[v12];
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v11(&v13[*(int *)(v6 + 20)], &v14[*(int *)(v6 + 20)], v10);
        v15 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
        v16 = *(int *)(v15 + 24);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v17 = *(_QWORD *)v18;
          v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v51 = &v17[v50];
          v52 = &v18[v50];
          v53 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
          swift_storeEnumTagMultiPayload();
        }
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
        a1[*(int *)(v54 + 48)] = a2[*(int *)(v54 + 48)];
        goto LABEL_19;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v20 = type metadata accessor for IconDescriptor();
        v21 = *(int *)(v20 + 20);
        v22 = &a1[v21];
        v23 = &a2[v21];
        v24 = sub_23E135910();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
        v25(v22, v23, v24);
        v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v27 = &a1[v26];
        v28 = &a2[v26];
        *(_OWORD *)v27 = *(_OWORD *)v28;
        v25(&v27[*(int *)(v20 + 20)], &v28[*(int *)(v20 + 20)], v24);
        v29 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&a1[v29[5]] = *(_QWORD *)&a2[v29[5]];
        *(_QWORD *)&a1[v29[6]] = *(_QWORD *)&a2[v29[6]];
        v30 = v29[7];
        v31 = &a1[v30];
        v32 = &a2[v30];
        v33 = sub_23E135520();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        *(_QWORD *)&a1[v29[8]] = *(_QWORD *)&a2[v29[8]];
        *(_QWORD *)&a1[v29[9]] = *(_QWORD *)&a2[v29[9]];
        *(_QWORD *)&a1[v29[10]] = *(_QWORD *)&a2[v29[10]];
        v34 = v29[11];
        v35 = &a1[v34];
        v36 = &a2[v34];
        v35[8] = v36[8];
        *(_QWORD *)v35 = *(_QWORD *)v36;
        v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = type metadata accessor for Device.Control.IncrementalState(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          v55 = sub_23E13534C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v38, v39, v55);
          v38[*(int *)(v40 + 20)] = v39[*(int *)(v40 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        goto LABEL_19;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
        v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
        v44 = &a1[v43];
        v45 = &a2[v43];
        v46 = type metadata accessor for Device.Control.ColorState(0);
        v47 = *(_QWORD *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v56 = sub_23E135328();
          v57 = *(_QWORD *)(v56 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v45, 1, v56))
          {
            v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v44, v45, v56);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v44, 0, 1, v56);
          }
          v59 = *(int *)(v46 + 20);
          v60 = &v44[v59];
          v61 = &v45[v59];
          *(_QWORD *)v60 = *(_QWORD *)v61;
          v60[8] = v61[8];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        goto LABEL_19;
      case 6u:
        v49 = sub_23E134C80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(a1, a2, v49);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23DFB3BF4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  char v11;
  char v12;
  char *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v0 = type metadata accessor for Device.Control.BinaryViewConfig(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v13 = &v12;
    v0 = type metadata accessor for Device.Control.IncrementalConfig(319);
    if (v2 <= 0x3F)
    {
      sub_23DFB3D54(319, &qword_256D1EE90, (void (*)(uint64_t))type metadata accessor for Device.Control.IncrementalState);
      if (v4 > 0x3F)
      {
        return v3;
      }
      else
      {
        swift_getTupleTypeLayout2();
        v14 = &v11;
        v15 = &unk_23E139F68;
        sub_23DFB3D54(319, qword_256D1EE98, (void (*)(uint64_t))type metadata accessor for Device.Control.ColorState);
        v0 = v5;
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          v16 = &v10;
          v17 = &unk_23E139F98;
          v18 = &unk_23E139FB0;
          v7 = sub_23E134C80();
          v0 = v7;
          if (v8 <= 0x3F)
          {
            v19 = *(_QWORD *)(v7 - 8) + 64;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return v0;
}

void sub_23DFB3D54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23E1374A0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23DFB3DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFB3DE8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t ControlTextModifier.Config.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_23E134C20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v0, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23E1376A4();
      sub_23E1371C4();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_23E1376A4();
    }
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1D860);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v11 + 48)], v1);
    sub_23E1376A4();
    sub_23E1376C8();
    sub_23DF73F28(&qword_256D1ED50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E13711C();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t ControlTextModifier.Config.hashValue.getter()
{
  sub_23E137698();
  ControlTextModifier.Config.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23DFB3FBC()
{
  sub_23E137698();
  ControlTextModifier.Config.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23DFB3FFC()
{
  sub_23E137698();
  ControlTextModifier.Config.hash(into:)();
  return sub_23E1376D4();
}

uint64_t ControlTextModifier.body(content:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF28);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = type metadata accessor for ControlTextModifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v3, (uint64_t)v12, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  sub_23DFB50B8((uint64_t)v12, v16 + v14);
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *a2 = sub_23DFB50FC;
  a2[1] = v16;
  return result;
}

uint64_t sub_23DFB4178@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (**v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double MidX;
  double v37;
  double v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char v60;
  uint64_t v61;
  char *v62;
  uint64_t (**v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (**v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  CGRect v104;

  v90 = a2;
  v95 = a3;
  v96 = a1;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF28);
  v91 = *(void (***)(char *, uint64_t, uint64_t))(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v82 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F080);
  MEMORY[0x24BDAC7A8](v92);
  v94 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F088);
  MEMORY[0x24BDAC7A8](v86);
  v87 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F090);
  MEMORY[0x24BDAC7A8](v93);
  v89 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F098);
  MEMORY[0x24BDAC7A8](v85);
  v88 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23E134C20();
  v8 = *(_QWORD *)(v83 - 8);
  v9 = MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v81 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v84 = (char *)&v81 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v81 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (void (**)(char *, uint64_t, uint64_t))((char *)&v81 - v19);
  v21 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = sub_23E136498();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1365A0();
  sub_23E135E8C();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v104.origin.x = v29;
  v104.origin.y = v31;
  v104.size.width = v33;
  v104.size.height = v35;
  MidX = CGRectGetMidX(v104);
  sub_23E135E80();
  v38 = v37 * 0.75;
  sub_23DF73E10(v96, (uint64_t)v23, type metadata accessor for ControlTextModifier.Config);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v41 = *v23;
      v40 = v23[1];
      v42 = sub_23E136FD8();
      v44 = v43;
      v98 = v41;
      v99 = v40;
      sub_23DF8DC18();
      swift_bridgeObjectRetain();
      v45 = sub_23E13693C();
      v47 = v46;
      v49 = v48;
      v51 = v50;
      v52 = (uint64_t)v88;
      v91[2](v88, v90, v97);
      swift_bridgeObjectRelease();
      v53 = v52 + *(int *)(v85 + 36);
      *(_QWORD *)v53 = v45;
      *(_QWORD *)(v53 + 8) = v47;
      *(_BYTE *)(v53 + 16) = v49 & 1;
      *(_QWORD *)(v53 + 24) = v51;
      *(double *)(v53 + 32) = MidX;
      *(double *)(v53 + 40) = v38;
      *(_QWORD *)(v53 + 48) = v42;
      *(_QWORD *)(v53 + 56) = v44;
      sub_23DF89C1C(v52, v87, &qword_256D1F098);
      swift_storeEnumTagMultiPayload();
      sub_23DFB5E4C();
      v54 = (uint64_t)v89;
      sub_23E136480();
      sub_23DF89C1C(v54, (uint64_t)v94, &qword_256D1F090);
      swift_storeEnumTagMultiPayload();
      sub_23DFB5DE8();
      sub_23DF89B88(&qword_256D1F0B0, &qword_256D1EF28, MEMORY[0x24BDEFB78]);
      sub_23E136480();
      sub_23DF89C7C(v54, &qword_256D1F090);
      return sub_23DF89C7C(v52, &qword_256D1F098);
    }
    else
    {
      v63 = (uint64_t (**)(char *, uint64_t))v91;
      v64 = v91[2];
      v65 = v82;
      v66 = v97;
      v64(v82, v90, v97);
      v64(v94, (uint64_t)v65, v66);
      swift_storeEnumTagMultiPayload();
      sub_23DFB5DE8();
      sub_23DF89B88(&qword_256D1F0B0, &qword_256D1EF28, MEMORY[0x24BDEFB78]);
      sub_23E136480();
      return v63[1](v65, v66);
    }
  }
  else
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1D860);
    v57 = *(void (**)(_QWORD, char *, uint64_t))(v8 + 32);
    v58 = v83;
    v57(v20, (char *)v23 + *(int *)(v56 + 48), v83);
    sub_23E134C14();
    v59 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 16);
    v59(v81, v20, v58);
    sub_23E134BE4();
    v60 = sub_23E134BF0();
    v61 = (uint64_t)v84;
    v62 = v18;
    if ((v60 & 1) != 0)
    {
      v57(v84, v13, v58);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v58);
      v59((char *)v61, v18, v58);
    }
    v67 = sub_23E136FD8();
    v69 = v68;
    sub_23DFB4920((uint64_t)v20, v61, (uint64_t)&v98, MidX, v38);
    v96 = v8;
    v70 = v98;
    v71 = v99;
    v72 = v100;
    v73 = v58;
    v74 = v101;
    v75 = v102;
    v76 = v103;
    v77 = (uint64_t)v88;
    v91[2](v88, v90, v97);
    v91 = v20;
    v78 = v77 + *(int *)(v85 + 36);
    *(_QWORD *)v78 = v70;
    *(_QWORD *)(v78 + 8) = v71;
    *(_BYTE *)(v78 + 16) = v72;
    *(_QWORD *)(v78 + 24) = v74;
    *(_QWORD *)(v78 + 32) = v75;
    *(_QWORD *)(v78 + 40) = v76;
    *(_QWORD *)(v78 + 48) = v67;
    *(_QWORD *)(v78 + 56) = v69;
    sub_23DF89C1C(v77, v87, &qword_256D1F098);
    swift_storeEnumTagMultiPayload();
    sub_23DFB5E4C();
    v79 = (uint64_t)v89;
    sub_23E136480();
    sub_23DF89C1C(v79, (uint64_t)v94, &qword_256D1F090);
    swift_storeEnumTagMultiPayload();
    sub_23DFB5DE8();
    sub_23DF89B88(&qword_256D1F0B0, &qword_256D1EF28, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    sub_23DF89C7C(v79, &qword_256D1F090);
    sub_23DF89C7C(v77, &qword_256D1F098);
    v80 = *(void (**)(char *, uint64_t))(v96 + 8);
    v80(v62, v73);
    v80(v84, v73);
    return ((uint64_t (*)(void (**)(char *, uint64_t, uint64_t), uint64_t))v80)(v91, v73);
  }
}

uint64_t sub_23DFB4920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v52 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0C8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0D0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v46 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0D8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v46 - v21;
  v23 = sub_23E134C20();
  sub_23DF73F28(&qword_256D1F0E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  result = sub_23E13714C();
  if ((result & 1) != 0)
  {
    v25 = *(int *)(v12 + 48);
    v47 = v20;
    v26 = &v16[v25];
    v49 = v17;
    v50 = v11;
    v27 = *(_QWORD *)(v23 - 8);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v28(v16, a1, v23);
    v28(v26, a2, v23);
    v29 = v51;
    v30 = &v51[*(int *)(v12 + 48)];
    v28(v51, (uint64_t)v16, v23);
    v28(v30, (uint64_t)v26, v23);
    v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v31(v20, v29, v23);
    v32 = v52;
    v48 = v22;
    v33 = *(void (**)(char *, uint64_t))(v27 + 8);
    v33(v30, v23);
    v34 = &v29[*(int *)(v12 + 48)];
    v31(v29, v16, v23);
    v31(v34, v26, v23);
    v35 = (uint64_t)v47;
    v31(&v47[*(int *)(v49 + 36)], v34, v23);
    v33(v29, v23);
    sub_23DFB5EE8(v35, (uint64_t)v48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v50, 1, 1, v23);
    v36 = sub_23E1368B8();
    v38 = v37;
    LOBYTE(v31) = v39 & 1;
    v40 = sub_23E1368E8();
    v42 = v41;
    LOBYTE(v27) = v43;
    v45 = v44;
    sub_23DFA055C(v36, v38, (char)v31);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v32 = v40;
    *(_QWORD *)(v32 + 8) = v42;
    *(_BYTE *)(v32 + 16) = v27 & 1;
    *(_QWORD *)(v32 + 24) = v45;
    *(double *)(v32 + 32) = a4;
    *(double *)(v32 + 40) = a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23DFB4C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v5 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF28);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = *(_QWORD *)(a2 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v5, (uint64_t)v14, type metadata accessor for ControlTextModifier);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + v15 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = swift_allocObject();
  sub_23DFB50B8((uint64_t)v14, v17 + v15);
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *a3 = sub_23DFB50FC;
  a3[1] = v17;
  return result;
}

uint64_t _s22HomeAccessoryControlUI0C12TextModifierV6ConfigO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double *v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char *v25;
  uint64_t v26;
  char v27;
  double v28;
  double v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v2 = sub_23E134C20();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for ControlTextModifier.Config(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (double *)((char *)&v34 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0E8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (double *)&v18[*(int *)(v16 + 48)];
  sub_23DF73E10(v34, (uint64_t)v18, type metadata accessor for ControlTextModifier.Config);
  sub_23DF73E10(v35, (uint64_t)v19, type metadata accessor for ControlTextModifier.Config);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23DF73E10((uint64_t)v18, (uint64_t)v12, type metadata accessor for ControlTextModifier.Config);
      v22 = *v12;
      v21 = v12[1];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v22 == *(_QWORD *)v19 && v21 == *((_QWORD *)v19 + 1))
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v24 = sub_23E137614();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
LABEL_23:
            sub_23DFB5488((uint64_t)v18);
            goto LABEL_16;
          }
        }
LABEL_20:
        sub_23DFB5488((uint64_t)v18);
        v27 = 1;
        return v27 & 1;
      }
      swift_bridgeObjectRelease();
    }
    else if (swift_getEnumCaseMultiPayload() == 2)
    {
      goto LABEL_20;
    }
  }
  else
  {
    v25 = v6;
    sub_23DF73E10((uint64_t)v18, (uint64_t)v14, type metadata accessor for ControlTextModifier.Config);
    v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    if (!swift_getEnumCaseMultiPayload())
    {
      v28 = *v14;
      v29 = *v19;
      v30 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v30(v8, (char *)v14 + v26, v2);
      v30(v25, (char *)v19 + v26, v2);
      if (v28 == v29)
      {
        v27 = sub_23E134C08();
        v31 = *(void (**)(char *, uint64_t))(v3 + 8);
        v31(v25, v2);
        v31(v8, v2);
        sub_23DFB5488((uint64_t)v18);
        return v27 & 1;
      }
      v33 = *(void (**)(char *, uint64_t))(v3 + 8);
      v33(v25, v2);
      v33(v8, v2);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))((char *)v14 + v26, v2);
  }
  sub_23DF89C7C((uint64_t)v18, &qword_256D1F0E8);
LABEL_16:
  v27 = 0;
  return v27 & 1;
}

uint64_t type metadata accessor for ControlTextModifier.Config(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D1F038);
}

uint64_t type metadata accessor for ControlTextModifier(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D1EF90);
}

uint64_t sub_23DFB50B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTextModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFB5100()
{
  return sub_23DF73F28(&qword_256D1EF30, type metadata accessor for ControlTextModifier.Config, (uint64_t)&protocol conformance descriptor for ControlTextModifier.Config);
}

uint64_t sub_23DFB512C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTextModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(type metadata accessor for ControlTextModifier.Config(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      *a1 = *a2;
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ControlTextModifier(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ControlTextModifier.Config(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v4 = sub_23E134C20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for ControlTextModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ControlTextModifier.Config(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E134C20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for ControlTextModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23DFB5488((uint64_t)a1);
    v4 = type metadata accessor for ControlTextModifier.Config(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23DFB5488(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlTextModifier.Config(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for ControlTextModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = type metadata accessor for ControlTextModifier.Config(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23E134C20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for ControlTextModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23DFB5488((uint64_t)a1);
    v4 = type metadata accessor for ControlTextModifier.Config(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTextModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFB5640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTextModifier.Config(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ControlTextModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFB5688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTextModifier.Config(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23DFB56C8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ControlTextModifier.Config(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTextModifier.Config(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ControlTextModifier.Config(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v4 = sub_23E134C20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for ControlTextModifier.Config(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E134C20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for ControlTextModifier.Config(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23DFB5488((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_QWORD *initializeWithTake for ControlTextModifier.Config(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E134C20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for ControlTextModifier.Config(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23DFB5488((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23E134C20();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23DFB5BB4()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = sub_23E134C20();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_23E13A0D0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23DFB5C38()
{
  return sub_23DF89B88(&qword_256D1F070, &qword_256D1F078, MEMORY[0x24BDEC6F8]);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  unint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for ControlTextModifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF28);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  type metadata accessor for ControlTextModifier.Config(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v8 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
    v9 = sub_23E134C20();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_23DFB5D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ControlTextModifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF28) - 8) + 80);
  return sub_23DFB4178(v1 + v4, v1 + ((v5 + v6) & ~v6), a1);
}

unint64_t sub_23DFB5DE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F0A0;
  if (!qword_256D1F0A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F090);
    v2[0] = sub_23DFB5E4C();
    v2[1] = v2[0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F0A0);
  }
  return result;
}

unint64_t sub_23DFB5E4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F0A8;
  if (!qword_256D1F0A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F098);
    v2[0] = sub_23DF89B88(&qword_256D1F0B0, &qword_256D1EF28, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D1F0B8, &qword_256D1F0C0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F0A8);
  }
  return result;
}

uint64_t sub_23DFB5EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFB5F30@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  CGFloat v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v30;
  char *v31;
  _BYTE v32[448];
  _QWORD v33[57];
  _QWORD v34[58];

  v2 = v1;
  v31 = a1;
  v3 = type metadata accessor for RingControlView.KnobsView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F0);
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&KeyPath - v13;
  v15 = *(double *)(v2 + *(int *)(v3 + 20));
  v16 = v15 + v15;
  sub_23DFB624C((uint64_t)v32, 0.0, 0.0, v16, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  MEMORY[0x24264B734](v17);
  sub_23E06FB00();
  v19 = v18;
  sub_23DFB6A40((uint64_t)v8);
  v34[0] = v19;
  KeyPath = swift_getKeyPath();
  sub_23DFB6C80(v2, (uint64_t)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v21 = swift_allocObject();
  sub_23DFB6FC8((uint64_t)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  v22 = v21 + ((v5 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v22 = 0;
  *(_QWORD *)(v22 + 8) = 0;
  *(CGFloat *)(v22 + 16) = v16;
  *(CGFloat *)(v22 + 24) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F108);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F110);
  sub_23DF89B88(&qword_256D1F118, &qword_256D1F108, MEMORY[0x24BEE12D8]);
  sub_23DFB7074();
  sub_23DF89B88(&qword_256D1F128, &qword_256D1F110, MEMORY[0x24BDED500]);
  sub_23E136F0C();
  v23 = v30;
  v24 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v24(v11, v14, v9);
  memcpy(v33, v32, 0x1C0uLL);
  v33[56] = 0x3FD999999999999ALL;
  v25 = v31;
  memcpy(v31, v33, 0x1C8uLL);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F130);
  v24(&v25[*(int *)(v26 + 48)], v11, v9);
  sub_23DFB70BC((uint64_t)v33);
  v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v14, v9);
  v27(v11, v9);
  memcpy(v34, v32, 0x1C0uLL);
  v34[56] = 0x3FD999999999999ALL;
  return sub_23DFB7224((uint64_t)v34);
}

uint64_t sub_23DFB624C@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  __int16 v77;
  _BYTE v78[7];
  int v79;
  __int16 v80;
  _BYTE v81[7];
  int v82;
  __int16 v83;
  _BYTE v84[7];
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;

  type metadata accessor for RingControlView.KnobsView(0);
  sub_23E1368A0();
  v10 = sub_23E136C24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F138);
  v11 = swift_allocObject();
  __asm { FMOV            V1.2D, #5.0 }
  v35 = _Q1;
  *(_OWORD *)(v11 + 16) = xmmword_23E138410;
  *(_OWORD *)(v11 + 32) = _Q1;
  sub_23E135DCC();
  v17 = sub_23E136FE4();
  v30 = v18;
  v31 = v17;
  sub_23E1368A0();
  v33 = sub_23E136C24();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23E138410;
  *(_OWORD *)(v19 + 32) = v35;
  sub_23E135DCC();
  v20 = sub_23E136FE4();
  v29 = v21;
  v85.origin.x = a2;
  v85.origin.y = a3;
  v85.size.width = a4;
  v85.size.height = a5;
  CGRectGetMinX(v85);
  v86.origin.x = a2;
  v86.origin.y = a3;
  v86.size.width = a4;
  v86.size.height = a5;
  CGRectGetMinX(v86);
  v87.origin.x = a2;
  v87.origin.y = a3;
  v87.size.width = a4;
  v87.size.height = a5;
  CGRectGetWidth(v87);
  v88.origin.x = a2;
  v88.origin.y = a3;
  v88.size.width = a4;
  v88.size.height = a5;
  CGRectGetMinY(v88);
  v89.origin.x = a2;
  v89.origin.y = a3;
  v89.size.width = a4;
  v89.size.height = a5;
  CGRectGetHeight(v89);
  v90.origin.x = a2;
  v90.origin.y = a3;
  v90.size.width = a4;
  v90.size.height = a5;
  CGRectGetMaxX(v90);
  v91.origin.x = a2;
  v91.origin.y = a3;
  v91.size.width = a4;
  v91.size.height = a5;
  CGRectGetMinX(v91);
  v92.origin.x = a2;
  v92.origin.y = a3;
  v92.size.width = a4;
  v92.size.height = a5;
  CGRectGetWidth(v92);
  v93.origin.x = a2;
  v93.origin.y = a3;
  v93.size.width = a4;
  v93.size.height = a5;
  CGRectGetMinY(v93);
  v94.origin.x = a2;
  v94.origin.y = a3;
  v94.size.width = a4;
  v94.size.height = a5;
  CGRectGetHeight(v94);
  sub_23E1368A0();
  v34 = sub_23E136C00();
  sub_23E135DCC();
  v22 = sub_23E136FE4();
  v27 = v23;
  v28 = v22;
  v95.origin.x = a2;
  v95.origin.y = a3;
  v95.size.width = a4;
  v95.size.height = a5;
  CGRectGetMinX(v95);
  v96.origin.x = a2;
  v96.origin.y = a3;
  v96.size.width = a4;
  v96.size.height = a5;
  CGRectGetWidth(v96);
  v97.origin.x = a2;
  v97.origin.y = a3;
  v97.size.width = a4;
  v97.size.height = a5;
  CGRectGetMinY(v97);
  v98.origin.x = a2;
  v98.origin.y = a3;
  v98.size.width = a4;
  v98.size.height = a5;
  CGRectGetHeight(v98);
  v99.origin.x = a2;
  v99.origin.y = a3;
  v99.size.width = a4;
  v99.size.height = a5;
  CGRectGetMinY(v99);
  v100.origin.x = a2;
  v100.origin.y = a3;
  v100.size.width = a4;
  v100.size.height = a5;
  CGRectGetMinX(v100);
  v101.origin.x = a2;
  v101.origin.y = a3;
  v101.size.width = a4;
  v101.size.height = a5;
  CGRectGetWidth(v101);
  v102.origin.x = a2;
  v102.origin.y = a3;
  v102.size.width = a4;
  v102.size.height = a5;
  CGRectGetMinY(v102);
  v103.origin.x = a2;
  v103.origin.y = a3;
  v103.size.width = a4;
  v103.size.height = a5;
  CGRectGetHeight(v103);
  v104.origin.x = a2;
  v104.origin.y = a3;
  v104.size.width = a4;
  v104.size.height = a5;
  CGRectGetMaxY(v104);
  sub_23E1368A0();
  v32 = sub_23E136C3C();
  sub_23E135DCC();
  v24 = sub_23E136FE4();
  *(_DWORD *)(a1 + 260) = *(_DWORD *)&v81[3];
  *(_DWORD *)(a1 + 257) = *(_DWORD *)v81;
  *(_DWORD *)(a1 + 314) = v79;
  *(_DWORD *)(a1 + 372) = *(_DWORD *)&v78[3];
  *(_DWORD *)(a1 + 369) = *(_DWORD *)v78;
  *(_DWORD *)(a1 + 426) = v76;
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v30;
  *(_DWORD *)(a1 + 148) = *(_DWORD *)&v84[3];
  *(_DWORD *)(a1 + 145) = *(_DWORD *)v84;
  *(_WORD *)(a1 + 206) = v83;
  *(_DWORD *)(a1 + 202) = v82;
  *(_QWORD *)(a1 + 208) = v20;
  *(_QWORD *)(a1 + 216) = v29;
  *(_WORD *)(a1 + 318) = v80;
  *(_QWORD *)(a1 + 320) = v28;
  *(_QWORD *)(a1 + 328) = v27;
  *(_WORD *)(a1 + 88) = 256;
  *(_WORD *)(a1 + 200) = 256;
  *(_WORD *)(a1 + 312) = 256;
  *(_WORD *)(a1 + 424) = 256;
  *(_WORD *)(a1 + 430) = v77;
  *(_QWORD *)(a1 + 432) = v24;
  *(_QWORD *)(a1 + 440) = v25;
  *(_QWORD *)a1 = v36;
  *(_QWORD *)(a1 + 8) = v37;
  *(_QWORD *)(a1 + 16) = v38;
  *(_QWORD *)(a1 + 24) = v39;
  *(_BYTE *)(a1 + 32) = v40;
  *(_QWORD *)(a1 + 40) = v41;
  *(_QWORD *)(a1 + 48) = v42;
  *(_QWORD *)(a1 + 56) = v43;
  *(_QWORD *)(a1 + 64) = v44;
  *(_QWORD *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 112) = v46;
  *(_QWORD *)(a1 + 120) = v47;
  *(_QWORD *)(a1 + 128) = v48;
  *(_QWORD *)(a1 + 136) = v49;
  *(_BYTE *)(a1 + 144) = v50;
  *(_QWORD *)(a1 + 152) = v51;
  *(_QWORD *)(a1 + 160) = v52;
  *(_QWORD *)(a1 + 168) = v53;
  *(_QWORD *)(a1 + 176) = v54;
  *(_QWORD *)(a1 + 184) = v55;
  *(_QWORD *)(a1 + 192) = v33;
  *(_QWORD *)(a1 + 224) = v56;
  *(_QWORD *)(a1 + 232) = v57;
  *(_QWORD *)(a1 + 240) = v58;
  *(_QWORD *)(a1 + 248) = v59;
  *(_BYTE *)(a1 + 256) = v60;
  *(_QWORD *)(a1 + 264) = v61;
  *(_QWORD *)(a1 + 272) = v62;
  *(_QWORD *)(a1 + 280) = v63;
  *(_QWORD *)(a1 + 288) = v64;
  *(_QWORD *)(a1 + 296) = v65;
  *(_QWORD *)(a1 + 304) = v34;
  *(_QWORD *)(a1 + 336) = v66;
  *(_QWORD *)(a1 + 344) = v67;
  *(_QWORD *)(a1 + 352) = v68;
  *(_QWORD *)(a1 + 360) = v69;
  *(_BYTE *)(a1 + 368) = v70;
  *(_QWORD *)(a1 + 376) = v71;
  *(_QWORD *)(a1 + 384) = v72;
  *(_QWORD *)(a1 + 392) = v73;
  *(_QWORD *)(a1 + 400) = v74;
  *(_QWORD *)(a1 + 408) = v75;
  *(_QWORD *)(a1 + 416) = v32;
  sub_23DFB720C(v36, v37, v38, v39, v40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v46, v47, v48, v49, v50);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v56, v57, v58, v59, v60);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v66, v67, v68, v69, v70);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB7374(v66, v67, v68, v69, v70);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DFB7374(v56, v57, v58, v59, v60);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DFB7374(v46, v47, v48, v49, v50);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DFB7374(v36, v37, v38, v39, v40);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DFB6A40(uint64_t a1)
{
  uint64_t v2;

  v2 = _s9KnobStateOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_23DFB6A7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  BOOL v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  CGRectGetMinX(*(CGRect *)&a4);
  v34.origin.x = a4;
  v34.origin.y = a5;
  v34.size.width = a6;
  v34.size.height = a7;
  CGRectGetWidth(v34);
  v35.origin.x = a4;
  v35.origin.y = a5;
  v35.size.width = a6;
  v35.size.height = a7;
  CGRectGetMinY(v35);
  v36.origin.x = a4;
  v36.origin.y = a5;
  v36.size.width = a6;
  v36.size.height = a7;
  CGRectGetHeight(v36);
  v14 = *(double *)(a2 + *(int *)(type metadata accessor for RingControlView.KnobsView(0) + 20) + 8);
  v15 = _s4KnobVMa(0);
  v16 = v15;
  v17 = *(double *)(a1 + *(int *)(v15 + 20));
  v18 = 1.0;
  if (v17 <= 1.0)
    v18 = *(double *)(a1 + *(int *)(v15 + 20));
  v19 = v17 > 0.0;
  v20 = 0.0;
  if (v19)
    v20 = v18;
  __sincos_stret(v14 * 57.2957795 * v20 * 0.0174532925);
  sub_23E1368A0();
  v21 = *(_QWORD *)(a1 + *(int *)(v16 + 24));
  swift_retain();
  sub_23E135DCC();
  v22 = sub_23E136FE4();
  *(_OWORD *)a3 = v25;
  *(_QWORD *)(a3 + 16) = v26;
  *(_QWORD *)(a3 + 24) = v27;
  *(_BYTE *)(a3 + 32) = v28;
  result = v30;
  *(_QWORD *)(a3 + 40) = v29;
  *(double *)(a3 + 48) = v30;
  *(_QWORD *)(a3 + 56) = v31;
  *(_QWORD *)(a3 + 64) = v32;
  *(_QWORD *)(a3 + 72) = v33;
  *(_QWORD *)(a3 + 80) = v21;
  *(_WORD *)(a3 + 88) = 256;
  *(_QWORD *)(a3 + 96) = v22;
  *(_QWORD *)(a3 + 104) = v24;
  return result;
}

uint64_t sub_23DFB6C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RingControlView.KnobsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFB6CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for RingControlView.KnobsView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v22(v3, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v13);
    v21 = v14;
    v15 = _s4KnobVMa(0);
    swift_release();
    v16 = v3 + *(int *)(v15 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    if (!v17(v16, 1, v9))
    {
      swift_bridgeObjectRelease();
      v20 = v16 + *(int *)(v9 + 20);
      v18 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v20, v18);
      swift_release();
    }
    v19 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v22(v19, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v13);
    swift_release();
    v8 = v19 + *(int *)(v15 + 36);
    if (!v17(v8, 1, v9))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v5 = sub_23E134C80();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 2, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    v7 = _s4KnobVMa(0);
    swift_release();
    v8 = v3 + *(int *)(v7 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_release();
    }
  }
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v2 + *(int *)(v1 + 32)), *(_BYTE *)(v2 + *(int *)(v1 + 32) + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFB6FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RingControlView.KnobsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_23DFB700C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  CGFloat *v7;

  v5 = *(_QWORD *)(type metadata accessor for RingControlView.KnobsView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (CGFloat *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23DFB6A7C(a1, v2 + v6, a2, *v7, v7[1], v7[2], v7[3]);
}

unint64_t sub_23DFB7074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1F120;
  if (!qword_256D1F120)
  {
    v1 = _s4KnobVMa(255);
    result = MEMORY[0x24264C55C](&unk_23E13EE90, v1);
    atomic_store(result, (unint64_t *)&qword_256D1F120);
  }
  return result;
}

uint64_t sub_23DFB70BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 112);
  v2 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 232);
  v12 = *(_QWORD *)(a1 + 224);
  v10 = *(_QWORD *)(a1 + 240);
  v9 = *(_QWORD *)(a1 + 248);
  v16 = *(_QWORD *)(a1 + 344);
  v17 = *(_QWORD *)(a1 + 336);
  v15 = *(_QWORD *)(a1 + 352);
  v14 = *(_QWORD *)(a1 + 360);
  v6 = *(_BYTE *)(a1 + 144);
  v7 = *(_BYTE *)(a1 + 256);
  v13 = *(_BYTE *)(a1 + 368);
  sub_23DFB720C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v3, v2, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v12, v11, v10, v9, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v17, v16, v15, v14, v13);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23DFB720C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_retain();
  return result;
}

uint64_t sub_23DFB7224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 112);
  v2 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 232);
  v12 = *(_QWORD *)(a1 + 224);
  v10 = *(_QWORD *)(a1 + 240);
  v9 = *(_QWORD *)(a1 + 248);
  v16 = *(_QWORD *)(a1 + 344);
  v17 = *(_QWORD *)(a1 + 336);
  v15 = *(_QWORD *)(a1 + 352);
  v14 = *(_QWORD *)(a1 + 360);
  v6 = *(_BYTE *)(a1 + 144);
  v7 = *(_BYTE *)(a1 + 256);
  v13 = *(_BYTE *)(a1 + 368);
  sub_23DFB7374(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DFB7374(v3, v2, v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DFB7374(v12, v11, v10, v9, v7);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DFB7374(v17, v16, v15, v14, v13);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23DFB7374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

uint64_t sub_23DFB7390()
{
  sub_23E13687C();
  return sub_23E136888();
}

uint64_t sub_23DFB73D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;

  v64 = a3;
  v65 = a4;
  v71 = a2;
  v72 = a1;
  v6 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F1D8);
  MEMORY[0x24BDAC7A8](v8);
  v70 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E134E60();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AccessoryControlGroup(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v60 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v61 = (uint64_t)&v59 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v62 = (uint64_t)&v59 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v74 = (uint64_t)&v59 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v75 = (uint64_t)&v59 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v59 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F1E0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v76 = (uint64_t *)((char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v59 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v59 - v34;
  v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v79 = v15;
  v78((char *)&v59 - v34, 1, 1, v14);
  v36 = *(_QWORD *)(v72 + 16);
  v77 = v14;
  if (!v36)
    goto LABEL_11;
  v66 = v13;
  v67 = v11;
  v68 = v10;
  v69 = a5;
  v37 = v72 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
  v38 = *(_QWORD *)(v79 + 72);
  swift_bridgeObjectRetain();
  v73 = v35;
  while (1)
  {
    sub_23DF73E10(v37, (uint64_t)v27, type metadata accessor for AccessoryControlGroup);
    sub_23DF89C1C((uint64_t)v35, (uint64_t)v33, &qword_256D1F1E0);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
    if (v40(v33, 1, v14) != 1)
      break;
    sub_23DF89C7C((uint64_t)v33, &qword_256D1F1E0);
    v39 = (uint64_t)v27;
LABEL_4:
    sub_23DF89C7C((uint64_t)v35, &qword_256D1F1E0);
    sub_23DF89384(v39, (uint64_t)v35, type metadata accessor for AccessoryControlGroup);
    v14 = v77;
    v78(v35, 0, 1, v77);
    v37 += v38;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  v41 = v38;
  v42 = v33;
  v43 = (uint64_t)v33;
  v45 = v75;
  v44 = v76;
  sub_23DF89384(v43, v75, type metadata accessor for AccessoryControlGroup);
  sub_23DFB80D8(v45, (uint64_t)v27, v44);
  sub_23DFB79C8(v45);
  sub_23DFB79C8((uint64_t)v27);
  if (v40((char *)v44, 1, v14) != 1)
  {
    v39 = v74;
    sub_23DF89384((uint64_t)v76, v74, type metadata accessor for AccessoryControlGroup);
    v38 = v41;
    v35 = v73;
    v33 = v42;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  sub_23DF89C7C((uint64_t)v76, &qword_256D1F1E0);
  v35 = v73;
  sub_23DF89C7C((uint64_t)v73, &qword_256D1F1E0);
  v14 = v77;
  v78(v35, 1, 1, v77);
LABEL_10:
  v10 = v68;
  a5 = v69;
  v13 = v66;
  v11 = v67;
LABEL_11:
  v46 = v70;
  sub_23DF89C1C(v71, v70, &qword_256D1F1D8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v46, 1, v10) == 1)
  {
    sub_23DF89C7C(v46, &qword_256D1F1D8);
    v47 = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v46, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v35, 1, v14))
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v47 = 1;
    }
    else
    {
      v48 = v60;
      sub_23DF73E10((uint64_t)v35, v60, type metadata accessor for AccessoryControlGroup);
      v49 = v61;
      sub_23DFB8AA4((uint64_t)v13, v61);
      sub_23DFB79C8(v48);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v50 = v62;
      sub_23DF89384(v49, v62, type metadata accessor for AccessoryControlGroup);
      v51 = v63;
      sub_23DF73E10(v50, v63, type metadata accessor for AccessoryControlGroup.LayoutType);
      v52 = (uint64_t *)(v50 + *(int *)(v77 + 24));
      v54 = *v52;
      v53 = v52[1];
      swift_bridgeObjectRetain();
      v55 = v65;
      swift_bridgeObjectRetain();
      sub_23DFB79C8(v50);
      v56 = (_QWORD *)(a5 + *(int *)(v77 + 24));
      sub_23DF89384(v51, a5, type metadata accessor for AccessoryControlGroup.LayoutType);
      v47 = 0;
      v57 = (_QWORD *)(a5 + *(int *)(v77 + 20));
      *v57 = v64;
      v57[1] = v55;
      *v56 = v54;
      v56[1] = v53;
      v14 = v77;
    }
  }
  v78((char *)a5, v47, 1, v14);
  return sub_23DF89C7C((uint64_t)v35, &qword_256D1F1E0);
}

uint64_t AccessoryControlSolver.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AccessoryControlSolver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccessoryControlSolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccessoryControlSolver()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23DFB79C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryControlGroup(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DFB7A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v1 = sub_23E135910();
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v30 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E134E54();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for IconDescriptor();
  v29 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E134E00();
  v28 = sub_23E134E48();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v9, v3);
  sub_23E134E00();
  v16 = v30;
  sub_23E134E3C();
  v15(v7, v3);
  *v12 = v28;
  v12[1] = v14;
  v17 = (char *)v12 + *(int *)(v10 + 20);
  v18 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v19 = v16;
  v20 = v16;
  v21 = v32;
  v18(v17, v19, v32);
  sub_23E134E0C();
  v31 = sub_23E134E48();
  v28 = v22;
  v15(v9, v3);
  sub_23E134E0C();
  sub_23E134E3C();
  v15(v7, v3);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v24 = v33;
  v25 = (uint64_t *)(v33 + *(int *)(v23 + 28));
  v26 = v28;
  *v25 = v31;
  v25[1] = v26;
  v18((char *)v25 + *(int *)(v29 + 20), v20, v21);
  return sub_23DF89384((uint64_t)v12, v24, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
}

uint64_t sub_23DFB7C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_23DFB7C70()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23DFB7CA0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_23DFB7CDC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_23DFB7D18@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_WORD *)(a1 + 40) = 0;
  return result;
}

uint64_t TransitionTileHelper.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t TransitionTileHelper.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_23DFB7D64()
{
  type metadata accessor for TransitionTileHelper();
  sub_23DFB7DC0();
  sub_23E135C40();
  sub_23E135C58();
  return swift_release();
}

uint64_t type metadata accessor for TransitionTileHelper()
{
  return objc_opt_self();
}

unint64_t sub_23DFB7DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1EC40;
  if (!qword_256D1EC40)
  {
    v1 = type metadata accessor for TransitionTileHelper();
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for TransitionTileHelper, v1);
    atomic_store(result, (unint64_t *)&qword_256D1EC40);
  }
  return result;
}

uint64_t static TransitionTileView.Config.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v2 = sub_23E136C48();
  v3 = sub_23E136C54();
  v4 = sub_23E136C48();
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BDF7858]);
  v6 = sub_23E136C24();
  v7 = sub_23E136C48();
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_WORD *)(a1 + 48) = 256;
  *(_QWORD *)(a1 + 56) = v2;
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 88) = xmmword_23E13A1B0;
  *(_OWORD *)(a1 + 104) = xmmword_23E13A1B0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 177) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_QWORD *)(a1 + 232) = 0x7FF0000000000000;
  *(_QWORD *)(a1 + 240) = v5;
  *(_QWORD *)(a1 + 248) = v6;
  *(_QWORD *)(a1 + 256) = v7;
  *(_BYTE *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_QWORD *)(a1 + 304) = 0x7FF0000000000000;
  *(_QWORD *)(a1 + 312) = v5;
  *(_QWORD *)(a1 + 320) = v6;
  *(_QWORD *)(a1 + 328) = v7;
  *(_BYTE *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  *(_BYTE *)(a1 + 360) = 2;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  v8 = v5;
  swift_retain();
  return swift_retain();
}

double sub_23DFB7F20()
{
  return 0.0;
}

double sub_23DFB7F34()
{
  return 0.0;
}

uint64_t TransitionTileHelper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TransitionTileHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23DFB7F54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TransitionTileHelper();
  result = sub_23E135C40();
  *a1 = result;
  return result;
}

uint64_t sub_23DFB7F8C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_23DFB7FD0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t method lookup function for TransitionTileHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransitionTileHelper.shouldDisableCellRefresh.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of TransitionTileHelper.shouldDisableCellRefresh.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of TransitionTileHelper.shouldDisableCellRefresh.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of TransitionTileHelper.controlsPresentationStyle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of TransitionTileHelper.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TransitionTileHelper.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of TransitionTileHelper.enableRefresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of TransitionTileHelper.willDismiss(viewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of TransitionTileHelper.updateCell()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of TransitionTileHelper.disableRefresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of TransitionTileHelper.transitionTileConfig()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of TransitionTileHelper.tileFrame()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of TransitionTileHelper.generateStoredTileFrame()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of TransitionTileHelper.cornerRadius()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of TransitionTileHelper.hidden(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of TransitionTileHelper.containerSafeAreaInset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_23DFB80D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  int EnumCaseMultiPayload;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  void (*v100)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t *v131;

  v131 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v129 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v111 = (uint64_t)&v109 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v118 = (uint64_t)&v109 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v122 = (uint64_t)&v109 - v12;
  v13 = type metadata accessor for AccessoryControlInfo(0);
  v127 = *(_QWORD *)(v13 - 8);
  v128 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v124 = (uint64_t)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v110 = (uint64_t)&v109 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v117 = (uint64_t)&v109 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v113 = (uint64_t)&v109 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v114 = (uint64_t)&v109 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v115 = (uint64_t)&v109 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v116 = (uint64_t)&v109 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v112 = (uint64_t)&v109 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v121 = (uint64_t)&v109 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v120 = (uint64_t)&v109 - v32;
  v130 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  v33 = MEMORY[0x24BDAC7A8](v130);
  v35 = (char *)&v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v119 = (uint64_t)&v109 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v109 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v109 - v41;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F308);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v109 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = AccessoryControlGroup.controls.getter();
  v47 = a2;
  v48 = AccessoryControlGroup.controls.getter();
  v49 = sub_23DFB8D24(v46, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v49 + 16);
  v51 = type metadata accessor for AccessoryControlGroup(0);
  v52 = v51;
  if (!v50)
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v131, 1, 1);
    return swift_bridgeObjectRelease();
  }
  v53 = *(int *)(v51 + 20);
  v55 = *(_QWORD *)(a1 + v53);
  v54 = *(_QWORD *)(a1 + v53 + 8);
  v56 = HIBYTE(v54) & 0xF;
  if ((v54 & 0x2000000000000000) == 0)
    v56 = v55 & 0xFFFFFFFFFFFFLL;
  v126 = v52;
  if (v56)
  {
    v123 = v55;
  }
  else
  {
    v54 = *(_QWORD *)(v47 + v53 + 8);
    v123 = *(_QWORD *)(v47 + v53);
  }
  v125 = v54;
  swift_bridgeObjectRetain();
  v58 = (uint64_t)&v45[*(int *)(v43 + 48)];
  sub_23DF73E10(a1, (uint64_t)v45, type metadata accessor for AccessoryControlGroup.LayoutType);
  sub_23DF73E10(v47, v58, type metadata accessor for AccessoryControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23DF73E10((uint64_t)v45, (uint64_t)v35, type metadata accessor for AccessoryControlGroup.LayoutType);
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0);
    v64 = (uint64_t)&v35[*(int *)(v63 + 48)];
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      v82 = v58 + *(int *)(v63 + 48);
      v83 = (uint64_t)v35;
      v84 = v116;
      sub_23DF89384(v83, v116, type metadata accessor for AccessoryControlInfo);
      v85 = v115;
      sub_23DF89384(v58, v115, type metadata accessor for AccessoryControlInfo);
      v86 = v114;
      sub_23DF89384(v64, v114, type metadata accessor for AccessoryControlInfo);
      v87 = v113;
      sub_23DF89384(v82, v113, type metadata accessor for AccessoryControlInfo);
      v88 = v118;
      sub_23DFB9094(v84, v85, v118);
      v89 = v128;
      v90 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
      if (v90(v88, 1, v128) == 1)
      {
        swift_bridgeObjectRelease();
        sub_23DF73E54(v87, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v86, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v85, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v84, type metadata accessor for AccessoryControlInfo);
        v91 = v131;
      }
      else
      {
        sub_23DF89384(v88, v117, type metadata accessor for AccessoryControlInfo);
        v88 = v111;
        sub_23DFB9094(v86, v87, v111);
        sub_23DF73E54(v87, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v86, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v85, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v84, type metadata accessor for AccessoryControlInfo);
        v102 = v90(v88, 1, v89);
        v91 = v131;
        if (v102 != 1)
        {
          v103 = v110;
          sub_23DF89384(v88, v110, type metadata accessor for AccessoryControlInfo);
          v104 = (uint64_t)v91 + *(int *)(v63 + 48);
          sub_23DF89384(v117, (uint64_t)v91, type metadata accessor for AccessoryControlInfo);
          sub_23DF89384(v103, v104, type metadata accessor for AccessoryControlInfo);
          swift_storeEnumTagMultiPayload();
          v105 = v126;
          v106 = (uint64_t *)((char *)v91 + *(int *)(v126 + 24));
          v107 = (uint64_t *)((char *)v91 + *(int *)(v126 + 20));
          v108 = v125;
          *v107 = v123;
          v107[1] = v108;
          *v106 = 0;
          v106[1] = 0;
          v100 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v105 - 8) + 56);
          v101 = v91;
          goto LABEL_34;
        }
        sub_23DF73E54(v117, type metadata accessor for AccessoryControlInfo);
        swift_bridgeObjectRelease();
      }
      sub_23DF89C7C(v88, &qword_256D1F300);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v91, 1, 1);
      goto LABEL_35;
    }
    sub_23DF73E54(v64, type metadata accessor for AccessoryControlInfo);
LABEL_20:
    sub_23DF73E54((uint64_t)v35, type metadata accessor for AccessoryControlInfo);
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_23DF73E10((uint64_t)v45, (uint64_t)v42, type metadata accessor for AccessoryControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      swift_bridgeObjectRelease();
      v65 = v120;
      sub_23DF89384((uint64_t)v42, v120, type metadata accessor for AccessoryControlInfo);
      v66 = v121;
      sub_23DF89384(v58, v121, type metadata accessor for AccessoryControlInfo);
      v67 = v122;
      sub_23DFB9094(v65, v66, v122);
      sub_23DF73E54(v66, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E54(v65, type metadata accessor for AccessoryControlInfo);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v67, 1, v128) == 1)
      {
        swift_bridgeObjectRelease();
        sub_23DF89C7C(v67, &qword_256D1F300);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v131, 1, 1);
LABEL_35:
        v81 = (uint64_t)v45;
        return sub_23DF73E54(v81, type metadata accessor for AccessoryControlGroup.LayoutType);
      }
      v92 = v67;
      v93 = v112;
      sub_23DF89384(v92, v112, type metadata accessor for AccessoryControlInfo);
      v94 = v93;
      v95 = v131;
      sub_23DF89384(v94, (uint64_t)v131, type metadata accessor for AccessoryControlInfo);
      swift_storeEnumTagMultiPayload();
      v96 = v126;
      v97 = (uint64_t *)((char *)v95 + *(int *)(v126 + 24));
      v98 = (uint64_t *)((char *)v95 + *(int *)(v126 + 20));
      v99 = v125;
      *v98 = v123;
      v98[1] = v99;
      *v97 = 0;
      v97[1] = 0;
      v100 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
      v101 = v95;
LABEL_34:
      v100(v101, 0, 1);
      goto LABEL_35;
    }
    v35 = v42;
    goto LABEL_20;
  }
  sub_23DF73E10((uint64_t)v45, (uint64_t)v40, type metadata accessor for AccessoryControlGroup.LayoutType);
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23DF73E10(v58, v119, type metadata accessor for AccessoryControlGroup.LayoutType);
    swift_bridgeObjectRelease();
    v60 = (uint64_t)v129;
    if (v50 < 2)
      goto LABEL_12;
LABEL_22:
    v68 = v131;
    *v131 = v49;
    swift_storeEnumTagMultiPayload();
    v69 = v126;
    v70 = (uint64_t *)((char *)v68 + *(int *)(v126 + 24));
    v71 = (uint64_t *)((char *)v68 + *(int *)(v126 + 20));
    v72 = v125;
    *v71 = v123;
    v71[1] = v72;
    *v70 = 0;
    v70[1] = 0;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1);
LABEL_26:
    sub_23DF73E54(v58, type metadata accessor for AccessoryControlGroup.LayoutType);
    v81 = (uint64_t)v45;
    return sub_23DF73E54(v81, type metadata accessor for AccessoryControlGroup.LayoutType);
  }
LABEL_21:
  v60 = (uint64_t)v129;
  if (v50 != 1)
    goto LABEL_22;
LABEL_12:
  if (*(_QWORD *)(v49 + 16))
  {
    v61 = v127;
    sub_23DF73E10(v49 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80)), v60, type metadata accessor for AccessoryControlInfo);
    v62 = 0;
  }
  else
  {
    v62 = 1;
    v61 = v127;
  }
  v73 = v128;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v60, v62, 1, v128);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v60, 1, v73);
  if ((_DWORD)result != 1)
  {
    v74 = v124;
    sub_23DF89384(v60, v124, type metadata accessor for AccessoryControlInfo);
    v75 = v74;
    v76 = v131;
    sub_23DF89384(v75, (uint64_t)v131, type metadata accessor for AccessoryControlInfo);
    swift_storeEnumTagMultiPayload();
    v77 = v126;
    v78 = (uint64_t *)((char *)v76 + *(int *)(v126 + 24));
    v79 = (uint64_t *)((char *)v76 + *(int *)(v126 + 20));
    v80 = v125;
    *v79 = v123;
    v79[1] = v80;
    *v78 = 0;
    v78[1] = 0;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 0, 1);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DFB8AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[16];

  v5 = type metadata accessor for AccessoryControlInfo(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v27[-v9];
  v11 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)&v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)&v27[-v15];
  sub_23DF73E10(v2, a2, type metadata accessor for AccessoryControlGroup);
  sub_23DF73E10(v2, (uint64_t)v16, type metadata accessor for AccessoryControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)EnumCaseMultiPayload)
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0);
    v21 = a2;
    v22 = (char *)v16 + *(int *)(v20 + 48);
    sub_23DF89384((uint64_t)v16, (uint64_t)v10, type metadata accessor for AccessoryControlInfo);
    v23 = (uint64_t)v22;
    a2 = v21;
    sub_23DF89384(v23, (uint64_t)v8, type metadata accessor for AccessoryControlInfo);
    v24 = (uint64_t)v14 + *(int *)(v20 + 48);
    sub_23DFB9548(a1, (uint64_t)v10, (uint64_t)v14);
    sub_23DFB9548(a1, (uint64_t)v8, v24);
    sub_23DF73E54((uint64_t)v8, type metadata accessor for AccessoryControlInfo);
    v25 = (uint64_t)v10;
LABEL_6:
    sub_23DF73E54(v25, type metadata accessor for AccessoryControlInfo);
    goto LABEL_7;
  }
  if ((_DWORD)EnumCaseMultiPayload != 1)
  {
    sub_23DF89384((uint64_t)v16, (uint64_t)v10, type metadata accessor for AccessoryControlInfo);
    sub_23DFB9548(a1, (uint64_t)v10, (uint64_t)v14);
    v25 = (uint64_t)v10;
    goto LABEL_6;
  }
  v18 = *v16;
  MEMORY[0x24BDAC7A8](EnumCaseMultiPayload);
  *(_QWORD *)&v27[-16] = a1;
  v19 = sub_23DFB99D4((void (*)(uint64_t))sub_23DFBABDC, (uint64_t)&v27[-32], v18, (uint64_t)v27, type metadata accessor for AccessoryControlInfo, (void (*)(BOOL, unint64_t, uint64_t))sub_23E09E230);
  swift_bridgeObjectRelease();
  *v14 = v19;
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return sub_23DFBAC08((uint64_t)v14, a2);
}

uint64_t sub_23DFB8D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for AccessoryControlInfo(0);
  v7 = MEMORY[0x24BDAC7A8](v42);
  v34 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)v33 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v35 = (uint64_t)v33 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v33 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v33 - v17;
  v43 = a2;
  v40 = *(_QWORD *)(a1 + 16);
  if (v40)
  {
    v37 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v39 = a1 + v37;
    v19 = v16;
    v20 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain();
    v33[1] = a1;
    swift_bridgeObjectRetain();
    v21 = 0;
    v38 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      result = sub_23DF73E10(v39 + v20 * v21, (uint64_t)v18, type metadata accessor for AccessoryControlInfo);
      v24 = v43;
      v25 = *(_QWORD *)(v43 + 16);
      if (v25)
        break;
LABEL_5:
      ++v21;
      sub_23DF73E54((uint64_t)v18, type metadata accessor for AccessoryControlInfo);
      if (v21 == v40)
      {
        swift_bridgeObjectRelease();
        v32 = v38;
        goto LABEL_19;
      }
    }
    v41 = v21;
    v26 = 0;
    v27 = v43 + v37;
    while (v26 < *(_QWORD *)(v24 + 16))
    {
      sub_23DF73E10(v27, (uint64_t)v15, type metadata accessor for AccessoryControlInfo);
      sub_23DFB9094((uint64_t)v18, (uint64_t)v15, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v42) != 1)
      {
        v28 = v35;
        sub_23DF89384((uint64_t)v6, v35, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E10(v28, v36, type metadata accessor for AccessoryControlInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v29 = v38;
        else
          v29 = sub_23E007B80(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
        v31 = *(_QWORD *)(v29 + 16);
        v30 = *(_QWORD *)(v29 + 24);
        if (v31 >= v30 >> 1)
          v29 = sub_23E007B80(v30 > 1, v31 + 1, 1, v29);
        *(_QWORD *)(v29 + 16) = v31 + 1;
        v38 = v29;
        sub_23DF89384(v36, v29 + v37 + v31 * v20, type metadata accessor for AccessoryControlInfo);
        v22 = v34;
        sub_23DFB9B48(v26, (uint64_t (*)(uint64_t))sub_23E09EDF8, type metadata accessor for AccessoryControlInfo, v34);
        sub_23DF73E54(v22, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54(v35, type metadata accessor for AccessoryControlInfo);
        sub_23DF73E54((uint64_t)v15, type metadata accessor for AccessoryControlInfo);
LABEL_4:
        v21 = v41;
        goto LABEL_5;
      }
      ++v26;
      sub_23DF73E54((uint64_t)v15, type metadata accessor for AccessoryControlInfo);
      result = sub_23DF89C7C((uint64_t)v6, &qword_256D1F300);
      v27 += v20;
      if (v25 == v26)
        goto LABEL_4;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v32 = MEMORY[0x24BEE4AF8];
LABEL_19:
    swift_bridgeObjectRelease();
    return v32;
  }
  return result;
}

uint64_t sub_23DFB9094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  char *v48;
  unsigned int v49;
  char v50;
  unsigned int v51;
  unsigned int v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  char v59;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v76 = a3;
  v5 = (int *)type metadata accessor for AccessoryControlInfo(0);
  v74 = *((_QWORD *)v5 - 1);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v73 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v68 - v8;
  v9 = sub_23E134C80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F310);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for AccessoryControlInfo.State(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v5[5];
  v75 = a1;
  v72 = a2;
  sub_23DFB9C90(a1 + v20, a2 + v20, 1, v15);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23DF89C7C((uint64_t)v15, &qword_256D1F310);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v74 + 56))(v76, 1, 1, v5);
  }
  v22 = v71;
  v70 = v12;
  sub_23DF89384((uint64_t)v15, (uint64_t)v19, type metadata accessor for AccessoryControlInfo.State);
  v23 = sub_23E134C2C();
  v25 = v24;
  v26 = v72;
  v27 = sub_23E134C2C();
  v69 = v10;
  if (v23 == v27 && v25 == v28)
  {
    swift_bridgeObjectRelease_n();
    v29 = (uint64_t)v22;
LABEL_8:
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v32 = v70;
    v34 = v26;
    v31(v70, v26, v9);
    v33 = v75;
    goto LABEL_9;
  }
  v30 = sub_23E137614();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = (uint64_t)v22;
  if ((v30 & 1) == 0)
    goto LABEL_8;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v32 = v70;
  v33 = v75;
  v31(v70, v75, v9);
  v34 = v26;
LABEL_9:
  v68 = v9;
  v31((char *)v29, (uint64_t)v32, v9);
  sub_23DF73E10((uint64_t)v19, v29 + v5[5], type metadata accessor for AccessoryControlInfo.State);
  v77 = *(_QWORD *)(v33 + v5[11]);
  swift_bridgeObjectRetain();
  v35 = swift_bridgeObjectRetain();
  sub_23DF84114(v35);
  v36 = (uint64_t *)(v29 + v5[7]);
  v37 = v5[9];
  *(_QWORD *)(v29 + v5[11]) = v77;
  v72 = v5[6];
  *(_BYTE *)(v29 + v72) = 0;
  *v36 = 0;
  v36[1] = 0;
  v38 = (uint64_t)v19;
  v39 = v32;
  v40 = v29 + v5[8];
  *(_WORD *)v40 = 1028;
  v75 = v37;
  *(_BYTE *)(v29 + v37) = 12;
  v71 = (char *)v5[10];
  v71[v29] = 1;
  v41 = sub_23DFBAAB4(v33, v34);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v68);
  sub_23DF73E54(v38, type metadata accessor for AccessoryControlInfo.State);
  swift_bridgeObjectRelease();
  v44 = 0;
  *v36 = v41;
  v36[1] = v43;
  v45 = v5[8];
  v46 = v33 + v45;
  v47 = *(unsigned __int8 *)(v33 + v45);
  v48 = (char *)(v34 + v45);
  v49 = *v48;
  if (v47 <= v49)
    v50 = *v48;
  else
    v50 = v47;
  if (v49 == 4)
    v50 = v47;
  v51 = *(unsigned __int8 *)(v46 + 1);
  v52 = v48[1];
  if (v47 == 4)
    v53 = v49;
  else
    v53 = v50;
  if (v51 >= v52)
    v54 = v52;
  else
    v54 = v51;
  if (v52 == 4)
    v54 = v51;
  if (v51 != 4)
    LOBYTE(v52) = v54;
  *(_BYTE *)v40 = v53;
  *(_BYTE *)(v40 + 1) = v52;
  v55 = v5[6];
  if (*(_BYTE *)(v33 + v55) == 1)
    v44 = *(_BYTE *)(v34 + v55);
  *(_BYTE *)(v29 + v72) = v44;
  v56 = v5[9];
  v57 = *(unsigned __int8 *)(v33 + v56);
  v58 = *(unsigned __int8 *)(v34 + v56);
  if (v57 == v58)
    v59 = v57;
  else
    v59 = 12;
  if (v58 == 12 || v57 == 12)
    v61 = 12;
  else
    v61 = v59;
  *(_BYTE *)(v29 + v75) = v61;
  v62 = *(_BYTE *)(v33 + v5[10]);
  v63 = v73;
  sub_23DF73E10(v34, v73, type metadata accessor for AccessoryControlInfo);
  v64 = v76;
  if ((v62 & 1) != 0)
    v65 = 1;
  else
    v65 = *(_BYTE *)(v63 + v5[10]);
  v66 = v74;
  v67 = v71;
  sub_23DF73E54(v63, type metadata accessor for AccessoryControlInfo);
  v67[v29] = v65;
  sub_23DF73E10(v29, v64, type metadata accessor for AccessoryControlInfo);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v66 + 56))(v64, 0, 1, v5);
  return sub_23DF73E54(v29, type metadata accessor for AccessoryControlInfo);
}

uint64_t sub_23DFB9548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v45 = a1;
  v43 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F320);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEC8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t *)((char *)&v38 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v38 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v38 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)((char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v38 - v22;
  sub_23DFB7A04((uint64_t)&v38 - v22);
  v45 = a2;
  sub_23DFAC0EC((uint64_t)v16);
  v44 = v23;
  sub_23DF89C1C((uint64_t)v23, (uint64_t)v14, &qword_256D1D858);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v24(v14, 0, 1, v17);
  v25 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_23DF89C1C((uint64_t)v16, (uint64_t)v6, &qword_256D1EEC8);
  sub_23DF89C1C((uint64_t)v14, v25, &qword_256D1EEC8);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v26((uint64_t)v6, 1, v17) == 1)
  {
    sub_23DF89C7C((uint64_t)v14, &qword_256D1EEC8);
    sub_23DF89C7C((uint64_t)v16, &qword_256D1EEC8);
    if (v26(v25, 1, v17) == 1)
    {
LABEL_3:
      sub_23DF89C7C((uint64_t)v6, &qword_256D1EEC8);
      sub_23DF89C7C((uint64_t)v44, &qword_256D1D858);
      return sub_23DF73E10(v45, v43, type metadata accessor for AccessoryControlInfo);
    }
    v40 = v6;
    v30 = &qword_256D1F320;
    v32 = (uint64_t)v42;
    v31 = v43;
  }
  else
  {
    v39 = v16;
    v40 = v6;
    v28 = v41;
    sub_23DF89C1C((uint64_t)v6, (uint64_t)v41, &qword_256D1EEC8);
    if (v26(v25, 1, v17) == 1)
    {
      v29 = (uint64_t)v28;
      v30 = &qword_256D1F320;
    }
    else
    {
      sub_23DF89340(v25, (uint64_t)v21, &qword_256D1D858);
      v33 = *v28 == *v21 && v28[1] == v21[1];
      if (v33 || (sub_23E137614() & 1) != 0)
      {
        type metadata accessor for IconDescriptor();
        if ((sub_23E135904() & 1) != 0)
        {
          if ((v34 = *(int *)(v17 + 28), *(_QWORD *)((char *)v28 + v34) == *(_QWORD *)((char *)v21 + v34))
            && *(_QWORD *)((char *)v28 + v34 + 8) == *(_QWORD *)((char *)v21 + v34 + 8)
            || (sub_23E137614() & 1) != 0)
          {
            if ((sub_23E135904() & 1) != 0)
            {
              sub_23DF89C7C((uint64_t)v21, &qword_256D1D858);
              sub_23DF89C7C((uint64_t)v14, &qword_256D1EEC8);
              sub_23DF89C7C((uint64_t)v39, &qword_256D1EEC8);
              sub_23DF89C7C((uint64_t)v28, &qword_256D1D858);
              v6 = v40;
              goto LABEL_3;
            }
          }
        }
      }
      v29 = (uint64_t)v28;
      sub_23DF89C7C((uint64_t)v21, &qword_256D1D858);
      v30 = &qword_256D1EEC8;
    }
    v32 = (uint64_t)v42;
    v31 = v43;
    v35 = (uint64_t)v39;
    sub_23DF89C7C((uint64_t)v14, &qword_256D1EEC8);
    sub_23DF89C7C(v35, &qword_256D1EEC8);
    sub_23DF89C7C(v29, &qword_256D1D858);
  }
  v36 = v45;
  v37 = (uint64_t)v44;
  sub_23DF89C7C((uint64_t)v40, v30);
  sub_23DF73E10(v36, v31, type metadata accessor for AccessoryControlInfo);
  sub_23DF89C1C(v37, v32, &qword_256D1D858);
  v24((char *)v32, 0, 1, v17);
  sub_23DFAC324(v32);
  return sub_23DF89C7C(v37, &qword_256D1D858);
}

uint64_t sub_23DFB99B0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23DFB99D4(a1, a2, a3, a4, type metadata accessor for Device.Control, (void (*)(BOOL, unint64_t, uint64_t))sub_23E09E1AC);
}

uint64_t sub_23DFB99D4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(BOOL, unint64_t, uint64_t);
  unint64_t v23;
  uint64_t (*v24)(_QWORD);
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;

  v8 = v6;
  v25 = a1;
  v26 = a2;
  v24 = a5;
  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a3 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v27 = MEMORY[0x24BEE4AF8];
    v22 = a6;
    a6(0, v14, 0);
    v15 = v27;
    v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v16 = a3 + v23;
    v17 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      v25(v16);
      if (v8)
        break;
      v8 = 0;
      v27 = v15;
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        v22(v18 > 1, v19 + 1, 1);
        v15 = v27;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      sub_23DF89384((uint64_t)v13, v15 + v23 + v19 * v17, v24);
      v16 += v17;
      if (!--v14)
        return v15;
    }
    swift_release();
  }
  return v15;
}

uint64_t sub_23DFB9B34@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23DFB9B48(a1, (uint64_t (*)(uint64_t))sub_23E09EDE4, type metadata accessor for Device.Control, a2);
}

uint64_t sub_23DFB9B48@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v9 = *v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a2(v9);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = v10 - 1;
  v12 = *(_QWORD *)(a3(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)) + v13 * a1;
  result = sub_23DF89384(v14, a4, a3);
  if ((uint64_t)(v11 - a1) < 0)
  {
LABEL_15:
    result = sub_23E1375A8();
    __break(1u);
    return result;
  }
  if (v13 > 0 || v14 >= v14 + v13 + v13 * (v11 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v13)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v9 + 16) = v11;
  *v4 = v9;
  return result;
}

uint64_t sub_23DFB9C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int EnumCaseMultiPayload;
  int v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  unsigned __int8 v74;
  char v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __int16 v82;
  char v83;
  char v84;
  char v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int16 v103;
  uint64_t v104;
  unsigned __int8 v105;
  uint64_t v106;
  unsigned __int8 v107;
  __int16 v108;
  uint64_t (*v109)(uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  char v119;
  __int16 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  int v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  char *v141;
  unsigned __int8 v142[4];
  __int16 v143;
  char v144;
  __int16 v145;
  unsigned __int8 v146;
  __int128 v147;
  uint64_t v148;
  unsigned __int8 v149;
  uint64_t v150;
  unsigned __int8 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  char v157;

  v127 = a3;
  v140 = a1;
  v141 = (char *)a2;
  v139 = a4;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v136 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v137 = (uint64_t)&v122 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F318);
  MEMORY[0x24BDAC7A8](v8);
  v133 = (uint64_t)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for Device.Control.IncrementalConfig(0);
  v129 = *(_QWORD *)(v130 - 8);
  v10 = MEMORY[0x24BDAC7A8](v130);
  v124 = (uint64_t)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v134 = (uint64_t *)((char *)&v122 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v135 = (uint64_t)&v122 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v131 = (uint64_t)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v132 = (uint64_t)&v122 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v125 = (uint64_t)&v122 - v20;
  v123 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  v21 = MEMORY[0x24BDAC7A8](v123);
  v23 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v126 = (uint64_t *)((char *)&v122 - v25);
  MEMORY[0x24BDAC7A8](v24);
  v128 = (uint64_t *)((char *)&v122 - v26);
  v27 = type metadata accessor for AccessoryControlInfo.State(0);
  v138 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v122 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v122 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v122 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v122 - v40;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF20);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v122 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = &v45[*(int *)(v43 + 48)];
  sub_23DF73E10(v140, (uint64_t)v45, type metadata accessor for AccessoryControlInfo.State);
  sub_23DF73E10((uint64_t)v141, (uint64_t)v46, type metadata accessor for AccessoryControlInfo.State);
  v140 = v27;
  v141 = v45;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_23DF73E10((uint64_t)v141, (uint64_t)v41, type metadata accessor for AccessoryControlInfo.State);
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40);
      v48 = *(int *)(v47 + 48);
      v49 = v41[v48];
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v111 = (uint64_t)&v46[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48)];
        sub_23DF89384((uint64_t)v41, (uint64_t)v23, type metadata accessor for Device.Control.BinaryViewConfig);
        v112 = v125;
        sub_23DF89340(v111, v125, &qword_256D1D5D8);
        if ((v127 & 1) != 0)
        {
          v113 = v139;
          v114 = (char *)v139 + *(int *)(v47 + 48);
          sub_23DF73E10((uint64_t)v23, (uint64_t)v139, type metadata accessor for Device.Control.BinaryViewConfig);
          LOBYTE(v152) = v49;
          sub_23E0DAA3C((unsigned __int8 *)&v152, v112, v114);
          sub_23DF89C7C(v112, &qword_256D1D5D8);
          sub_23DF73E54((uint64_t)v23, type metadata accessor for Device.Control.BinaryViewConfig);
          v115 = v140;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v113, 0, 1, v115);
        }
        else
        {
          sub_23DF89C7C(v112, &qword_256D1D5D8);
          sub_23DF73E54((uint64_t)v23, type metadata accessor for Device.Control.BinaryViewConfig);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v139, 1, 1, v140);
        }
        sub_23DF73E54((uint64_t)v46, type metadata accessor for Device.Control.IncrementalConfig);
        return sub_23DF73E54((uint64_t)v141, type metadata accessor for AccessoryControlInfo.State);
      }
      if (EnumCaseMultiPayload)
      {
        v109 = type metadata accessor for Device.Control.BinaryViewConfig;
        v110 = (uint64_t)v41;
        goto LABEL_41;
      }
      v51 = v46[v48];
      v52 = v128;
      sub_23DF89384((uint64_t)v41, (uint64_t)v128, type metadata accessor for Device.Control.BinaryViewConfig);
      v53 = v126;
      sub_23DF89384((uint64_t)v46, (uint64_t)v126, type metadata accessor for Device.Control.BinaryViewConfig);
      if ((*v52 != *v53 || v52[1] != v53[1]) && (sub_23E137614() & 1) == 0
        || (type metadata accessor for IconDescriptor(), (sub_23E135904() & 1) == 0)
        || ((v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28),
             *(_QWORD *)((char *)v52 + v54) != *(_QWORD *)((char *)v53 + v54))
         || *(_QWORD *)((char *)v52 + v54 + 8) != *(_QWORD *)((char *)v53 + v54 + 8))
        && (sub_23E137614() & 1) == 0
        || (sub_23E135904() & 1) == 0
        || (sub_23E136BDC() & 1) == 0
        || (_s22HomeAccessoryControlUI0C12TextModifierV6ConfigO2eeoiySbAE_AEtFZ_0((uint64_t)v52 + *(int *)(v123 + 24), (uint64_t)v53 + *(int *)(v123 + 24)) & 1) == 0)
      {
        sub_23DF73E54((uint64_t)v53, type metadata accessor for Device.Control.BinaryViewConfig);
        sub_23DF73E54((uint64_t)v52, type metadata accessor for Device.Control.BinaryViewConfig);
        goto LABEL_44;
      }
      sub_23DF73E54((uint64_t)v53, type metadata accessor for Device.Control.BinaryViewConfig);
      v55 = *(int *)(v47 + 48);
      v56 = v139;
      sub_23DF89384((uint64_t)v52, (uint64_t)v139, type metadata accessor for Device.Control.BinaryViewConfig);
      v57 = v51;
      if (v49 != 2)
      {
        v57 = v49;
        if (v51 != 2)
          v57 = (v49 | v51) & 1;
      }
      *((_BYTE *)v56 + v55) = v57;
      v58 = v140;
      goto LABEL_46;
    case 1u:
      sub_23DF73E10((uint64_t)v141, (uint64_t)v39, type metadata accessor for AccessoryControlInfo.State);
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30);
      v60 = *(int *)(v59 + 48);
      v61 = (uint64_t)&v39[v60];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_23DF89C7C((uint64_t)&v39[v60], &qword_256D1D5D8);
        v109 = type metadata accessor for Device.Control.IncrementalConfig;
        v110 = (uint64_t)v39;
LABEL_41:
        sub_23DF73E54(v110, v109);
        goto LABEL_42;
      }
      v62 = (uint64_t)v39;
      v63 = v135;
      sub_23DF89384(v62, v135, type metadata accessor for Device.Control.IncrementalConfig);
      v64 = v134;
      sub_23DF89384((uint64_t)v46, (uint64_t)v134, type metadata accessor for Device.Control.IncrementalConfig);
      v65 = v132;
      sub_23DF89340(v61, v132, &qword_256D1D5D8);
      v66 = v131;
      sub_23DF89340((uint64_t)&v46[v60], v131, &qword_256D1D5D8);
      v67 = v133;
      sub_23E0DAC28(v64, v133);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v67, 1, v130) == 1)
      {
        sub_23DF89C7C(v66, &qword_256D1D5D8);
        sub_23DF89C7C(v65, &qword_256D1D5D8);
        sub_23DF73E54((uint64_t)v64, type metadata accessor for Device.Control.IncrementalConfig);
        sub_23DF73E54(v63, type metadata accessor for Device.Control.IncrementalConfig);
        sub_23DF89C7C(v67, &qword_256D1F318);
        goto LABEL_44;
      }
      v117 = v124;
      sub_23DF89384(v67, v124, type metadata accessor for Device.Control.IncrementalConfig);
      v56 = v139;
      v118 = (uint64_t)v139 + *(int *)(v59 + 48);
      sub_23DF73E10(v117, (uint64_t)v139, type metadata accessor for Device.Control.IncrementalConfig);
      sub_23E0DB148(v65, v66, v118);
      sub_23DF73E54(v117, type metadata accessor for Device.Control.IncrementalConfig);
      sub_23DF89C7C(v66, &qword_256D1D5D8);
      sub_23DF89C7C(v65, &qword_256D1D5D8);
      sub_23DF73E54((uint64_t)v64, type metadata accessor for Device.Control.IncrementalConfig);
      sub_23DF73E54(v63, type metadata accessor for Device.Control.IncrementalConfig);
      v58 = v140;
LABEL_46:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v56, 0, 1, v58);
      return sub_23DF73E54((uint64_t)v141, type metadata accessor for AccessoryControlInfo.State);
    case 2u:
      sub_23DF73E10((uint64_t)v141, (uint64_t)v36, type metadata accessor for AccessoryControlInfo.State);
      v68 = *(_QWORD *)v36;
      v69 = v36[8];
      v70 = *((_QWORD *)v36 + 2);
      v71 = v36[24];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      v72 = v46[8];
      v73 = *((_QWORD *)v46 + 2);
      v74 = v46[24];
      v75 = sub_23E11C790(v68, *(_QWORD *)v46);
      swift_bridgeObjectRelease();
      if ((v75 & 1) == 0 || ((v69 ^ v72) & 1) != 0)
      {
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v139, 1, 1, v140);
        swift_bridgeObjectRelease();
        return sub_23DF73E54((uint64_t)v141, type metadata accessor for AccessoryControlInfo.State);
      }
      if (v71)
        v76 = v73;
      else
        v76 = v70;
      v77 = v139;
      *v139 = v68;
      *((_BYTE *)v77 + 8) = v69;
      v77[2] = v76;
      *((_BYTE *)v77 + 24) = v71 & v74;
      v78 = v140;
      goto LABEL_53;
    case 3u:
      sub_23DF73E10((uint64_t)v141, (uint64_t)v33, type metadata accessor for AccessoryControlInfo.State);
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28);
      v80 = *(int *)(v79 + 48);
      v81 = &v33[v80];
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        LODWORD(v135) = v33[10];
        LODWORD(v134) = *((unsigned __int16 *)v33 + 4);
        LODWORD(v133) = v33[6];
        v82 = *((_WORD *)v33 + 2);
        v83 = v33[2];
        v84 = v33[1];
        v85 = *v33;
        LODWORD(v132) = *v46;
        v86 = v46[1];
        LODWORD(v131) = v46[2];
        LODWORD(v130) = *((unsigned __int16 *)v46 + 2);
        LODWORD(v129) = v46[6];
        LODWORD(v128) = *((unsigned __int16 *)v46 + 4);
        v87 = v46[10];
        v88 = (uint64_t)v81;
        v89 = v137;
        sub_23DF89340(v88, v137, &qword_256D1D5E8);
        v90 = (uint64_t)&v46[v80];
        v91 = v136;
        sub_23DF89340(v90, v136, &qword_256D1D5E8);
        LOBYTE(v147) = v85;
        BYTE1(v147) = v84;
        BYTE2(v147) = v83;
        WORD2(v147) = v82;
        BYTE6(v147) = v133;
        WORD4(v147) = (_WORD)v134;
        BYTE10(v147) = v135;
        v142[0] = v132;
        v142[1] = v86;
        v142[2] = v131;
        v143 = v130;
        v144 = v129;
        v145 = (__int16)v128;
        v146 = v87;
        sub_23E0DB810(v142, (uint64_t)&v152);
        v92 = v152;
        if (v152 == 2)
        {
          sub_23DF89C7C(v91, &qword_256D1D5E8);
          sub_23DF89C7C(v89, &qword_256D1D5E8);
LABEL_44:
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v139, 1, 1, v140);
        }
        else
        {
          v119 = BYTE2(v153);
          v120 = v153;
          v77 = v139;
          v121 = (uint64_t)v139 + *(int *)(v79 + 48);
          *(_BYTE *)v139 = v152 & 1;
          *((_BYTE *)v77 + 1) = BYTE1(v92) & 1;
          *((_BYTE *)v77 + 2) = BYTE2(v92) & 1;
          *((_WORD *)v77 + 2) = WORD2(v92);
          *((_BYTE *)v77 + 6) = BYTE6(v92) & 1;
          *((_WORD *)v77 + 4) = v120;
          *((_BYTE *)v77 + 10) = v119 & 1;
          sub_23E0DB9AC(v89, v91, v121);
          sub_23DF89C7C(v91, &qword_256D1D5E8);
          sub_23DF89C7C(v89, &qword_256D1D5E8);
          v78 = v140;
LABEL_53:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v77, 0, 1, v78);
        }
        return sub_23DF73E54((uint64_t)v141, type metadata accessor for AccessoryControlInfo.State);
      }
      else
      {
        sub_23DF89C7C((uint64_t)&v33[v80], &qword_256D1D5E8);
LABEL_42:
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v139, 1, 1, v140);
        return sub_23DF89C7C((uint64_t)v141, &qword_256D1EF20);
      }
    case 5u:
      sub_23DF73E10((uint64_t)v141, (uint64_t)v30, type metadata accessor for AccessoryControlInfo.State);
      v93 = *(_QWORD *)v30;
      v94 = *((_QWORD *)v30 + 1);
      v95 = *((_QWORD *)v30 + 2);
      v96 = v30[24];
      v97 = *((_QWORD *)v30 + 4);
      v98 = v30[40];
      v99 = *((_QWORD *)v30 + 6);
      v100 = *((_QWORD *)v30 + 7);
      v101 = *((_QWORD *)v30 + 8);
      v102 = *((_QWORD *)v30 + 9);
      v103 = *((_WORD *)v30 + 40);
      if (swift_getEnumCaseMultiPayload() != 5)
        goto LABEL_42;
      v104 = *((_QWORD *)v46 + 2);
      v105 = v46[24];
      v106 = *((_QWORD *)v46 + 4);
      v107 = v46[40];
      v137 = *((_QWORD *)v46 + 6);
      v136 = *((_QWORD *)v46 + 7);
      v135 = *((_QWORD *)v46 + 8);
      v134 = (_QWORD *)*((_QWORD *)v46 + 9);
      v108 = *((_WORD *)v46 + 40);
      v152 = v93;
      v153 = v94;
      v154 = v95;
      v155 = v96;
      v156 = v97;
      v157 = v98;
      v147 = *(_OWORD *)v46;
      v148 = v104;
      v149 = v105;
      v150 = v106;
      v151 = v107;
      if (!_s22HomeAccessoryControlUI6DeviceV0C0V16ThermostatConfigV2eeoiySbAG_AGtFZ_0((uint64_t)&v152, (uint64_t)&v147))
        goto LABEL_44;
      if ((_BYTE)v103 == 0xFF)
      {
        v99 = v137;
        v100 = v136;
        v101 = v135;
        v102 = (uint64_t)v134;
      }
      else
      {
        v108 = v103;
      }
      v77 = v139;
      *v139 = v93;
      v77[1] = v94;
      v77[2] = v95;
      *((_BYTE *)v77 + 24) = v96;
      v77[4] = v97;
      *((_BYTE *)v77 + 40) = v98;
      v77[6] = v99;
      v77[7] = v100;
      v77[8] = v101;
      v77[9] = v102;
      *((_WORD *)v77 + 40) = v108;
      v78 = v140;
      goto LABEL_53;
    default:
      goto LABEL_42;
  }
}

uint64_t sub_23DFBAAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(int *)(v5 + 28);
  v9 = (uint64_t *)(a1 + v8);
  v10 = *(_QWORD *)(a1 + v8 + 8);
  if (!v10)
  {
    sub_23DF73E10(a2, (uint64_t)v7, type metadata accessor for AccessoryControlInfo);
    v11 = *(_QWORD *)&v7[*(int *)(v4 + 28)];
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlInfo);
    return v11;
  }
  v11 = *v9;
  if (!*(_QWORD *)(a2 + v8 + 8))
  {
    sub_23DF73E10(a2, (uint64_t)v7, type metadata accessor for AccessoryControlInfo);
    goto LABEL_6;
  }
  v13[0] = *v9;
  v13[1] = v10;
  swift_bridgeObjectRetain();
  sub_23E1371D0();
  sub_23E1371D0();
  return v13[0];
}

uint64_t sub_23DFBABDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23DFB9548(*(_QWORD *)(v2 + 16), a1, a2);
}

uint64_t sub_23DFBAC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void (*sub_23DFBAC4C(void **a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8) - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  a1[2] = (void *)v4;
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  a1[3] = v5;
  v6 = type metadata accessor for ColorControl(0);
  sub_23DF89C1C(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_256D1ECC0);
  MEMORY[0x24264B734](v4);
  return sub_23DFBAD0C;
}

void sub_23DFBAD0C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    sub_23DF89C1C(*(_QWORD *)(a1 + 8), (uint64_t)v3, &qword_256D1D5E8);
    sub_23E136E70();
    sub_23DF89C7C((uint64_t)v2, &qword_256D1ECC0);
    v5 = (uint64_t)v4;
    v6 = &qword_256D1D5E8;
  }
  else
  {
    sub_23E136E70();
    v6 = &qword_256D1ECC0;
    v5 = (uint64_t)v2;
  }
  sub_23DF89C7C(v5, v6);
  free(v2);
  free(v4);
  free(v3);
}

uint64_t sub_23DFBADB0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_256D1F7A0);
  swift_allocObject();
  result = sub_23E0B470C(0x406F400000000000, 0);
  qword_256D1F328 = result;
  return result;
}

void sub_23DFBADFC()
{
  qword_256D1F330 = 0x404C800000000000;
}

void sub_23DFBAE10()
{
  qword_256D1F338 = 0x404C800000000000;
}

uint64_t sub_23DFBAE24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t (*v42)();
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t (*v48)();
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t (**v51)();
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _QWORD v59[2];
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t (**v65)();
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[10];
  __int128 v72;
  _BYTE v73[183];
  char v74;
  _QWORD v75[2];
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  _BYTE v87[23];
  _OWORD v88[3];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[2];
  _OWORD v98[4];
  __int16 v99;

  v2 = v1;
  v69 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F420);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F428);
  v6 = MEMORY[0x24BDAC7A8](v67);
  v8 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)v59 - v9;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F430);
  MEMORY[0x24BDAC7A8](v68);
  v11 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F438);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v60 = (_QWORD *)((char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v61 = (uint64_t)v59 - v15;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F440);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (uint64_t (**)())((char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (int *)type metadata accessor for ColorControl(0);
  v62 = *((_QWORD *)v17 - 1);
  v18 = *(_QWORD *)(v62 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F448);
  MEMORY[0x24BDAC7A8](v20);
  v66 = (char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + v17[9]) == 1)
  {
    v59[0] = v12;
    v59[1] = v20;
    v63 = v11;
    v22 = *(_OWORD *)(v2 + 80);
    v98[2] = *(_OWORD *)(v2 + 64);
    v98[3] = v22;
    v99 = *(_WORD *)(v2 + 96);
    v23 = *(_OWORD *)(v2 + 48);
    v98[0] = *(_OWORD *)(v2 + 32);
    v98[1] = v23;
    sub_23DF98EC8((uint64_t)v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)v88);
    sub_23DF98EC8((uint64_t)v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    if ((BYTE1(v89) & 1) != 0)
    {
      if (qword_256D1D280 != -1)
        swift_once();
      v24 = *(double *)&qword_256D1F330 + 12.0;
      v25 = sub_23E136FE4();
      v26 = (uint64_t)v60;
      *v60 = v25;
      *(_QWORD *)(v26 + 8) = v27;
      *(_QWORD *)(v26 + 16) = 0;
      *(_BYTE *)(v26 + 24) = 1;
      *(_QWORD *)(v26 + 32) = 0;
      *(_BYTE *)(v26 + 40) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F558);
      *(_QWORD *)&v88[0] = sub_23DFBF238();
      sub_23DF73E10(v2, (uint64_t)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ColorControl);
      v28 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v29 = (v18 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      v30 = swift_allocObject();
      sub_23DF89384((uint64_t)v19, v30 + v28, type metadata accessor for ColorControl);
      *(_QWORD *)(v30 + v29) = 0x4008000000000000;
      *(double *)(v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F560);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F568);
      sub_23DF89B88(&qword_256D1F570, &qword_256D1F560, MEMORY[0x24BEE12D8]);
      sub_23DF89B88(&qword_256D1F578, &qword_256D1F568, MEMORY[0x24BDF4A68]);
      sub_23DFC553C();
      sub_23E136F18();
      v31 = v61;
      sub_23DF89340(v26, v61, &qword_256D1F438);
      sub_23DF89C1C(v31, (uint64_t)v65, &qword_256D1F438);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F460);
      sub_23DFC4F0C();
      sub_23DF89B88(&qword_256D1F4A0, &qword_256D1F438, MEMORY[0x24BDF19A8]);
      v32 = (uint64_t)v66;
      sub_23E136480();
      sub_23DF89C7C(v31, &qword_256D1F438);
    }
    else
    {
      sub_23DF73E10(v2, (uint64_t)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ColorControl);
      v39 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v40 = swift_allocObject();
      sub_23DF89384((uint64_t)v19, v40 + v39, type metadata accessor for ColorControl);
      v41 = *(_BYTE *)(v2 + v17[11]);
      v42 = *(uint64_t (**)())(v2 + v17[10]);
      sub_23DFBE120();
      v44 = v43;
      v46 = v45;
      v47 = sub_23E136FE4();
      v49 = v48;
      if (v44 == 0.0 && v46 == 0.0)
      {
        sub_23DFC561C((uint64_t)v75);
      }
      else
      {
        v50 = sub_23E1362D0();
        sub_23DFFA510((uint64_t)v71, v44, v46);
        *(_OWORD *)&v73[71] = v71[4];
        *(_OWORD *)&v73[55] = v71[3];
        *(_OWORD *)&v73[119] = v71[7];
        *(_OWORD *)&v73[135] = v71[8];
        *(_OWORD *)&v73[151] = v71[9];
        *(_OWORD *)&v73[167] = v72;
        *(_OWORD *)&v73[87] = v71[5];
        *(_OWORD *)&v73[103] = v71[6];
        *(_OWORD *)&v73[7] = v71[0];
        *(_OWORD *)&v73[23] = v71[1];
        *(_OWORD *)&v73[39] = v71[2];
        v85 = *(_OWORD *)&v73[128];
        v86 = *(_OWORD *)&v73[144];
        *(_OWORD *)v87 = *(_OWORD *)&v73[160];
        v81 = *(_OWORD *)&v73[64];
        v82 = *(_OWORD *)&v73[80];
        v83 = *(_OWORD *)&v73[96];
        v84 = *(_OWORD *)&v73[112];
        v77 = *(_OWORD *)v73;
        v78 = *(_OWORD *)&v73[16];
        v79 = *(_OWORD *)&v73[32];
        v74 = 0;
        v75[0] = v50;
        v75[1] = 0;
        v76 = 0;
        *(_QWORD *)&v87[15] = *((_QWORD *)&v72 + 1);
        v80 = *(_OWORD *)&v73[48];
        sub_23DFC55D0((uint64_t)v75);
      }
      sub_23DF89340((uint64_t)v75, (uint64_t)&v70, &qword_256D1F588);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F590);
      sub_23DF89B88(&qword_256D1F598, &qword_256D1F590, MEMORY[0x24BDF4498]);
      sub_23DFC55D8();
      sub_23E136480();
      v51 = v65;
      *v65 = sub_23DFC5584;
      v51[1] = (uint64_t (*)())v40;
      *((_BYTE *)v51 + 16) = v41;
      v51[3] = v42;
      v51[4] = (uint64_t (*)())v47;
      v51[5] = v49;
      v52 = v97[0];
      *((_OWORD *)v51 + 13) = v96;
      *((_OWORD *)v51 + 14) = v52;
      *(_OWORD *)((char *)v51 + 233) = *(_OWORD *)((char *)v97 + 9);
      v53 = v93;
      *((_OWORD *)v51 + 9) = v92;
      *((_OWORD *)v51 + 10) = v53;
      v54 = v95;
      *((_OWORD *)v51 + 11) = v94;
      *((_OWORD *)v51 + 12) = v54;
      v55 = v89;
      *((_OWORD *)v51 + 5) = v88[2];
      *((_OWORD *)v51 + 6) = v55;
      v56 = v91;
      *((_OWORD *)v51 + 7) = v90;
      *((_OWORD *)v51 + 8) = v56;
      v57 = v88[1];
      *((_OWORD *)v51 + 3) = v88[0];
      *((_OWORD *)v51 + 4) = v57;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F460);
      sub_23DFC4F0C();
      sub_23DF89B88(&qword_256D1F4A0, &qword_256D1F438, MEMORY[0x24BDF19A8]);
      v32 = (uint64_t)v66;
      sub_23E136480();
    }
    v36 = &qword_256D1F448;
    sub_23DF89C1C(v32, (uint64_t)v63, &qword_256D1F448);
    swift_storeEnumTagMultiPayload();
    sub_23DFC4E88();
    sub_23DFC5058();
    sub_23E136480();
    v38 = v32;
  }
  else
  {
    sub_23DFBCC18((uint64_t)v5);
    v33 = *(_BYTE *)(v2 + v17[11]);
    v34 = *(_QWORD *)(v2 + v17[10]);
    sub_23DF89C1C((uint64_t)v5, (uint64_t)v8, &qword_256D1F420);
    v35 = &v8[*(int *)(v67 + 36)];
    *v35 = v33;
    *((_QWORD *)v35 + 1) = v34;
    sub_23DF89C7C((uint64_t)v5, &qword_256D1F420);
    v36 = &qword_256D1F428;
    v37 = (uint64_t)v63;
    sub_23DF89340((uint64_t)v8, (uint64_t)v63, &qword_256D1F428);
    sub_23DF89C1C(v37, (uint64_t)v11, &qword_256D1F428);
    swift_storeEnumTagMultiPayload();
    sub_23DFC4E88();
    sub_23DFC5058();
    sub_23E136480();
    v38 = v37;
  }
  return sub_23DF89C7C(v38, v36);
}

uint64_t sub_23DFBB6AC()
{
  sub_23E1366FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5A8);
  sub_23DFC5630();
  return sub_23E135D3C();
}

uint64_t sub_23DFBB724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v5 = type metadata accessor for ColorControl(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = sub_23E136024();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5C0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = sub_23E1362D0();
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5C8);
  sub_23DFBB914(a1, (uint64_t)&v14[*(int *)(v15 + 44)]);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_23DF73E10(a1, (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ColorControl);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (v10 + *(unsigned __int8 *)(v6 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v16, v11, v8);
  sub_23DF89384((uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for ColorControl);
  v19 = v23;
  sub_23DF89C1C((uint64_t)v14, v23, &qword_256D1F5C0);
  v20 = (uint64_t (**)())(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5A8) + 36));
  *v20 = sub_23DFC5838;
  v20[1] = (uint64_t (*)())v18;
  v20[2] = 0;
  v20[3] = 0;
  return sub_23DF89C7C((uint64_t)v14, &qword_256D1F5C0);
}

uint64_t sub_23DFBB914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F420);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5F0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ColorControl(0) + 36));
  if (v16 != 1)
  {
    if (qword_256D1D288 == -1)
      goto LABEL_5;
    goto LABEL_10;
  }
  if (qword_256D1D280 != -1)
LABEL_10:
    swift_once();
LABEL_5:
  sub_23E136FE4();
  sub_23E135E5C();
  v33 = v34;
  v32 = v35;
  v31 = v36;
  v30 = v37;
  v28 = v39;
  v29 = v38;
  sub_23DFBBCB4((uint64_t)v15);
  sub_23DFBCC18((uint64_t)v9);
  if (v16)
  {
    if (qword_256D1D280 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (qword_256D1D288 != -1)
LABEL_12:
    swift_once();
LABEL_9:
  sub_23E136FE4();
  sub_23E135E5C();
  v17 = v40;
  v18 = v42;
  v26 = v43;
  v27 = v41;
  v24 = v45;
  v25 = v44;
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v13, &qword_256D1F5F0);
  sub_23DF89C1C((uint64_t)v9, (uint64_t)v7, &qword_256D1F420);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v33;
  *(_BYTE *)(a2 + 24) = v32;
  *(_QWORD *)(a2 + 32) = v31;
  *(_BYTE *)(a2 + 40) = v30;
  v19 = v28;
  *(_QWORD *)(a2 + 48) = v29;
  *(_QWORD *)(a2 + 56) = v19;
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5F8);
  sub_23DF89C1C((uint64_t)v13, a2 + v20[12], &qword_256D1F5F0);
  sub_23DF89C1C((uint64_t)v7, a2 + v20[16], &qword_256D1F420);
  v21 = a2 + v20[20];
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  *(_QWORD *)(v21 + 16) = v17;
  *(_BYTE *)(v21 + 24) = v27;
  *(_QWORD *)(v21 + 32) = v18;
  *(_BYTE *)(v21 + 40) = v26;
  v22 = v24;
  *(_QWORD *)(v21 + 48) = v25;
  *(_QWORD *)(v21 + 56) = v22;
  sub_23DF89C7C((uint64_t)v9, &qword_256D1F420);
  sub_23DF89C7C((uint64_t)v15, &qword_256D1F5F0);
  sub_23DF89C7C((uint64_t)v7, &qword_256D1F420);
  return sub_23DF89C7C((uint64_t)v13, &qword_256D1F5F0);
}

uint64_t sub_23DFBBCB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  double v39;
  unsigned __int8 *v40;
  int v41;
  char *v42;
  uint64_t *v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  __int16 v99;
  unsigned __int8 v100;
  __int16 v101;
  unsigned __int8 v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v117;
  char *v118;
  _BOOL4 v119;
  unsigned __int8 *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;

  v156 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F600);
  v155 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v154 = (char *)&v117 - v6;
  v149 = sub_23E136084();
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v147 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_23E13636C();
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v144 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_23E13660C();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ColorControl(0);
  v161 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v162 = v12;
  v163 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s18ColorControlCircleVMa();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F608);
  MEMORY[0x24BDAC7A8](v125);
  v126 = (uint64_t)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F610);
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v127 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F618);
  MEMORY[0x24BDAC7A8](v124);
  v130 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F620);
  MEMORY[0x24BDAC7A8](v134);
  v131 = (uint64_t)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F628);
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x24BDAC7A8](v137);
  v135 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F630);
  MEMORY[0x24BDAC7A8](v21);
  v138 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F638);
  MEMORY[0x24BDAC7A8](v140);
  v139 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F640);
  v150 = *(_QWORD *)(v151 - 8);
  v24 = MEMORY[0x24BDAC7A8](v151);
  v141 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v143 = (char *)&v117 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v142 = (uint64_t)&v117 - v28;
  v29 = sub_23E135328();
  v159 = *(_QWORD *)(v29 - 8);
  v160 = v29;
  v30 = *(_QWORD *)(v159 + 64);
  v31 = MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v31);
  v158 = (uint64_t *)((char *)&v117 - v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F648);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v153 = (uint64_t)&v117 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v152 = (char *)&v117 - v36;
  v37 = *(unsigned __int8 *)(v1 + *(int *)(v11 + 36));
  v157 = v5;
  if (v37 == 1)
  {
    if (qword_256D1D280 != -1)
      swift_once();
    v38 = &qword_256D1F330;
  }
  else
  {
    if (qword_256D1D288 != -1)
      swift_once();
    v38 = &qword_256D1F338;
  }
  v39 = *(double *)v38;
  v40 = (unsigned __int8 *)(v1 + *(int *)(v11 + 32));
  v41 = *v40;
  v164 = v1;
  if (v41 != 1)
  {
    v49 = 1;
    v50 = (uint64_t)v163;
    v51 = (uint64_t)v152;
    v52 = v151;
    goto LABEL_18;
  }
  v118 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v10;
  v122 = v2;
  v43 = v158;
  v44 = sub_23DFBEF68(v158);
  v46 = v159;
  v45 = v160;
  v123 = *(void (**)(char *, uint64_t *, uint64_t))(v159 + 16);
  v123(v15, v43, v160);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v15, 0, 1, v45);
  v119 = v44;
  v47 = &v15[*(int *)(v13 + 20)];
  *(_QWORD *)v47 = 2;
  v47[10] = 0;
  *((_WORD *)v47 + 4) = 0;
  v15[*(int *)(v13 + 24)] = v44;
  v48 = (uint64_t)v163;
  v121 = v42;
  v120 = v40;
  if (v37)
  {
    if (qword_256D1D280 == -1)
      goto LABEL_14;
    goto LABEL_19;
  }
  if (qword_256D1D288 != -1)
LABEL_19:
    swift_once();
LABEL_14:
  sub_23E136FE4();
  sub_23E135E5C();
  v53 = v126;
  sub_23DF73E10((uint64_t)v15, v126, (uint64_t (*)(_QWORD))_s18ColorControlCircleVMa);
  v54 = (_OWORD *)(v53 + *(int *)(v125 + 36));
  v55 = v169;
  *v54 = v168;
  v54[1] = v55;
  v54[2] = v170;
  sub_23DF73E54((uint64_t)v15, (uint64_t (*)(_QWORD))_s18ColorControlCircleVMa);
  sub_23DF73E10(v164, v48, type metadata accessor for ColorControl);
  v56 = v118;
  v57 = v158;
  v58 = v160;
  v123(v118, v158, v160);
  v59 = (*(unsigned __int8 *)(v161 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
  v60 = v159;
  v61 = (v162 + *(unsigned __int8 *)(v159 + 80) + v59) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
  v62 = swift_allocObject();
  sub_23DF89384(v48, v62 + v59, type metadata accessor for ColorControl);
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v62 + v61, v56, v58);
  sub_23DFC5C60();
  v63 = v127;
  sub_23E1369CC();
  swift_release();
  sub_23DF89C7C(v53, &qword_256D1F608);
  v64 = v128;
  v65 = (uint64_t)v130;
  v66 = v129;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v130, v63, v129);
  v123((char *)(v65 + *(int *)(v124 + 52)), v57, v58);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v66);
  LOBYTE(v66) = sub_23E136720();
  sub_23E135D00();
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v131;
  sub_23DF89C1C(v65, v131, &qword_256D1F618);
  v76 = v134;
  v77 = v75 + *(int *)(v134 + 36);
  *(_BYTE *)v77 = v66;
  *(_QWORD *)(v77 + 8) = v68;
  *(_QWORD *)(v77 + 16) = v70;
  *(_QWORD *)(v77 + 24) = v72;
  *(_QWORD *)(v77 + 32) = v74;
  *(_BYTE *)(v77 + 40) = 0;
  sub_23DF89C7C(v65, &qword_256D1F618);
  v78 = v121;
  sub_23E1365E8();
  v79 = sub_23DFC5BD8(&qword_256D1F6C8, &qword_256D1F620, &qword_256D1F6D0, &qword_256D1F618);
  v80 = v135;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v78, v133);
  sub_23DF89C7C(v75, &qword_256D1F620);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9C0);
  v81 = v145;
  if (v119)
  {
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_23E138410;
    sub_23E136354();
    sub_23E136330();
  }
  else
  {
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_23E138050;
    sub_23E136354();
  }
  v165 = v82;
  sub_23DF73F28(&qword_256D1D9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9D0);
  sub_23DF89B88(&qword_256D1D9D8, &qword_256D1D9D0, MEMORY[0x24BEE12C8]);
  v83 = v144;
  v84 = v146;
  sub_23E1374F4();
  v51 = (uint64_t)v152;
  v40 = v120;
  v165 = v76;
  v166 = v79;
  swift_getOpaqueTypeConformance2();
  v85 = (uint64_t)v138;
  v86 = v137;
  sub_23E136AEC();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v84);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v80, v86);
  v87 = v147;
  sub_23E136078();
  v88 = (uint64_t)v139;
  v89 = &v139[*(int *)(v140 + 36)];
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  v91 = v148;
  v92 = v149;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(&v89[*(int *)(v90 + 40)], v87, v149);
  *v89 = 0;
  sub_23DF89C1C(v85, v88, &qword_256D1F630);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v92);
  sub_23DF89C7C(v85, &qword_256D1F630);
  sub_23DFC5CE4();
  v93 = (uint64_t)v141;
  sub_23E136AF8();
  sub_23DF89C7C(v88, &qword_256D1F638);
  v165 = sub_23E1371A0();
  v166 = v94;
  sub_23DF8DC18();
  v95 = (uint64_t)v143;
  v52 = v151;
  sub_23E135FAC();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v93, &qword_256D1F640);
  (*(void (**)(uint64_t *, uint64_t))(v159 + 8))(v158, v160);
  v96 = v142;
  sub_23DF89340(v95, v142, &qword_256D1F640);
  sub_23DF89340(v96, v51, &qword_256D1F640);
  v49 = 0;
  v2 = v122;
  v50 = (uint64_t)v163;
LABEL_18:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56))(v51, v49, 1, v52);
  v97 = v40[1];
  v98 = v40[2];
  v99 = *((_WORD *)v40 + 2);
  v100 = v40[6];
  v101 = *((_WORD *)v40 + 4);
  v102 = v40[10];
  LOBYTE(v165) = *v40;
  BYTE1(v165) = v97;
  BYTE2(v165) = v98;
  WORD2(v165) = v99;
  BYTE6(v165) = v100;
  LOWORD(v166) = v101;
  BYTE2(v166) = v102;
  v167 = sub_23DFC37CC((unsigned __int8 *)&v165);
  sub_23DF73E10(v164, v50, type metadata accessor for ColorControl);
  v103 = (*(unsigned __int8 *)(v161 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
  v104 = (v162 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
  v105 = swift_allocObject();
  sub_23DF89384(v50, v105 + v103, type metadata accessor for ColorControl);
  *(_QWORD *)(v105 + v104) = 0x4008000000000000;
  *(double *)(v105 + ((v104 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39 + 12.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F650);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F658);
  sub_23DF89B88(&qword_256D1F660, &qword_256D1F650, MEMORY[0x24BEE12D8]);
  v106 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F668);
  v107 = sub_23DFC5AC8();
  v165 = v106;
  v166 = v107;
  swift_getOpaqueTypeConformance2();
  sub_23DF73F28(&qword_256D1F6A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], (uint64_t)&protocol conformance descriptor for LightbulbColor);
  v108 = v154;
  sub_23E136F18();
  v109 = v153;
  sub_23DF89C1C(v51, v153, &qword_256D1F648);
  v110 = v155;
  v111 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
  v112 = v157;
  v111(v157, v108, v2);
  v113 = v156;
  sub_23DF89C1C(v109, v156, &qword_256D1F648);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6B0);
  v111((char *)(v113 + *(int *)(v114 + 48)), v112, v2);
  v115 = *(void (**)(char *, uint64_t))(v110 + 8);
  v115(v108, v2);
  sub_23DF89C7C(v51, &qword_256D1F648);
  v115(v112, v2);
  return sub_23DF89C7C(v109, &qword_256D1F648);
}

uint64_t sub_23DFBCC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  __int16 v56;
  int v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t OpaqueTypeConformance2;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  ValueMetadata *v132;
  uint64_t v133;
  void (*v135)(char *, uint64_t);
  double v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  ValueMetadata *v193;
  unint64_t v194;
  unint64_t v195;
  char v196;
  uint64_t v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;

  v186 = a1;
  v185 = sub_23E136084();
  v184 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v183 = (char *)&v139 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = sub_23E13636C();
  v181 = *(_QWORD *)(v182 - 8);
  MEMORY[0x24BDAC7A8](v182);
  v180 = (char *)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_23E13660C();
  v178 = *(_QWORD *)(v179 - 8);
  MEMORY[0x24BDAC7A8](v179);
  v177 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_23E136558();
  v175 = *(_QWORD *)(v176 - 8);
  MEMORY[0x24BDAC7A8](v176);
  v174 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F748);
  MEMORY[0x24BDAC7A8](v150);
  v155 = (uint64_t)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F750);
  MEMORY[0x24BDAC7A8](v153);
  v152 = (uint64_t)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = _s18ColorControlCircleVMa();
  MEMORY[0x24BDAC7A8](v143);
  v145 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F608);
  MEMORY[0x24BDAC7A8](v144);
  v148 = (uint64_t)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F758);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v146 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v149 = (uint64_t)&v139 - v13;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F760);
  MEMORY[0x24BDAC7A8](v147);
  v156 = (uint64_t)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F768);
  MEMORY[0x24BDAC7A8](v151);
  v154 = (uint64_t)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F518);
  MEMORY[0x24BDAC7A8](v158);
  v157 = (uint64_t)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F508);
  MEMORY[0x24BDAC7A8](v17);
  v159 = (char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F4E8);
  MEMORY[0x24BDAC7A8](v190);
  v160 = (uint64_t)&v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F4E0);
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v161 = (char *)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F4D8);
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v164 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F770);
  v168 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v167 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F4D0);
  MEMORY[0x24BDAC7A8](v23);
  v170 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F4C0);
  MEMORY[0x24BDAC7A8](v172);
  v173 = (char *)&v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F420);
  MEMORY[0x24BDAC7A8](v26);
  v171 = (char *)&v139 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_23E135BD4();
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v29 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23E135328();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for ColorControl(0);
  v141 = *(_QWORD *)(v34 - 8);
  v35 = *(_QWORD *)(v141 + 64);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v188 = (uint64_t)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v139 - v37;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v139 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v191 = (uint64_t)&v139 - v43;
  sub_23DFBE2B8((uint64_t)&v139 - v43);
  v187 = v34;
  v44 = *(int *)(v34 + 36);
  v45 = v1;
  v46 = *(unsigned __int8 *)(v1 + v44);
  v189 = v45;
  sub_23DF73E10(v45, (uint64_t)v38, type metadata accessor for ColorControl);
  if (v46 != 1)
  {
    sub_23DF73E54((uint64_t)v38, type metadata accessor for ColorControl);
    goto LABEL_6;
  }
  v47 = sub_23DFBE500();
  sub_23DF73E54((uint64_t)v38, type metadata accessor for ColorControl);
  if ((v47 & 1) != 0)
  {
LABEL_6:
    v142 = 0;
    v48 = (uint64_t)v145;
    goto LABEL_7;
  }
  sub_23DF89C1C(v191, (uint64_t)v42, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v42, 1, v30) == 1)
  {
    sub_23DF89C7C((uint64_t)v42, &qword_256D1D7F0);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v33, v42, v30);
  if ((*(unsigned int (**)(char *, uint64_t))(v31 + 88))(v33, v30) == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    swift_release();
    v135 = *(void (**)(char *, uint64_t))(v31 + 8);
    v142 = &unk_250EC6510;
  }
  else
  {
    sub_23E0AA750((uint64_t)v29);
    v136 = RGBColor.approximateID.getter();
    v142 = v137;
    (*(void (**)(char *, uint64_t, double))(v139 + 8))(v29, v140, v136);
    v135 = *(void (**)(char *, uint64_t))(v31 + 8);
    v135(v33, v30);
  }
  v48 = (uint64_t)v145;
  v135(v42, v30);
LABEL_7:
  sub_23DF89C1C(v191, v48, &qword_256D1D7F0);
  v49 = v189;
  v50 = (unsigned __int8 *)(v189 + *(int *)(v187 + 32));
  v51 = *v50;
  v52 = v50[1];
  v53 = v50[2];
  v54 = *((unsigned __int16 *)v50 + 2);
  v55 = v50[6];
  v56 = *((_WORD *)v50 + 4);
  v57 = v50[10];
  v58 = v52 == 0;
  v59 = 256;
  if (v58)
    v59 = 0;
  v60 = v59 | v51;
  if (v53)
    v61 = 0x10000;
  else
    v61 = 0;
  v62 = v60 | v61 | (v54 << 32);
  v63 = 0x1000000000000;
  if (!v55)
    v63 = 0;
  v64 = v62 | v63;
  v65 = v143;
  v66 = v48 + *(int *)(v143 + 20);
  *(_QWORD *)v66 = v64;
  *(_WORD *)(v66 + 8) = v56;
  *(_BYTE *)(v66 + 10) = v57 != 0;
  *(_BYTE *)(v48 + *(int *)(v65 + 24)) = 2;
  if (*(_BYTE *)(v49 + v44) != 1)
  {
    if (qword_256D1D288 == -1)
      goto LABEL_19;
    goto LABEL_29;
  }
  if (qword_256D1D280 != -1)
LABEL_29:
    swift_once();
LABEL_19:
  sub_23E136FE4();
  sub_23E135E5C();
  v67 = v148;
  sub_23DF73E10(v48, v148, (uint64_t (*)(_QWORD))_s18ColorControlCircleVMa);
  v68 = (_OWORD *)(v67 + *(int *)(v144 + 36));
  v69 = v199;
  *v68 = v198;
  v68[1] = v69;
  v68[2] = v200;
  sub_23DF73E54(v48, (uint64_t (*)(_QWORD))_s18ColorControlCircleVMa);
  v71 = v188;
  v70 = v189;
  sub_23DF73E10(v189, v188, type metadata accessor for ColorControl);
  v72 = *(unsigned __int8 *)(v141 + 80);
  v144 = ((v72 + 16) & ~v72) + v35;
  v73 = (v72 + 16) & ~v72;
  v145 = (char *)v73;
  v143 = v72 | 7;
  v74 = swift_allocObject();
  sub_23DF89384(v71, v74 + v73, type metadata accessor for ColorControl);
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = sub_23DFC63D0;
  *(_QWORD *)(v75 + 24) = v74;
  KeyPath = swift_getKeyPath();
  v77 = v152;
  sub_23DF89C1C(v67, v152, &qword_256D1F608);
  v78 = v77 + *(int *)(v153 + 36);
  *(_BYTE *)v78 = 1;
  *(_QWORD *)(v78 + 8) = sub_23DF8D9A4;
  *(_QWORD *)(v78 + 16) = v75;
  *(_QWORD *)(v78 + 24) = KeyPath;
  *(_BYTE *)(v78 + 32) = 0;
  sub_23DF89C1C(v77, v155, &qword_256D1F750);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F778);
  sub_23DFC6428();
  sub_23DFC6494();
  v79 = (uint64_t)v146;
  sub_23E136480();
  sub_23DF89C7C(v77, &qword_256D1F750);
  v80 = v149;
  sub_23DF89340(v79, v149, &qword_256D1F758);
  swift_release();
  sub_23DF89C7C(v67, &qword_256D1F608);
  v81 = *(_QWORD *)v70;
  LOBYTE(v79) = *(_BYTE *)(v70 + 8);
  sub_23DF89F20(*(_QWORD *)v70, v79);
  LOBYTE(KeyPath) = sub_23DF9C59C(v81, v79);
  sub_23DF8A078(v81, v79);
  v82 = 0.5;
  if ((KeyPath & 1) != 0)
    v83 = 0.0;
  else
    v83 = 0.5;
  v84 = v156;
  sub_23DF89C1C(v80, v156, &qword_256D1F758);
  *(double *)(v84 + *(int *)(v147 + 36)) = v83;
  sub_23DF89C7C(v80, &qword_256D1F758);
  v85 = *(_QWORD *)v70;
  v86 = *(_BYTE *)(v70 + 8);
  sub_23DF89F20(*(_QWORD *)v70, v86);
  v87 = sub_23DF9C59C(v85, v86);
  sub_23DF8A078(v85, v86);
  if ((v87 & 1) != 0)
    v82 = 1.0;
  v88 = v154;
  sub_23DF89C1C(v84, v154, &qword_256D1F760);
  *(double *)(v88 + *(int *)(v151 + 36)) = v82;
  sub_23DF89C7C(v84, &qword_256D1F760);
  v89 = v157;
  sub_23DF89C1C(v88, v157, &qword_256D1F768);
  *(_QWORD *)(v89 + *(int *)(v158 + 52)) = v142;
  sub_23DF89C7C(v88, &qword_256D1F768);
  sub_23DF89B88(&qword_256D1F510, &qword_256D1F518, MEMORY[0x24BDF44C8]);
  v90 = (uint64_t)v159;
  sub_23E136AF8();
  sub_23DF89C7C(v89, &qword_256D1F518);
  LOBYTE(v88) = sub_23E136720();
  sub_23E135D00();
  v92 = v91;
  v94 = v93;
  v96 = v95;
  v98 = v97;
  v99 = v160;
  sub_23DF89C1C(v90, v160, &qword_256D1F508);
  v100 = v99 + *(int *)(v190 + 36);
  *(_BYTE *)v100 = v88;
  *(_QWORD *)(v100 + 8) = v92;
  *(_QWORD *)(v100 + 16) = v94;
  *(_QWORD *)(v100 + 24) = v96;
  *(_QWORD *)(v100 + 32) = v98;
  *(_BYTE *)(v100 + 40) = 0;
  sub_23DF89C7C(v90, &qword_256D1F508);
  v101 = v70 + *(int *)(v187 + 48);
  v102 = *(_BYTE *)v101;
  v103 = *(_QWORD *)(v101 + 8);
  v196 = v102;
  v197 = v103;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136DB0();
  v104 = v188;
  sub_23DF73E10(v70, v188, type metadata accessor for ColorControl);
  v105 = swift_allocObject();
  sub_23DF89384(v104, (uint64_t)&v145[v105], type metadata accessor for ColorControl);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F4F0);
  v107 = sub_23DFC5380();
  v108 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F528);
  v109 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F530);
  v110 = sub_23DF89B88(&qword_256D1F538, &qword_256D1F530, MEMORY[0x24BDF4D98]);
  v111 = sub_23DFC5488();
  v192 = v109;
  v193 = &type metadata for ColorControl.SheetGroupBoxStyle;
  v194 = v110;
  v195 = v111;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v192 = v108;
  v193 = (ValueMetadata *)OpaqueTypeConformance2;
  v138 = swift_getOpaqueTypeConformance2();
  v113 = v161;
  v114 = v190;
  sub_23E136B40();
  swift_release();
  swift_release();
  swift_release();
  sub_23DF89C7C(v99, &qword_256D1F4E8);
  v115 = v174;
  sub_23E13654C();
  v192 = v114;
  v193 = (ValueMetadata *)v106;
  v194 = v107;
  v195 = v138;
  v116 = swift_getOpaqueTypeConformance2();
  v117 = v164;
  v118 = v163;
  sub_23E136B1C();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v115, v176);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v113, v118);
  v119 = v177;
  sub_23E1365E8();
  v192 = v118;
  v193 = (ValueMetadata *)v116;
  v120 = swift_getOpaqueTypeConformance2();
  v121 = v167;
  v122 = v166;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v178 + 8))(v119, v179);
  (*(void (**)(char *, uint64_t))(v165 + 8))(v117, v122);
  v123 = v180;
  sub_23E136354();
  v192 = v122;
  v193 = (ValueMetadata *)v120;
  swift_getOpaqueTypeConformance2();
  v124 = (uint64_t)v170;
  v125 = v169;
  sub_23E136AEC();
  (*(void (**)(char *, uint64_t))(v181 + 8))(v123, v182);
  (*(void (**)(char *, uint64_t))(v168 + 8))(v121, v125);
  v126 = v183;
  sub_23E136078();
  v127 = (uint64_t)v173;
  v128 = &v173[*(int *)(v172 + 36)];
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  v130 = v184;
  v131 = v185;
  (*(void (**)(char *, char *, uint64_t))(v184 + 16))(&v128[*(int *)(v129 + 40)], v126, v185);
  *v128 = 0;
  sub_23DF89C1C(v124, v127, &qword_256D1F4D0);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v126, v131);
  sub_23DF89C7C(v124, &qword_256D1F4D0);
  v192 = sub_23E1371A0();
  v193 = v132;
  sub_23DFC5148();
  sub_23DF8DC18();
  v133 = (uint64_t)v171;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v127, &qword_256D1F4C0);
  sub_23DF89C7C(v191, &qword_256D1D7F0);
  return sub_23DF89340(v133, v186, &qword_256D1F420);
}

uint64_t sub_23DFBDE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void (*v18)(char *, char *, uint64_t);
  double v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  _QWORD v22[2];

  v0 = sub_23E135BD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v22 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ColorControl(0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v14);
  v15 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15)
    || (*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    sub_23DF89C7C((uint64_t)v13, &qword_256D1D5E8);
    v16 = 0;
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v18(v10, v13, v4);
    sub_23DF89C7C((uint64_t)v13, &qword_256D1D5E8);
    v18(v8, v10, v4);
    if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v8, v4) == *MEMORY[0x24BE4DC90])
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
      swift_release();
      v16 = &unk_250EC6538;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    else
    {
      sub_23E0AA750((uint64_t)v3);
      v19 = RGBColor.approximateID.getter();
      v16 = v20;
      (*(void (**)(char *, uint64_t, double))(v1 + 8))(v3, v0, v19);
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v8, v4);
      v21(v10, v4);
    }
  }
  v22[1] = v16;
  sub_23E137080();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F5D0);
  sub_23DFC5898();
  sub_23E136018();
  return swift_bridgeObjectRelease();
}

double sub_23DFBE120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  int v7;
  __int128 v8;
  __int128 v9;
  _BYTE v12[72];
  _OWORD v13[4];
  __int16 v14;
  _OWORD v15[4];
  __int16 v16;

  v1 = v0;
  v2 = type metadata accessor for ColorControl(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_OWORD *)(v0 + 80);
  v15[2] = *(_OWORD *)(v0 + 64);
  v15[3] = v5;
  v16 = *(_WORD *)(v0 + 96);
  v6 = *(_OWORD *)(v0 + 48);
  v15[0] = *(_OWORD *)(v0 + 32);
  v15[1] = v6;
  sub_23DF98EC8((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v13);
  sub_23DF98EC8((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v7 = LOBYTE(v13[0]);
  sub_23DF73E10(v1, (uint64_t)v4, type metadata accessor for ColorControl);
  if (v7 == 2)
  {
    v8 = *((_OWORD *)v4 + 5);
    v13[2] = *((_OWORD *)v4 + 4);
    v13[3] = v8;
    v14 = *((_WORD *)v4 + 48);
    v9 = *((_OWORD *)v4 + 3);
    v13[0] = *((_OWORD *)v4 + 2);
    v13[1] = v9;
    sub_23DF98EC8((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)v12);
    sub_23DF98EC8((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    sub_23DF73E54((uint64_t)v4, type metadata accessor for ColorControl);
    if ((v12[8] & 1) == 0 && qword_256D1D290 != -1)
      swift_once();
  }
  else
  {
    sub_23DF73E54((uint64_t)v4, type metadata accessor for ColorControl);
  }
  return 0.0;
}

void sub_23DFBE2A8()
{
  qword_256D34640 = 0x4034000000000000;
}

uint64_t sub_23DFBE2B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t);
  uint64_t v21;

  v3 = sub_23E135328();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ColorControl(0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v14);
  v15 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
  {
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D5E8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  else
  {
    sub_23DF89C1C((uint64_t)v12, a1, &qword_256D1D7F0);
    result = sub_23DF89C7C((uint64_t)v12, &qword_256D1D5E8);
  }
  if (*(_BYTE *)(v1 + *(int *)(v13 + 36)) == 1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      v17 = swift_allocBox();
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v18(v19, 1, 1, v3);
      *v7 = v17;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BE4DC90], v3);
      LOBYTE(v17) = sub_23E0A88A0((uint64_t)v7);
      v20 = *(void (**)(uint64_t *, uint64_t))(v4 + 8);
      v20(v7, v3);
      result = ((uint64_t (*)(char *, uint64_t))v20)(v9, v3);
      if ((v17 & 1) != 0)
      {
        sub_23DF89C7C(a1, &qword_256D1D7F0);
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(a1, 1, 1, v3);
      }
    }
  }
  return result;
}

uint64_t sub_23DFBE500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  __int16 v23;
  char v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  void (*v31)(unsigned __int16 *, unint64_t, uint64_t);
  void (*v32)(unsigned __int16 *, uint64_t);
  int v33;
  char *v34;
  uint64_t (*v35)(char *, uint64_t);
  int v36;
  unsigned __int16 *v37;
  int v38;
  void (*v39)(unsigned __int16 *, uint64_t);
  int v40;
  BOOL v41;
  int v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _QWORD v63[2];
  char *v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unsigned __int8 v76[4];
  __int16 v77;
  char v78;
  __int16 v79;
  char v80;

  v1 = sub_23E135BD4();
  v69 = *(_QWORD *)(v1 - 8);
  v70 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v68 = (uint64_t)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v67 = (uint64_t)v63 - v4;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F790);
  MEMORY[0x24BDAC7A8](v74);
  v6 = (unsigned __int16 *)((char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23E135328();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v63 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v63 - v17;
  sub_23DFBE2B8((uint64_t)v63 - v17);
  v19 = v0 + *(int *)(type metadata accessor for ColorControl(0) + 32);
  v20 = *(_BYTE *)v19;
  v21 = *(_BYTE *)(v19 + 1);
  v22 = *(_BYTE *)(v19 + 2);
  v23 = *(_WORD *)(v19 + 4);
  v24 = *(_BYTE *)(v19 + 6);
  v25 = *(_WORD *)(v19 + 8);
  LOBYTE(v19) = *(_BYTE *)(v19 + 10);
  v76[0] = v20;
  v76[1] = v21;
  v76[2] = v22;
  v77 = v23;
  v78 = v24;
  v79 = v25;
  v80 = v19;
  v26 = sub_23DFC37CC(v76);
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v16, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7) == 1)
  {
    sub_23DF89C7C((uint64_t)v18, &qword_256D1D7F0);
    swift_bridgeObjectRelease();
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D7F0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v16, v7);
  v28 = *(_QWORD *)(v26 + 16);
  if (!v28)
  {
    v27 = 0;
    goto LABEL_24;
  }
  v63[1] = v26;
  v64 = v18;
  v29 = v26 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v73 = *(_QWORD *)(v8 + 72);
  v30 = *MEMORY[0x24BE4DC90];
  v72 = *MEMORY[0x24BE4DC88];
  v31 = *(void (**)(unsigned __int16 *, unint64_t, uint64_t))(v8 + 16);
  v71 = v8;
  v75 = v12;
  v65 = v30;
  while (1)
  {
    v34 = (char *)v6 + *(int *)(v74 + 48);
    v31(v6, v29, v7);
    v31((unsigned __int16 *)v34, (unint64_t)v12, v7);
    v35 = *(uint64_t (**)(char *, uint64_t))(v8 + 88);
    if (v35((char *)v6, v7) == v30)
    {
      v32 = *(void (**)(unsigned __int16 *, uint64_t))(v8 + 8);
      v32(v6, v7);
      v33 = v35(v34, v7);
      v32((unsigned __int16 *)v34, v7);
      if (v33 == v30)
        break;
      goto LABEL_6;
    }
    v36 = v35(v34, v7);
    if (v36 == v72)
    {
      v37 = (unsigned __int16 *)v66;
      v38 = v72;
      v31((unsigned __int16 *)v66, (unint64_t)v34, v7);
      v39 = *(void (**)(unsigned __int16 *, uint64_t))(v8 + 96);
      v39(v37, v7);
      v40 = *v37;
      v41 = v35((char *)v6, v7) == v38;
      v30 = v65;
      if (v41)
      {
        v39(v6, v7);
        v42 = *v6;
        v8 = v71;
        (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v7);
        if (v42 == v40)
          break;
        goto LABEL_6;
      }
    }
    else if (v36 == v30)
    {
      v8 = v71;
      v43 = *(void (**)(char *, uint64_t))(v71 + 8);
      v43(v34, v7);
      v43((char *)v6, v7);
      goto LABEL_6;
    }
    v44 = v67;
    sub_23E0AA750(v67);
    v45 = v68;
    sub_23E0AA750(v68);
    sub_23E135BB0();
    v47 = v46;
    sub_23E135BB0();
    if (vabdd_f64(v47, v48) >= 0.02 || (sub_23E135BA4(), v50 = v49, sub_23E135BA4(), vabdd_f64(v50, v51) >= 0.02))
    {
      v59 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v60 = v45;
      v61 = v70;
      v59(v60, v70);
      v59(v44, v61);
      sub_23DF89C7C((uint64_t)v6, &qword_256D1F790);
      v8 = v71;
      goto LABEL_6;
    }
    sub_23E135B98();
    v53 = v52;
    sub_23E135B98();
    v55 = vabdd_f64(v53, v54);
    v56 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v57 = v45;
    v58 = v70;
    v56(v57, v70);
    v56(v44, v58);
    sub_23DF89C7C((uint64_t)v6, &qword_256D1F790);
    v8 = v71;
    if (v55 < 0.02)
      break;
LABEL_6:
    v29 += v73;
    --v28;
    v12 = v75;
    if (!v28)
    {
      v27 = 0;
      goto LABEL_23;
    }
  }
  v27 = 1;
  v12 = v75;
LABEL_23:
  v18 = v64;
LABEL_24:
  sub_23DF89C7C((uint64_t)v18, &qword_256D1D7F0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_23DFBEA3C()
{
  type metadata accessor for ColorControl(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23DFBEAA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  unint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F530);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F528);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1;
  type metadata accessor for ColorPicker();
  sub_23DF73F28(&qword_256D1F798, (uint64_t (*)(uint64_t))type metadata accessor for ColorPicker, (uint64_t)&unk_23E13D240);
  sub_23E136F60();
  v10 = sub_23DF89B88(&qword_256D1F538, &qword_256D1F530, MEMORY[0x24BDF4D98]);
  v11 = sub_23DFC5488();
  sub_23E136A14();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v15 = v2;
  v16 = &type metadata for ColorControl.SheetGroupBoxStyle;
  v17 = v10;
  v18 = v11;
  swift_getOpaqueTypeConformance2();
  sub_23E136AA4();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23DFBEC44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  __int16 v48;
  BOOL v49;

  v46 = a1;
  v1 = type metadata accessor for ColorControl(0);
  v44 = *(_QWORD *)(v1 - 8);
  v2 = *(_QWORD *)(v44 + 64);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v45 = (uint64_t)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (uint64_t)v42 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E135124();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E134D7C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E134DC4();
  v16 = (void *)sub_23E134DB8();
  sub_23E134D88();

  sub_23E1350DC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_23E134D64();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v18 = v42[1];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v19);
  v20 = (unsigned __int8 *)(v18 + *(int *)(v1 + 32));
  v21 = v18;
  v22 = *v20;
  v23 = v20[1];
  v24 = v20[2];
  v25 = *((unsigned __int16 *)v20 + 2);
  v26 = v20[6];
  v27 = *((_WORD *)v20 + 4);
  v28 = v20[10];
  v29 = v23 == 0;
  v30 = 256;
  if (v29)
    v30 = 0;
  v31 = v30 | v22;
  if (v24)
    v32 = 0x10000;
  else
    v32 = 0;
  v33 = v31 | v32 | (v25 << 32);
  v34 = 0x1000000000000;
  if (!v26)
    v34 = 0;
  v47 = v33 | v34;
  v48 = v27;
  v49 = v28 != 0;
  _s16ColorPickerStateCMa();
  swift_allocObject();
  v35 = sub_23E0BF140(v17, (uint64_t)v7, (uint64_t)&v47);
  v36 = v43;
  sub_23DF73E10(v21, v43, type metadata accessor for ColorControl);
  v37 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v38 = swift_allocObject();
  sub_23DF89384(v36, v38 + v37, type metadata accessor for ColorControl);
  v39 = v45;
  sub_23DF73E10(v21, v45, type metadata accessor for ColorControl);
  v40 = swift_allocObject();
  sub_23DF89384(v39, v40 + v37, type metadata accessor for ColorControl);
  return sub_23E03B49C(v35, (uint64_t)sub_23DFC65A4, v38, (uint64_t)sub_23DFC65E4, v40, v46);
}

BOOL sub_23DFBEF68(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  void (*v25)(uint64_t *, char *, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E135328();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (uint64_t *)((char *)&v30 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v30 - v16);
  v18 = swift_allocBox();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v19(v20, 1, 1, v8);
  *v17 = v18;
  v21 = a1;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v17, *MEMORY[0x24BE4DC90], v8);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, v17, v8);
  type metadata accessor for ColorControl(0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v22);
  v23 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v4, 1, v23))
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D1D5E8);
    v19((uint64_t)v7, 1, 1, v8);
LABEL_4:
    (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v17, v8);
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D7F0);
    return 0;
  }
  sub_23DF89C1C((uint64_t)v4, (uint64_t)v7, &qword_256D1D7F0);
  sub_23DF89C7C((uint64_t)v4, &qword_256D1D5E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_4;
  v25 = *(void (**)(uint64_t *, char *, uint64_t))(v9 + 32);
  v25(v15, v7, v8);
  v24 = sub_23E0A88A0((uint64_t)v17);
  v26 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v26((uint64_t)v21, v8);
  if (v24)
    v27 = v17;
  else
    v27 = v15;
  if (v24)
    v28 = v15;
  else
    v28 = v17;
  v26((uint64_t)v27, v8);
  v25((uint64_t *)v12, (char *)v28, v8);
  v25(v21, v12, v8);
  return v24;
}

_QWORD *sub_23DFBF238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  __int16 v13;
  char v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unsigned __int8 v45[4];
  __int16 v46;
  char v47;
  __int16 v48;
  char v49;

  v1 = type metadata accessor for ColorControl.GridElement(0);
  v44 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v41 - v5;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = MEMORY[0x24BEE4AF8];
  v42 = v7 + 16;
  v8 = v0 + *(int *)(type metadata accessor for ColorControl(0) + 32);
  if (*(_BYTE *)v8 == 1)
  {
    v9 = sub_23E135328();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 2, v9);
    sub_23DFC1270((uint64_t)v6, v7);
    sub_23DF73E54((uint64_t)v6, type metadata accessor for ColorControl.GridElement);
    v10 = *(_BYTE *)v8;
  }
  else
  {
    v10 = 0;
  }
  v11 = *(_BYTE *)(v8 + 1);
  v12 = *(_BYTE *)(v8 + 2);
  v13 = *(_WORD *)(v8 + 4);
  v14 = *(_BYTE *)(v8 + 6);
  v15 = *(_WORD *)(v8 + 8);
  v16 = *(_BYTE *)(v8 + 10);
  v45[0] = v10;
  v45[1] = v11;
  v45[2] = v12;
  v46 = v13;
  v47 = v14;
  v48 = v15;
  v49 = v16;
  v17 = sub_23DFC37CC(v45);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = sub_23E135328();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v43 = (_QWORD *)v17;
    v22 = v17 + v21;
    v23 = *(_QWORD *)(v20 + 72);
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
    do
    {
      v24(v6, v22, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v6, 0, 2, v19);
      sub_23DFC1270((uint64_t)v6, v7);
      sub_23DF73E54((uint64_t)v6, type metadata accessor for ColorControl.GridElement);
      v22 += v23;
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  v25 = sub_23E135328();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 2, 2, v25);
  v41[1] = v7;
  sub_23DFC1270((uint64_t)v6, v7);
  sub_23DF73E54((uint64_t)v6, type metadata accessor for ColorControl.GridElement);
  swift_beginAccess();
  v26 = 0;
  v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v28 = *(_QWORD *)v42;
    v29 = *(_QWORD *)(*(_QWORD *)v42 + 16);
    if (v29)
    {
      v43 = v27;
      swift_bridgeObjectRetain();
      v30 = 0;
      v31 = MEMORY[0x24BEE4AF8];
      do
      {
        v32 = *(_QWORD *)(v28 + 8 * v30 + 32);
        if (v26 < *(_QWORD *)(v32 + 16))
        {
          v33 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
          v34 = *(_QWORD *)(v44 + 72);
          sub_23DF73E10(v32 + v33 + v34 * v26, (uint64_t)v4, type metadata accessor for ColorControl.GridElement);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v31 = sub_23E007CA8(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
          v36 = *(_QWORD *)(v31 + 16);
          v35 = *(_QWORD *)(v31 + 24);
          if (v36 >= v35 >> 1)
            v31 = sub_23E007CA8(v35 > 1, v36 + 1, 1, v31);
          *(_QWORD *)(v31 + 16) = v36 + 1;
          sub_23DF89384((uint64_t)v4, v31 + v33 + v36 * v34, type metadata accessor for ColorControl.GridElement);
        }
        ++v30;
      }
      while (v29 != v30);
      swift_bridgeObjectRelease();
      v27 = v43;
    }
    else
    {
      v31 = MEMORY[0x24BEE4AF8];
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_23E007CD0(0, v27[2] + 1, 1, v27);
    v38 = v27[2];
    v37 = v27[3];
    if (v38 >= v37 >> 1)
      v27 = sub_23E007CD0((_QWORD *)(v37 > 1), v38 + 1, 1, v27);
    v27[2] = v38 + 1;
    v39 = &v27[2 * v38];
    v39[4] = v26;
    v39[5] = v31;
    ++v26;
  }
  while (v26 != 4);
  swift_release();
  return v27;
}

uint64_t sub_23DFBF630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v10 = type metadata accessor for ColorControl(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F568);
  v19[1] = v14;
  sub_23DF73E10(a2, (uint64_t)v13, type metadata accessor for ColorControl);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  sub_23DF89384((uint64_t)v13, v17 + v15, type metadata accessor for ColorControl);
  *(double *)(v17 + v16) = a4;
  *(double *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = a5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6F0);
  type metadata accessor for ColorControl.GridElement(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6F8);
  sub_23DF89B88(&qword_256D1F700, &qword_256D1F6F0, MEMORY[0x24BEE12D8]);
  sub_23DFC6064();
  sub_23DF73F28(&qword_256D1F728, type metadata accessor for ColorControl.GridElement, (uint64_t)&unk_23E13A504);
  return sub_23E136F18();
}

uint64_t sub_23DFBF7F8@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t (*v60)(_QWORD);
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  void (*v63)(char *, uint64_t *, uint64_t);
  _BOOL4 v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t *, uint64_t);
  uint64_t v67;
  char *v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  void (**v115)(char *, _QWORD *);
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  _OWORD *v119;
  __int128 v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  double v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _OWORD *v156;
  __int128 v157;
  char *v158;
  uint64_t v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  unint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  void (**v210)(char *, _QWORD *);
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(char *, uint64_t *, uint64_t);
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;

  v244 = a2;
  v243 = a1;
  v241 = a3;
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F420);
  MEMORY[0x24BDAC7A8](v242);
  v195 = (uint64_t)&v177 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_23E135BD4();
  v180 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v179 = (uint64_t)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = _s17FavoriteColorCellVMa(0);
  MEMORY[0x24BDAC7A8](v191);
  v221 = (uint64_t *)((char *)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6E8);
  MEMORY[0x24BDAC7A8](v209);
  v222 = (uint64_t)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6A0);
  MEMORY[0x24BDAC7A8](v212);
  v215 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F690);
  MEMORY[0x24BDAC7A8](v213);
  v206 = (char *)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F680);
  MEMORY[0x24BDAC7A8](v216);
  v214 = (uint64_t)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F668);
  MEMORY[0x24BDAC7A8](v234);
  v203 = (char *)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F658);
  v219 = *(_QWORD *)(v235 - 8);
  v11 = MEMORY[0x24BDAC7A8](v235);
  v217 = (char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v218 = (char *)&v177 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v14);
  v190 = (char *)&v177 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = _s17FavoriteColorCellV5ValueOMa(0);
  v16 = MEMORY[0x24BDAC7A8](v182);
  v18 = (char *)&v177 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v226 = (uint64_t)&v177 - v19;
  v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F730);
  MEMORY[0x24BDAC7A8](v238);
  v240 = (uint64_t)&v177 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F738);
  MEMORY[0x24BDAC7A8](v231);
  v232 = (uint64_t)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F718);
  MEMORY[0x24BDAC7A8](v239);
  v233 = (char *)&v177 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_23E136084();
  v228 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v227 = (char *)&v177 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = (_QWORD *)sub_23E13636C();
  v210 = (void (**)(char *, _QWORD *))*(v211 - 1);
  MEMORY[0x24BDAC7A8](v211);
  v208 = (char *)&v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_23E13660C();
  v193 = *(_QWORD *)(v194 - 8);
  MEMORY[0x24BDAC7A8](v194);
  v192 = (char *)&v177 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for ColorControl(0);
  v223 = *(_QWORD *)(v237 - 8);
  MEMORY[0x24BDAC7A8](v237);
  v224 = v26;
  v225 = (uint64_t)&v177 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = _s18ColorControlCircleVMa();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v177 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F608);
  MEMORY[0x24BDAC7A8](v184);
  v31 = (char *)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F610);
  v186 = *(_QWORD *)(v187 - 8);
  MEMORY[0x24BDAC7A8](v187);
  v185 = (char *)&v177 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F618);
  MEMORY[0x24BDAC7A8](v183);
  v188 = (char *)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F620);
  MEMORY[0x24BDAC7A8](v196);
  v189 = (uint64_t)&v177 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F628);
  v198 = *(_QWORD *)(v199 - 8);
  MEMORY[0x24BDAC7A8](v199);
  v197 = (char *)&v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F630);
  MEMORY[0x24BDAC7A8](v36);
  v200 = (char *)&v177 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F638);
  MEMORY[0x24BDAC7A8](v202);
  v201 = (char *)&v177 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F640);
  v39 = MEMORY[0x24BDAC7A8](v230);
  v205 = (char *)&v177 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v204 = (char *)&v177 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v207 = (uint64_t)&v177 - v43;
  v44 = sub_23E135328();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v177 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)&v177 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49);
  v236 = (char *)&v177 - v53;
  v220 = v54;
  MEMORY[0x24BDAC7A8](v52);
  v56 = (uint64_t *)((char *)&v177 - v55);
  v57 = type metadata accessor for ColorControl.GridElement(0);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)&v177 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v243, (uint64_t)v59, v60);
  v245 = v45;
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v243 = v44;
  v62 = v61(v59, 2, v44);
  if (v62)
  {
    if (v62 != 1)
    {
      v86 = v195;
      sub_23DFBCC18(v195);
      sub_23DF89C1C(v86, v240, &qword_256D1F420);
      swift_storeEnumTagMultiPayload();
      sub_23DFC60D0();
      sub_23DFC50C4();
      sub_23E136480();
      return sub_23DF89C7C(v86, &qword_256D1F420);
    }
    v63 = v244;
    v64 = sub_23DFBEF68(v56);
    v65 = v245;
    v66 = *(void (**)(char *, uint64_t *, uint64_t))(v245 + 16);
    v67 = v243;
    v66(v29, v56, v243);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v29, 0, 1, v67);
    LODWORD(v226) = v64;
    v68 = &v29[*(int *)(v27 + 20)];
    *(_QWORD *)v68 = 2;
    v68[10] = 0;
    *((_WORD *)v68 + 4) = 0;
    v29[*(int *)(v27 + 24)] = v64;
    v69 = *((_BYTE *)v63 + *(int *)(v237 + 36)) == 1;
    v237 = (uint64_t)v56;
    if (v69)
    {
      if (qword_256D1D280 == -1)
        goto LABEL_15;
    }
    else if (qword_256D1D288 == -1)
    {
LABEL_15:
      sub_23E136FE4();
      sub_23E135E5C();
      sub_23DF73E10((uint64_t)v29, (uint64_t)v31, (uint64_t (*)(_QWORD))_s18ColorControlCircleVMa);
      v88 = &v31[*(int *)(v184 + 36)];
      v89 = v252;
      *(_OWORD *)v88 = v251;
      *((_OWORD *)v88 + 1) = v89;
      *((_OWORD *)v88 + 2) = v253;
      sub_23DF73E54((uint64_t)v29, (uint64_t (*)(_QWORD))_s18ColorControlCircleVMa);
      v90 = v225;
      sub_23DF73E10((uint64_t)v244, v225, type metadata accessor for ColorControl);
      v91 = v236;
      v66(v236, (uint64_t *)v237, v67);
      v92 = (*(unsigned __int8 *)(v223 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80);
      v244 = v66;
      v93 = v245;
      v94 = v67;
      v95 = (v224 + *(unsigned __int8 *)(v245 + 80) + v92) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80);
      v96 = swift_allocObject();
      sub_23DF89384(v90, v96 + v92, type metadata accessor for ColorControl);
      (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))(v96 + v95, v91, v94);
      sub_23DFC5C60();
      v97 = v185;
      sub_23E1369CC();
      swift_release();
      sub_23DF89C7C((uint64_t)v31, &qword_256D1F608);
      v98 = v186;
      v99 = (uint64_t)v188;
      v100 = v187;
      (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v188, v97, v187);
      v244((char *)(v99 + *(int *)(v183 + 52)), (uint64_t *)v237, v94);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v100);
      LOBYTE(v100) = sub_23E136720();
      sub_23E135D00();
      v102 = v101;
      v104 = v103;
      v106 = v105;
      v108 = v107;
      v109 = v189;
      sub_23DF89C1C(v99, v189, &qword_256D1F618);
      v110 = v196;
      v111 = v109 + *(int *)(v196 + 36);
      *(_BYTE *)v111 = v100;
      *(_QWORD *)(v111 + 8) = v102;
      *(_QWORD *)(v111 + 16) = v104;
      *(_QWORD *)(v111 + 24) = v106;
      *(_QWORD *)(v111 + 32) = v108;
      *(_BYTE *)(v111 + 40) = 0;
      sub_23DF89C7C(v99, &qword_256D1F618);
      v112 = v192;
      sub_23E1365E8();
      v113 = sub_23DFC5BD8(&qword_256D1F6C8, &qword_256D1F620, &qword_256D1F6D0, &qword_256D1F618);
      v114 = v197;
      sub_23E136AC8();
      (*(void (**)(char *, uint64_t))(v193 + 8))(v112, v194);
      sub_23DF89C7C(v109, &qword_256D1F620);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9C0);
      v115 = v210;
      if ((v226 & 1) != 0)
      {
        v116 = swift_allocObject();
        *(_OWORD *)(v116 + 16) = xmmword_23E138410;
        sub_23E136354();
        sub_23E136330();
      }
      else
      {
        v116 = swift_allocObject();
        *(_OWORD *)(v116 + 16) = xmmword_23E138050;
        sub_23E136354();
      }
      *(_QWORD *)&v248 = v116;
      sub_23DF73F28(&qword_256D1D9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9D0);
      sub_23DF89B88(&qword_256D1D9D8, &qword_256D1D9D0, MEMORY[0x24BEE12C8]);
      v124 = v208;
      v125 = v211;
      sub_23E1374F4();
      *(_QWORD *)&v248 = v110;
      *((_QWORD *)&v248 + 1) = v113;
      swift_getOpaqueTypeConformance2();
      v126 = (uint64_t)v200;
      v127 = v199;
      sub_23E136AEC();
      v115[1](v124, v125);
      (*(void (**)(char *, uint64_t))(v198 + 8))(v114, v127);
      v128 = v227;
      sub_23E136078();
      v129 = (uint64_t)v201;
      v130 = &v201[*(int *)(v202 + 36)];
      v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
      v132 = v228;
      v133 = v229;
      (*(void (**)(char *, char *, uint64_t))(v228 + 16))(&v130[*(int *)(v131 + 40)], v128, v229);
      *v130 = 0;
      sub_23DF89C1C(v126, v129, &qword_256D1F630);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v128, v133);
      sub_23DF89C7C(v126, &qword_256D1F630);
      sub_23DFC5CE4();
      v134 = (uint64_t)v205;
      sub_23E136AF8();
      sub_23DF89C7C(v129, &qword_256D1F638);
      *(_QWORD *)&v248 = sub_23E1371A0();
      *((_QWORD *)&v248 + 1) = v135;
      sub_23DF8DC18();
      v136 = (uint64_t)v204;
      sub_23E135FAC();
      swift_bridgeObjectRelease();
      sub_23DF89C7C(v134, &qword_256D1F640);
      v137 = v207;
      sub_23DF89340(v136, v207, &qword_256D1F640);
      sub_23DF89C1C(v137, v232, &qword_256D1F640);
      swift_storeEnumTagMultiPayload();
      sub_23DFC616C();
      v138 = sub_23DFC5AC8();
      *(_QWORD *)&v248 = v234;
      *((_QWORD *)&v248 + 1) = v138;
      swift_getOpaqueTypeConformance2();
      v139 = (uint64_t)v233;
      sub_23E136480();
      sub_23DF89C1C(v139, v240, &qword_256D1F718);
      swift_storeEnumTagMultiPayload();
      sub_23DFC60D0();
      sub_23DFC50C4();
      sub_23E136480();
      sub_23DF89C7C(v139, &qword_256D1F718);
      sub_23DF89C7C(v137, &qword_256D1F640);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v245 + 8))(v237, v243);
    }
    swift_once();
    goto LABEL_15;
  }
  v70 = (uint64_t)v18;
  v71 = v245;
  v72 = v243;
  v210 = *(void (***)(char *, _QWORD *))(v245 + 32);
  ((void (*)(char *, char *, uint64_t))v210)(v51, v59, v243);
  v73 = *(_QWORD **)(v71 + 16);
  v74 = v226;
  v178 = v51;
  v211 = v73;
  ((void (*)(uint64_t, char *, uint64_t))v73)(v226, v51, v72);
  swift_storeEnumTagMultiPayload();
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v76 = (uint64_t)v190;
  MEMORY[0x24264B734](v75);
  v77 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77)
    || v61((char *)v76, 1, v72))
  {
    sub_23DF89C7C(v76, &qword_256D1D5E8);
    v78 = 0;
  }
  else
  {
    v176 = v236;
    ((void (*)(char *, uint64_t, uint64_t))v211)(v236, v76, v72);
    sub_23DF89C7C(v76, &qword_256D1D5E8);
    v78 = sub_23E0A88A0((uint64_t)v178);
    (*(void (**)(char *, uint64_t))(v245 + 8))(v176, v72);
  }
  v79 = v72;
  sub_23DF73E10(v74, (uint64_t)v18, _s17FavoriteColorCellV5ValueOMa);
  KeyPath = swift_getKeyPath();
  v81 = v221;
  *v221 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v82 = v191;
  sub_23DF89384(v70, (uint64_t)v81 + *(int *)(v191 + 20), _s17FavoriteColorCellV5ValueOMa);
  *((_BYTE *)v81 + *(int *)(v82 + 24)) = v78;
  v83 = (uint64_t)v203;
  v84 = (uint64_t)v206;
  if (*((_BYTE *)v244 + *(int *)(v237 + 36)) == 1)
  {
    v85 = v222;
    if (qword_256D1D280 == -1)
      goto LABEL_18;
    goto LABEL_27;
  }
  v85 = v222;
  if (qword_256D1D288 != -1)
LABEL_27:
    swift_once();
LABEL_18:
  v117 = v245;
  sub_23E136FE4();
  sub_23E135E5C();
  v118 = v221;
  sub_23DF73E10((uint64_t)v221, v85, _s17FavoriteColorCellVMa);
  v119 = (_OWORD *)(v85 + *(int *)(v209 + 36));
  v120 = v249;
  *v119 = v248;
  v119[1] = v120;
  v119[2] = v250;
  sub_23DF73E54((uint64_t)v118, _s17FavoriteColorCellVMa);
  v121 = (uint64_t)v178;
  ((void (*)(char *, char *, uint64_t))v211)(v48, v178, v79);
  if ((*(unsigned int (**)(char *, uint64_t))(v117 + 88))(v48, v79) == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v117 + 96))(v48, v79);
    swift_release();
    v122 = &unk_250EC6588;
    v123 = v121;
  }
  else
  {
    v140 = v179;
    v123 = v121;
    sub_23E0AA750(v179);
    v141 = RGBColor.approximateID.getter();
    v122 = v142;
    (*(void (**)(uint64_t, uint64_t, double))(v180 + 8))(v140, v181, v141);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v48, v79);
  }
  v143 = v222;
  v144 = v215;
  sub_23DF89C1C(v222, v215, &qword_256D1F6E8);
  *(_QWORD *)(v144 + *(int *)(v212 + 52)) = v122;
  sub_23DF89C7C(v143, &qword_256D1F6E8);
  v145 = sub_23E136720();
  sub_23E135D00();
  v147 = v146;
  v149 = v148;
  v151 = v150;
  v153 = v152;
  sub_23DF89C1C(v144, v84, &qword_256D1F6A0);
  v154 = v84 + *(int *)(v213 + 36);
  *(_BYTE *)v154 = v145;
  *(_QWORD *)(v154 + 8) = v147;
  *(_QWORD *)(v154 + 16) = v149;
  *(_QWORD *)(v154 + 24) = v151;
  *(_QWORD *)(v154 + 32) = v153;
  *(_BYTE *)(v154 + 40) = 0;
  sub_23DF89C7C(v144, &qword_256D1F6A0);
  sub_23E136FE4();
  sub_23E135E5C();
  v155 = v214;
  sub_23DF89C1C(v84, v214, &qword_256D1F690);
  v156 = (_OWORD *)(v155 + *(int *)(v216 + 36));
  v157 = v252;
  *v156 = v251;
  v156[1] = v157;
  v156[2] = v253;
  sub_23DF89C7C(v84, &qword_256D1F690);
  v158 = v227;
  sub_23E13606C();
  v159 = v234;
  v160 = (_BYTE *)(v83 + *(int *)(v234 + 36));
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  v162 = v228;
  v163 = v229;
  (*(void (**)(_BYTE *, char *, uint64_t))(v228 + 16))(&v160[*(int *)(v161 + 40)], v158, v229);
  *v160 = 0;
  sub_23DF89C1C(v155, v83, &qword_256D1F680);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v158, v163);
  sub_23DF89C7C(v155, &qword_256D1F680);
  v164 = v225;
  sub_23DF73E10((uint64_t)v244, v225, type metadata accessor for ColorControl);
  v165 = v236;
  ((void (*)(char *, uint64_t, uint64_t))v211)(v236, v123, v79);
  v166 = (*(unsigned __int8 *)(v223 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80);
  v167 = v79;
  v168 = (v224 + *(unsigned __int8 *)(v117 + 80) + v166) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
  v169 = swift_allocObject();
  sub_23DF89384(v164, v169 + v166, type metadata accessor for ColorControl);
  ((void (*)(unint64_t, char *, uint64_t))v210)(v169 + v168, v165, v167);
  v170 = sub_23DFC5AC8();
  v171 = v217;
  sub_23E1369CC();
  swift_release();
  sub_23DF89C7C(v83, &qword_256D1F668);
  v172 = v219;
  v173 = v218;
  v174 = v235;
  (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v218, v171, v235);
  (*(void (**)(uint64_t, char *, uint64_t))(v172 + 16))(v232, v173, v174);
  swift_storeEnumTagMultiPayload();
  sub_23DFC616C();
  v246 = v159;
  v247 = v170;
  swift_getOpaqueTypeConformance2();
  v175 = (uint64_t)v233;
  sub_23E136480();
  sub_23DF89C1C(v175, v240, &qword_256D1F718);
  swift_storeEnumTagMultiPayload();
  sub_23DFC60D0();
  sub_23DFC50C4();
  sub_23E136480();
  sub_23DF89C7C(v175, &qword_256D1F718);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v174);
  sub_23DF73E54(v226, _s17FavoriteColorCellV5ValueOMa);
  return (*(uint64_t (**)(char *, uint64_t))(v245 + 8))(v178, v167);
}

uint64_t sub_23DFC11AC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, char);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v10[4];

  v3 = sub_23DFBAC4C(v10);
  v5 = v4;
  v6 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    sub_23DF89C7C(v5, &qword_256D1D7F0);
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, a2, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return ((uint64_t (*)(void **, _QWORD))v3)(v10, 0);
}

uint64_t sub_23DFC1270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v24[24];

  v4 = type metadata accessor for ColorControl.GridElement(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD **)(v9 + 16);
  if (v10)
  {
    v11 = (uint64_t)v10 - 1;
    if (*(_QWORD *)(*(_QWORD *)(v9 + 8 * ((_QWORD)v10 - 1) + 32) + 16) < 4uLL)
    {
      sub_23DF73E10(a1, (uint64_t)v7, type metadata accessor for ColorControl.GridElement);
      swift_beginAccess();
      v12 = (_QWORD *)*v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v8 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_23E09EE0C(v12);
        *v8 = v12;
      }
      if ((unint64_t)v10 > v12[2])
      {
        __break(1u);
      }
      else
      {
        v10 = v12 + 4;
        v8 = (_QWORD *)v12[v11 + 4];
        v14 = swift_isUniquelyReferenced_nonNull_native();
        v12[v11 + 4] = v8;
        if ((v14 & 1) != 0)
        {
LABEL_7:
          v16 = v8[2];
          v15 = v8[3];
          if (v16 >= v15 >> 1)
          {
            v8 = (_QWORD *)sub_23E007CA8(v15 > 1, v16 + 1, 1, (unint64_t)v8);
            v10[v11] = v8;
          }
          v8[2] = v16 + 1;
          sub_23DF89384((uint64_t)v7, (uint64_t)v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, type metadata accessor for ColorControl.GridElement);
          return swift_endAccess();
        }
      }
      v8 = (_QWORD *)sub_23E007CA8(0, v8[2] + 1, 1, (unint64_t)v8);
      v10[v11] = v8;
      goto LABEL_7;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F740);
  v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_23E138050;
  sub_23DF73E10(a1, v18 + v17, type metadata accessor for ColorControl.GridElement);
  swift_beginAccess();
  v19 = (_QWORD *)*v8;
  v20 = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v19;
  if ((v20 & 1) == 0)
  {
    v19 = sub_23E007CBC(0, v19[2] + 1, 1, v19);
    *v8 = v19;
  }
  v22 = v19[2];
  v21 = v19[3];
  if (v22 >= v21 >> 1)
  {
    v19 = sub_23E007CBC((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
    *v8 = v19;
  }
  v19[2] = v22 + 1;
  v19[v22 + 4] = v18;
  return swift_endAccess();
}

uint64_t sub_23DFC1504()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_23E137698();
  sub_23E1376A4();
  swift_bridgeObjectRetain();
  sub_23DFAE5A8((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t sub_23DFC156C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  sub_23E1376A4();
  swift_bridgeObjectRetain();
  sub_23DFAE5A8(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DFC15B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 8);
  sub_23E137698();
  sub_23E1376A4();
  swift_bridgeObjectRetain();
  sub_23DFAE5A8((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t sub_23DFC1618(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_23E11D5CC(a1[1], a2[1]);
  else
    return 0;
}

uint64_t sub_23DFC163C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ColorControl.GridElement(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23DF73E10(v1, (uint64_t)v8, type metadata accessor for ColorControl.GridElement);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23E1376A4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_23E1376D4();
}

uint64_t sub_23DFC17A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_23E135328();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v0, (uint64_t)v7, type metadata accessor for ColorControl.GridElement);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1))
    return sub_23E1376A4();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_23E1376A4();
  sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
  sub_23E13711C();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_23DFC18E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23DF73E10(v1, (uint64_t)v8, type metadata accessor for ColorControl.GridElement);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_23E1376A4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_23E1376D4();
}

uint64_t sub_23DFC1A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF73E10(v1, a1, type metadata accessor for ColorControl.GridElement);
}

uint64_t sub_23DFC1A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  double v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;

  v102 = a1;
  v98 = a3;
  v77 = type metadata accessor for ColorControl(0);
  v95 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v96 = v4;
  v97 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_23E136084();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v92 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23E135BD4();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v74 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = _s17FavoriteColorCellVMa(0);
  MEMORY[0x24BDAC7A8](v78);
  v8 = (uint64_t *)((char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6E8);
  MEMORY[0x24BDAC7A8](v79);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F6A0);
  MEMORY[0x24BDAC7A8](v80);
  v82 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F690);
  MEMORY[0x24BDAC7A8](v81);
  v84 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F680);
  MEMORY[0x24BDAC7A8](v83);
  v86 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F668);
  MEMORY[0x24BDAC7A8](v88);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F658);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v87 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E135328();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v99 = (char *)&v73 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s17FavoriteColorCellV5ValueOMa(0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v73 - v29;
  v103 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v103((char *)&v73 - v29, v102, v16);
  v100 = v30;
  v31 = v77;
  swift_storeEnumTagMultiPayload();
  v101 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v32);
  v33 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v24, 1, v33)
    || (*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, v16))
  {
    v34 = (uint64_t)v10;
    sub_23DF89C7C((uint64_t)v24, &qword_256D1D5E8);
    v35 = 0;
  }
  else
  {
    v34 = (uint64_t)v10;
    v72 = v99;
    v103(v99, (uint64_t)v24, v16);
    sub_23DF89C7C((uint64_t)v24, &qword_256D1D5E8);
    v35 = sub_23E0A88A0(v102);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v72, v16);
  }
  sub_23DF73E10((uint64_t)v100, (uint64_t)v28, _s17FavoriteColorCellV5ValueOMa);
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v36 = v78;
  sub_23DF89384((uint64_t)v28, (uint64_t)v8 + *(int *)(v78 + 20), _s17FavoriteColorCellV5ValueOMa);
  *((_BYTE *)v8 + *(int *)(v36 + 24)) = v35;
  if (*(_BYTE *)(v101 + *(int *)(v31 + 36)) != 1)
  {
    v37 = v102;
    if (qword_256D1D288 == -1)
      goto LABEL_8;
    goto LABEL_13;
  }
  v37 = v102;
  if (qword_256D1D280 != -1)
LABEL_13:
    swift_once();
LABEL_8:
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF73E10((uint64_t)v8, v34, _s17FavoriteColorCellVMa);
  v38 = (_OWORD *)(v34 + *(int *)(v79 + 36));
  v39 = v105;
  *v38 = v104;
  v38[1] = v39;
  v38[2] = v106;
  sub_23DF73E54((uint64_t)v8, _s17FavoriteColorCellVMa);
  v103(v20, v37, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v20, v16) == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
    swift_release();
    v40 = &unk_250EC65B0;
  }
  else
  {
    v41 = v74;
    sub_23E0AA750(v74);
    v42 = RGBColor.approximateID.getter();
    v40 = v43;
    (*(void (**)(uint64_t, uint64_t, double))(v75 + 8))(v41, v76, v42);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  v44 = v82;
  sub_23DF89C1C(v34, v82, &qword_256D1F6E8);
  *(_QWORD *)(v44 + *(int *)(v80 + 52)) = v40;
  sub_23DF89C7C(v34, &qword_256D1F6E8);
  v45 = sub_23E136720();
  sub_23E135D00();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = v84;
  sub_23DF89C1C(v44, v84, &qword_256D1F6A0);
  v55 = v54 + *(int *)(v81 + 36);
  *(_BYTE *)v55 = v45;
  *(_QWORD *)(v55 + 8) = v47;
  *(_QWORD *)(v55 + 16) = v49;
  *(_QWORD *)(v55 + 24) = v51;
  *(_QWORD *)(v55 + 32) = v53;
  *(_BYTE *)(v55 + 40) = 0;
  sub_23DF89C7C(v44, &qword_256D1F6A0);
  sub_23E136FE4();
  sub_23E135E5C();
  v56 = v86;
  sub_23DF89C1C(v54, v86, &qword_256D1F690);
  v57 = (_OWORD *)(v56 + *(int *)(v83 + 36));
  v58 = v108;
  *v57 = v107;
  v57[1] = v58;
  v57[2] = v109;
  sub_23DF89C7C(v54, &qword_256D1F690);
  v59 = v92;
  sub_23E13606C();
  v60 = (uint64_t)v89;
  v61 = &v89[*(int *)(v88 + 36)];
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  v63 = v93;
  v64 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(&v61[*(int *)(v62 + 40)], v59, v94);
  *v61 = 0;
  sub_23DF89C1C(v56, v60, &qword_256D1F680);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v64);
  sub_23DF89C7C(v56, &qword_256D1F680);
  v65 = v97;
  sub_23DF73E10(v101, v97, type metadata accessor for ColorControl);
  v66 = v99;
  v103(v99, v37, v16);
  v67 = (*(unsigned __int8 *)(v95 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v68 = (v96 + *(unsigned __int8 *)(v17 + 80) + v67) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v69 = swift_allocObject();
  sub_23DF89384(v65, v69 + v67, type metadata accessor for ColorControl);
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v69 + v68, v66, v16);
  sub_23DFC5AC8();
  v70 = v87;
  sub_23E1369CC();
  swift_release();
  sub_23DF89C7C(v60, &qword_256D1F668);
  sub_23DF73E54((uint64_t)v100, _s17FavoriteColorCellV5ValueOMa);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v90 + 32))(v98, v70, v91);
}

uint64_t sub_23DFC2494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23E09E2B4(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast();
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E2B4(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
      }
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_23E09E2B4(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      sub_23DF89AC0(&v15, (_OWORD *)(v7 + 32 * v12 + 32));
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23DFC2608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  sub_23E09E288(0, v12, 0);
  if (!v12)
    return v26;
  v13 = a1 + 32;
  v23 = v9;
  v24 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    sub_23DF89AD0(v13, (uint64_t)v25);
    v14 = swift_dynamicCast();
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v14)
      break;
    v15(v4, 0, 1, v5);
    v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v11, v4, v5);
    v16(v9, v11, v5);
    v17 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E09E288(0, *(_QWORD *)(v17 + 16) + 1, 1);
      v17 = v26;
    }
    v19 = *(_QWORD *)(v17 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_23E09E288(v18 > 1, v19 + 1, 1);
      v17 = v26;
    }
    *(_QWORD *)(v17 + 16) = v19 + 1;
    v20 = v17
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + *(_QWORD *)(v6 + 72) * v19;
    v9 = v23;
    v16((char *)v20, v23, v5);
    v26 = v17;
    v13 += 32;
    if (!--v12)
      return v17;
  }
  v15(v4, 1, 1, v5);
  swift_release();
  sub_23DF89C7C((uint64_t)v4, &qword_256D1D7F0);
  return 0;
}

uint64_t sub_23DFC2850()
{
  type metadata accessor for ColorControl(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23DFC28B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.ColorState(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v23 - v11;
  if (qword_256D1D270 != -1)
    swift_once();
  v13 = sub_23E135C10();
  __swift_project_value_buffer(v13, (uint64_t)qword_256D1EAC0);
  sub_23DF73E10(a1, (uint64_t)v12, type metadata accessor for Device.Control.ColorState);
  v14 = sub_23E135BF8();
  v15 = sub_23E137368();
  if (os_log_type_enabled(v14, v15))
  {
    v23[2] = a2;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v24 = a1;
    v18 = v17;
    v26 = v17;
    v23[1] = v4;
    *(_DWORD *)v16 = 136446210;
    sub_23DF73E10((uint64_t)v12, (uint64_t)v10, type metadata accessor for Device.Control.ColorState);
    v19 = sub_23E137194();
    v25 = sub_23E0AB274(v19, v20, &v26);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    sub_23DF73E54((uint64_t)v12, type metadata accessor for Device.Control.ColorState);
    _os_log_impl(&dword_23DF71000, v14, v15, "ColorControl updated colorState %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    a1 = v24;
    MEMORY[0x24264C628](v21, -1, -1);
    MEMORY[0x24264C628](v16, -1, -1);
  }
  else
  {
    sub_23DF73E54((uint64_t)v12, type metadata accessor for Device.Control.ColorState);
  }

  if (qword_256D1D278 != -1)
    swift_once();
  type metadata accessor for ColorControl(0);
  sub_23E136E88();
  sub_23E0B5C18((uint64_t)v6, a1);
  return sub_23DF89C7C((uint64_t)v6, &qword_256D1ECC0);
}

uint64_t sub_23DFC2B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _WORD *v5;
  uint64_t v6;
  void (*v7)(_WORD *, uint64_t, uint64_t);
  _WORD *v8;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F350);
  v0 = sub_23E135328();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E13A250;
  v5 = (_WORD *)(v4 + v3);
  *v5 = sub_23E135310();
  v6 = *MEMORY[0x24BE4DC88];
  v7 = *(void (**)(_WORD *, uint64_t, uint64_t))(v1 + 104);
  v7(v5, v6, v0);
  *(_WORD *)((char *)v5 + v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + v2), v6, v0);
  v5[v2] = sub_23E135310();
  v7(&v5[v2], v6, v0);
  *(_WORD *)((char *)v5 + 3 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 3 * v2), v6, v0);
  v5[2 * v2] = sub_23E135310();
  v7(&v5[2 * v2], v6, v0);
  v8 = (_WORD *)((char *)v5 + 5 * v2);
  *v8 = sub_23E135310();
  result = ((uint64_t (*)(_WORD *, uint64_t, uint64_t))v7)(v8, v6, v0);
  qword_256D1F340 = v4;
  return result;
}

uint64_t sub_23DFC2CFC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  char *v23;

  v23 = a1;
  v1 = sub_23E136630();
  v22 = *(_QWORD *)(v1 - 8);
  v2 = v22;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22 - v6;
  v8 = sub_23E136618();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v22 - v13;
  sub_23E136624();
  sub_23E13663C();
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v12, v14, v8);
  v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v5, v7, v1);
  v17 = v23;
  v15(v23, v12, v8);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F860);
  v16(&v17[*(int *)(v18 + 48)], v5, v1);
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v7, v1);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  v19(v5, v1);
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v8);
}

uint64_t sub_23DFC2E9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F848);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = sub_23E136384();
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F850);
  sub_23DFC2CFC(&v4[*(int *)(v5 + 44)]);
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  v7 = MEMORY[0x24264B488](v6);
  v8 = sub_23E13672C();
  sub_23DF89C1C((uint64_t)v4, a1, &qword_256D1F848);
  v9 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F858) + 36);
  *(_QWORD *)v9 = v7;
  *(_BYTE *)(v9 + 8) = v8;
  return sub_23DF89C7C((uint64_t)v4, &qword_256D1F848);
}

void sub_23DFC2FA4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v2 = sub_23E134B54();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v6 <= 0)
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v10 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F360);
    v7 = (_QWORD *)swift_allocObject();
    v8 = _swift_stdlib_malloc_size(v7);
    v9 = v8 - 32;
    if (v8 < 32)
      v9 = v8 - 1;
    v10 = 2 * (v9 >> 5);
    v7[2] = v6;
    v7[3] = v10;
  }
  v11 = a1;
  sub_23E137338();

  if (v6 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v12 = v10 >> 1;
  v13 = v7 + 4;
  if (v6)
  {
    v12 -= v6;
    sub_23DF73F28(&qword_256D1F358, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
    do
    {
      sub_23E1374AC();
      if (!v33)
        goto LABEL_38;
      sub_23DF89AC0(&v32, v13);
      v13 += 2;
    }
    while (--v6);
  }
  v29 = v3;
  sub_23DF73F28(&qword_256D1F358, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_23E1374AC();
  if (v31)
  {
    while (1)
    {
      sub_23DF89AC0(&v30, &v32);
      if (!v12)
      {
        v14 = v7[3];
        if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
        if (v15 <= 1)
          v16 = 1;
        else
          v16 = v15;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F360);
        v17 = (_QWORD *)swift_allocObject();
        v18 = _swift_stdlib_malloc_size(v17);
        v19 = v18 - 32;
        if (v18 < 32)
          v19 = v18 - 1;
        v20 = v19 >> 5;
        v17[2] = v16;
        v17[3] = 2 * (v19 >> 5);
        v21 = (unint64_t)(v17 + 4);
        v22 = v7[3] >> 1;
        if (v7[2])
        {
          if (v17 != v7 || v21 >= (unint64_t)&v7[4 * v22 + 4])
            memmove(v17 + 4, v7 + 4, 32 * v22);
          v7[2] = 0;
        }
        v13 = (_OWORD *)(v21 + 32 * v22);
        v12 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        swift_release();
        v7 = v17;
      }
      v24 = __OFSUB__(v12--, 1);
      if (v24)
        break;
      sub_23DF89AC0(&v32, v13);
      v13 += 2;
      sub_23E1374AC();
      if (!v31)
        goto LABEL_30;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
  sub_23DF89C7C((uint64_t)&v30, &qword_256D1D790);
  v25 = v7[3];
  if (v25 >= 2)
  {
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v12);
    v27 = v26 - v12;
    if (v24)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v7[2] = v27;
  }
}

uint64_t sub_23DFC3290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ColorControl.GridElement(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F868);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_23DF73E10(a1, (uint64_t)v14, type metadata accessor for ColorControl.GridElement);
  sub_23DF73E10(a2, v15, type metadata accessor for ColorControl.GridElement);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_23DF73E10((uint64_t)v14, (uint64_t)v10, type metadata accessor for ColorControl.GridElement);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = sub_23E13531C();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_23DF73E54((uint64_t)v14, type metadata accessor for ColorControl.GridElement);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_23DF89C7C((uint64_t)v14, &qword_256D1F868);
    v18 = 0;
    return v18 & 1;
  }
  sub_23DF73E54((uint64_t)v14, type metadata accessor for ColorControl.GridElement);
  v18 = 1;
  return v18 & 1;
}

uint64_t sub_23DFC34BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[3];
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v0 = sub_23E135BD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F348);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v10 = 6;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23E13A250;
  v20[2] = v11;
  v12 = v11 + v9;
  sub_23E135BC8();
  sub_23E135BC8();
  sub_23E135BC8();
  sub_23E135BC8();
  sub_23E135BC8();
  v22 = v8;
  sub_23E135BC8();
  v25 = MEMORY[0x24BEE4AF8];
  sub_23E09E288(0, 6, 0);
  v24 = v1;
  v13 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
  v21 = *MEMORY[0x24BE4DCB0];
  v20[1] = v12;
  v14 = v12;
  v23 = v4;
  do
  {
    v13(v3, v14, v0);
    v13(v7, (unint64_t)v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, v21, v4);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v0);
    v15 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E09E288(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v25;
    }
    v17 = *(_QWORD *)(v15 + 16);
    v16 = *(_QWORD *)(v15 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_23E09E288(v16 > 1, v17 + 1, 1);
      v15 = v25;
    }
    *(_QWORD *)(v15 + 16) = v17 + 1;
    v18 = v15
        + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
        + *(_QWORD *)(v5 + 72) * v17;
    v4 = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v23);
    v25 = v15;
    v14 += v22;
    --v10;
  }
  while (v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v15;
}

uint64_t sub_23DFC37CC(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[2];
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;
  char v59;

  v54 = sub_23E1358D4();
  v2 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23E135328();
  v55 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E135124();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E134D7C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  LODWORD(v13) = a1[2];
  v16 = *((unsigned __int16 *)a1 + 2);
  v17 = a1[6];
  v18 = *((unsigned __int16 *)a1 + 4);
  v19 = a1[10];
  v46 = a1[1];
  v47 = v15;
  LOBYTE(v57) = v15;
  BYTE1(v57) = v46;
  v51 = v16;
  v52 = v13;
  BYTE2(v57) = v13;
  WORD2(v57) = v16;
  v49 = v18;
  v50 = v17;
  BYTE6(v57) = v17;
  v58 = v18;
  v48 = v19;
  v59 = v19;
  sub_23E134DC4();
  v20 = (void *)sub_23E134DB8();
  sub_23E134D88();

  sub_23E1350DC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = sub_23E134D64();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v22 = sub_23E0BD61C(v21);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + 16);
  v24 = MEMORY[0x24BEE4AF8];
  if (v23)
  {
    v57 = MEMORY[0x24BEE4AF8];
    sub_23E09E288(0, v23, 0);
    v25 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v45[1] = v22;
    v26 = v22 + v25;
    v27 = *(_QWORD *)(v2 + 72);
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v29 = v2;
    do
    {
      v30 = v54;
      v28(v4, v26, v54);
      sub_23E1358C8();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v30);
      v31 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E288(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v57;
      }
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_23E09E288(v32 > 1, v33 + 1, 1);
        v31 = v57;
      }
      *(_QWORD *)(v31 + 16) = v33 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v31+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v33, v6, v53);
      v57 = v31;
      v26 += v27;
      --v23;
      v2 = v29;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x24BEE4AF8];
  }
  v56 = v24;
  sub_23DFC2494(v31);
  swift_bridgeObjectRelease();
  v34 = objc_allocWithZone(MEMORY[0x24BDBCF00]);
  v35 = (void *)sub_23E137260();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v34, sel_initWithArray_, v35);

  sub_23DFC2FA4(v36);
  v38 = v37;

  v39 = sub_23DFC2608(v38);
  swift_release();
  if (v39)
  {
    v56 = v39;
    v40 = 6 - *(_QWORD *)(v39 + 16);
    LOBYTE(v57) = v47;
    BYTE1(v57) = v46;
    BYTE2(v57) = v52;
    WORD2(v57) = v51;
    BYTE6(v57) = v50;
    v58 = v49;
    v59 = v48;
    if (v52)
    {
      v41 = sub_23DFC34BC();
    }
    else
    {
      if (qword_256D1D298 != -1)
        swift_once();
      v41 = qword_256D1F340;
      swift_bridgeObjectRetain();
    }
    v42 = sub_23E0BD968(v41);
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v42 + 16);
    if (v43 >= v40)
      v43 = v40;
    if (v43 < 1)
      swift_bridgeObjectRelease();
    else
      sub_23DF84128(v42, v42 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80)), 0, (2 * v43) | 1);
  }
  return v56;
}

unint64_t sub_23DFC3C6C(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  char v46;
  int *v47;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_23DF89F20(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_23DF89F20(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v14 = *(_QWORD *)(a2 + 56);
    v15 = *(_QWORD *)(a2 + 64);
    v16 = *(_QWORD *)(a2 + 72);
    v47 = a3;
    v18 = *(_QWORD *)(a2 + 80);
    v17 = *(_QWORD *)(a2 + 88);
    v45 = *(_BYTE *)(a2 + 96);
    v46 = *(_BYTE *)(a2 + 97);
    sub_23DF98590(v11, v12, v13, v14, v15, v16, v18, v17, v45, v46);
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v15;
    *(_QWORD *)(a1 + 72) = v16;
    *(_QWORD *)(a1 + 80) = v18;
    *(_QWORD *)(a1 + 88) = v17;
    *(_BYTE *)(a1 + 96) = v45;
    *(_BYTE *)(a1 + 97) = v46;
    v19 = v47[7];
    v20 = (_QWORD *)(a1 + v19);
    v21 = a2 + v19;
    v22 = *(_QWORD *)(a2 + v19 + 8);
    *v20 = *(_QWORD *)(a2 + v19);
    v20[1] = v22;
    swift_retain();
    swift_retain();
    v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
    v24 = (char *)v20 + v23;
    v25 = (char *)(v21 + v23);
    v26 = type metadata accessor for Device.Control.ColorState(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v30 = sub_23E135328();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v24, v25, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v24, 0, 1, v30);
      }
      v33 = *(int *)(v26 + 20);
      v34 = &v24[v33];
      v35 = &v25[v33];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v34[8] = v35[8];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v36 = v47[8];
    v37 = v47[9];
    v38 = a1 + v36;
    v39 = a2 + v36;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_DWORD *)(v38 + 7) = *(_DWORD *)(v39 + 7);
    *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
    v40 = v47[11];
    *(_QWORD *)(a1 + v47[10]) = *(_QWORD *)(a2 + v47[10]);
    *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
    v41 = v47[12];
    v42 = a1 + v41;
    v43 = a2 + v41;
    *(_BYTE *)v42 = *(_BYTE *)v43;
    *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23DFC3F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23DF8A078(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_23DF8A078(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_23DF985F0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96), *(_BYTE *)(a1 + 97));
  v4 = a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v6 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  return swift_release();
}

uint64_t sub_23DFC401C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  char v43;

  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  sub_23DF89F20(*(_QWORD *)a2, v6);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  sub_23DF89F20(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v42 = *(_BYTE *)(a2 + 96);
  v43 = *(_BYTE *)(a2 + 97);
  sub_23DF98590(v9, v10, v11, v12, v13, v14, v16, v15, v42, v43);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v15;
  *(_BYTE *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 97) = v43;
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *v18 = *(_QWORD *)(a2 + v17);
  v18[1] = v20;
  swift_retain();
  swift_retain();
  v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v22 = (char *)v18 + v21;
  v23 = (char *)(v19 + v21);
  v24 = type metadata accessor for Device.Control.ColorState(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = sub_23E135328();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v22, v23, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v27);
    }
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v32[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v33 = a3[8];
  v34 = a3[9];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_DWORD *)(v35 + 7) = *(_DWORD *)(v36 + 7);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v37 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  v38 = a3[12];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_23DFC4298(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  __int16 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v69;
  char v70;

  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  sub_23DF89F20(*(_QWORD *)a2, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  sub_23DF8A078(v7, v8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  sub_23DF89F20(v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 24) = v10;
  sub_23DF8A078(v11, v12);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  v20 = *(_QWORD *)(a2 + 80);
  v19 = *(_QWORD *)(a2 + 88);
  v69 = *(_BYTE *)(a2 + 96);
  v70 = *(_BYTE *)(a2 + 97);
  sub_23DF98590(v13, v14, v15, v16, v17, v18, v20, v19, v69, v70);
  v21 = *(_QWORD *)(a1 + 32);
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 64);
  v26 = *(_QWORD *)(a1 + 72);
  v27 = *(_QWORD *)(a1 + 80);
  v28 = *(_QWORD *)(a1 + 88);
  v29 = *(_BYTE *)(a1 + 96);
  v30 = *(_BYTE *)(a1 + 97);
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v16;
  *(_QWORD *)(a1 + 64) = v17;
  *(_QWORD *)(a1 + 72) = v18;
  v31 = a2;
  *(_QWORD *)(a1 + 80) = v20;
  *(_QWORD *)(a1 + 88) = v19;
  *(_BYTE *)(a1 + 96) = v69;
  *(_BYTE *)(a1 + 97) = v70;
  sub_23DF985F0(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = v31 + v32;
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(v31 + v32);
  swift_retain();
  swift_release();
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  swift_retain();
  swift_release();
  v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v36 = (char *)(v33 + v35);
  v37 = (char *)(v34 + v35);
  v38 = type metadata accessor for Device.Control.ColorState(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  LODWORD(v19) = v40(v36, 1, v38);
  v41 = v40(v37, 1, v38);
  if (!(_DWORD)v19)
  {
    if (v41)
    {
      sub_23DF73E54((uint64_t)v36, type metadata accessor for Device.Control.ColorState);
      goto LABEL_7;
    }
    v46 = sub_23E135328();
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
    v49 = v48(v36, 1, v46);
    v50 = v48(v37, 1, v46);
    if (v49)
    {
      if (!v50)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v36, v37, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v36, 0, 1, v46);
LABEL_16:
        v56 = *(int *)(v38 + 20);
        v57 = &v36[v56];
        v58 = &v37[v56];
        v59 = *(_QWORD *)v58;
        v57[8] = v58[8];
        *(_QWORD *)v57 = v59;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v36, v37, v46);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v46);
    }
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_16;
  }
  if (v41)
  {
LABEL_7:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_17;
  }
  v42 = sub_23E135328();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v37, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v36, v37, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v36, 0, 1, v42);
  }
  v51 = *(int *)(v38 + 20);
  v52 = &v36[v51];
  v53 = &v37[v51];
  v54 = *(_QWORD *)v53;
  v52[8] = v53[8];
  *(_QWORD *)v52 = v54;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_17:
  v60 = a3[8];
  v61 = a1 + v60;
  v62 = v31 + v60;
  *(_BYTE *)v61 = *(_BYTE *)v62;
  *(_BYTE *)(v61 + 1) = *(_BYTE *)(v62 + 1);
  *(_BYTE *)(v61 + 2) = *(_BYTE *)(v62 + 2);
  v63 = *(_WORD *)(v62 + 4);
  *(_BYTE *)(v61 + 6) = *(_BYTE *)(v62 + 6);
  *(_WORD *)(v61 + 4) = v63;
  v64 = *(_WORD *)(v62 + 8);
  *(_BYTE *)(v61 + 10) = *(_BYTE *)(v62 + 10);
  *(_WORD *)(v61 + 8) = v64;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(v31 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(v31 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(v31 + a3[11]);
  v65 = a3[12];
  v66 = a1 + v65;
  v67 = v31 + v65;
  *(_BYTE *)v66 = *(_BYTE *)v67;
  *(_QWORD *)(v66 + 8) = *(_QWORD *)(v67 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23DFC46B4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v11;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v13 = (char *)v9 + v12;
  v14 = (char *)(v10 + v12);
  v15 = type metadata accessor for Device.Control.ColorState(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_23E135328();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v13, v14, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    v21 = *(int *)(v15 + 20);
    v22 = &v13[v21];
    v23 = &v14[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v24 = a3[8];
  v25 = a3[9];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_DWORD *)(v26 + 7) = *(_DWORD *)(v27 + 7);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v28 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_23DFC489C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_23DF8A078(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_23DF8A078(v11, v12);
  v13 = *((_BYTE *)a2 + 96);
  v14 = *((_BYTE *)a2 + 97);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 88);
  v23 = *(_BYTE *)(a1 + 96);
  v24 = *(_BYTE *)(a1 + 97);
  v25 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v25;
  v26 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 80) = v26;
  *(_BYTE *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 97) = v14;
  sub_23DF985F0(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  v27 = a3[7];
  v28 = a1 + v27;
  v29 = (uint64_t)a2 + v27;
  *(_QWORD *)(a1 + v27) = *(uint64_t *)((char *)a2 + v27);
  swift_release();
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_release();
  v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v31 = (char *)(v28 + v30);
  v32 = (char *)(v29 + v30);
  v33 = type metadata accessor for Device.Control.ColorState(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (v37)
    {
      sub_23DF73E54((uint64_t)v31, type metadata accessor for Device.Control.ColorState);
      goto LABEL_7;
    }
    v42 = sub_23E135328();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
    v45 = v44(v31, 1, v42);
    v46 = v44(v32, 1, v42);
    if (v45)
    {
      if (!v46)
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
LABEL_16:
        v51 = *(int *)(v33 + 20);
        v52 = &v31[v51];
        v53 = &v32[v51];
        *(_QWORD *)v52 = *(_QWORD *)v53;
        v52[8] = v53[8];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v46)
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v42);
    }
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_16;
  }
  if (v37)
  {
LABEL_7:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_17;
  }
  v38 = sub_23E135328();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  v47 = *(int *)(v33 + 20);
  v48 = &v31[v47];
  v49 = &v32[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = v49[8];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_17:
  v54 = a3[8];
  v55 = a3[9];
  v56 = a1 + v54;
  v57 = (uint64_t)a2 + v54;
  *(_BYTE *)v56 = *(_BYTE *)v57;
  *(_BYTE *)(v56 + 1) = *(_BYTE *)(v57 + 1);
  *(_BYTE *)(v56 + 2) = *(_BYTE *)(v57 + 2);
  *(_WORD *)(v56 + 4) = *(_WORD *)(v57 + 4);
  *(_BYTE *)(v56 + 6) = *(_BYTE *)(v57 + 6);
  *(_WORD *)(v56 + 8) = *(_WORD *)(v57 + 8);
  *(_BYTE *)(v56 + 10) = *(_BYTE *)(v57 + 10);
  *(_BYTE *)(a1 + v55) = *((_BYTE *)a2 + v55);
  v58 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  *(_BYTE *)(a1 + v58) = *((_BYTE *)a2 + v58);
  v59 = a3[12];
  v60 = a1 + v59;
  v61 = (uint64_t)a2 + v59;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  swift_release();
  return a1;
}

uint64_t sub_23DFC4C30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFC4C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 48) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23DFC4CD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFC4CDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 48) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for ColorControl(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D1F3C0);
}

void sub_23DFC4D74()
{
  unint64_t v0;

  sub_23DFC4E20();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23DFC4E20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D1F3D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D5E8);
    v0 = sub_23E136EDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D1F3D0);
  }
}

uint64_t sub_23DFC4E78()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DFC4E88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F450;
  if (!qword_256D1F450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F448);
    v2[0] = sub_23DFC4F0C();
    v2[1] = sub_23DF89B88(&qword_256D1F4A0, &qword_256D1F438, MEMORY[0x24BDF19A8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F450);
  }
  return result;
}

unint64_t sub_23DFC4F0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F458;
  if (!qword_256D1F458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F460);
    v2[0] = sub_23DFC4F90();
    v2[1] = sub_23DF89B88(&qword_256D1F490, &qword_256D1F498, MEMORY[0x24BDEF828]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F458);
  }
  return result;
}

unint64_t sub_23DFC4F90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F468;
  if (!qword_256D1F468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F470);
    v2[0] = sub_23DF89B88(&qword_256D1F478, &qword_256D1F480, MEMORY[0x24BDEDA10]);
    v2[1] = sub_23DFC5014();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F468);
  }
  return result;
}

unint64_t sub_23DFC5014()
{
  unint64_t result;

  result = qword_256D1F488;
  if (!qword_256D1F488)
  {
    result = MEMORY[0x24264C55C](&unk_23E139204, &type metadata for AnimationModel.ControlAnimation);
    atomic_store(result, (unint64_t *)&qword_256D1F488);
  }
  return result;
}

unint64_t sub_23DFC5058()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F4A8;
  if (!qword_256D1F4A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F428);
    v2[0] = sub_23DFC50C4();
    v2[1] = sub_23DFC5014();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F4A8);
  }
  return result;
}

unint64_t sub_23DFC50C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F4B0;
  if (!qword_256D1F4B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F420);
    v2[0] = sub_23DFC5148();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F4B0);
  }
  return result;
}

unint64_t sub_23DFC5148()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F4B8;
  if (!qword_256D1F4B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4C0);
    v2[0] = sub_23DFC51CC();
    v2[1] = sub_23DF89B88(&qword_256D1F548, &qword_256D1F550, MEMORY[0x24BDF0960]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F4B8);
  }
  return result;
}

unint64_t sub_23DFC51CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  result = qword_256D1F4C8;
  if (!qword_256D1F4C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4D0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4E0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4F0);
    v3 = sub_23DFC5380();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F528);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F530);
    sub_23DF89B88(&qword_256D1F538, &qword_256D1F530, MEMORY[0x24BDF4D98]);
    sub_23DFC5488();
    swift_getOpaqueTypeConformance2();
    v4[4] = v3;
    v4[5] = swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v4[2] = v2;
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_256D1F4C8);
  }
  return result;
}

unint64_t sub_23DFC5380()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F4F8;
  if (!qword_256D1F4F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F4E8);
    v2[0] = sub_23DFC53EC();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F4F8);
  }
  return result;
}

unint64_t sub_23DFC53EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F500;
  if (!qword_256D1F500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F508);
    v2[0] = sub_23DF89B88(&qword_256D1F510, &qword_256D1F518, MEMORY[0x24BDF44C8]);
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F500);
  }
  return result;
}

unint64_t sub_23DFC5488()
{
  unint64_t result;

  result = qword_256D1F540;
  if (!qword_256D1F540)
  {
    result = MEMORY[0x24264C55C](&unk_23E13A574, &type metadata for ColorControl.SheetGroupBoxStyle);
    atomic_store(result, (unint64_t *)&qword_256D1F540);
  }
  return result;
}

uint64_t sub_23DFC54D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for ColorControl(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23DFBF630(a1, v2 + v6, a2, *(double *)(v2 + v7), *(double *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_23DFC553C()
{
  unint64_t result;

  result = qword_256D1F580;
  if (!qword_256D1F580)
  {
    result = MEMORY[0x24264C55C](&unk_23E13A53C, &type metadata for ColorControl.GridElementRow);
    atomic_store(result, (unint64_t *)&qword_256D1F580);
  }
  return result;
}

uint64_t sub_23DFC5584()
{
  type metadata accessor for ColorControl(0);
  return sub_23DFBB6AC();
}

uint64_t sub_23DFC55D0(uint64_t result)
{
  *(_BYTE *)(result + 200) = 0;
  return result;
}

unint64_t sub_23DFC55D8()
{
  unint64_t result;

  result = qword_256D1F5A0;
  if (!qword_256D1F5A0)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_256D1F5A0);
  }
  return result;
}

uint64_t sub_23DFC561C(uint64_t result)
{
  *(_BYTE *)(result + 200) = 1;
  return result;
}

uint64_t sub_23DFC5628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DFBB724(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23DFC5630()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F5B0;
  if (!qword_256D1F5B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F5A8);
    v2[0] = sub_23DF89B88(&qword_256D1F5B8, &qword_256D1F5C0, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F5B0);
  }
  return result;
}

uint64_t sub_23DFC56B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_23E136024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for ColorControl(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + ((v3 + v4 + v6) & ~v6);
  sub_23DF8A078(*(_QWORD *)v7, *(_BYTE *)(v7 + 8));
  sub_23DF8A078(*(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
  sub_23DF985F0(*(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), *(_BYTE *)(v7 + 96), *(_BYTE *)(v7 + 97));
  v8 = v7 + *(int *)(v5 + 28);
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v10 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_23E135328();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFC5838()
{
  sub_23E136024();
  type metadata accessor for ColorControl(0);
  return sub_23DFBDE8C();
}

unint64_t sub_23DFC5898()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D1F5D8;
  if (!qword_256D1F5D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F5D0);
    v2 = sub_23DFC58FC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1F5D8);
  }
  return result;
}

unint64_t sub_23DFC58FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D1F5E0;
  if (!qword_256D1F5E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F5E8);
    v2 = MEMORY[0x24BEE13E8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1F5E0);
  }
  return result;
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ColorControl(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_23DF8A078(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  sub_23DF8A078(*(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
  sub_23DF985F0(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), *(_BYTE *)(v3 + 96), *(_BYTE *)(v3 + 97));
  v4 = v3 + *(int *)(v1 + 28);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v6 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFC5ABC(uint64_t a1)
{
  return sub_23DFC5FD4(a1, (uint64_t (*)(uint64_t, unint64_t, double, double))sub_23DFC1A74);
}

unint64_t sub_23DFC5AC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F670;
  if (!qword_256D1F670)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F668);
    v2[0] = sub_23DFC5B4C();
    v2[1] = sub_23DF89B88(&qword_256D1F548, &qword_256D1F550, MEMORY[0x24BDF0960]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F670);
  }
  return result;
}

unint64_t sub_23DFC5B4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F678;
  if (!qword_256D1F678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F680);
    v2[0] = sub_23DFC5BD8(&qword_256D1F688, &qword_256D1F690, &qword_256D1F698, &qword_256D1F6A0);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F678);
  }
  return result;
}

uint64_t sub_23DFC5BD8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_23DF89B88(a3, a4, MEMORY[0x24BDF44C8]);
    v9[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DFC5C60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F6B8;
  if (!qword_256D1F6B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F608);
    v2[0] = sub_23DF73F28(&qword_256D1F6C0, (uint64_t (*)(uint64_t))_s18ColorControlCircleVMa, (uint64_t)&unk_23E13AE78);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F6B8);
  }
  return result;
}

unint64_t sub_23DFC5CE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F6D8;
  if (!qword_256D1F6D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F638);
    v2[0] = sub_23DFC5D68();
    v2[1] = sub_23DF89B88(&qword_256D1F548, &qword_256D1F550, MEMORY[0x24BDF0960]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F6D8);
  }
  return result;
}

unint64_t sub_23DFC5D68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D1F6E0;
  if (!qword_256D1F6E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F630);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F620);
    v2[3] = sub_23DFC5BD8(&qword_256D1F6C8, &qword_256D1F620, &qword_256D1F6D0, &qword_256D1F618);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F6E0);
  }
  return result;
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for ColorControl(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = *(_QWORD *)(v2 + 64);
  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v3;
  sub_23DF8A078(*(_QWORD *)(v0 + v3), *(_BYTE *)(v0 + v3 + 8));
  sub_23DF8A078(*(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
  sub_23DF985F0(*(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), *(_BYTE *)(v7 + 96), *(_BYTE *)(v7 + 97));
  v8 = v0 + v3 + *(int *)(v1 + 28);
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v10 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10)
    && !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
  {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v9, v4);
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v12 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_23DFC5FC8(uint64_t a1)
{
  return sub_23DFC5FD4(a1, (uint64_t (*)(uint64_t, unint64_t, double, double))sub_23DFBF7F8);
}

uint64_t sub_23DFC5FD4(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, double, double))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(type metadata accessor for ColorControl(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(a1, v2 + v5, *(double *)(v2 + v6), *(double *)(v2 + ((v6 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for ColorControl.GridElement(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D1F818);
}

unint64_t sub_23DFC6064()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F708;
  if (!qword_256D1F708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F6F8);
    v2[0] = sub_23DFC60D0();
    v2[1] = sub_23DFC50C4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F708);
  }
  return result;
}

unint64_t sub_23DFC60D0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[4];

  result = qword_256D1F710;
  if (!qword_256D1F710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F718);
    v2 = sub_23DFC616C();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F668);
    v3[3] = sub_23DFC5AC8();
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D1F710);
  }
  return result;
}

unint64_t sub_23DFC616C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F720;
  if (!qword_256D1F720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F640);
    v2[0] = sub_23DFC5CE4();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F720);
  }
  return result;
}

uint64_t sub_23DFC61F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ColorControl(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E135328() - 8) + 80);
  return sub_23DFC11AC(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_23DFC625C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ColorControl(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_23DF8A078(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  sub_23DF8A078(*(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
  sub_23DF985F0(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), *(_BYTE *)(v3 + 96), *(_BYTE *)(v3 + 97));
  v4 = v3 + *(int *)(v1 + 28);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v6 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFC63D0()
{
  type metadata accessor for ColorControl(0);
  return sub_23DFBEA3C();
}

uint64_t sub_23DFC63FC()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23DFC6428()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F780;
  if (!qword_256D1F780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F750);
    v2[0] = sub_23DFC5C60();
    v2[1] = sub_23DF8DABC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F780);
  }
  return result;
}

unint64_t sub_23DFC6494()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D1F788;
  if (!qword_256D1F788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F778);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F608);
    v2[3] = sub_23DFC5C60();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F788);
  }
  return result;
}

uint64_t sub_23DFC6544()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorControl(0) - 8) + 80);
  return sub_23DFBEAA4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_23DFC6580@<X0>(uint64_t *a1@<X8>)
{
  return sub_23DFBEC44(a1);
}

uint64_t sub_23DFC65A4()
{
  type metadata accessor for ColorControl(0);
  return sub_23DFC2850();
}

uint64_t sub_23DFC65E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorControl(0) - 8) + 80);
  return sub_23DFC28B4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t *sub_23DFC6620(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23DFC66E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_23DFC6750(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23DFC67F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_23DFC68E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23DFC6988(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23DFC6A78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFC6A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23E135328();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23DFC6AD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFC6ADC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_23E135328();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23DFC6B30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E135328();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23DFC6B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E135328();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23DFC6BA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E135328();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ColorControl.GridElementRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17MediaPlayerConfigVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ColorControl.GridElementRow(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ColorControl.GridElementRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorControl.GridElementRow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorControl.GridElementRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorControl.GridElementRow()
{
  return &type metadata for ColorControl.GridElementRow;
}

ValueMetadata *type metadata accessor for ColorControl.SheetGroupBoxStyle()
{
  return &type metadata for ColorControl.SheetGroupBoxStyle;
}

unint64_t sub_23DFC6D48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F828;
  if (!qword_256D1F828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F830);
    v2[0] = sub_23DFC4E88();
    v2[1] = sub_23DFC5058();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F828);
  }
  return result;
}

unint64_t sub_23DFC6DB8()
{
  unint64_t result;

  result = qword_256D1F838;
  if (!qword_256D1F838)
  {
    result = MEMORY[0x24264C55C](&unk_23E13A434, &type metadata for ColorControl.GridElementRow);
    atomic_store(result, (unint64_t *)&qword_256D1F838);
  }
  return result;
}

uint64_t sub_23DFC6DFC()
{
  return sub_23DF73F28(&qword_256D1F840, type metadata accessor for ColorControl.GridElement, (uint64_t)&unk_23E13A49C);
}

uint64_t sub_23DFC6E28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFC6E38()
{
  return MEMORY[0x24BEE1778];
}

uint64_t sub_23DFC6E44()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DFC6E58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F870;
  if (!qword_256D1F870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F858);
    v2[0] = sub_23DF89B88(&qword_256D1F878, &qword_256D1F848, MEMORY[0x24BDF4700]);
    v2[1] = sub_23DF89B88(&qword_256D1F880, &qword_256D1F888, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F870);
  }
  return result;
}

uint64_t sub_23DFC6EF4()
{
  return sub_23DF73F28(qword_256D1F890, type metadata accessor for ColorControl.GridElement, (uint64_t)&unk_23E13A4C4);
}

ValueMetadata *_s10ThermostatVMa()
{
  return &_s10ThermostatVN;
}

unint64_t sub_23DFC6F38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1D4B8;
  if (!qword_256D1D4B8)
  {
    v1 = type metadata accessor for HAPControlSolver.Source();
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for HAPControlSolver.Source, v1);
    atomic_store(result, (unint64_t *)&qword_256D1D4B8);
  }
  return result;
}

uint64_t sub_23DFC6F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  char *v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  char v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  char v72;
  uint64_t v73;
  char *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  __int128 v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  __int16 v149;

  v144 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v125 = (uint64_t)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v126 = (uint64_t)&v119 - v4;
  v124 = type metadata accessor for AccessoryControlInfo(0);
  v123 = *(_QWORD *)(v124 - 8);
  v5 = MEMORY[0x24BDAC7A8](v124);
  v122 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v136 = (char *)&v119 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8E8);
  MEMORY[0x24BDAC7A8](v8);
  v134 = (uint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_23E135B74();
  v139 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v138 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for HAPControlSolver.Source();
  v11 = MEMORY[0x24BDAC7A8](v143);
  *(_QWORD *)&v137 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v133 = (uint64_t)&v119 - v13;
  v14 = sub_23E1356DC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23E135B2C();
  v141 = *(_QWORD *)(v24 - 8);
  v142 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v140 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F8);
  v27 = *(_QWORD *)(v15 + 72);
  v28 = *(unsigned __int8 *)(v15 + 80);
  v29 = (v28 + 32) & ~v28;
  v130 = v26;
  v129 = v29 + 2 * v27;
  v128 = v28 | 7;
  v30 = swift_allocObject();
  v127 = xmmword_23E138410;
  *(_OWORD *)(v30 + 16) = xmmword_23E138410;
  v131 = v29;
  v31 = v30 + v29;
  v32 = *MEMORY[0x24BE4E308];
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104);
  v33(v31, v32, v14);
  v132 = v27;
  v33(v31 + v27, *MEMORY[0x24BE4E2C0], v14);
  v34 = sub_23E0E23A0(v30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v35 = v144;
  LOBYTE(v30) = HAPControlSolver.Source.has(characteristicKinds:)(v34);
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v33((uint64_t)v17, v32, v14);
  v36 = v35;
  sub_23E135A48();
  v37 = *(void (**)(char *, uint64_t))(v15 + 8);
  v121 = v14;
  v37(v17, v14);
  v38 = sub_23E1359AC();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v20, 1, v38) == 1)
  {
    sub_23DF89C7C((uint64_t)v20, &qword_256D1D530);
    v40 = sub_23E135B8C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 1, 1, v40);
LABEL_5:
    sub_23DF89C7C((uint64_t)v23, &qword_256D1F8F0);
    return MEMORY[0x24BEE4AF8];
  }
  sub_23E1359A0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v38);
  v41 = sub_23E135B8C();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v23, 1, v41) == 1)
    goto LABEL_5;
  if ((*(unsigned int (**)(char *, uint64_t))(v42 + 88))(v23, v41) != *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v41);
    return MEMORY[0x24BEE4AF8];
  }
  v120 = v33;
  (*(void (**)(char *, uint64_t))(v42 + 96))(v23, v41);
  (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v140, v23, v142);
  v45 = sub_23E135AFC();
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v47 = (unint64_t *)(v45 + 32);
    v48 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v50 = *v47++;
      v49 = v50;
      if (v50 <= 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v48 = sub_23E0076F8(0, *((_QWORD *)v48 + 2) + 1, 1, v48);
        v52 = *((_QWORD *)v48 + 2);
        v51 = *((_QWORD *)v48 + 3);
        if (v52 >= v51 >> 1)
          v48 = sub_23E0076F8((char *)(v51 > 1), v52 + 1, 1, v48);
        *((_QWORD *)v48 + 2) = v52 + 1;
        v48[v52 + 32] = 0x3010200u >> (8 * v49);
      }
      --v46;
    }
    while (v46);
  }
  else
  {
    v48 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v53 = sub_23E073EC8((uint64_t)v48);
  swift_bridgeObjectRelease();
  v54 = sub_23DFC7C44(3u, v53);
  v55 = v36;
  v56 = v133;
  sub_23DF73E10(v36, v133, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v57 = (unsigned int *)MEMORY[0x24BE4E2A8];
  v58 = (unsigned int *)MEMORY[0x24BE4E298];
  if (v54)
  {
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v127;
    v60 = v59 + v131;
    v61 = v121;
    v62 = v120;
    v120(v59 + v131, *v57, v121);
    v62(v60 + v132, *v58, v61);
    v63 = sub_23E0E23A0(v59);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v64 = HAPControlSolver.Source.has(characteristicKinds:)(v63);
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = 0;
  }
  v65 = v137;
  sub_23DF73E54(v56, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v66 = sub_23DFC7C44(3u, v53);
  sub_23DF73E10(v55, v65, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v119 = v53;
  if (v66)
  {
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = v127;
    v68 = v67 + v131;
    v69 = v121;
    v70 = v120;
    v120(v67 + v131, *v57, v121);
    v70(v68 + v132, *v58, v69);
    v71 = sub_23E0E23A0(v67);
    swift_setDeallocating();
    swift_arrayDestroy();
    v65 = v137;
    swift_deallocClassInstance();
    LOBYTE(v70) = HAPControlSolver.Source.has(characteristicKinds:)(v71);
    swift_bridgeObjectRelease();
    v72 = v70 ^ 1;
  }
  else
  {
    v72 = 0;
  }
  v73 = (uint64_t)v136;
  v74 = v138;
  sub_23DF73E54(v65, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v75 = v72 & 1;
  sub_23DFC7D30(v72 & 1, v64 & 1, &v146);
  v76 = v146;
  v77 = v134;
  sub_23DFC7DC4(v55, (unsigned __int8 *)&v146, v134);
  v78 = v139;
  v79 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v77, 1, v135) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v77, &qword_256D1F8E8);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v140, v142);
    return MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v74, v77, v79);
  v145 = v76;
  sub_23DFC8C80(v55, &v145, v75, (uint64_t)&v146);
  v137 = v146;
  v80 = v147;
  v81 = v148;
  v82 = v149;
  sub_23E135B50();
  v84 = v83;
  sub_23E135B44();
  v86 = v85;
  sub_23E135B68();
  v88 = v87;
  v89 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v73, v55, v89);
  v90 = (int *)v124;
  v91 = v73 + *(int *)(v124 + 20);
  *(_QWORD *)v91 = v84;
  *(_QWORD *)(v91 + 8) = v86;
  *(_QWORD *)(v91 + 16) = v88;
  *(_BYTE *)(v91 + 24) = 3;
  *(_QWORD *)(v91 + 32) = 1;
  *(_BYTE *)(v91 + 40) = 1;
  *(_OWORD *)(v91 + 48) = v137;
  *(_QWORD *)(v91 + 64) = v80;
  *(_QWORD *)(v91 + 72) = v81;
  *(_WORD *)(v91 + 80) = v82;
  type metadata accessor for AccessoryControlInfo.State(0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v92 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
  v93 = (v92 + 32) & ~v92;
  v94 = swift_allocObject();
  v137 = xmmword_23E138050;
  *(_OWORD *)(v94 + 16) = xmmword_23E138050;
  sub_23DF73E10(v55, v94 + v93, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v95 = (_QWORD *)(v73 + v90[7]);
  v96 = v90[9];
  *(_QWORD *)(v73 + v90[11]) = v94;
  *(_BYTE *)(v73 + v90[6]) = 0;
  *v95 = 0;
  v95[1] = 0;
  *(_WORD *)(v73 + v90[8]) = 1028;
  *(_BYTE *)(v73 + v96) = 12;
  *(_BYTE *)(v73 + v90[10]) = 1;
  v97 = v126;
  sub_23DFC8DB0(v55, v76, v126);
  swift_bridgeObjectRelease();
  v98 = v125;
  sub_23DF89C1C(v97, v125, &qword_256D1F300);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v123 + 48))(v98, 1, v90) == 1)
  {
    sub_23DF89C7C(v98, &qword_256D1F300);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v99 = type metadata accessor for AccessoryControlGroup(0);
    v100 = *(unsigned __int8 *)(*(_QWORD *)(v99 - 8) + 80);
    v101 = (v100 + 32) & ~v100;
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v137;
    v102 = v43 + v101;
    sub_23DF73E10(v73, v102, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v103 = (uint64_t *)(v55 + *(int *)(v143 + 28));
    v105 = *v103;
    v104 = v103[1];
    v106 = (_QWORD *)(v102 + *(int *)(v99 + 24));
    v107 = (_QWORD *)(v102 + *(int *)(v99 + 20));
    *v107 = v105;
    v107[1] = v104;
    *v106 = 0;
    v106[1] = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    v108 = v122;
    sub_23DF89384(v98, v122, type metadata accessor for AccessoryControlInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v109 = type metadata accessor for AccessoryControlGroup(0);
    v110 = *(unsigned __int8 *)(*(_QWORD *)(v109 - 8) + 80);
    v111 = (v110 + 32) & ~v110;
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v137;
    v112 = v43 + v111;
    v113 = v112 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    sub_23DF73E10(v73, v112, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E10(v108, v113, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v114 = (uint64_t *)(v55 + *(int *)(v143 + 28));
    v116 = *v114;
    v115 = v114[1];
    v117 = (_QWORD *)(v112 + *(int *)(v109 + 24));
    v118 = (_QWORD *)(v112 + *(int *)(v109 + 20));
    *v118 = v116;
    v118[1] = v115;
    *v117 = 0;
    v117[1] = 0;
    swift_bridgeObjectRetain();
    sub_23DF73E54(v108, type metadata accessor for AccessoryControlInfo);
  }
  sub_23DF89C7C(v97, &qword_256D1F300);
  sub_23DF73E54(v73, type metadata accessor for AccessoryControlInfo);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v79);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v140, v142);
  return v43;
}

BOOL sub_23DFC7C44(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_23E137698();
  sub_23E1376A4();
  v4 = sub_23E1376D4();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

unint64_t sub_23DFC7D30@<X0>(char a1@<W1>, char a2@<W2>, _BYTE *a3@<X8>)
{
  unint64_t result;
  char v7;
  unsigned int v8;

  type metadata accessor for HAPControlSolver.Source();
  result = sub_23E135A60();
  if ((v7 & 1) != 0)
  {
    LOBYTE(v8) = 4;
  }
  else if ((a1 & 1) != 0 && result == 3)
  {
    LOBYTE(v8) = 3;
  }
  else
  {
    LOBYTE(v8) = 0;
    if ((result != 3) | a2 & 1 && result <= 3)
      v8 = 0x3010200u >> (8 * result);
  }
  *a3 = v8;
  return result;
}

uint64_t sub_23DFC7DC4@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unsigned int v57;
  uint64_t v59;
  void (*v60)(char *, _QWORD, uint64_t);
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t);
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t);
  int v101;
  void (*v102)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  int v108;
  void (*v109)(char *, uint64_t);
  uint64_t (*v110)(uint64_t, uint64_t, uint64_t);
  int v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;

  v154 = (char *)a1;
  v155 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1F900);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v141 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v138 = (char *)&v131 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8E8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v143 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v149 = (char *)&v131 - v11;
  v12 = sub_23E135B74();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v137 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v140 = (char *)&v131 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v145 = (char *)&v131 - v18;
  v19 = sub_23E135B8C();
  v152 = *(_QWORD *)(v19 - 8);
  v153 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v147 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v139 = (char *)&v131 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v144 = (char *)&v131 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v148 = (char *)&v131 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v150 = (void (*)(char *, char *, uint64_t))((char *)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = MEMORY[0x24BDAC7A8](v28);
  v142 = (char *)&v131 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v146 = (char *)&v131 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v151 = (uint64_t)&v131 - v34;
  v35 = sub_23E1356DC();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v131 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43);
  v48 = (char *)&v131 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)&v131 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v56 = (char *)&v131 - v55;
  v57 = *a2;
  if (v57 == 4)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v155, 1, 1, v12);
  v133 = v54;
  v134 = v53;
  v132 = v52;
  v135 = v13;
  v136 = v12;
  v59 = (uint64_t)v51;
  v60 = *(void (**)(char *, _QWORD, uint64_t))(v36 + 104);
  v60(v38, *MEMORY[0x24BE4E2A8], v35);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  v61 = *(void (**)(char *, uint64_t))(v36 + 8);
  v61(v38, v35);
  v60(v38, *MEMORY[0x24BE4E298], v35);
  sub_23E135A48();
  v61(v38, v35);
  if (v57 > 2)
  {
    v68 = v60;
    v69 = sub_23E1359AC();
    v148 = *(char **)(v69 - 8);
    v70 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v148 + 6);
    v154 = v56;
    v71 = v70(v56, 1, v69);
    v151 = v59;
    sub_23DF89C1C(v59, (uint64_t)v45, &qword_256D1D530);
    if (v71 == 1 || v70(v45, 1, v69) == 1)
    {
      sub_23DF89C7C((uint64_t)v45, &qword_256D1D530);
      v68(v38, *MEMORY[0x24BE4E2C0], v35);
      v72 = v134;
      sub_23E135A48();
      v61(v38, v35);
      if (v70((char *)v72, 1, v69) == 1)
      {
        sub_23DF89C7C(v151, &qword_256D1D530);
        sub_23DF89C7C((uint64_t)v154, &qword_256D1D530);
        sub_23DF89C7C(v72, &qword_256D1D530);
        v73 = v155;
        v74 = v136;
        v75 = v135;
      }
      else
      {
        v80 = (uint64_t)v150;
        sub_23E1359A0();
        (*((void (**)(uint64_t, uint64_t))v148 + 1))(v72, v69);
        v82 = v152;
        v81 = v153;
        v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v80, 1, v153);
        v75 = v135;
        if (v83 != 1)
        {
          v91 = v147;
          (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v147, v80, v81);
          v92 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v91, v81);
          v93 = v155;
          v94 = v136;
          if (v92 == *MEMORY[0x24BE4EA90])
          {
            (*(void (**)(char *, uint64_t))(v82 + 96))(v91, v81);
            (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v93, v91, v94);
            v95 = 0;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v82 + 8))(v91, v81);
            v95 = 1;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v93, v95, 1, v94);
          sub_23DF89C7C(v151, &qword_256D1D530);
          sub_23DF89C7C((uint64_t)v154, &qword_256D1D530);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
        }
        sub_23DF89C7C(v151, &qword_256D1D530);
        sub_23DF89C7C((uint64_t)v154, &qword_256D1D530);
        sub_23DF89C7C(v80, &qword_256D1F8F0);
        v73 = v155;
        v74 = v136;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v73, 1, 1, v74);
    }
    sub_23DF89C7C((uint64_t)v45, &qword_256D1D530);
    v84 = v133;
    sub_23DF89C1C((uint64_t)v154, v133, &qword_256D1D530);
    if (v70((char *)v84, 1, v69) == 1)
    {
      sub_23DF89C7C(v84, &qword_256D1D530);
      v85 = v136;
      v86 = v135;
LABEL_24:
      v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
      v103 = (uint64_t)v149;
      v102(v149, 1, 1, v85);
LABEL_25:
      sub_23DF89C7C(v151, &qword_256D1D530);
      sub_23DF89C7C((uint64_t)v154, &qword_256D1D530);
      sub_23DF89C7C(v103, &qword_256D1F8E8);
      v104 = v155;
      v105 = 1;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v102)(v104, v105, 1, v85);
    }
    v150 = (void (*)(char *, char *, uint64_t))v70;
    v96 = (uint64_t)v146;
    sub_23E1359A0();
    v97 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v148 + 1);
    v97(v84, v69);
    v98 = v152;
    v99 = v153;
    v100 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48);
    v101 = v100(v96, 1, v153);
    v86 = v135;
    if (v101 == 1)
    {
      sub_23DF89C7C(v96, &qword_256D1F8F0);
      v85 = v136;
      goto LABEL_24;
    }
    v148 = (char *)v69;
    v106 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
    v107 = v144;
    v106(v144, v96, v99);
    v147 = *(char **)(v98 + 88);
    v108 = ((uint64_t (*)(char *, uint64_t))v147)(v107, v99);
    LODWORD(v134) = *MEMORY[0x24BE4EA90];
    v85 = v136;
    if (v108 == (_DWORD)v134)
    {
      (*(void (**)(char *, uint64_t))(v98 + 96))(v107, v99);
      v103 = (uint64_t)v149;
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v149, v107, v85);
      v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
      v102((char *)v103, 0, 1, v85);
      v109 = *(void (**)(char *, uint64_t))(v98 + 8);
    }
    else
    {
      v109 = *(void (**)(char *, uint64_t))(v98 + 8);
      v109(v107, v99);
      v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
      v103 = (uint64_t)v149;
      v102(v149, 1, 1, v85);
    }
    v109((char *)v96, v99);
    v110 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
    v111 = v110(v103, 1, v85);
    v112 = v103;
    if (v111 == 1)
      goto LABEL_25;
    v149 = (char *)v110;
    v113 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 32);
    v113(v145, v112, v85);
    v114 = v132;
    sub_23DF89C1C(v151, v132, &qword_256D1D530);
    v115 = v148;
    if (((unsigned int (*)(uint64_t, uint64_t, char *))v150)(v114, 1, v148) == 1)
    {
      v116 = &qword_256D1D530;
      v117 = v114;
    }
    else
    {
      v150 = (void (*)(char *, char *, uint64_t))v113;
      v118 = v142;
      sub_23E1359A0();
      v97(v114, (uint64_t)v115);
      v119 = v153;
      if (v100((uint64_t)v118, 1, v153) != 1)
      {
        v120 = v139;
        v106(v139, (uint64_t)v118, v119);
        v121 = ((uint64_t (*)(char *, uint64_t))v147)(v120, v119);
        if (v121 == (_DWORD)v134)
        {
          (*(void (**)(char *, uint64_t))(v152 + 96))(v120, v119);
          v103 = (uint64_t)v143;
          v150(v143, v120, v85);
          v122 = 0;
          v123 = (uint64_t)v141;
        }
        else
        {
          v109(v120, v119);
          v122 = 1;
          v123 = (uint64_t)v141;
          v103 = (uint64_t)v143;
        }
        v102((char *)v103, v122, 1, v85);
        v109(v142, v119);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v149)(v103, 1, v85) != 1)
        {
          v124 = v140;
          v150(v140, (char *)v103, v85);
          sub_23E135B44();
          sub_23E135B44();
          sub_23E135B50();
          sub_23E135B50();
          sub_23E135B68();
          sub_23E135B68();
          sub_23E135B5C();
          v125 = v137;
          (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v137, v124, v85);
          v126 = sub_23E135B80();
          v127 = *(_QWORD *)(v126 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v123, 1, v126) == 1)
          {
            sub_23E135B5C();
            v128 = *(void (**)(char *, uint64_t))(v86 + 8);
            v128(v125, v85);
            sub_23DF89C7C(v123, qword_256D1F900);
          }
          else
          {
            v128 = *(void (**)(char *, uint64_t))(v86 + 8);
            v128(v125, v85);
            v129 = v138;
            (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v138, v123, v126);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v129, 0, 1, v126);
          }
          v130 = v155;
          sub_23E135B38();
          v128(v140, v85);
          v128(v145, v85);
          sub_23DF89C7C(v151, &qword_256D1D530);
          sub_23DF89C7C((uint64_t)v154, &qword_256D1D530);
          v104 = v130;
          v105 = 0;
          return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v102)(v104, v105, 1, v85);
        }
        goto LABEL_40;
      }
      v116 = &qword_256D1F8F0;
      v117 = (uint64_t)v118;
    }
    sub_23DF89C7C(v117, v116);
    v103 = (uint64_t)v143;
    v102(v143, 1, 1, v85);
LABEL_40:
    (*(void (**)(char *, uint64_t))(v86 + 8))(v145, v85);
    goto LABEL_25;
  }
  v62 = v59;
  v60(v38, *MEMORY[0x24BE4E2C0], v35);
  sub_23E135A48();
  v61(v38, v35);
  v63 = sub_23E1359AC();
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v48, 1, v63) == 1)
  {
    sub_23DF89C7C(v59, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v56, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v48, &qword_256D1D530);
    v65 = v155;
    v66 = v136;
    v67 = v135;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v65, 1, 1, v66);
  }
  v76 = v151;
  sub_23E1359A0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v63);
  v78 = v152;
  v77 = v153;
  v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v76, 1, v153);
  v66 = v136;
  v67 = v135;
  if (v79 == 1)
  {
    sub_23DF89C7C(v62, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v56, &qword_256D1D530);
    sub_23DF89C7C(v76, &qword_256D1F8F0);
    v65 = v155;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v65, 1, 1, v66);
  }
  v87 = v148;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v148, v76, v77);
  v88 = (*(uint64_t (**)(char *, uint64_t))(v78 + 88))(v87, v77);
  v89 = v155;
  if (v88 == *MEMORY[0x24BE4EA90])
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v87, v77);
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v89, v87, v66);
    v90 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v78 + 8))(v87, v77);
    v90 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v89, v90, 1, v66);
  sub_23DF89C7C(v62, &qword_256D1D530);
  sub_23DF89C7C((uint64_t)v56, &qword_256D1D530);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 8))(v76, v77);
}

uint64_t sub_23DFC8C80@<X0>(uint64_t result@<X0>, unsigned __int8 *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v5;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  char v16;
  __int16 v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v5 = *a2;
  if (v5 == 4)
    goto LABEL_11;
  type metadata accessor for HAPControlSolver.Source();
  v7 = sub_23E135A3C();
  v9 = v8;
  v21 = sub_23E135A30();
  v11 = v10;
  v12 = sub_23E135A24();
  v14 = v13;
  result = sub_23E135A18();
  if ((v5 - 1) < 2)
  {
    if ((v11 & 1) == 0)
    {
      *(_QWORD *)a4 = v7;
      *(_QWORD *)(a4 + 8) = v9 & 1;
      *(_QWORD *)(a4 + 16) = v21;
      *(_QWORD *)(a4 + 24) = 0;
      *(_WORD *)(a4 + 32) = (_WORD)v5 << 8;
      return result;
    }
    goto LABEL_11;
  }
  if (v5)
  {
    if ((a3 & 1) == 0)
    {
      if (((v14 | v15) & 1) == 0)
      {
        v19 = result;
        result = sub_23E135A3C();
        *(_QWORD *)a4 = result;
        *(_QWORD *)(a4 + 8) = v20 & 1;
        *(_QWORD *)(a4 + 16) = v12;
        *(_QWORD *)(a4 + 24) = v19;
        v17 = 769;
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    if ((v11 & 1) == 0)
    {
      result = sub_23E135A3C();
      *(_QWORD *)a4 = result;
      *(_QWORD *)(a4 + 8) = v18 & 1;
      *(_QWORD *)(a4 + 16) = v21;
      *(_QWORD *)(a4 + 24) = 0;
      v17 = 768;
      goto LABEL_12;
    }
LABEL_11:
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    v17 = 255;
    goto LABEL_12;
  }
  result = sub_23E135A3C();
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v16 & 1;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  v17 = 2;
LABEL_12:
  *(_WORD *)(a4 + 32) = v17;
  return result;
}

uint64_t sub_23DFC8DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v45 = a2;
  v51 = a3;
  v46 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v46);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E134C80();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E1356DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E1359AC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE4E308], v8);
  v44 = type metadata accessor for HAPControlSolver.Source();
  v50 = a1;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_23DF89C7C((uint64_t)v14, &qword_256D1D530);
    v19 = type metadata accessor for AccessoryControlInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v51, 1, 1, v19);
  }
  else
  {
    v43 = v5;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v21 = swift_bridgeObjectRetain();
    v22 = sub_23E12E284(v21);
    swift_bridgeObjectRelease();
    v56 = v22;
    sub_23DFC98EC(&v56);
    v23 = v56;
    v40 = v18;
    v41 = v16;
    v42 = v15;
    v24 = *(_QWORD *)(v56 + 16);
    if (v24)
    {
      v56 = MEMORY[0x24BEE4AF8];
      sub_23E09E16C(0, v24, 0);
      v54 = 0x800000023E144860;
      v55 = 0x800000023E144820;
      v52 = 0x800000023E144880;
      v53 = 0x800000023E144840;
      __asm { BR              X9 }
    }
    swift_release();
    v25 = MEMORY[0x24BEE4AF8];
    v27 = v50;
    v26 = v51;
    v28 = *(_BYTE *)(v50 + *(int *)(v44 + 40));
    v29 = (uint64_t)v43;
    if (v45 == 4)
      v30 = 0;
    else
      v30 = qword_23E13A5E0[(char)v45];
    v31 = v45 == 4;
    v32 = v47;
    v33 = v40;
    sub_23E135988();
    *(_QWORD *)v29 = v25;
    *(_BYTE *)(v29 + 8) = v28;
    *(_QWORD *)(v29 + 16) = v30;
    *(_BYTE *)(v29 + 24) = v31;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v34 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_23E138050;
    sub_23DF73E10(v27, v36 + v35, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v42);
    v37 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v38 = (_QWORD *)(v26 + v37[7]);
    v39 = v37[9];
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v26, v32, v49);
    sub_23DF89384(v29, v26 + v37[5], type metadata accessor for AccessoryControlInfo.State);
    *(_QWORD *)(v26 + v37[11]) = v36;
    *(_BYTE *)(v26 + v37[6]) = 0;
    *v38 = 0;
    v38[1] = 0;
    *(_WORD *)(v26 + v37[8]) = 1028;
    *(_BYTE *)(v26 + v39) = 10;
    *(_BYTE *)(v26 + v37[10]) = 1;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v37 - 1) + 56))(v26, 0, 1, v37);
  }
}

uint64_t sub_23DFC9328@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = (_QWORD *)(v14 + *(int *)(v10 + 48));
  v16 = *MEMORY[0x24BE4E308];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  v15[3] = MEMORY[0x24BEE1768];
  *v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_23DFC9554@<X0>(__n128 *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v19[2];
  unsigned __int16 v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v19[0] = *a1;
  v19[1] = v9;
  v20 = a1[2].n128_u16[0];
  v10 = sub_23DFC96F0(v19);
  v11 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v12 = sub_23E134C80();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v15 + v14, a2, v12);
  v16 = sub_23E0E212C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v10;
  a3[1] = 0;
  v17 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v17 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v17 + 28)) = v16;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 0, 1, v17);
}

unint64_t sub_23DFC96F0(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v25;
  __n128 v26;
  char v27;

  sub_23DFCA204(a1 + 1, &v25);
  sub_23DFCA204(&v25, &v26);
  if (v27)
  {
    if (v27 == 1)
    {
      v1 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
      v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
      v3 = *(_QWORD *)(v2 - 8);
      v4 = *(_QWORD *)(v3 + 72);
      v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_23E138410;
      v7 = v6 + v5;
      v8 = (_QWORD *)(v7 + *(int *)(v2 + 48));
      v9 = *MEMORY[0x24BE4E2A8];
      v10 = sub_23E1356DC();
      v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
      ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v7, v9, v10);
      v12 = MEMORY[0x24BEE13C8];
      v8[3] = MEMORY[0x24BEE13C8];
      *v8 = v1.n128_u64[0];
      v13 = (_QWORD *)(v7 + v4 + *(int *)(v2 + 48));
      v11();
      v13[3] = v12;
      *v13 = v1.n128_u64[1];
      v14 = v6;
    }
    else
    {
      v14 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v15 = v26.n128_u64[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_23E138050;
    v20 = v19 + v18;
    v21 = (unint64_t *)(v20 + *(int *)(v16 + 48));
    v22 = *MEMORY[0x24BE4E2C0];
    v23 = sub_23E1356DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v20, v22, v23);
    v21[3] = MEMORY[0x24BEE13C8];
    *v21 = v15;
    v14 = v19;
  }
  return sub_23E0ECA08(v14);
}

uint64_t sub_23DFC98EC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E073DD0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23DFC9954(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23DFC9954(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _BYTE *v22;
  unsigned int v23;
  uint64_t v24;
  _BYTE *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_23E1375F0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(unsigned __int8 *)(v79 + i);
        v82 = v78;
        do
        {
          v83 = *(unsigned __int8 *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_BYTE *)(v79 + v82 + 1) = v83;
          *(_BYTE *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v94 = result;
  v95 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (unsigned __int8 *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v93 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_23DFC9FCC((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(_QWORD *)&v87[16 * v12 - 16]), v84 + v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_23E073D94((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v93 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23E13729C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v95;
    v93 = v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  v9 = 0;
  v92 = v2;
  v10 = *v2;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v96 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(unsigned __int8 *)(v10 + v9);
      v15 = *(unsigned __int8 *)(v10 + v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(unsigned __int8 *)(v10 + v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_BYTE *)(v10 + v19);
              *(_BYTE *)(v10 + v19) = *(_BYTE *)(v10 + v18);
              *(_BYTE *)(v10 + v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v94)
      goto LABEL_47;
    v21 = v13 + v94;
    if (__OFADD__(v13, v94))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (_BYTE *)(v10 + v9);
      do
      {
        v23 = *(unsigned __int8 *)(v10 + v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *(v25 - 1);
          if (v23 >= v26)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v26;
          *--v25 = v23;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23E073A18(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v96;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_23E073A18((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v96;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_23DFC9FCC((unsigned __int8 *)(v10 + *(_QWORD *)v71), (unsigned __int8 *)(v10 + *(_QWORD *)v74), v10 + v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v96;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v95;
    if (v9 >= v95)
    {
      v2 = v92;
      v8 = v93;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23E137560();
  __break(1u);
  return result;
}

uint64_t sub_23DFC9FCC(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t result;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;

  v22 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v14 = &v4[v9];
      v20 = &v4[v9];
      v22 = v6;
      if (v7 < v6 && (unsigned __int8 *)a3 != v6)
      {
        v15 = (unsigned __int8 *)(a3 - 1);
        while (1)
        {
          v16 = v15 + 1;
          v17 = v6 - 1;
          v18 = *(v6 - 1);
          if (*(v14 - 1) >= v18)
          {
            v20 = v14 - 1;
            if (v16 < v14 || v15 >= v14 || v16 != v14)
              *v15 = *(v14 - 1);
            --v14;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v16 != v6 || v15 >= v6)
              *v15 = v18;
            v22 = --v6;
            if (v17 <= v7)
              goto LABEL_38;
          }
          --v15;
          if (v14 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        v11 = *v6;
        v12 = *v4;
        if (v11 >= v12)
        {
          if (v7 != v4)
            *v7 = v12;
          v21 = ++v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
            *v7 = v11;
        }
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v22 = v7;
    }
LABEL_38:
    sub_23E073BC4(&v22, &v21, &v20);
    return 1;
  }
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

__n128 *sub_23DFCA204(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

_QWORD *sub_23DFCA240(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v57 = *a2;
    *a1 = *a2;
    v56 = (_QWORD *)(v57 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v69 = a2;
    v9 = sub_23E134C80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    v10 = (int *)type metadata accessor for Device();
    v11 = v10[5];
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = v10[6];
    v70 = a1;
    v16 = &v7[v15];
    v17 = &v8[v15];
    v18 = *(_QWORD *)&v8[v15 + 8];
    *(_QWORD *)v16 = *(_QWORD *)&v8[v15];
    *((_QWORD *)v16 + 1) = v18;
    v19 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v20 = &v16[v19];
    v21 = &v17[v19];
    v22 = sub_23E135910();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    v24 = v10[7];
    v25 = &v7[v24];
    v26 = &v8[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = v10[8];
    v29 = &v7[v28];
    v30 = &v8[v28];
    v68 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v68;
    *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
    v7[v10[10]] = v8[v10[10]];
    v7[v10[11]] = v8[v10[11]];
    v7[v10[12]] = v8[v10[12]];
    v7[v10[13]] = v8[v10[13]];
    *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
    v7[v10[15]] = v8[v10[15]];
    v31 = v10[16];
    v32 = &v7[v31];
    v33 = &v8[v31];
    v67 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v67;
    v34 = v10[17];
    v35 = &v7[v34];
    v36 = &v8[v34];
    v66 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v66;
    v37 = v10[18];
    v38 = &v7[v37];
    v39 = &v8[v37];
    v65 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v65;
    v7[v10[19]] = v8[v10[19]];
    v7[v10[20]] = v8[v10[20]];
    v40 = v10[21];
    v41 = &v7[v40];
    v42 = &v8[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = a3[6];
    v45 = a3[7];
    v46 = (_QWORD *)((char *)v70 + v44);
    v47 = (_QWORD *)((char *)v69 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = v47[3];
    v46[2] = v47[2];
    v46[3] = v49;
    v50 = v47[5];
    v46[4] = v47[4];
    v46[5] = v50;
    v46[6] = v47[6];
    *((_BYTE *)v70 + v45) = *((_BYTE *)v69 + v45);
    v51 = a3[9];
    *(_OWORD *)((char *)v70 + a3[8]) = *(_OWORD *)((char *)v69 + a3[8]);
    v52 = (char *)v70 + v51;
    v53 = *(_QWORD *)((char *)v69 + v51);
    v54 = *(_QWORD *)((char *)v69 + v51 + 8);
    v55 = *(_QWORD *)((char *)v69 + v51 + 16);
    v60 = *(_QWORD *)((char *)v69 + v51 + 24);
    v61 = *(_QWORD *)((char *)v69 + v51 + 32);
    v62 = *(_QWORD *)((char *)v69 + v51 + 40);
    v63 = *(_QWORD *)((char *)v69 + v51 + 48);
    v64 = *(_QWORD *)((char *)v69 + v51 + 56);
    v59 = *((_BYTE *)v69 + v51 + 64);
    LOBYTE(v69) = *((_BYTE *)v69 + v51 + 65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v7) = v59;
    sub_23DF98590(v53, v54, v55, v60, v61, v62, v63, v64, v59, (char)v69);
    *(_QWORD *)v52 = v53;
    *((_QWORD *)v52 + 1) = v54;
    v56 = v70;
    *((_QWORD *)v52 + 2) = v55;
    *((_QWORD *)v52 + 3) = v60;
    *((_QWORD *)v52 + 4) = v61;
    *((_QWORD *)v52 + 5) = v62;
    *((_QWORD *)v52 + 6) = v63;
    *((_QWORD *)v52 + 7) = v64;
    v52[64] = (char)v7;
    v52[65] = (char)v69;
  }
  return v56;
}

uint64_t sub_23DFCA5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 36);
  return sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
}

_QWORD *sub_23DFCA750(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;

  v66 = a3;
  *a1 = *a2;
  v4 = a3[5];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = (int *)type metadata accessor for Device();
  v9 = v8[5];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = *(_QWORD *)&v6[v13 + 8];
  *(_QWORD *)v14 = *(_QWORD *)&v6[v13];
  *((_QWORD *)v14 + 1) = v16;
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v14[v17];
  v19 = &v15[v17];
  v20 = sub_23E135910();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  v22 = v8[7];
  v23 = &v5[v22];
  v24 = &v6[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  v26 = v8[8];
  v27 = &v5[v26];
  v28 = &v6[v26];
  v65 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v65;
  *(_QWORD *)&v5[v8[9]] = *(_QWORD *)&v6[v8[9]];
  v5[v8[10]] = v6[v8[10]];
  v5[v8[11]] = v6[v8[11]];
  v5[v8[12]] = v6[v8[12]];
  v5[v8[13]] = v6[v8[13]];
  *(_QWORD *)&v5[v8[14]] = *(_QWORD *)&v6[v8[14]];
  v5[v8[15]] = v6[v8[15]];
  v29 = v8[16];
  v30 = &v5[v29];
  v31 = &v6[v29];
  v64 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v64;
  v32 = v8[17];
  v33 = &v5[v32];
  v34 = &v6[v32];
  v63 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v63;
  v35 = v8[18];
  v36 = &v5[v35];
  v37 = &v6[v35];
  v62 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v62;
  v5[v8[19]] = v6[v8[19]];
  v5[v8[20]] = v6[v8[20]];
  v38 = v8[21];
  v39 = &v5[v38];
  v40 = &v6[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v42 = v66[6];
  v43 = v66[7];
  v44 = (_QWORD *)((char *)a1 + v42);
  v45 = (_QWORD *)((char *)a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = v45[3];
  v44[2] = v45[2];
  v44[3] = v47;
  v48 = v45[5];
  v44[4] = v45[4];
  v44[5] = v48;
  v44[6] = v45[6];
  *((_BYTE *)a1 + v43) = *((_BYTE *)a2 + v43);
  v49 = v66[9];
  *(_OWORD *)((char *)a1 + v66[8]) = *(_OWORD *)((char *)a2 + v66[8]);
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = *(_QWORD *)((char *)a2 + v49);
  v53 = *((_QWORD *)v51 + 1);
  v54 = *((_QWORD *)v51 + 2);
  v57 = *((_QWORD *)v51 + 3);
  v58 = *((_QWORD *)v51 + 4);
  v59 = *((_QWORD *)v51 + 5);
  v60 = *((_QWORD *)v51 + 6);
  v61 = *((_QWORD *)v51 + 7);
  v56 = v51[64];
  LOBYTE(v66) = v51[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v41) = v56;
  sub_23DF98590(v52, v53, v54, v57, v58, v59, v60, v61, v56, (char)v66);
  *(_QWORD *)v50 = v52;
  *((_QWORD *)v50 + 1) = v53;
  *((_QWORD *)v50 + 2) = v54;
  *((_QWORD *)v50 + 3) = v57;
  *((_QWORD *)v50 + 4) = v58;
  *((_QWORD *)v50 + 5) = v59;
  *((_QWORD *)v50 + 6) = v60;
  *((_QWORD *)v50 + 7) = v61;
  v50[64] = v41;
  v50[65] = (char)v66;
  return a1;
}

_QWORD *sub_23DFCAA94(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  char v67;
  _QWORD *v68;

  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v15[v17];
  v19 = &v16[v17];
  v20 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v10[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_retain();
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v27 = v10[16];
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v10[17];
  v31 = &v7[v30];
  v32 = &v8[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v10[18];
  v34 = &v7[v33];
  v35 = &v8[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v36 = v10[21];
  v37 = &v7[v36];
  v38 = &v8[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[6];
  v40 = (_QWORD *)((char *)v5 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  *(_QWORD *)((char *)v5 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  v40[1] = v41[1];
  swift_retain();
  swift_release();
  v40[2] = v41[2];
  v40[3] = v41[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40[4] = v41[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40[5] = v41[5];
  v40[6] = v41[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v68 = v5;
  *((_BYTE *)v5 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v42 = a3[8];
  v43 = (_QWORD *)((char *)v5 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  v45 = a3[9];
  v46 = (char *)v5 + v45;
  v47 = (char *)a2 + v45;
  v48 = *(_QWORD *)v47;
  v49 = *((_QWORD *)v47 + 1);
  v50 = *((_QWORD *)v47 + 2);
  v51 = *((_QWORD *)v47 + 3);
  v52 = *((_QWORD *)v47 + 4);
  v53 = *((_QWORD *)v47 + 5);
  v54 = *((_QWORD *)v47 + 6);
  v55 = *((_QWORD *)v47 + 7);
  LOBYTE(v5) = v47[64];
  sub_23DF98590(*(_QWORD *)v47, v49, v50, v51, v52, v53, v54, v55, (char)v5, v47[65]);
  v56 = *(_QWORD *)v46;
  v57 = *((_QWORD *)v46 + 1);
  v58 = *((_QWORD *)v46 + 2);
  v59 = *((_QWORD *)v46 + 3);
  v60 = *((_QWORD *)v46 + 4);
  v61 = *((_QWORD *)v46 + 5);
  v62 = *((_QWORD *)v46 + 6);
  v63 = *((_QWORD *)v46 + 7);
  v64 = v46[64];
  v65 = v46[65];
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 1) = v49;
  *((_QWORD *)v46 + 2) = v50;
  *((_QWORD *)v46 + 3) = v51;
  *((_QWORD *)v46 + 4) = v52;
  *((_QWORD *)v46 + 5) = v53;
  *((_QWORD *)v46 + 6) = v54;
  *((_QWORD *)v46 + 7) = v55;
  v46[64] = (char)v5;
  v46[65] = v67;
  sub_23DF985F0(v56, v57, v58, v59, v60, v61, v62, v63, v64, v65);
  return v68;
}

_QWORD *sub_23DFCAE98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  v11 = v10[6];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_OWORD *)&v7[v11] = *(_OWORD *)&v8[v11];
  v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  *(_OWORD *)&v7[v10[16]] = *(_OWORD *)&v8[v10[16]];
  *(_OWORD *)&v7[v10[17]] = *(_OWORD *)&v8[v10[17]];
  *(_OWORD *)&v7[v10[18]] = *(_OWORD *)&v8[v10[18]];
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  *(_OWORD *)&v7[v10[21]] = *(_OWORD *)&v8[v10[21]];
  v18 = a3[6];
  v19 = a3[7];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v23 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  *((_WORD *)v24 + 32) = *((_WORD *)v25 + 32);
  v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  return a1;
}

_QWORD *sub_23DFCB078(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  __int128 v75;
  __int128 v76;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = v10[7];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = v10[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v34 = v10[16];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v39 = v10[17];
  v40 = &v7[v39];
  v41 = &v8[v39];
  v43 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = v43;
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  v44 = v10[18];
  v45 = &v7[v44];
  v46 = &v8[v44];
  v48 = *(_QWORD *)v46;
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = v48;
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v49 = v10[21];
  v50 = &v7[v49];
  v51 = &v8[v49];
  v53 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v54 = a3[6];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  swift_release();
  v55[1] = v56[1];
  swift_release();
  v57 = v56[3];
  v55[2] = v56[2];
  v55[3] = v57;
  swift_bridgeObjectRelease();
  v55[4] = v56[4];
  swift_bridgeObjectRelease();
  v58 = v56[6];
  v55[5] = v56[5];
  v55[6] = v58;
  swift_bridgeObjectRelease();
  v59 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v59) = *(_OWORD *)((char *)a2 + v59);
  v60 = a3[9];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = v62[64];
  v64 = v62[65];
  v65 = *(_QWORD *)v61;
  v66 = *((_QWORD *)v61 + 1);
  v67 = *((_QWORD *)v61 + 2);
  v68 = *((_QWORD *)v61 + 3);
  v69 = *((_QWORD *)v61 + 4);
  v70 = *((_QWORD *)v61 + 5);
  v71 = *((_QWORD *)v61 + 6);
  v72 = *((_QWORD *)v61 + 7);
  v73 = v61[64];
  v74 = v61[65];
  v75 = *((_OWORD *)v62 + 1);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v75;
  v76 = *((_OWORD *)v62 + 3);
  *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
  *((_OWORD *)v61 + 3) = v76;
  v61[64] = v63;
  v61[65] = v64;
  sub_23DF985F0(v65, v66, v67, v68, v69, v70, v71, v72, v73, v74);
  return a1;
}

uint64_t sub_23DFCB350()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFCB35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Device();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23DFCB3E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFCB3EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Device();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ControlModuleView()
{
  uint64_t result;

  result = qword_256D1F960;
  if (!qword_256D1F960)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DFCB4A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23DFCB548()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFCB558(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23E09E354(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_release();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_23E09E354(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v9 + 16) = v6 + 1;
      *(_QWORD *)(v9 + 8 * v6 + 32) = v8;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23DFCB668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  double *v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  __int128 v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  char v69;
  unsigned __int8 v70;
  __int128 v71;
  _BYTE v72[24];
  __int128 v73;
  __int128 v74;
  _OWORD v75[2];
  uint64_t v76;
  _OWORD v77[4];
  __int16 v78;

  v60 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9A8);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (_QWORD *)((char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9B0);
  v4 = MEMORY[0x24BDAC7A8](v59);
  v49 = (uint64_t)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (uint64_t)v48 - v6;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9B8);
  MEMORY[0x24BDAC7A8](v56);
  v58 = (uint64_t)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ControlModuleView();
  v53 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v54 = v9;
  v55 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9C0);
  MEMORY[0x24BDAC7A8](v57);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1 + v8[9];
  v13 = *(_OWORD *)(v12 + 48);
  v77[2] = *(_OWORD *)(v12 + 32);
  v77[3] = v13;
  v78 = *(_WORD *)(v12 + 64);
  v14 = *(_OWORD *)(v12 + 16);
  v77[0] = *(_OWORD *)v12;
  v77[1] = v14;
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v73);
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v15 = (double *)(v1 + v8[8]);
  v16 = *v15;
  if ((BYTE1(v75[1]) & 1) != 0)
  {
    v17 = v15[1] + -80.0;
  }
  else
  {
    v16 = v16 + -80.0;
    v17 = v15[1];
  }
  v18 = v1 + v8[6];
  v19 = *(_QWORD *)(v18 + 8);
  v20 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)&v73 = *(_QWORD *)v18;
  *((_QWORD *)&v73 + 1) = v19;
  v74 = *(_OWORD *)(v18 + 16);
  *(_QWORD *)&v75[0] = v20;
  *(_OWORD *)((char *)v75 + 8) = *(_OWORD *)(v18 + 40);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECD0);
  MEMORY[0x24264B734](&v61, v21);
  v71 = v61;
  *(_OWORD *)v72 = v62;
  *(_QWORD *)&v72[16] = v63;
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v73);
  v52 = v1;
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v70 = BYTE1(v75[1]);
  sub_23DFCBE4C(&v70, (uint64_t *)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71 = v66;
  *(_QWORD *)v72 = v67;
  *(_OWORD *)&v72[8] = v68;
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v61);
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v70 = BYTE1(v64);
  sub_23E0C4998((uint64_t *)&v71, &v70, (uint64_t)&v73, v16, v17);
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v66);
  sub_23DF98EC8((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if ((v69 & 1) != 0)
  {
    v22 = sub_23E1362D0();
    v23 = (uint64_t)v50;
    *v50 = v22;
    *(_QWORD *)(v23 + 8) = 0x4044000000000000;
    *(_BYTE *)(v23 + 16) = 0;
    v48[1] = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9C8) + 44);
    v63 = v75[0];
    v64 = v75[1];
    v65 = v76;
    v61 = v73;
    v62 = v74;
    *(_QWORD *)&v61 = sub_23E0C4EF0();
    v24 = v52;
    v25 = v55;
    sub_23DF73E10(v52, v55, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
    v26 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v27 = (v54 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = swift_allocObject();
    sub_23DF89384(v25, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
    v29 = v28 + v27;
    v30 = v74;
    v31 = v75[1];
    *(_OWORD *)(v29 + 32) = v75[0];
    *(_OWORD *)(v29 + 48) = v31;
    *(_QWORD *)(v29 + 64) = v76;
    *(_OWORD *)v29 = v73;
    *(_OWORD *)(v29 + 16) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9D8);
    sub_23DF89B88(&qword_256D1F9E0, &qword_256D1F9D0, MEMORY[0x24BEE12D8]);
    sub_23DFA5DBC(&qword_256D1F9E8, &qword_256D1F9D8, (uint64_t (*)(void))sub_23DFD2B10, MEMORY[0x24BDF4A08]);
    sub_23DFD2D4C();
    sub_23E136F18();
    v32 = *(double *)(v24 + v8[8] + 8);
    v33 = sub_23E136FE4();
    v34 = v49;
    sub_23E04C3C8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v49, 0.0, 1, v32, 0, v33, v35);
    sub_23DF89C7C(v23, &qword_256D1F9A8);
    v36 = &qword_256D1F9B0;
    v37 = v51;
    sub_23DF89340(v34, v51, &qword_256D1F9B0);
    sub_23DF89C1C(v37, v58, &qword_256D1F9B0);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D1FA70, &qword_256D1F9C0, MEMORY[0x24BDF19A8]);
    sub_23DFD2D90();
    sub_23E136480();
    v38 = v37;
  }
  else
  {
    *(_QWORD *)v11 = sub_23E136FCC();
    *((_QWORD *)v11 + 1) = v39;
    *((_QWORD *)v11 + 2) = 0x4044000000000000;
    v11[24] = 0;
    *((_QWORD *)v11 + 4) = 0x4044000000000000;
    v11[40] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA88);
    v63 = v75[0];
    v64 = v75[1];
    v65 = v76;
    v61 = v73;
    v62 = v74;
    *(_QWORD *)&v61 = sub_23E0C4EF0();
    v40 = v55;
    sub_23DF73E10(v52, v55, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
    v41 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v42 = (v54 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject();
    sub_23DF89384(v40, v43 + v41, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
    v44 = v43 + v42;
    v45 = v74;
    v46 = v75[1];
    *(_OWORD *)(v44 + 32) = v75[0];
    *(_OWORD *)(v44 + 48) = v46;
    *(_QWORD *)(v44 + 64) = v76;
    *(_OWORD *)v44 = v73;
    *(_OWORD *)(v44 + 16) = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA90);
    sub_23DF89B88(&qword_256D1F9E0, &qword_256D1F9D0, MEMORY[0x24BEE12D8]);
    sub_23DF89B88(&qword_256D1FA98, &qword_256D1FA90, MEMORY[0x24BDF4A68]);
    sub_23DFD2D4C();
    sub_23E136F18();
    v36 = &qword_256D1F9C0;
    sub_23DF89C1C((uint64_t)v11, v58, &qword_256D1F9C0);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D1FA70, &qword_256D1F9C0, MEMORY[0x24BDF19A8]);
    sub_23DFD2D90();
    sub_23E136480();
    v38 = (uint64_t)v11;
  }
  return sub_23DF89C7C(v38, v36);
}

uint64_t sub_23DFCBE4C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Device.ControlGroup(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v46 = (uint64_t)&v36 - v18;
  v19 = *a1;
  v20 = v2[1];
  v22 = v2[2];
  v21 = v2[3];
  v23 = v2[4];
  if (v19 == 1)
  {
    v40 = *v2;
    v41 = v21;
    v24 = *(_QWORD *)(v22 + 16);
    if (v24)
    {
      v39 = a2;
      v47 = MEMORY[0x24BEE4AF8];
      v38 = v20;
      v25 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v37 = v23;
      swift_bridgeObjectRetain();
      sub_23E09E1D8(0, v24, 0);
      v26 = *(unsigned __int8 *)(v25 + 80);
      v36 = v22;
      v44 = (v26 + 32) & ~v26;
      v27 = v22 + v44;
      v28 = *(_QWORD *)(v25 + 72);
      v45 = v7;
      v42 = v16;
      do
      {
        sub_23DF73E10(v27, (uint64_t)v16, type metadata accessor for Device.ControlGroup);
        sub_23DF73E10((uint64_t)v16, (uint64_t)v13, type metadata accessor for Device.ControlGroup);
        sub_23DF73E10((uint64_t)v16, (uint64_t)v9, type metadata accessor for Device.ControlGroup.LayoutType);
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          v30 = v43;
          sub_23DF89384((uint64_t)v9, v43, type metadata accessor for Device.Control);
          sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
          v16 = v42;
          sub_23DF89384(v30, (uint64_t)v13, type metadata accessor for Device.Control);
        }
        else
        {
          v29 = *v9;
          sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
          *v13 = v29;
        }
        swift_storeEnumTagMultiPayload();
        sub_23DF89384((uint64_t)v13, v46, type metadata accessor for Device.ControlGroup);
        sub_23DF73E54((uint64_t)v16, type metadata accessor for Device.ControlGroup);
        v31 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E1D8(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v47;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_23E09E1D8(v32 > 1, v33 + 1, 1);
          v31 = v47;
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        sub_23DF89384(v46, v31 + v44 + v33 * v28, type metadata accessor for Device.ControlGroup);
        v27 += v28;
        --v24;
      }
      while (v24);
      result = swift_bridgeObjectRelease_n();
      v20 = v38;
      a2 = v39;
      v23 = v37;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v31 = MEMORY[0x24BEE4AF8];
    }
    *a2 = v40;
    a2[1] = v20;
    v35 = v41;
    a2[2] = v31;
    a2[3] = v35;
    a2[4] = v23;
  }
  else
  {
    *a2 = *v2;
    a2[1] = v20;
    a2[2] = v22;
    a2[3] = v21;
    a2[4] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23DFCC230@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v10[4];
  uint64_t v11;

  v5 = *a1;
  v6 = a1[1];
  *(_QWORD *)a3 = sub_23E1362C4();
  *(_BYTE *)(a3 + 8) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA90);
  v7 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v7;
  v11 = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v8;
  return sub_23DFCC2B8(v5, v6, v10);
}

uint64_t sub_23DFCC2B8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64x2_t v21;
  int64x2_t *v22;
  unint64_t v23;
  int64x2_t v24;
  int8x16_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t *v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  double v32;
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  int64_t v36;
  __int128 v37;
  _BYTE v39[16];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int64_t v49;

  v4 = v3;
  v8 = type metadata accessor for ControlModuleView();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = a3[1];
  v12 = a3[3];
  v47 = a3[2];
  v48 = v12;
  v13 = a3[1];
  v45 = *a3;
  v46 = v13;
  v14 = a3[3];
  v42 = v47;
  v43 = v14;
  v49 = *((_QWORD *)a3 + 8);
  v44 = *((_QWORD *)a3 + 8);
  v40 = v45;
  v41 = v11;
  sub_23DFD3068((uint64_t)&v45);
  v15 = sub_23E0C4EF0();
  v16 = sub_23DFCB558((uint64_t)v15);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    v18 = 0;
    goto LABEL_13;
  }
  v18 = *(_QWORD *)(v16 + 32);
  v19 = v17 - 1;
  if (v17 == 1)
    goto LABEL_13;
  if (v17 >= 5)
  {
    v20 = v19 & 0xFFFFFFFFFFFFFFFCLL | 1;
    v21 = vdupq_n_s64(v18);
    v22 = (int64x2_t *)(v16 + 56);
    v23 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    v24 = v21;
    do
    {
      v21 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v21, v22[-1]), (int8x16_t)v21, (int8x16_t)v22[-1]);
      v24 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v24, *v22), (int8x16_t)v24, *(int8x16_t *)v22);
      v22 += 2;
      v23 -= 4;
    }
    while (v23);
    v25 = vbslq_s8((int8x16_t)vcgtq_s64(v21, v24), (int8x16_t)v21, (int8x16_t)v24);
    v26 = vextq_s8(v25, v25, 8uLL).u64[0];
    v18 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v25.i64[0], v26), *(int8x8_t *)v25.i8, (int8x8_t)v26);
    if (v19 == (v19 & 0xFFFFFFFFFFFFFFFCLL))
      goto LABEL_13;
  }
  else
  {
    v20 = 1;
  }
  v27 = v17 - v20;
  v28 = (int64_t *)(v16 + 8 * v20 + 32);
  do
  {
    v30 = *v28++;
    v29 = v30;
    if (v18 <= v30)
      v18 = v29;
    --v27;
  }
  while (v27);
LABEL_13:
  swift_bridgeObjectRelease();
  sub_23DFD30AC((uint64_t)&v45);
  v31 = v49;
  if (v18 < v49)
    v31 = v18;
  if (*(double *)&v45 / (double)v31 > 1.0)
    v32 = *(double *)&v45 / (double)v31;
  else
    v32 = 1.0;
  *(_QWORD *)&v40 = a2;
  sub_23DF73E10(v4, (uint64_t)&v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
  v33 = (*(unsigned __int8 *)(v9 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v34 = swift_allocObject();
  v35 = v48;
  *(_OWORD *)(v34 + 48) = v47;
  *(_OWORD *)(v34 + 64) = v35;
  v36 = v49;
  v37 = v46;
  *(_OWORD *)(v34 + 16) = v45;
  *(_OWORD *)(v34 + 32) = v37;
  *(_QWORD *)(v34 + 80) = v36;
  *(_QWORD *)(v34 + 88) = a1;
  *(_QWORD *)(v34 + 96) = a2;
  *(double *)(v34 + 104) = v32;
  sub_23DF89384((uint64_t)&v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
  swift_bridgeObjectRetain();
  sub_23DFD3068((uint64_t)&v45);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9F8);
  sub_23DF89B88(&qword_256D1FAB0, &qword_256D1FAA0, MEMORY[0x24BEE12D8]);
  sub_23DFD2B10();
  sub_23DF73F28(&qword_256D1FAB8, type metadata accessor for DisplayControlGroup, (uint64_t)&unk_23E141EB4);
  return sub_23E136F18();
}

uint64_t sub_23DFCC5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  double v23;
  double v24;
  __int128 v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  BOOL v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  __int128 v38;
  __int128 v39;
  int v40;
  int v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  unint64_t v52;
  unint64_t v53;
  int64x2_t v54;
  int64x2_t *v55;
  unint64_t v56;
  int64x2_t v57;
  int8x16_t v58;
  uint64_t v59;
  unint64_t v60;
  int64_t *v61;
  int64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v66 = a5;
  v67 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA08);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F9F8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(a1 + *(int *)(v21 + 24), (uint64_t)v20, type metadata accessor for DisplayControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_23DF73E54((uint64_t)v20, type metadata accessor for DisplayControlGroup.LayoutType);
  if (EnumCaseMultiPayload == 1)
    v23 = sub_23E0C8CC0(0.0);
  else
    v23 = sub_23E0C91B0();
  v24 = v23;
  if ((sub_23E0C7EE8() & 1) != 0)
    v24 = *(double *)a2;
  sub_23E0C8260();
  v25 = *(_OWORD *)(a2 + 48);
  v70 = *(_OWORD *)(a2 + 32);
  v71 = v25;
  v72 = *(_QWORD *)(a2 + 64);
  v26 = *(_OWORD *)(a2 + 16);
  v68 = *(_OWORD *)a2;
  v69 = v26;
  v27 = sub_23E0C4EF0();
  v28 = v27[2];
  if (v28)
  {
    v29 = 0;
    v30 = 4;
    while (v27[v30] != a3)
    {
      ++v29;
      v30 += 2;
      if (v28 == v29)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    v43 = *(_OWORD *)(a2 + 48);
    v70 = *(_OWORD *)(a2 + 32);
    v71 = v43;
    v72 = *(_QWORD *)(a2 + 64);
    v44 = *(_OWORD *)(a2 + 16);
    v68 = *(_OWORD *)a2;
    v69 = v44;
    v45 = sub_23E0C4EF0()[2];
    result = swift_bridgeObjectRelease();
    v32 = v29 == 0;
    if (v45 - 1 == v29 && *(_QWORD *)(a4 + 16) == 1)
    {
      v46 = *(_OWORD *)(a2 + 48);
      v70 = *(_OWORD *)(a2 + 32);
      v71 = v46;
      v72 = *(_QWORD *)(a2 + 64);
      v47 = *(_OWORD *)(a2 + 16);
      v68 = *(_OWORD *)a2;
      v69 = v47;
      sub_23DFD3068(a2);
      v48 = sub_23E0C4EF0();
      v49 = sub_23DFCB558((uint64_t)v48);
      swift_bridgeObjectRelease();
      v50 = *(_QWORD *)(v49 + 16);
      if (v50)
      {
        v51 = *(_QWORD *)(v49 + 32);
        v52 = v50 - 1;
        if (v50 != 1)
        {
          if (v50 < 5)
          {
            v53 = 1;
            goto LABEL_31;
          }
          v53 = v52 & 0xFFFFFFFFFFFFFFFCLL | 1;
          v54 = vdupq_n_s64(v51);
          v55 = (int64x2_t *)(v49 + 56);
          v56 = v52 & 0xFFFFFFFFFFFFFFFCLL;
          v57 = v54;
          do
          {
            v54 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v54, v55[-1]), (int8x16_t)v54, (int8x16_t)v55[-1]);
            v57 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v57, *v55), (int8x16_t)v57, *(int8x16_t *)v55);
            v55 += 2;
            v56 -= 4;
          }
          while (v56);
          v58 = vbslq_s8((int8x16_t)vcgtq_s64(v54, v57), (int8x16_t)v54, (int8x16_t)v57);
          v59 = vextq_s8(v58, v58, 8uLL).u64[0];
          v51 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v58.i64[0], v59), *(int8x8_t *)v58.i8, (int8x8_t)v59);
          if (v52 != (v52 & 0xFFFFFFFFFFFFFFFCLL))
          {
LABEL_31:
            v60 = v50 - v53;
            v61 = (int64_t *)(v49 + 8 * v53 + 32);
            do
            {
              v63 = *v61++;
              v62 = v63;
              if (v51 <= v63)
                v51 = v62;
              --v60;
            }
            while (v60);
          }
        }
      }
      else
      {
        v51 = 0;
      }
      swift_bridgeObjectRelease();
      sub_23DFD30AC(a2);
      v64 = *(_QWORD *)(a2 + 64);
      v65 = v64 & (v64 >> 63);
      if (v64 >= v51)
        v64 = v51;
      if (v50)
        v34 = v64;
      else
        v34 = v65;
      goto LABEL_15;
    }
  }
  else
  {
LABEL_10:
    result = swift_bridgeObjectRelease();
    v32 = 0;
  }
  v33 = ceil(v24 / a7);
  if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v33 >= 9.22337204e18)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v34 = (uint64_t)v33;
LABEL_15:
  swift_bridgeObjectRetain();
  v35 = sub_23E0F9464(a1, a4);
  v37 = v36;
  swift_bridgeObjectRelease();
  v38 = *(_OWORD *)(a2 + 48);
  v70 = *(_OWORD *)(a2 + 32);
  v71 = v38;
  v72 = *(_QWORD *)(a2 + 64);
  v39 = *(_OWORD *)(a2 + 16);
  v68 = *(_OWORD *)a2;
  v69 = v39;
  v40 = v32 & *(_BYTE *)(v66 + *(int *)(type metadata accessor for ControlModuleView() + 28));
  if ((v37 & 1) != 0)
    v40 = 0;
  if (v35)
    v41 = 0;
  else
    v41 = v40;
  sub_23DFCC9F8(a1, &v68, v41, (uint64_t)v14);
  sub_23DF89C1C((uint64_t)v14, (uint64_t)v17, &qword_256D1FA08);
  v42 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v42 = v34;
  v42[8] = 0;
  sub_23DF89C7C((uint64_t)v14, &qword_256D1FA08);
  return sub_23DF89340((uint64_t)v17, v67, &qword_256D1F9F8);
}

uint64_t sub_23DFCC9F8@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[4];
  uint64_t v72;

  v63 = a3;
  v70 = a1;
  v68 = a4;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA58);
  MEMORY[0x24BDAC7A8](v69);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DisplayControl(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA48);
  MEMORY[0x24BDAC7A8](v61);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAC0);
  MEMORY[0x24BDAC7A8](v65);
  v67 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAC8);
  MEMORY[0x24BDAC7A8](v60);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA18);
  MEMORY[0x24BDAC7A8](v66);
  v62 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA38);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FA28);
  v19 = MEMORY[0x24BDAC7A8](v59);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v58 = (uint64_t)&v57 - v22;
  v23 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = a2[3];
  v71[2] = a2[2];
  v71[3] = v26;
  v72 = *((_QWORD *)a2 + 8);
  v28 = *a2;
  v27 = a2[1];
  v29 = v70;
  v71[0] = v28;
  v71[1] = v27;
  v30 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v29 + *(int *)(v30 + 24), (uint64_t)v25, type metadata accessor for DisplayControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v51 = *v25;
    *(_QWORD *)v11 = sub_23E136378();
    *((_QWORD *)v11 + 1) = 0x4024000000000000;
    v11[16] = 0;
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAD8);
    sub_23DFCDAE4(v51, (uint64_t)v71, v29, (uint64_t)v64, v63 & 1, (uint64_t)&v11[*(int *)(v52 + 44)]);
    swift_bridgeObjectRelease();
    v46 = &qword_256D1FA48;
    sub_23DF89C1C((uint64_t)v11, (uint64_t)v14, &qword_256D1FA48);
    swift_storeEnumTagMultiPayload();
    sub_23DFD2C84();
    v53 = MEMORY[0x24BDF4700];
    sub_23DF89B88(&qword_256D1FA40, &qword_256D1FA48, MEMORY[0x24BDF4700]);
    v54 = (uint64_t)v62;
    sub_23E136480();
    sub_23DF89C1C(v54, v67, &qword_256D1FA18);
    swift_storeEnumTagMultiPayload();
    sub_23DFD2C00();
    sub_23DF89B88(&qword_256D1FA50, &qword_256D1FA58, v53);
    sub_23E136480();
    sub_23DF89C7C(v54, &qword_256D1FA18);
    v50 = (uint64_t)v11;
    return sub_23DF89C7C(v50, v46);
  }
  if (EnumCaseMultiPayload == 1)
  {
    v32 = *v25;
    *(_QWORD *)v18 = sub_23E136378();
    *((_QWORD *)v18 + 1) = 0x4024000000000000;
    v18[16] = 0;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAE0);
    sub_23DFCD138(v32, (uint64_t)v71, v29, (uint64_t)v64, v63 & 1, (uint64_t)&v18[*(int *)(v33 + 44)]);
    swift_bridgeObjectRelease();
    v34 = sub_23E136750();
    v35 = sub_23E136768();
    v36 = sub_23E13675C();
    sub_23E13675C();
    if (sub_23E13675C() != v34)
      v36 = sub_23E13675C();
    sub_23E13675C();
    if (sub_23E13675C() != v35)
      v36 = sub_23E13675C();
    sub_23E135D00();
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;
    sub_23DF89C1C((uint64_t)v18, (uint64_t)v21, &qword_256D1FA38);
    v45 = &v21[*(int *)(v59 + 36)];
    *v45 = v36;
    *((_QWORD *)v45 + 1) = v38;
    *((_QWORD *)v45 + 2) = v40;
    *((_QWORD *)v45 + 3) = v42;
    *((_QWORD *)v45 + 4) = v44;
    v45[40] = 0;
    sub_23DF89C7C((uint64_t)v18, &qword_256D1FA38);
    v46 = &qword_256D1FA28;
    v47 = v58;
    sub_23DF89340((uint64_t)v21, v58, &qword_256D1FA28);
    sub_23DF89C1C(v47, (uint64_t)v14, &qword_256D1FA28);
    swift_storeEnumTagMultiPayload();
    sub_23DFD2C84();
    v48 = MEMORY[0x24BDF4700];
    sub_23DF89B88(&qword_256D1FA40, &qword_256D1FA48, MEMORY[0x24BDF4700]);
    v49 = (uint64_t)v62;
    sub_23E136480();
    sub_23DF89C1C(v49, v67, &qword_256D1FA18);
    swift_storeEnumTagMultiPayload();
    sub_23DFD2C00();
    sub_23DF89B88(&qword_256D1FA50, &qword_256D1FA58, v48);
    sub_23E136480();
    sub_23DF89C7C(v49, &qword_256D1FA18);
    v50 = v47;
    return sub_23DF89C7C(v50, v46);
  }
  sub_23DF89384((uint64_t)v25, (uint64_t)v9, type metadata accessor for DisplayControl);
  *(_QWORD *)v6 = sub_23E136378();
  *((_QWORD *)v6 + 1) = 0x4024000000000000;
  v6[16] = 0;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAD0);
  sub_23DFCE490((uint64_t)v9, v64, v63 & 1, v29, (uint64_t)&v6[*(int *)(v56 + 44)]);
  sub_23DF89C1C((uint64_t)v6, v67, &qword_256D1FA58);
  swift_storeEnumTagMultiPayload();
  sub_23DFD2C00();
  sub_23DF89B88(&qword_256D1FA50, &qword_256D1FA58, MEMORY[0x24BDF4700]);
  sub_23E136480();
  sub_23DF89C7C((uint64_t)v6, &qword_256D1FA58);
  return sub_23DF73E54((uint64_t)v9, type metadata accessor for DisplayControl);
}

uint64_t sub_23DFCD138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int16 v61;
  char v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  _OWORD v70[4];
  __int16 v71;

  v54 = a5;
  v50 = a1;
  v60 = a6;
  v56 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for ControlModuleView();
  v10 = *(_QWORD *)(v57 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v57);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v55 = type metadata accessor for DisplayControlGroup(0);
  v13 = *(_QWORD *)(v55 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v55);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v59 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v49 - v19;
  *(_QWORD *)v20 = sub_23E1362D0();
  *((_QWORD *)v20 + 1) = 0x4034000000000000;
  v20[16] = 0;
  v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAF0) + 44);
  v58 = v20;
  v51 = &v20[v21];
  *(_QWORD *)&v70[0] = v50;
  sub_23DF73E10(a3, (uint64_t)v15, type metadata accessor for DisplayControlGroup);
  v53 = a4;
  sub_23DF73E10(a4, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
  v22 = (*(unsigned __int8 *)(v13 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = (v14 + *(unsigned __int8 *)(v10 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v24 = v23 + v11;
  v25 = swift_allocObject();
  v26 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v25 + 64) = v26;
  *(_QWORD *)(v25 + 80) = *(_QWORD *)(a2 + 64);
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v25 + 32) = v27;
  sub_23DF89384((uint64_t)v15, v25 + v22, type metadata accessor for DisplayControlGroup);
  sub_23DF89384((uint64_t)v12, v25 + v23, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
  *(_BYTE *)(v25 + v24) = v54;
  swift_bridgeObjectRetain();
  sub_23DFD3068(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAF8);
  sub_23E134C80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB00);
  sub_23DF89B88(&qword_256D1FB08, &qword_256D1FAF8, MEMORY[0x24BEE12D8]);
  sub_23DFD3338();
  sub_23DF73F28(&qword_256D1FD60, type metadata accessor for DisplayControl, (uint64_t)&unk_23E141E7C);
  v28 = v55;
  sub_23E136F18();
  v29 = v52;
  sub_23DF73E10(a3 + *(int *)(v28 + 24), v52, type metadata accessor for DisplayControlGroup.LayoutType);
  LODWORD(v12) = swift_getEnumCaseMultiPayload();
  sub_23DF73E54(v29, type metadata accessor for DisplayControlGroup.LayoutType);
  if ((_DWORD)v12 == 1)
    v30 = sub_23E0C8CC0(0.0);
  else
    v30 = sub_23E0C91B0();
  v31 = v30;
  if ((sub_23E0C7EE8() & 1) != 0)
    v31 = *(double *)a2;
  sub_23E0C8260();
  v32 = (uint64_t *)(a3 + *(int *)(v28 + 28));
  v33 = v32[1];
  v56 = *v32;
  v34 = v53 + *(int *)(v57 + 36);
  v35 = *(_OWORD *)(v34 + 48);
  v70[2] = *(_OWORD *)(v34 + 32);
  v70[3] = v35;
  v71 = *(_WORD *)(v34 + 64);
  v36 = *(_OWORD *)(v34 + 16);
  v70[0] = *(_OWORD *)v34;
  v70[1] = v36;
  swift_bridgeObjectRetain();
  sub_23DF98EC8((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v61);
  sub_23DF98EC8((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  LODWORD(v57) = v61;
  v37 = v62;
  v55 = v63;
  v38 = v64;
  v39 = v65;
  v40 = v66;
  v41 = v67;
  v42 = v68;
  v43 = v69;
  v44 = (uint64_t)v58;
  v45 = v59;
  sub_23DF89C1C((uint64_t)v58, v59, &qword_256D1FAE8);
  v46 = v60;
  sub_23DF89C1C(v45, v60, &qword_256D1FAE8);
  v47 = v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD68) + 48);
  *(_QWORD *)v47 = v56;
  *(_QWORD *)(v47 + 8) = v33;
  *(double *)(v47 + 16) = v31;
  *(_WORD *)(v47 + 24) = v57;
  *(_BYTE *)(v47 + 32) = v37;
  *(_OWORD *)(v47 + 40) = v55;
  *(_QWORD *)(v47 + 56) = v38;
  *(_QWORD *)(v47 + 64) = v39;
  *(_BYTE *)(v47 + 72) = v40;
  *(_BYTE *)(v47 + 73) = v41;
  *(_QWORD *)(v47 + 80) = v42;
  *(_BYTE *)(v47 + 88) = v43;
  swift_bridgeObjectRetain();
  sub_23DF89C7C(v44, &qword_256D1FAE8);
  swift_bridgeObjectRelease();
  return sub_23DF89C7C(v45, &qword_256D1FAE8);
}

uint64_t sub_23DFCD658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _BOOL4 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  char v56;
  char v57;

  v50 = a4;
  v54 = a3;
  v55 = a5;
  v49 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB40);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB30);
  MEMORY[0x24BDAC7A8](v51);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB20);
  MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB00);
  MEMORY[0x24BDAC7A8](v52);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DisplayControl(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)((char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = *(_BYTE *)(a1 + *(int *)(v18 + 20));
  Device.Control.viewType(with:)(&v56, &v57);
  v25 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v49 + *(int *)(v25 + 24), (uint64_t)v24, type metadata accessor for DisplayControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v24, (uint64_t)v21, type metadata accessor for DisplayControl);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
    v27 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v21, v26 + v27, type metadata accessor for DisplayControl);
  }
  else
  {
    v26 = *v24;
  }
  v28 = sub_23E0F991C(a1, v26);
  v30 = v29;
  swift_bridgeObjectRelease();
  v32 = (v30 & 1) == 0 && v28 == 0;
  sub_23DFCEB84(v54, a1, v32 & v50, (uint64_t)v8);
  sub_23DFD23AC(a1, (uint64_t)v11);
  sub_23DF89C7C((uint64_t)v8, &qword_256D1FB60);
  v33 = sub_23E13672C();
  sub_23E135D00();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v13, &qword_256D1FB40);
  v42 = &v13[*(int *)(v51 + 36)];
  *v42 = v33;
  *((_QWORD *)v42 + 1) = v35;
  *((_QWORD *)v42 + 2) = v37;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v41;
  v42[40] = 0;
  sub_23DF89C7C((uint64_t)v11, &qword_256D1FB40);
  sub_23DFD2678(a1);
  sub_23DFD3440();
  v43 = (uint64_t)v53;
  sub_23E136AF8();
  swift_bridgeObjectRelease();
  sub_23DF89C7C((uint64_t)v13, &qword_256D1FB30);
  v44 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Device.Control(0) + 44));
  KeyPath = swift_getKeyPath();
  v46 = swift_allocObject();
  *(_BYTE *)(v46 + 16) = (v44 & 1) == 0;
  sub_23DF89C1C(v43, (uint64_t)v17, &qword_256D1FB20);
  v47 = (uint64_t *)&v17[*(int *)(v52 + 36)];
  *v47 = KeyPath;
  v47[1] = (uint64_t)sub_23DFD4188;
  v47[2] = v46;
  sub_23DF89C7C(v43, &qword_256D1FB20);
  return sub_23DF89340((uint64_t)v17, v55, &qword_256D1FB00);
}

uint64_t sub_23DFCDAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int16 v61;
  char v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  _OWORD v70[4];
  __int16 v71;

  v54 = a5;
  v50 = a1;
  v60 = a6;
  v56 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for ControlModuleView();
  v10 = *(_QWORD *)(v57 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v57);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v55 = type metadata accessor for DisplayControlGroup(0);
  v13 = *(_QWORD *)(v55 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v55);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE60);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v59 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v49 - v19;
  *(_QWORD *)v20 = sub_23E136378();
  *((_QWORD *)v20 + 1) = 0x4049000000000000;
  v20[16] = 0;
  v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE68) + 44);
  v58 = v20;
  v51 = &v20[v21];
  *(_QWORD *)&v70[0] = v50;
  sub_23DF73E10(a3, (uint64_t)v15, type metadata accessor for DisplayControlGroup);
  v53 = a4;
  sub_23DF73E10(a4, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
  v22 = (*(unsigned __int8 *)(v13 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = (v14 + *(unsigned __int8 *)(v10 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v24 = v23 + v11;
  v25 = swift_allocObject();
  v26 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v25 + 64) = v26;
  *(_QWORD *)(v25 + 80) = *(_QWORD *)(a2 + 64);
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v25 + 32) = v27;
  sub_23DF89384((uint64_t)v15, v25 + v22, type metadata accessor for DisplayControlGroup);
  sub_23DF89384((uint64_t)v12, v25 + v23, (uint64_t (*)(_QWORD))type metadata accessor for ControlModuleView);
  *(_BYTE *)(v25 + v24) = v54;
  swift_bridgeObjectRetain();
  sub_23DFD3068(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FAF8);
  sub_23E134C80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB00);
  sub_23DF89B88(&qword_256D1FB08, &qword_256D1FAF8, MEMORY[0x24BEE12D8]);
  sub_23DFD3338();
  sub_23DF73F28(&qword_256D1FD60, type metadata accessor for DisplayControl, (uint64_t)&unk_23E141E7C);
  v28 = v55;
  sub_23E136F18();
  v29 = v52;
  sub_23DF73E10(a3 + *(int *)(v28 + 24), v52, type metadata accessor for DisplayControlGroup.LayoutType);
  LODWORD(v12) = swift_getEnumCaseMultiPayload();
  sub_23DF73E54(v29, type metadata accessor for DisplayControlGroup.LayoutType);
  if ((_DWORD)v12 == 1)
    v30 = sub_23E0C8CC0(0.0);
  else
    v30 = sub_23E0C91B0();
  v31 = v30;
  if ((sub_23E0C7EE8() & 1) != 0)
    v31 = *(double *)a2;
  sub_23E0C8260();
  v32 = (uint64_t *)(a3 + *(int *)(v28 + 28));
  v33 = v32[1];
  v56 = *v32;
  v34 = v53 + *(int *)(v57 + 36);
  v35 = *(_OWORD *)(v34 + 48);
  v70[2] = *(_OWORD *)(v34 + 32);
  v70[3] = v35;
  v71 = *(_WORD *)(v34 + 64);
  v36 = *(_OWORD *)(v34 + 16);
  v70[0] = *(_OWORD *)v34;
  v70[1] = v36;
  swift_bridgeObjectRetain();
  sub_23DF98EC8((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v61);
  sub_23DF98EC8((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  LODWORD(v57) = v61;
  v37 = v62;
  v55 = v63;
  v38 = v64;
  v39 = v65;
  v40 = v66;
  v41 = v67;
  v42 = v68;
  v43 = v69;
  v44 = (uint64_t)v58;
  v45 = v59;
  sub_23DF89C1C((uint64_t)v58, v59, &qword_256D1FE60);
  v46 = v60;
  sub_23DF89C1C(v45, v60, &qword_256D1FE60);
  v47 = v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE70) + 48);
  *(_QWORD *)v47 = v56;
  *(_QWORD *)(v47 + 8) = v33;
  *(double *)(v47 + 16) = v31;
  *(_WORD *)(v47 + 24) = v57;
  *(_BYTE *)(v47 + 32) = v37;
  *(_OWORD *)(v47 + 40) = v55;
  *(_QWORD *)(v47 + 56) = v38;
  *(_QWORD *)(v47 + 64) = v39;
  *(_BYTE *)(v47 + 72) = v40;
  *(_BYTE *)(v47 + 73) = v41;
  *(_QWORD *)(v47 + 80) = v42;
  *(_BYTE *)(v47 + 88) = v43;
  swift_bridgeObjectRetain();
  sub_23DF89C7C(v44, &qword_256D1FE60);
  swift_bridgeObjectRelease();
  return sub_23DF89C7C(v45, &qword_256D1FE60);
}

uint64_t sub_23DFCE004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _BOOL4 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  char v56;
  char v57;

  v50 = a4;
  v54 = a3;
  v55 = a5;
  v49 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB40);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB30);
  MEMORY[0x24BDAC7A8](v51);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB20);
  MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB00);
  MEMORY[0x24BDAC7A8](v52);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DisplayControl(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)((char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = *(_BYTE *)(a1 + *(int *)(v18 + 20));
  Device.Control.viewType(with:)(&v56, &v57);
  v25 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v49 + *(int *)(v25 + 24), (uint64_t)v24, type metadata accessor for DisplayControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v24, (uint64_t)v21, type metadata accessor for DisplayControl);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
    v27 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v21, v26 + v27, type metadata accessor for DisplayControl);
  }
  else
  {
    v26 = *v24;
  }
  v28 = sub_23E0F991C(a1, v26);
  v30 = v29;
  swift_bridgeObjectRelease();
  v32 = (v30 & 1) == 0 && v28 == 0;
  sub_23DFCEB84(v54, a1, v32 & v50, (uint64_t)v8);
  sub_23DFD23AC(a1, (uint64_t)v11);
  sub_23DF89C7C((uint64_t)v8, &qword_256D1FB60);
  v33 = sub_23E13672C();
  sub_23E135D00();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v13, &qword_256D1FB40);
  v42 = &v13[*(int *)(v51 + 36)];
  *v42 = v33;
  *((_QWORD *)v42 + 1) = v35;
  *((_QWORD *)v42 + 2) = v37;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v41;
  v42[40] = 0;
  sub_23DF89C7C((uint64_t)v11, &qword_256D1FB40);
  sub_23DFD2678(a1);
  sub_23DFD3440();
  v43 = (uint64_t)v53;
  sub_23E136AF8();
  swift_bridgeObjectRelease();
  sub_23DF89C7C((uint64_t)v13, &qword_256D1FB30);
  v44 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Device.Control(0) + 44));
  KeyPath = swift_getKeyPath();
  v46 = swift_allocObject();
  *(_BYTE *)(v46 + 16) = (v44 & 1) == 0;
  sub_23DF89C1C(v43, (uint64_t)v17, &qword_256D1FB20);
  v47 = (uint64_t *)&v17[*(int *)(v52 + 36)];
  *v47 = KeyPath;
  v47[1] = (uint64_t)sub_23DFD55C4;
  v47[2] = v46;
  sub_23DF89C7C(v43, &qword_256D1FB20);
  return sub_23DF89340((uint64_t)v17, v55, &qword_256D1FB00);
}

uint64_t sub_23DFCE490@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  _OWORD v65[4];
  __int16 v66;

  v53 = a4;
  LODWORD(v52) = a3;
  v54 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB60);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB30);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB20);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB00);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v55 = (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v52 - v22;
  LOBYTE(v56) = *(_BYTE *)(a1 + *(int *)(type metadata accessor for DisplayControl(0) + 20));
  Device.Control.viewType(with:)((char *)&v56, v65);
  v24 = qword_23E13A8F0[SLOBYTE(v65[0])];
  sub_23DFCEB84(a2, a1, v52, (uint64_t)v9);
  sub_23DFD23AC(a1, (uint64_t)v12);
  sub_23DF89C7C((uint64_t)v9, &qword_256D1FB60);
  v25 = sub_23E13672C();
  sub_23E135D00();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_23DF89C1C((uint64_t)v12, (uint64_t)v15, &qword_256D1FB40);
  v34 = &v15[*(int *)(v13 + 36)];
  *v34 = v25;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_23DF89C7C((uint64_t)v12, &qword_256D1FB40);
  sub_23DFD2678(a1);
  sub_23DFD3440();
  sub_23E136AF8();
  swift_bridgeObjectRelease();
  sub_23DF89C7C((uint64_t)v15, &qword_256D1FB30);
  LOBYTE(v13) = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Device.Control(0) + 44));
  KeyPath = swift_getKeyPath();
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = (v13 & 1) == 0;
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v23, &qword_256D1FB20);
  v37 = (uint64_t *)&v23[*(int *)(v19 + 36)];
  *v37 = KeyPath;
  v37[1] = (uint64_t)sub_23DFD55C4;
  v37[2] = v36;
  sub_23DF89C7C((uint64_t)v18, &qword_256D1FB20);
  v38 = (uint64_t *)(v53 + *(int *)(type metadata accessor for DisplayControlGroup(0) + 28));
  v39 = v38[1];
  v53 = *v38;
  v40 = (char *)a2 + *(int *)(type metadata accessor for ControlModuleView() + 36);
  v41 = *((_OWORD *)v40 + 3);
  v65[2] = *((_OWORD *)v40 + 2);
  v65[3] = v41;
  v66 = *((_WORD *)v40 + 32);
  v42 = *((_OWORD *)v40 + 1);
  v65[0] = *(_OWORD *)v40;
  v65[1] = v42;
  swift_bridgeObjectRetain();
  sub_23DF98EC8((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v56);
  sub_23DF98EC8((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  LOWORD(v36) = v56;
  LOBYTE(v9) = v57;
  v52 = v58;
  v43 = v59;
  v44 = v60;
  LOBYTE(v19) = v61;
  LOBYTE(a1) = v62;
  v45 = v63;
  LOBYTE(v18) = v64;
  v46 = (uint64_t)v23;
  v47 = v55;
  sub_23DF89C1C(v46, v55, &qword_256D1FB00);
  v48 = v47;
  v49 = v54;
  sub_23DF89C1C(v48, v54, &qword_256D1FB00);
  v50 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE78) + 48);
  *(_QWORD *)v50 = v53;
  *(_QWORD *)(v50 + 8) = v39;
  *(_QWORD *)(v50 + 16) = v24;
  *(_WORD *)(v50 + 24) = v36;
  *(_BYTE *)(v50 + 32) = (_BYTE)v9;
  *(_OWORD *)(v50 + 40) = v52;
  *(_QWORD *)(v50 + 56) = v43;
  *(_QWORD *)(v50 + 64) = v44;
  *(_BYTE *)(v50 + 72) = v19;
  *(_BYTE *)(v50 + 73) = a1;
  *(_QWORD *)(v50 + 80) = v45;
  *(_BYTE *)(v50 + 88) = (_BYTE)v18;
  swift_bridgeObjectRetain();
  sub_23DF89C7C(v46, &qword_256D1FB00);
  swift_bridgeObjectRelease();
  return sub_23DF89C7C(v55, &qword_256D1FB00);
}

uint64_t sub_23DFCE968@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  double v16;
  _OWORD v17[11];
  _OWORD v18[11];
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[24];

  if (*(_QWORD *)(v1 + 8))
  {
    v16 = *(double *)(v1 + 16);
    v3 = *(unsigned __int8 *)(v1 + 24);
    swift_bridgeObjectRetain();
    if (v3 == 1)
      v4 = sub_23E136C6C();
    else
      v4 = sub_23E136C48();
    v27[0] = v4;
    v6 = sub_23E1368DC();
    v8 = v7;
    v10 = v9;
    v12 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v19 = v6;
    v20 = v8;
    v21 = v10 & 1;
    v22 = v12;
    v23 = KeyPath;
    v24 = 1;
    v25 = sub_23E1360CC();
    v26 = v14;
    sub_23E136FE4();
    sub_23E04C42C(0.0, 1, 0.0, 1, v16, 0, 0.0, 1, v18, 0.0, 1, 0.0, 1);
    sub_23DFA055C(v6, v8, v10 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v17[8] = v18[8];
    v17[9] = v18[9];
    v17[10] = v18[10];
    v17[4] = v18[4];
    v17[5] = v18[5];
    v17[6] = v18[6];
    v17[7] = v18[7];
    v17[0] = v18[0];
    v17[1] = v18[1];
    v17[2] = v18[2];
    v17[3] = v18[3];
    CGPointMake(v17);
    v5 = v17;
  }
  else
  {
    sub_23DFD540C(v18);
    v5 = v18;
  }
  sub_23DF89340((uint64_t)v5, (uint64_t)v27, &qword_256D1FE90);
  return sub_23DF89340((uint64_t)v27, a1, &qword_256D1FE90);
}

uint64_t sub_23DFCEB84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char v63;
  _OWORD v64[4];
  __int16 v65;

  v54 = a3;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD38);
  MEMORY[0x24BDAC7A8](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD28);
  v9 = MEMORY[0x24BDAC7A8](v58);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (uint64_t)&v45 - v12;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD18);
  v13 = MEMORY[0x24BDAC7A8](v53);
  v45 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v46 = (uint64_t)&v45 - v15;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD98);
  MEMORY[0x24BDAC7A8](v55);
  v57 = (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDA0);
  MEMORY[0x24BDAC7A8](v51);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB80);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB90);
  v20 = MEMORY[0x24BDAC7A8](v50);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  v25 = (char *)a1 + *(int *)(type metadata accessor for ControlModuleView() + 36);
  v26 = *((_OWORD *)v25 + 3);
  v64[2] = *((_OWORD *)v25 + 2);
  v64[3] = v26;
  v65 = *((_WORD *)v25 + 32);
  v27 = *((_OWORD *)v25 + 1);
  v64[0] = *(_OWORD *)v25;
  v64[1] = v27;
  sub_23DF98EC8((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v60);
  sub_23DF98EC8((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if ((v63 & 1) != 0
    || (v59 = *(_BYTE *)(a2 + *(int *)(type metadata accessor for DisplayControl(0) + 20)),
        Device.Control.viewType(with:)(&v59, &v60),
        v60 - 6 > 3))
  {
    v49 = a4;
    sub_23DF98EC8((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)&v60);
    sub_23DF98EC8((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    if (v63 == 1
      && ((v31 = *(_BYTE *)(a2 + *(int *)(type metadata accessor for DisplayControl(0) + 20)),
           v59 = v31,
           Device.Control.viewType(with:)(&v59, &v60),
           v60 - 6 < 6)
       || !(_BYTE)v60
       || v60 == 4))
    {
      sub_23DFCF394(a2, v54 & 1, (uint64_t)v22);
      v59 = v31;
      Device.Control.viewType(with:)(&v59, &v60);
      sub_23DF98EC8((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
      sub_23DF9C754((uint64_t)&v60);
      sub_23DF98EC8((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
      sub_23E136FE4();
      sub_23E135E5C();
      v32 = v45;
      sub_23DF89C1C((uint64_t)v22, v45, &qword_256D1FB90);
      v33 = (_OWORD *)(v32 + *(int *)(v53 + 36));
      v34 = v61;
      *v33 = v60;
      v33[1] = v34;
      v33[2] = v62;
      sub_23DF89C7C((uint64_t)v22, &qword_256D1FB90);
      v35 = &qword_256D1FD18;
      v36 = v46;
      sub_23DF89340(v32, v46, &qword_256D1FD18);
      sub_23DF89C1C(v36, (uint64_t)v18, &qword_256D1FD18);
      swift_storeEnumTagMultiPayload();
      sub_23DFD36B4();
      sub_23DFD402C();
      v37 = (uint64_t)v52;
      sub_23E136480();
      sub_23DF89C1C(v37, v57, &qword_256D1FB80);
      swift_storeEnumTagMultiPayload();
      sub_23DFD3648();
      sub_23DFD4098();
      sub_23E136480();
      sub_23DF89C7C(v37, &qword_256D1FB80);
      v29 = v36;
    }
    else
    {
      v38 = v54 & 1;
      sub_23DFCF394(a2, v54 & 1, (uint64_t)v24);
      v39 = *a1;
      sub_23DF89C1C((uint64_t)v24, (uint64_t)v8, &qword_256D1FB90);
      v40 = &v8[*(int *)(v47 + 36)];
      *v40 = v38;
      *((_QWORD *)v40 + 1) = v39;
      sub_23DF89C7C((uint64_t)v24, &qword_256D1FB90);
      sub_23E136FE4();
      sub_23E135E5C();
      sub_23DF89C1C((uint64_t)v8, (uint64_t)v11, &qword_256D1FD38);
      v41 = &v11[*(int *)(v58 + 36)];
      v42 = v61;
      *(_OWORD *)v41 = v60;
      *((_OWORD *)v41 + 1) = v42;
      *((_OWORD *)v41 + 2) = v62;
      sub_23DF89C7C((uint64_t)v8, &qword_256D1FD38);
      v35 = &qword_256D1FD28;
      v43 = v48;
      sub_23DF89340((uint64_t)v11, v48, &qword_256D1FD28);
      sub_23DF89C1C(v43, v57, &qword_256D1FD28);
      swift_storeEnumTagMultiPayload();
      sub_23DFD3648();
      sub_23DFD4098();
      sub_23E136480();
      v29 = v43;
    }
    v30 = v35;
  }
  else
  {
    sub_23DFCF394(a2, v54 & 1, (uint64_t)v24);
    sub_23DF89C1C((uint64_t)v24, (uint64_t)v18, &qword_256D1FB90);
    swift_storeEnumTagMultiPayload();
    sub_23DFD36B4();
    sub_23DFD402C();
    v28 = (uint64_t)v52;
    sub_23E136480();
    sub_23DF89C1C(v28, v57, &qword_256D1FB80);
    swift_storeEnumTagMultiPayload();
    sub_23DFD3648();
    sub_23DFD4098();
    sub_23E136480();
    sub_23DF89C7C(v28, &qword_256D1FB80);
    v29 = (uint64_t)v24;
    v30 = &qword_256D1FB90;
  }
  return sub_23DF89C7C(v29, v30);
}

void sub_23DFCF394(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[7];
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char v170[127];
  _BYTE v171[17];

  v158 = a2;
  v169 = a3;
  v138 = type metadata accessor for AlarmAndTimerControlView(0);
  MEMORY[0x24BDAC7A8](v138);
  v106 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
  MEMORY[0x24BDAC7A8](v5);
  v105 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDA8);
  MEMORY[0x24BDAC7A8](v136);
  v137 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FCD8);
  MEMORY[0x24BDAC7A8](v151);
  v139 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDB0);
  MEMORY[0x24BDAC7A8](v115);
  v116 = (char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for ColorControl(0);
  MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDB8);
  MEMORY[0x24BDAC7A8](v11);
  v110 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v108 = *(_QWORD *)(v13 - 8);
  v109 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v111 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v112 = (char *)v83 - v16;
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FCE8);
  MEMORY[0x24BDAC7A8](v135);
  v117 = (char *)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDC0);
  MEMORY[0x24BDAC7A8](v147);
  v150 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDC8);
  MEMORY[0x24BDAC7A8](v145);
  v146 = (char *)v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FCA0);
  MEMORY[0x24BDAC7A8](v148);
  v149 = (char *)v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FC90);
  MEMORY[0x24BDAC7A8](v168);
  v152 = (char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDD0);
  MEMORY[0x24BDAC7A8](v101);
  v102 = (char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FC68);
  MEMORY[0x24BDAC7A8](v144);
  v103 = (char *)v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FC78);
  MEMORY[0x24BDAC7A8](v100);
  v104 = (char *)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDD8);
  MEMORY[0x24BDAC7A8](v140);
  v142 = (char *)v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDE0);
  MEMORY[0x24BDAC7A8](v131);
  v132 = (char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FC40);
  MEMORY[0x24BDAC7A8](v141);
  v134 = (char *)v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FC30);
  MEMORY[0x24BDAC7A8](v163);
  v143 = (char *)v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDE8);
  MEMORY[0x24BDAC7A8](v128);
  v129 = (char *)v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for ButtonControlView();
  v30 = MEMORY[0x24BDAC7A8](v127);
  v125 = (char *)v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v126 = (char *)v83 - v32;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FC50);
  MEMORY[0x24BDAC7A8](v130);
  v133 = (char *)v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDF0);
  MEMORY[0x24BDAC7A8](v97);
  v98 = (char *)v83 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for SliderControlView();
  v35 = MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)v83 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v95 = (char *)v83 - v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FDF8);
  MEMORY[0x24BDAC7A8](v38);
  v91 = (char *)v83 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  v88 = *(_QWORD *)(v90 - 8);
  v40 = MEMORY[0x24BDAC7A8](v90);
  v92 = (char *)v83 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v93 = (char *)v83 - v42;
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FBE8);
  MEMORY[0x24BDAC7A8](v124);
  v99 = (char *)v83 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Device.Control.IncrementalConfig(0);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v89 = (char *)v83 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v120 = (char *)v83 - v47;
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE00);
  MEMORY[0x24BDAC7A8](v165);
  v167 = (char *)v83 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE08);
  MEMORY[0x24BDAC7A8](v159);
  v161 = (char *)v83 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE10);
  MEMORY[0x24BDAC7A8](v153);
  v155 = (char *)v83 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE18);
  MEMORY[0x24BDAC7A8](v121);
  v122 = (char *)v83 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FBC0);
  MEMORY[0x24BDAC7A8](v154);
  v123 = (char *)v83 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FBB0);
  MEMORY[0x24BDAC7A8](v160);
  v156 = (char *)v83 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FBA0);
  MEMORY[0x24BDAC7A8](v166);
  v162 = (char *)v83 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE20);
  MEMORY[0x24BDAC7A8](v85);
  v86 = (char *)v83 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for SwitchControlView(0);
  v56 = MEMORY[0x24BDAC7A8](v84);
  v83[5] = (char *)v83 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v83[6] = (char *)v83 - v58;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE28);
  v60 = MEMORY[0x24BDAC7A8](v59);
  v107 = (char *)v83 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = MEMORY[0x24BDAC7A8](v60);
  v83[4] = (char *)v83 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v83[3] = (char *)v83 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v67 = MEMORY[0x24BDAC7A8](v66);
  v68 = MEMORY[0x24BDAC7A8](v67);
  MEMORY[0x24BDAC7A8](v68);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FBD0);
  MEMORY[0x24BDAC7A8](v119);
  v87 = (char *)v83 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE30);
  MEMORY[0x24BDAC7A8](v70);
  v72 = (char *)v83 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  v74 = MEMORY[0x24BDAC7A8](v73);
  v83[2] = (char *)v83 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = MEMORY[0x24BDAC7A8](v74);
  v118 = (char *)v83 - v77;
  MEMORY[0x24BDAC7A8](v76);
  v157 = *(int *)(type metadata accessor for DisplayControl(0) + 20);
  v170[0] = *(_BYTE *)(a1 + v157);
  v78 = a1;
  Device.Control.viewType(with:)(v170, v171);
  v79 = v171[0];
  v80 = *(int *)(type metadata accessor for Device.Control(0) + 20);
  v164 = v78;
  v81 = v78 + v80;
  v82 = (uint64_t)&v72[*(int *)(v70 + 48)];
  *v72 = v79;
  sub_23DF73E10(v81, v82, type metadata accessor for Device.Control.Kind);
  __asm { BR              X9 }
}

uint64_t sub_23DFD0038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;

  type metadata accessor for Device.Control.Kind(0);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23DF73E54(v2, type metadata accessor for Device.Control.Kind);
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
    sub_23DF89384(v2 + *(int *)(v5 + 48), v3, type metadata accessor for Device.Control.BinaryViewConfig);
    v6 = type metadata accessor for ControlModuleView();
    v7 = *(uint64_t **)(v0 + 744);
    v8 = (char *)v7 + *(int *)(v6 + 24);
    v9 = *((_QWORD *)v8 + 1);
    v10 = *((_QWORD *)v8 + 4);
    *(_QWORD *)(v4 - 256) = *(_QWORD *)v8;
    *(_QWORD *)(v4 - 248) = v9;
    *(_OWORD *)(v4 - 240) = *((_OWORD *)v8 + 1);
    *(_QWORD *)(v4 - 224) = v10;
    *(_OWORD *)(v0 + 1304) = *(_OWORD *)(v8 + 40);
    sub_23DFA7EDC(*(_QWORD *)(v0 + 696), v1);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC90);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v1, 1, v11) == 1)
    {
      sub_23DF89C7C(v1, &qword_256D1FE28);
    }
    else
    {
      sub_23DFA8494();
      v13 = v12;
      v15 = v14;
      v17 = v16;
      sub_23DF89C7C(v1, &qword_256D1EC90);
      if (v15)
      {
        v18 = *v7;
        v19 = *(_QWORD *)(v0 + 384);
        *(_QWORD *)v19 = v18;
        *(_QWORD *)(v19 + 8) = v13;
        *(_QWORD *)(v19 + 16) = v15;
        *(_BYTE *)(v19 + 24) = v17;
        v20 = *(int **)(v0 + 400);
        sub_23DF89384(v3, v19 + v20[6], type metadata accessor for Device.Control.BinaryViewConfig);
        v21 = v19 + v20[7];
        *(_QWORD *)v21 = swift_getKeyPath();
        *(_BYTE *)(v21 + 8) = 0;
        v22 = v19 + v20[8];
        __asm { FMOV            V0.2D, #1.0 }
        *(_OWORD *)(v0 + 1136) = _Q0;
        type metadata accessor for CGSize(0);
        swift_retain();
        swift_retain();
        sub_23E136D8C();
        v28 = *(_QWORD *)(v4 - 240);
        *(_OWORD *)v22 = *(_OWORD *)(v4 - 256);
        *(_QWORD *)(v22 + 16) = v28;
        v29 = v19 + v20[9];
        *(_BYTE *)(v0 + 1136) = 0;
        sub_23E136D8C();
        v30 = *(_QWORD *)(v4 - 248);
        *(_BYTE *)v29 = *(_BYTE *)(v4 - 256);
        *(_QWORD *)(v29 + 8) = v30;
        v31 = *(_QWORD *)(v0 + 392);
        sub_23DF89384(v19, v31, (uint64_t (*)(_QWORD))type metadata accessor for ButtonControlView);
        sub_23DF73E10(v31, *(_QWORD *)(v0 + 416), (uint64_t (*)(_QWORD))type metadata accessor for ButtonControlView);
        swift_storeEnumTagMultiPayload();
        sub_23DF73F28(&qword_256D1FC58, (uint64_t (*)(uint64_t))type metadata accessor for ButtonControlView, (uint64_t)&unk_23E143478);
        v32 = *(_QWORD *)(v0 + 448);
        sub_23E136480();
        swift_release();
        swift_release();
        sub_23DF73E54(v31, (uint64_t (*)(_QWORD))type metadata accessor for ButtonControlView);
        sub_23DF89C1C(v32, *(_QWORD *)(v0 + 440), &qword_256D1FC50);
        swift_storeEnumTagMultiPayload();
        sub_23DFD3B68();
        v33 = *(_QWORD *)(v0 + 456);
        sub_23E136480();
        sub_23DF89C1C(v33, *(_QWORD *)(v0 + 520), &qword_256D1FC40);
        swift_storeEnumTagMultiPayload();
        sub_23DFD3BEC(&qword_256D1FC38, &qword_256D1FC40, (uint64_t (*)(void))sub_23DFD3B68);
        sub_23DFD3BEC(&qword_256D1FC60, &qword_256D1FC68, (uint64_t (*)(void))sub_23DFD3C58);
        v34 = *(_QWORD *)(v0 + 528);
        sub_23E136480();
        sub_23DF89C7C(v33, &qword_256D1FC40);
        sub_23DF89C1C(v34, *(_QWORD *)(v0 + 672), &qword_256D1FC30);
        swift_storeEnumTagMultiPayload();
        sub_23DFD378C();
        sub_23DFD3ACC();
        v35 = *(_QWORD *)(v0 + 680);
        sub_23E136480();
        sub_23DF89C7C(v34, &qword_256D1FC30);
        sub_23DF89C1C(v35, *(_QWORD *)(v0 + 720), &qword_256D1FBA0);
        swift_storeEnumTagMultiPayload();
        sub_23DFD3720();
        sub_23DFD3CD4();
        sub_23E136480();
        sub_23DF89C7C(v35, &qword_256D1FBA0);
        return sub_23DF89C7C(v32, &qword_256D1FC50);
      }
    }
  }
  result = sub_23E13756C();
  __break(1u);
  return result;
}

uint64_t sub_23DFD23AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a1;
  v26 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB60);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD90);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E134C80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FB50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (byte_256D34708 == 1)
  {
    v15 = sub_23E136DC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v8);
    v16 = *(unsigned __int8 *)(v9 + 80);
    v24 = v2;
    v17 = (v16 + 16) & ~v16;
    v18 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, v11, v8);
    sub_23DF89C1C(v25, (uint64_t)v14, &qword_256D1FB60);
    v19 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    *v19 = v15;
    v19[1] = (uint64_t)sub_23DFD41F0;
    v19[2] = v18;
    sub_23DF89C1C((uint64_t)v14, (uint64_t)v7, &qword_256D1FB50);
    swift_storeEnumTagMultiPayload();
    sub_23DFD3538();
    sub_23DFA5DBC(&qword_256D1FB58, &qword_256D1FB60, (uint64_t (*)(void))sub_23DFD35DC, MEMORY[0x24BDF3F50]);
    sub_23E136480();
    v20 = (uint64_t)v14;
    v21 = &qword_256D1FB50;
  }
  else
  {
    sub_23DF89C1C(v25, (uint64_t)v4, &qword_256D1FB60);
    sub_23DF89C1C((uint64_t)v4, (uint64_t)v7, &qword_256D1FB60);
    swift_storeEnumTagMultiPayload();
    sub_23DFD3538();
    sub_23DFA5DBC(&qword_256D1FB58, &qword_256D1FB60, (uint64_t (*)(void))sub_23DFD35DC, MEMORY[0x24BDF3F50]);
    sub_23E136480();
    v20 = (uint64_t)v4;
    v21 = &qword_256D1FB60;
  }
  return sub_23DF89C7C(v20, v21);
}

void sub_23DFD2678(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD78);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23E138050;
  sub_23DFD298C();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = 0xD000000000000010;
  *(_QWORD *)(v2 + 40) = 0x800000023E1448F0;
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Device.Control(0) + 32));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
    if (v6 >= v7 >> 1)
      v2 = (uint64_t)sub_23E007E10((_QWORD *)(v7 > 1), v6 + 1, 1, (_QWORD *)v2);
    *(_QWORD *)(v2 + 16) = v6 + 1;
    v8 = v2 + 16 * v6;
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v4;
  }
  Device.Control.Kind.primitive.getter();
  JUMPOUT(0x23DFD27D0);
}

uint64_t sub_23DFD298C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];

  type metadata accessor for ControlModuleView();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECD0);
  MEMORY[0x24264B734](v3, v0);
  v1 = v3[1];
  if (v3[4])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
      return 0;
  }
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  return 0x2D656C75646F4D2ELL;
}

uint64_t sub_23DFD2A84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v10[4];
  uint64_t v11;

  v3 = type metadata accessor for ControlModuleView();
  v4 = v1
     + ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8);
  v5 = *a1;
  v6 = a1[1];
  v7 = *(_OWORD *)(v4 + 48);
  v10[2] = *(_OWORD *)(v4 + 32);
  v10[3] = v7;
  v11 = *(_QWORD *)(v4 + 64);
  v8 = *(_OWORD *)(v4 + 16);
  v10[0] = *(_OWORD *)v4;
  v10[1] = v8;
  return sub_23DFCC2B8(v5, v6, v10);
}

unint64_t sub_23DFD2B10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1F9F0;
  if (!qword_256D1F9F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F9F8);
    v2[0] = sub_23DFD2B7C();
    v2[1] = sub_23DFD2D08();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1F9F0);
  }
  return result;
}

unint64_t sub_23DFD2B7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FA00;
  if (!qword_256D1FA00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FA08);
    v2[0] = sub_23DFD2C00();
    v2[1] = sub_23DF89B88(&qword_256D1FA50, &qword_256D1FA58, MEMORY[0x24BDF4700]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FA00);
  }
  return result;
}

unint64_t sub_23DFD2C00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FA10;
  if (!qword_256D1FA10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FA18);
    v2[0] = sub_23DFD2C84();
    v2[1] = sub_23DF89B88(&qword_256D1FA40, &qword_256D1FA48, MEMORY[0x24BDF4700]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FA10);
  }
  return result;
}

unint64_t sub_23DFD2C84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FA20;
  if (!qword_256D1FA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FA28);
    v2[0] = sub_23DF89B88(&qword_256D1FA30, &qword_256D1FA38, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FA20);
  }
  return result;
}

unint64_t sub_23DFD2D08()
{
  unint64_t result;

  result = qword_256D1FA60;
  if (!qword_256D1FA60)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEFAE0], MEMORY[0x24BDEFAF0]);
    atomic_store(result, (unint64_t *)&qword_256D1FA60);
  }
  return result;
}

unint64_t sub_23DFD2D4C()
{
  unint64_t result;

  result = qword_256D1FA68;
  if (!qword_256D1FA68)
  {
    result = MEMORY[0x24264C55C](&unk_23E141EEC, &type metadata for ControlRow);
    atomic_store(result, (unint64_t *)&qword_256D1FA68);
  }
  return result;
}

unint64_t sub_23DFD2D90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FA78;
  if (!qword_256D1FA78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F9B0);
    v2[0] = sub_23DF89B88(&qword_256D1FA80, &qword_256D1F9A8, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FA78);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ControlModuleView();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = v2 + *(int *)(v1 + 20);
  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v6 = v3 + *(int *)(v5 + 24);
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v8 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v2 + *(int *)(v1 + 36);
  sub_23DF985F0(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(_BYTE *)(v9 + 64), *(_BYTE *)(v9 + 65));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23DFD3008@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = type metadata accessor for ControlModuleView();
  return sub_23DFCC230(a1, v2+ ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8), a2);
}

uint64_t sub_23DFD3068(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23DFD30AC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23DFD30F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for ControlModuleView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 112) & ~v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3;
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v8 = v5 + *(int *)(v7 + 24);
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v10 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v4 + *(int *)(v1 + 36);
  sub_23DF985F0(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56), *(_BYTE *)(v11 + 64), *(_BYTE *)(v11 + 65));
  return swift_deallocObject();
}

uint64_t sub_23DFD32D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ControlModuleView() - 8) + 80);
  return sub_23DFCC5B0(a1, v2 + 16, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), v2 + ((v5 + 112) & ~v5), a2, *(double *)(v2 + 104));
}

uint64_t sub_23DFD332C(uint64_t a1)
{
  return sub_23DFD502C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD))sub_23DFCD658);
}

unint64_t sub_23DFD3338()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB10;
  if (!qword_256D1FB10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB00);
    v2[0] = sub_23DFD33BC();
    v2[1] = sub_23DF89B88(&qword_256D1FD50, &qword_256D1FD58, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB10);
  }
  return result;
}

unint64_t sub_23DFD33BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB18;
  if (!qword_256D1FB18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB20);
    v2[0] = sub_23DFD3440();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB18);
  }
  return result;
}

unint64_t sub_23DFD3440()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB28;
  if (!qword_256D1FB28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB30);
    v2[0] = sub_23DFD34AC();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB28);
  }
  return result;
}

unint64_t sub_23DFD34AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB38;
  if (!qword_256D1FB38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB40);
    v2[0] = sub_23DFD3538();
    v2[1] = sub_23DFA5DBC(&qword_256D1FB58, &qword_256D1FB60, (uint64_t (*)(void))sub_23DFD35DC, MEMORY[0x24BDF3F50]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB38);
  }
  return result;
}

unint64_t sub_23DFD3538()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB48;
  if (!qword_256D1FB48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB50);
    v2[0] = sub_23DFA5DBC(&qword_256D1FB58, &qword_256D1FB60, (uint64_t (*)(void))sub_23DFD35DC, MEMORY[0x24BDF3F50]);
    v2[1] = sub_23DF89B88(&qword_256D1FD40, &qword_256D1FD48, MEMORY[0x24BDEFF30]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB48);
  }
  return result;
}

unint64_t sub_23DFD35DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB68;
  if (!qword_256D1FB68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB70);
    v2[0] = sub_23DFD3648();
    v2[1] = sub_23DFD4098();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB68);
  }
  return result;
}

unint64_t sub_23DFD3648()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB78;
  if (!qword_256D1FB78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB80);
    v2[0] = sub_23DFD36B4();
    v2[1] = sub_23DFD402C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB78);
  }
  return result;
}

unint64_t sub_23DFD36B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB88;
  if (!qword_256D1FB88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FB90);
    v2[0] = sub_23DFD3720();
    v2[1] = sub_23DFD3CD4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB88);
  }
  return result;
}

unint64_t sub_23DFD3720()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FB98;
  if (!qword_256D1FB98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FBA0);
    v2[0] = sub_23DFD378C();
    v2[1] = sub_23DFD3ACC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FB98);
  }
  return result;
}

unint64_t sub_23DFD378C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FBA8;
  if (!qword_256D1FBA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FBB0);
    v2[0] = sub_23DFD37F8();
    v2[1] = sub_23DFD396C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FBA8);
  }
  return result;
}

unint64_t sub_23DFD37F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FBB8;
  if (!qword_256D1FBB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FBC0);
    v2[0] = sub_23DFD3864();
    v2[1] = sub_23DFD38E8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FBB8);
  }
  return result;
}

unint64_t sub_23DFD3864()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FBC8;
  if (!qword_256D1FBC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FBD0);
    v2[0] = sub_23DF73F28(&qword_256D1FBD8, type metadata accessor for SwitchControlView, (uint64_t)&unk_23E1384A8);
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FBC8);
  }
  return result;
}

unint64_t sub_23DFD38E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FBE0;
  if (!qword_256D1FBE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FBE8);
    v2[0] = sub_23DF73F28(&qword_256D1FBF0, (uint64_t (*)(uint64_t))type metadata accessor for SliderControlView, (uint64_t)&unk_23E13AB48);
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FBE0);
  }
  return result;
}

unint64_t sub_23DFD396C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FBF8;
  if (!qword_256D1FBF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FC00);
    v2[0] = sub_23DFD39D8();
    v2[1] = sub_23DFD3A88();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FBF8);
  }
  return result;
}

unint64_t sub_23DFD39D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FC08;
  if (!qword_256D1FC08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FC10);
    v2[0] = sub_23DFD3A44();
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FC08);
  }
  return result;
}

unint64_t sub_23DFD3A44()
{
  unint64_t result;

  result = qword_256D1FC18;
  if (!qword_256D1FC18)
  {
    result = MEMORY[0x24264C55C](&unk_23E14327C, &type metadata for VerticalPickerControlView);
    atomic_store(result, (unint64_t *)&qword_256D1FC18);
  }
  return result;
}

unint64_t sub_23DFD3A88()
{
  unint64_t result;

  result = qword_256D1FC20;
  if (!qword_256D1FC20)
  {
    result = MEMORY[0x24264C55C](&unk_23E1398F8, &type metadata for MediaPlayerView);
    atomic_store(result, (unint64_t *)&qword_256D1FC20);
  }
  return result;
}

unint64_t sub_23DFD3ACC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FC28;
  if (!qword_256D1FC28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FC30);
    v2[0] = sub_23DFD3BEC(&qword_256D1FC38, &qword_256D1FC40, (uint64_t (*)(void))sub_23DFD3B68);
    v2[1] = sub_23DFD3BEC(&qword_256D1FC60, &qword_256D1FC68, (uint64_t (*)(void))sub_23DFD3C58);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FC28);
  }
  return result;
}

unint64_t sub_23DFD3B68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FC48;
  if (!qword_256D1FC48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FC50);
    v2[0] = sub_23DF73F28(&qword_256D1FC58, (uint64_t (*)(uint64_t))type metadata accessor for ButtonControlView, (uint64_t)&unk_23E143478);
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FC48);
  }
  return result;
}

uint64_t sub_23DFD3BEC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    v8[0] = MEMORY[0x24BDF5560];
    v8[1] = v7;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DFD3C58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D1FC70;
  if (!qword_256D1FC70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FC78);
    v2 = sub_23DF73F28(&qword_256D1FC80, (uint64_t (*)(uint64_t))type metadata accessor for ThermostatControlView, (uint64_t)&unk_23E13BBF0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D1FC70);
  }
  return result;
}

unint64_t sub_23DFD3CD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FC88;
  if (!qword_256D1FC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FC90);
    v2[0] = sub_23DFD3D40();
    v2[1] = sub_23DFD3FD0();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FC88);
  }
  return result;
}

unint64_t sub_23DFD3D40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FC98;
  if (!qword_256D1FC98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FCA0);
    v2[0] = sub_23DFD3DAC();
    v2[1] = sub_23DFD3EC8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FC98);
  }
  return result;
}

unint64_t sub_23DFD3DAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FCA8;
  if (!qword_256D1FCA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FCB0);
    v2[0] = sub_23DFD3E18();
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FCA8);
  }
  return result;
}

unint64_t sub_23DFD3E18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FCB8;
  if (!qword_256D1FCB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FCC0);
    v2[0] = sub_23DFD3E84();
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FCB8);
  }
  return result;
}

unint64_t sub_23DFD3E84()
{
  unint64_t result;

  result = qword_256D1FCC8;
  if (!qword_256D1FCC8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1428A8, &type metadata for WheelPickerControlView);
    atomic_store(result, (unint64_t *)&qword_256D1FCC8);
  }
  return result;
}

unint64_t sub_23DFD3EC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FCD0;
  if (!qword_256D1FCD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FCD8);
    v2[0] = sub_23DFD3F4C();
    v2[1] = sub_23DF73F28(&qword_256D1FCF8, type metadata accessor for AlarmAndTimerControlView, (uint64_t)&unk_23E1422F8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FCD0);
  }
  return result;
}

unint64_t sub_23DFD3F4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FCE0;
  if (!qword_256D1FCE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FCE8);
    v2[0] = sub_23DF73F28(&qword_256D1FCF0, type metadata accessor for ColorControl, (uint64_t)&unk_23E13A350);
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FCE0);
  }
  return result;
}

unint64_t sub_23DFD3FD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FD00;
  if (!qword_256D1FD00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FD08);
    v2[0] = MEMORY[0x24BDF5560];
    v2[1] = MEMORY[0x24BDF5560];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FD00);
  }
  return result;
}

unint64_t sub_23DFD402C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FD10;
  if (!qword_256D1FD10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FD18);
    v2[0] = sub_23DFD36B4();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FD10);
  }
  return result;
}

unint64_t sub_23DFD4098()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FD20;
  if (!qword_256D1FD20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FD28);
    v2[0] = sub_23DFD4104();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FD20);
  }
  return result;
}

unint64_t sub_23DFD4104()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FD30;
  if (!qword_256D1FD30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FD38);
    v2[0] = sub_23DFD36B4();
    v2[1] = sub_23DFC5014();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FD30);
  }
  return result;
}

uint64_t sub_23DFD4178()
{
  return swift_deallocObject();
}

_BYTE *sub_23DFD4188(_BYTE *a1)
{
  uint64_t v1;

  return sub_23E00E188(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_23DFD4190()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E134C80();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

unint64_t sub_23DFD41F0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E134C80() - 8) + 80);
  return sub_23E0359D0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_23DFD4254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, char a17)
{
  uint64_t result;

  if ((a17 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_23DF98590(a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1);
  }
  return result;
}

uint64_t sub_23DFD4328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16)
{
  uint64_t result;

  if ((a16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return sub_23DF985F0(a7, a8, a9, a10, a11, a12, a13, a14, a15, (unsigned __int16)(a15 & 0x1FF) >> 8);
  }
  return result;
}

uint64_t sub_23DFD43F8(uint64_t result)
{
  *(_BYTE *)(result + 121) = 1;
  return result;
}

uint64_t sub_23DFD4404(uint64_t result)
{
  *(_BYTE *)(result + 120) = 0;
  return result;
}

uint64_t sub_23DFD440C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23DFD443C(uint64_t result)
{
  *(_BYTE *)(result + 121) = 0;
  return result;
}

uint64_t sub_23DFD4444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t result;

  if ((a16 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23DF89F20(a8, a9 & 1);
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23DFD44D0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_23DFD4534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t result;

  if ((a16 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23DF8A078(a8, a9 & 1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v74)(uint64_t, uint64_t);
  void (*v75)(uint64_t, uint64_t);
  void (*v76)(uint64_t, uint64_t);
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v1 = type metadata accessor for DisplayControlGroup(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 88) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ControlModuleView();
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v0 + v4;
  type metadata accessor for Device.ControlGroup.LayoutType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2)
      goto LABEL_24;
    v83 = v5;
    v10 = sub_23E134C80();
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v11(v0 + v4, v10);
    v12 = type metadata accessor for Device.Control(0);
    v13 = v8 + *(int *)(v12 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v14 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v80 = type metadata accessor for IconDescriptor();
        v15 = v14 + *(int *)(v80 + 20);
        v16 = sub_23E135910();
        v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
        v76(v15, v16);
        v17 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v76(v17 + *(int *)(v80 + 20), v16);
        v18 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v19 = v14 + *(int *)(v18 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        v20 = swift_getEnumCaseMultiPayload();
        if (v20 == 1)
          goto LABEL_12;
        if (!v20)
        {
          v21 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v22 = sub_23E134C20();
          goto LABEL_11;
        }
        break;
      case 1u:
        v23 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v13, 1, v23))
        {
          v24 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v13, v24);
        }
        v25 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v81 = type metadata accessor for IconDescriptor();
        v26 = v25 + *(int *)(v81 + 20);
        v27 = sub_23E135910();
        v77 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
        v77(v26, v27);
        v28 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v77(v28 + *(int *)(v81 + 20), v27);
        v29 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v21 = v25 + *(int *)(v29 + 28);
        v22 = sub_23E135520();
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        break;
      case 2u:
      case 4u:
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v30 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v13, 1, v30))
        {
          v31 = sub_23E135328();
          v32 = *(_QWORD *)(v31 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v13, 1, v31))
            (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v31);
        }
        break;
      case 6u:
        v11(v13, v10);
        break;
      default:
        break;
    }
    v33 = v8 + *(int *)(v12 + 24);
    type metadata accessor for Device.Control.Source(0);
    v5 = v83;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v34 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v35 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v36 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        break;
    }
    v4 = (v3 + 88) & ~v3;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  type metadata accessor for Device.ControlGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v8 + *(int *)(v1 + 24);
  type metadata accessor for DisplayControlGroup.LayoutType(0);
  v38 = swift_getEnumCaseMultiPayload();
  if (v38 < 2)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if (v38 == 2)
  {
    v84 = v5;
    v85 = v4;
    v39 = sub_23E134C80();
    v40 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
    v40(v37, v39);
    v82 = type metadata accessor for Device.Control(0);
    v41 = v37 + *(int *)(v82 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v42 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v78 = type metadata accessor for IconDescriptor();
        v43 = v42 + *(int *)(v78 + 20);
        v44 = sub_23E135910();
        v74 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8);
        v74(v43, v44);
        v45 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v74(v45 + *(int *)(v78 + 20), v44);
        v46 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v47 = v42 + *(int *)(v46 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        v48 = swift_getEnumCaseMultiPayload();
        if (v48 == 1)
          goto LABEL_35;
        if (!v48)
        {
          v49 = v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v50 = sub_23E134C20();
          goto LABEL_34;
        }
        break;
      case 1u:
        v51 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v41, 1, v51))
        {
          v52 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v41, v52);
        }
        v53 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v79 = type metadata accessor for IconDescriptor();
        v54 = v53 + *(int *)(v79 + 20);
        v55 = sub_23E135910();
        v75 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
        v75(v54, v55);
        v56 = v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v75(v56 + *(int *)(v79 + 20), v55);
        v57 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v49 = v53 + *(int *)(v57 + 28);
        v50 = sub_23E135520();
LABEL_34:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
        break;
      case 2u:
      case 4u:
LABEL_35:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v58 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v41, 1, v58))
        {
          v59 = sub_23E135328();
          v60 = *(_QWORD *)(v59 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v41, 1, v59))
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v41, v59);
        }
        break;
      case 6u:
        v40(v41, v39);
        break;
      default:
        break;
    }
    v61 = v37 + *(int *)(v82 + 24);
    type metadata accessor for Device.Control.Source(0);
    v4 = v85;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v62 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v63 = v61 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v64 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        break;
    }
    v5 = v84;
    goto LABEL_46;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  v65 = v0 + ((v4 + v5 + v7) & ~v7);
  v66 = v65 + *(int *)(v6 + 20);
  v67 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
  v68 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v69 = v66 + *(int *)(v68 + 24);
  swift_bridgeObjectRelease();
  v70 = v69 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v71 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = v65 + *(int *)(v6 + 36);
  sub_23DF985F0(*(_QWORD *)v72, *(_QWORD *)(v72 + 8), *(_QWORD *)(v72 + 16), *(_QWORD *)(v72 + 24), *(_QWORD *)(v72 + 32), *(_QWORD *)(v72 + 40), *(_QWORD *)(v72 + 48), *(_QWORD *)(v72 + 56), *(_BYTE *)(v72 + 64), *(_BYTE *)(v72 + 65));
  return swift_deallocObject();
}

uint64_t sub_23DFD5020(uint64_t a1)
{
  return sub_23DFD502C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD))sub_23DFCE004);
}

uint64_t sub_23DFD502C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(type metadata accessor for DisplayControlGroup(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for ControlModuleView() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return a2(a1, v2 + 16, v2 + v5, v2 + v8, *(unsigned __int8 *)(v2 + v8 + *(_QWORD *)(v7 + 64)));
}

uint64_t sub_23DFD50C4()
{
  return swift_deallocObject();
}

uint64_t sub_23DFD50D4()
{
  return swift_deallocObject();
}

uint64_t sub_23DFD50E4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

uint64_t initializeWithCopy for ControlModuleView.ControlGroupLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ControlModuleView.ControlGroupLabel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ControlModuleView.ControlGroupLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlModuleView.ControlGroupLabel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlModuleView.ControlGroupLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 89) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlModuleView.ControlGroupLabel()
{
  return &type metadata for ControlModuleView.ControlGroupLabel;
}

unint64_t sub_23DFD5378()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FE80;
  if (!qword_256D1FE80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FE88);
    v2[0] = sub_23DF89B88(&qword_256D1FA70, &qword_256D1F9C0, MEMORY[0x24BDF19A8]);
    v2[1] = sub_23DFD2D90();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FE80);
  }
  return result;
}

uint64_t sub_23DFD53FC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23DFD540C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23DFD5434()
{
  return sub_23DFA5DBC(&qword_256D1FE98, &qword_256D1FE90, (uint64_t (*)(void))sub_23DFD5468, MEMORY[0x24BDF5578]);
}

unint64_t sub_23DFD5468()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FEA0;
  if (!qword_256D1FEA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FEA8);
    v2[0] = sub_23DFD54D4();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FEA0);
  }
  return result;
}

unint64_t sub_23DFD54D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D1FEB0;
  if (!qword_256D1FEB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FEB8);
    v2[0] = sub_23DFD5540();
    v2[1] = sub_23DF99D24();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D1FEB0);
  }
  return result;
}

unint64_t sub_23DFD5540()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D1FEC0;
  if (!qword_256D1FEC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FEC8);
    v2 = sub_23DF89B88(&qword_256D1FED0, &qword_256D1FED8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D1FEC0);
  }
  return result;
}

BOOL static ControlViewType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ControlViewType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23DFD5614 + 4 * byte_23E13A950[*v0]))(0x697753656772614CLL, 0xEB00000000686374);
}

unint64_t sub_23DFD5614()
{
  return 0xD000000000000011;
}

uint64_t sub_23DFD5694()
{
  return 0x6D6552616964654DLL;
}

uint64_t sub_23DFD56B4()
{
  return 0x74736F6D72656854;
}

uint64_t sub_23DFD56D0()
{
  return 0x6E41736D72616C41;
}

uint64_t sub_23DFD56F4()
{
  return 0x6C61636974726556;
}

uint64_t sub_23DFD5718()
{
  return 0x6369506C65656857;
}

uint64_t ControlViewType.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t ControlViewType.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t Device.Control.viewType(with:)@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEE0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  result = type metadata accessor for Device.Control(0);
  v10 = *(unsigned __int8 *)(v2 + *(int *)(result + 40));
  if (v10 == 12)
  {
    v11 = v2 + *(int *)(result + 20);
    v12 = *(int *)(v5 + 48);
    sub_23DFD5994(v11, (uint64_t)v7);
    v7[v12] = v8;
    type metadata accessor for Device.Control.Kind(0);
    v13 = (char *)&loc_23DFD5864 + 4 * byte_23E13A95C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *a2 = v10;
  return result;
}

void sub_23DFD5930()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = 9;
  sub_23DF73E54(v1, type metadata accessor for Device.Control.Kind);
  JUMPOUT(0x23DFD5918);
}

void sub_23DFD5968(uint64_t a1)
{
  _BYTE *v1;

  *v1 = 2;
  sub_23DF73E54(a1, (uint64_t (*)(_QWORD))type metadata accessor for Device.Control.BinaryViewConfig);
  JUMPOUT(0x23DFD5918);
}

void sub_23DFD5974(uint64_t a1)
{
  _BYTE *v1;

  *v1 = 1;
  sub_23DF73E54(a1, (uint64_t (*)(_QWORD))type metadata accessor for Device.Control.BinaryViewConfig);
  JUMPOUT(0x23DFD5918);
}

uint64_t sub_23DFD5994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device.Control.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23DFD59DC()
{
  unint64_t result;

  result = qword_256D1FEE8;
  if (!qword_256D1FEE8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for ControlViewType, &type metadata for ControlViewType);
    atomic_store(result, (unint64_t *)&qword_256D1FEE8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ControlViewType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23DFD5B00 + 4 * byte_23E13A96C[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23DFD5B34 + 4 * byte_23E13A967[v4]))();
}

uint64_t sub_23DFD5B34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DFD5B3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DFD5B44);
  return result;
}

uint64_t sub_23DFD5B50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DFD5B58);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23DFD5B5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DFD5B64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlViewType()
{
  return &type metadata for ControlViewType;
}

uint64_t sub_23DFD5B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  int *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  __int128 v18;
  uint64_t v19;

  *a5 = a1;
  v11 = (int *)type metadata accessor for SliderControlView();
  sub_23DF89340(a2, (uint64_t)a5 + v11[5], &qword_256D1EC98);
  *(double *)((char *)a5 + v11[6]) = a6;
  *((_BYTE *)a5 + v11[7]) = a3;
  sub_23DF89384(a4, (uint64_t)a5 + v11[8], type metadata accessor for Device.Control.IncrementalConfig);
  v12 = (char *)a5 + v11[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE48);
  sub_23E136D8C();
  *(_QWORD *)v12 = v18;
  v12[8] = BYTE8(v18);
  *((_QWORD *)v12 + 2) = v19;
  v13 = (char *)a5 + v11[10];
  sub_23E136D8C();
  *(_QWORD *)v13 = v18;
  v13[8] = BYTE8(v18);
  *((_QWORD *)v13 + 2) = v19;
  v14 = (char *)a5 + v11[11];
  sub_23E136D8C();
  *v14 = v18;
  *((_QWORD *)v14 + 1) = *((_QWORD *)&v18 + 1);
  v15 = v11[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEF0);
  sub_23E136D8C();
  *(_OWORD *)((char *)a5 + v15) = v18;
  v16 = (char *)a5 + v11[13];
  result = swift_getKeyPath();
  *(_QWORD *)v16 = result;
  v16[8] = 0;
  return result;
}

uint64_t type metadata accessor for SliderControlView()
{
  uint64_t result;

  result = qword_256D1FF50;
  if (!qword_256D1FF50)
    return swift_getSingletonMetadata();
  return result;
}

void (*sub_23DFD5D54(void **a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8) - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  a1[2] = (void *)v4;
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  a1[3] = v5;
  v6 = type metadata accessor for SliderControlView();
  sub_23DF89C1C(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_256D1EC98);
  MEMORY[0x24264B734](v4);
  return sub_23DFD5E14;
}

void sub_23DFD5E14(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    sub_23DF89C1C(*(_QWORD *)(a1 + 8), (uint64_t)v3, &qword_256D1D5D8);
    sub_23E136E70();
    sub_23DF89C7C((uint64_t)v2, &qword_256D1EC98);
    v5 = (uint64_t)v4;
    v6 = &qword_256D1D5D8;
  }
  else
  {
    sub_23E136E70();
    v6 = &qword_256D1EC98;
    v5 = (uint64_t)v2;
  }
  sub_23DF89C7C(v5, v6);
  free(v2);
  free(v4);
  free(v3);
}

uint64_t sub_23DFD5EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;

  v0 = sub_23E13534C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.IncrementalState(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SliderControlView();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24264B734](v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    *v10 = 0;
    v12 = *MEMORY[0x24BE4DD08];
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v10, *MEMORY[0x24BE4DD08], v0);
    *((_BYTE *)v10 + *(int *)(v7 + 20)) = 0;
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89384((uint64_t)v6, (uint64_t)v10, type metadata accessor for Device.Control.IncrementalState);
    v12 = *MEMORY[0x24BE4DD08];
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v1 + 32))(v3, v10, v0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if ((_DWORD)result != v12)
  {
    if ((_DWORD)result == *MEMORY[0x24BE4DD00])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v1 + 96))(v3, v0, 0.0);
    }
    else
    {
      result = sub_23E137608();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23DFD609C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v0 = sub_23E13534C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.IncrementalState(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SliderControlView();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24264B734](v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    *v10 = 0;
    v12 = *MEMORY[0x24BE4DD08];
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v10, *MEMORY[0x24BE4DD08], v0);
    *((_BYTE *)v10 + *(int *)(v7 + 20)) = 0;
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89384((uint64_t)v6, (uint64_t)v10, type metadata accessor for Device.Control.IncrementalState);
    v12 = *MEMORY[0x24BE4DD08];
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v1 + 32))(v3, v10, v0);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v13 == v12 || v13 == *MEMORY[0x24BE4DD00])
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 96))(v3, v0);
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23DFD6294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  double v37;
  double v38;
  uint64_t v39;
  int *v40;
  double v41;
  double v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (**v71)();
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, char *, uint64_t);
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (**v108)(uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t KeyPath;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  _QWORD *v133;
  unint64_t v134;
  char v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v153[2];
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  int v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  char *v172;
  uint64_t v173;
  _QWORD *v174;
  void (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  double *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  __int16 v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  char v219;
  uint64_t v220;
  char v221;
  char v222;
  uint64_t v223;

  v192 = a3;
  v189 = sub_23E13660C();
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v187 = (char *)v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFB0);
  MEMORY[0x24BDAC7A8](v178);
  v183 = (uint64_t)v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFB8);
  MEMORY[0x24BDAC7A8](v180);
  v179 = (uint64_t)v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_23E135EA4();
  v175 = *(void (**)(char *, uint64_t, uint64_t))(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  v201 = v8;
  v202 = (char *)v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_23E135520();
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v167 = (char *)v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for ValueThrottleModifier.Config(0);
  MEMORY[0x24BDAC7A8](v166);
  v171 = (_QWORD *)((char *)v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = type metadata accessor for ValueThrottleModifier(0);
  MEMORY[0x24BDAC7A8](v173);
  v174 = (_QWORD *)((char *)v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v12 = MEMORY[0x24BDAC7A8](v161);
  v162 = (char *)v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v160 = (char *)v153 - v14;
  v15 = (int *)type metadata accessor for SliderControlView();
  v196 = *((_QWORD *)v15 - 1);
  v16 = *(_QWORD *)(v196 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v206 = (uint64_t)v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFC0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (_QWORD *)((char *)v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFC8);
  MEMORY[0x24BDAC7A8](v194);
  v158 = (uint64_t)v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFD0);
  v164 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v195 = (char *)v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFD8);
  MEMORY[0x24BDAC7A8](v163);
  v177 = (char *)v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFE0);
  v23 = MEMORY[0x24BDAC7A8](v182);
  v172 = (char *)v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v176 = (uint64_t)v153 - v25;
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFE8);
  v184 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v27 = (char *)v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFF0);
  v28 = MEMORY[0x24BDAC7A8](v200);
  v186 = (char *)v153 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v199 = (char *)v153 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v190 = (char *)v153 - v32;
  v198 = sub_23E13534C();
  v197 = *(_QWORD *)(v198 - 8);
  v33 = MEMORY[0x24BDAC7A8](v198);
  v157 = (char *)v153 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v204 = (double *)((char *)v153 - v35);
  v36 = sub_23DFD74C0();
  sub_23DFD5EB8();
  v38 = v37;
  v39 = a2 + v15[8];
  v40 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  v41 = *(double *)(v39 + v40[9]) - *(double *)(v39 + v40[8]);
  v42 = v38 / v41;
  v207 = a2;
  sub_23DFD609C();
  v43 = v40[7];
  v168 = (uint64_t *)v39;
  v45 = v44 / v41;
  v156 = v39 + v43;
  sub_23E135514();
  sub_23E136FD8();
  LOBYTE(v40) = sub_23E136FC0();
  sub_23E135E80();
  v47 = v46;
  v181 = v27;
  if ((v40 & 1) != 0)
  {
    v48 = v45 * v46;
  }
  else
  {
    sub_23E135E80();
    v48 = v47 - v45 * v49;
  }
  v50 = (uint64_t *)(v207 + v15[9]);
  v51 = v207;
  v52 = *v50;
  v53 = *((_BYTE *)v50 + 8);
  v54 = v50[2];
  v216 = v52;
  v217 = v53;
  v218 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
  sub_23E136D98();
  if ((_BYTE)v211)
    v55 = v48;
  else
    v55 = *(double *)&v210;
  sub_23E135E80();
  v57 = v42 * v56;
  v58 = v51 + v15[10];
  v59 = *(_QWORD *)v58;
  v60 = *(_BYTE *)(v58 + 8);
  v61 = *(_QWORD *)(v58 + 16);
  v216 = v59;
  v217 = v60;
  v218 = v61;
  sub_23E136D98();
  if ((_BYTE)v211)
    v62 = v57;
  else
    v62 = *(double *)&v210;
  sub_23DFD76B4(v204, v48, v57);
  *v19 = sub_23E136FD8();
  v19[1] = v63;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FFF8);
  sub_23DFD78C8(v51, a1, v36 & 1, (uint64_t)v19 + *(int *)(v64 + 44), v62);
  v159 = v36;
  v65 = v15;
  v66 = v206;
  sub_23DF73E10(v51, v206, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v67 = *(unsigned __int8 *)(v196 + 80);
  v68 = (v67 + 16) & ~v67;
  v205 = a1;
  v191 = v16;
  v196 = v67;
  v154 = v68 + v16;
  v155 = v67 | 7;
  v69 = swift_allocObject();
  v193 = v68;
  sub_23DF89384(v66, v69 + v68, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v70 = v158;
  sub_23DF89C1C((uint64_t)v19, v158, &qword_256D1FFC0);
  v71 = (uint64_t (**)())(v70 + *(int *)(v194 + 36));
  *v71 = sub_23DFDC5D0;
  v71[1] = (uint64_t (*)())v69;
  v71[2] = 0;
  v71[3] = 0;
  sub_23DF89C7C((uint64_t)v19, &qword_256D1FFC0);
  v72 = v207;
  v153[1] = v207 + v65[5];
  v153[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  v73 = (uint64_t)v160;
  MEMORY[0x24264B734]();
  sub_23DF73E10(v72, v66, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v74 = swift_allocObject();
  sub_23DF89384(v66, v74 + v68, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  sub_23DFDC818();
  sub_23DFDC89C();
  sub_23E136B88();
  swift_release();
  sub_23DF89C7C(v73, &qword_256D1D5D8);
  sub_23DF89C7C(v70, &qword_256D1FFC8);
  v75 = v205;
  sub_23E135E80();
  v77 = v76;
  v78 = v197;
  v79 = v157;
  v80 = v198;
  (*(void (**)(char *, double *, uint64_t))(v197 + 16))(v157, v204, v198);
  v81 = v169;
  v82 = v167;
  v83 = v170;
  (*(void (**)(char *, uint64_t, uint64_t))(v169 + 16))(v167, v156, v170);
  v84 = (uint64_t)v162;
  MEMORY[0x24264B734](v153[0]);
  v85 = type metadata accessor for Device.Control.IncrementalState(0);
  v86 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v84, 1, v85) != 1;
  sub_23DF89C7C(v84, &qword_256D1D5D8);
  v87 = (uint64_t)v171;
  *v171 = 0;
  *(_QWORD *)(v87 + 8) = v77;
  v88 = v166;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v87 + *(int *)(v166 + 24), v79, v80);
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v87 + *(int *)(v88 + 28), v82, v83);
  *(_BYTE *)(v87 + *(int *)(v88 + 32)) = v86;
  v89 = v206;
  sub_23DF73E10(v207, v206, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v90 = v175;
  v91 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v175 + 2);
  v92 = v202;
  v93 = v75;
  v94 = v203;
  v91(v202, v93, v203);
  v95 = *((unsigned __int8 *)v90 + 80);
  v96 = (v154 + v95) & ~v95;
  v169 = v96 + v201;
  v194 = v95;
  v170 = v155 | v95;
  v97 = swift_allocObject();
  sub_23DF89384(v89, v97 + v193, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v98 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v90 + 4);
  v98(v97 + v96, v92, v94);
  *(double *)&v210 = 0.0;
  LOBYTE(v211) = 1;
  v212 = 0;
  v213 = 1;
  v214 = 0;
  v215 = 513;
  sub_23E136D8C();
  v99 = v217;
  v100 = v218;
  v101 = v219;
  v102 = v220;
  v103 = v221;
  v104 = v222;
  v105 = v223;
  v106 = (uint64_t)v174;
  *v174 = v216;
  *(_BYTE *)(v106 + 8) = v99;
  *(_QWORD *)(v106 + 16) = v100;
  *(_BYTE *)(v106 + 24) = v101;
  *(_QWORD *)(v106 + 32) = v102;
  *(_BYTE *)(v106 + 40) = v103;
  *(_BYTE *)(v106 + 41) = v104;
  *(_QWORD *)(v106 + 48) = v105;
  v107 = v173;
  sub_23DF89384(v87, v106 + *(int *)(v173 + 20), type metadata accessor for ValueThrottleModifier.Config);
  v108 = (uint64_t (**)(uint64_t))(v106 + *(int *)(v107 + 24));
  *v108 = sub_23DFDCB48;
  v108[1] = (uint64_t (*)(uint64_t))v97;
  v109 = v164;
  v110 = (uint64_t)v177;
  v111 = v195;
  v112 = v165;
  (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v177, v195, v165);
  sub_23DF89384(v106, v110 + *(int *)(v163 + 36), type metadata accessor for ValueThrottleModifier);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v111, v112);
  v113 = v206;
  sub_23DF73E10(v207, v206, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v175 = v91;
  v91(v92, v205, v94);
  v114 = (v169 + 7) & 0xFFFFFFFFFFFFFFF8;
  v115 = swift_allocObject();
  sub_23DF89384(v113, v115 + v193, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v195 = (char *)v98;
  v98(v115 + v96, v92, v94);
  *(double *)(v115 + v114) = v45;
  *(double *)(v115 + ((v114 + 15) & 0xFFFFFFFFFFFFFFF8)) = v42;
  KeyPath = swift_getKeyPath();
  v117 = v179;
  sub_23DF89C1C(v110, v179, &qword_256D1FFD8);
  v118 = v117 + *(int *)(v180 + 36);
  *(_BYTE *)v118 = 1;
  *(_QWORD *)(v118 + 8) = sub_23DFDCDF4;
  *(_QWORD *)(v118 + 16) = v115;
  *(_QWORD *)(v118 + 24) = KeyPath;
  *(_BYTE *)(v118 + 32) = 0;
  sub_23DF89C1C(v117, v183, &qword_256D1FFB8);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20020);
  sub_23DFDCE8C();
  sub_23DFDCFC8();
  v119 = (uint64_t)v172;
  sub_23E136480();
  sub_23DF89C7C(v117, &qword_256D1FFB8);
  v120 = v176;
  sub_23DF89340(v119, v176, &qword_256D1FFE0);
  swift_release();
  sub_23DF89C7C(v110, &qword_256D1FFD8);
  v121 = v187;
  sub_23E1365E8();
  v122 = sub_23DFDD094();
  v123 = v181;
  v124 = v182;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v188 + 8))(v121, v189);
  sub_23DF89C7C(v120, &qword_256D1FFE0);
  v125 = v168;
  if ((v159 & 1) == 0)
    v125 = (uint64_t *)((char *)v125 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28));
  v127 = *v125;
  v126 = v125[1];
  swift_bridgeObjectRetain();
  if (qword_256D1D460 != -1)
    swift_once();
  v128 = ~v196;
  v129 = ~v194;
  swift_beginAccess();
  v130 = *((_QWORD *)off_256D25FB8 + 2);
  v193 = v129;
  if (v130)
  {
    swift_bridgeObjectRetain();
    sub_23DF84E3C(v127, v126);
    v132 = v131;
    swift_bridgeObjectRelease();
    if ((v132 & 1) != 0)
    {
      swift_beginAccess();
      v133 = off_256D25FB8;
      if (*((_QWORD *)off_256D25FB8 + 2))
      {
        swift_bridgeObjectRetain();
        v134 = sub_23DF84E3C(v127, v126);
        if ((v135 & 1) != 0)
        {
          v136 = (uint64_t *)(v133[7] + 16 * v134);
          v127 = *v136;
          v137 = v136[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          v126 = v137;
          goto LABEL_21;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
  }
LABEL_21:
  v210 = v127;
  v211 = v126;
  v208 = v124;
  v209 = v122;
  swift_getOpaqueTypeConformance2();
  sub_23DF8DC18();
  v138 = (uint64_t)v186;
  v139 = v185;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v184 + 8))(v123, v139);
  v140 = v205;
  sub_23E135E80();
  *(double *)&v210 = COERCE_DOUBLE(sub_23E1371AC());
  v211 = v141;
  sub_23E135FB8();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v138, &qword_256D1FFF0);
  v142 = v202;
  v143 = v203;
  v175(v202, v140, v203);
  v144 = v206;
  sub_23DF73E10(v207, v206, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v145 = (v194 + 16) & v193;
  v146 = (v201 + v145 + 7) & 0xFFFFFFFFFFFFFFF8;
  v147 = (v146 + 15) & 0xFFFFFFFFFFFFFFF8;
  v148 = (v196 + v147 + 8) & v128;
  v149 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v195)(v149 + v145, v142, v143);
  *(double *)(v149 + v146) = v55;
  *(double *)(v149 + v147) = v62;
  sub_23DF89384(v144, v149 + v148, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v150 = (uint64_t)v190;
  v151 = (uint64_t)v199;
  sub_23E135FE8();
  swift_release();
  sub_23DF89C7C(v151, &qword_256D1FFF0);
  (*(void (**)(double *, uint64_t))(v197 + 8))(v204, v198);
  return sub_23DF89340(v150, v192, &qword_256D1FFF0);
}

uint64_t sub_23DFD74C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v0 = sub_23E13534C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (double *)((char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.IncrementalState(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SliderControlView();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24264B734](v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    *v10 = 0;
    v12 = *MEMORY[0x24BE4DD08];
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v10, *MEMORY[0x24BE4DD08], v0);
    *((_BYTE *)v10 + *(int *)(v7 + 20)) = 0;
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89384((uint64_t)v6, (uint64_t)v10, type metadata accessor for Device.Control.IncrementalState);
    v12 = *MEMORY[0x24BE4DD08];
  }
  (*(void (**)(double *, _QWORD *, uint64_t))(v1 + 32))(v3, v10, v0);
  v13 = (*(uint64_t (**)(double *, uint64_t))(v1 + 88))(v3, v0);
  if (v13 == v12)
  {
    (*(void (**)(double *, uint64_t))(v1 + 96))(v3, v0);
    return *v3 > 0.0;
  }
  else if (v13 == *MEMORY[0x24BE4DD00])
  {
    return 1;
  }
  else
  {
    result = sub_23E137608();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DFD76B4@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t result;
  uint64_t v22;

  v6 = sub_23E13534C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Device.Control.IncrementalState(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SliderControlView();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24264B734](v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    *v16 = 0;
    v18 = *MEMORY[0x24BE4DD08];
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104))(v16, v18, v6);
    *((_BYTE *)v16 + *(int *)(v13 + 20)) = 0;
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89384((uint64_t)v12, (uint64_t)v16, type metadata accessor for Device.Control.IncrementalState);
    v18 = *MEMORY[0x24BE4DD08];
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v9, v16, v6);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  v20 = a1;
  if ((_DWORD)v19 == (_DWORD)v18)
    goto LABEL_7;
  if ((_DWORD)v19 == *MEMORY[0x24BE4DD00])
  {
    *a1 = a3;
    v20 = a1 + 1;
    v18 = v19;
LABEL_7:
    *v20 = a2;
    return (*(uint64_t (**)(double *, uint64_t, uint64_t))(v7 + 104))(a1, v18, v6);
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23DFD78C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>, double a5@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  double v70;
  double v71;
  void (*v72)(char *, char *, uint64_t);
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  char v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  char *v91;
  uint64_t v92;
  char v93;
  char *v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t KeyPath;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  char v198;
  char v199;
  uint64_t v200;

  v197 = a3;
  v188 = a4;
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20068);
  MEMORY[0x24BDAC7A8](v172);
  v175 = (uint64_t *)((char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB88);
  MEMORY[0x24BDAC7A8](v9);
  v174 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20070);
  MEMORY[0x24BDAC7A8](v170);
  v178 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20078);
  MEMORY[0x24BDAC7A8](v176);
  v180 = (uint64_t)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20080);
  MEMORY[0x24BDAC7A8](v177);
  v181 = (uint64_t)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20088);
  MEMORY[0x24BDAC7A8](v179);
  v183 = (uint64_t)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20090);
  MEMORY[0x24BDAC7A8](v185);
  v184 = (uint64_t)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20098);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v187 = (uint64_t)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v182 = (char *)&v153 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v186 = (uint64_t)&v153 - v21;
  v165 = sub_23E136BD0();
  v162 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v164 = (char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_23E135520();
  v158 = *(_QWORD *)(v192 - 8);
  MEMORY[0x24BDAC7A8](v192);
  v191 = (char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_23E136258();
  v159 = *(_QWORD *)(v194 - 8);
  MEMORY[0x24BDAC7A8](v194);
  v193 = (char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_23E135BD4();
  v157 = *(_QWORD *)(v190 - 8);
  v25 = MEMORY[0x24BDAC7A8](v190);
  v166 = (char *)&v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v167 = (char *)&v153 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v153 = (char *)&v153 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v154 = (char *)&v153 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v156 = (char *)&v153 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v155 = (char *)&v153 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D200A0);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (uint64_t *)((char *)&v153 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D200A8);
  v39 = MEMORY[0x24BDAC7A8](v195);
  v173 = (uint64_t)&v153 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v153 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v153 - v44;
  v46 = type metadata accessor for SliderControlView();
  v47 = a1 + *(int *)(v46 + 32);
  v48 = type metadata accessor for Device.Control.IncrementalConfig(0);
  v189 = v47 + *(int *)(v48 + 28);
  *v38 = sub_23E135514();
  v38[1] = v49;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D200B0);
  sub_23DFD889C(a1, a2, (uint64_t)v38 + *(int *)(v50 + 44), a5);
  v168 = v46;
  v51 = *(int *)(v46 + 24);
  v169 = (_QWORD *)a1;
  v52 = *(_QWORD *)(a1 + v51);
  v53 = type metadata accessor for AnimationModel();
  v54 = sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v163 = v53;
  v161 = v54;
  v55 = sub_23E1360CC();
  v57 = v56;
  LODWORD(v196) = 1;
  v198 = 1;
  sub_23E136D8C();
  LOBYTE(v46) = v199;
  v58 = v200;
  sub_23DF89C1C((uint64_t)v38, (uint64_t)v43, &qword_256D200A0);
  v59 = &v43[*(int *)(v195 + 36)];
  *(_QWORD *)v59 = v55;
  *((_QWORD *)v59 + 1) = v57;
  *((_QWORD *)v59 + 2) = v52;
  v59[24] = v46;
  *((_QWORD *)v59 + 4) = v58;
  v60 = v155;
  sub_23DF89C7C((uint64_t)v38, &qword_256D200A0);
  v171 = v45;
  v61 = (uint64_t)v45;
  v62 = v156;
  sub_23DF89340((uint64_t)v43, v61, &qword_256D200A8);
  v160 = v48;
  v195 = v47;
  swift_retain();
  v63 = v193;
  sub_23E13624C();
  sub_23E136C78();
  sub_23E135BC8();
  v64 = v157;
  swift_release();
  v159 = *(_QWORD *)(v159 + 8);
  ((void (*)(char *, uint64_t))v159)(v63, v194);
  sub_23E135BB0();
  v66 = v65 * 0.2126;
  sub_23E135BA4();
  v68 = v66 + v67 * 0.7152;
  sub_23E135B98();
  v69 = v190;
  v71 = v68 + v70 * 0.0722;
  v72 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v72(v62, v60, v190);
  if (v71 <= 0.95)
    LODWORD(v196) = sub_23E0AB1B8();
  v73 = *(void (**)(char *, uint64_t))(v64 + 8);
  v73(v62, v69);
  v73(v60, v69);
  v74 = sub_23E136C48();
  v75 = *MEMORY[0x24BE4DF20];
  v76 = v158;
  v77 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 104);
  v79 = v191;
  v78 = v192;
  v77(v191, v75, v192);
  v80 = sub_23E135508();
  v81 = *(void (**)(char *, uint64_t))(v76 + 8);
  v81(v79, v78);
  if ((v80 & 1) != 0)
    swift_retain();
  else
    sub_23E136C48();
  swift_release();
  if ((v196 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v162 + 104))(v164, *MEMORY[0x24BDF3C28], v165);
    v82 = sub_23E136C9C();
    swift_retain();
    v83 = v193;
    sub_23E13624C();
    sub_23E136C78();
    v84 = v154;
    sub_23E135BC8();
    swift_release();
    ((void (*)(char *, uint64_t))v159)(v83, v194);
    sub_23E135BB0();
    v86 = v85 * 0.2126;
    sub_23E135BA4();
    v88 = v86 + v87 * 0.7152;
    sub_23E135B98();
    v90 = v88 + v89 * 0.0722;
    v91 = v153;
    v92 = v190;
    v72(v153, v84, v190);
    if (v90 <= 0.95)
    {
      v93 = sub_23E0AB1B8();
      v94 = v91;
      v95 = v93;
      v73(v94, v92);
      v73(v84, v92);
      if ((v95 & 1) == 0)
        v82 = v74;
    }
    else
    {
      v73(v91, v92);
      v73(v84, v92);
    }
    swift_release();
    v74 = v82;
  }
  sub_23E136C48();
  v96 = v191;
  v97 = v75;
  v98 = v192;
  v77(v191, v97, v192);
  v99 = sub_23E135508();
  v81(v96, v98);
  if ((v99 & 1) != 0)
  {
    v100 = *(_QWORD *)(v195 + *(int *)(v160 + 20));
    swift_retain();
  }
  else
  {
    v100 = sub_23E136C48();
  }
  v101 = v167;
  v102 = v166;
  swift_release();
  if ((v196 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v162 + 104))(v164, *MEMORY[0x24BDF3C28], v165);
    v103 = sub_23E136C9C();
    swift_retain();
    v104 = v193;
    sub_23E13624C();
    sub_23E136C78();
    sub_23E135BC8();
    swift_release();
    ((void (*)(char *, uint64_t))v159)(v104, v194);
    sub_23E135BB0();
    v106 = v105 * 0.2126;
    sub_23E135BA4();
    v108 = v106 + v107 * 0.7152;
    sub_23E135B98();
    v110 = v108 + v109 * 0.0722;
    v111 = v190;
    v72(v102, v101, v190);
    if (v110 <= 0.95)
    {
      v112 = sub_23E0AB1B8();
      v73(v102, v111);
      v73(v101, v111);
      if ((v112 & 1) == 0)
        v103 = v100;
    }
    else
    {
      v73(v102, v111);
      v73(v101, v111);
    }
    swift_release();
    v100 = v103;
  }
  v195 = v100;
  if ((v197 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v194 = v74;
  }
  else
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
    swift_bridgeObjectRetain();
    v194 = v100;
  }
  v196 = v74;
  v113 = sub_23E136CB4();
  v114 = *v169;
  v115 = *((_BYTE *)v169 + *(int *)(v168 + 28));
  v116 = sub_23E1360CC();
  v118 = v117;
  if ((v197 & 1) == 0)
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  type metadata accessor for IconDescriptor();
  v119 = (uint64_t)v174;
  sub_23E1358F8();
  v120 = sub_23E1363B4();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v119, 0, 1, v120);
  KeyPath = swift_getKeyPath();
  v122 = v175;
  sub_23DF89C1C(v119, (uint64_t)v175 + *(int *)(v172 + 28), &qword_256D1DB88);
  *v122 = KeyPath;
  v123 = (uint64_t)v178;
  sub_23DF89C1C((uint64_t)v122, (uint64_t)&v178[*(int *)(v170 + 36)], &qword_256D20068);
  *(_QWORD *)v123 = v113;
  *(_QWORD *)(v123 + 8) = v116;
  *(_QWORD *)(v123 + 16) = v118;
  *(_QWORD *)(v123 + 24) = v114;
  *(_BYTE *)(v123 + 32) = v115;
  swift_retain();
  swift_retain();
  sub_23DF89C7C((uint64_t)v122, &qword_256D20068);
  sub_23DF89C7C(v119, &qword_256D1DB88);
  swift_release();
  swift_release();
  if (qword_256D1D2A0 != -1)
    swift_once();
  v124 = qword_256D34648;
  v125 = swift_getKeyPath();
  v126 = v180;
  sub_23DF89C1C(v123, v180, &qword_256D20070);
  v127 = (uint64_t *)(v126 + *(int *)(v176 + 36));
  *v127 = v125;
  v127[1] = v124;
  swift_retain();
  sub_23DF89C7C(v123, &qword_256D20070);
  v128 = swift_getKeyPath();
  v129 = v181;
  sub_23DF89C1C(v126, v181, &qword_256D20078);
  v130 = (uint64_t *)(v129 + *(int *)(v177 + 36));
  v131 = v194;
  *v130 = v128;
  v130[1] = v131;
  swift_retain();
  sub_23DF89C7C(v126, &qword_256D20078);
  LOBYTE(v128) = sub_23E13672C();
  sub_23E135D00();
  v133 = v132;
  v135 = v134;
  v137 = v136;
  v139 = v138;
  v140 = v183;
  sub_23DF89C1C(v129, v183, &qword_256D20080);
  v141 = v140 + *(int *)(v179 + 36);
  *(_BYTE *)v141 = v128;
  *(_QWORD *)(v141 + 8) = v133;
  *(_QWORD *)(v141 + 16) = v135;
  *(_QWORD *)(v141 + 24) = v137;
  *(_QWORD *)(v141 + 32) = v139;
  *(_BYTE *)(v141 + 40) = 0;
  sub_23DF89C7C(v129, &qword_256D20080);
  if (qword_256D1D2A8 != -1)
    swift_once();
  v142 = qword_256D34650;
  v143 = v184;
  sub_23DF89C1C(v140, v184, &qword_256D20088);
  v144 = v143 + *(int *)(v185 + 36);
  *(_QWORD *)v144 = v142;
  *(_BYTE *)(v144 + 8) = v197 & 1;
  swift_retain();
  sub_23DF89C7C(v140, &qword_256D20088);
  sub_23DFDD4A0();
  v145 = (uint64_t)v182;
  sub_23E1369FC();
  sub_23DF89C7C(v143, &qword_256D20090);
  v146 = v186;
  sub_23DF89340(v145, v186, &qword_256D20098);
  v147 = (uint64_t)v171;
  v148 = v173;
  sub_23DF89C1C((uint64_t)v171, v173, &qword_256D200A8);
  v149 = v187;
  sub_23DF89C1C(v146, v187, &qword_256D20098);
  v150 = v188;
  sub_23DF89C1C(v148, v188, &qword_256D200A8);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20110);
  sub_23DF89C1C(v149, v150 + *(int *)(v151 + 48), &qword_256D20098);
  swift_release();
  swift_release();
  swift_release();
  sub_23DF89C7C(v146, &qword_256D20098);
  sub_23DF89C7C(v147, &qword_256D200A8);
  sub_23DF89C7C(v149, &qword_256D20098);
  return sub_23DF89C7C(v148, &qword_256D200A8);
}

uint64_t sub_23DFD889C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;

  v50 = a2;
  v56 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20118);
  MEMORY[0x24BDAC7A8](v53);
  v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20050);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20120);
  v14 = MEMORY[0x24BDAC7A8](v52);
  v55 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v54 = (uint64_t)&v44 - v19;
  v20 = type metadata accessor for ControlBackgroundView();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v44 - v24;
  *(_QWORD *)v23 = swift_getKeyPath();
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 50) = 0u;
  v26 = (uint64_t *)&v23[*(int *)(v20 + 20)];
  *v26 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v27 = *(int *)(v20 + 24);
  v28 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v23[v27] = MEMORY[0x24264B578](v28);
  v51 = v25;
  sub_23DF89384((uint64_t)v23, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v29 = a1 + *(int *)(type metadata accessor for SliderControlView() + 32);
  v30 = *(_QWORD *)(v29 + *(int *)(type metadata accessor for Device.Control.IncrementalConfig(0) + 24));
  swift_retain();
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  v50 = v57;
  v49 = v58;
  v48 = v59;
  v47 = v60;
  v45 = v62;
  v46 = v61;
  if (qword_256D1D2A8 != -1)
    swift_once();
  v31 = qword_256D34650;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24264B734](v32);
  v33 = type metadata accessor for Device.Control.IncrementalState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v10, 1, v33))
  {
    sub_23DF89C7C((uint64_t)v10, &qword_256D1D5D8);
    v34 = sub_23E13534C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v13, 1, 1, v34);
  }
  else
  {
    v35 = sub_23E13534C();
    v36 = *(_QWORD *)(v35 - 8);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v10, v35);
    sub_23DF89C7C((uint64_t)v10, &qword_256D1D5D8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v13, 0, 1, v35);
  }
  sub_23DF89C1C((uint64_t)v13, (uint64_t)v7 + *(int *)(v53 + 36), &qword_256D20050);
  *v7 = v31;
  sub_23DF89C1C((uint64_t)v7, (uint64_t)&v18[*(int *)(v52 + 36)], &qword_256D20118);
  *(_QWORD *)v18 = v30;
  *((_WORD *)v18 + 4) = 256;
  *((_QWORD *)v18 + 2) = 0;
  *((double *)v18 + 3) = -a4;
  *((_QWORD *)v18 + 4) = v50;
  v18[40] = v49;
  *((_QWORD *)v18 + 6) = v48;
  v18[56] = v47;
  v37 = v45;
  *((_QWORD *)v18 + 8) = v46;
  *((_QWORD *)v18 + 9) = v37;
  swift_retain();
  swift_retain();
  sub_23DF89C7C((uint64_t)v7, &qword_256D20118);
  sub_23DF89C7C((uint64_t)v13, &qword_256D20050);
  swift_release();
  v38 = v54;
  sub_23DF89340((uint64_t)v18, v54, &qword_256D20120);
  v39 = (uint64_t)v51;
  sub_23DF73E10((uint64_t)v51, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v40 = v55;
  sub_23DF89C1C(v38, v55, &qword_256D20120);
  v41 = v56;
  sub_23DF73E10((uint64_t)v23, v56, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20128);
  sub_23DF89C1C(v40, v41 + *(int *)(v42 + 48), &qword_256D20120);
  sub_23DF89C7C(v38, &qword_256D20120);
  sub_23DF73E54(v39, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89C7C(v40, &qword_256D20120);
  return sub_23DF73E54((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
}

uint64_t sub_23DFD8E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v1 = a1 + *(int *)(type metadata accessor for SliderControlView() + 32);
  v2 = v1 + *(int *)(type metadata accessor for Device.Control.IncrementalConfig(0) + 44);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned __int8 *)(v2 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20060);
  swift_allocObject();
  sub_23E0B541C(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20058);
  return sub_23E136DA4();
}

uint64_t sub_23DFD8EB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;
  unsigned int *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int *v30;
  char *v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t result;
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;

  v2 = type metadata accessor for SliderControlView();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v75 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)&v70 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v70 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v70 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v70 - v15;
  v17 = type metadata accessor for Device.Control.IncrementalState(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)((char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v70 - v22);
  v76 = (int *)v2;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24264B734]();
  v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v24 = v72(v16, 1, v17);
  v25 = (unsigned int *)MEMORY[0x24BE4DD08];
  if (v24 == 1)
  {
    *v23 = 0;
    v26 = *v25;
    v27 = sub_23E13534C();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v23, v26, v27);
    *((_BYTE *)v23 + *(int *)(v17 + 20)) = 0;
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89384((uint64_t)v16, (uint64_t)v23, type metadata accessor for Device.Control.IncrementalState);
  }
  v28 = *((_BYTE *)v23 + *(int *)(v17 + 20));
  sub_23DF73E54((uint64_t)v23, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF73E10(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  if ((v28 & 1) != 0)
  {
    sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    sub_23DF73E10(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    v29 = (uint64_t)v75;
    v30 = v76;
LABEL_7:
    sub_23DF73E54((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    goto LABEL_8;
  }
  v30 = v76;
  v31 = &v11[v76[11]];
  v32 = *v31;
  v33 = *((_QWORD *)v31 + 1);
  LOBYTE(v77) = v32;
  v78 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136D98();
  sub_23DF73E54((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v34 = v80;
  sub_23DF73E10(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v29 = (uint64_t)v75;
  if ((v34 & 1) != 0)
    goto LABEL_7;
  v46 = &v9[v30[10]];
  v47 = *(_QWORD *)v46;
  v48 = v46[8];
  v49 = *((_QWORD *)v46 + 2);
  v77 = v47;
  LOBYTE(v78) = v48;
  v79 = v49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
  sub_23E136D98();
  sub_23DF73E54((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  if ((v81 & 1) == 0)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v50 = sub_23E135C10();
    __swift_project_value_buffer(v50, (uint64_t)qword_256D1EAC0);
    v51 = sub_23E135BF8();
    v52 = sub_23E137368();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_23DF71000, v51, v52, "user finger lifted, undo stagging value for lower point", v53, 2u);
      MEMORY[0x24264C628](v53, -1, -1);
    }

    v54 = a1 + v30[10];
    v55 = *(_QWORD *)v54;
    v56 = *(_BYTE *)(v54 + 8);
    v57 = *(_QWORD *)(v54 + 16);
    v77 = v55;
    LOBYTE(v78) = v56;
    v79 = v57;
    v80 = 0;
    v81 = 1;
    sub_23E136DA4();
  }
LABEL_8:
  v35 = (uint64_t)v73;
  MEMORY[0x24264B734](v71);
  v36 = v72((char *)v35, 1, v17);
  v37 = (uint64_t)v74;
  if (v36 == 1)
  {
    *v21 = 0;
    v38 = *MEMORY[0x24BE4DD08];
    v39 = sub_23E13534C();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v21, v38, v39);
    *((_BYTE *)v21 + *(int *)(v17 + 20)) = 0;
    sub_23DF89C7C(v35, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89384(v35, (uint64_t)v21, type metadata accessor for Device.Control.IncrementalState);
  }
  v40 = *((_BYTE *)v21 + *(int *)(v17 + 20));
  sub_23DF73E54((uint64_t)v21, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF73E10(a1, v37, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  if ((v40 & 1) != 0)
  {
    sub_23DF73E54(v37, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    sub_23DF73E10(a1, v29, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    return sub_23DF73E54(v29, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  }
  v41 = v37 + v30[11];
  v42 = *(_BYTE *)v41;
  v43 = *(_QWORD *)(v41 + 8);
  LOBYTE(v77) = v42;
  v78 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136D98();
  sub_23DF73E54(v37, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v44 = v80;
  sub_23DF73E10(a1, v29, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  if ((v44 & 1) != 0)
    return sub_23DF73E54(v29, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v58 = v29 + v30[9];
  v59 = *(_QWORD *)v58;
  v60 = *(_BYTE *)(v58 + 8);
  v61 = *(_QWORD *)(v58 + 16);
  v77 = v59;
  LOBYTE(v78) = v60;
  v79 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
  sub_23E136D98();
  result = sub_23DF73E54(v29, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  if ((v81 & 1) == 0)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v62 = sub_23E135C10();
    __swift_project_value_buffer(v62, (uint64_t)qword_256D1EAC0);
    v63 = sub_23E135BF8();
    v64 = sub_23E137368();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_23DF71000, v63, v64, "user finger lifted, undo stagging value for upper point", v65, 2u);
      MEMORY[0x24264C628](v65, -1, -1);
    }

    v66 = a1 + v30[9];
    v67 = *(_QWORD *)v66;
    v68 = *(_BYTE *)(v66 + 8);
    v69 = *(_QWORD *)(v66 + 16);
    v77 = v67;
    LOBYTE(v78) = v68;
    v79 = v69;
    v80 = 0;
    v81 = 1;
    return sub_23E136DA4();
  }
  return result;
}

uint64_t sub_23DFD958C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t result;
  unsigned __int8 *v37;
  int v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  double v48;
  int *v49;
  double v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  double v59;
  double v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  double v76;
  double v77;
  char v78;
  double v79;
  int *v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  _BOOL4 v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  double v101;
  int v102;
  uint64_t v103;
  int *v104;
  char v105;
  uint64_t v106;
  double v107;
  double v108;
  char v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  char v116;
  double v117;
  double v118;
  uint64_t v119;
  double v120;
  uint64_t v121;
  double v122;
  uint64_t v123;
  double v124;
  void *v125;
  double v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t, uint64_t);
  char *v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  double *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  double v157;
  uint64_t v158;
  double v159;
  unsigned __int8 v160;
  __int128 v161;
  uint64_t v162;

  v152 = a3;
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v145 = (uint64_t)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v144 = (uint64_t)&v133 - v9;
  v154 = type metadata accessor for Device.Control.IncrementalState(0);
  v143 = *(_QWORD *)(v154 - 8);
  MEMORY[0x24BDAC7A8](v154);
  v155 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23E13534C();
  v11 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v150 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for SliderControlView();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v142 = (uint64_t)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v146 = (uint64_t)&v133 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v148 = (uint64_t)&v133 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v147 = (uint64_t)&v133 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20048);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20050);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v156 = (uint64_t)&v133 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v153 = (double *)((char *)&v133 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v133 - v29;
  v157 = *(double *)a1;
  v31 = *(unsigned __int8 *)(a1 + 8);
  v32 = a2;
  v33 = a2 + v13[13];
  v34 = *(_QWORD *)v33;
  LOBYTE(a2) = *(_BYTE *)(v33 + 8);
  sub_23DF89F20(*(_QWORD *)v33, a2);
  v35 = sub_23DF9C59C(v34, a2);
  result = sub_23DF8A078(v34, a2);
  if ((v35 & 1) != 0)
  {
    v37 = (unsigned __int8 *)(v32 + v13[11]);
    v38 = *v37;
    v39 = *((_QWORD *)v37 + 1);
    LODWORD(v135) = v38;
    LOBYTE(v161) = v38;
    v134 = v39;
    *((_QWORD *)&v161 + 1) = v39;
    LOBYTE(v159) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
    sub_23E136DA4();
    v138 = v11;
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v140 = v30;
    v40(v30, 1, 1, v158);
    v41 = v13[8];
    v139 = v32;
    v42 = (char *)(v32 + v41);
    v137 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
    v43 = &v42[v137[7]];
    v44 = &v23[*(int *)(v21 + 48)];
    v45 = sub_23E135520();
    v46 = *(_QWORD *)(v45 - 8);
    v47 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v141 = v23;
    v136 = v43;
    v47(v23, v43, v45);
    v48 = v157;
    *(double *)v44 = v157;
    v44[8] = v31;
    v49 = v13;
    v50 = v48;
    if (v31)
    {
      if (v31 != 1)
      {
        LOBYTE(v161) = (_BYTE)v135;
        *((_QWORD *)&v161 + 1) = v134;
        LOBYTE(v159) = 0;
        sub_23E136DA4();
        if (qword_256D1D270 != -1)
          swift_once();
        v88 = sub_23E135C10();
        __swift_project_value_buffer(v88, (uint64_t)qword_256D1EAC0);
        v89 = sub_23E135BF8();
        v90 = sub_23E137368();
        v91 = os_log_type_enabled(v89, v90);
        v53 = (uint64_t)v140;
        if (v91)
        {
          v92 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v92 = 0;
          _os_log_impl(&dword_23DF71000, v89, v90, "user finger lifted", v92, 2u);
          MEMORY[0x24264C628](v92, -1, -1);
        }
        v54 = v13;

        (*(void (**)(char *, uint64_t))(v46 + 8))(v141, v45);
        v87 = v158;
        v86 = v138;
        goto LABEL_20;
      }
      v51 = (uint64_t)v141;
      v52 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v141, v45);
      v53 = (uint64_t)v140;
      if (v52 == *MEMORY[0x24BE4DF28])
      {
        v54 = v13;
        v55 = v139 + v13[10];
        v56 = *(_QWORD *)v55;
        v57 = *(_BYTE *)(v55 + 8);
        v58 = *(_QWORD *)(v55 + 16);
        *(_QWORD *)&v161 = v56;
        BYTE8(v161) = v57;
        v162 = v58;
        v159 = v50;
        v160 = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
        sub_23E136DA4();
        sub_23E135E80();
        v60 = v59;
        sub_23E135514();
        v61 = v40;
        sub_23E136FD8();
        v62 = sub_23E136FC0();
        v63 = v60 - v50;
        if ((v62 & 1) != 0)
          v63 = v50;
        v64 = *(double *)&v42[v137[10]];
        v65 = v64 * round(round(v63 / v60 * (*(double *)&v42[v137[9]] - *(double *)&v42[v137[8]])) / v64);
        sub_23DFD609C();
        v67 = v66;
        sub_23DF89C7C(v53, &qword_256D20050);
        v68 = (uint64_t)v153;
        *v153 = v65;
        *(_QWORD *)(v68 + 8) = v67;
LABEL_14:
        v86 = v138;
        v87 = v158;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v138 + 104))(v68, *MEMORY[0x24BE4DD00], v158);
        v61((char *)v68, 0, 1, v87);
        sub_23DF89340(v68, v53, &qword_256D20050);
LABEL_20:
        v93 = v154;
        v94 = (uint64_t)v155;
        goto LABEL_39;
      }
      goto LABEL_21;
    }
    v69 = v48;
    v70 = v48;
    v51 = (uint64_t)v141;
    v71 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v141, v45);
    if (v71 != *MEMORY[0x24BE4DF20] && v71 != *MEMORY[0x24BE4DF18])
    {
      v53 = (uint64_t)v140;
      if (v71 == *MEMORY[0x24BE4DF28])
      {
        v54 = v49;
        v72 = v139 + v49[9];
        v73 = *(_QWORD *)v72;
        v74 = *(_BYTE *)(v72 + 8);
        v75 = *(_QWORD *)(v72 + 16);
        *(_QWORD *)&v161 = v73;
        BYTE8(v161) = v74;
        v162 = v75;
        v159 = v50;
        v160 = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
        sub_23E136DA4();
        sub_23E135E80();
        v77 = v76;
        sub_23E135514();
        v61 = v40;
        sub_23E136FD8();
        v78 = sub_23E136FC0();
        v79 = v77 - v70;
        if ((v78 & 1) != 0)
          v79 = v70;
        v80 = v137;
        v81 = round(v79 / v77 * (*(double *)&v42[v137[9]] - *(double *)&v42[v137[8]]));
        sub_23DFD5EB8();
        v83 = v82;
        v84 = *(double *)&v42[v80[10]];
        v85 = v84 * round(v81 / v84);
        sub_23DF89C7C(v53, &qword_256D20050);
        v68 = (uint64_t)v153;
        *(_QWORD *)v153 = v83;
        *(double *)(v68 + 8) = v85;
        goto LABEL_14;
      }
LABEL_21:
      sub_23DF89C7C(v53, &qword_256D20050);
      v95 = &qword_256D20048;
      v96 = v51;
      return sub_23DF89C7C(v96, v95);
    }
    v141 = v42;
    v135 = v40;
    v97 = v139;
    v98 = v139 + v49[9];
    v99 = *(_BYTE *)(v98 + 8);
    v100 = *(_QWORD *)(v98 + 16);
    *(_QWORD *)&v161 = *(_QWORD *)v98;
    BYTE8(v161) = v99;
    v162 = v100;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
    sub_23E136D98();
    v101 = v159;
    v102 = v160;
    v103 = v147;
    sub_23DF73E10(v97, v147, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    v53 = (uint64_t)v140;
    v104 = v137;
    if (v102 == 1)
      v101 = (*(double *)(v103 + v49[8] + v137[9]) - *(double *)(v103 + v49[8] + v137[8])) * 0.5;
    sub_23DF73E54(v103, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    v105 = *(_BYTE *)(v98 + 8);
    v106 = *(_QWORD *)(v98 + 16);
    *(_QWORD *)&v161 = *(_QWORD *)v98;
    BYTE8(v161) = v105;
    v162 = v106;
    v159 = v69;
    v160 = 0;
    sub_23E136DA4();
    sub_23E135E80();
    v108 = v107;
    sub_23E135514();
    sub_23E136FD8();
    v109 = sub_23E136FC0();
    v110 = v108 - v101;
    if ((v109 & 1) != 0)
      v110 = v101;
    v111 = *(double *)&v141[v104[9]];
    v112 = v111 - *(double *)&v141[v104[8]];
    v113 = v110 / v108 * v112;
    sub_23E135E80();
    v115 = v114;
    sub_23E135514();
    sub_23E136FD8();
    v116 = sub_23E136FC0();
    v117 = v115 - v70;
    if ((v116 & 1) != 0)
      v117 = v70;
    v118 = v112 * (v117 / v115);
    v119 = v148;
    sub_23DF73E10(v97, v148, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    v86 = v138;
    if (v118 == v111)
    {
      v120 = *(double *)(v119 + v49[8] + v104[9]);
      sub_23DF73E54(v119, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
      v121 = v146;
      sub_23DF73E10(v97, v146, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
      v87 = v158;
      v93 = v154;
      v94 = (uint64_t)v155;
      if (v113 < v120)
      {
        sub_23DF73E54(v121, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
LABEL_34:
        if (qword_256D1D2B0 != -1)
          swift_once();
        v125 = (void *)qword_256D34658;
        objc_msgSend((id)qword_256D34658, sel_impactOccurred);
        objc_msgSend(v125, sel_prepare);
        goto LABEL_38;
      }
    }
    else
    {
      sub_23DF73E54(v119, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
      v121 = v146;
      sub_23DF73E10(v97, v146, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
      v87 = v158;
      v93 = v154;
      v94 = (uint64_t)v155;
    }
    v122 = *(double *)(v121 + v49[8] + v104[8]);
    v123 = v142;
    sub_23DF89384(v121, v142, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    if (v118 == v122)
    {
      v124 = *(double *)(v123 + v49[8] + v104[8]);
      sub_23DF73E54(v123, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
      if (v124 < v113)
        goto LABEL_34;
    }
    else
    {
      sub_23DF73E54(v123, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
    }
LABEL_38:
    v54 = v49;
    v126 = *(double *)&v141[v137[10]];
    v127 = v126 * round(v118 / v126);
    sub_23DF89C7C(v53, &qword_256D20050);
    v128 = (uint64_t)v153;
    *v153 = v127;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v86 + 104))(v128, *MEMORY[0x24BE4DD08], v87);
    v135((char *)v128, 0, 1, v87);
    sub_23DF89340(v128, v53, &qword_256D20050);
LABEL_39:
    v129 = v156;
    sub_23DF89C1C(v53, v156, &qword_256D20050);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v129, 1, v87) == 1)
    {
      sub_23DF89C7C(v53, &qword_256D20050);
      v96 = v129;
      v95 = &qword_256D20050;
    }
    else
    {
      v130 = v150;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v150, v129, v87);
      (*(void (**)(uint64_t, char *, uint64_t))(v86 + 16))(v94, v130, v87);
      *(_BYTE *)(v94 + *(int *)(v93 + 20)) = 1;
      v161 = *(_OWORD *)(v139 + v54[12]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20058);
      sub_23E136D98();
      if (v159 == 0.0)
      {
        v132 = v144;
        sub_23DF73E10(v94, v144, type metadata accessor for Device.Control.IncrementalState);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v132, 0, 1, v93);
        sub_23DF89C1C(v132, v145, &qword_256D1D5D8);
        sub_23E136E70();
        sub_23DF89C7C(v132, &qword_256D1D5D8);
      }
      else
      {
        v131 = (uint64_t)v149;
        sub_23E136E88();
        sub_23E0B5EE0(v131, v94);
        swift_release();
        sub_23DF89C7C(v131, &qword_256D1EC98);
      }
      sub_23DF73E54(v94, type metadata accessor for Device.Control.IncrementalState);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v130, v87);
      v95 = &qword_256D20050;
      v96 = v53;
    }
    return sub_23DF89C7C(v96, v95);
  }
  return result;
}

uint64_t sub_23DFDA364()
{
  sub_23E137038();
  sub_23E135EEC();
  return swift_release();
}

uint64_t sub_23DFDA3F4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  double v20;
  double v21;
  int *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  BOOL v31;
  double v32;
  double v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  double v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  double v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  double v50;
  double v51;
  double v52;
  char v53;
  char v54;
  uint64_t v55;
  void (*v56)(uint64_t, char);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  double v65;
  double v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  uint64_t v75;
  double *v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  double *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  double *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char v101;
  uint64_t v102;
  double v103;
  char v104;

  v11 = sub_23E13534C();
  v97 = *(_QWORD *)(v11 - 8);
  v98 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v96 = (double *)((char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_23E135520();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v92 - v18;
  v99 = a2;
  sub_23E135E80();
  v21 = v20;
  v22 = (int *)type metadata accessor for SliderControlView();
  v23 = a1 + v22[8];
  v24 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  v25 = v24[8];
  v94 = v24[9];
  v95 = v24;
  v26 = *(double *)(v23 + v94);
  v27 = v24[7];
  v93 = v25;
  v28 = v26 - *(double *)(v23 + v25);
  v29 = (v21 - a4) * v28 / v21;
  if (v28 < v29)
    v29 = v28;
  v30 = v29 / 10.0;
  v31 = v29 > 0.0;
  v32 = 0.0;
  if (v31)
    v32 = v30;
  v33 = round(v32) * 10.0 / v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v23 + v27, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x24BE4DF28], v13);
  v34 = sub_23E135508();
  v35 = *(void (**)(char *, uint64_t))(v14 + 8);
  v35(v17, v13);
  v35(v19, v13);
  if ((v34 & 1) != 0)
  {
    if (vabdd_f64(v33, a5) >= vabdd_f64(v33, a6))
    {
      v46 = a1 + v22[10];
      v47 = *(_BYTE *)(v46 + 8);
      v48 = *(_QWORD *)(v46 + 16);
      v100 = *(void **)v46;
      v101 = v47;
      v102 = v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
      sub_23E136D98();
      v49 = v104;
      if ((v104 & 1) != 0)
      {
        v50 = v103;
      }
      else
      {
        sub_23E135E80();
        v50 = v33 * v79;
      }
      v80 = *(_BYTE *)(v46 + 8);
      v81 = *(_QWORD *)(v46 + 16);
      v100 = *(void **)v46;
      v101 = v80;
      v102 = v81;
      v103 = v50;
      v104 = v49;
      sub_23E136DA4();
      v56 = sub_23DFD5D54(&v100);
      v83 = v82;
      v84 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v83, 1, v84))
      {
        v85 = *(double *)(v23 + v95[10]);
        v86 = v85 * round(v33 * (*(double *)(v23 + v94) - *(double *)(v23 + v93)) / v85);
        sub_23DFD609C();
        v88 = v96;
        v87 = v97;
        *v96 = v86;
        *((_QWORD *)v88 + 1) = v89;
        v90 = v98;
        (*(void (**)(double *, _QWORD, uint64_t))(v87 + 104))(v88, *MEMORY[0x24BE4DD00], v98);
        (*(void (**)(uint64_t, double *, uint64_t))(v87 + 40))(v83, v88, v90);
      }
    }
    else
    {
      v36 = a1 + v22[9];
      v37 = *(_BYTE *)(v36 + 8);
      v38 = *(_QWORD *)(v36 + 16);
      v100 = *(void **)v36;
      v101 = v37;
      v102 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
      sub_23E136D98();
      v39 = v104;
      if ((v104 & 1) != 0)
      {
        v40 = v103;
      }
      else
      {
        sub_23E135E80();
        v66 = v65;
        sub_23E135514();
        sub_23E136FD8();
        v67 = sub_23E136FC0();
        v40 = v33 * v66;
        if ((v67 & 1) == 0)
          v40 = v66 - v33 * v66;
      }
      v68 = *(_BYTE *)(v36 + 8);
      v69 = *(_QWORD *)(v36 + 16);
      v100 = *(void **)v36;
      v101 = v68;
      v102 = v69;
      v103 = v40;
      v104 = v39;
      sub_23E136DA4();
      v56 = sub_23DFD5D54(&v100);
      v71 = v70;
      v72 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v71, 1, v72))
      {
        sub_23DFD5EB8();
        v73 = *(double *)(v23 + v95[10]);
        v74 = v73 * round(v33 * (*(double *)(v23 + v94) - *(double *)(v23 + v93)) / v73);
        v76 = v96;
        v75 = v97;
        *(_QWORD *)v96 = v77;
        v76[1] = v74;
        v78 = v98;
        (*(void (**)(double *, _QWORD, uint64_t))(v75 + 104))(v76, *MEMORY[0x24BE4DD00], v98);
        (*(void (**)(uint64_t, double *, uint64_t))(v75 + 40))(v71, v76, v78);
      }
    }
  }
  else
  {
    v41 = a1 + v22[9];
    v42 = *(_BYTE *)(v41 + 8);
    v43 = *(_QWORD *)(v41 + 16);
    v100 = *(void **)v41;
    v101 = v42;
    v102 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
    sub_23E136D98();
    v44 = v104;
    if ((v104 & 1) != 0)
    {
      v45 = v103;
    }
    else
    {
      sub_23E135E80();
      v52 = v51;
      sub_23E135514();
      sub_23E136FD8();
      v53 = sub_23E136FC0();
      v45 = v33 * v52;
      if ((v53 & 1) == 0)
        v45 = v52 - v33 * v52;
    }
    v54 = *(_BYTE *)(v41 + 8);
    v55 = *(_QWORD *)(v41 + 16);
    v100 = *(void **)v41;
    v101 = v54;
    v102 = v55;
    v103 = v45;
    v104 = v44;
    sub_23E136DA4();
    v56 = sub_23DFD5D54(&v100);
    v58 = v57;
    v59 = type metadata accessor for Device.Control.IncrementalState(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
    {
      v60 = *(double *)(v23 + v95[10]);
      v61 = v60 * round(v33 * (*(double *)(v23 + v94) - *(double *)(v23 + v93)) / v60);
      v63 = v96;
      v62 = v97;
      *v96 = v61;
      v64 = v98;
      (*(void (**)(double *, _QWORD, uint64_t))(v62 + 104))(v63, *MEMORY[0x24BE4DD08], v98);
      (*(void (**)(uint64_t, double *, uint64_t))(v62 + 40))(v58, v63, v64);
    }
  }
  return ((uint64_t (*)(void **, _QWORD))v56)(&v100, 0);
}

uint64_t sub_23DFDAA04(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  double v34;
  double v35;
  double v36;
  char v37;
  char v38;
  uint64_t v39;
  void (*v40)(uint64_t, char);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char v57;
  uint64_t v58;
  double v59;
  char v60;

  v9 = sub_23E134CBC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E13534C();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (double *)((char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23E1366D8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == *MEMORY[0x24BDF1140])
  {
    v55 = v10;
    sub_23E135E80();
    v22 = v21;
    sub_23E135E80();
    v23 = a2 - a3;
    if (v23 + v24 * 0.05 >= v22)
      v25 = v22;
    else
      v25 = v23 + v24 * 0.05;
  }
  else
  {
    if (v20 != *MEMORY[0x24BDF1138])
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v55 = v10;
    sub_23E135E80();
    if (a2 - a3 + v26 * -0.05 < 0.0)
      v25 = 0.0;
    else
      v25 = a2 - a3 + v26 * -0.05;
  }
  sub_23E135E80();
  v28 = v25 / v27;
  v29 = type metadata accessor for SliderControlView();
  v30 = a5 + *(int *)(v29 + 36);
  v31 = *(_BYTE *)(v30 + 8);
  v32 = *(_QWORD *)(v30 + 16);
  v56 = *(void **)v30;
  v57 = v31;
  v58 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D950);
  sub_23E136D98();
  v33 = v60;
  if ((v60 & 1) != 0)
  {
    v34 = v59;
  }
  else
  {
    sub_23E135E80();
    v36 = v35;
    type metadata accessor for Device.Control.IncrementalConfig(0);
    sub_23E135514();
    sub_23E136FD8();
    v37 = sub_23E136FC0();
    v34 = v28 * v36;
    if ((v37 & 1) == 0)
      v34 = v36 - v28 * v36;
  }
  v38 = *(_BYTE *)(v30 + 8);
  v39 = *(_QWORD *)(v30 + 16);
  v56 = *(void **)v30;
  v57 = v38;
  v58 = v39;
  v59 = v34;
  v60 = v33;
  sub_23E136DA4();
  v40 = sub_23DFD5D54(&v56);
  v42 = v41;
  v43 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43))
  {
    v44 = a5 + *(int *)(v29 + 32);
    v45 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
    v46 = *(double *)(v44 + v45[10]);
    *v15 = v46 * round(v28 * (*(double *)(v44 + v45[9]) - *(double *)(v44 + v45[8])) / v46);
    v48 = v53;
    v47 = v54;
    (*(void (**)(double *, _QWORD, uint64_t))(v53 + 104))(v15, *MEMORY[0x24BE4DD08], v54);
    (*(void (**)(uint64_t, double *, uint64_t))(v48 + 40))(v42, v15, v47);
  }
  v40((uint64_t)&v56, 0);
  v49 = v55;
  v50 = sub_23E1371AC();
  MEMORY[0x242649598](v50);
  sub_23E134CB0();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v12, v9);
}

_QWORD *sub_23DFDADB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char v62;
  char *v64;
  _QWORD *v65;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *v8 = *(_QWORD *)((char *)a2 + v7);
    v8[1] = v10;
    swift_retain();
    swift_retain();
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
    v12 = (char *)v8 + v11;
    v13 = &v9[v11];
    v14 = type metadata accessor for Device.Control.IncrementalState(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = sub_23E13534C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
      v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v19 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v19) = *((_BYTE *)a2 + v19);
    v20 = a3[8];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (char *)a2 + v20;
    v23 = *(_QWORD *)((char *)a2 + v20 + 8);
    *v21 = *(_QWORD *)((char *)a2 + v20);
    v21[1] = v23;
    v24 = type metadata accessor for IconDescriptor();
    v25 = *(int *)(v24 + 20);
    v26 = (char *)v21 + v25;
    v65 = a2;
    v27 = &v22[v25];
    v28 = sub_23E135910();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
    v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
    v31 = (_QWORD *)((char *)v21 + v30);
    v32 = &v22[v30];
    v33 = *((_QWORD *)v32 + 1);
    *v31 = *(_QWORD *)v32;
    v31[1] = v33;
    v34 = *(int *)(v24 + 20);
    v35 = (char *)v31 + v34;
    v36 = &v32[v34];
    swift_bridgeObjectRetain();
    v29(v35, v36, v28);
    v37 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
    *(_QWORD *)((char *)v21 + v37[5]) = *(_QWORD *)&v22[v37[5]];
    *(_QWORD *)((char *)v21 + v37[6]) = *(_QWORD *)&v22[v37[6]];
    v38 = v37[7];
    v64 = (char *)v21 + v38;
    v39 = &v22[v38];
    v40 = sub_23E135520();
    v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
    swift_retain();
    swift_retain();
    v41(v64, v39, v40);
    *(_QWORD *)((char *)v21 + v37[8]) = *(_QWORD *)&v22[v37[8]];
    *(_QWORD *)((char *)v21 + v37[9]) = *(_QWORD *)&v22[v37[9]];
    *(_QWORD *)((char *)v21 + v37[10]) = *(_QWORD *)&v22[v37[10]];
    v42 = v37[11];
    v43 = (char *)v21 + v42;
    v44 = &v22[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    v45 = a3[9];
    v46 = a3[10];
    v47 = (char *)v4 + v45;
    v48 = (char *)v65 + v45;
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = v48[8];
    *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
    v49 = (char *)v4 + v46;
    v50 = (char *)v65 + v46;
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = v50[8];
    *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
    v51 = a3[11];
    v52 = a3[12];
    v53 = (char *)v4 + v51;
    v54 = (char *)v65 + v51;
    *v53 = *v54;
    *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
    v55 = (_QWORD *)((char *)v4 + v52);
    v56 = (_QWORD *)((char *)v65 + v52);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    v58 = a3[13];
    v59 = (char *)v4 + v58;
    v60 = (char *)v65 + v58;
    v61 = *(_QWORD *)v60;
    v62 = v60[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23DF89F20(v61, v62);
    *(_QWORD *)v59 = v61;
    v59[8] = v62;
  }
  return v4;
}

uint64_t sub_23DFDB118(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1 + a2[5];
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v6 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_23E13534C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for IconDescriptor();
  v10 = v8 + *(int *)(v9 + 20);
  v11 = sub_23E135910();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v13 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v12(v13 + *(int *)(v9 + 20), v11);
  v14 = type metadata accessor for Device.Control.IncrementalConfig(0);
  swift_release();
  swift_release();
  v15 = v8 + *(int *)(v14 + 28);
  v16 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_23DF8A078(*(_QWORD *)(a1 + a2[13]), *(_BYTE *)(a1 + a2[13] + 8));
}

_QWORD *sub_23DFDB2CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v61;
  int *v62;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  swift_retain();
  swift_retain();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for Device.Control.IncrementalState(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_23E13534C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
    v11[*(int *)(v13 + 20)] = v12[*(int *)(v13 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)((char *)a2 + v18 + 8);
  *v19 = *(_QWORD *)((char *)a2 + v18);
  v19[1] = v21;
  v22 = type metadata accessor for IconDescriptor();
  v23 = *(int *)(v22 + 20);
  v24 = (char *)v19 + v23;
  v62 = a3;
  v25 = &v20[v23];
  v26 = sub_23E135910();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v29 = (_QWORD *)((char *)v19 + v28);
  v30 = &v20[v28];
  v31 = *((_QWORD *)v30 + 1);
  *v29 = *(_QWORD *)v30;
  v29[1] = v31;
  v32 = *(int *)(v22 + 20);
  v33 = (char *)v29 + v32;
  v34 = &v30[v32];
  swift_bridgeObjectRetain();
  v27(v33, v34, v26);
  v35 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  *(_QWORD *)((char *)v19 + v35[5]) = *(_QWORD *)&v20[v35[5]];
  *(_QWORD *)((char *)v19 + v35[6]) = *(_QWORD *)&v20[v35[6]];
  v36 = v35[7];
  v61 = (char *)v19 + v36;
  v37 = &v20[v36];
  v38 = sub_23E135520();
  v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  swift_retain();
  swift_retain();
  v39(v61, v37, v38);
  *(_QWORD *)((char *)v19 + v35[8]) = *(_QWORD *)&v20[v35[8]];
  *(_QWORD *)((char *)v19 + v35[9]) = *(_QWORD *)&v20[v35[9]];
  *(_QWORD *)((char *)v19 + v35[10]) = *(_QWORD *)&v20[v35[10]];
  v40 = v35[11];
  v41 = (char *)v19 + v40;
  v42 = &v20[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  v43 = v62[9];
  v44 = v62[10];
  v45 = (char *)a1 + v43;
  v46 = (char *)a2 + v43;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
  v47 = (char *)a1 + v44;
  v48 = (char *)a2 + v44;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
  v49 = v62[11];
  v50 = v62[12];
  v51 = (char *)a1 + v49;
  v52 = (char *)a2 + v49;
  *v51 = *v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  v53 = (_QWORD *)((char *)a1 + v50);
  v54 = (_QWORD *)((char *)a2 + v50);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  v56 = v62[13];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = *(_QWORD *)v58;
  LOBYTE(v20) = v58[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23DF89F20(v59, (char)v20);
  *(_QWORD *)v57 = v59;
  v57[8] = (char)v20;
  return a1;
}

_QWORD *sub_23DFDB604(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  int *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v62;
  _QWORD *v63;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for Device.Control.IncrementalState(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v62 = sub_23E13534C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v10, v11, v62);
      v10[*(int *)(v12 + 20)] = v11[*(int *)(v12 + 20)];
      goto LABEL_7;
    }
    sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.IncrementalState);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v17 = sub_23E13534C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v11, v17);
  v10[*(int *)(v12 + 20)] = v11[*(int *)(v12 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = a3[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (char *)a2 + v19;
  *v20 = *(_QWORD *)((char *)a2 + v19);
  v20[1] = *(_QWORD *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = type metadata accessor for IconDescriptor();
  v23 = *(int *)(v22 + 20);
  v24 = (char *)v20 + v23;
  v25 = &v21[v23];
  v26 = sub_23E135910();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24);
  v27(v24, v25, v26);
  v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v29 = (char *)v20 + v28;
  v63 = a2;
  v30 = a3;
  v31 = &v21[v28];
  *(_QWORD *)v29 = *(_QWORD *)&v21[v28];
  *((_QWORD *)v29 + 1) = *(_QWORD *)&v21[v28 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27(&v29[*(int *)(v22 + 20)], &v31[*(int *)(v22 + 20)], v26);
  v32 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  *(_QWORD *)((char *)v20 + v32[5]) = *(_QWORD *)&v21[v32[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v20 + v32[6]) = *(_QWORD *)&v21[v32[6]];
  swift_retain();
  swift_release();
  v33 = v32[7];
  v34 = (char *)v20 + v33;
  v35 = &v21[v33];
  v36 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  *(_QWORD *)((char *)v20 + v32[8]) = *(_QWORD *)&v21[v32[8]];
  *(_QWORD *)((char *)v20 + v32[9]) = *(_QWORD *)&v21[v32[9]];
  *(_QWORD *)((char *)v20 + v32[10]) = *(_QWORD *)&v21[v32[10]];
  v37 = v32[11];
  v38 = (char *)v20 + v37;
  v39 = &v21[v37];
  v40 = v39[8];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v40;
  v41 = v30[9];
  v42 = (char *)a1 + v41;
  v43 = (char *)v63 + v41;
  v44 = v43[8];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v44;
  *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
  swift_retain();
  swift_release();
  v45 = v30[10];
  v46 = (char *)a1 + v45;
  v47 = (char *)v63 + v45;
  v48 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
  swift_retain();
  swift_release();
  v49 = v30[11];
  v50 = (char *)a1 + v49;
  v51 = (char *)v63 + v49;
  *v50 = *v51;
  *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
  swift_retain();
  swift_release();
  v52 = v30[12];
  v53 = (char *)a1 + v52;
  v54 = (char *)v63 + v52;
  *(_QWORD *)((char *)a1 + v52) = *(_QWORD *)((char *)v63 + v52);
  swift_retain();
  swift_release();
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  swift_retain();
  swift_release();
  v55 = v30[13];
  v56 = (char *)a1 + v55;
  v57 = (char *)v63 + v55;
  v58 = *(_QWORD *)v57;
  LOBYTE(v53) = v57[8];
  sub_23DF89F20(*(_QWORD *)v57, (char)v53);
  v59 = *(_QWORD *)v56;
  v60 = v56[8];
  *(_QWORD *)v56 = v58;
  v56[8] = (char)v53;
  sub_23DF8A078(v59, v60);
  return a1;
}

_QWORD *sub_23DFDBA2C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for Device.Control.IncrementalState(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_23E13534C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v11[*(int *)(v13 + 20)] = v12[*(int *)(v13 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for IconDescriptor();
  v22 = *(int *)(v21 + 20);
  v23 = &v19[v22];
  v24 = &v20[v22];
  v25 = sub_23E135910();
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
  v26(v23, v24, v25);
  v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v28 = &v19[v27];
  v29 = &v20[v27];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v26(&v28[*(int *)(v21 + 20)], &v29[*(int *)(v21 + 20)], v25);
  v30 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  *(_QWORD *)&v19[v30[5]] = *(_QWORD *)&v20[v30[5]];
  *(_QWORD *)&v19[v30[6]] = *(_QWORD *)&v20[v30[6]];
  v31 = v30[7];
  v32 = &v19[v31];
  v33 = &v20[v31];
  v34 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  *(_QWORD *)&v19[v30[8]] = *(_QWORD *)&v20[v30[8]];
  *(_QWORD *)&v19[v30[9]] = *(_QWORD *)&v20[v30[9]];
  *(_QWORD *)&v19[v30[10]] = *(_QWORD *)&v20[v30[10]];
  v35 = v30[11];
  v36 = &v19[v35];
  v37 = &v20[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = a3[9];
  v39 = a3[10];
  v40 = (char *)a1 + v38;
  v41 = (char *)a2 + v38;
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  v42 = (char *)a1 + v39;
  v43 = (char *)a2 + v39;
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
  v44 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v44) = *(_OWORD *)((char *)a2 + v44);
  v45 = a3[13];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *(_QWORD *)v46 = v48;
  return a1;
}

_QWORD *sub_23DFDBCC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v61;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for Device.Control.IncrementalState(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v61 = sub_23E13534C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v10, v11, v61);
      v10[*(int *)(v12 + 20)] = v11[*(int *)(v12 + 20)];
      goto LABEL_7;
    }
    sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.IncrementalState);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v17 = sub_23E13534C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
  v10[*(int *)(v12 + 20)] = v11[*(int *)(v12 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v19 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a2 + v20 + 8);
  *v21 = *(_QWORD *)((char *)a2 + v20);
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v24 = type metadata accessor for IconDescriptor();
  v25 = *(int *)(v24 + 20);
  v26 = (char *)v21 + v25;
  v27 = &v22[v25];
  v28 = sub_23E135910();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  v31 = (char *)v21 + v30;
  v32 = &v22[v30];
  v33 = *(_QWORD *)&v22[v30 + 8];
  *(_QWORD *)v31 = *(_QWORD *)&v22[v30];
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v29(&v31[*(int *)(v24 + 20)], &v32[*(int *)(v24 + 20)], v28);
  v34 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  *(_QWORD *)((char *)v21 + v34[5]) = *(_QWORD *)&v22[v34[5]];
  swift_release();
  *(_QWORD *)((char *)v21 + v34[6]) = *(_QWORD *)&v22[v34[6]];
  swift_release();
  v35 = v34[7];
  v36 = (char *)v21 + v35;
  v37 = &v22[v35];
  v38 = sub_23E135520();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  *(_QWORD *)((char *)v21 + v34[8]) = *(_QWORD *)&v22[v34[8]];
  *(_QWORD *)((char *)v21 + v34[9]) = *(_QWORD *)&v22[v34[9]];
  *(_QWORD *)((char *)v21 + v34[10]) = *(_QWORD *)&v22[v34[10]];
  v39 = v34[11];
  v40 = (char *)v21 + v39;
  v41 = &v22[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  v40[8] = v41[8];
  v42 = a3[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v43[8] = v44[8];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
  swift_release();
  v45 = a3[10];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
  swift_release();
  v48 = a3[11];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *v49 = *v50;
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_release();
  v51 = a3[12];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *(_QWORD *)((char *)a1 + v51) = *(_QWORD *)((char *)a2 + v51);
  swift_release();
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  swift_release();
  v54 = a3[13];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = *(_QWORD *)v56;
  LOBYTE(v56) = v56[8];
  v58 = *(_QWORD *)v55;
  v59 = v55[8];
  *(_QWORD *)v55 = v57;
  v55[8] = (char)v56;
  sub_23DF8A078(v58, v59);
  return a1;
}

uint64_t sub_23DFDC05C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFDC068(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  int v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = type metadata accessor for Device.Control.IncrementalConfig(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[9] + 16);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  v13 = v12 - 1;
  if (v13 < 0)
    v13 = -1;
  return (v13 + 1);
}

uint64_t sub_23DFDC120()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFDC12C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = type metadata accessor for Device.Control.IncrementalConfig(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[9] + 16) = a2;
  return result;
}

void sub_23DFDC1D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DFDC294();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Device.Control.IncrementalConfig(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23DFDC294()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D1FF60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D5D8);
    v0 = sub_23E136EDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D1FF60);
  }
}

uint64_t sub_23DFDC2EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFDC2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  char v14;
  uint64_t result;
  double v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v2, v7, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_23DF89384(v7, v9 + v8, (uint64_t (*)(_QWORD))type metadata accessor for SliderControlView);
  v10 = v2 + *(int *)(a1 + 52);
  v11 = *(_QWORD *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  sub_23DF89F20(*(_QWORD *)v10, v12);
  LOBYTE(v7) = sub_23DF9C59C(v11, v12);
  sub_23DF8A078(v11, v12);
  if ((v7 & 1) != 0)
    v13 = 1.0;
  else
    v13 = 0.5;
  sub_23DF89F20(v11, v12);
  v14 = sub_23DF9C59C(v11, v12);
  result = sub_23DF8A078(v11, v12);
  v16 = 0.0;
  *(_QWORD *)a2 = sub_23DFDC448;
  *(_QWORD *)(a2 + 8) = v9;
  if ((v14 & 1) == 0)
    v16 = 1.0;
  *(double *)(a2 + 16) = v13;
  *(double *)(a2 + 24) = v16;
  return result;
}

uint64_t sub_23DFDC448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SliderControlView() - 8) + 80);
  return sub_23DFD6294(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_23DFDC494()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1367E0();
  v3 = sub_23E1367C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = sub_23E136804();
  result = sub_23DF89C7C((uint64_t)v2, &qword_256D1DBA0);
  qword_256D34648 = v4;
  return result;
}

uint64_t sub_23DFDC550()
{
  uint64_t result;

  result = sub_23E136FFC();
  qword_256D34650 = result;
  return result;
}

id sub_23DFDC584()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6AF0]), sel_init);
  result = objc_msgSend(v0, sel_prepare);
  qword_256D34658 = (uint64_t)v0;
  return result;
}

uint64_t sub_23DFDC5D0()
{
  return sub_23DFDC7DC(sub_23DFD8E08);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for SliderControlView();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  v3 = v2 + v1[5];
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v5 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_23E13534C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  v7 = v2 + v1[8];
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for IconDescriptor();
  v9 = v7 + *(int *)(v8 + 20);
  v10 = sub_23E135910();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v11(v12 + *(int *)(v8 + 20), v10);
  v13 = type metadata accessor for Device.Control.IncrementalConfig(0);
  swift_release();
  swift_release();
  v14 = v7 + *(int *)(v13 + 28);
  v15 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v2 + v1[13]), *(_BYTE *)(v2 + v1[13] + 8));
  return swift_deallocObject();
}

uint64_t sub_23DFDC7D0()
{
  return sub_23DFDC7DC(sub_23DFD8EB8);
}

uint64_t sub_23DFDC7DC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SliderControlView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_23DFDC818()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20000;
  if (!qword_256D20000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FFC8);
    v2[0] = sub_23DF89B88(&qword_256D20008, &qword_256D1FFC0, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20000);
  }
  return result;
}

unint64_t sub_23DFDC89C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D20010;
  if (!qword_256D20010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D5D8);
    v2 = sub_23DF73F28(&qword_256D20018, type metadata accessor for Device.Control.IncrementalState, (uint64_t)&protocol conformance descriptor for Device.Control.IncrementalState);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D20010);
  }
  return result;
}

uint64_t sub_23DFDC918()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for SliderControlView();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v23 = sub_23E135EA4();
  v5 = *(_QWORD *)(v23 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v3;
  v8 = v0 + v3 + v1[5];
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v10 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_23E13534C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  v12 = (v3 + v4 + v6) & ~v6;
  v13 = v7 + v1[8];
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for IconDescriptor();
  v15 = v13 + *(int *)(v14 + 20);
  v16 = sub_23E135910();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  v18 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v17(v18 + *(int *)(v14 + 20), v16);
  v19 = type metadata accessor for Device.Control.IncrementalConfig(0);
  swift_release();
  swift_release();
  v20 = v13 + *(int *)(v19 + 28);
  v21 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v7 + v1[13]), *(_BYTE *)(v7 + v1[13] + 8));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v12, v23);
  return swift_deallocObject();
}

uint64_t sub_23DFDCB48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for SliderControlView() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E135EA4() - 8) + 80);
  return sub_23DFD958C(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_23DFDCBB0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for SliderControlView();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v23 = sub_23E135EA4();
  v5 = *(_QWORD *)(v23 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v3;
  v8 = v0 + v3 + v1[5];
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v10 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_23E13534C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  v12 = (v3 + v4 + v6) & ~v6;
  v13 = v7 + v1[8];
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for IconDescriptor();
  v15 = v13 + *(int *)(v14 + 20);
  v16 = sub_23E135910();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  v18 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v17(v18 + *(int *)(v14 + 20), v16);
  v19 = type metadata accessor for Device.Control.IncrementalConfig(0);
  swift_release();
  swift_release();
  v20 = v13 + *(int *)(v19 + 28);
  v21 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v7 + v1[13]), *(_BYTE *)(v7 + v1[13] + 8));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v12, v23);
  return swift_deallocObject();
}

uint64_t sub_23DFDCDF4()
{
  type metadata accessor for SliderControlView();
  sub_23E135EA4();
  return sub_23DFDA364();
}

unint64_t sub_23DFDCE8C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20028;
  if (!qword_256D20028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FFB8);
    v2[0] = sub_23DFDCEF8();
    v2[1] = sub_23DF8DABC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20028);
  }
  return result;
}

unint64_t sub_23DFDCEF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256D20030;
  if (!qword_256D20030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FFD8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FFC8);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D5D8);
    v2[4] = sub_23DFDC818();
    v2[5] = sub_23DFDC89C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1D988, type metadata accessor for ValueThrottleModifier, (uint64_t)&protocol conformance descriptor for ValueThrottleModifier);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20030);
  }
  return result;
}

unint64_t sub_23DFDCFC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256D20038;
  if (!qword_256D20038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20020);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FFD8);
    v2[3] = sub_23E136498();
    v2[4] = sub_23DFDCEF8();
    v2[5] = MEMORY[0x24BDEF530];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20038);
  }
  return result;
}

unint64_t sub_23DFDD094()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20040;
  if (!qword_256D20040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FFE0);
    v2[0] = sub_23DFDCE8C();
    v2[1] = sub_23DFDCFC8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20040);
  }
  return result;
}

uint64_t sub_23DFDD100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_23E135EA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for SliderControlView();
  v6 = (*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + v6;
  v8 = v0 + v6 + v5[5];
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98) + 32);
  v10 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = sub_23E13534C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  v12 = v7 + v5[8];
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for IconDescriptor();
  v14 = v12 + *(int *)(v13 + 20);
  v15 = sub_23E135910();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v17 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
  swift_bridgeObjectRelease();
  v16(v17 + *(int *)(v13 + 20), v15);
  v18 = type metadata accessor for Device.Control.IncrementalConfig(0);
  swift_release();
  swift_release();
  v19 = v12 + *(int *)(v18 + 28);
  v20 = sub_23E135520();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v7 + v5[13]), *(_BYTE *)(v7 + v5[13] + 8));
  return swift_deallocObject();
}

uint64_t sub_23DFDD33C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_23E135EA4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SliderControlView() - 8) + 80);
  return sub_23DFDAA04(a1, *(double *)(v1 + v5), *(double *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), v1 + v4, v1 + ((v6 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6));
}

uint64_t sub_23DFDD3C8()
{
  uint64_t v0;

  return sub_23DFDA3F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

uint64_t sub_23DFDD3EC()
{
  return sub_23E1361A4();
}

uint64_t sub_23DFDD40C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB88);
  MEMORY[0x24BDAC7A8](v2);
  sub_23DF89C1C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256D1DB88);
  return sub_23E1361B0();
}

unint64_t sub_23DFDD4A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D200B8;
  if (!qword_256D200B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20090);
    v2[0] = sub_23DF8E904(&qword_256D200C0, &qword_256D20088, (uint64_t (*)(void))sub_23DFDD544, MEMORY[0x24BDECC60]);
    v2[1] = sub_23DF89B88(&qword_256D1DB68, &qword_256D1DB70, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D200B8);
  }
  return result;
}

unint64_t sub_23DFDD544()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D200C8;
  if (!qword_256D200C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20080);
    v2[0] = sub_23DFDD5C8();
    v2[1] = sub_23DF89B88(&qword_256D20100, &qword_256D20108, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D200C8);
  }
  return result;
}

unint64_t sub_23DFDD5C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D200D0;
  if (!qword_256D200D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20078);
    v2[0] = sub_23DFDD64C();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D200D0);
  }
  return result;
}

unint64_t sub_23DFDD64C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D200D8;
  if (!qword_256D200D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20070);
    v2[0] = sub_23DFDD6D0();
    v2[1] = sub_23DF89B88(&qword_256D200F8, &qword_256D20068, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D200D8);
  }
  return result;
}

unint64_t sub_23DFDD6D0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256D200E0;
  if (!qword_256D200E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D200E8);
    v2 = sub_23DFDD73C();
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D200E0);
  }
  return result;
}

unint64_t sub_23DFDD73C()
{
  unint64_t result;

  result = qword_256D200F0;
  if (!qword_256D200F0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13894C, &type metadata for AnimationModel.MatchedGeometryEffect.Icon);
    atomic_store(result, (unint64_t *)&qword_256D200F0);
  }
  return result;
}

uint64_t sub_23DFDD790()
{
  return sub_23DF8E904(&qword_256D20130, &qword_256D20138, (uint64_t (*)(void))sub_23DFDD7C4, MEMORY[0x24BDEDBE0]);
}

unint64_t sub_23DFDD7C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20140;
  if (!qword_256D20140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20148);
    v2[0] = sub_23DF89B88(&qword_256D20150, &qword_256D20158, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20140);
  }
  return result;
}

uint64_t _s17ColorSpectrumViewVwxx(uint64_t a1)
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 48);
  return swift_release();
}

uint64_t _s17ColorSpectrumViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = a2 + 48;
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_retain();
  v7(a1 + 48, v4, v6);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_retain();
  return a1;
}

uint64_t _s17ColorSpectrumViewVwca(uint64_t a1, __int128 *a2)
{
  __int128 v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)a2 + 6);
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s17ColorSpectrumViewVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 48);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t _s17ColorSpectrumViewVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17ColorSpectrumViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s17ColorSpectrumViewVMa()
{
  return &_s17ColorSpectrumViewVN;
}

uint64_t sub_23DFDDAFC()
{
  return swift_getOpaqueTypeConformance2();
}

int64x2_t sub_23DFDDB0C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4040800000000000uLL);
  xmmword_256D20160 = (__int128)result;
  return result;
}

uint64_t sub_23DFDDB28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[6];
  uint64_t v27;

  v25 = a1;
  v2 = sub_23E13636C();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E13660C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20170);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20178);
  MEMORY[0x24BDAC7A8](v22);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFDF44C(v1, (uint64_t)v26);
  v14 = swift_allocObject();
  v15 = v26[5];
  *(_OWORD *)(v14 + 80) = v26[4];
  *(_OWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 112) = v27;
  v16 = v26[1];
  *(_OWORD *)(v14 + 16) = v26[0];
  *(_OWORD *)(v14 + 32) = v16;
  v17 = v26[3];
  *(_OWORD *)(v14 + 48) = v26[2];
  *(_OWORD *)(v14 + 64) = v17;
  *(_QWORD *)&v26[0] = sub_23DFDF484;
  *((_QWORD *)&v26[0] + 1) = v14;
  sub_23E1365E8();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20180);
  v19 = sub_23DF89B88(&qword_256D20188, &qword_256D20180, MEMORY[0x24BDEC6F8]);
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  sub_23E13633C();
  *(_QWORD *)&v26[0] = v18;
  *((_QWORD *)&v26[0] + 1) = v19;
  swift_getOpaqueTypeConformance2();
  sub_23E136A08();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  sub_23E1371A0();
  sub_23E135FA0();
  swift_bridgeObjectRelease();
  return sub_23DF89C7C((uint64_t)v13, &qword_256D20178);
}

uint64_t sub_23DFDDDBC@<X0>(double a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v19;

  v6 = sub_23E135F94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20190);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = sub_23E136F9C();
  v12[1] = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20198);
  sub_23DFDDF2C(a2, a1, (char *)v12 + *(int *)(v14 + 44));
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDED100], v6);
  v16 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D201A0) + 36));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201A8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v16 + *(int *)(v17 + 28), v9, v6);
  *v16 = KeyPath;
  sub_23DF89C1C((uint64_t)v12, a3, &qword_256D20190);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_23DF89C7C((uint64_t)v12, &qword_256D20190);
}

uint64_t sub_23DFDDF2C@<X0>(uint64_t a1@<X0>, double a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  double v60;
  char *v61;
  char *v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  double v67;
  char v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t KeyPath;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  double v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  __int128 v132;
  void (*v133)(char *, _QWORD, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;

  v131 = a2;
  v144 = a3;
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E608);
  MEMORY[0x24BDAC7A8](v136);
  v141 = (uint64_t)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E610);
  MEMORY[0x24BDAC7A8](v138);
  v140 = (uint64_t)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E618);
  MEMORY[0x24BDAC7A8](v137);
  v142 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E620);
  v7 = MEMORY[0x24BDAC7A8](v139);
  v143 = (uint64_t)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v148 = (uint64_t)&v114 - v9;
  v146 = sub_23E135328();
  v145 = *(_QWORD *)(v146 - 8);
  v10 = MEMORY[0x24BDAC7A8](v146);
  v114 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v147 = (char *)&v114 - v12;
  v121 = sub_23E135EA4();
  v120 = *(_QWORD *)(v121 - 8);
  v123 = *(_QWORD *)(v120 + 64);
  MEMORY[0x24BDAC7A8](v121);
  v119 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_23E136498();
  MEMORY[0x24BDAC7A8](v118);
  v125 = sub_23E135D90();
  v126 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v117 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&qword_256D201B0));
  v129 = *(_QWORD *)(*(_QWORD *)&v128 - 8);
  MEMORY[0x24BDAC7A8](*(_QWORD *)&v128);
  v122 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201B8);
  v149 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v127 = (uint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201C0);
  v116 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201C8);
  v152 = *(_QWORD *)(v153 - 8);
  v26 = MEMORY[0x24BDAC7A8](v153);
  v150 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v151 = (char *)&v114 - v28;
  v115 = a1;
  v29 = __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72));
  MEMORY[0x24BDAC7A8](v29);
  (*(void (**)(char *))(v31 + 16))((char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_23E136E58();
  v135 = v20;
  v33 = &v22[*(int *)(v20 + 20)];
  v34 = *MEMORY[0x24BDEEB68];
  v35 = sub_23E136324();
  v36 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104);
  v124 = v34;
  v134 = v35;
  v133 = v36;
  ((void (*)(char *, uint64_t))v36)(v33, v34);
  __asm { FMOV            V0.2D, #8.0 }
  v132 = _Q0;
  *(_OWORD *)v22 = _Q0;
  sub_23DF9BB38((uint64_t)v22, (uint64_t)v19);
  *(_WORD *)&v19[*(int *)(v17 + 36)] = 256;
  sub_23DF89C1C((uint64_t)v19, (uint64_t)v25 + *(int *)(v23 + 36), &qword_256D1E0F8);
  *v25 = v32;
  swift_retain();
  sub_23DF89C7C((uint64_t)v19, &qword_256D1E0F8);
  sub_23DF9BB7C((uint64_t)v22);
  swift_release();
  sub_23E1365A0();
  v42 = v117;
  sub_23E135D6C();
  v43 = v115;
  sub_23DFDF44C(v115, (uint64_t)&v154);
  v44 = v120;
  v45 = v119;
  v46 = v121;
  (*(void (**)(char *, double, uint64_t))(v120 + 16))(v119, COERCE_DOUBLE(*(_QWORD *)&v131), v121);
  v47 = v44;
  v48 = (*(unsigned __int8 *)(v44 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v49 = swift_allocObject();
  v50 = v159;
  *(_OWORD *)(v49 + 80) = v158;
  *(_OWORD *)(v49 + 96) = v50;
  *(_QWORD *)(v49 + 112) = v160;
  v51 = v155;
  *(_OWORD *)(v49 + 16) = v154;
  *(_OWORD *)(v49 + 32) = v51;
  v52 = v157;
  *(_OWORD *)(v49 + 48) = v156;
  *(_OWORD *)(v49 + 64) = v52;
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v49 + v48, v45, v46);
  sub_23DF73F28(&qword_256D201D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_23DF73F28(&qword_256D201D8, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  v53 = v122;
  v54 = v125;
  sub_23E136F30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v42, v54);
  sub_23DFDF44C(v43, (uint64_t)&v154);
  v55 = swift_allocObject();
  v56 = v159;
  *(_OWORD *)(v55 + 80) = v158;
  *(_OWORD *)(v55 + 96) = v56;
  *(_QWORD *)(v55 + 112) = v160;
  v57 = v155;
  *(_OWORD *)(v55 + 16) = v154;
  *(_OWORD *)(v55 + 32) = v57;
  v58 = v157;
  *(_OWORD *)(v55 + 48) = v156;
  *(_OWORD *)(v55 + 64) = v58;
  sub_23DF89B88(&qword_256D201E0, &qword_256D201B0, MEMORY[0x24BDED570]);
  v59 = v127;
  v60 = v128;
  sub_23E136F24();
  v61 = v147;
  swift_release();
  (*(void (**)(char *, double))(v129 + 8))(v53, COERCE_DOUBLE(*(_QWORD *)&v60));
  sub_23E135DA8();
  sub_23DFDF5C4();
  sub_23DF89B88(&qword_256D201F0, &qword_256D201B8, MEMORY[0x24BDEC410]);
  v62 = v150;
  v63 = v130;
  sub_23E136B58();
  (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v59, v63);
  sub_23DF89C7C((uint64_t)v25, &qword_256D201C0);
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v62, v153);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  sub_23E135E80();
  *(double *)&v66 = COERCE_DOUBLE(sub_23DFDF1A0(v64, v65));
  if ((v68 & 1) != 0)
  {
    v74 = 0;
    v130 = 0;
    v75 = 0;
    v149 = 0;
    v76 = 0;
    v129 = 0;
    v131 = 0.0;
    v128 = 0.0;
    v82 = 1;
  }
  else
  {
    v69 = *(double *)&v66;
    v70 = v67;
    v71 = (uint64_t)v114;
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v114, v61, v146);
    v72 = sub_23E0A9F3C(v71);
    if (qword_256D1D2B8 != -1)
      swift_once();
    v73 = xmmword_256D20160;
    sub_23E136FE4();
    sub_23E135E5C();
    v74 = v154;
    v130 = BYTE8(v154);
    v75 = v155;
    v149 = BYTE8(v155);
    v129 = *((_QWORD *)&v156 + 1);
    v76 = v156;
    sub_23E135E80();
    v79 = 0.0;
    if (v69 < 0.0)
      v80 = 0.0;
    else
      v80 = v69;
    if (v77 >= v80)
      v77 = v80;
    v81 = v77 - *(double *)&v73 * 0.5;
    if (v70 >= 0.0)
      v79 = v70;
    if (v78 >= v79)
      v78 = v79;
    v131 = v81;
    v128 = v78 - *((double *)&v73 + 1) * 0.5;
    v82 = v72;
  }
  v133(&v22[*(int *)(v135 + 20)], v124, v134);
  *(_OWORD *)v22 = v132;
  sub_23E135DCC();
  v83 = v141;
  sub_23DF9BB38((uint64_t)v22, v141);
  v84 = v83 + *(int *)(v136 + 36);
  v85 = v162;
  *(_OWORD *)v84 = v161;
  *(_OWORD *)(v84 + 16) = v85;
  *(_QWORD *)(v84 + 32) = v163;
  sub_23DF9BB7C((uint64_t)v22);
  v86 = sub_23E136C24();
  KeyPath = swift_getKeyPath();
  v88 = v140;
  sub_23DF89C1C(v83, v140, &qword_256D1E608);
  v89 = (uint64_t *)(v88 + *(int *)(v138 + 36));
  *v89 = KeyPath;
  v89[1] = v86;
  sub_23DF89C7C(v83, &qword_256D1E608);
  v90 = v142;
  sub_23DF89C1C(v88, v142, &qword_256D1E610);
  *(_QWORD *)(v90 + *(int *)(v137 + 36)) = 0x3FC3333333333333;
  sub_23DF89C7C(v88, &qword_256D1E610);
  v91 = sub_23E13672C();
  sub_23E135D00();
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v99 = v98;
  v100 = v143;
  sub_23DF89C1C(v90, v143, &qword_256D1E618);
  v101 = v100 + *(int *)(v139 + 36);
  *(_BYTE *)v101 = v91;
  *(_QWORD *)(v101 + 8) = v93;
  *(_QWORD *)(v101 + 16) = v95;
  *(_QWORD *)(v101 + 24) = v97;
  *(_QWORD *)(v101 + 32) = v99;
  *(_BYTE *)(v101 + 40) = 0;
  sub_23DF89C7C(v90, &qword_256D1E618);
  v102 = v148;
  sub_23DFDF864(v100, v148);
  v103 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
  v104 = v150;
  v105 = v153;
  v103(v150, v151, v153);
  sub_23DF89C1C(v102, v100, &qword_256D1E620);
  v106 = v144;
  v103(v144, v104, v105);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201F8);
  v108 = &v106[*(int *)(v107 + 48)];
  *(_QWORD *)v108 = v82;
  *((_QWORD *)v108 + 1) = v74;
  v126 = v74;
  *((_QWORD *)v108 + 2) = v130;
  *((_QWORD *)v108 + 3) = v75;
  v109 = v149;
  *((_QWORD *)v108 + 4) = v149;
  *((_QWORD *)v108 + 5) = v76;
  v149 = v109;
  v110 = v131;
  *((_QWORD *)v108 + 6) = v129;
  *((double *)v108 + 7) = v110;
  v127 = v82;
  *((double *)v108 + 8) = v128;
  v108[72] = 0;
  sub_23DF89C1C(v100, (uint64_t)&v106[*(int *)(v107 + 64)], &qword_256D1E620);
  sub_23DFDF8AC(v82);
  sub_23DF89C7C(v148, &qword_256D1E620);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v147, v146);
  v111 = *(void (**)(char *, uint64_t))(v152 + 8);
  v112 = v153;
  v111(v151, v153);
  sub_23DF89C7C(v100, &qword_256D1E620);
  sub_23DFDF8BC(v127);
  return ((uint64_t (*)(char *, uint64_t))v111)(v150, v112);
}

uint64_t sub_23DFDED50(uint64_t a1, __int128 *a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void (*v30)(uint64_t, uint64_t, double, double, double, double);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  double v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  char v53;
  uint64_t v54;

  v47 = a3;
  v4 = sub_23E135328();
  v48 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v44 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)&v44 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - v17;
  v19 = *((_QWORD *)a2 + 5);
  LOBYTE(v52) = *((_BYTE *)a2 + 32);
  *((_QWORD *)&v52 + 1) = v19;
  LOBYTE(v49) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136DA4();
  sub_23E135D84();
  v20 = *((_BYTE *)a2 + 16);
  v21 = *((_QWORD *)a2 + 3);
  v52 = *a2;
  v53 = v20;
  v54 = v21;
  v49 = v22;
  v50 = v23;
  v51 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20200);
  sub_23E136DA4();
  v24 = *((_QWORD *)a2 + 9);
  v25 = *((_QWORD *)a2 + 10);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a2 + 6, v24);
  sub_23E135D84();
  v27 = v26;
  v29 = v28;
  sub_23E135E80();
  v30 = *(void (**)(uint64_t, uint64_t, double, double, double, double))(v25 + 16);
  v31 = v25;
  v32 = v12;
  v33 = v48;
  v30(v24, v31, v27, v29, v34, v35);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  v36 = v18;
  swift_release();
  swift_release();
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v16, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v16, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v4);
    sub_23DF89C7C((uint64_t)v18, &qword_256D1D7F0);
  }
  else
  {
    v37 = v46;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v46, v16, v4);
    sub_23DF73F28(&qword_256D20208, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCD0]);
    if ((sub_23E137158() & 1) != 0)
    {
      v38 = *(void (**)(char *, uint64_t))(v33 + 8);
      v38(v37, v4);
      v38(v32, v4);
      v16 = v18;
    }
    else
    {
      v39 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v40 = (uint64_t)v45;
      v39(v45, v37, v4);
      swift_retain();
      sub_23E0BE4A0(v40);
      swift_getKeyPath();
      v47 = v36;
      swift_getKeyPath();
      v39(v44, (char *)v40, v4);
      swift_retain();
      sub_23E135C88();
      v41 = v37;
      v42 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v42(v40, v4);
      swift_release();
      v42((uint64_t)v41, v4);
      v42((uint64_t)v32, v4);
      v16 = v47;
    }
  }
  return sub_23DF89C7C((uint64_t)v16, &qword_256D1D7F0);
}

uint64_t sub_23DFDF150()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23DFDF1A0(double a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v5 = sub_23E135328();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v8 = *v2;
  v9 = v2[1];
  v10 = *((_BYTE *)v2 + 16);
  v11 = v2[3];
  v22 = *v2;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20200);
  sub_23E136D98();
  if ((v27 & 1) != 0
    || (v12 = v26,
        v13 = v2[5],
        LOBYTE(v22) = *((_BYTE *)v2 + 32),
        v23 = v13,
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140),
        sub_23E136D98(),
        v26 != 1))
  {
    v15 = v2[9];
    v14 = v2[10];
    __swift_project_boxed_opaque_existential_1(v2 + 6, v15);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, double, double))(v14 + 24))(v7, v15, v14, a1, a2);
    if ((v17 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
      return 0;
    }
    else
    {
      v12 = v16;
      v22 = v8;
      v23 = v9;
      v24 = v10;
      v25 = v11;
      sub_23E136D98();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  }
  return v12;
}

uint64_t sub_23DFDF3AC()
{
  return sub_23E136138();
}

uint64_t sub_23DFDF3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23E135F94();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23E136144();
}

uint64_t sub_23DFDF44C(uint64_t a1, uint64_t a2)
{
  _s17ColorSpectrumViewVwcp(a2, a1);
  return a2;
}

uint64_t sub_23DFDF484@<X0>(double a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23DFDDDBC(a1, v2 + 16, a2);
}

uint64_t sub_23DFDF48C()
{
  return sub_23E136138();
}

uint64_t sub_23DFDF4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E135EA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 64);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23DFDF53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E135EA4() - 8) + 80);
  return sub_23DFDED50(a1, (__int128 *)(v1 + 16), (char *)(v1 + ((v3 + 120) & ~v3)));
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 64);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFDF5BC()
{
  return sub_23DFDF150();
}

unint64_t sub_23DFDF5C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D201E8;
  if (!qword_256D201E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D201C0);
    v2 = sub_23DF89B88(&qword_256D1E110, &qword_256D1E0F8, MEMORY[0x24BDEB950]);
    v3[0] = MEMORY[0x24BDF4760];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D201E8);
  }
  return result;
}

uint64_t sub_23DFDF648()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  return swift_release();
}

uint64_t sub_23DFDF6B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  sub_23E0BE4A0((uint64_t)v8);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_23E135C88();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_23DFDF7C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E136120();
  *a1 = result;
  return result;
}

uint64_t sub_23DFDF7EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E136120();
  *a1 = result;
  return result;
}

uint64_t sub_23DFDF814()
{
  swift_retain();
  return sub_23E13612C();
}

uint64_t sub_23DFDF83C()
{
  swift_retain();
  return sub_23E13612C();
}

uint64_t sub_23DFDF864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFDF8AC(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

uint64_t sub_23DFDF8BC(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

unint64_t sub_23DFDF8D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D20210;
  if (!qword_256D20210)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20178);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20180);
    v2[3] = sub_23DF89B88(&qword_256D20188, &qword_256D20180, MEMORY[0x24BDEC6F8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20210);
  }
  return result;
}

double sub_23DFDF99C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;

  v3 = _s18ColorControlCircleVMa();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  sub_23DFE17B8(v1, (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_23DFE1890((uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  sub_23E136FE4();
  sub_23E136060();
  v8 = v22;
  v9 = v23;
  v10 = v24;
  v11 = v25;
  v12 = v26;
  v13 = v28;
  v14 = v29;
  v15 = v30;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v21 = v27;
  *(_QWORD *)a1 = sub_23DFE18D4;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = 0x3FF0000000000000;
  *(_WORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v13;
  *(_BYTE *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = v16;
  *(_QWORD *)(a1 + 112) = v17;
  *(_BYTE *)(a1 + 120) = v18;
  result = *(double *)&v34;
  *(_OWORD *)(a1 + 128) = v34;
  return result;
}

double sub_23DFDFB38@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  CGFloat v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  double result;
  __int128 v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGFloat MidY;
  CGFloat MidX;
  _QWORD v53[16];
  _OWORD v54[14];
  _BYTE v55[19];
  _OWORD v56[2];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[19];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _OWORD v80[2];
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v4 = sub_23E136498();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1365A0();
  sub_23E135E8C();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v81.origin.x = v9;
  v81.origin.y = v11;
  v81.size.width = v13;
  v81.size.height = v15;
  MidX = CGRectGetMidX(v81);
  v82.origin.x = v9;
  v82.origin.y = v11;
  v82.size.width = v13;
  v82.size.height = v15;
  MidY = CGRectGetMidY(v82);
  sub_23E135E80();
  v17 = v16;
  v19 = v18;
  v20 = v16 * 0.08;
  v21 = v16 * 0.08 * 0.5;
  v83.origin.x = 0.0;
  v83.origin.y = 0.0;
  v83.size.width = v17;
  v83.size.height = v19;
  v84 = CGRectInset(v83, v21, v21);
  y = v84.origin.y;
  x = v84.origin.x;
  height = v84.size.height;
  width = v84.size.width;
  v84.origin.x = 0.0;
  v84.origin.y = 0.0;
  v84.size.width = v17;
  v84.size.height = v19;
  v85 = CGRectInset(v84, v17 * 0.12, v17 * 0.12);
  v45 = v85.origin.y;
  v46 = v85.origin.x;
  v43 = v85.size.height;
  v44 = v85.size.width;
  v85.origin.x = 0.0;
  v85.origin.y = 0.0;
  v85.size.width = v17;
  v85.size.height = v19;
  v86 = CGRectInset(v85, v17 * 0.03 * 0.5, v17 * 0.03 * 0.5);
  v22 = v86.origin.x;
  v23 = v86.origin.y;
  v24 = v86.size.width;
  v25 = v86.size.height;
  v86.origin.x = 0.0;
  v86.origin.y = 0.0;
  v86.size.width = v17;
  v86.size.height = v19;
  v87 = CGRectInset(v86, v17 * 0.25, v17 * 0.25);
  *(double *)v53 = v20;
  *(CGFloat *)&v53[1] = x;
  *(CGFloat *)&v53[2] = y;
  *(CGFloat *)&v53[3] = width;
  *(CGFloat *)&v53[4] = height;
  *(CGFloat *)&v53[5] = v46;
  *(CGFloat *)&v53[6] = v45;
  *(CGFloat *)&v53[7] = v44;
  *(CGFloat *)&v53[8] = v43;
  *(double *)&v53[9] = v17 * 0.03;
  *(CGFloat *)&v53[10] = v22;
  *(CGFloat *)&v53[11] = v23;
  *(CGFloat *)&v53[12] = v24;
  *(CGFloat *)&v53[13] = v25;
  v53[14] = *(_QWORD *)&v87.size.width;
  v53[15] = *(_QWORD *)&v87.size.height;
  sub_23DFDFE64((uint64_t)v53, (uint64_t)v54);
  v78 = v54[12];
  v79 = v54[13];
  v80[0] = *(_OWORD *)v55;
  *(_DWORD *)((char *)v80 + 15) = *(_DWORD *)&v55[15];
  v74 = v54[8];
  v75 = v54[9];
  v76 = v54[10];
  v77 = v54[11];
  v70 = v54[4];
  v71 = v54[5];
  v72 = v54[6];
  v73 = v54[7];
  v66 = v54[0];
  v67 = v54[1];
  v68 = v54[2];
  v69 = v54[3];
  v26 = sub_23E136FE4();
  v28 = v27;
  sub_23DFE013C(a1, (uint64_t)v56);
  v29 = v79;
  *(_OWORD *)(a2 + 192) = v78;
  *(_OWORD *)(a2 + 208) = v29;
  *(_OWORD *)(a2 + 224) = v80[0];
  *(_QWORD *)(a2 + 240) = *(_QWORD *)&v80[1];
  v30 = v75;
  *(_OWORD *)(a2 + 128) = v74;
  *(_OWORD *)(a2 + 144) = v30;
  v31 = v77;
  *(_OWORD *)(a2 + 160) = v76;
  *(_OWORD *)(a2 + 176) = v31;
  v32 = v71;
  *(_OWORD *)(a2 + 64) = v70;
  *(_OWORD *)(a2 + 80) = v32;
  v33 = v73;
  *(_OWORD *)(a2 + 96) = v72;
  *(_OWORD *)(a2 + 112) = v33;
  v34 = v67;
  *(_OWORD *)a2 = v66;
  *(_OWORD *)(a2 + 16) = v34;
  v35 = v69;
  *(_OWORD *)(a2 + 32) = v68;
  *(_OWORD *)(a2 + 48) = v35;
  v36 = MidY;
  *(CGFloat *)(a2 + 248) = MidX;
  *(CGFloat *)(a2 + 256) = v36;
  *(_QWORD *)(a2 + 264) = v26;
  *(_QWORD *)(a2 + 272) = v28;
  v37 = v64;
  *(_OWORD *)(a2 + 408) = v63;
  *(_OWORD *)(a2 + 424) = v37;
  *(_OWORD *)(a2 + 440) = *(_OWORD *)v65;
  *(_DWORD *)(a2 + 455) = *(_DWORD *)&v65[15];
  v38 = v60;
  *(_OWORD *)(a2 + 344) = v59;
  *(_OWORD *)(a2 + 360) = v38;
  v39 = v62;
  *(_OWORD *)(a2 + 376) = v61;
  *(_OWORD *)(a2 + 392) = v39;
  v40 = v56[1];
  *(_OWORD *)(a2 + 280) = v56[0];
  *(_OWORD *)(a2 + 296) = v40;
  result = *(double *)&v57;
  v42 = v58;
  *(_OWORD *)(a2 + 312) = v57;
  *(_OWORD *)(a2 + 328) = v42;
  return result;
}

double sub_23DFDFE64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  double result;
  __int128 v25;
  uint64_t v26;
  char v27;
  _BYTE v28[7];
  char v29;
  int v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int16 v38;
  int v39;
  __int16 v40;
  __int128 v41;
  char v42;
  _BYTE v43[7];
  uint64_t v44;
  char v45;
  _BYTE v46[7];
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[3];
  __int128 v51;
  __int128 v52;
  _OWORD v53[2];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[19];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFE1920(v3, (uint64_t)v8);
  v9 = sub_23E135328();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23DFE1968((uint64_t)v8);
LABEL_6:
    v14 = sub_23E136FE4();
    v16 = v15;
    sub_23DFE04BC(v3, a1, (uint64_t)&v35);
    v33 = v14;
    v34 = v16;
    sub_23DFE1A00((uint64_t)&v33);
    goto LABEL_7;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v8, v9) != *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v8, v9);
  swift_release();
  v11 = sub_23E136FE4();
  v13 = v12;
  sub_23DFE0C4C((uint64_t)v50);
  v29 = v52;
  v27 = v53[0];
  v40 = v31;
  v39 = v30;
  *(_DWORD *)&v43[3] = *(_DWORD *)&v28[3];
  *(_DWORD *)v43 = *(_DWORD *)v28;
  *(_DWORD *)&v46[3] = HIDWORD(v26);
  *(_DWORD *)v46 = *(_DWORD *)((char *)&v26 + 1);
  v33 = v11;
  v34 = v13;
  v35 = *(_QWORD *)&v50[0];
  v36 = *(_OWORD *)((char *)v50 + 8);
  v37 = *(_OWORD *)((char *)&v50[1] + 8);
  v38 = WORD4(v50[2]);
  v41 = v51;
  v42 = v52;
  v44 = *((_QWORD *)&v52 + 1);
  v45 = v53[0];
  v47 = *(_OWORD *)((char *)v53 + 8);
  v48 = *((_QWORD *)&v53[1] + 1);
  v49 = v54;
  sub_23DFE1A0C((uint64_t)&v33);
LABEL_7:
  sub_23DF89340((uint64_t)&v33, (uint64_t)&v32, &qword_256D202E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D202E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D202F0);
  v17 = MEMORY[0x24BDF4750];
  sub_23DF89B88(&qword_256D202F8, &qword_256D202E8, MEMORY[0x24BDF4750]);
  sub_23DF89B88(&qword_256D20300, &qword_256D202F0, v17);
  sub_23E136480();
  v18 = v60;
  *(_OWORD *)(a2 + 192) = v59;
  *(_OWORD *)(a2 + 208) = v18;
  *(_OWORD *)(a2 + 224) = *(_OWORD *)v61;
  *(_DWORD *)(a2 + 239) = *(_DWORD *)&v61[15];
  v19 = v56;
  *(_OWORD *)(a2 + 128) = v55;
  *(_OWORD *)(a2 + 144) = v19;
  v20 = v58;
  *(_OWORD *)(a2 + 160) = v57;
  *(_OWORD *)(a2 + 176) = v20;
  v21 = v53[0];
  *(_OWORD *)(a2 + 64) = v52;
  *(_OWORD *)(a2 + 80) = v21;
  v22 = v54;
  *(_OWORD *)(a2 + 96) = v53[1];
  *(_OWORD *)(a2 + 112) = v22;
  v23 = v50[1];
  *(_OWORD *)a2 = v50[0];
  *(_OWORD *)(a2 + 16) = v23;
  result = *(double *)&v50[2];
  v25 = v51;
  *(_OWORD *)(a2 + 32) = v50[2];
  *(_OWORD *)(a2 + 48) = v25;
  return result;
}

double sub_23DFE013C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  double result;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  _BYTE v22[184];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[19];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(unsigned __int8 *)(a1 + *(int *)(_s18ColorControlCircleVMa() + 24));
  if (v7 != 2)
  {
    if ((v7 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    sub_23DFE19A8((uint64_t)v21);
    goto LABEL_6;
  }
  sub_23DFE1920(a1, (uint64_t)v6);
  v8 = sub_23E135328();
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8);
  sub_23DFE1968((uint64_t)v6);
  if (v9 == 1)
    goto LABEL_5;
LABEL_3:
  v10 = sub_23E136FE4();
  v12 = v11;
  sub_23DFE02F8((uint64_t)v22);
  v21[0] = v10;
  v21[1] = v12;
  sub_23DFE19F8((uint64_t)v21);
LABEL_6:
  sub_23DF89340((uint64_t)v21, (uint64_t)&v20, &qword_256D202C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D202C8);
  sub_23DF89B88(&qword_256D202D0, &qword_256D202C8, MEMORY[0x24BDF4750]);
  sub_23DFE19B4();
  sub_23E136480();
  v13 = v31;
  *(_OWORD *)(a2 + 128) = v30;
  *(_OWORD *)(a2 + 144) = v13;
  *(_OWORD *)(a2 + 160) = *(_OWORD *)v32;
  *(_DWORD *)(a2 + 175) = *(_DWORD *)&v32[15];
  v14 = v27;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v14;
  v15 = v29;
  *(_OWORD *)(a2 + 96) = v28;
  *(_OWORD *)(a2 + 112) = v15;
  v16 = v23;
  *(_OWORD *)a2 = *(_OWORD *)&v22[168];
  *(_OWORD *)(a2 + 16) = v16;
  result = *(double *)&v24;
  v18 = v25;
  *(_OWORD *)(a2 + 32) = v24;
  *(_OWORD *)(a2 + 48) = v18;
  return result;
}

uint64_t sub_23DFE02F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;

  sub_23E136E04();
  v2 = sub_23E136C48();
  sub_23E135DCC();
  v7 = sub_23E136FE4();
  v4 = v3;
  sub_23E136E04();
  v5 = sub_23E136C48();
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v2;
  *(_WORD *)(a1 + 88) = 256;
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_BYTE *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v5;
  *(_WORD *)(a1 + 160) = 256;
  sub_23DFB720C(v8, v9, v10, v11, v12);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DFB720C(v18, v19, v20, v21, v22);
  swift_retain();
  sub_23DFB7374(v18, v19, v20, v21, v22);
  swift_release();
  sub_23DFB7374(v8, v9, v10, v11, v12);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DFE04BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  __int16 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _OWORD v75[2];
  _OWORD v76[9];
  _OWORD v77[2];
  __int128 v78;
  _OWORD v79[8];
  _OWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD v95[3];

  v63 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v60 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v58 - v8;
  v10 = sub_23E135328();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v65 = (char *)&v58 - v15;
  v16 = sub_23E136CC0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = _s18ColorControlCircleVMa();
  v21 = *(int *)(v20 + 20);
  v64 = a1;
  v22 = *(_QWORD *)(a1 + v21);
  v61 = v14;
  v62 = v20;
  if (v22 == 2 || (v22 & 0x10100) != 0x100)
  {
    _s16ColorPickerStateCMa();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v59 = v10;
    v28 = v11;
    v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_23E136D2C();
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BDF3FD0], v16);
    v30 = sub_23E136D14();
    v26 = v28;
    v10 = v59;
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v78 = (unint64_t)v30;
    LOWORD(v79[0]) = 1;
    sub_23DFE1A1C((uint64_t)&v78);
    sub_23DF89340((uint64_t)&v78, (uint64_t)v76, &qword_256D20308);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20310);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20318);
    sub_23DF89B88(&qword_256D20320, &qword_256D20310, MEMORY[0x24BDF4750]);
    sub_23DFE1A28();
  }
  else
  {
    v23 = sub_23E136FE4();
    v25 = v24;
    sub_23DFE0AB4((uint64_t)v79);
    *(_QWORD *)&v78 = v23;
    *((_QWORD *)&v78 + 1) = v25;
    sub_23DFE1C58((uint64_t)&v78);
    sub_23DF89340((uint64_t)&v78, (uint64_t)v76, &qword_256D20308);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20310);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20318);
    sub_23DF89B88(&qword_256D20320, &qword_256D20310, MEMORY[0x24BDF4750]);
    sub_23DFE1A28();
    v26 = v11;
  }
  sub_23E136480();
  v31 = v64;
  sub_23DFE1920(v64, (uint64_t)v9);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v32(v9, 1, v10) == 1)
  {
    sub_23DFE1968((uint64_t)v9);
LABEL_15:
    v40 = 0;
    v41 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v39 = 0;
    v47 = 0;
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v65, v9, v10);
  v33 = *(unsigned __int8 *)(v31 + *(int *)(v62 + 24));
  if (v33 != 2)
  {
    if ((v33 & 1) != 0)
      goto LABEL_9;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v65, v10);
    goto LABEL_15;
  }
  v34 = v31;
  v35 = v60;
  sub_23DFE1920(v34, v60);
  v36 = v32((char *)v35, 1, v10);
  sub_23DFE1968(v35);
  if (v36 == 1)
    goto LABEL_14;
LABEL_9:
  sub_23E136E04();
  v37 = (uint64_t)v61;
  v38 = v65;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v61, v65, v10);
  v39 = sub_23E0A9F3C(v37);
  v40 = v81;
  v41 = v82;
  v42 = v26;
  v43 = v83;
  v44 = v84;
  v45 = v85;
  LOBYTE(v78) = 0;
  LOBYTE(v76[0]) = 1;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v10);
  if (LOBYTE(v76[0]))
    v46 = 256;
  else
    v46 = 0;
  v47 = v46 | v78;
LABEL_16:
  v74 = v94;
  v75[0] = v95[0];
  *(_OWORD *)((char *)v75 + 9) = *(_OWORD *)((char *)v95 + 9);
  v48 = v90;
  v70 = v90;
  v71 = v91;
  v49 = v92;
  v72 = v92;
  v73 = v93;
  v50 = v86;
  v66 = v86;
  v67 = v87;
  v68 = v88;
  v69 = v89;
  v51 = v95[0];
  v76[8] = v94;
  v77[0] = v95[0];
  *(_OWORD *)((char *)v77 + 9) = *(_OWORD *)((char *)v95 + 9);
  v52 = v91;
  v76[4] = v90;
  v76[5] = v91;
  v53 = v93;
  v76[6] = v92;
  v76[7] = v93;
  v54 = v87;
  v55 = v88;
  v76[0] = v86;
  v76[1] = v87;
  v56 = v89;
  v76[2] = v88;
  v76[3] = v89;
  *(_OWORD *)(a3 + 128) = v94;
  *(_OWORD *)(a3 + 144) = v51;
  *(_OWORD *)(a3 + 153) = *(_OWORD *)((char *)v95 + 9);
  *(_OWORD *)(a3 + 64) = v48;
  *(_OWORD *)(a3 + 80) = v52;
  *(_OWORD *)(a3 + 96) = v49;
  *(_OWORD *)(a3 + 112) = v53;
  *(_OWORD *)a3 = v50;
  *(_OWORD *)(a3 + 16) = v54;
  *(_OWORD *)(a3 + 32) = v55;
  *(_OWORD *)(a3 + 48) = v56;
  *(_QWORD *)(a3 + 176) = v40;
  *(_QWORD *)(a3 + 184) = v41;
  *(_QWORD *)(a3 + 192) = v43;
  *(_QWORD *)(a3 + 200) = v44;
  *(_QWORD *)(a3 + 208) = v45;
  *(_QWORD *)(a3 + 216) = v39;
  *(_WORD *)(a3 + 224) = v47;
  sub_23DFE1B68((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23DFE1A8C);
  sub_23DFE1B10(v40, v41, v43, v44, v45, v39);
  sub_23DFE1B3C(v40, v41, v43, v44, v45, v39);
  v79[7] = v74;
  v80[0] = v75[0];
  *(_OWORD *)((char *)v80 + 9) = *(_OWORD *)((char *)v75 + 9);
  v79[3] = v70;
  v79[4] = v71;
  v79[5] = v72;
  v79[6] = v73;
  v78 = v66;
  v79[0] = v67;
  v79[1] = v68;
  v79[2] = v69;
  return sub_23DFE1B68((uint64_t)&v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23DFE1BD4);
}

uint64_t sub_23DFE0AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23DFE1C60((uint64_t)&v19);
  v2 = v19;
  v18 = v20;
  v3 = v21;
  v4 = v22;
  sub_23E136E04();
  v5 = v23;
  v6 = v24;
  v7 = v25;
  v8 = v26;
  v9 = v27;
  sub_23E135DCC();
  v10 = v28;
  v11 = v30;
  v12 = v31;
  v13 = v32;
  v14 = sub_23E136C24();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_OWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = 256;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_BYTE *)(a1 + 80) = v9;
  v16 = v29;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v12;
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = KeyPath;
  *(_QWORD *)(a1 + 136) = v14;
  *(_QWORD *)(a1 + 144) = 0x3FB999999999999ALL;
  swift_bridgeObjectRetain();
  sub_23DFB720C(v5, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23DFB7374(v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_23DFE0C4C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  double result;
  double v17[3];
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_23E136CC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFE0DE0((uint64_t)&v18);
  v6 = v18;
  *(_OWORD *)v17 = v19;
  v7 = v20;
  v8 = v21;
  sub_23E136CD8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v9 = sub_23E136D14();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23E136FE4();
  sub_23E135E5C();
  v10 = v22;
  LOBYTE(v5) = v23;
  v11 = v24;
  LOBYTE(v3) = v25;
  v12 = v26;
  v13 = v27;
  v14 = sub_23E136C48();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a1 = v6;
  result = v17[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v17;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_WORD *)(a1 + 40) = 256;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = (_BYTE)v5;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v3;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = KeyPath;
  *(_QWORD *)(a1 + 112) = v14;
  return result;
}

double sub_23DFE0DE0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v2 = sub_23E136BD0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *MEMORY[0x24BDF3C28];
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 0.859, 0.824, 1.0, 1.0);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 0.918, 0.918, 0.918, 1.0);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 1.0, 0.878, 0.663, 1.0);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 1.0, 0.651, 0.651, 1.0);
  __swift_instantiateConcreteTypeFromMangledName(qword_256D20218);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23E13AE20;
  swift_retain();
  *(_QWORD *)(v8 + 32) = sub_23E136F3C();
  *(_QWORD *)(v8 + 40) = v9;
  swift_retain();
  *(_QWORD *)(v8 + 48) = sub_23E136F3C();
  *(_QWORD *)(v8 + 56) = v10;
  swift_retain();
  *(_QWORD *)(v8 + 64) = sub_23E136F3C();
  *(_QWORD *)(v8 + 72) = v11;
  swift_retain();
  *(_QWORD *)(v8 + 80) = sub_23E136F3C();
  *(_QWORD *)(v8 + 88) = v12;
  MEMORY[0x24264B818](v8);
  sub_23E135F10();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = *(double *)&v16;
  v14 = v17;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 32) = v18;
  return result;
}

uint64_t *sub_23DFE1018(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *(_DWORD *)(v13 + 7) = *(_DWORD *)(v14 + 7);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  }
  return a1;
}

uint64_t _s10ColorStateVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

char *sub_23DFE1180(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
  a1[v10] = a2[v10];
  return a1;
}

char *sub_23DFE1254(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  *(_DWORD *)(v13 + 7) = *(_DWORD *)(v14 + 7);
  *(_QWORD *)v13 = v15;
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_23DFE1378(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_DWORD *)(v11 + 7) = *(_DWORD *)(v12 + 7);
  a1[v10] = a2[v10];
  return a1;
}

char *sub_23DFE144C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_DWORD *)(v14 + 7) = *(_DWORD *)(v15 + 7);
  a1[v13] = a2[v13];
  return a1;
}

uint64_t sub_23DFE156C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFE1578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23DFE1614()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFE1620(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t _s18ColorControlCircleVMa()
{
  uint64_t result;

  result = qword_256D20278;
  if (!qword_256D20278)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DFE16D8()
{
  unint64_t v0;

  sub_23DFE1754();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23DFE1754()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D20288[0])
  {
    sub_23E135328();
    v0 = sub_23E1374A0();
    if (!v1)
      atomic_store(v0, qword_256D20288);
  }
}

uint64_t sub_23DFE17A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFE17B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s18ColorControlCircleVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFE17FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s18ColorControlCircleVMa() - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_23E135328();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23DFE1890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s18ColorControlCircleVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_23DFE18D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s18ColorControlCircleVMa() - 8) + 80);
  return sub_23DFDFB38(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_23DFE1920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFE1968(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DFE19A8(uint64_t result)
{
  *(_BYTE *)(result + 178) = 1;
  return result;
}

unint64_t sub_23DFE19B4()
{
  unint64_t result;

  result = qword_256D202D8;
  if (!qword_256D202D8)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4428], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_256D202D8);
  }
  return result;
}

uint64_t sub_23DFE19F8(uint64_t result)
{
  *(_BYTE *)(result + 178) = 0;
  return result;
}

uint64_t sub_23DFE1A00(uint64_t result)
{
  *(_BYTE *)(result + 242) = 1;
  return result;
}

uint64_t sub_23DFE1A0C(uint64_t result)
{
  *(_BYTE *)(result + 242) = 0;
  return result;
}

uint64_t sub_23DFE1A1C(uint64_t result)
{
  *(_BYTE *)(result + 168) = 1;
  return result;
}

unint64_t sub_23DFE1A28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20328;
  if (!qword_256D20328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20318);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20328);
  }
  return result;
}

uint64_t sub_23DFE1A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_23DFB720C(a9, a10, a11, a12, a13);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return swift_retain();
}

uint64_t sub_23DFE1B10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  if (a6)
  {
    sub_23DFB720C(result, a2, a3, a4, a5);
    return swift_retain();
  }
  return result;
}

uint64_t sub_23DFE1B3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  if (a6)
  {
    sub_23DFB7374(result, a2, a3, a4, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_23DFE1B68(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 168);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    v4);
  return a1;
}

uint64_t sub_23DFE1BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_23DFB7374(a9, a10, a11, a12, a13);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_23DFE1C58(uint64_t result)
{
  *(_BYTE *)(result + 168) = 0;
  return result;
}

double sub_23DFE1C60@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v2 = sub_23E136BD0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *MEMORY[0x24BDF3C28];
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 1.0, 0.61, 0.2, 1.0);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 0.92, 0.878, 0.763, 1.0);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 0.92, 0.94, 1.0, 1.0);
  v7(v4, v5, v2);
  MEMORY[0x24264B560](v4, 0.77, 0.85, 1.0, 1.0);
  __swift_instantiateConcreteTypeFromMangledName(qword_256D20218);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23E13AE20;
  swift_retain();
  *(_QWORD *)(v8 + 32) = sub_23E136F3C();
  *(_QWORD *)(v8 + 40) = v9;
  swift_retain();
  *(_QWORD *)(v8 + 48) = sub_23E136F3C();
  *(_QWORD *)(v8 + 56) = v10;
  swift_retain();
  *(_QWORD *)(v8 + 64) = sub_23E136F3C();
  *(_QWORD *)(v8 + 72) = v11;
  swift_retain();
  *(_QWORD *)(v8 + 80) = sub_23E136F3C();
  *(_QWORD *)(v8 + 88) = v12;
  MEMORY[0x24264B818](v8);
  sub_23E135F10();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = *(double *)&v16;
  v14 = v17;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 32) = v18;
  return result;
}

unint64_t sub_23DFE1EB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20330;
  if (!qword_256D20330)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20338);
    v2[0] = sub_23DFE1F20();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20330);
  }
  return result;
}

unint64_t sub_23DFE1F20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20340;
  if (!qword_256D20340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20348);
    v2[0] = sub_23DF89B88(&qword_256D20350, qword_256D20358, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20340);
  }
  return result;
}

ValueMetadata *_s10GarageDoorVMa()
{
  return &_s10GarageDoorVN;
}

uint64_t sub_23DFE1FB4@<X0>(char *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = v14 + *(int *)(v10 + 48);
  v16 = *MEMORY[0x24BE4E280];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  *(_QWORD *)(v15 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_23DFE21E8(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = (int *)type metadata accessor for AccessoryControlInfo(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v46 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v46);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1356DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E1359AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v48 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE4E280], v9);
  v47 = type metadata accessor for HAPControlSolver.Source();
  v49 = a1;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23DF73DD0((uint64_t)v15);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v44 = v16;
    v45 = v17;
    v20 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v48, v15, v16);
    type metadata accessor for AccessoryControlSolver.HAP();
    swift_storeEnumTagMultiPayload();
    v22 = v49;
    v21 = v50;
    sub_23E12C404(v49, v20, v50);
    sub_23DF73E54((uint64_t)v6, type metadata accessor for ControlTextModifier.Config);
    sub_23E135988();
    v23 = v21;
    sub_23DF73E10(v21, (uint64_t)&v4[v2[5]], type metadata accessor for AccessoryControlInfo.State);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject();
    v46 = xmmword_23E138050;
    *(_OWORD *)(v26 + 16) = xmmword_23E138050;
    sub_23DF73E10(v22, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v27 = v47;
    v28 = *(_BYTE *)(v22 + *(int *)(v47 + 48));
    v29 = (uint64_t *)(v22 + *(int *)(v47 + 52));
    v30 = *v29;
    v31 = v29[1];
    v32 = &v4[v2[7]];
    v33 = v2[9];
    *(_QWORD *)&v4[v2[11]] = v26;
    v4[v2[6]] = v28;
    *(_QWORD *)v32 = v30;
    *((_QWORD *)v32 + 1) = v31;
    *(_WORD *)&v4[v2[8]] = 1027;
    v4[v33] = 12;
    v4[v2[10]] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v34 = type metadata accessor for AccessoryControlGroup(0);
    v35 = *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80);
    v36 = (v35 + 32) & ~v35;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v46;
    v37 = v19 + v36;
    sub_23DF73E10((uint64_t)v4, v37, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v38 = (uint64_t *)(v22 + *(int *)(v27 + 28));
    v39 = *v38;
    v40 = v38[1];
    v41 = (_QWORD *)(v37 + *(int *)(v34 + 24));
    v42 = (_QWORD *)(v37 + *(int *)(v34 + 20));
    *v42 = v39;
    v42[1] = v40;
    *v41 = 0;
    v41[1] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v4, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54(v23, type metadata accessor for AccessoryControlInfo.State);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v20, v44);
  }
  return v19;
}

_QWORD *sub_23DFE2628(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v41;
  char v42;
  char *v43;
  _QWORD *v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a3[6];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *v8 = *(_QWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(_QWORD *)((char *)a2 + v7 + 24);
    v8[2] = *(_QWORD *)((char *)a2 + v7 + 16);
    v8[3] = v11;
    v12 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = &v9[v12];
    v15 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v22 = *((_QWORD *)v14 + 1);
      *v13 = *(_QWORD *)v14;
      v13[1] = v22;
      if (EnumCaseMultiPayload == 1)
      {
        v23 = *((_QWORD *)v14 + 3);
        v13[2] = *((_QWORD *)v14 + 2);
        v13[3] = v23;
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v41 = &v14[v24];
        v43 = (char *)v13 + v24;
        v25 = sub_23E135910();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v43, v41, v25);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v13 + *(int *)(v27 + 48)) = *(_QWORD *)&v14[*(int *)(v27 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v28 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)((char *)a2 + v28);
    v32 = *((_QWORD *)v30 + 1);
    v33 = *((_QWORD *)v30 + 2);
    v34 = *((_QWORD *)v30 + 3);
    v35 = *((_QWORD *)v30 + 4);
    v36 = *((_QWORD *)v30 + 5);
    v37 = *((_QWORD *)v30 + 6);
    v38 = *((_QWORD *)v30 + 7);
    v44 = a1;
    v39 = v30[64];
    v42 = v30[65];
    sub_23DF98590(v31, v32, v33, v34, v35, v36, v37, v38, v39, v42);
    *(_QWORD *)v29 = v31;
    *((_QWORD *)v29 + 1) = v32;
    *((_QWORD *)v29 + 2) = v33;
    *((_QWORD *)v29 + 3) = v34;
    *((_QWORD *)v29 + 4) = v35;
    *((_QWORD *)v29 + 5) = v36;
    *((_QWORD *)v29 + 6) = v37;
    *((_QWORD *)v29 + 7) = v38;
    v29[64] = v39;
    v20 = v44;
    v29[65] = v42;
  }
  return v20;
}

uint64_t sub_23DFE2878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v10 = a1 + *(int *)(a2 + 32);
  return sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
}

_OWORD *sub_23DFE2994(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v38;
  char v39;
  char *v40;
  _OWORD *v41;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_QWORD *)((char *)a2 + v6 + 24);
  v7[2] = *(_QWORD *)((char *)a2 + v6 + 16);
  v7[3] = v10;
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_QWORD *)((char *)v7 + v11);
  v13 = &v8[v11];
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = *((_QWORD *)v13 + 1);
    *v12 = *(_QWORD *)v13;
    v12[1] = v19;
    if (EnumCaseMultiPayload == 1)
    {
      v20 = *((_QWORD *)v13 + 3);
      v12[2] = *((_QWORD *)v13 + 2);
      v12[3] = v20;
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v38 = &v13[v21];
      v40 = (char *)v12 + v21;
      v22 = sub_23E135910();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v40, v38, v22);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v12 + *(int *)(v24 + 48)) = *(_QWORD *)&v13[*(int *)(v24 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v25 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  v29 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v27 + 2);
  v31 = *((_QWORD *)v27 + 3);
  v32 = *((_QWORD *)v27 + 4);
  v33 = *((_QWORD *)v27 + 5);
  v34 = *((_QWORD *)v27 + 6);
  v35 = *((_QWORD *)v27 + 7);
  v41 = a1;
  v36 = v27[64];
  v39 = v27[65];
  sub_23DF98590(v28, v29, v30, v31, v32, v33, v34, v35, v36, v39);
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  *((_QWORD *)v26 + 2) = v30;
  *((_QWORD *)v26 + 3) = v31;
  *((_QWORD *)v26 + 4) = v32;
  *((_QWORD *)v26 + 5) = v33;
  *((_QWORD *)v26 + 6) = v34;
  *((_QWORD *)v26 + 7) = v35;
  v26[64] = v36;
  v26[65] = v39;
  return v41;
}

_QWORD *sub_23DFE2BB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char v53;
  char *v54;
  _QWORD *v55;
  char *v56;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v10 = (char *)v7 + v9;
  v11 = &v8[v9];
  v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v52 = &v11[v20];
        v54 = &v10[v20];
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v54, v52, v21);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v10[*(int *)(v23 + 48)] = *(_QWORD *)&v11[*(int *)(v23 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  if (v16)
  {
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v19 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    if (v19 == 1)
    {
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      v47 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v56 = &v10[v47];
      v48 = &v11[v47];
      v49 = sub_23E135910();
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v56, v48, v49);
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&v10[*(int *)(v51 + 48)] = *(_QWORD *)&v11[*(int *)(v51 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  v29 = *((_QWORD *)v26 + 2);
  v30 = *((_QWORD *)v26 + 3);
  v31 = *((_QWORD *)v26 + 4);
  v32 = *((_QWORD *)v26 + 5);
  v33 = *((_QWORD *)v26 + 6);
  v34 = *((_QWORD *)v26 + 7);
  v55 = a1;
  v35 = v26[64];
  v53 = v26[65];
  sub_23DF98590(*(_QWORD *)v26, v28, v29, v30, v31, v32, v33, v34, v35, v53);
  v36 = *(_QWORD *)v25;
  v37 = *((_QWORD *)v25 + 1);
  v38 = *((_QWORD *)v25 + 2);
  v39 = *((_QWORD *)v25 + 3);
  v40 = *((_QWORD *)v25 + 4);
  v41 = *((_QWORD *)v25 + 5);
  v42 = *((_QWORD *)v25 + 6);
  v43 = *((_QWORD *)v25 + 7);
  v44 = v25[64];
  v45 = v25[65];
  *(_QWORD *)v25 = v27;
  *((_QWORD *)v25 + 1) = v28;
  *((_QWORD *)v25 + 2) = v29;
  *((_QWORD *)v25 + 3) = v30;
  *((_QWORD *)v25 + 4) = v31;
  *((_QWORD *)v25 + 5) = v32;
  *((_QWORD *)v25 + 6) = v33;
  *((_QWORD *)v25 + 7) = v34;
  v25[64] = v35;
  v25[65] = v53;
  sub_23DF985F0(v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  return v55;
}

_OWORD *sub_23DFE2F44(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v11 = (_OWORD *)((char *)v7 + v10);
  v12 = &v8[v10];
  v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v11, v12, *(_QWORD *)(v14 + 64));
    }
    else
    {
      *v11 = *(_OWORD *)v12;
      v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v17 = (char *)v11 + v16;
      v18 = &v12[v16];
      v19 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v11 + *(int *)(v20 + 48)) = *(_QWORD *)&v12[*(int *)(v20 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v21 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  *((_WORD *)v22 + 32) = *((_WORD *)v23 + 32);
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  return a1;
}

_QWORD *sub_23DFE30D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = *((_QWORD *)v8 + 3);
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (char *)v7 + v11;
  v13 = &v8[v11];
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
      if (!swift_getEnumCaseMultiPayload())
      {
        *(_OWORD *)v12 = *(_OWORD *)v13;
        v43 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v44 = &v12[v43];
        v45 = &v13[v43];
        v46 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v12[*(int *)(v47 + 48)] = *(_QWORD *)&v13[*(int *)(v47 + 48)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v19 = *(_QWORD *)(v15 + 64);
      goto LABEL_8;
    }
    sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v12, v13, v19);
    goto LABEL_14;
  }
  if (v18)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(v15 + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v21 = &v12[v20];
    v22 = &v13[v20];
    v23 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)&v12[*(int *)(v24 + 48)] = *(_QWORD *)&v13[*(int *)(v24 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  v25 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = v27[64];
  v29 = v27[65];
  v30 = *(_QWORD *)v26;
  v31 = *((_QWORD *)v26 + 1);
  v32 = *((_QWORD *)v26 + 2);
  v33 = *((_QWORD *)v26 + 3);
  v34 = *((_QWORD *)v26 + 4);
  v35 = *((_QWORD *)v26 + 5);
  v36 = *((_QWORD *)v26 + 6);
  v37 = *((_QWORD *)v26 + 7);
  v38 = v26[64];
  v39 = v26[65];
  v40 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v40;
  v41 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v41;
  v26[64] = v28;
  v26[65] = v29;
  sub_23DF985F0(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  return a1;
}

uint64_t sub_23DFE337C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFE338C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for HeaderView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D20418);
}

uint64_t sub_23DFE33B0()
{
  return sub_23DFEA268();
}

uint64_t *sub_23DFE33BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v41;
  char v42;
  char *v43;
  uint64_t *v44;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(uint64_t *)((char *)a2 + v7 + 24);
    v8[2] = *(uint64_t *)((char *)a2 + v7 + 16);
    v8[3] = v11;
    v12 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = &v9[v12];
    v15 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v22 = *((_QWORD *)v14 + 1);
      *v13 = *(_QWORD *)v14;
      v13[1] = v22;
      if (EnumCaseMultiPayload == 1)
      {
        v23 = *((_QWORD *)v14 + 3);
        v13[2] = *((_QWORD *)v14 + 2);
        v13[3] = v23;
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v41 = &v14[v24];
        v43 = (char *)v13 + v24;
        v25 = sub_23E135910();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v43, v41, v25);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v13 + *(int *)(v27 + 48)) = *(_QWORD *)&v14[*(int *)(v27 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v28 = *(int *)(a3 + 24);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)v30;
    v32 = *((_QWORD *)v30 + 1);
    v33 = *((_QWORD *)v30 + 2);
    v34 = *((_QWORD *)v30 + 3);
    v35 = *((_QWORD *)v30 + 4);
    v36 = *((_QWORD *)v30 + 5);
    v37 = *((_QWORD *)v30 + 6);
    v38 = *((_QWORD *)v30 + 7);
    v44 = a1;
    v39 = v30[64];
    v42 = v30[65];
    sub_23DF98590(*(_QWORD *)v30, v32, v33, v34, v35, v36, v37, v38, v39, v42);
    *(_QWORD *)v29 = v31;
    *((_QWORD *)v29 + 1) = v32;
    *((_QWORD *)v29 + 2) = v33;
    *((_QWORD *)v29 + 3) = v34;
    *((_QWORD *)v29 + 4) = v35;
    *((_QWORD *)v29 + 5) = v36;
    *((_QWORD *)v29 + 6) = v37;
    *((_QWORD *)v29 + 7) = v38;
    v29[64] = v39;
    v20 = v44;
    v29[65] = v42;
  }
  return v20;
}

uint64_t sub_23DFE3604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v10 = a1 + *(int *)(a2 + 24);
  return sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
}

_QWORD *sub_23DFE3720(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v38;
  char v39;
  char *v40;
  _QWORD *v41;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_QWORD *)((char *)a2 + v6 + 24);
  v7[2] = *(_QWORD *)((char *)a2 + v6 + 16);
  v7[3] = v10;
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_QWORD *)((char *)v7 + v11);
  v13 = &v8[v11];
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = *((_QWORD *)v13 + 1);
    *v12 = *(_QWORD *)v13;
    v12[1] = v19;
    if (EnumCaseMultiPayload == 1)
    {
      v20 = *((_QWORD *)v13 + 3);
      v12[2] = *((_QWORD *)v13 + 2);
      v12[3] = v20;
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v38 = &v13[v21];
      v40 = (char *)v12 + v21;
      v22 = sub_23E135910();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v40, v38, v22);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v12 + *(int *)(v24 + 48)) = *(_QWORD *)&v13[*(int *)(v24 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v27 + 2);
  v31 = *((_QWORD *)v27 + 3);
  v32 = *((_QWORD *)v27 + 4);
  v33 = *((_QWORD *)v27 + 5);
  v34 = *((_QWORD *)v27 + 6);
  v35 = *((_QWORD *)v27 + 7);
  v41 = a1;
  v36 = v27[64];
  v39 = v27[65];
  sub_23DF98590(*(_QWORD *)v27, v29, v30, v31, v32, v33, v34, v35, v36, v39);
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  *((_QWORD *)v26 + 2) = v30;
  *((_QWORD *)v26 + 3) = v31;
  *((_QWORD *)v26 + 4) = v32;
  *((_QWORD *)v26 + 5) = v33;
  *((_QWORD *)v26 + 6) = v34;
  *((_QWORD *)v26 + 7) = v35;
  v26[64] = v36;
  v26[65] = v39;
  return v41;
}

_QWORD *sub_23DFE3938(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char v53;
  char *v54;
  _QWORD *v55;
  char *v56;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v10 = (char *)v7 + v9;
  v11 = &v8[v9];
  v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v52 = &v11[v20];
        v54 = &v10[v20];
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v54, v52, v21);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v10[*(int *)(v23 + 48)] = *(_QWORD *)&v11[*(int *)(v23 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  if (v16)
  {
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v19 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    if (v19 == 1)
    {
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      v47 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v56 = &v10[v47];
      v48 = &v11[v47];
      v49 = sub_23E135910();
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v56, v48, v49);
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&v10[*(int *)(v51 + 48)] = *(_QWORD *)&v11[*(int *)(v51 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  v29 = *((_QWORD *)v26 + 2);
  v30 = *((_QWORD *)v26 + 3);
  v31 = *((_QWORD *)v26 + 4);
  v32 = *((_QWORD *)v26 + 5);
  v33 = *((_QWORD *)v26 + 6);
  v34 = *((_QWORD *)v26 + 7);
  v55 = a1;
  v35 = v26[64];
  v53 = v26[65];
  sub_23DF98590(*(_QWORD *)v26, v28, v29, v30, v31, v32, v33, v34, v35, v53);
  v36 = *(_QWORD *)v25;
  v37 = *((_QWORD *)v25 + 1);
  v38 = *((_QWORD *)v25 + 2);
  v39 = *((_QWORD *)v25 + 3);
  v40 = *((_QWORD *)v25 + 4);
  v41 = *((_QWORD *)v25 + 5);
  v42 = *((_QWORD *)v25 + 6);
  v43 = *((_QWORD *)v25 + 7);
  v44 = v25[64];
  v45 = v25[65];
  *(_QWORD *)v25 = v27;
  *((_QWORD *)v25 + 1) = v28;
  *((_QWORD *)v25 + 2) = v29;
  *((_QWORD *)v25 + 3) = v30;
  *((_QWORD *)v25 + 4) = v31;
  *((_QWORD *)v25 + 5) = v32;
  *((_QWORD *)v25 + 6) = v33;
  *((_QWORD *)v25 + 7) = v34;
  v25[64] = v35;
  v25[65] = v53;
  sub_23DF985F0(v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  return v55;
}

_QWORD *sub_23DFE3CB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v11 = (_OWORD *)((char *)v7 + v10);
  v12 = &v8[v10];
  v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v11, v12, *(_QWORD *)(v14 + 64));
    }
    else
    {
      *v11 = *(_OWORD *)v12;
      v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v17 = (char *)v11 + v16;
      v18 = &v12[v16];
      v19 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v11 + *(int *)(v20 + 48)) = *(_QWORD *)&v12[*(int *)(v20 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  *((_WORD *)v22 + 32) = *((_WORD *)v23 + 32);
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  return a1;
}

_QWORD *sub_23DFE3E3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = *((_QWORD *)v8 + 3);
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (char *)v7 + v11;
  v13 = &v8[v11];
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
      if (!swift_getEnumCaseMultiPayload())
      {
        *(_OWORD *)v12 = *(_OWORD *)v13;
        v43 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v44 = &v12[v43];
        v45 = &v13[v43];
        v46 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v12[*(int *)(v47 + 48)] = *(_QWORD *)&v13[*(int *)(v47 + 48)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v19 = *(_QWORD *)(v15 + 64);
      goto LABEL_8;
    }
    sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v12, v13, v19);
    goto LABEL_14;
  }
  if (v18)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(v15 + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v21 = &v12[v20];
    v22 = &v13[v20];
    v23 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)&v12[*(int *)(v24 + 48)] = *(_QWORD *)&v13[*(int *)(v24 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = v27[64];
  v29 = v27[65];
  v30 = *(_QWORD *)v26;
  v31 = *((_QWORD *)v26 + 1);
  v32 = *((_QWORD *)v26 + 2);
  v33 = *((_QWORD *)v26 + 3);
  v34 = *((_QWORD *)v26 + 4);
  v35 = *((_QWORD *)v26 + 5);
  v36 = *((_QWORD *)v26 + 6);
  v37 = *((_QWORD *)v26 + 7);
  v38 = v26[64];
  v39 = v26[65];
  v40 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v40;
  v41 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v41;
  v26[64] = v28;
  v26[65] = v29;
  sub_23DF985F0(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  return a1;
}

uint64_t sub_23DFE40D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFE40E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 65);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23DFE4160()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFE416C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 65) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for HeaderView.HorizontalSheetHeader(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D204B8);
}

uint64_t sub_23DFE4200()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23DFE4280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFE4290()
{
  return sub_23E136174();
}

uint64_t sub_23DFE42B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E818);
  MEMORY[0x24BDAC7A8](v2);
  sub_23DF89C1C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256D1E818);
  return sub_23E136180();
}

uint64_t sub_23DFE4330@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  int *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t KeyPath;
  char *v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[72];
  _OWORD v38[4];
  __int16 v39;

  v36 = a2;
  v3 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for HeaderView.TitleDescriptionHeader(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20518);
  v9 = MEMORY[0x24BDAC7A8](v35);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v32 = (uint64_t)&v32 - v12;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20520);
  MEMORY[0x24BDAC7A8](v33);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for HeaderView.CardHeaderView(0);
  MEMORY[0x24BDAC7A8](v34);
  v16 = (uint64_t *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (int *)type metadata accessor for HeaderView(0);
  v18 = (char *)a1 + v17[8];
  v19 = *((_OWORD *)v18 + 3);
  v38[2] = *((_OWORD *)v18 + 2);
  v38[3] = v19;
  v39 = *((_WORD *)v18 + 32);
  v20 = *((_OWORD *)v18 + 1);
  v38[0] = *(_OWORD *)v18;
  v38[1] = v20;
  sub_23DF98EC8((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v37);
  sub_23DF98EC8((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v21 = *a1;
  v22 = a1[1];
  v23 = (uint64_t)a1 + v17[6];
  if (v37[1] == 1)
  {
    sub_23DF73E10(v23, (uint64_t)v16 + *(int *)(v34 + 24), type metadata accessor for AccessoryControlsHeaderConfig);
    *v16 = v21;
    v16[1] = v22;
    sub_23DF73E10((uint64_t)v16, (uint64_t)v14, type metadata accessor for HeaderView.CardHeaderView);
    swift_storeEnumTagMultiPayload();
    sub_23DF73F28(&qword_256D20528, type metadata accessor for HeaderView.CardHeaderView, (uint64_t)&unk_23E13B220);
    sub_23DFE8CB8();
    sub_23E136480();
    return sub_23DF73E54((uint64_t)v16, type metadata accessor for HeaderView.CardHeaderView);
  }
  else
  {
    sub_23DF73E10(v23, (uint64_t)v5, type metadata accessor for AccessoryControlsHeaderConfig);
    v25 = *((_BYTE *)a1 + v17[7]);
    KeyPath = swift_getKeyPath();
    *v8 = v21;
    v8[1] = v22;
    sub_23DF89384((uint64_t)v5, (uint64_t)v8 + v6[6], type metadata accessor for AccessoryControlsHeaderConfig);
    *((_BYTE *)v8 + v6[7]) = v25;
    v27 = (char *)v8 + v6[8];
    *(_QWORD *)v27 = KeyPath;
    v27[8] = 0;
    v28 = sub_23E136738();
    v29 = sub_23E136000();
    sub_23DF73E10((uint64_t)v8, (uint64_t)v11, type metadata accessor for HeaderView.TitleDescriptionHeader);
    v30 = &v11[*(int *)(v35 + 36)];
    *(_QWORD *)v30 = v29;
    v30[8] = v28;
    sub_23DF73E54((uint64_t)v8, type metadata accessor for HeaderView.TitleDescriptionHeader);
    v31 = v32;
    sub_23DF89340((uint64_t)v11, v32, &qword_256D20518);
    sub_23DF89C1C(v31, (uint64_t)v14, &qword_256D20518);
    swift_storeEnumTagMultiPayload();
    sub_23DF73F28(&qword_256D20528, type metadata accessor for HeaderView.CardHeaderView, (uint64_t)&unk_23E13B220);
    sub_23DFE8CB8();
    sub_23E136480();
    return sub_23DF89C7C(v31, &qword_256D20518);
  }
}

uint64_t sub_23DFE4720@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v16;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20508);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFE4330(v2, (uint64_t)v6);
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v7 = sub_23E1360CC();
  v9 = v8;
  v10 = *v2;
  v11 = sub_23E1360CC();
  v13 = v12;
  sub_23DF89C1C((uint64_t)v6, a1, &qword_256D20508);
  v14 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20510) + 36));
  *v14 = v7;
  v14[1] = v9;
  v14[2] = v11;
  v14[3] = v13;
  v14[4] = v10;
  return sub_23DF89C7C((uint64_t)v6, &qword_256D20508);
}

double sub_23DFE4840@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  double v13;
  double v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  double result;
  __int128 v25;
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v3 = type metadata accessor for HeaderView.TitleDescriptionHeader(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)(v1 + *(int *)(v6 + 24));
  v9 = v1 + *(int *)(v6 + 32);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_23DF89F20(*(_QWORD *)v9, v11);
  v12 = sub_23DF9CB84(v10, v11);
  sub_23DF8A078(v10, v11);
  LOBYTE(v26[0]) = 0;
  v13 = sub_23DFE88E8(v8, (unsigned __int8 *)v26, v12);
  sub_23DF89F20(v10, v11);
  v14 = sub_23DF9CB84(v10, v11);
  sub_23DF8A078(v10, v11);
  LOBYTE(v26[0]) = 0;
  v15 = sub_23DFE8AA0(v8, (unsigned __int8 *)v26, v14);
  sub_23DF73E10(v1, (uint64_t)v7, type metadata accessor for HeaderView.TitleDescriptionHeader);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = (v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  sub_23DF89384((uint64_t)v7, v18 + v16, type metadata accessor for HeaderView.TitleDescriptionHeader);
  *(double *)(v18 + v17) = v15;
  *(double *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v13;
  v19 = sub_23E136FE4();
  sub_23E04C5D0(0.0, 1, 0.0, 1, 0.0, 1, v13, 0, (uint64_t)v26, 0.0, 1, v15, 0, v19, v20, (uint64_t)sub_23DFEB320, v18);
  swift_release();
  v21 = v30;
  a1[4] = v29;
  a1[5] = v21;
  v22 = v32;
  a1[6] = v31;
  a1[7] = v22;
  v23 = v26[1];
  *a1 = v26[0];
  a1[1] = v23;
  result = *(double *)&v27;
  v25 = v28;
  a1[2] = v27;
  a1[3] = v25;
  return result;
}

uint64_t sub_23DFE4A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t);
  id v34;
  id v35;
  double v36;
  double v37;
  uint64_t v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;

  v87 = a2;
  v88 = a1;
  v99 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20858);
  MEMORY[0x24BDAC7A8](v8);
  v97 = (uint64_t *)((char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20860);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  MEMORY[0x24BDAC7A8](v11);
  v89 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for HeaderView.TitleDescriptionHeader.Content(0);
  MEMORY[0x24BDAC7A8](v91);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20868);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20870);
  MEMORY[0x24BDAC7A8](v94);
  v93 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20878);
  MEMORY[0x24BDAC7A8](v95);
  v86 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E13684C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135E80();
  v23 = v22 - *(double *)(a2 + 8);
  if (v23 > a4)
    v23 = a4;
  if (v23 > a5)
    v24 = v23;
  else
    v24 = a5;
  v25 = (v24 - a5) / (a4 - a5);
  v26 = *MEMORY[0x24BDF18F0];
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v27(v21, v26, v18);
  v28 = (void *)objc_opt_self();
  v29 = sub_23E10C88C((uint64_t)v21);
  v30 = objc_msgSend(v28, sel_preferredFontForTextStyle_, v29);

  objc_msgSend(v30, sel_pointSize);
  v32 = v31;

  v33 = *(void (**)(char *, uint64_t))(v19 + 8);
  v33(v21, v18);
  v27(v21, *MEMORY[0x24BDF1880], v18);
  v34 = sub_23E10C88C((uint64_t)v21);
  v35 = objc_msgSend(v28, sel_preferredFontForTextStyle_, v34);

  objc_msgSend(v35, sel_pointSize);
  v37 = v36;

  v38 = (uint64_t)v86;
  v33(v21, v18);
  v27(v21, v26, v18);
  v39 = sub_23E10C88C((uint64_t)v21);
  v40 = objc_msgSend(v28, sel_preferredFontForTextStyle_, v39);

  objc_msgSend(v40, sel_pointSize);
  v42 = v41;

  v33(v21, v18);
  v43 = 1.0 - v25;
  v44 = type metadata accessor for HeaderView.TitleDescriptionHeader(0);
  v45 = v87;
  v46 = v89;
  sub_23DF73E10(v87 + *(int *)(v44 + 24), v89, type metadata accessor for AccessoryControlsHeaderConfig);
  KeyPath = swift_getKeyPath();
  sub_23DF89384(v46, (uint64_t)v14, type metadata accessor for AccessoryControlsHeaderConfig);
  v48 = v91;
  *(double *)&v14[*(int *)(v91 + 20)] = v32 + v25 * (v37 - v42);
  v49 = &v14[*(int *)(v48 + 24)];
  *(_QWORD *)v49 = KeyPath;
  *(_OWORD *)(v49 + 8) = 0u;
  *(_OWORD *)(v49 + 24) = 0u;
  *(_OWORD *)(v49 + 40) = 0u;
  *(_OWORD *)(v49 + 50) = 0u;
  LOBYTE(KeyPath) = sub_23E136744();
  sub_23E135D00();
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v90;
  sub_23DF73E10((uint64_t)v14, v90, type metadata accessor for HeaderView.TitleDescriptionHeader.Content);
  v59 = v58 + *(int *)(v92 + 36);
  *(_BYTE *)v59 = KeyPath;
  *(_QWORD *)(v59 + 8) = v51;
  *(_QWORD *)(v59 + 16) = v53;
  *(_QWORD *)(v59 + 24) = v55;
  *(_QWORD *)(v59 + 32) = v57;
  *(_BYTE *)(v59 + 40) = 0;
  sub_23DF73E54((uint64_t)v14, type metadata accessor for HeaderView.TitleDescriptionHeader.Content);
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  v60 = v93;
  sub_23DF89C1C(v58, v93, &qword_256D20868);
  v61 = (_OWORD *)(v60 + *(int *)(v94 + 36));
  v62 = v101;
  *v61 = v100;
  v61[1] = v62;
  v61[2] = v102;
  sub_23DF89C7C(v58, &qword_256D20868);
  v63 = sub_23E136FE4();
  v65 = v64;
  v66 = v38 + *(int *)(v95 + 36);
  v67 = sub_23E136378();
  v68 = (uint64_t)v97;
  *v97 = v67;
  *(_QWORD *)(v68 + 8) = 0;
  *(_BYTE *)(v68 + 16) = 0;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20880);
  sub_23DFE513C(v68 + *(int *)(v69 + 44));
  v70 = v96;
  sub_23DF89C1C(v68, v96, &qword_256D20858);
  *(double *)(v70 + *(int *)(v98 + 36)) = v43;
  sub_23DF89C7C(v68, &qword_256D20858);
  sub_23DF89340(v70, v66, &qword_256D20860);
  v71 = (uint64_t *)(v66 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20888) + 36));
  *v71 = v63;
  v71[1] = v65;
  sub_23DF89340(v60, v38, &qword_256D20870);
  v72 = sub_23E136FE4();
  v74 = v73;
  v75 = 0;
  v76 = 0;
  v77 = 0;
  v78 = 0;
  v79 = 0;
  if (*(_BYTE *)(v45 + *(int *)(v44 + 28)) == 1)
  {
    v75 = sub_23E136C30();
    v80 = sub_23E136738();
    v76 = sub_23E136000();
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v78 = sub_23E1360CC();
    v79 = v81;
    v77 = v80;
  }
  v82 = v99;
  sub_23DF89C1C(v38, v99, &qword_256D20878);
  v83 = (uint64_t *)(v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20890) + 36));
  *v83 = v75;
  v83[1] = 0;
  v83[2] = v76;
  v83[3] = v77;
  v83[4] = v78;
  v83[5] = v79;
  v83[6] = v72;
  v83[7] = v74;
  return sub_23DF89C7C(v38, &qword_256D20878);
}

uint64_t sub_23DFE513C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_23E136F00();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20898);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  sub_23E136EF4();
  sub_23E136C48();
  v12 = sub_23E136C60();
  swift_release();
  v13 = sub_23E13672C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  v14 = &v9[*(int *)(v6 + 36)];
  *(_QWORD *)v14 = v12;
  v14[8] = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23DF89340((uint64_t)v9, (uint64_t)v11, &qword_256D20898);
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v9, &qword_256D20898);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D208A0);
  sub_23DF89C1C((uint64_t)v9, a1 + *(int *)(v15 + 48), &qword_256D20898);
  sub_23DF89C7C((uint64_t)v11, &qword_256D20898);
  return sub_23DF89C7C((uint64_t)v9, &qword_256D20898);
}

uint64_t sub_23DFE52E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v33 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20820);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HeaderView.CardHeaderView.ContentView(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(double *)(v2 + 8) / 10.0;
  if (v18 <= 0.0)
    v18 = 0.0;
  if (v18 <= 1.0)
    v19 = v18;
  else
    v19 = 1.0;
  v20 = type metadata accessor for HeaderView.CardHeaderView(0);
  sub_23DF73E10(v2 + *(int *)(v20 + 24), (uint64_t)v14, type metadata accessor for AccessoryControlsHeaderConfig);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  swift_storeEnumTagMultiPayload();
  KeyPath = swift_getKeyPath();
  sub_23DF89384((uint64_t)v14, (uint64_t)v17, type metadata accessor for AccessoryControlsHeaderConfig);
  sub_23DF89340((uint64_t)v11, (uint64_t)&v17[*(int *)(v15 + 20)], &qword_256D20830);
  v22 = &v17[*(int *)(v15 + 24)];
  *(_QWORD *)v22 = KeyPath;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  v23 = sub_23E136FE4();
  v25 = v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20838);
  v27 = v33;
  v28 = v33 + *(int *)(v26 + 36);
  *(_QWORD *)v5 = sub_23E136378();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20840);
  sub_23DFE55BC((uint64_t)&v5[*(int *)(v29 + 44)]);
  sub_23DF89C1C((uint64_t)v5, (uint64_t)v8, &qword_256D20820);
  *(double *)&v8[*(int *)(v6 + 36)] = v19;
  sub_23DF89C7C((uint64_t)v5, &qword_256D20820);
  sub_23DF89340((uint64_t)v8, v28, &qword_256D20828);
  v30 = (uint64_t *)(v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20848) + 36));
  *v30 = v23;
  v30[1] = v25;
  return sub_23DF89384((uint64_t)v17, v27, type metadata accessor for HeaderView.CardHeaderView.ContentView);
}

uint64_t sub_23DFE55BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v36 = a1;
  v1 = sub_23E136F00();
  v37 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v35 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E080);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E13657C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char **)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E088);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  if (qword_256D1D2C0 != -1)
    swift_once();
  v17 = qword_256D34660;
  v18 = qword_256D1D378;
  swift_retain();
  if (v18 != -1)
    swift_once();
  v19 = (char *)v10 + *(int *)(v8 + 20);
  v20 = *MEMORY[0x24BDEEB68];
  v21 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  sub_23E1364BC();
  *v10 = v22;
  v10[1] = v23;
  v10[2] = v24;
  v10[3] = v25;
  v26 = MEMORY[0x24BDEFEC8];
  sub_23DF73E10((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC8]);
  *(_WORD *)&v7[*(int *)(v5 + 36)] = 256;
  sub_23DF89C1C((uint64_t)v7, (uint64_t)&v14[*(int *)(v11 + 36)], &qword_256D1E080);
  *(_QWORD *)v14 = v17;
  *((_WORD *)v14 + 4) = 256;
  swift_retain();
  sub_23DF89C7C((uint64_t)v7, &qword_256D1E080);
  sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))v26);
  swift_release();
  sub_23DF89340((uint64_t)v14, (uint64_t)v16, &qword_256D1E088);
  v27 = v35;
  sub_23E136EF4();
  sub_23DF89C1C((uint64_t)v16, (uint64_t)v14, &qword_256D1E088);
  v29 = v37;
  v28 = v38;
  v30 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v30(v38, v27, v1);
  v31 = v36;
  sub_23DF89C1C((uint64_t)v14, v36, &qword_256D1E088);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20850);
  v30((char *)(v31 + *(int *)(v32 + 48)), v28, v1);
  v33 = *(void (**)(char *, uint64_t))(v29 + 8);
  v33(v27, v1);
  sub_23DF89C7C((uint64_t)v16, &qword_256D1E088);
  v33(v28, v1);
  return sub_23DF89C7C((uint64_t)v14, &qword_256D1E088);
}

uint64_t sub_23DFE5914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t *v20;
  _BYTE v23[72];
  _OWORD v24[4];
  __int16 v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20540);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)v5 = sub_23E136378();
  *((_QWORD *)v5 + 1) = 0x401C000000000000;
  v5[16] = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20548);
  sub_23DFE5AD8(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  v7 = sub_23E136FE4();
  v9 = v8;
  v10 = v1 + *(int *)(type metadata accessor for HeaderView.HorizontalSheetHeader(0) + 24);
  v11 = *(_OWORD *)(v10 + 48);
  v24[2] = *(_OWORD *)(v10 + 32);
  v24[3] = v11;
  v25 = *(_WORD *)(v10 + 64);
  v12 = *(_OWORD *)(v10 + 16);
  v24[0] = *(_OWORD *)v10;
  v24[1] = v12;
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v23);
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  if ((v23[56] & 1) != 0)
  {
    v13 = sub_23E136C30();
    v18 = sub_23E136738();
    v14 = sub_23E136000();
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v16 = sub_23E1360CC();
    v17 = v19;
    v15 = v18;
  }
  sub_23DF89C1C((uint64_t)v5, a1, &qword_256D20540);
  v20 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20550) + 36));
  *v20 = v13;
  v20[1] = 0;
  v20[2] = v14;
  v20[3] = v15;
  v20[4] = v16;
  v20[5] = v17;
  v20[6] = v7;
  v20[7] = v9;
  return sub_23DF89C7C((uint64_t)v5, &qword_256D20540);
}

uint64_t sub_23DFE5AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t);
  void *v35;
  id v36;
  id v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t KeyPath;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  id v127;
  void (*v128)(char *, _QWORD, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _BYTE v159[72];
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;

  v116 = a2;
  v148 = sub_23E135D60();
  v115 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v114 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E818);
  MEMORY[0x24BDAC7A8](v4);
  v147 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20558);
  v133 = *(_QWORD *)(v6 - 8);
  v134 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v132 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20560);
  MEMORY[0x24BDAC7A8](v131);
  v140 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20568);
  MEMORY[0x24BDAC7A8](v112);
  v142 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20570);
  MEMORY[0x24BDAC7A8](v113);
  v144 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20578);
  MEMORY[0x24BDAC7A8](v146);
  v145 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20580);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v157 = (uint64_t)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v143 = (char *)&v112 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v156 = (uint64_t)&v112 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v18);
  v150 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20588);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v155 = (uint64_t)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v158 = (uint64_t)&v112 - v23;
  v24 = sub_23E13684C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for HeaderView.HorizontalSheetHeader(0);
  v31 = *(int *)(v130 + 20);
  v141 = a1;
  v32 = (_QWORD *)(a1 + v31);
  v33 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  sub_23DF89C1C((uint64_t)v32 + *(int *)(v33 + 24), (uint64_t)v30, qword_256D203B8);
  v34 = *(void (**)(char *, _QWORD, uint64_t))(v25 + 104);
  v34(v27, *MEMORY[0x24BDF1848], v24);
  v35 = (void *)objc_opt_self();
  v36 = sub_23E10C88C((uint64_t)v27);
  v37 = objc_msgSend(v35, sel_preferredFontForTextStyle_, v36);

  objc_msgSend(v37, sel_pointSize);
  v38 = *(void (**)(char *, uint64_t))(v25 + 8);
  v38(v27, v24);
  sub_23DFE67D8((uint64_t)v30, (uint64_t)&v169);
  sub_23DF89C7C((uint64_t)v30, qword_256D203B8);
  v138 = *((_QWORD *)&v169 + 1);
  v139 = v169;
  v153 = v171;
  v154 = *((_QWORD *)&v170 + 1);
  v136 = *((_QWORD *)&v171 + 1);
  v137 = v170;
  v152 = v172;
  v151 = BYTE8(v172);
  v135 = BYTE9(v172);
  v149 = v32;
  v39 = *v32;
  v40 = v32[1];
  *(_QWORD *)&v169 = v39;
  *((_QWORD *)&v169 + 1) = v40;
  v41 = sub_23DF8DC18();
  swift_bridgeObjectRetain();
  v125 = v41;
  v42 = sub_23E13693C();
  v120 = v43;
  v121 = v42;
  v119 = v44;
  v122 = v45;
  KeyPath = swift_getKeyPath();
  v117 = swift_getKeyPath();
  v46 = *MEMORY[0x24BDF1880];
  v128 = v34;
  v34(v27, v46, v24);
  v47 = sub_23E10C88C((uint64_t)v27);
  v127 = v35;
  v48 = objc_msgSend(v35, sel_preferredFontForTextStyle_, v47);

  objc_msgSend(v48, sel_pointSize);
  v129 = v24;
  v126 = v38;
  v38(v27, v24);
  sub_23E1367E0();
  v49 = sub_23E1367C8();
  v50 = (uint64_t)v150;
  v123 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v124 = v49;
  v123(v150, 1, 1);
  v51 = sub_23E136804();
  sub_23DF89C7C(v50, &qword_256D1DBA0);
  v52 = swift_getKeyPath();
  v53 = sub_23E136C48();
  v54 = swift_getKeyPath();
  sub_23E136C24();
  v55 = sub_23E136C60();
  swift_release();
  *(_QWORD *)&v169 = v121;
  *((_QWORD *)&v169 + 1) = v120;
  LOBYTE(v170) = v119 & 1;
  *((_QWORD *)&v170 + 1) = v122;
  *(_QWORD *)&v171 = KeyPath;
  BYTE8(v171) = 1;
  *(_QWORD *)&v172 = v117;
  *((_QWORD *)&v172 + 1) = 1;
  LOBYTE(v173) = 0;
  *((_QWORD *)&v173 + 1) = v52;
  *(_QWORD *)&v174 = v51;
  *((_QWORD *)&v174 + 1) = v54;
  *(_QWORD *)&v175 = v53;
  *((_QWORD *)&v175 + 1) = v55;
  v176 = xmmword_23E13AF30;
  v177 = 0x4000000000000000;
  v166 = v175;
  v167 = xmmword_23E13AF30;
  v168 = 0x4000000000000000;
  v162 = v171;
  v163 = v172;
  v164 = v173;
  v165 = v174;
  v160 = v169;
  v161 = v170;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20590);
  sub_23DF8E904(&qword_256D20598, &qword_256D20590, (uint64_t (*)(void))sub_23DFE8D5C, MEMORY[0x24BDEC468]);
  sub_23E136B28();
  sub_23DFE8F6C((uint64_t)&v169);
  if (v149[3])
  {
    v56 = v149[2];
    v57 = v149[3];
  }
  else
  {
    v57 = 0xE100000000000000;
    v56 = 32;
  }
  *(_QWORD *)&v160 = v56;
  *((_QWORD *)&v160 + 1) = v57;
  swift_bridgeObjectRetain();
  v58 = sub_23E13693C();
  v121 = v58;
  v122 = v59;
  v61 = v60;
  v62 = v59;
  v64 = v63 & 1;
  v65 = swift_getKeyPath();
  v125 = swift_getKeyPath();
  v66 = v129;
  v128(v27, *MEMORY[0x24BDF18F0], v129);
  v67 = sub_23E10C88C((uint64_t)v27);
  v68 = objc_msgSend(v127, sel_preferredFontForTextStyle_, v67);

  objc_msgSend(v68, sel_pointSize);
  v126(v27, v66);
  sub_23E1367F8();
  v69 = (uint64_t)v150;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v123)(v150, 1, 1, v124);
  v70 = sub_23E136804();
  sub_23DF89C7C(v69, &qword_256D1DBA0);
  v71 = swift_getKeyPath();
  *(_QWORD *)&v160 = v58;
  *((_QWORD *)&v160 + 1) = v61;
  LOBYTE(v161) = v64;
  *((_QWORD *)&v161 + 1) = v62;
  *(_QWORD *)&v162 = v65;
  BYTE8(v162) = 1;
  *(_QWORD *)&v163 = v125;
  *((_QWORD *)&v163 + 1) = 1;
  LOBYTE(v164) = 0;
  *((_QWORD *)&v164 + 1) = v71;
  *(_QWORD *)&v165 = v70;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D205B8);
  sub_23DFE8DE0();
  v72 = v132;
  sub_23E136A50();
  sub_23DFA055C(v121, v61, v64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v149[3])
    v73 = 1.0;
  else
    v73 = 0.0;
  v75 = v133;
  v74 = v134;
  v76 = (uint64_t)v140;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v140, v72, v134);
  *(double *)(v76 + *(int *)(v131 + 36)) = v73;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
  v77 = (__int128 *)(v141 + *(int *)(v130 + 24));
  v78 = v77[3];
  v162 = v77[2];
  v163 = v78;
  LOWORD(v164) = *((_WORD *)v77 + 32);
  v79 = v77[1];
  v160 = *v77;
  v161 = v79;
  sub_23DF98EC8((uint64_t)&v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v159);
  sub_23DF98EC8((uint64_t)&v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v159[64] == 1)
    v80 = sub_23E136C48();
  else
    v80 = sub_23E136C84();
  v81 = v80;
  v83 = v115;
  v82 = v116;
  v84 = v113;
  v85 = v114;
  v86 = v112;
  v87 = v142;
  sub_23DF89C1C(v76, v142, &qword_256D20560);
  *(_QWORD *)(v87 + *(int *)(v86 + 36)) = v81;
  sub_23DF89C7C(v76, &qword_256D20560);
  v88 = swift_getKeyPath();
  v89 = (uint64_t)v147;
  sub_23E136F6C();
  v90 = sub_23E136F90();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 0, 1, v90);
  v91 = (uint64_t)v144;
  v92 = (uint64_t *)&v144[*(int *)(v84 + 36)];
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E830);
  sub_23DF89C1C(v89, (uint64_t)v92 + *(int *)(v93 + 28), &qword_256D1E818);
  *v92 = v88;
  sub_23DF89C1C(v87, v91, &qword_256D20568);
  sub_23DF89C7C(v89, &qword_256D1E818);
  sub_23DF89C7C(v87, &qword_256D20568);
  v94 = swift_getKeyPath();
  v95 = v148;
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v85, *MEMORY[0x24BDEB3F0], v148);
  v96 = (uint64_t)v145;
  v97 = (uint64_t *)&v145[*(int *)(v146 + 36)];
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))((char *)v97 + *(int *)(v98 + 28), v85, v95);
  *v97 = v94;
  sub_23DF89C1C(v91, v96, &qword_256D20570);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v95);
  sub_23DF89C7C(v91, &qword_256D20570);
  sub_23DFE903C();
  v99 = (uint64_t)v143;
  sub_23E136B28();
  sub_23DF89C7C(v96, &qword_256D20578);
  v100 = v156;
  sub_23DF89340(v99, v156, &qword_256D20580);
  v101 = v155;
  sub_23DF89C1C(v158, v155, &qword_256D20588);
  v102 = v157;
  sub_23DF89C1C(v100, v157, &qword_256D20580);
  v104 = v138;
  v103 = v139;
  *(_QWORD *)v82 = v139;
  *(_QWORD *)(v82 + 8) = v104;
  v105 = v136;
  LOBYTE(v91) = v137;
  v106 = v154;
  *(_QWORD *)(v82 + 16) = v137;
  *(_QWORD *)(v82 + 24) = v106;
  *(_QWORD *)(v82 + 32) = v153;
  *(_QWORD *)(v82 + 40) = v105;
  *(_QWORD *)(v82 + 48) = v152;
  *(_BYTE *)(v82 + 56) = v151;
  LOBYTE(v94) = v135;
  *(_BYTE *)(v82 + 57) = v135;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20630);
  sub_23DF89C1C(v101, v82 + *(int *)(v107 + 48), &qword_256D20588);
  sub_23DF89C1C(v102, v82 + *(int *)(v107 + 64), &qword_256D20580);
  v109 = v153;
  v108 = v154;
  v110 = v152;
  LOBYTE(v82) = v151;
  sub_23DFE91E8(v103, v104, v91, v154, v153, v105, v152, v151, v94);
  sub_23DFE91E8(v103, v104, v91, v108, v109, v105, v110, v82, v94);
  sub_23DF89C7C(v156, &qword_256D20580);
  sub_23DF89C7C(v158, &qword_256D20588);
  sub_23DFE928C(v103, v104, v91, v108, v109, v105, v110, v82, v94);
  sub_23DF89C7C(v157, &qword_256D20580);
  sub_23DF89C7C(v155, &qword_256D20588);
  return sub_23DFE928C(v103, v104, v91, v108, v109, v105, v110, v82, v94);
}

uint64_t sub_23DFE67D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unsigned __int8 v22;
  char v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  _BYTE v71[26];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  unsigned __int8 v76;
  char v77;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DB88);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v15, qword_256D203B8);
  v16 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    v70 = 0u;
    memset(v71, 0, 25);
    v69 = 0u;
    v71[25] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20638);
    sub_23DFE9328();
    result = sub_23E136480();
    v18 = v72;
    v19 = v73;
    v20 = v74;
    v21 = v75;
    v22 = v76;
    v23 = v77;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v68 = a2;
    if (EnumCaseMultiPayload == 1)
    {
      v25 = *((_QWORD *)v15 + 2);
      v26 = *((_QWORD *)v15 + 3);
      sub_23E136C48();
      *(_QWORD *)&v67 = v25;
      v27 = sub_23E136BDC();
      swift_release();
      if ((v27 & 1) != 0 || (sub_23E136C24(), v28 = v67, v29 = sub_23E136BDC(), swift_release(), (v29 & 1) != 0))
      {
        if (qword_256D1D2C8 != -1)
          swift_once();
        v28 = qword_256D34668;
      }
      swift_retain();
      *(_QWORD *)&v72 = v28;
      v30 = sub_23E1368DC();
      v32 = v31;
      v34 = v33;
      v36 = v35;
      swift_release();
      swift_bridgeObjectRelease();
      sub_23E1367D4();
      v37 = sub_23E1367C8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
      v38 = sub_23E136804();
      sub_23DF89C7C((uint64_t)v6, &qword_256D1DBA0);
      KeyPath = swift_getKeyPath();
      *(_QWORD *)&v65 = v30;
      *(_QWORD *)&v69 = v30;
      *((_QWORD *)&v69 + 1) = v32;
      v64 = v32;
      v63 = v34 & 1;
      *(_QWORD *)&v70 = v63;
      *((_QWORD *)&v70 + 1) = v36;
      *(_QWORD *)&v66 = v36;
      *(_QWORD *)v71 = v26;
      *(_QWORD *)&v71[8] = KeyPath;
      *(_QWORD *)&v71[16] = v38;
      v62[1] = v38;
      v71[24] = 1;
      sub_23DFA056C(v30, v32, v34 & 1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20650);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20670);
      sub_23DFE9394();
      sub_23DFE949C();
      sub_23E136480();
      v41 = *((_QWORD *)&v72 + 1);
      v40 = v72;
      v42 = *((_QWORD *)&v73 + 1);
      v43 = v73;
      v44 = v74;
      v45 = v75;
      v46 = v76;
      v69 = v72;
      v70 = v73;
      *(_OWORD *)v71 = v74;
      *(_QWORD *)&v71[16] = v75;
      *(_WORD *)&v71[24] = v76;
      sub_23DFE91FC(v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, v76);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20638);
      sub_23DFE9328();
      sub_23E136480();
      swift_release();
      sub_23DFE92A0(v40, v41, v43, v42, v44, *((uint64_t *)&v44 + 1), v45, v46);
      sub_23DFA055C(v65, v64, v63);
      swift_release();
      swift_release();
      result = swift_bridgeObjectRelease();
      v18 = v72;
      v19 = v73;
      v20 = v74;
      v21 = v75;
      v22 = v76;
      v23 = v77;
      a2 = v68;
    }
    else
    {
      v47 = *(_QWORD *)&v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0) + 48)];
      sub_23DF89384((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
      swift_bridgeObjectRetain();
      sub_23E136CB4();
      sub_23E1358F8();
      v48 = sub_23E1363B4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v9, 0, 1, v48);
      v49 = sub_23E136CE4();
      swift_release();
      sub_23DF89C7C((uint64_t)v9, &qword_256D1DB88);
      v50 = swift_getKeyPath();
      *(_QWORD *)&v66 = v50;
      v51 = sub_23E1367C8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v6, 1, 1, v51);
      swift_retain();
      v52 = sub_23E136804();
      sub_23DF89C7C((uint64_t)v6, &qword_256D1DBA0);
      v53 = swift_getKeyPath();
      *(_QWORD *)&v67 = v49;
      *(_QWORD *)&v69 = v49;
      *((_QWORD *)&v69 + 1) = v50;
      v64 = v47;
      *(_QWORD *)&v70 = v47;
      *((_QWORD *)&v70 + 1) = v53;
      *(_QWORD *)&v65 = v53;
      memset(&v71[8], 0, 17);
      *(_QWORD *)v71 = v52;
      v63 = v52;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20650);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20670);
      sub_23DFE9394();
      sub_23DFE949C();
      sub_23E136480();
      v55 = *((_QWORD *)&v72 + 1);
      v54 = v72;
      v56 = *((_QWORD *)&v73 + 1);
      v57 = v73;
      v58 = v74;
      v59 = v75;
      v60 = v76;
      v69 = v72;
      v70 = v73;
      *(_OWORD *)v71 = v74;
      *(_QWORD *)&v71[16] = v75;
      *(_WORD *)&v71[24] = v76;
      sub_23DFE91FC(v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, v76);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20638);
      sub_23DFE9328();
      sub_23E136480();
      swift_release();
      v61 = v55;
      a2 = v68;
      sub_23DFE92A0(v54, v61, v57, v56, v58, *((uint64_t *)&v58 + 1), v59, v60);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v67 = v72;
      v66 = v73;
      v65 = v74;
      v21 = v75;
      v22 = v76;
      v23 = v77;
      result = sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
      v20 = v65;
      v19 = v66;
      v18 = v67;
    }
  }
  *(_OWORD *)a2 = v18;
  *(_OWORD *)(a2 + 16) = v19;
  *(_OWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v22;
  *(_BYTE *)(a2 + 57) = v23;
  return result;
}

uint64_t sub_23DFE7008()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFE7018@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t KeyPath;
  int v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _BYTE v127[72];
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  _BYTE v144[32];

  v123 = a2;
  v3 = sub_23E135D60();
  v97 = *(_QWORD *)(v3 - 8);
  v98 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v96 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E818);
  MEMORY[0x24BDAC7A8](v5);
  v121 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E13684C();
  v106 = *(_QWORD *)(v7 - 8);
  v107 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v105 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AB8);
  v110 = *(_QWORD *)(v9 - 8);
  v111 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v109 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AC0);
  MEMORY[0x24BDAC7A8](v108);
  v112 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AC8);
  MEMORY[0x24BDAC7A8](v94);
  v113 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AD0);
  MEMORY[0x24BDAC7A8](v95);
  v117 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AD8);
  MEMORY[0x24BDAC7A8](v119);
  v118 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AE0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v122 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v115 = (char *)&v94 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v120 = (uint64_t)&v94 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AE8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v116 = (uint64_t)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v94 - v27;
  v29 = a1;
  v30 = *a1;
  v31 = a1[1];
  v126 = v29;
  *(_QWORD *)&v137 = v30;
  *((_QWORD *)&v137 + 1) = v31;
  v32 = sub_23DF8DC18();
  swift_bridgeObjectRetain();
  v125 = v32;
  v114 = (char *)sub_23E13693C();
  v101 = v33;
  v100 = v34;
  v124 = v35;
  KeyPath = swift_getKeyPath();
  v36 = swift_getKeyPath();
  v104 = type metadata accessor for HeaderView.TitleDescriptionHeader.Content(0);
  sub_23E1367E0();
  v37 = sub_23E1367C8();
  v102 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v103 = v37;
  v102(v23, 1, 1);
  v38 = sub_23E136804();
  sub_23DF89C7C((uint64_t)v23, &qword_256D1DBA0);
  v39 = swift_getKeyPath();
  v40 = sub_23E136C48();
  v41 = swift_getKeyPath();
  sub_23E136C24();
  v42 = sub_23E136C60();
  swift_release();
  *(_QWORD *)&v137 = v114;
  *((_QWORD *)&v137 + 1) = v101;
  LOBYTE(v138) = v100 & 1;
  *((_QWORD *)&v138 + 1) = v124;
  LOWORD(v139) = 256;
  *((_QWORD *)&v139 + 1) = KeyPath;
  LOBYTE(v140) = 1;
  *((_QWORD *)&v140 + 1) = v36;
  *(_QWORD *)&v141 = 1;
  BYTE8(v141) = 0;
  *(_QWORD *)&v142 = v39;
  *((_QWORD *)&v142 + 1) = v38;
  *(_QWORD *)&v143 = v41;
  *((_QWORD *)&v143 + 1) = v40;
  *(_OWORD *)&v144[8] = xmmword_23E13AF30;
  *(_QWORD *)v144 = v42;
  *(_QWORD *)&v144[24] = 0x4000000000000000;
  v134 = v143;
  v135 = *(_OWORD *)v144;
  v136 = *(_OWORD *)&v144[16];
  v130 = v139;
  v131 = v140;
  v132 = v141;
  v133 = v142;
  v128 = v137;
  v129 = v138;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AF0);
  sub_23DF8E904(&qword_256D20AF8, &qword_256D20AF0, (uint64_t (*)(void))sub_23DFED7FC, MEMORY[0x24BDEC468]);
  v114 = v28;
  sub_23E136B28();
  sub_23DFEDA80((uint64_t)&v137);
  if (v126[3])
  {
    v43 = v126[2];
    v44 = v126[3];
  }
  else
  {
    v44 = 0xE100000000000000;
    v43 = 32;
  }
  *(_QWORD *)&v128 = v43;
  *((_QWORD *)&v128 + 1) = v44;
  swift_bridgeObjectRetain();
  v45 = sub_23E13693C();
  v47 = v46;
  v124 = v48;
  v50 = v49 & 1;
  v125 = swift_getKeyPath();
  v101 = swift_getKeyPath();
  v51 = (uint64_t)v105;
  v52 = v106;
  v53 = v107;
  (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v105, *MEMORY[0x24BDF18F0], v107);
  v54 = (void *)objc_opt_self();
  v55 = sub_23E10C88C(v51);
  v56 = objc_msgSend(v54, sel_preferredFontForTextStyle_, v55);

  objc_msgSend(v56, sel_pointSize);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
  sub_23E1367F8();
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v102)(v23, 1, 1, v103);
  v57 = sub_23E136804();
  sub_23DF89C7C((uint64_t)v23, &qword_256D1DBA0);
  v58 = swift_getKeyPath();
  *(_QWORD *)&v128 = v45;
  *((_QWORD *)&v128 + 1) = v47;
  LOBYTE(v129) = v50;
  *((_QWORD *)&v129 + 1) = v124;
  LOWORD(v130) = 256;
  *((_QWORD *)&v130 + 1) = v125;
  LOBYTE(v131) = 1;
  *((_QWORD *)&v131 + 1) = v101;
  *(_QWORD *)&v132 = 1;
  BYTE8(v132) = 0;
  *(_QWORD *)&v133 = v58;
  *((_QWORD *)&v133 + 1) = v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20B18);
  sub_23DFED880();
  v59 = v109;
  sub_23E136A50();
  sub_23DFA055C(v45, v47, v50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v60 = v126;
  if (v126[3])
    v61 = 1.0;
  else
    v61 = 0.0;
  v63 = v110;
  v62 = v111;
  v64 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v112, v59, v111);
  *(double *)(v64 + *(int *)(v108 + 36)) = v61;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v62);
  v65 = (__int128 *)((char *)v60 + *(int *)(v104 + 24));
  v66 = v65[3];
  v130 = v65[2];
  v131 = v66;
  LOWORD(v132) = *((_WORD *)v65 + 32);
  v67 = v65[1];
  v128 = *v65;
  v129 = v67;
  sub_23DF98EC8((uint64_t)&v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v127);
  sub_23DF98EC8((uint64_t)&v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v127[64] == 1)
    v68 = sub_23E136C48();
  else
    v68 = sub_23E136C84();
  v69 = v68;
  v71 = v97;
  v70 = v98;
  v72 = v95;
  v73 = v96;
  v74 = v94;
  v75 = v113;
  sub_23DF89C1C(v64, v113, &qword_256D20AC0);
  *(_QWORD *)(v75 + *(int *)(v74 + 36)) = v69;
  sub_23DF89C7C(v64, &qword_256D20AC0);
  v76 = swift_getKeyPath();
  v77 = (uint64_t)v121;
  sub_23E136F6C();
  v78 = sub_23E136F90();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
  v79 = (uint64_t)v117;
  v80 = (uint64_t *)&v117[*(int *)(v72 + 36)];
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E830);
  sub_23DF89C1C(v77, (uint64_t)v80 + *(int *)(v81 + 28), &qword_256D1E818);
  *v80 = v76;
  sub_23DF89C1C(v75, v79, &qword_256D20AC8);
  sub_23DF89C7C(v77, &qword_256D1E818);
  sub_23DF89C7C(v75, &qword_256D20AC8);
  v82 = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v73, *MEMORY[0x24BDEB3F0], v70);
  v83 = (uint64_t)v118;
  v84 = (uint64_t *)&v118[*(int *)(v119 + 36)];
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))((char *)v84 + *(int *)(v85 + 28), v73, v70);
  *v84 = v82;
  sub_23DF89C1C(v79, v83, &qword_256D20AD0);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v73, v70);
  sub_23DF89C7C(v79, &qword_256D20AD0);
  sub_23DFEDB28();
  v86 = (uint64_t)v115;
  sub_23E136B28();
  sub_23DF89C7C(v83, &qword_256D20AD8);
  v87 = v120;
  sub_23DF89340(v86, v120, &qword_256D20AE0);
  v88 = (uint64_t)v114;
  v89 = v116;
  sub_23DF89C1C((uint64_t)v114, v116, &qword_256D20AE8);
  v90 = v122;
  sub_23DF89C1C(v87, v122, &qword_256D20AE0);
  v91 = v123;
  *v123 = 0;
  *((_BYTE *)v91 + 8) = 1;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20B70);
  sub_23DF89C1C(v89, (uint64_t)v91 + *(int *)(v92 + 48), &qword_256D20AE8);
  sub_23DF89C1C(v90, (uint64_t)v91 + *(int *)(v92 + 64), &qword_256D20AE0);
  sub_23DF89C7C(v87, &qword_256D20AE0);
  sub_23DF89C7C(v88, &qword_256D20AE8);
  sub_23DF89C7C(v90, &qword_256D20AE0);
  return sub_23DF89C7C(v89, &qword_256D20AE8);
}

uint64_t sub_23DFE7A8C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_23E136378();
  *(_QWORD *)(a1 + 8) = 0x401C000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AB0);
  return sub_23DFE7018(v1, (_QWORD *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_23DFE7AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(char *, uint64_t);
  _QWORD v70[2];
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char v91;
  int v92;
  __int16 v93;
  char v94;
  char v95;
  _BYTE v96[133];
  _BYTE v97[133];
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  _BYTE v101[7];
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char v106;
  char v107;
  int v108;
  __int16 v109;
  char v110;
  _BYTE v111[7];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  _OWORD v117[3];
  uint64_t v118;
  char v119;
  char v120;

  v80 = a2;
  v3 = sub_23E135E74();
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[1] = v5;
  MEMORY[0x24BDAC7A8](v4);
  v71 = (uint64_t)v70 - v6;
  v87 = type metadata accessor for HeaderView.CardHeaderView.ContentView(0);
  MEMORY[0x24BDAC7A8](v87);
  v82 = (uint64_t)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A30);
  v90 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v89 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v83 = (char *)v70 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v88 = (char *)v70 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v70 - v18;
  v20 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  sub_23DF89C1C(a1 + *(int *)(v24 + 24), (uint64_t)v19, qword_256D203B8);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  v84 = v8;
  if (v25 == 1)
  {
    sub_23DF89C7C((uint64_t)v19, qword_256D203B8);
    sub_23DFED3F8((uint64_t)&v98);
  }
  else
  {
    sub_23DF89384((uint64_t)v19, (uint64_t)v23, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v26 = sub_23E136378();
    sub_23DF73E10((uint64_t)v23, (uint64_t)v17, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    sub_23DFE67D8((uint64_t)v17, (uint64_t)v117);
    sub_23DF89C7C((uint64_t)v17, qword_256D203B8);
    v85 = v117[1];
    v86 = v117[0];
    v81 = v117[2];
    v27 = v118;
    v28 = v119;
    v29 = v120;
    v30 = sub_23E13672C();
    sub_23E135D00();
    v95 = 1;
    v94 = v29;
    v91 = 0;
    v98 = v26;
    v99 = 0;
    v100 = 1;
    *(_DWORD *)v101 = *(_DWORD *)v97;
    *(_DWORD *)&v101[3] = *(_DWORD *)&v97[3];
    v102 = v86;
    v103 = v85;
    v104 = v81;
    v105 = v27;
    v106 = v28;
    v107 = v29;
    v109 = v93;
    v108 = v92;
    v110 = v30;
    *(_DWORD *)&v111[3] = *(_DWORD *)&v96[3];
    *(_DWORD *)v111 = *(_DWORD *)v96;
    v112 = v31;
    v113 = v32;
    v114 = v33;
    v115 = v34;
    v116 = 0;
    CGPointMake(&v98);
    sub_23DF73E54((uint64_t)v23, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  }
  sub_23DF89340((uint64_t)&v98, (uint64_t)v117, &qword_256D20A38);
  v35 = v87;
  v76 = sub_23E136384();
  sub_23DFE81E8(a1, (uint64_t)&v98);
  v78 = v99;
  v79 = v98;
  v77 = v100;
  v87 = *((_QWORD *)&v102 + 1);
  *(_QWORD *)&v85 = v102;
  *(_QWORD *)&v86 = *((_QWORD *)&v103 + 1);
  v36 = v103;
  *(_QWORD *)&v81 = v104;
  v37 = a1 + *(int *)(v35 + 24);
  v39 = *(_QWORD *)v37;
  v38 = *(_QWORD *)(v37 + 8);
  v40 = *(_BYTE *)(v37 + 16);
  sub_23DFEB604(*(_QWORD *)v37, v38, v40);
  v41 = sub_23DF9CFB0(v39, v38, v40);
  v43 = v42;
  sub_23DF9D68C(v39, v38, v40);
  v44 = v82;
  sub_23DF73E10(a1, v82, type metadata accessor for HeaderView.CardHeaderView.ContentView);
  if (v41)
  {
    sub_23DF73E54(v44, type metadata accessor for HeaderView.CardHeaderView.ContentView);
  }
  else
  {
    v45 = v71;
    sub_23DF9CD44(v71);
    sub_23DF73E54(v44, type metadata accessor for HeaderView.CardHeaderView.ContentView);
    v47 = v72;
    v46 = v73;
    v48 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v45, v74);
    v49 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    v50 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v50 + v49, v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v48);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = sub_23DFED480;
    *(_QWORD *)(v43 + 24) = v50;
    v41 = (uint64_t)sub_23DF8D9A4;
  }
  v51 = v84;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v41;
  *(_QWORD *)(v52 + 24) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A40);
  sub_23DFED4DC();
  v53 = v83;
  sub_23E136DEC();
  v54 = v90;
  v55 = v88;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v88, v53, v51);
  sub_23DF89340((uint64_t)v117, (uint64_t)v96, &qword_256D20A38);
  v83 = *(char **)(v54 + 16);
  ((void (*)(char *, char *, uint64_t))v83)(v89, v55, v51);
  sub_23DF89340((uint64_t)v96, (uint64_t)v97, &qword_256D20A38);
  v56 = v80;
  sub_23DF89340((uint64_t)v97, v80, &qword_256D20A38);
  *(_QWORD *)(v56 + 136) = v76;
  *(_QWORD *)(v56 + 144) = 0;
  *(_BYTE *)(v56 + 152) = 1;
  v57 = v78;
  v58 = v79;
  *(_QWORD *)(v56 + 160) = v79;
  *(_QWORD *)(v56 + 168) = v57;
  v59 = v77;
  *(_BYTE *)(v56 + 176) = v77;
  v60 = v87;
  *(_QWORD *)(v56 + 184) = v85;
  *(_QWORD *)(v56 + 192) = v60;
  v75 = v36;
  v61 = v86;
  *(_QWORD *)(v56 + 200) = v36;
  *(_QWORD *)(v56 + 208) = v61;
  v62 = v81;
  *(_QWORD *)(v56 + 216) = v81;
  *(_QWORD *)(v56 + 224) = 0;
  *(_BYTE *)(v56 + 232) = 1;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AA0);
  v64 = v89;
  ((void (*)(uint64_t, char *, uint64_t))v83)(v56 + *(int *)(v63 + 80), v89, v51);
  sub_23DFED754((uint64_t)v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23DFED6B0);
  sub_23DFA056C(v58, v57, v59);
  swift_bridgeObjectRetain();
  v65 = v87;
  v66 = v36;
  v67 = v86;
  sub_23DFED6F4(v87, v66, v86, v62);
  v68 = *(void (**)(char *, uint64_t))(v90 + 8);
  v68(v88, v51);
  v68(v64, v51);
  sub_23DFA055C(v58, v57, v59);
  swift_bridgeObjectRelease();
  sub_23DFED724(v65, v75, v67, v62);
  sub_23DF89340((uint64_t)v96, (uint64_t)&v98, &qword_256D20A38);
  return sub_23DFED754((uint64_t)&v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23DFED7B8);
}

uint64_t sub_23DFE81E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  swift_bridgeObjectRetain();
  sub_23E136840();
  v4 = sub_23E136900();
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_256D1D2C8 != -1)
    swift_once();
  v9 = v8 & 1;
  v10 = sub_23E1368D0();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_23DFA055C(v4, v6, v9);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a1 + 24);
  if (v17)
  {
    v18 = qword_256D1D2D0;
    swift_bridgeObjectRetain();
    if (v18 != -1)
      swift_once();
    v19 = sub_23E1368D0();
    v21 = v20;
    v23 = v22;
    v25 = v24;
    swift_bridgeObjectRelease();
    v17 = v23 & 1;
  }
  else
  {
    v19 = 0;
    v21 = 0;
    v25 = 0;
  }
  v26 = v14 & 1;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v25;
  sub_23DFA056C(v10, v12, v26);
  swift_bridgeObjectRetain();
  sub_23DFED6F4(v19, v21, v17, v25);
  sub_23DFED724(v19, v21, v17, v25);
  sub_23DFA055C(v10, v12, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DFE83E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a1;
  v1 = sub_23E136F90();
  v42 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v41 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20AA8);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A78);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A68);
  MEMORY[0x24BDAC7A8](v39);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A58);
  MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E136CB4();
  v12 = sub_23E136C0C();
  KeyPath = swift_getKeyPath();
  v45 = v11;
  v46 = KeyPath;
  v47 = v12;
  sub_23E1367D4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20660);
  sub_23DFE9418();
  sub_23E136960();
  swift_release();
  swift_release();
  swift_release();
  v14 = sub_23E136834();
  v15 = swift_getKeyPath();
  v16 = v37;
  v17 = v40;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v6, v4, v40);
  v18 = (uint64_t *)&v6[*(int *)(v36 + 36)];
  *v18 = v15;
  v18[1] = v14;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v17);
  LOBYTE(v14) = sub_23E13672C();
  sub_23E135D00();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_23DF89C1C((uint64_t)v6, (uint64_t)v8, &qword_256D20A78);
  v27 = &v8[*(int *)(v39 + 36)];
  *v27 = v14;
  *((_QWORD *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_23DF89C7C((uint64_t)v6, &qword_256D20A78);
  v28 = v41;
  sub_23E136F84();
  v29 = &v10[*(int *)(v38 + 36)];
  v31 = v42;
  v30 = v43;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v29, v28, v43);
  *(_WORD *)&v29[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20A88) + 56)] = 256;
  sub_23DF89C1C((uint64_t)v8, (uint64_t)v10, &qword_256D20A68);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
  sub_23DF89C7C((uint64_t)v8, &qword_256D20A68);
  sub_23E136C24();
  v32 = sub_23E136C60();
  swift_release();
  v33 = v44;
  sub_23DF89C1C((uint64_t)v10, v44, &qword_256D20A58);
  v34 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20A40) + 36);
  *(_QWORD *)v34 = v32;
  *(_WORD *)(v34 + 8) = 256;
  return sub_23DF89C7C((uint64_t)v10, &qword_256D20A58);
}

uint64_t sub_23DFE8784@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A18);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_23E1362D0();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20A20);
  sub_23DFE7AD4(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  v7 = sub_23E13672C();
  sub_23DF89C1C((uint64_t)v5, a1, &qword_256D20A18);
  v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20A28) + 36);
  *(_BYTE *)v8 = v7;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_BYTE *)(v8 + 40) = 1;
  return sub_23DF89C7C((uint64_t)v5, &qword_256D20A18);
}

uint64_t sub_23DFE8868(uint64_t a1)
{
  return sub_23DFE88A4(a1, (SEL *)&selRef_systemGroupedBackgroundColor, &qword_256D34660);
}

uint64_t sub_23DFE887C(uint64_t a1)
{
  return sub_23DFE88A4(a1, (SEL *)&selRef_labelColor, &qword_256D34668);
}

uint64_t sub_23DFE8890(uint64_t a1)
{
  return sub_23DFE88A4(a1, (SEL *)&selRef_secondaryLabelColor, &qword_256D34670);
}

uint64_t sub_23DFE88A4(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), *a2);
  result = MEMORY[0x24264B578](v4);
  *a3 = result;
  return result;
}

double sub_23DFE88E8(_QWORD *a1, unsigned __int8 *a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  int v26;

  v26 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D204F8);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20500);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23E138410;
  v10 = (_QWORD *)(v9 + v8);
  v11 = (char *)v10 + *(int *)(v5 + 48);
  v12 = a1[1];
  *v10 = *a1;
  v10[1] = v12;
  v13 = *MEMORY[0x24BDF18F0];
  v14 = sub_23E13684C();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  v15(v11, v13, v14);
  v16 = (_QWORD *)((char *)v10 + v7);
  v17 = a1[3];
  if (v26 == 1)
  {
    if (v17)
    {
      v18 = a1[2];
      v19 = a1[3];
    }
    else
    {
      v19 = 0xE100000000000000;
      v18 = 32;
    }
    *v16 = v18;
    v16[1] = v19;
    v22 = (char *)v16 + *(int *)(v5 + 48);
    v23 = *MEMORY[0x24BDF1860];
  }
  else
  {
    if (v17)
    {
      v20 = a1[2];
      v21 = a1[3];
    }
    else
    {
      v21 = 0xE100000000000000;
      v20 = 32;
    }
    *v16 = v20;
    v16[1] = v21;
    v22 = (char *)v16 + *(int *)(v5 + 48);
    v23 = v13;
  }
  v15(v22, v23, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_23E10C2C0(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v24 + 17.0 + a3;
}

double sub_23DFE8AA0(_QWORD *a1, unsigned __int8 *a2, double a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, _QWORD, uint64_t);
  unint64_t v16;
  double v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t *v20;
  double v21;

  v5 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D204F8);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20500);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E138410;
  v11 = (char *)(v10 + v9);
  v12 = &v11[*(int *)(v6 + 48)];
  v13 = a1[1];
  *(_QWORD *)v11 = *a1;
  *((_QWORD *)v11 + 1) = v13;
  v14 = sub_23E13684C();
  v15 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  if (v5 != 1)
  {
    v15(v12, *MEMORY[0x24BDF1880], v14);
    v16 = a1[3];
    if (v16)
    {
      v18 = a1[2];
      v19 = (unsigned int *)MEMORY[0x24BDF18F0];
      v17 = 87.0;
      goto LABEL_10;
    }
    v19 = (unsigned int *)MEMORY[0x24BDF18F0];
    v16 = 0xE100000000000000;
    v17 = 87.0;
    goto LABEL_9;
  }
  v15(v12, *MEMORY[0x24BDF18F0], v14);
  v16 = a1[3];
  v17 = 17.0;
  if (!v16)
  {
    v19 = (unsigned int *)MEMORY[0x24BDF1860];
    v16 = 0xE100000000000000;
LABEL_9:
    v18 = 32;
    goto LABEL_10;
  }
  v18 = a1[2];
  v19 = (unsigned int *)MEMORY[0x24BDF1860];
LABEL_10:
  v20 = (uint64_t *)&v11[v8];
  *v20 = v18;
  v20[1] = v16;
  v15(&v11[v8 + *(int *)(v6 + 48)], *v19, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_23E10C2C0(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v21 + v17 + a3;
}

uint64_t type metadata accessor for HeaderView.TitleDescriptionHeader(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D206E0);
}

uint64_t type metadata accessor for HeaderView.CardHeaderView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D20780);
}

unint64_t sub_23DFE8CB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20530;
  if (!qword_256D20530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20518);
    v2[0] = sub_23DF73F28(&qword_256D20538, type metadata accessor for HeaderView.TitleDescriptionHeader, (uint64_t)&unk_23E13B1D0);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20530);
  }
  return result;
}

unint64_t sub_23DFE8D5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D205A0;
  if (!qword_256D205A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D205A8);
    v2[0] = sub_23DFE8DE0();
    v2[1] = sub_23DF89B88(&qword_256D20100, &qword_256D20108, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D205A0);
  }
  return result;
}

unint64_t sub_23DFE8DE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D205B0;
  if (!qword_256D205B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D205B8);
    v2[0] = sub_23DFE8E64();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D205B0);
  }
  return result;
}

unint64_t sub_23DFE8E64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D205C0;
  if (!qword_256D205C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D205C8);
    v2[0] = sub_23DFE8EE8();
    v2[1] = sub_23DF89B88(&qword_256D205E0, &qword_256D205E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D205C0);
  }
  return result;
}

unint64_t sub_23DFE8EE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D205D0;
  if (!qword_256D205D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D205D8);
    v2 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D205D0);
  }
  return result;
}

uint64_t sub_23DFE8F6C(uint64_t a1)
{
  sub_23DFA055C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_23DFE9010()
{
  return sub_23E136174();
}

unint64_t sub_23DFE903C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D205F0;
  if (!qword_256D205F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20578);
    v2[0] = sub_23DFE90C0();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D205F0);
  }
  return result;
}

unint64_t sub_23DFE90C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D205F8;
  if (!qword_256D205F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20570);
    v2[0] = sub_23DFE9144();
    v2[1] = sub_23DF89B88(&qword_256D20620, &qword_256D1E830, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D205F8);
  }
  return result;
}

unint64_t sub_23DFE9144()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20600;
  if (!qword_256D20600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20568);
    v2[0] = sub_23DFEDCD4(&qword_256D20608, &qword_256D20560, &qword_256D205B8, (uint64_t (*)(void))sub_23DFE8DE0);
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20600);
  }
  return result;
}

uint64_t sub_23DFE91E8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  if ((a9 & 1) == 0)
    return sub_23DFE91FC(result, a2, a3, a4, a5, a6, a7, a8 & 1);
  return result;
}

uint64_t sub_23DFE91FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)
  {
    sub_23DFA056C(a1, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23DFE928C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  if ((a9 & 1) == 0)
    return sub_23DFE92A0(result, a2, a3, a4, a5, a6, a7, a8 & 1);
  return result;
}

uint64_t sub_23DFE92A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)
  {
    sub_23DFA055C(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

unint64_t sub_23DFE9328()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20640;
  if (!qword_256D20640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20638);
    v2[0] = sub_23DFE9394();
    v2[1] = sub_23DFE949C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20640);
  }
  return result;
}

unint64_t sub_23DFE9394()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20648;
  if (!qword_256D20648)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20650);
    v2[0] = sub_23DFE9418();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20648);
  }
  return result;
}

unint64_t sub_23DFE9418()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D20658;
  if (!qword_256D20658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20660);
    v2 = sub_23DF89B88(&qword_256D20100, &qword_256D20108, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D20658);
  }
  return result;
}

unint64_t sub_23DFE949C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20668;
  if (!qword_256D20668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20670);
    v2[0] = sub_23DFEDA24(&qword_256D20678, qword_256D20680, MEMORY[0x24BDEDBE0]);
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20668);
  }
  return result;
}

_QWORD *sub_23DFE9538(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  char *v33;
  char *v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a3[6];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *v8 = *(_QWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(_QWORD *)((char *)a2 + v7 + 24);
    v8[2] = *(_QWORD *)((char *)a2 + v7 + 16);
    v8[3] = v11;
    v12 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = &v9[v12];
    v15 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = *((_QWORD *)v14 + 1);
      *v13 = *(_QWORD *)v14;
      v13[1] = v21;
      if (EnumCaseMultiPayload == 1)
      {
        v22 = *((_QWORD *)v14 + 3);
        v13[2] = *((_QWORD *)v14 + 2);
        v13[3] = v22;
        swift_bridgeObjectRetain();
      }
      else
      {
        v23 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v33 = &v14[v23];
        v34 = (char *)v13 + v23;
        v24 = sub_23E135910();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v34, v33, v24);
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v13 + *(int *)(v26 + 48)) = *(_QWORD *)&v14[*(int *)(v26 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v27 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27);
    v31 = v29[8];
    sub_23DF89F20(v30, v31);
    *(_QWORD *)v28 = v30;
    v28[8] = v31;
  }
  return v4;
}

uint64_t sub_23DFE9738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  return sub_23DF8A078(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 8));
}

_OWORD *sub_23DFE9830(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;
  char *v31;
  char *v32;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_QWORD *)((char *)a2 + v6 + 24);
  v7[2] = *(_QWORD *)((char *)a2 + v6 + 16);
  v7[3] = v10;
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_QWORD *)((char *)v7 + v11);
  v13 = &v8[v11];
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = *((_QWORD *)v13 + 1);
    *v12 = *(_QWORD *)v13;
    v12[1] = v19;
    if (EnumCaseMultiPayload == 1)
    {
      v20 = *((_QWORD *)v13 + 3);
      v12[2] = *((_QWORD *)v13 + 2);
      v12[3] = v20;
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v31 = &v13[v21];
      v32 = (char *)v12 + v21;
      v22 = sub_23E135910();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v32, v31, v22);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v12 + *(int *)(v24 + 48)) = *(_QWORD *)&v13[*(int *)(v24 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v25 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  v29 = v27[8];
  sub_23DF89F20(v28, v29);
  *(_QWORD *)v26 = v28;
  v26[8] = v29;
  return a1;
}

_QWORD *sub_23DFE9A04(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v10 = (char *)v7 + v9;
  v11 = &v8[v9];
  v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v37 = &v11[v20];
        v38 = &v10[v20];
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v38, v37, v21);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v10[*(int *)(v23 + 48)] = *(_QWORD *)&v11[*(int *)(v23 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  if (v16)
  {
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)v10, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v19 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    if (v19 == 1)
    {
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      v32 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v39 = &v10[v32];
      v33 = &v11[v32];
      v34 = sub_23E135910();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v39, v33, v34);
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&v10[*(int *)(v36 + 48)] = *(_QWORD *)&v11[*(int *)(v36 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_23DF89F20(*(_QWORD *)v26, v28);
  v29 = *(_QWORD *)v25;
  v30 = v25[8];
  *(_QWORD *)v25 = v27;
  v25[8] = v28;
  sub_23DF8A078(v29, v30);
  return a1;
}

_OWORD *sub_23DFE9D30(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v11 = (_OWORD *)((char *)v7 + v10);
  v12 = &v8[v10];
  v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v11, v12, *(_QWORD *)(v14 + 64));
    }
    else
    {
      *v11 = *(_OWORD *)v12;
      v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v17 = (char *)v11 + v16;
      v18 = &v12[v16];
      v19 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v11 + *(int *)(v20 + 48)) = *(_QWORD *)&v12[*(int *)(v20 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v21 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  return a1;
}

_QWORD *sub_23DFE9EB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = *((_QWORD *)v8 + 3);
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (char *)v7 + v11;
  v13 = &v8[v11];
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
      if (!swift_getEnumCaseMultiPayload())
      {
        *(_OWORD *)v12 = *(_OWORD *)v13;
        v32 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v33 = &v12[v32];
        v34 = &v13[v32];
        v35 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v12[*(int *)(v36 + 48)] = *(_QWORD *)&v13[*(int *)(v36 + 48)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v19 = *(_QWORD *)(v15 + 64);
      goto LABEL_8;
    }
    sub_23DF73E54((uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v12, v13, v19);
    goto LABEL_14;
  }
  if (v18)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(v15 + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v21 = &v12[v20];
    v22 = &v13[v20];
    v23 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)&v12[*(int *)(v24 + 48)] = *(_QWORD *)&v13[*(int *)(v24 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  v25 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  LOBYTE(v27) = v27[8];
  v29 = *(_QWORD *)v26;
  v30 = v26[8];
  *(_QWORD *)v26 = v28;
  v26[8] = (char)v27;
  sub_23DF8A078(v29, v30);
  return a1;
}

uint64_t sub_23DFEA130()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23DFEA1D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

uint64_t sub_23DFEA25C()
{
  return sub_23DFEA268();
}

uint64_t sub_23DFEA268()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23DFEA2F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *v6 = *(uint64_t *)((char *)a2 + v5);
    v6[1] = v8;
    v9 = *(uint64_t *)((char *)a2 + v5 + 24);
    v6[2] = *(uint64_t *)((char *)a2 + v5 + 16);
    v6[3] = v9;
    v10 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v11 = (_QWORD *)((char *)v6 + v10);
    v12 = &v7[v10];
    v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = *((_QWORD *)v12 + 1);
      *v11 = *(_QWORD *)v12;
      v11[1] = v19;
      if (EnumCaseMultiPayload == 1)
      {
        v20 = *((_QWORD *)v12 + 3);
        v11[2] = *((_QWORD *)v12 + 2);
        v11[3] = v20;
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v22 = (char *)v11 + v21;
        v23 = &v12[v21];
        v24 = sub_23E135910();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v11 + *(int *)(v26 + 48)) = *(_QWORD *)&v12[*(int *)(v26 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return v3;
}

uint64_t sub_23DFEA4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  v2 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v4 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  if (!(_DWORD)result)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v7 = v3 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v8 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    return swift_release();
  }
  return result;
}

_OWORD *sub_23DFEA590(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = *(_QWORD *)((char *)a2 + v4 + 8);
  *v5 = *(_QWORD *)((char *)a2 + v4);
  v5[1] = v7;
  v8 = *(_QWORD *)((char *)a2 + v4 + 24);
  v5[2] = *(_QWORD *)((char *)a2 + v4 + 16);
  v5[3] = v8;
  v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v10 = (_QWORD *)((char *)v5 + v9);
  v11 = &v6[v9];
  v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v17 = *((_QWORD *)v11 + 1);
    *v10 = *(_QWORD *)v11;
    v10[1] = v17;
    if (EnumCaseMultiPayload == 1)
    {
      v18 = *((_QWORD *)v11 + 3);
      v10[2] = *((_QWORD *)v11 + 2);
      v10[3] = v18;
      swift_bridgeObjectRetain();
    }
    else
    {
      v19 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v20 = (char *)v10 + v19;
      v21 = &v11[v19];
      v22 = sub_23E135910();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v10 + *(int *)(v24 + 48)) = *(_QWORD *)&v11[*(int *)(v24 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

_QWORD *sub_23DFEA724(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;

  *a1 = *a2;
  a1[1] = a2[1];
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = *(_QWORD *)((char *)a2 + v5 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[2] = *((_QWORD *)v7 + 2);
  v6[3] = *((_QWORD *)v7 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = (char *)v6 + v8;
  v10 = &v7[v8];
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        v19 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v20 = &v9[v19];
        v21 = &v10[v19];
        v22 = sub_23E135910();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v9[*(int *)(v24 + 48)] = *(_QWORD *)&v10[*(int *)(v24 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      return a1;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  if (v15)
  {
    sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v18 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    if (v18 == 1)
    {
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v27 = &v9[v26];
      v28 = &v10[v26];
      v29 = sub_23E135910();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&v9[*(int *)(v31 + 48)] = *(_QWORD *)&v10[*(int *)(v31 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23DFEAA00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = *(_OWORD *)((char *)a2 + v4 + 16);
  *v5 = *(_OWORD *)((char *)a2 + v4);
  v5[1] = v7;
  v8 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = (_OWORD *)((char *)v5 + v8);
  v10 = &v6[v8];
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      *v9 = *(_OWORD *)v10;
      v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v15 = (char *)v9 + v14;
      v16 = &v10[v14];
      v17 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v9 + *(int *)(v18 + 48)) = *(_QWORD *)&v10[*(int *)(v18 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

_QWORD *sub_23DFEAB54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  size_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)v7 + 3);
  v6[2] = *((_QWORD *)v7 + 2);
  v6[3] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v11 = (char *)v6 + v10;
  v12 = &v7[v10];
  v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      if (a1 == a2)
        return a1;
      sub_23DF73E54((uint64_t)v11, type metadata accessor for AccessoryControlsHeaderConfig.Image);
      if (!swift_getEnumCaseMultiPayload())
      {
        *(_OWORD *)v11 = *(_OWORD *)v12;
        v25 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v26 = &v11[v25];
        v27 = &v12[v25];
        v28 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v11[*(int *)(v29 + 48)] = *(_QWORD *)&v12[*(int *)(v29 + 48)];
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v18 = *(_QWORD *)(v14 + 64);
      goto LABEL_8;
    }
    sub_23DF73E54((uint64_t)v11, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v11, v12, v18);
    return a1;
  }
  if (v17)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v11, v12, *(_QWORD *)(v14 + 64));
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v19 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v20 = &v11[v19];
    v21 = &v12[v19];
    v22 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)&v11[*(int *)(v23 + 48)] = *(_QWORD *)&v12[*(int *)(v23 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_23DFEAD90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFEAD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23DFEADDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFEADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23DFEAE2C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23DFEAEA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D207C0;
  if (!qword_256D207C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20510);
    v2[0] = sub_23DFEAF14();
    v2[1] = sub_23DFEAFFC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D207C0);
  }
  return result;
}

unint64_t sub_23DFEAF14()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D207C8;
  if (!qword_256D207C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20508);
    v2 = sub_23DFEAF78();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D207C8);
  }
  return result;
}

unint64_t sub_23DFEAF78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D207D0;
  if (!qword_256D207D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D207D8);
    v2[0] = sub_23DF73F28(&qword_256D20528, type metadata accessor for HeaderView.CardHeaderView, (uint64_t)&unk_23E13B220);
    v2[1] = sub_23DFE8CB8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D207D0);
  }
  return result;
}

unint64_t sub_23DFEAFFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D207E0;
  if (!qword_256D207E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D207E8);
    v2[0] = sub_23DFEB068();
    v2[1] = sub_23DFEB0AC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED2F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D207E0);
  }
  return result;
}

unint64_t sub_23DFEB068()
{
  unint64_t result;

  result = qword_256D207F0;
  if (!qword_256D207F0)
  {
    result = MEMORY[0x24264C55C](&unk_23E139054, &type metadata for AnimationModel.Visibility.HeaderView);
    atomic_store(result, (unint64_t *)&qword_256D207F0);
  }
  return result;
}

unint64_t sub_23DFEB0AC()
{
  unint64_t result;

  result = qword_256D207F8;
  if (!qword_256D207F8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1390A4, &type metadata for AnimationModel.MatchedGeometryEffect.TitleDescriptionHeader);
    atomic_store(result, (unint64_t *)&qword_256D207F8);
  }
  return result;
}

unint64_t sub_23DFEB0F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20800;
  if (!qword_256D20800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20550);
    v2[0] = sub_23DF89B88(&qword_256D20808, &qword_256D20540, MEMORY[0x24BDF4700]);
    v2[1] = sub_23DF89B88(&qword_256D20810, &qword_256D20818, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20800);
  }
  return result;
}

uint64_t sub_23DFEB190()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFEB1A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for HeaderView.CardHeaderView.ContentView(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D20900);
}

uint64_t sub_23DFEB1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for HeaderView.TitleDescriptionHeader(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v10 = v0 + v3 + *(int *)(v1 + 32);
  sub_23DF8A078(*(_QWORD *)v10, *(_BYTE *)(v10 + 8));
  return swift_deallocObject();
}

uint64_t sub_23DFEB320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for HeaderView.TitleDescriptionHeader(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23DFE4A48(a1, v2 + v6, a2, *(double *)(v2 + v7), *(double *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for HeaderView.TitleDescriptionHeader.Content(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D209A0);
}

uint64_t *sub_23DFEB3A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v35;
  char *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = v11[1];
      *v10 = *v11;
      v10[1] = v18;
      if (EnumCaseMultiPayload == 1)
      {
        v19 = v11[3];
        v10[2] = v11[2];
        v10[3] = v19;
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v35 = (char *)v11 + v20;
        v36 = (char *)v10 + v20;
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v36, v35, v21);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v10 + *(int *)(v23 + 48)) = *(_QWORD *)((char *)v11 + *(int *)(v23 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v24 = *(int *)(a3 + 20);
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v28 = *(int *)(a3 + 24);
    v29 = (char *)v4 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)v30;
    v32 = *((_QWORD *)v30 + 1);
    v33 = v30[16];
    sub_23DFEB604(*(_QWORD *)v30, v32, v33);
    *(_QWORD *)v29 = v31;
    *((_QWORD *)v29 + 1) = v32;
    v29[16] = v33;
  }
  return v4;
}

uint64_t sub_23DFEB604(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_23DF9765C(result);
  else
    return swift_retain();
}

uint64_t sub_23DFEB610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v5 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v7 = v4 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v8 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23E135E74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return sub_23DF9D68C(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 16));
}

_QWORD *sub_23DFEB750(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v33;
  char *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = v10[1];
    *v9 = *v10;
    v9[1] = v16;
    if (EnumCaseMultiPayload == 1)
    {
      v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v33 = (char *)v10 + v18;
      v34 = (char *)v9 + v18;
      v19 = sub_23E135910();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v34, v33, v19);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v9 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v21 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_23E135E74();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *((_QWORD *)v28 + 1);
  v31 = v28[16];
  sub_23DFEB604(*(_QWORD *)v28, v30, v31);
  *(_QWORD *)v27 = v29;
  *((_QWORD *)v27 + 1) = v30;
  v27[16] = v31;
  return a1;
}

_QWORD *sub_23DFEB980(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      v7[1] = v8[1];
      if (EnumCaseMultiPayload == 1)
      {
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v40 = (char *)v8 + v17;
        v41 = (char *)v7 + v17;
        v18 = sub_23E135910();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v41, v40, v18);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v7 + *(int *)(v20 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v20 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
      if (a1 == a2)
        goto LABEL_19;
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    if (a1 == a2)
      goto LABEL_19;
    goto LABEL_15;
  }
  if (a1 == a2)
    goto LABEL_14;
  sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  v16 = swift_getEnumCaseMultiPayload();
  *v7 = *v8;
  v7[1] = v8[1];
  if (v16 == 1)
  {
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v42 = (char *)v7 + v35;
    v36 = (char *)v8 + v35;
    v37 = sub_23E135910();
    v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
    swift_bridgeObjectRetain();
    v38(v42, v36, v37);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)v7 + *(int *)(v39 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v39 + 48));
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  if (a1 != a2)
  {
LABEL_15:
    v21 = *(int *)(a3 + 20);
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    sub_23DF89C7C((uint64_t)a1 + v21, &qword_256D1E710);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  v30 = v27[16];
  sub_23DFEB604(*(_QWORD *)v27, v29, v30);
  v31 = *(_QWORD *)v26;
  v32 = *((_QWORD *)v26 + 1);
  v33 = v26[16];
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  v26[16] = v30;
  sub_23DF9D68C(v31, v32, v33);
  return a1;
}

_OWORD *sub_23DFEBD20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      *v8 = *v9;
      v13 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v8 + *(int *)(v17 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v17 + 48));
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_23E135E74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  return a1;
}

_QWORD *sub_23DFEBF04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_OWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = (_OWORD *)((char *)a1 + v8);
  v10 = (_OWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      else
      {
        *v9 = *v10;
        v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v18 = (char *)v9 + v17;
        v19 = (char *)v10 + v17;
        v20 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v9 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v21 + 48));
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_15:
      if (a1 == a2)
        goto LABEL_19;
      goto LABEL_16;
    }
    goto LABEL_7;
  }
  if (v15)
  {
    sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 == a2)
    goto LABEL_15;
  sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  if (swift_getEnumCaseMultiPayload())
  {
    v16 = *(_QWORD *)(v12 + 64);
LABEL_8:
    memcpy(v9, v10, v16);
    if (a1 == a2)
      goto LABEL_19;
    goto LABEL_16;
  }
  *v9 = *v10;
  v35 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v36 = (char *)v9 + v35;
  v37 = (char *)v10 + v35;
  v38 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
  *(_QWORD *)((char *)v9 + *(int *)(v39 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v39 + 48));
  swift_storeEnumTagMultiPayload();
  if (a1 == a2)
    goto LABEL_19;
LABEL_16:
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  sub_23DF89C7C((uint64_t)a1 + v22, &qword_256D1E710);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_23E135E74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
LABEL_19:
  v27 = *(int *)(a3 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = v29[16];
  v31 = *(_QWORD *)v28;
  v32 = *((_QWORD *)v28 + 1);
  v33 = v28[16];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v28[16] = v30;
  sub_23DF9D68C(v31, v32, v33);
  return a1;
}

uint64_t sub_23DFEC1F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFEC204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 > 1)
    return (v14 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23DFEC2B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFEC2BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 16) = -(char)a2;
  return result;
}

void sub_23DFEC368()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v0 <= 0x3F)
  {
    sub_23DFEC3F4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23DFEC3F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D20910)
  {
    sub_23E135E74();
    v0 = sub_23E135D9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D20910);
  }
}

uint64_t *sub_23DFEC448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v38;
  char v39;
  char *v40;
  uint64_t *v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v17 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = v11[1];
      *v10 = *v11;
      v10[1] = v19;
      if (EnumCaseMultiPayload == 1)
      {
        v20 = v11[3];
        v10[2] = v11[2];
        v10[3] = v20;
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v38 = (char *)v11 + v21;
        v40 = (char *)v10 + v21;
        v22 = sub_23E135910();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v40, v38, v22);
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v10 + *(int *)(v24 + 48)) = *(_QWORD *)((char *)v11 + *(int *)(v24 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v25 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(uint64_t *)((char *)a2 + v25);
    v29 = *((_QWORD *)v27 + 1);
    v30 = *((_QWORD *)v27 + 2);
    v31 = *((_QWORD *)v27 + 3);
    v32 = *((_QWORD *)v27 + 4);
    v33 = *((_QWORD *)v27 + 5);
    v34 = *((_QWORD *)v27 + 6);
    v35 = *((_QWORD *)v27 + 7);
    v41 = a1;
    v36 = v27[64];
    v39 = v27[65];
    sub_23DF98590(v28, v29, v30, v31, v32, v33, v34, v35, v36, v39);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    *((_QWORD *)v26 + 2) = v30;
    *((_QWORD *)v26 + 3) = v31;
    *((_QWORD *)v26 + 4) = v32;
    *((_QWORD *)v26 + 5) = v33;
    *((_QWORD *)v26 + 6) = v34;
    *((_QWORD *)v26 + 7) = v35;
    v26[64] = v36;
    v17 = v41;
    v26[65] = v39;
  }
  return v17;
}

uint64_t sub_23DFEC684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v5 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v7 = v4 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v8 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v9 = a1 + *(int *)(a2 + 24);
  return sub_23DF985F0(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_QWORD *)(v9 + 56), *(_BYTE *)(v9 + 64), *(_BYTE *)(v9 + 65));
}

_QWORD *sub_23DFEC798(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v35;
  char v36;
  char *v37;
  _QWORD *v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = v10[1];
    *v9 = *v10;
    v9[1] = v16;
    if (EnumCaseMultiPayload == 1)
    {
      v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v35 = (char *)v10 + v18;
      v37 = (char *)v9 + v18;
      v19 = sub_23E135910();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v37, v35, v19);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v9 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v21 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v22 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)((char *)a2 + v22);
  v26 = *((_QWORD *)v24 + 1);
  v27 = *((_QWORD *)v24 + 2);
  v28 = *((_QWORD *)v24 + 3);
  v29 = *((_QWORD *)v24 + 4);
  v30 = *((_QWORD *)v24 + 5);
  v31 = *((_QWORD *)v24 + 6);
  v32 = *((_QWORD *)v24 + 7);
  v38 = a1;
  v33 = v24[64];
  v36 = v24[65];
  sub_23DF98590(v25, v26, v27, v28, v29, v30, v31, v32, v33, v36);
  *(_QWORD *)v23 = v25;
  *((_QWORD *)v23 + 1) = v26;
  *((_QWORD *)v23 + 2) = v27;
  *((_QWORD *)v23 + 3) = v28;
  *((_QWORD *)v23 + 4) = v29;
  *((_QWORD *)v23 + 5) = v30;
  *((_QWORD *)v23 + 6) = v31;
  *((_QWORD *)v23 + 7) = v32;
  v23[64] = v33;
  v23[65] = v36;
  return v38;
}

_QWORD *sub_23DFEC9A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char v50;
  char *v51;
  _QWORD *v52;
  char *v53;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      v7[1] = v8[1];
      if (EnumCaseMultiPayload == 1)
      {
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v49 = (char *)v8 + v17;
        v51 = (char *)v7 + v17;
        v18 = sub_23E135910();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v51, v49, v18);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v7 + *(int *)(v20 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v20 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_14;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_14;
  }
  if (v13)
  {
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v16 = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    v7[1] = v8[1];
    if (v16 == 1)
    {
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      v44 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v53 = (char *)v7 + v44;
      v45 = (char *)v8 + v44;
      v46 = sub_23E135910();
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      v47(v53, v45, v46);
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v7 + *(int *)(v48 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v48 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *((_QWORD *)v23 + 1);
  v26 = *((_QWORD *)v23 + 2);
  v27 = *((_QWORD *)v23 + 3);
  v28 = *((_QWORD *)v23 + 4);
  v29 = *((_QWORD *)v23 + 5);
  v30 = *((_QWORD *)v23 + 6);
  v31 = *((_QWORD *)v23 + 7);
  v52 = a1;
  v32 = v23[64];
  v50 = v23[65];
  sub_23DF98590(*(_QWORD *)v23, v25, v26, v27, v28, v29, v30, v31, v32, v50);
  v33 = *(_QWORD *)v22;
  v34 = *((_QWORD *)v22 + 1);
  v35 = *((_QWORD *)v22 + 2);
  v36 = *((_QWORD *)v22 + 3);
  v37 = *((_QWORD *)v22 + 4);
  v38 = *((_QWORD *)v22 + 5);
  v39 = *((_QWORD *)v22 + 6);
  v40 = *((_QWORD *)v22 + 7);
  v41 = v22[64];
  v42 = v22[65];
  *(_QWORD *)v22 = v24;
  *((_QWORD *)v22 + 1) = v25;
  *((_QWORD *)v22 + 2) = v26;
  *((_QWORD *)v22 + 3) = v27;
  *((_QWORD *)v22 + 4) = v28;
  *((_QWORD *)v22 + 5) = v29;
  *((_QWORD *)v22 + 6) = v30;
  *((_QWORD *)v22 + 7) = v31;
  v22[64] = v32;
  v22[65] = v50;
  sub_23DF985F0(v33, v34, v35, v36, v37, v38, v39, v40, v41, v42);
  return v52;
}

_OWORD *sub_23DFECD18(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      *v8 = *v9;
      v13 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v8 + *(int *)(v17 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v17 + 48));
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 3);
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *((_OWORD *)v19 + 3) = v21;
  *((_WORD *)v19 + 32) = *((_WORD *)v20 + 32);
  v22 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v22;
  return a1;
}

_QWORD *sub_23DFECE94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_OWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = (_OWORD *)((char *)a1 + v8);
  v10 = (_OWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
      if (!swift_getEnumCaseMultiPayload())
      {
        *v9 = *v10;
        v40 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v41 = (char *)v9 + v40;
        v42 = (char *)v10 + v40;
        v43 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v9 + *(int *)(v44 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v44 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v16 = *(_QWORD *)(v12 + 64);
      goto LABEL_8;
    }
    sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v9, v10, v16);
    goto LABEL_14;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  else
  {
    *v9 = *v10;
    v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v18 = (char *)v9 + v17;
    v19 = (char *)v10 + v17;
    v20 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)v9 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v21 + 48));
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v22 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = v24[64];
  v26 = v24[65];
  v27 = *(_QWORD *)v23;
  v28 = *((_QWORD *)v23 + 1);
  v29 = *((_QWORD *)v23 + 2);
  v30 = *((_QWORD *)v23 + 3);
  v31 = *((_QWORD *)v23 + 4);
  v32 = *((_QWORD *)v23 + 5);
  v33 = *((_QWORD *)v23 + 6);
  v34 = *((_QWORD *)v23 + 7);
  v35 = v23[64];
  v36 = v23[65];
  v37 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v37;
  v38 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v38;
  v23[64] = v25;
  v23[65] = v26;
  sub_23DF985F0(v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  return a1;
}

uint64_t sub_23DFED120()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFED12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 65);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23DFED1A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DFED1B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 65) = -(char)a2;
  return result;
}

uint64_t sub_23DFED230()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23DFED2B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D209E0;
  if (!qword_256D209E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20838);
    v2[0] = sub_23DF73F28(&qword_256D209E8, type metadata accessor for HeaderView.CardHeaderView.ContentView, (uint64_t)&unk_23E13B370);
    v2[1] = sub_23DF89B88(&qword_256D209F0, &qword_256D20848, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D209E0);
  }
  return result;
}

unint64_t sub_23DFED354()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D209F8;
  if (!qword_256D209F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20A00);
    v2[0] = sub_23DF89B88(&qword_256D20A08, &qword_256D20A10, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D209F8);
  }
  return result;
}

uint64_t sub_23DFED3D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFED3E8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23DFED3F8(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = 65280;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 113) = 0u;
  return result;
}

uint64_t sub_23DFED420()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E135E74();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23DFED480()
{
  sub_23E135E74();
  return sub_23E135E68();
}

uint64_t sub_23DFED4B8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23DFED4DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20A48;
  if (!qword_256D20A48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20A40);
    v2[0] = sub_23DFED560();
    v2[1] = sub_23DF89B88(&qword_256D20A90, &qword_256D20A98, MEMORY[0x24BDF1330]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20A48);
  }
  return result;
}

unint64_t sub_23DFED560()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20A50;
  if (!qword_256D20A50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20A58);
    v2[0] = sub_23DF8E904(&qword_256D20A60, &qword_256D20A68, (uint64_t (*)(void))sub_23DFED604, MEMORY[0x24BDECC60]);
    v2[1] = sub_23DF89B88(&qword_256D20A80, &qword_256D20A88, MEMORY[0x24BDF1330]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20A50);
  }
  return result;
}

unint64_t sub_23DFED604()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D20A70;
  if (!qword_256D20A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20A78);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20660);
    v2[3] = sub_23DFE9418();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20A70);
  }
  return result;
}

uint64_t sub_23DFED6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11)
{
  uint64_t result;

  if ((~a11 & 0xFF00) != 0)
    return sub_23DFE91E8(a4, a5, a6, a7, a8, a9, a10, a11, HIBYTE(a11) & 1);
  return result;
}

uint64_t sub_23DFED6F4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23DFA056C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23DFED724(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23DFA055C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23DFED754(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_23DFED7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11)
{
  uint64_t result;

  if ((~a11 & 0xFF00) != 0)
    return sub_23DFE928C(a4, a5, a6, a7, a8, a9, a10, a11, HIBYTE(a11) & 1);
  return result;
}

unint64_t sub_23DFED7FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B00;
  if (!qword_256D20B00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20B08);
    v2[0] = sub_23DFED880();
    v2[1] = sub_23DF89B88(&qword_256D20100, &qword_256D20108, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B00);
  }
  return result;
}

unint64_t sub_23DFED880()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B10;
  if (!qword_256D20B10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20B18);
    v2[0] = sub_23DFED904();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B10);
  }
  return result;
}

unint64_t sub_23DFED904()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B20;
  if (!qword_256D20B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20B28);
    v2[0] = sub_23DFED988();
    v2[1] = sub_23DF89B88(&qword_256D205E0, &qword_256D205E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B20);
  }
  return result;
}

unint64_t sub_23DFED988()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B30;
  if (!qword_256D20B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20B38);
    v2[0] = sub_23DFEDA24(&qword_256D20B40, &qword_256D20B48, MEMORY[0x24BDEDB80]);
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B30);
  }
  return result;
}

uint64_t sub_23DFEDA24(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x24BDF1F80];
    v7[1] = a3;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DFEDA80(uint64_t a1)
{
  sub_23DFA055C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_23DFEDB28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B50;
  if (!qword_256D20B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20AD8);
    v2[0] = sub_23DFEDBAC();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B50);
  }
  return result;
}

unint64_t sub_23DFEDBAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B58;
  if (!qword_256D20B58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20AD0);
    v2[0] = sub_23DFEDC30();
    v2[1] = sub_23DF89B88(&qword_256D20620, &qword_256D1E830, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B58);
  }
  return result;
}

unint64_t sub_23DFEDC30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B60;
  if (!qword_256D20B60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20AC8);
    v2[0] = sub_23DFEDCD4(&qword_256D20B68, &qword_256D20AC0, &qword_256D20B18, (uint64_t (*)(void))sub_23DFED880);
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B60);
  }
  return result;
}

uint64_t sub_23DFEDCD4(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[4];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v9[3] = a4();
    v9[0] = swift_getOpaqueTypeConformance2();
    v9[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23DFEDD6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20B78;
  if (!qword_256D20B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20A28);
    v2[0] = sub_23DF89B88(&qword_256D20B80, &qword_256D20A18, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20B78);
  }
  return result;
}

uint64_t sub_23DFEDDF0()
{
  return sub_23DF89B88(&qword_256D20B88, qword_256D20B90, MEMORY[0x24BDF4700]);
}

ValueMetadata *_s9LightbulbVMa()
{
  return &_s9LightbulbVN;
}

uint64_t sub_23DFEDE30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *);
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  char v52;
  double v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, _QWORD, uint64_t);
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, int *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v112;
  unsigned int v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  unsigned int (*v125)(uint64_t, uint64_t, uint64_t);
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v135 = type metadata accessor for AccessoryControlInfo(0);
  v133 = *(_QWORD *)(v135 - 8);
  v2 = MEMORY[0x24BDAC7A8](v135);
  v117 = (uint64_t)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v134 = (uint64_t)&v112 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v123 = (uint64_t)&v112 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v124 = (char *)&v112 - v8;
  v118 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v118);
  v119 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v10);
  v122 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v120 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v146 = (uint64_t)&v112 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v132 = (uint64_t)&v112 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v145 = (uint64_t)&v112 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v140 = (uint64_t)&v112 - v21;
  v116 = sub_23E135958();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v114 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_23E13534C();
  v136 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  *(_QWORD *)&v142 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for Device.Control.IncrementalState(0);
  MEMORY[0x24BDAC7A8](v130);
  v139 = (uint64_t)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_23E135520();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v126 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v26);
  v144 = (uint64_t)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23E1359AC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v143 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23E1356DC();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v129 = (uint64_t)&v112 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v112 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v112 - v41;
  v43 = *(void (**)(char *))(v32 + 104);
  v113 = *MEMORY[0x24BE4E230];
  v43(v34);
  v137 = (int *)type metadata accessor for HAPControlSolver.Source();
  v141 = a1;
  sub_23E135A48();
  v44 = *(void (**)(char *, uint64_t))(v32 + 8);
  v44(v34, v31);
  v45 = *MEMORY[0x24BE4E238];
  ((void (*)(char *, uint64_t, uint64_t))v43)(v34, v45, v31);
  sub_23E135A48();
  v44(v34, v31);
  v125 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v125((uint64_t)v40, 1, v28) == 1)
  {
    sub_23DF89C7C((uint64_t)v40, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v42, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v138 = v42;
    v112 = v29;
    v47 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v121 = v28;
    v47(v143, v40, v28);
    v48 = v127;
    v49 = (uint64_t)v126;
    v50 = v128;
    (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v126, *MEMORY[0x24BE4DF20], v128);
    v51 = 0.0;
    sub_23E0ABBCC(v141, v49, v144, 0.0, 100.0, 1.0);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
    ((void (*)(char *, uint64_t, uint64_t))v43)(v34, v45, v31);
    v52 = sub_23E135AA8();
    v44(v34, v31);
    if (v52 == 2 || (v52 & 1) != 0)
    {
      ((void (*)(char *, _QWORD, uint64_t))v43)(v34, v113, v31);
      v53 = COERCE_DOUBLE(sub_23E135AC0());
      v55 = v54;
      v44(v34, v31);
      if ((v55 & 1) != 0)
        v51 = 0.0;
      else
        v51 = v53;
    }
    *(double *)v142 = v51;
    v56 = v136;
    v57 = v131;
    (*(void (**)(void))(v136 + 104))();
    v58 = v129;
    sub_23DF89C1C((uint64_t)v138, v129, &qword_256D1D530);
    v59 = v121;
    if (v125(v58, 1, v121) == 1)
    {
      sub_23DF89C7C(v58, &qword_256D1D530);
      v60 = 0;
    }
    else
    {
      v61 = v114;
      sub_23E135964();
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v58, v59);
      v62 = sub_23E13594C();
      v56 = v136;
      v60 = v62;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v61, v116);
    }
    v63 = (uint64_t)v124;
    v64 = (uint64_t)v122;
    v65 = v141;
    v67 = (uint64_t)v143;
    v66 = v144;
    v68 = (uint64_t)v119;
    v69 = *(void (**)(uint64_t, _QWORD, uint64_t))(v56 + 32);
    v70 = v139;
    v69(v139, v142, v57);
    *(_BYTE *)(v70 + *(int *)(v130 + 20)) = v60 & 1;
    v71 = v140;
    sub_23DFEEAFC((uint64_t)v138, v66, v70, v65, v140);
    type metadata accessor for AccessoryControlSolver.HAP();
    swift_storeEnumTagMultiPayload();
    sub_23E12C404(v65, v67, v64);
    sub_23DF73E54(v68, type metadata accessor for ControlTextModifier.Config);
    sub_23E135988();
    v72 = (int *)v135;
    sub_23DF73E10(v64, v63 + *(int *)(v135 + 20), type metadata accessor for AccessoryControlInfo.State);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v73 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v74 = (v73 + 32) & ~v73;
    v75 = swift_allocObject();
    v142 = xmmword_23E138050;
    *(_OWORD *)(v75 + 16) = xmmword_23E138050;
    sub_23DF73E10(v65, v75 + v74, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v76 = *(_BYTE *)(v65 + v137[12]);
    v77 = (uint64_t *)(v65 + v137[13]);
    v79 = *v77;
    v78 = v77[1];
    v80 = (_QWORD *)(v63 + v72[7]);
    v81 = v72[9];
    *(_QWORD *)(v63 + v72[11]) = v75;
    *(_BYTE *)(v63 + v72[6]) = v76;
    *v80 = v79;
    v80[1] = v78;
    *(_WORD *)(v63 + v72[8]) = 1027;
    *(_BYTE *)(v63 + v81) = 12;
    *(_BYTE *)(v63 + v72[10]) = 1;
    swift_bridgeObjectRetain();
    sub_23DFEEE20(v65, v145);
    v82 = v132;
    sub_23DF89C1C(v71, v132, &qword_256D1F300);
    v83 = v134;
    sub_23DF73E10(v63, v134, type metadata accessor for AccessoryControlInfo);
    v84 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v133 + 48);
    v85 = v64;
    v86 = v65;
    if (v84(v82, 1, v72) == 1)
    {
      v87 = v123;
      sub_23DF89384(v83, v123, type metadata accessor for AccessoryControlInfo);
      sub_23DF89C7C(v82, &qword_256D1F300);
    }
    else
    {
      sub_23DF73E54(v83, type metadata accessor for AccessoryControlInfo);
      v85 = v64;
      v87 = v123;
      sub_23DF89384(v82, v123, type metadata accessor for AccessoryControlInfo);
    }
    v88 = (uint64_t)v120;
    v89 = v146;
    sub_23DF89C1C(v145, v146, &qword_256D1F300);
    *(_BYTE *)(v87 + v72[6]) = 0;
    if (!v84(v89, 1, v72))
      *(_BYTE *)(v146 + v72[6]) = 1;
    sub_23DF89C1C(v146, v88, &qword_256D1F300);
    if (v84(v88, 1, v72) == 1)
    {
      sub_23DF89C7C(v88, &qword_256D1F300);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
      v90 = type metadata accessor for AccessoryControlGroup(0);
      v91 = *(unsigned __int8 *)(*(_QWORD *)(v90 - 8) + 80);
      v92 = (v91 + 32) & ~v91;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v142;
      v93 = v46 + v92;
      sub_23DF73E10(v87, v93, type metadata accessor for AccessoryControlInfo);
      type metadata accessor for AccessoryControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v94 = (uint64_t *)(v86 + v137[7]);
      v96 = *v94;
      v95 = v94[1];
      v97 = (_QWORD *)(v93 + *(int *)(v90 + 24));
      v98 = (_QWORD *)(v93 + *(int *)(v90 + 20));
      *v98 = v96;
      v98[1] = v95;
      *v97 = v96;
      v97[1] = v95;
      swift_bridgeObjectRetain_n();
      sub_23DF73E54(v87, type metadata accessor for AccessoryControlInfo);
      sub_23DF89C7C(v145, &qword_256D1F300);
      sub_23DF73E54(v63, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E54(v85, type metadata accessor for AccessoryControlInfo.State);
      sub_23DF89C7C(v140, &qword_256D1F300);
      sub_23DF73E54(v139, type metadata accessor for Device.Control.IncrementalState);
      sub_23DF73E54(v144, type metadata accessor for Device.Control.IncrementalConfig);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v67, v121);
    }
    else
    {
      v99 = v86;
      v100 = v117;
      sub_23DF89384(v88, v117, type metadata accessor for AccessoryControlInfo);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
      v101 = type metadata accessor for AccessoryControlGroup(0);
      v102 = *(unsigned __int8 *)(*(_QWORD *)(v101 - 8) + 80);
      v103 = (v102 + 32) & ~v102;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v142;
      v104 = v46 + v103;
      v105 = v104 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      sub_23DF73E10(v87, v104, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E10(v100, v105, type metadata accessor for AccessoryControlInfo);
      type metadata accessor for AccessoryControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v106 = (uint64_t *)(v99 + v137[7]);
      v108 = *v106;
      v107 = v106[1];
      v109 = (_QWORD *)(v104 + *(int *)(v101 + 24));
      v110 = (_QWORD *)(v104 + *(int *)(v101 + 20));
      *v110 = v108;
      v110[1] = v107;
      *v109 = v108;
      v109[1] = v107;
      swift_bridgeObjectRetain_n();
      sub_23DF73E54(v100, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E54(v87, type metadata accessor for AccessoryControlInfo);
      sub_23DF89C7C(v145, &qword_256D1F300);
      sub_23DF73E54(v63, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E54(v85, type metadata accessor for AccessoryControlInfo.State);
      sub_23DF89C7C(v140, &qword_256D1F300);
      sub_23DF73E54(v139, type metadata accessor for Device.Control.IncrementalState);
      sub_23DF73E54(v144, type metadata accessor for Device.Control.IncrementalConfig);
      (*(void (**)(char *, uint64_t))(v112 + 8))(v143, v121);
    }
    sub_23DF89C7C((uint64_t)v138, &qword_256D1D530);
    sub_23DF89C7C(v146, &qword_256D1F300);
  }
  return v46;
}

uint64_t sub_23DFEEAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a4;
  v31 = a2;
  v32 = a3;
  v7 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E134C80();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E1359AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v15, &qword_256D1D530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23DF89C7C((uint64_t)v15, &qword_256D1D530);
    v20 = type metadata accessor for AccessoryControlInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    sub_23E135988();
    v22 = (uint64_t)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48)];
    sub_23DF73E10(v31, (uint64_t)v9, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E10(v32, v22, type metadata accessor for Device.Control.IncrementalState);
    v23 = type metadata accessor for Device.Control.IncrementalState(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23E138050;
    sub_23DF73E10(v35, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v27 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v28 = (_QWORD *)(a5 + v27[7]);
    v29 = v27[9];
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(a5, v12, v34);
    sub_23DF89384((uint64_t)v9, a5 + v27[5], type metadata accessor for AccessoryControlInfo.State);
    *(_QWORD *)(a5 + v27[11]) = v26;
    *(_BYTE *)(a5 + v27[6]) = 0;
    *v28 = 0;
    v28[1] = 0;
    *(_WORD *)(a5 + v27[8]) = 1028;
    *(_BYTE *)(a5 + v29) = 12;
    *(_BYTE *)(a5 + v27[10]) = 1;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v27 - 1) + 56))(a5, 0, 1, v27);
  }
}

uint64_t sub_23DFEEE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  void (*v81)(_BYTE *, _QWORD, uint64_t);
  void (*v82)(_BYTE *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(_BYTE *, uint64_t, uint64_t);
  int v87;
  _BOOL4 v88;
  uint64_t v89;
  void (*v90)(uint64_t *, uint64_t, uint64_t, uint64_t);
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  double v97;
  void (*v98)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  void (*v117)(_BYTE *, uint64_t);
  _BYTE *v118;
  uint64_t v119;
  double *v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t (*v131)(unsigned __int16 *, uint64_t, uint64_t);
  uint64_t v132;
  int v133;
  _BYTE *v134;
  int v135;
  uint64_t *v136;
  uint64_t v137;
  _WORD *v138;
  _BYTE *v139;
  int v140;
  _BYTE *v141;
  _BYTE *v142;
  int v143;
  _BYTE *v144;
  int v145;
  _BYTE *v146;
  int v147;
  uint64_t v148;
  unsigned __int16 *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  double v161;
  char v162;
  char v163;
  double v164;
  double *v165;
  uint64_t v166;
  double *v167;
  _BYTE *v168;
  char v169;
  uint64_t v170;
  char v171;
  void (*v172)(uint64_t *, uint64_t, uint64_t, uint64_t);
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  uint8_t *v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t *v182;
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  BOOL v197;
  char v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t *, _BYTE *, uint64_t);
  _BYTE *v211;
  _BYTE *v212;
  _BYTE *v213;
  _BYTE *v214;
  uint64_t v215;
  BOOL v216;
  void (*v217)(uint64_t, uint64_t);
  _BYTE v218[4];
  int v219;
  _BYTE *v220;
  _BYTE *v221;
  _BYTE *v222;
  _BYTE *v223;
  _BYTE *v224;
  uint64_t v225;
  uint64_t v226;
  _BYTE *v227;
  _WORD *v228;
  _BYTE *v229;
  uint64_t v230;
  unsigned __int16 *v231;
  int v232;
  _BYTE *v233;
  _BYTE *v234;
  _BYTE *v235;
  _BYTE *v236;
  _BYTE *v237;
  _BYTE *v238;
  _BYTE *v239;
  _BYTE *v240;
  _BYTE *v241;
  _BYTE *v242;
  _BYTE *v243;
  _BYTE *v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  _BYTE *v250;
  void (*v251)(uint64_t *, uint64_t, uint64_t, uint64_t);
  _BYTE *v252;
  _BYTE *v253;
  _BYTE *v254;
  _BYTE *v255;
  uint64_t v256;
  int v257;
  _BYTE *v258;
  uint64_t v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  double *v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  double *v267;
  _BYTE *v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  char v272;
  BOOL v273;
  uint64_t v274;
  uint64_t v275;

  v270 = a1;
  v259 = a2;
  v248 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v248);
  v250 = &v218[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v262 = sub_23E134C80();
  v256 = *(_QWORD *)(v262 - 8);
  MEMORY[0x24BDAC7A8](v262);
  v249 = &v218[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v247 = type metadata accessor for Device.Control.ColorState(0);
  v246 = *(_QWORD *)(v247 - 8);
  MEMORY[0x24BDAC7A8](v247);
  v245 = (uint64_t *)&v218[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v5);
  v255 = &v218[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for HAPControlSolver.Source();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v251 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))&v218[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v253 = &v218[-v10];
  v269 = sub_23E135328();
  v261 = *(_QWORD *)(v269 - 8);
  v11 = MEMORY[0x24BDAC7A8](v269);
  v254 = &v218[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v220 = &v218[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v222 = &v218[-v15];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v244 = &v218[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v258 = &v218[-v19];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v20);
  v237 = &v218[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v226 = sub_23E135B2C();
  v225 = *(_QWORD *)(v226 - 8);
  MEMORY[0x24BDAC7A8](v226);
  v224 = &v218[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v23 = MEMORY[0x24BDAC7A8](v230);
  v243 = &v218[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v229 = &v218[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  v221 = &v218[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v223 = &v218[-v30];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v231 = (unsigned __int16 *)&v218[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  v233 = &v218[-v34];
  v35 = MEMORY[0x24BDAC7A8](v33);
  v241 = &v218[-v36];
  v37 = MEMORY[0x24BDAC7A8](v35);
  v234 = &v218[-v38];
  v39 = MEMORY[0x24BDAC7A8](v37);
  v242 = &v218[-v40];
  v41 = MEMORY[0x24BDAC7A8](v39);
  v240 = &v218[-v42];
  v43 = MEMORY[0x24BDAC7A8](v41);
  v252 = &v218[-v44];
  v45 = MEMORY[0x24BDAC7A8](v43);
  v228 = &v218[-v46];
  v47 = MEMORY[0x24BDAC7A8](v45);
  v263 = (double *)&v218[-v48];
  v49 = MEMORY[0x24BDAC7A8](v47);
  v267 = (double *)&v218[-v50];
  MEMORY[0x24BDAC7A8](v49);
  v264 = (uint64_t *)&v218[-v51];
  v52 = sub_23E1356DC();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v55 = &v218[-((v54 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v239 = &v218[-((v58 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = MEMORY[0x24BDAC7A8](v57);
  v227 = &v218[-v60];
  v61 = MEMORY[0x24BDAC7A8](v59);
  v238 = &v218[-v62];
  v63 = MEMORY[0x24BDAC7A8](v61);
  v236 = &v218[-v64];
  v65 = MEMORY[0x24BDAC7A8](v63);
  v235 = &v218[-v66];
  v67 = MEMORY[0x24BDAC7A8](v65);
  v69 = &v218[-v68];
  v70 = MEMORY[0x24BDAC7A8](v67);
  v72 = &v218[-v71];
  v73 = MEMORY[0x24BDAC7A8](v70);
  v75 = &v218[-v74];
  v76 = MEMORY[0x24BDAC7A8](v73);
  v78 = &v218[-v77];
  MEMORY[0x24BDAC7A8](v76);
  v80 = &v218[-v79];
  v81 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v53 + 104);
  v81(v55, *MEMORY[0x24BE4E340], v52);
  v266 = v7;
  sub_23E135A48();
  v82 = *(void (**)(_BYTE *, uint64_t))(v53 + 8);
  v82(v55, v52);
  v81(v55, *MEMORY[0x24BE4E240], v52);
  sub_23E135A48();
  v82(v55, v52);
  v81(v55, *MEMORY[0x24BE4E290], v52);
  sub_23E135A48();
  v82(v55, v52);
  v83 = (uint64_t)v80;
  v84 = sub_23E1359AC();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v85 + 48);
  v268 = v75;
  v87 = v86(v75, 1, v84);
  v265 = v83;
  LODWORD(v83) = v86((_BYTE *)v83, 1, v84);
  v260 = v78;
  sub_23DF89C1C((uint64_t)v78, (uint64_t)v72, &qword_256D1D530);
  v88 = (_DWORD)v83 != 1 && v86(v72, 1, v84) != 1;
  sub_23DF89C7C((uint64_t)v72, &qword_256D1D530);
  v257 = sub_23E135550();
  if (!v88 && v87 == 1)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v89 = sub_23E135C10();
    __swift_project_value_buffer(v89, (uint64_t)qword_256D1EAC0);
    v90 = v251;
    sub_23DF73E10(v270, (uint64_t)v251, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v91 = sub_23E135BF8();
    v92 = sub_23E137350();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      v275 = v94;
      *(_DWORD *)v93 = 136315138;
      sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v95 = sub_23E1375FC();
      v274 = sub_23E0AB274(v95, v96, &v275);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      sub_23DF73E54((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      _os_log_impl(&dword_23DF71000, v91, v92, "Service appears to not support HSV or Color Temperature, how is that possible? %s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264C628](v94, -1, -1);
      MEMORY[0x24264C628](v93, -1, -1);

    }
    else
    {

      sub_23DF73E54((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    }
    sub_23DF89C7C((uint64_t)v260, &qword_256D1D530);
LABEL_15:
    sub_23DF89C7C((uint64_t)v268, &qword_256D1D530);
    sub_23DF89C7C(v265, &qword_256D1D530);
    v101 = type metadata accessor for AccessoryControlInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v259, 1, 1, v101);
  }
  v97 = sub_23DFF15A8();
  v98 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v261 + 56);
  v98(v264, 1, 1, v269);
  LOBYTE(v275) = v257 & 1;
  v273 = v88;
  v272 = 1;
  v271 = 1;
  LOBYTE(v274) = v87 != 1;
  if (v87 == 1)
    goto LABEL_18;
  sub_23DF89C1C((uint64_t)v268, (uint64_t)v69, &qword_256D1D530);
  if (v86(v69, 1, v84) == 1)
  {
    sub_23DF89C7C((uint64_t)v69, &qword_256D1D530);
    v99 = sub_23E135B8C();
    v100 = (uint64_t)v237;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v237, 1, 1, v99);
LABEL_17:
    sub_23DF89C7C(v100, &qword_256D1F8F0);
LABEL_18:
    LODWORD(v237) = 0;
    v219 = 0;
    goto LABEL_19;
  }
  v100 = (uint64_t)v237;
  sub_23E1359A0();
  (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v69, v84);
  v103 = sub_23E135B8C();
  v104 = *(_QWORD *)(v103 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v100, 1, v103) == 1)
    goto LABEL_17;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v104 + 88))(v100, v103) != *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v100, v103);
    goto LABEL_18;
  }
  (*(void (**)(uint64_t, uint64_t))(v104 + 96))(v100, v103);
  v152 = v225;
  v153 = v224;
  v154 = v100;
  v155 = v226;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v225 + 32))(v224, v154, v226);
  v156 = sub_23E135B08();
  if (v156 >= 0xFFFF)
    v157 = 0xFFFFLL;
  else
    v157 = v156;
  v219 = v157 & ~(v157 >> 63);
  v271 = 0;
  v158 = sub_23E135B14();
  if (v158 >= 0xFFFF)
    v159 = 0xFFFFLL;
  else
    v159 = v158;
  LODWORD(v237) = v159 & ~(v159 >> 63);
  (*(void (**)(_BYTE *, uint64_t))(v152 + 8))(v153, v155);
  v272 = 0;
LABEL_19:
  v232 = v87;
  if (v88)
  {
    v105 = v265;
    v106 = (uint64_t *)&v267;
  }
  else
  {
    v105 = (uint64_t)v268;
    v106 = (uint64_t *)&v268;
  }
  v107 = *(v106 - 32);
  sub_23DF89C1C(v105, v107, &qword_256D1D530);
  if (v86((_BYTE *)v107, 1, v84) == 1)
  {
    sub_23DF89C7C(v107, &qword_256D1D530);
    v108 = 1;
    v109 = v262;
    v110 = v258;
  }
  else
  {
    v110 = v258;
    sub_23E135988();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v107, v84);
    v108 = 0;
    v109 = v262;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v256 + 56))(v110, v108, 1, v109);
  v111 = v269;
  v98((uint64_t *)v267, 1, 1, v269);
  v98((uint64_t *)v263, 1, 1, v111);
  if (v88)
  {
    v112 = v238;
    sub_23DF89C1C(v265, (uint64_t)v238, &qword_256D1D530);
    if (v86(v112, 1, v84) == 1)
    {
      v113 = (uint64_t)v112;
LABEL_31:
      sub_23DF89C7C(v113, &qword_256D1D530);
      goto LABEL_32;
    }
    *(double *)&v114 = COERCE_DOUBLE(sub_23E135940());
    v116 = v115;
    v117 = *(void (**)(_BYTE *, uint64_t))(v85 + 8);
    v117(v112, v84);
    if ((v116 & 1) != 0)
      goto LABEL_32;
    v118 = v227;
    sub_23DF89C1C((uint64_t)v260, (uint64_t)v227, &qword_256D1D530);
    if (v86(v118, 1, v84) == 1)
    {
      v113 = (uint64_t)v118;
      goto LABEL_31;
    }
    v161 = COERCE_DOUBLE(sub_23E135940());
    v163 = v162;
    v117(v118, v84);
    if ((v163 & 1) == 0)
    {
      v164 = *(double *)&v114;
      v165 = v267;
      sub_23DF89C7C((uint64_t)v267, &qword_256D1D7F0);
      *v165 = v164 / 360.0;
      v165[1] = v161 / 100.0;
      v166 = v269;
      (*(void (**)(double *, _QWORD, uint64_t))(v261 + 104))(v165, *MEMORY[0x24BE4DCA8], v269);
      v98((uint64_t *)v165, 0, 1, v166);
    }
  }
LABEL_32:
  v119 = (uint64_t)v255;
  v120 = v263;
  v121 = v261;
  if (v232 != 1)
  {
    v122 = v239;
    sub_23DF89C1C((uint64_t)v268, (uint64_t)v239, &qword_256D1D530);
    if (v86(v122, 1, v84) == 1)
    {
      sub_23DF89C7C((uint64_t)v122, &qword_256D1D530);
    }
    else
    {
      v123 = sub_23E135994();
      v125 = v124;
      (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v122, v84);
      if ((v125 & 1) == 0)
      {
        v126 = 0xFFFFLL;
        if (v123 < 0xFFFF)
          v126 = v123;
        v127 = v126 & ~(v126 >> 63);
        sub_23DF89C7C((uint64_t)v120, &qword_256D1D7F0);
        v128 = (uint64_t)v228;
        *v228 = v127;
        v129 = v269;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v121 + 104))(v128, *MEMORY[0x24BE4DC88], v269);
        v98((uint64_t *)v128, 0, 1, v129);
        sub_23DF89340(v128, (uint64_t)v120, &qword_256D1D7F0);
      }
    }
  }
  v251 = v98;
  v130 = v252;
  sub_23DF89C1C((uint64_t)v120, (uint64_t)v252, &qword_256D1D7F0);
  v131 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v121 + 48);
  v132 = v269;
  v133 = v131(v130, 1, v269);
  sub_23DF89C7C((uint64_t)v130, &qword_256D1D7F0);
  if (v133 != 1)
  {
    v134 = v240;
    sub_23DF89C1C((uint64_t)v267, (uint64_t)v240, &qword_256D1D7F0);
    v135 = v131(v134, 1, v132);
    sub_23DF89C7C((uint64_t)v134, &qword_256D1D7F0);
    if (v135 == 1)
    {
      v136 = v264;
      sub_23DF89C7C((uint64_t)v264, &qword_256D1D7F0);
      sub_23DF89C1C((uint64_t)v120, (uint64_t)v136, &qword_256D1D7F0);
      v137 = (uint64_t)v258;
LABEL_42:
      v138 = v254;
      goto LABEL_69;
    }
  }
  v139 = v242;
  sub_23DF89C1C((uint64_t)v120, (uint64_t)v242, &qword_256D1D7F0);
  v140 = v131(v139, 1, v132);
  sub_23DF89C7C((uint64_t)v139, &qword_256D1D7F0);
  v141 = v258;
  v136 = v264;
  if (v140 == 1)
  {
    v142 = v234;
    sub_23DF89C1C((uint64_t)v267, (uint64_t)v234, &qword_256D1D7F0);
    v143 = v131(v142, 1, v132);
    sub_23DF89C7C((uint64_t)v142, &qword_256D1D7F0);
    if (v143 != 1)
    {
      sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
      sub_23DF89C1C((uint64_t)v267, (uint64_t)v136, &qword_256D1D7F0);
      v138 = v254;
      v137 = (uint64_t)v141;
      goto LABEL_69;
    }
  }
  v144 = v241;
  sub_23DF89C1C((uint64_t)v120, (uint64_t)v241, &qword_256D1D7F0);
  v145 = v131(v144, 1, v132);
  sub_23DF89C7C((uint64_t)v144, &qword_256D1D7F0);
  v138 = v254;
  v137 = (uint64_t)v141;
  if (v145 != 1)
  {
    v146 = v233;
    sub_23DF89C1C((uint64_t)v267, (uint64_t)v233, &qword_256D1D7F0);
    v147 = v131(v146, 1, v269);
    v148 = (uint64_t)v146;
    v137 = (uint64_t)v141;
    sub_23DF89C7C(v148, &qword_256D1D7F0);
    if (v147 != 1)
    {
      v149 = v231;
      sub_23DF89C1C((uint64_t)v120, (uint64_t)v231, &qword_256D1D7F0);
      v150 = v269;
      if (v131(v149, 1, v269) == 1)
      {
        sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
        v151 = (uint64_t)v149;
      }
      else
      {
        v160 = v261;
        if ((*(unsigned int (**)(unsigned __int16 *, uint64_t))(v261 + 88))(v149, v150) != *MEMORY[0x24BE4DC88])
        {
          sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
          (*(void (**)(unsigned __int16 *, uint64_t))(v160 + 8))(v149, v150);
          goto LABEL_67;
        }
        (*(void (**)(unsigned __int16 *, uint64_t))(v160 + 96))(v149, v150);
        if (v272 != 1 && v237 >= *v149)
        {
          v207 = v223;
          sub_23DF89C1C((uint64_t)v120, (uint64_t)v223, &qword_256D1D7F0);
          v208 = v269;
          if (v131(v207, 1, v269) == 1)
          {
            sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
            sub_23DF89C7C((uint64_t)v207, &qword_256D1D7F0);
          }
          else
          {
            v209 = v261;
            v210 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v261 + 32);
            v211 = v207;
            v212 = v222;
            v210(v222, v211, v208);
            v213 = v221;
            sub_23DF89C1C((uint64_t)v267, (uint64_t)v221, &qword_256D1D7F0);
            if (v131(v213, 1, v208) == 1)
            {
              (*(void (**)(_BYTE *, uint64_t))(v209 + 8))(v212, v208);
              sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
              sub_23DF89C7C((uint64_t)v213, &qword_256D1D7F0);
            }
            else
            {
              v214 = v213;
              v215 = (uint64_t)v220;
              v210(v220, v214, v208);
              v216 = sub_23E0A88A0(v215);
              v217 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
              v217(v215, v208);
              sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
              if (v216)
              {
                v210(v136, v212, v208);
                v251(v136, 0, 1, v208);
                v119 = (uint64_t)v255;
                goto LABEL_42;
              }
              v217((uint64_t)v212, v208);
            }
            v119 = (uint64_t)v255;
            v138 = v254;
          }
          v167 = v267;
          goto LABEL_68;
        }
        v151 = (uint64_t)v136;
      }
      sub_23DF89C7C(v151, &qword_256D1D7F0);
LABEL_67:
      v167 = v120;
LABEL_68:
      sub_23DF89C1C((uint64_t)v167, (uint64_t)v136, &qword_256D1D7F0);
    }
  }
LABEL_69:
  v168 = v253;
  sub_23DF73E10(v270, (uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if ((v257 & 1) != 0)
  {
    v169 = sub_23E135544();
    v170 = (uint64_t)v168;
    v171 = v169;
    sub_23DF73E54(v170, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v172 = v251;
    if ((v171 & 1) != 0)
    {
      if (v232 == 1)
      {
        if (qword_256D1D270 != -1)
          swift_once();
        v176 = sub_23E135C10();
        __swift_project_value_buffer(v176, (uint64_t)qword_256D1EAC0);
        v177 = sub_23E135BF8();
        v178 = sub_23E137350();
        if (os_log_type_enabled(v177, v178))
        {
          v179 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v179 = 0;
          _os_log_impl(&dword_23DF71000, v177, v178, "Service says natural light is enabled, but doesn't support Color Temperature values. This should not be possible and is not supported", v179, 2u);
          MEMORY[0x24264C628](v179, -1, -1);
        }

        sub_23DF89C7C((uint64_t)v120, &qword_256D1D7F0);
        sub_23DF89C7C((uint64_t)v267, &qword_256D1D7F0);
        sub_23DF89C7C(v137, &qword_256D1D7E8);
        sub_23DF89C7C((uint64_t)v136, &qword_256D1D7F0);
        sub_23DF89C7C((uint64_t)v260, &qword_256D1D530);
        goto LABEL_15;
      }
      v173 = v229;
      sub_23DF89340((uint64_t)v136, (uint64_t)v229, &qword_256D1D7F0);
      v174 = v269;
      if (v131(v173, 1, v269) == 1)
      {
        *v138 = 370;
        v175 = v261;
        (*(void (**)(_WORD *, _QWORD, uint64_t))(v261 + 104))(v138, *MEMORY[0x24BE4DC88], v174);
        sub_23DF89C7C((uint64_t)v173, &qword_256D1D7F0);
      }
      else
      {
        v175 = v261;
        (*(void (**)(_WORD *, _BYTE *, uint64_t))(v261 + 32))(v138, v173, v174);
      }
      v180 = swift_allocBox();
      v182 = v181;
      (*(void (**)(uint64_t *, _WORD *, uint64_t))(v175 + 32))(v181, v138, v174);
      v172(v182, 0, 1, v174);
      *v136 = v180;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v175 + 104))(v136, *MEMORY[0x24BE4DC90], v174);
      v172(v136, 0, 1, v174);
    }
  }
  else
  {
    sub_23DF73E54((uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v172 = v251;
  }
  v183 = v243;
  sub_23DF89C1C((uint64_t)v136, (uint64_t)v243, &qword_256D1D7F0);
  v184 = (uint64_t)v245;
  v172(v245, 1, 1, v269);
  v185 = v247;
  v186 = v184 + *(int *)(v247 + 20);
  *(_QWORD *)v186 = 0;
  *(_BYTE *)(v186 + 8) = 1;
  sub_23DFF1F1C((uint64_t)v183, v184);
  *(double *)v186 = v97;
  *(_BYTE *)(v186 + 8) = 0;
  sub_23DF89384(v184, v119, type metadata accessor for Device.Control.ColorState);
  v187 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v246 + 56);
  v187(v119, 0, 1, v185);
  if ((*(_BYTE *)(v270 + *(int *)(v266 + 40)) & 1) == 0)
  {
    sub_23DF89C7C(v119, &qword_256D1D5E8);
    v187(v119, 1, 1, v185);
  }
  v188 = v244;
  sub_23DF89C1C(v137, (uint64_t)v244, &qword_256D1D7E8);
  v189 = v256;
  v190 = v262;
  v191 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v256 + 48))(v188, 1, v262);
  v192 = v249;
  if (v191 == 1)
  {
    sub_23E134C74();
    sub_23DF89C7C((uint64_t)v188, &qword_256D1D7E8);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v189 + 32))(v249, v188, v190);
  }
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28);
  v194 = (uint64_t)v250;
  v195 = (uint64_t)&v250[*(int *)(v193 + 48)];
  v196 = v274;
  v197 = v273;
  v198 = v272;
  v199 = v271;
  *v250 = v275;
  *(_BYTE *)(v194 + 1) = v196;
  *(_BYTE *)(v194 + 2) = v197;
  *(_WORD *)(v194 + 4) = (_WORD)v237;
  *(_BYTE *)(v194 + 6) = v198;
  *(_WORD *)(v194 + 8) = v219;
  *(_BYTE *)(v194 + 10) = v199;
  sub_23DF89C1C(v119, v195, &qword_256D1D5E8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v200 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
  v201 = (v200 + 32) & ~v200;
  v202 = swift_allocObject();
  *(_OWORD *)(v202 + 16) = xmmword_23E138050;
  sub_23DF73E10(v270, v202 + v201, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF89C7C(v119, &qword_256D1D5E8);
  sub_23DF89C7C((uint64_t)v263, &qword_256D1D7F0);
  sub_23DF89C7C((uint64_t)v267, &qword_256D1D7F0);
  sub_23DF89C7C(v137, &qword_256D1D7E8);
  sub_23DF89C7C((uint64_t)v264, &qword_256D1D7F0);
  sub_23DF89C7C((uint64_t)v260, &qword_256D1D530);
  v203 = (int *)type metadata accessor for AccessoryControlInfo(0);
  v204 = v259;
  v205 = (_QWORD *)(v259 + v203[7]);
  v206 = v203[9];
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v189 + 32))(v259, v192, v190);
  sub_23DF89384(v194, v204 + v203[5], type metadata accessor for AccessoryControlInfo.State);
  *(_QWORD *)(v204 + v203[11]) = v202;
  *(_BYTE *)(v204 + v203[6]) = 0;
  *v205 = 0;
  v205[1] = 0;
  *(_WORD *)(v204 + v203[8]) = 1028;
  *(_BYTE *)(v204 + v206) = 12;
  *(_BYTE *)(v204 + v203[10]) = 1;
  sub_23DF89C7C((uint64_t)v268, &qword_256D1D530);
  sub_23DF89C7C(v265, &qword_256D1D530);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v203 - 1) + 56))(v204, 0, 1, v203);
}

uint64_t sub_23DFF07FC@<X0>(char *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = v14 + *(int *)(v10 + 48);
  v16 = *MEMORY[0x24BE4E238];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  *(_QWORD *)(v15 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF89340((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24), &qword_256D1D510);
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_23DFF0A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E13534C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (double *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if ((*(unsigned int (**)(double *, uint64_t))(v10 + 88))(v12, v9) == *MEMORY[0x24BE4DD08])
  {
    (*(void (**)(double *, uint64_t))(v10 + 96))(v12, v9);
    v13 = *v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_23E138410;
    v19 = v18 + v17;
    v20 = v19 + *(int *)(v14 + 48);
    v21 = *MEMORY[0x24BE4E230];
    v22 = sub_23E1356DC();
    v23 = *(_QWORD *)(v22 - 8);
    v37 = a2;
    v24 = *(void (**)(void))(v23 + 104);
    ((void (*)(unint64_t, uint64_t, uint64_t))v24)(v19, v21, v22);
    *(_QWORD *)(v20 + 24) = MEMORY[0x24BEE13C8];
    *(double *)v20 = v13;
    v25 = v19 + v16 + *(int *)(v14 + 48);
    v24();
    *(_QWORD *)(v25 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v25 = v13 > 0.0;
    v26 = sub_23E0ECA08(v18);
    v27 = sub_23E135538();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
    v28 = sub_23E134C80();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_23E138050;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 16))(v31 + v30, v37, v28);
    v32 = sub_23E0E212C(v31);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *a3 = v26;
    a3[1] = 0;
    v33 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    sub_23DF89340((uint64_t)v8, (uint64_t)a3 + *(int *)(v33 + 24), &qword_256D1D510);
    *(unint64_t *)((char *)a3 + *(int *)(v33 + 28)) = v32;
    return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a3, 0, 1, v33);
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v10 + 8))(v12, v9);
    v35 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
}

uint64_t sub_23DFF0D70@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  char v17;
  __int16 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  void (*v31)(uint64_t, uint64_t);
  unint64_t v32;
  char v33;
  BOOL v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  BOOL *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  uint64_t v57;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL *v66;
  unint64_t *v67;
  uint64_t v68;
  _OWORD v69[2];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;

  v67 = a4;
  v68 = a3;
  v65 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v5);
  v66 = (BOOL *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23E1356DC();
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E135328();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a2;
  v16 = a2[1];
  v17 = a2[2];
  v18 = *((_WORD *)a2 + 2);
  v19 = a2[6];
  v61 = *((unsigned __int16 *)a2 + 4);
  v60 = a2[10];
  v20 = MEMORY[0x24BEE4AF8];
  v75 = sub_23E0ECA08(MEMORY[0x24BEE4AF8]);
  v21 = v20;
  v22 = v65;
  v74 = sub_23E0ECA08(v21);
  v73 = MEMORY[0x24BEE4B08];
  sub_23DF89C1C(v22, (uint64_t)v10, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23DF89C7C((uint64_t)v10, &qword_256D1D7F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    LOBYTE(v70) = v15;
    BYTE1(v70) = v16;
    BYTE2(v70) = v17;
    WORD2(v70) = v18;
    BYTE6(v70) = v19;
    WORD4(v70) = v61;
    BYTE10(v70) = v60;
    sub_23DFF16B8((uint64_t)v14, v68, (unsigned __int8 *)&v70, (uint64_t)&v75, (uint8_t *)&v74);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v23 = v22 + *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20);
  if ((*(_BYTE *)(v23 + 8) & 1) == 0)
  {
    v24 = *(double *)v23;
    v25 = v62;
    v26 = (uint64_t)v63;
    v27 = *(void (**)(char *, _QWORD, uint64_t))(v62 + 104);
    v28 = v64;
    v27(v63, *MEMORY[0x24BE4E230], v64);
    v71 = MEMORY[0x24BEE13C8];
    *(double *)&v70 = v24 * 100.0;
    sub_23DF89AC0(&v70, v69);
    v29 = v75;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72 = v29;
    sub_23E0F134C(v69, v26, isUniquelyReferenced_nonNull_native);
    v75 = v72;
    swift_bridgeObjectRelease();
    v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v31(v26, v28);
    v27((char *)v26, *MEMORY[0x24BE4E238], v28);
    v71 = MEMORY[0x24BEE1328];
    LOBYTE(v70) = v24 > 0.0;
    sub_23DF89AC0(&v70, v69);
    v32 = v75;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    v72 = v32;
    sub_23E0F134C(v69, v26, v33);
    v75 = v72;
    swift_bridgeObjectRelease();
    v31(v26, v28);
  }
  v34 = sub_23DF82AB0(v22);
  if (qword_256D1D270 != -1)
    swift_once();
  v35 = sub_23E135C10();
  __swift_project_value_buffer(v35, (uint64_t)qword_256D1EAC0);
  v36 = sub_23E135BF8();
  v37 = sub_23E137368();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    *(_QWORD *)&v70 = v39;
    *(_DWORD *)v38 = 67240450;
    LODWORD(v69[0]) = v34;
    sub_23E1374B8();
    *(_WORD *)(v38 + 8) = 2082;
    swift_beginAccess();
    sub_23E135718();
    sub_23DF73F28(&qword_256D1D808, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E3C8], MEMORY[0x24BE4E3D8]);
    swift_bridgeObjectRetain();
    v40 = sub_23E137314();
    v42 = v41;
    swift_bridgeObjectRelease();
    v72 = sub_23E0AB274(v40, v42, (uint64_t *)&v70);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DF71000, v36, v37, "Setting natural light on (%{BOOL,public}d on profiles (%{public}s)", (uint8_t *)v38, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v39, -1, -1);
    MEMORY[0x24264C628](v38, -1, -1);
  }

  v43 = v66;
  v44 = v68;
  v46 = v74;
  v45 = v75;
  swift_beginAccess();
  if (*(_QWORD *)(v73 + 16))
  {
    *v43 = v34;
    v47 = *MEMORY[0x24BE4E088];
    v48 = sub_23E135538();
    v49 = *(_QWORD *)(v48 - 8);
    (*(void (**)(BOOL *, uint64_t, uint64_t))(v49 + 104))(v43, v47, v48);
    (*(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v43, 0, 1, v48);
  }
  else
  {
    v50 = sub_23E135538();
    (*(void (**)(BOOL *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v43, 1, 1, v50);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v51 = sub_23E134C80();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v52 + 16))(v54 + v53, v44, v51);
  v55 = sub_23E0E212C(v54);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v56 = v67;
  *v67 = v45;
  v56[1] = v46;
  v57 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF89340((uint64_t)v43, (uint64_t)v56 + *(int *)(v57 + 24), &qword_256D1D510);
  *(unint64_t *)((char *)v56 + *(int *)(v57 + 28)) = v55;
  (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DFF144C(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, _QWORD, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[3];
  uint64_t v14;

  v4 = sub_23E1356DC();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, _QWORD, uint64_t))(v7 + 104);
  v8(v6, *MEMORY[0x24BE4E340], v4);
  v9 = MEMORY[0x24BEE13C8];
  v14 = MEMORY[0x24BEE13C8];
  *(double *)v13 = a1 * 360.0;
  sub_23DF80FFC((uint64_t)v13, (uint64_t)v6);
  v8(v6, *MEMORY[0x24BE4E240], v4);
  v14 = v9;
  *(double *)v13 = a2 * 100.0;
  sub_23DF80FFC((uint64_t)v13, (uint64_t)v6);
  v8(v6, *MEMORY[0x24BE4E290], v4);
  v10 = sub_23E1356D0();
  v14 = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(boxed_opaque_existential_0, *MEMORY[0x24BE4E350], v10);
  return sub_23DF80FFC((uint64_t)v13, (uint64_t)v6);
}

double sub_23DFF15A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(char *, _QWORD, uint64_t);
  char v5;
  void (*v6)(char *, uint64_t);
  double v7;
  char v8;
  double result;
  uint64_t v10;

  v0 = sub_23E1356DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v4(v3, *MEMORY[0x24BE4E238], v0);
  type metadata accessor for HAPControlSolver.Source();
  v5 = sub_23E135AA8();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  v4(v3, *MEMORY[0x24BE4E230], v0);
  v7 = COERCE_DOUBLE(sub_23E135AC0());
  LOBYTE(v1) = v8;
  v6(v3, v0);
  result = 0.0;
  if ((v1 & 1) != 0)
  {
    if ((v5 & 1) == 0)
      return result;
  }
  else
  {
    if ((v5 & 1) == 0)
      return result;
    result = v7;
  }
  return result / 100.0;
}

void sub_23DFF16B8(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint8_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double *v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  void (*v24)(double *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  double v27;
  char v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  char v34;
  double v35;
  double v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v57;
  double v58;
  char v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint8_t *v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  __int16 v80;
  char v81;
  uint64_t v82;
  uint64_t v83;

  v67 = a5;
  v74 = a4;
  v76 = a2;
  v7 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v7);
  v75 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_23E1356DC();
  v9 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E135328();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (double *)((char *)&v67 - v17);
  v19 = *a3;
  v20 = a3[1];
  v77 = a3[2];
  v78 = v20;
  v21 = *((unsigned __int16 *)a3 + 2);
  v22 = a3[6];
  v69 = *((unsigned __int16 *)a3 + 4);
  v70 = v21;
  v71 = a3[10];
  v72 = v22;
  v68 = v19;
  if (v19 == 1)
  {
    v23 = sub_23E135568();
    sub_23E07B640(v23);
  }
  if (v77)
  {
    if (v78)
    {
      v24 = *(void (**)(double *, uint64_t, uint64_t))(v13 + 16);
      v24(v18, a1, v12);
      v25 = (*(uint64_t (**)(double *, uint64_t))(v13 + 88))(v18, v12);
      if (v25 == *MEMORY[0x24BE4DCB0])
      {
        v26 = LightbulbColor.toHSV.getter();
        if ((v28 & 1) == 0)
          sub_23DFF144C(*(double *)&v26, v27);
        (*(void (**)(double *, uint64_t))(v13 + 8))(v18, v12);
        goto LABEL_23;
      }
      if (v25 == *MEMORY[0x24BE4DCA8])
      {
        (*(void (**)(double *, uint64_t))(v13 + 96))(v18, v12);
        v35 = *v18;
        v36 = v18[1];
        goto LABEL_22;
      }
      if (v25 == *MEMORY[0x24BE4DC88])
      {
        (*(void (**)(double *, uint64_t))(v13 + 96))(v18, v12);
        v55 = *(unsigned __int16 *)v18;
        if (((v72 | v71) & 1) == 0 && (v55 < v70 || v69 < v55))
        {
          *(double *)&v57 = COERCE_DOUBLE(LightbulbColor.toHSV.getter());
          if ((v59 & 1) != 0)
          {
            if (qword_256D1D270 != -1)
              swift_once();
            v60 = sub_23E135C10();
            __swift_project_value_buffer(v60, (uint64_t)qword_256D1EAC0);
            v24((double *)v16, a1, v12);
            v61 = sub_23E135BF8();
            v62 = sub_23E137350();
            if (os_log_type_enabled(v61, v62))
            {
              v63 = (uint8_t *)swift_slowAlloc();
              v64 = swift_slowAlloc();
              v79 = v64;
              *(_DWORD *)v63 = 136446210;
              v67 = v63 + 4;
              v65 = LightbulbColor.description.getter();
              v83 = sub_23E0AB274(v65, v66, &v79);
              sub_23E1374B8();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
              _os_log_impl(&dword_23DF71000, v61, v62, "Couldn't convert color temperature to Hue/Saturation %{public}s", v63, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24264C628](v64, -1, -1);
              MEMORY[0x24264C628](v63, -1, -1);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
            }

            goto LABEL_23;
          }
          v35 = *(double *)&v57;
          v36 = v58;
          goto LABEL_22;
        }
        (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE4E290], v73);
        v82 = MEMORY[0x24BEE4478];
        LOWORD(v79) = v55;
        v31 = (uint64_t)v11;
        goto LABEL_12;
      }
      if (v25 != *MEMORY[0x24BE4DC90])
      {
        sub_23E137608();
        __break(1u);
        return;
      }
      (*(void (**)(double *, uint64_t))(v13 + 96))(v18, v12);
      swift_release();
    }
    else
    {
      *(double *)&v32 = COERCE_DOUBLE(LightbulbColor.toHSV.getter());
      if ((v34 & 1) == 0)
      {
        v35 = *(double *)&v32;
        v36 = v33;
LABEL_22:
        sub_23DFF144C(v35, v36);
      }
    }
  }
  else
  {
    if (!v78)
    {
      if (qword_256D1D270 != -1)
        swift_once();
      v37 = sub_23E135C10();
      __swift_project_value_buffer(v37, (uint64_t)qword_256D1EAC0);
      v38 = sub_23E135BF8();
      v39 = sub_23E137350();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_23DF71000, v38, v39, "Accessory does not support any Color attributes!", v40, 2u);
        MEMORY[0x24264C628](v40, -1, -1);
      }

      goto LABEL_23;
    }
    v29 = LightbulbColor.toTemperature.getter();
    if ((v29 & 0x10000) == 0)
    {
      v30 = v29;
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE4E290], v73);
      v82 = MEMORY[0x24BEE4478];
      LOWORD(v79) = v30;
      v31 = (uint64_t)v11;
LABEL_12:
      sub_23DF80FFC((uint64_t)&v79, v31);
    }
  }
LABEL_23:
  v41 = qword_256D1D270;
  swift_bridgeObjectRetain();
  if (v41 != -1)
    swift_once();
  v42 = sub_23E135C10();
  __swift_project_value_buffer(v42, (uint64_t)qword_256D1EAC0);
  v43 = v75;
  sub_23DF73E10(v76, v75, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  swift_bridgeObjectRetain();
  v44 = sub_23E135BF8();
  v45 = sub_23E137368();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v83 = v47;
    *(_DWORD *)v46 = 136446722;
    sub_23DF73F28(&qword_256D1D760, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E380]);
    swift_bridgeObjectRetain();
    v76 = MEMORY[0x24BEE4AD8] + 8;
    v48 = sub_23E137104();
    v50 = v49;
    swift_bridgeObjectRelease();
    v79 = sub_23E0AB274(v48, v50, &v83);
    sub_23E1374B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2082;
    sub_23E134C80();
    sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v51 = sub_23E1375FC();
    v79 = sub_23E0AB274(v51, v52, &v83);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    sub_23DF73E54(v43, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    *(_WORD *)(v46 + 22) = 2082;
    LOBYTE(v79) = v68;
    BYTE1(v79) = v78;
    BYTE2(v79) = v77;
    WORD2(v79) = v70;
    BYTE6(v79) = v72;
    v80 = v69;
    v81 = v71;
    v53 = sub_23E137194();
    v79 = sub_23E0AB274(v53, v54, &v83);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DF71000, v44, v45, "Setting Light characteristics (%{public}s) for service (%{public}s) colorConfig: (%{public}s)", (uint8_t *)v46, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v47, -1, -1);
    MEMORY[0x24264C628](v46, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_23DF73E54(v43, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  }

}

uint64_t sub_23DFF1F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL static AccessoryControlTarget.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AccessoryControlTarget.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t AccessoryControlTarget.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

BOOL sub_23DFF1FE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double StaticService.controlModules()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v1 = sub_23E1352BC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  sub_23E014044((uint64_t)v4, (uint64_t)v7);
  v8 = sub_23E130FA4((uint64_t)v7, 0);
  sub_23DFF2218((uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20BE8);
  v9 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v9 + 16) = xmmword_23E138050;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 56) = 0;
  *(_QWORD *)(v9 + 64) = 0;
  *(_QWORD *)(v9 + 48) = v8;
  return result;
}

double sub_23DFF2100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  sub_23E014044((uint64_t)v5, (uint64_t)v8);
  v9 = sub_23E130FA4((uint64_t)v8, 0);
  sub_23DFF2218((uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20BE8);
  v10 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v10 + 16) = xmmword_23E138050;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 56) = 0;
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 48) = v9;
  return result;
}

uint64_t StaticAccessory.controlModules()()
{
  uint64_t v0;

  return _s22HomeAccessoryControlUI0bC6SolverC3HAPC14controlModules4withSayAA0bC6ModuleVG0A9DataModel06StaticB0V_tFZ_0(v0);
}

uint64_t sub_23DFF2200()
{
  uint64_t v0;

  return _s22HomeAccessoryControlUI0bC6SolverC3HAPC14controlModules4withSayAA0bC6ModuleVG0A9DataModel06StaticB0V_tFZ_0(v0);
}

uint64_t StaticServiceGroup.controlModules()()
{
  return _s22HomeAccessoryControlUI0bC6SolverC3HAPC14controlModules4withSayAA0bC6ModuleVG0A9DataModel18StaticServiceGroupV_tFZ_0();
}

uint64_t sub_23DFF2210()
{
  return _s22HomeAccessoryControlUI0bC6SolverC3HAPC14controlModules4withSayAA0bC6ModuleVG0A9DataModel18StaticServiceGroupV_tFZ_0();
}

uint64_t sub_23DFF2218(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HAPControlSolver.Source();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23DFF2258()
{
  unint64_t result;

  result = qword_256D20BF0;
  if (!qword_256D20BF0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlTarget, &type metadata for AccessoryControlTarget);
    atomic_store(result, (unint64_t *)&qword_256D20BF0);
  }
  return result;
}

uint64_t sub_23DFF229C(uint64_t a1)
{
  uint64_t result;

  result = sub_23DF73F28(&qword_256D1D840, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DC28], MEMORY[0x24BE4DC38]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23DFF22D8(uint64_t a1)
{
  uint64_t result;

  result = sub_23DF73F28(&qword_256D20BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DEC0], MEMORY[0x24BE4DED0]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23DFF2314(uint64_t a1)
{
  uint64_t result;

  result = sub_23DF73F28(qword_256D20C00, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E508], MEMORY[0x24BE4E518]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of AccessoryControlBearer.controlModules()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t getEnumTagSinglePayload for AccessoryControlsStyle.PresentationStyle.Orientation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlTarget(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23DFF2434 + 4 * byte_23E13B3F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23DFF2468 + 4 * byte_23E13B3F0[v4]))();
}

uint64_t sub_23DFF2468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DFF2470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DFF2478);
  return result;
}

uint64_t sub_23DFF2484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DFF248CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23DFF2490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DFF2498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23DFF24A4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlTarget()
{
  return &type metadata for AccessoryControlTarget;
}

ValueMetadata *_s5ValveVMa()
{
  return &_s5ValveVN;
}

uint64_t sub_23DFF24D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E134C20();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E1356DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v14(v13, *MEMORY[0x24BE4E360], v10);
  type metadata accessor for HAPControlSolver.Source();
  v15 = sub_23E135AA8();
  v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v13, v10);
  if ((v15 & 1) != 0)
  {
    v17 = *MEMORY[0x24BE4E2B0];
    v14(v13, v17, v10);
    v29 = sub_23E135AC0();
    v19 = v18;
    v16(v13, v10);
    if ((v19 & 1) == 0)
    {
      v14(v13, v17, v10);
      sub_23E135A48();
      v16(v13, v10);
      v20 = sub_23E1359AC();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v4, 1, v20) == 1)
      {
        sub_23DF89C7C((uint64_t)v4, &qword_256D1D530);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v7, 1, 1, v32);
      }
      else
      {
        sub_23E135970();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
        v22 = v31;
        v23 = v32;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v7, 0, 1, v32);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v7, 1, v23) != 1)
        {
          v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
          v27 = v30;
          v26(v30, v7, v23);
          v28 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          *a1 = v29;
          v26(v28, v27, v23);
          goto LABEL_8;
        }
      }
      sub_23DF89C7C((uint64_t)v7, &qword_256D1F0C8);
    }
  }
  *a1 = sub_23E1371A0();
  a1[1] = v24;
LABEL_8:
  type metadata accessor for ControlTextModifier.Config(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23DFF27EC@<X0>(char *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = v14 + *(int *)(v10 + 48);
  v16 = *MEMORY[0x24BE4E368];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  *(_QWORD *)(v15 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_23DFF2A18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = (_QWORD *)(v14 + *(int *)(v10 + 48));
  v16 = *MEMORY[0x24BE4E250];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  v15[3] = MEMORY[0x24BEE1768];
  *v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

_QWORD *sub_23DFF2C50(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v7 = *(_QWORD *)(a1 + 8 * v4 + 32);
    v8 = objc_msgSend(a2, sel_stringFromTimeInterval_, (double)v7);
    if (v8)
    {
      v9 = v8;
      v10 = sub_23E137170();
      v12 = v11;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_23E0075D8(0, v5[2] + 1, 1, v5);
      v14 = v5[2];
      v13 = v5[3];
      if (v14 >= v13 >> 1)
        v5 = sub_23E0075D8((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
      v5[2] = v14 + 1;
      v6 = &v5[4 * v14];
      v6[4] = v7;
      v6[5] = v10;
      v6[6] = v12;
      v6[7] = 0;
    }
    ++v4;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23DFF2D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(_QWORD);
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  _QWORD v122[2];
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  unsigned int v126;
  __int128 v127;
  unsigned int (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  char *v130;
  char *v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  void (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  char *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v2);
  v136 = (char *)v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E135B2C();
  v5 = *(_QWORD *)(v4 - 8);
  v134 = v4;
  v135 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v133 = (char *)v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for AccessoryControlInfo(0);
  v7 = MEMORY[0x24BDAC7A8](v138);
  v130 = (char *)v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v142 = (uint64_t)v122 - v9;
  v129 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v129);
  v141 = (uint64_t)v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v11);
  v140 = (_QWORD *)((char *)v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v132 = (_QWORD *)((char *)v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v14);
  v137 = (void (*)(uint64_t, uint64_t))((char *)v122 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v122 - v18;
  v20 = sub_23E1359AC();
  v143 = *(_QWORD *)(v20 - 8);
  v144 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v131 = (char *)v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v139 = (char *)v122 - v23;
  v24 = sub_23E1356DC();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23E134E9C();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888];
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v122 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = (int *)type metadata accessor for HAPControlSolver.Source();
  v146 = a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x24BE4D7F8], v28);
  sub_23DF73F28(&qword_256D1D820, v29, MEMORY[0x24BE4D8B8]);
  sub_23E13723C();
  sub_23E13723C();
  if (v149 == v147 && v150 == v148)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
  }
  else
  {
    v33 = sub_23E137614();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
    if ((v33 & 1) == 0)
      return MEMORY[0x24BEE4AF8];
  }
  v34 = *(void (**)(_QWORD))(v25 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v34)(v27, *MEMORY[0x24BE4E258], v24);
  v35 = sub_23E135AA8();
  v36 = *(void (**)(char *, uint64_t))(v25 + 8);
  v36(v27, v24);
  if (v35 != 2 && (v35 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  ((void (*)(char *, _QWORD, uint64_t))v34)(v27, *MEMORY[0x24BE4E368], v24);
  sub_23E135A48();
  v36(v27, v24);
  v38 = v143;
  v37 = v144;
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
  if (v39(v19, 1, v144) == 1)
  {
    sub_23DF89C7C((uint64_t)v19, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  v42 = (uint64_t)v139;
  v125 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v125(v139, v19, v37);
  v128 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v39;
  v43 = v146;
  sub_23DFF24D0(v140);
  type metadata accessor for AccessoryControlSolver.HAP();
  v44 = v141;
  sub_23E12C404(v43, v42, v141);
  v45 = v142;
  sub_23E135988();
  v46 = (int *)v138;
  sub_23DF73E10(v44, v45 + *(int *)(v138 + 20), type metadata accessor for AccessoryControlInfo.State);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v48 = *(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8);
  v49 = *(_QWORD *)(v48 + 72);
  v50 = *(unsigned __int8 *)(v48 + 80);
  v51 = (v50 + 32) & ~v50;
  v124 = v47;
  v122[1] = v51 + v49;
  v122[0] = v50 | 7;
  v52 = swift_allocObject();
  v127 = xmmword_23E138050;
  *(_OWORD *)(v52 + 16) = xmmword_23E138050;
  v123 = v51;
  sub_23DF73E10(v43, v52 + v51, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v53 = *(_BYTE *)(v43 + v145[12]);
  v54 = (uint64_t *)(v43 + v145[13]);
  v55 = *v54;
  v56 = v54[1];
  v57 = (_QWORD *)(v45 + v46[7]);
  v58 = v46[9];
  *(_QWORD *)(v45 + v46[11]) = v52;
  *(_BYTE *)(v45 + v46[6]) = v53;
  *v57 = v55;
  v57[1] = v56;
  *(_WORD *)(v45 + v46[8]) = 1027;
  *(_BYTE *)(v45 + v58) = 12;
  *(_BYTE *)(v45 + v46[10]) = 1;
  v59 = v144;
  v126 = *MEMORY[0x24BE4E250];
  v34(v27);
  swift_bridgeObjectRetain();
  v60 = (uint64_t)v137;
  sub_23E135A48();
  v36(v27, v24);
  if (v128(v60, 1, v59) == 1)
  {
    sub_23DF89C7C(v60, &qword_256D1D530);
    v61 = sub_23E135B8C();
    v62 = v136;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v136, 1, 1, v61);
    v63 = v143;
LABEL_14:
    sub_23DF89C7C((uint64_t)v62, &qword_256D1F8F0);
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v66 = type metadata accessor for AccessoryControlGroup(0);
    v67 = *(unsigned __int8 *)(*(_QWORD *)(v66 - 8) + 80);
    v68 = (v67 + 32) & ~v67;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v127;
    v69 = v142;
    sub_23DF73E10(v142, v40 + v68, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v70 = (uint64_t *)(v146 + v145[7]);
    v72 = *v70;
    v71 = v70[1];
    v73 = (_QWORD *)(v40 + v68 + *(int *)(v66 + 24));
    v74 = (_QWORD *)(v40 + v68 + *(int *)(v66 + 20));
    *v74 = v72;
    v74[1] = v71;
    *v73 = 0;
    v73[1] = 0;
    swift_bridgeObjectRetain();
    sub_23DF73E54(v69, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54(v141, type metadata accessor for AccessoryControlInfo.State);
    sub_23DF73E54((uint64_t)v140, type metadata accessor for ControlTextModifier.Config);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v139, v144);
    return v40;
  }
  v62 = v136;
  sub_23E1359A0();
  v63 = v143;
  v137 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
  v137(v60, v59);
  v64 = sub_23E135B8C();
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v64) == 1)
    goto LABEL_14;
  if ((*(unsigned int (**)(char *, uint64_t))(v65 + 88))(v62, v64) != *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v65 + 96))(v62, v64);
  v75 = v62;
  v76 = v134;
  v77 = v133;
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v133, v75, v134);
  ((void (*)(char *, _QWORD, uint64_t))v34)(v27, v126, v24);
  v78 = (uint64_t)v132;
  sub_23E135A48();
  v36(v27, v24);
  if (v128(v78, 1, v59) == 1)
  {
    (*(void (**)(char *, uint64_t))(v135 + 8))(v77, v76);
    sub_23DF89C7C(v78, &qword_256D1D530);
    v63 = v143;
    goto LABEL_15;
  }
  v125(v131, (char *)v78, v59);
  v79 = sub_23E135B08();
  result = sub_23E135B14();
  v80 = __OFSUB__(v79, result);
  v81 = v79 - result;
  if (v80)
    goto LABEL_44;
  result = sub_23E135B20();
  if (v81 > 300)
  {
    v82 = 300;
LABEL_25:
    v84 = sub_23E135B20();
    if (v84 > v82)
      v82 = v84;
    v85 = sub_23E135B08();
    if (v85 < v82)
    {
      v86 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_29:
      v87 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
      objc_msgSend(v87, sel_setAllowedUnits_, 96);
      objc_msgSend(v87, sel_setUnitsStyle_, 3);
      v88 = (char *)v87;
      v89 = swift_bridgeObjectRetain();
      v132 = sub_23DFF2C50(v89, v88);
      swift_bridgeObjectRelease();
      v136 = v88;

      v143 = v86[2];
      if (v143)
      {
        swift_bridgeObjectRetain();
        v90 = 0;
        while (1)
        {
          v91 = v86[v90 + 4];
          ((void (*)(char *, _QWORD, uint64_t))v34)(v27, v126, v24);
          v92 = sub_23E135A9C();
          v94 = v93;
          v36(v27, v24);
          v95 = v94 | (v91 != v92);
          if ((v95 & 1) == 0)
            break;
          if (v143 == ++v90)
          {
            v91 = 0;
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v91 = 0;
        v95 = 1;
      }
      swift_bridgeObjectRelease();
      v101 = (uint64_t)v130;
      v102 = v131;
      sub_23E135988();
      v103 = (int *)v138;
      v104 = v101 + *(int *)(v138 + 20);
      *(_QWORD *)v104 = v132;
      *(_BYTE *)(v104 + 8) = 1;
      *(_QWORD *)(v104 + 16) = v91;
      *(_BYTE *)(v104 + 24) = v95 & 1;
      swift_storeEnumTagMultiPayload();
      v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v127;
      v106 = v146;
      sub_23DF73E10(v146, v105 + v123, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v107 = (_QWORD *)(v101 + v103[7]);
      v108 = v103[9];
      *(_QWORD *)(v101 + v103[11]) = v105;
      *(_BYTE *)(v101 + v103[6]) = 0;
      *v107 = 0;
      v107[1] = 0;
      *(_WORD *)(v101 + v103[8]) = 1028;
      *(_BYTE *)(v101 + v108) = 11;
      *(_BYTE *)(v101 + v103[10]) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
      v109 = type metadata accessor for AccessoryControlGroup(0);
      v110 = *(unsigned __int8 *)(*(_QWORD *)(v109 - 8) + 80);
      v111 = (v110 + 32) & ~v110;
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v127;
      v112 = v40 + v111;
      v113 = v40 + v111 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
      v114 = v142;
      sub_23DF73E10(v142, v112, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E10(v101, v113, type metadata accessor for AccessoryControlInfo);
      type metadata accessor for AccessoryControlGroup.LayoutType(0);
      swift_storeEnumTagMultiPayload();
      v115 = (uint64_t *)(v106 + v145[7]);
      v117 = *v115;
      v116 = v115[1];
      v118 = (_QWORD *)(v112 + *(int *)(v109 + 24));
      v119 = (_QWORD *)(v112 + *(int *)(v109 + 20));
      *v119 = v117;
      v119[1] = v116;
      *v118 = 0;
      v118[1] = 0;
      swift_bridgeObjectRetain();

      sub_23DF73E54(v101, type metadata accessor for AccessoryControlInfo);
      v120 = v144;
      v121 = (void (*)(char *, uint64_t))v137;
      v137((uint64_t)v102, v144);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v133, v134);
      sub_23DF73E54(v114, type metadata accessor for AccessoryControlInfo);
      sub_23DF73E54(v141, type metadata accessor for AccessoryControlInfo.State);
      sub_23DF73E54((uint64_t)v140, type metadata accessor for ControlTextModifier.Config);
      v121(v139, v120);
      return v40;
    }
    v143 = v85;
    result = (uint64_t)sub_23E007F1C(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v86 = (_QWORD *)result;
    v96 = v143;
    v97 = *(_QWORD *)(result + 16);
    v98 = v82;
    while (1)
    {
      v99 = v86[3];
      if (v97 >= v99 >> 1)
      {
        result = (uint64_t)sub_23E007F1C((_QWORD *)(v99 > 1), v97 + 1, 1, v86);
        v86 = (_QWORD *)result;
        v96 = v143;
      }
      v86[2] = v97 + 1;
      v86[v97 + 4] = v98;
      v100 = v98 + v82;
      if (__OFADD__(v98, v82))
        break;
      v98 += v82;
      ++v97;
      if (v96 < v100)
        goto LABEL_29;
    }
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!result)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v83 = v81 / 5 / result;
  v82 = v83 * result;
  if ((unsigned __int128)(v83 * (__int128)result) >> 64 == (v83 * result) >> 63)
    goto LABEL_25;
LABEL_46:
  __break(1u);
  return result;
}

unint64_t Device.Control.ThermostatState.Mode.init(heatingCoolingMode:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = 0x3010200u >> (8 * result);
  if (result >= 4)
    LOBYTE(v2) = 4;
  *a2 = v2;
  return result;
}

uint64_t Device.Control.ThermostatState.Mode.heatingCoolingMode.getter()
{
  char *v0;

  return qword_23E13B580[*v0];
}

uint64_t sub_23DFF3ADC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, _QWORD, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, char *);
  int v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t (*v80)(char *, char *);
  int v81;
  void (*v82)(char *, char *);
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  char *v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t (*v95)(uint64_t, char *);
  int v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t, char *);
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;

  v108 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1F900);
  MEMORY[0x24BDAC7A8](v1);
  v106 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_23E1356DC();
  v3 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v102 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v105 = (char *)&v94 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v94 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v94 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v101 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v104 = (char *)&v94 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v94 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v94 - v24;
  v26 = sub_23E135B74();
  v27 = *(_QWORD *)(v26 - 8);
  v109 = v26;
  v110 = v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v100 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v103 = (char *)&v94 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v94 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v94 - v35;
  type metadata accessor for HAPControlSolver.Source();
  v37 = sub_23E135A54();
  if ((v38 & 1) == 0 && v37 == 2)
  {
    v39 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE4E298], v107);
    sub_23E135A48();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v39);
    v40 = sub_23E1359AC();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v15, 1, v40) == 1)
    {
      sub_23DF89C7C((uint64_t)v15, &qword_256D1D530);
      v42 = sub_23E135B8C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v25, 1, 1, v42);
      v43 = v108;
LABEL_14:
      sub_23DF89C7C((uint64_t)v25, &qword_256D1F8F0);
      v64 = 1;
LABEL_24:
      v70 = v109;
      v71 = v110;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v43, v64, 1, v70);
    }
    sub_23E1359A0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v40);
    v61 = sub_23E135B8C();
    v62 = *(_QWORD *)(v61 - 8);
    v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v25, 1, v61);
    v43 = v108;
    if (v63 == 1)
      goto LABEL_14;
    v69 = (*(uint64_t (**)(char *, uint64_t))(v62 + 88))(v25, v61);
    v70 = v109;
    v71 = v110;
    if (v69 == *MEMORY[0x24BE4EA90])
    {
      (*(void (**)(char *, uint64_t))(v62 + 96))(v25, v61);
      v72 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
      v72(v36, v25, v70);
      v72(v43, v36, v70);
      v64 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v43, v64, 1, v70);
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v61);
LABEL_29:
    v64 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v43, v64, 1, v70);
  }
  v44 = sub_23E135A54();
  if ((v45 & 1) != 0 || v44 != 1)
  {
    v50 = sub_23E135A54();
    if ((v51 & 1) != 0 || v50)
    {
      v65 = sub_23E135B80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v106, 1, 1, v65);
      v43 = v108;
      sub_23E135B38();
      v64 = 0;
      goto LABEL_24;
    }
    v52 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
    v53 = v107;
    v52(v5, *MEMORY[0x24BE4E298], v107);
    v54 = (uint64_t)v105;
    sub_23E135A48();
    v55 = *(void (**)(char *, uint64_t))(v3 + 8);
    v55(v5, v53);
    v56 = sub_23E1359AC();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    if (v58(v54, 1, v56) == 1)
    {
      sub_23DF89C7C(v54, &qword_256D1D530);
      v59 = sub_23E135B8C();
      v60 = v104;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v104, 1, 1, v59);
    }
    else
    {
      v60 = v104;
      sub_23E1359A0();
      v73 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v73(v54, v56);
      v74 = sub_23E135B8C();
      v75 = *(_QWORD *)(v74 - 8);
      v76 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v75 + 48);
      v105 = (char *)v74;
      if (((unsigned int (*)(char *, uint64_t))v76)(v60, 1) != 1)
      {
        v99 = v76;
        v80 = *(uint64_t (**)(char *, char *))(v75 + 88);
        v81 = v80(v60, v105);
        if (v81 == *MEMORY[0x24BE4EA90])
        {
          v96 = v81;
          v95 = (uint64_t (*)(uint64_t, char *))v80;
          v97 = v73;
          v82 = *(void (**)(char *, char *))(v75 + 96);
          v82(v60, v105);
          v98 = v75;
          v83 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
          v83(v103, v60, v109);
          v84 = v107;
          v52(v5, *MEMORY[0x24BE4E2A8], v107);
          v85 = (uint64_t)v102;
          sub_23E135A48();
          v55(v5, v84);
          if (v58(v85, 1, v56) == 1)
          {
            sub_23DF89C7C(v85, &qword_256D1D530);
            v86 = (uint64_t)v101;
            (*(void (**)(char *, uint64_t, uint64_t, char *))(v98 + 56))(v101, 1, 1, v105);
            v43 = v108;
          }
          else
          {
            v87 = v98;
            v88 = v85;
            v86 = (uint64_t)v101;
            sub_23E1359A0();
            v97(v88, v56);
            v89 = v99(v86, 1, v105);
            v43 = v108;
            if (v89 != 1)
            {
              v90 = v95(v86, v105);
              v70 = v109;
              v71 = v110;
              if (v90 == v96)
              {
                v82((char *)v86, v105);
                v91 = v100;
                v83(v100, (char *)v86, v70);
                v92 = v103;
                sub_23E135B44();
                sub_23E135B44();
                sub_23E135B50();
                sub_23E135B50();
                sub_23E135B68();
                sub_23E135B68();
                sub_23E135B5C();
                sub_23E135B38();
                v93 = *(void (**)(char *, uint64_t))(v71 + 8);
                v93(v91, v70);
                v93(v92, v70);
                v64 = 0;
                return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v43, v64, 1, v70);
              }
              (*(void (**)(char *, uint64_t))(v110 + 8))(v103, v109);
              (*(void (**)(uint64_t, char *))(v87 + 8))(v86, v105);
              goto LABEL_29;
            }
          }
          v70 = v109;
          v71 = v110;
          (*(void (**)(char *, uint64_t))(v110 + 8))(v103, v109);
          sub_23DF89C7C(v86, &qword_256D1F8F0);
          v64 = 1;
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v43, v64, 1, v70);
        }
        (*(void (**)(char *, char *))(v75 + 8))(v60, v105);
LABEL_23:
        v64 = 1;
        v43 = v108;
        goto LABEL_24;
      }
    }
    v68 = (uint64_t)v60;
LABEL_22:
    sub_23DF89C7C(v68, &qword_256D1F8F0);
    goto LABEL_23;
  }
  v46 = v107;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE4E2A8], v107);
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v46);
  v47 = sub_23E1359AC();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v13, 1, v47) == 1)
  {
    sub_23DF89C7C((uint64_t)v13, &qword_256D1D530);
    v49 = sub_23E135B8C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v23, 1, 1, v49);
LABEL_17:
    v68 = (uint64_t)v23;
    goto LABEL_22;
  }
  sub_23E1359A0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v47);
  v66 = sub_23E135B8C();
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v23, 1, v66) == 1)
    goto LABEL_17;
  v78 = (*(uint64_t (**)(char *, uint64_t))(v67 + 88))(v23, v66);
  v71 = v110;
  if (v78 == *MEMORY[0x24BE4EA90])
  {
    (*(void (**)(char *, uint64_t))(v67 + 96))(v23, v66);
    v79 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    v70 = v109;
    v79(v34, v23, v109);
    v43 = v108;
    v79(v108, v34, v70);
    v64 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v23, v66);
    v64 = 1;
    v43 = v108;
    v70 = v109;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v43, v64, 1, v70);
}

uint64_t sub_23DFF449C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(unint64_t, uint64_t, uint64_t);
  unint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;
  unsigned __int8 *v61;
  unsigned __int8 *v62;
  uint64_t v63;
  int v64;
  unsigned __int8 *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  char v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v90)(uint64_t, char *, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(unint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  void (*v144)(uint64_t, uint64_t, uint64_t, int *);
  void (*v145)(uint64_t, char *, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t, uint64_t);
  int v153;
  int *v154;
  unsigned int v155;
  unsigned int v156;
  unint64_t v157;
  void (*v158)(unint64_t, uint64_t, uint64_t);
  uint64_t v159;
  char *v160;
  __int128 v161;
  __int128 v162;
  uint64_t *v163;
  unint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unsigned __int8 v187;
  _QWORD v188[4];
  __int16 v189;

  v185 = a1;
  v178 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v178);
  v169 = (uint64_t *)((char *)&v144 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2 = sub_23E1356DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v164 = (unint64_t)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v5);
  v166 = (char *)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_23E1359AC();
  v174 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v170 = (char *)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v167 = (uint64_t)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v186 = (char *)&v144 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v181 = (uint64_t)&v144 - v13;
  v173 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v173);
  v163 = (uint64_t *)((char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v171 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v171);
  v179 = (uint64_t)&v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_23E134C80();
  *(_QWORD *)&v162 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v182 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Device.Control(0);
  v18 = *(_QWORD *)(v17 - 8);
  v176 = (int *)v17;
  v177 = v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v168 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v180 = (uint64_t)&v144 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8E8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v144 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23E135B74();
  v183 = *(_QWORD *)(v25 - 8);
  v184 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F8);
  v28 = *(_QWORD *)(v3 + 72);
  v29 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v30 = swift_allocObject();
  v161 = xmmword_23E138410;
  *(_OWORD *)(v30 + 16) = xmmword_23E138410;
  v31 = v30 + v29;
  v32 = *MEMORY[0x24BE4E368];
  v165 = v3;
  v33 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 104);
  v33(v31, v32, v2);
  v34 = v31 + v28;
  v35 = *MEMORY[0x24BE4E2F8];
  v33(v34, *MEMORY[0x24BE4E2F8], v2);
  v36 = sub_23E0E23A0(v30);
  swift_setDeallocating();
  v37 = v2;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v38 = v185;
  LOBYTE(v30) = HAPControlSolver.Source.has(characteristicKinds:)(v36);
  swift_bridgeObjectRelease();
  v39 = MEMORY[0x24BEE4AF8];
  if ((v30 & 1) != 0)
  {
    v156 = v32;
    v158 = v33;
    v159 = v37;
    v160 = v27;
    sub_23DFF3ADC(v24);
    v41 = v183;
    v40 = v184;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v183 + 48))(v24, 1, v184) == 1)
    {
      sub_23DF89C7C((uint64_t)v24, &qword_256D1F8E8);
    }
    else
    {
      v155 = v35;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v160, v24, v40);
      v154 = (int *)type metadata accessor for HAPControlSolver.Source();
      v42 = v38 + v154[17];
      v43 = sub_23E135AB4();
      v157 = v42;
      v44 = sub_23E135A54();
      v45 = 4;
      v153 = 1;
      if ((v46 & 1) != 0)
      {
        v47 = v179;
      }
      else
      {
        v47 = v179;
        if (v43 != 2)
        {
          if ((v43 & 1) != 0)
          {
            if (v44 > 2)
            {
              v45 = 4;
              v153 = 1;
            }
            else
            {
              v153 = 0;
              v45 = (3 - v44);
            }
          }
          else
          {
            v153 = 0;
            v45 = 0;
          }
        }
      }
      v48 = sub_23DFF6E78();
      sub_23E135B50();
      v50 = v49;
      sub_23E135B44();
      v52 = v51;
      sub_23E135B68();
      v54 = v53;
      v187 = v45;
      v55 = v38;
      sub_23DFF55E4(&v187, (uint64_t)v188);
      v56 = v188[0];
      v57 = v188[1];
      v58 = v188[3];
      v152 = (void (*)(uint64_t, uint64_t, uint64_t))v188[2];
      v59 = v189;
      v60 = *(_QWORD *)(v48 + 16);
      v146 = v45;
      v150 = v48;
      if (v60)
      {
        v61 = (unsigned __int8 *)(v48 + 32);
        v62 = (unsigned __int8 *)(v48 + 32);
        v63 = v60;
        do
        {
          v64 = *v62++;
          if (v64 == 3)
          {
            v70 = 3;
            goto LABEL_26;
          }
          --v63;
        }
        while (v63);
        v65 = (unsigned __int8 *)(v48 + 32);
        v66 = v60;
        do
        {
          v67 = *v65++;
          if (v67 == 1)
          {
            v70 = 2;
            goto LABEL_26;
          }
          --v66;
        }
        while (v66);
        v68 = v162;
        while (1)
        {
          v69 = *v61++;
          if (v69 == 2)
            break;
          if (!--v60)
          {
            v70 = 0;
            goto LABEL_27;
          }
        }
        v70 = 1;
      }
      else
      {
        v70 = 0;
LABEL_26:
        v68 = v162;
      }
LABEL_27:
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
      v72 = v55;
      v73 = v55;
      v74 = v172;
      v71(v182, v73, v172);
      *(_QWORD *)v47 = v56;
      *(_QWORD *)(v47 + 8) = v57;
      *(_QWORD *)(v47 + 16) = v152;
      *(_QWORD *)(v47 + 24) = v58;
      *(_WORD *)(v47 + 32) = v59;
      *(_QWORD *)(v47 + 40) = v50;
      *(_QWORD *)(v47 + 48) = v52;
      *(_QWORD *)(v47 + 56) = v54;
      *(_BYTE *)(v47 + 64) = v70;
      *(_QWORD *)(v47 + 72) = 1;
      *(_BYTE *)(v47 + 80) = 1;
      swift_storeEnumTagMultiPayload();
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630);
      v76 = v163;
      v77 = (char *)v163 + *(int *)(v75 + 48);
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
      v79 = *(unsigned __int8 *)(v68 + 80);
      v80 = (v79 + 32) & ~v79;
      v81 = v80 + *(_QWORD *)(v68 + 72);
      v147 = v78;
      v149 = v81;
      v148 = v79 | 7;
      v82 = swift_allocObject();
      v162 = xmmword_23E138050;
      *(_OWORD *)(v82 + 16) = xmmword_23E138050;
      v151 = v80;
      v152 = (void (*)(uint64_t, uint64_t, uint64_t))v71;
      v71((char *)(v82 + v80), v72, v74);
      v83 = sub_23E0E212C(v82);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *v76 = v83;
      v84 = v72 + v154[5];
      v85 = sub_23E134E9C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v77, v84, v85);
      swift_storeEnumTagMultiPayload();
      v86 = v176;
      v87 = v180;
      v88 = (_QWORD *)(v180 + v176[8]);
      v89 = v176[10];
      v90 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
      v90(v180, v182, v74);
      sub_23DF89384(v47, v87 + v86[5], type metadata accessor for Device.Control.Kind);
      sub_23DF89384((uint64_t)v76, v87 + v86[6], type metadata accessor for Device.Control.Source);
      *(_BYTE *)(v87 + v86[7]) = 0;
      *v88 = 0;
      v88[1] = 0;
      *(_WORD *)(v87 + v86[9]) = 1028;
      *(_BYTE *)(v87 + v89) = 12;
      *(_BYTE *)(v87 + v86[11]) = 1;
      v91 = v177;
      v92 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v177 + 56);
      v93 = v181;
      v92(v181, 1, 1, v86);
      v94 = v164;
      v95 = v159;
      v158(v164, v155, v159);
      v96 = (uint64_t)v166;
      sub_23E135A48();
      (*(void (**)(unint64_t, uint64_t))(v165 + 8))(v94, v95);
      v97 = v174;
      v98 = v175;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v96, 1, v175) == 1)
      {
        swift_bridgeObjectRelease();
        sub_23DF89C7C(v96, &qword_256D1D530);
      }
      else
      {
        v144 = v92;
        v145 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v170, v96, v98);
        v99 = v150;
        v100 = *(_QWORD *)(v150 + 16);
        if (v100)
        {
          v188[0] = MEMORY[0x24BEE4AF8];
          sub_23E09E16C(0, v100, 0);
          v166 = (char *)0xD00000000000001ALL;
          v165 = 0x800000023E144820;
          v164 = 0x800000023E144860;
          v163 = (uint64_t *)0x800000023E144840;
          v157 = 0x800000023E144880;
          __asm { BR              X9 }
        }
        swift_bridgeObjectRelease();
        v101 = MEMORY[0x24BEE4AF8];
        v102 = (uint64_t)v186;
        v103 = v156;
        v104 = v153;
        v105 = *(_BYTE *)(v185 + v154[10]);
        v106 = v179;
        if ((v153 & 1) == 0)
          __asm { BR              X11 }
        sub_23E135988();
        *(_QWORD *)v106 = 0;
        *(_BYTE *)(v106 + 8) = v104;
        *(_QWORD *)(v106 + 16) = v101;
        *(_BYTE *)(v106 + 24) = v105;
        swift_storeEnumTagMultiPayload();
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D610);
        v186 = (char *)swift_allocBox();
        v109 = v108;
        v166 = (char *)(v108 + *(int *)(v107 + 48));
        v171 = *(int *)(v107 + 64);
        v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        v164 = *(int *)(v165 + 48);
        v110 = v159;
        v111 = v158;
        v158(v109, v103, v159);
        v112 = swift_allocObject();
        *(_OWORD *)(v112 + 16) = v162;
        v113 = v185;
        v114 = v172;
        v152(v112 + v151, v185, v172);
        v115 = sub_23E0E212C(v112);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(_QWORD *)(v109 + v164) = v115;
        swift_storeEnumTagMultiPayload();
        v165 = *(int *)(v165 + 48);
        v116 = v166;
        v111((unint64_t)v166, v155, v110);
        v117 = swift_allocObject();
        *(_OWORD *)(v117 + 16) = v162;
        v152(v117 + v151, v113, v114);
        v118 = sub_23E0E212C(v117);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        (*(void (**)(char *, uint64_t))(v174 + 8))(v170, v175);
        v93 = v181;
        sub_23DF89C7C(v181, &qword_256D1D5E0);
        *(_QWORD *)&v116[v165] = v118;
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)(v109 + v171) = 100;
        v86 = v176;
        *(_QWORD *)(v102 + v176[6]) = v186;
        swift_storeEnumTagMultiPayload();
        v119 = (_QWORD *)(v102 + v86[8]);
        v120 = v86[10];
        v145(v102, v182, v114);
        sub_23DF89384(v179, v102 + v86[5], type metadata accessor for Device.Control.Kind);
        *(_BYTE *)(v102 + v86[7]) = 0;
        *v119 = 0;
        v119[1] = 0;
        *(_WORD *)(v102 + v86[9]) = 1028;
        *(_BYTE *)(v102 + v120) = 11;
        *(_BYTE *)(v102 + v86[11]) = 1;
        v144(v102, 0, 1, v86);
        sub_23DFF7160(v102, v93);
        v91 = v177;
      }
      v121 = v169;
      v122 = (uint64_t)v168;
      v123 = v167;
      sub_23DF89C1C(v93, v167, &qword_256D1D5E0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v91 + 48))(v123, 1, v86) == 1)
      {
        sub_23DF89C7C(v123, &qword_256D1D5E0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
        v124 = type metadata accessor for Device.ControlGroup(0);
        v125 = *(unsigned __int8 *)(*(_QWORD *)(v124 - 8) + 80);
        v126 = (v125 + 32) & ~v125;
        v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = v162;
        v127 = v180;
        sub_23DF73E10(v180, v39 + v126, type metadata accessor for Device.Control);
        swift_storeEnumTagMultiPayload();
        v128 = (_QWORD *)(v39 + v126 + *(int *)(v124 + 20));
        v129 = (_QWORD *)(v39 + v126 + *(int *)(v124 + 24));
        *v128 = 0;
        v128[1] = 0;
        *v129 = 0;
        v129[1] = 0;
        sub_23DF89C7C(v93, &qword_256D1D5E0);
        v130 = v127;
      }
      else
      {
        sub_23DF89384(v123, v122, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
        v131 = type metadata accessor for Device.ControlGroup(0);
        v132 = *(unsigned __int8 *)(*(_QWORD *)(v131 - 8) + 80);
        v133 = (v132 + 32) & ~v132;
        v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = v162;
        v134 = v39 + v133;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        v135 = *(_QWORD *)(v91 + 72);
        v136 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
        v137 = swift_allocObject();
        *(_OWORD *)(v137 + 16) = v161;
        v138 = v137 + v136;
        v139 = v180;
        sub_23DF73E10(v180, v138, type metadata accessor for Device.Control);
        sub_23DF73E10(v122, v138 + v135, type metadata accessor for Device.Control);
        *v121 = v137;
        swift_storeEnumTagMultiPayload();
        v140 = *(int *)(v131 + 24);
        v141 = (_QWORD *)(v134 + *(int *)(v131 + 20));
        v142 = (_QWORD *)(v134 + v140);
        sub_23DF89384((uint64_t)v121, v134, type metadata accessor for Device.ControlGroup.LayoutType);
        *v141 = 0;
        v141[1] = 0;
        *v142 = 0;
        v142[1] = 0;
        sub_23DF73E54(v122, type metadata accessor for Device.Control);
        sub_23DF89C7C(v181, &qword_256D1D5E0);
        v130 = v139;
      }
      sub_23DF73E54(v130, type metadata accessor for Device.Control);
      (*(void (**)(char *, uint64_t))(v183 + 8))(v160, v184);
    }
  }
  return v39;
}

unint64_t Device.Control.ThermostatState.Mode.init(heatingCoolingState:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3 - result;
  if (result >= 3)
    v2 = 4;
  *a2 = v2;
  return result;
}

void sub_23DFF55E4(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  if ((_DWORD)v2 != 4)
  {
    type metadata accessor for HAPControlSolver.Source();
    sub_23E135A3C();
    sub_23E135A24();
    sub_23E135A18();
    __asm { BR              X9 }
  }
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_WORD *)(a2 + 32) = 255;
}

void sub_23DFF567C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  v0[1] = v2;
  v0[2] = 0;
  v0[3] = 0;
  JUMPOUT(0x23DFF5618);
}

void sub_23DFF568C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  if ((v3 & 1) == 0)
  {
    *v0 = v1;
    v0[1] = v4;
    v0[2] = v2;
    v0[3] = 0;
    JUMPOUT(0x23DFF5618);
  }
  JUMPOUT(0x23DFF560CLL);
}

void sub_23DFF56A0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  int v5;
  uint64_t v6;
  double v7;

  if (((v5 | a2) & 1) == 0)
  {
    v7 = v4;
    if (*(double *)&a1 < v4)
      v7 = *(double *)&a1;
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = v6;
    *(double *)(v2 + 16) = v7;
    *(double *)(v2 + 24) = *(double *)&a1;
    JUMPOUT(0x23DFF5618);
  }
  JUMPOUT(0x23DFF560CLL);
}

void sub_23DFF56CC(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) == 0)
  {
    *v2 = v3;
    v2[1] = v4;
    v2[2] = a1;
    v2[3] = 0;
    JUMPOUT(0x23DFF5618);
  }
  JUMPOUT(0x23DFF560CLL);
}

uint64_t Device.Control.ThermostatState.Mode.targetHeaterCoolerState.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_23DFF5704 + 4 * byte_23E13B534[*v0]))(0, 0);
}

uint64_t sub_23DFF5704()
{
  return 0;
}

uint64_t sub_23DFF5710()
{
  return 2;
}

uint64_t sub_23DFF571C()
{
  return 1;
}

void sub_23DFF5728(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23DFF575C()
{
  return 1;
}

uint64_t sub_23DFF57B0@<X0>(uint64_t result@<X0>, unsigned __int8 *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v5;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v5 = *a2;
  if (v5 != 4)
  {
    type metadata accessor for HAPControlSolver.Source();
    v7 = sub_23E135A3C();
    v9 = v8;
    v10 = sub_23E135A30();
    v12 = v11;
    v21 = sub_23E135A24();
    v14 = v13;
    result = sub_23E135A18();
    if ((v5 - 1) >= 2)
    {
      if (!v5)
      {
        result = sub_23E135A3C();
        v7 = result;
        v9 = v18;
        v10 = 0;
        v16 = 0;
        v17 = 2;
        goto LABEL_13;
      }
      if ((a3 & 1) != 0)
      {
        if ((v12 & 1) == 0)
        {
          result = sub_23E135A3C();
          v7 = result;
          v9 = v19;
          v16 = 0;
          v17 = 768;
          goto LABEL_13;
        }
      }
      else if (((v14 | v15) & 1) == 0)
      {
        v16 = result;
        result = sub_23E135A3C();
        v7 = result;
        v9 = v20;
        v17 = 769;
        v10 = v21;
        goto LABEL_13;
      }
    }
    else if ((v12 & 1) == 0)
    {
      v16 = 0;
      v17 = (_WORD)v5 << 8;
LABEL_13:
      *(_QWORD *)a4 = v7;
      *(_QWORD *)(a4 + 8) = v9 & 1;
      *(_QWORD *)(a4 + 16) = v10;
      *(_QWORD *)(a4 + 24) = v16;
      goto LABEL_14;
    }
  }
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  v17 = 255;
LABEL_14:
  *(_WORD *)(a4 + 32) = v17;
  return result;
}

uint64_t sub_23DFF58DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  unint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  unint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  unsigned int *v71;
  unsigned int *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int16 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  BOOL v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v171;
  void (*v172)(char *, uint64_t);
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  char *v175;
  unsigned int (*v176)(uint64_t, uint64_t, uint64_t);
  unsigned int v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t *v183;
  char *v184;
  _QWORD *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _OWORD *v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  __int128 v202;
  uint64_t v203;
  __int128 v204;
  char *v205;
  uint64_t v206;
  __int128 v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  unint64_t v215;
  int *v216;
  uint64_t v217;
  unsigned __int8 v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  __int16 v222;

  v188 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v188);
  v183 = (uint64_t *)((char *)&v168 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v217 = sub_23E1359AC();
  v215 = *(_QWORD *)(v217 - 8);
  MEMORY[0x24BDAC7A8](v217);
  v186 = (char *)&v168 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v187 = (uint64_t)&v168 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v181 = (char *)&v168 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v196 = (uint64_t)&v168 - v9;
  v192 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v192);
  v193 = (uint64_t *)((char *)&v168 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v189 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v189);
  v191 = (_OWORD *)((char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v190 = sub_23E134C80();
  v185 = *(_QWORD **)(v190 - 8);
  MEMORY[0x24BDAC7A8](v190);
  v208 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for Device.Control(0);
  v195 = *(_QWORD *)(v194 - 8);
  v13 = MEMORY[0x24BDAC7A8](v194);
  v182 = (uint64_t)&v168 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v206 = (uint64_t)&v168 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8E8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)&v204 = (char *)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E135B74();
  v209 = *(_QWORD *)(v18 - 8);
  v210 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v205 = (char *)&v168 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = (int *)type metadata accessor for HAPControlSolver.Source();
  v20 = MEMORY[0x24BDAC7A8](v216);
  v203 = (uint64_t)&v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)&v202 = (char *)&v168 - v22;
  v23 = sub_23E1356DC();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v168 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v184 = (char *)&v168 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v168 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v32);
  v214 = (char *)&v168 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23E135B2C();
  v212 = *(_QWORD *)(v34 - 8);
  v213 = v34;
  MEMORY[0x24BDAC7A8](v34);
  v211 = (char *)&v168 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F8);
  v37 = *(char **)(v24 + 72);
  v38 = *(unsigned __int8 *)(v24 + 80);
  v39 = (v38 + 32) & ~v38;
  v199 = v36;
  v198 = v39 + 2 * (_QWORD)v37;
  v197 = v38 | 7;
  v40 = swift_allocObject();
  v207 = xmmword_23E138410;
  *(_OWORD *)(v40 + 16) = xmmword_23E138410;
  v200 = v39;
  v41 = v40 + v39;
  v42 = *MEMORY[0x24BE4E308];
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104);
  v43(v41, v42, v23);
  v201 = v37;
  v43((uint64_t)&v37[v41], *MEMORY[0x24BE4E2C0], v23);
  v44 = sub_23E0E23A0(v40);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  LOBYTE(v40) = HAPControlSolver.Source.has(characteristicKinds:)(v44);
  swift_bridgeObjectRelease();
  if ((v40 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v177 = v42;
  v179 = v43;
  v43((uint64_t)v26, v42, v23);
  v45 = v216[17];
  v178 = a1;
  v46 = a1 + v45;
  sub_23E135A48();
  v47 = *(void (**)(char *, uint64_t))(v24 + 8);
  v180 = v23;
  v47(v26, v23);
  v48 = v215;
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48);
  v50 = v217;
  if (v49(v31, 1, v217) == 1)
  {
    sub_23DF89C7C((uint64_t)v31, &qword_256D1D530);
    v51 = sub_23E135B8C();
    v52 = (uint64_t)v214;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v214, 1, 1, v51);
LABEL_5:
    sub_23DF89C7C(v52, &qword_256D1F8F0);
    return MEMORY[0x24BEE4AF8];
  }
  v53 = v48;
  v176 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v49;
  v52 = (uint64_t)v214;
  sub_23E1359A0();
  v54 = *(void (**)(char *, uint64_t))(v53 + 8);
  v54(v31, v50);
  v55 = sub_23E135B8C();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v52, 1, v55) == 1)
    goto LABEL_5;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v56 + 88))(v52, v55) != *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v52, v55);
    return MEMORY[0x24BEE4AF8];
  }
  v173 = v47;
  v174 = v46;
  v175 = v26;
  (*(void (**)(uint64_t, uint64_t))(v56 + 96))(v52, v55);
  (*(void (**)(char *, uint64_t, uint64_t))(v212 + 32))(v211, v52, v213);
  v214 = (char *)sub_23E135AFC();
  v59 = *((_QWORD *)v214 + 2);
  v60 = (char *)MEMORY[0x24BEE4AF8];
  if (v59)
  {
    v61 = (unint64_t *)(v214 + 32);
    v62 = v178;
    v63 = v180;
    do
    {
      v65 = *v61++;
      v64 = v65;
      if (v65 <= 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v60 = sub_23E0076F8(0, *((_QWORD *)v60 + 2) + 1, 1, v60);
        v67 = *((_QWORD *)v60 + 2);
        v66 = *((_QWORD *)v60 + 3);
        if (v67 >= v66 >> 1)
          v60 = sub_23E0076F8((char *)(v66 > 1), v67 + 1, 1, v60);
        *((_QWORD *)v60 + 2) = v67 + 1;
        v60[v67 + 32] = 0x3010200u >> (8 * v64);
      }
      --v59;
    }
    while (v59);
  }
  else
  {
    v62 = v178;
    v63 = v180;
  }
  swift_bridgeObjectRelease();
  v68 = sub_23E073EC8((uint64_t)v60);
  swift_bridgeObjectRelease();
  v69 = sub_23DFC7C44(3u, v68);
  v70 = v202;
  sub_23DF73E10(v62, v202, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v71 = (unsigned int *)MEMORY[0x24BE4E2A8];
  v72 = (unsigned int *)MEMORY[0x24BE4E298];
  v172 = v54;
  if (v69)
  {
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v207;
    v74 = v73 + v200;
    v75 = v179;
    v179(v73 + v200, *v71, v63);
    v75((uint64_t)&v201[v74], *v72, v63);
    v76 = sub_23E0E23A0(v73);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v77 = HAPControlSolver.Source.has(characteristicKinds:)(v76);
    swift_bridgeObjectRelease();
  }
  else
  {
    v77 = 0;
  }
  sub_23DF73E54(v70, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v214 = (char *)v68;
  v78 = sub_23DFC7C44(3u, v68);
  v79 = v203;
  sub_23DF73E10(v62, v203, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if (v78)
  {
    v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v207;
    v81 = v80 + v200;
    v82 = v179;
    v179(v80 + v200, *v71, v63);
    v82((uint64_t)&v201[v81], *v72, v63);
    v83 = sub_23E0E23A0(v80);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    LOBYTE(v82) = HAPControlSolver.Source.has(characteristicKinds:)(v83);
    swift_bridgeObjectRelease();
    v84 = v82 ^ 1;
  }
  else
  {
    v84 = 0;
  }
  v85 = v209;
  sub_23DF73E54(v79, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v86 = v84 & 1;
  sub_23DFC7D30(v86, v77 & 1, &v219);
  v87 = (char)v219;
  v88 = v204;
  sub_23DFC7DC4(v62, (unsigned __int8 *)&v219, v204);
  v89 = v210;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v88, 1, v210) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v88, &qword_256D1F8E8);
    (*(void (**)(char *, uint64_t))(v212 + 8))(v211, v213);
    return MEMORY[0x24BEE4AF8];
  }
  v169 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v205, v88, v89);
  LODWORD(v200) = v87;
  v218 = v87;
  sub_23DFF57B0(v62, &v218, v86, (uint64_t)&v219);
  v204 = v219;
  v90 = v220;
  v91 = v221;
  v92 = v222;
  sub_23E135B50();
  v94 = v93;
  sub_23E135B44();
  v96 = v95;
  sub_23E135B68();
  v98 = v97;
  v99 = v185;
  v100 = (void (*)(char *, uint64_t, uint64_t))v185[2];
  v101 = v190;
  v100(v208, v62, v190);
  v102 = (uint64_t)v191;
  *v191 = v204;
  *(_QWORD *)(v102 + 16) = v90;
  *(_QWORD *)(v102 + 24) = v91;
  *(_WORD *)(v102 + 32) = v92;
  *(_QWORD *)(v102 + 40) = v94;
  *(_QWORD *)(v102 + 48) = v96;
  *(_QWORD *)(v102 + 56) = v98;
  *(_BYTE *)(v102 + 64) = 3;
  *(_QWORD *)(v102 + 72) = 1;
  *(_BYTE *)(v102 + 80) = 1;
  swift_storeEnumTagMultiPayload();
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630);
  v104 = v193;
  v105 = (char *)v193 + *(int *)(v103 + 48);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v107 = *((unsigned __int8 *)v99 + 80);
  v108 = (v107 + 32) & ~v107;
  v109 = v108 + v99[9];
  v198 = v106;
  v197 = v109;
  v171 = v107 | 7;
  v110 = swift_allocObject();
  v202 = xmmword_23E138050;
  *(_OWORD *)(v110 + 16) = xmmword_23E138050;
  v199 = v108;
  v201 = (char *)v100;
  v100((char *)(v110 + v108), v62, v101);
  v111 = sub_23E0E212C(v110);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *v104 = v111;
  v112 = v62 + v216[5];
  v113 = sub_23E134E9C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v105, v112, v113);
  swift_storeEnumTagMultiPayload();
  v114 = (int *)v194;
  v115 = v206;
  v116 = (_QWORD *)(v206 + *(int *)(v194 + 32));
  v117 = *(int *)(v194 + 40);
  v118 = (_QWORD *)v99[4];
  v119 = v196;
  v185 = v118;
  ((void (*)(uint64_t, char *, uint64_t))v118)(v206, v208, v101);
  sub_23DF89384(v102, v115 + v114[5], type metadata accessor for Device.Control.Kind);
  sub_23DF89384((uint64_t)v104, v115 + v114[6], type metadata accessor for Device.Control.Source);
  *(_BYTE *)(v115 + v114[7]) = 0;
  *v116 = 0;
  v116[1] = 0;
  *(_WORD *)(v115 + v114[9]) = 1028;
  *(_BYTE *)(v115 + v117) = 12;
  *(_BYTE *)(v115 + v114[11]) = 1;
  v120 = v195;
  v170 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v195 + 56);
  v170(v119, 1, 1, v114);
  v121 = v175;
  v122 = v180;
  v179((uint64_t)v175, v177, v180);
  v123 = (uint64_t)v184;
  sub_23E135A48();
  v173(v121, v122);
  v124 = v217;
  if (v176(v123, 1, v217) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v123, &qword_256D1D530);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v186, v123, v124);
    v125 = swift_bridgeObjectRetain();
    v126 = sub_23E12E284(v125);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v219 = v126;
    sub_23DFC98EC((uint64_t *)&v219);
    swift_bridgeObjectRelease();
    v127 = v219;
    v128 = *(_QWORD *)(v219 + 16);
    if (v128)
    {
      *(_QWORD *)&v219 = MEMORY[0x24BEE4AF8];
      sub_23E09E16C(0, v128, 0);
      v214 = (char *)0x800000023E144860;
      v215 = 0x800000023E144820;
      *(_QWORD *)&v204 = 0x800000023E144840;
      v203 = 0x800000023E144880;
      __asm { BR              X9 }
    }
    swift_release();
    v129 = MEMORY[0x24BEE4AF8];
    v130 = *(_BYTE *)(v178 + v216[10]);
    if ((_DWORD)v200 == 4)
      v131 = 0;
    else
      v131 = qword_23E13B580[v169];
    v132 = (_DWORD)v200 == 4;
    v133 = v186;
    sub_23E135988();
    v134 = (uint64_t)v191;
    *(_QWORD *)v191 = v131;
    *(_BYTE *)(v134 + 8) = v132;
    *(_QWORD *)(v134 + 16) = v129;
    *(_BYTE *)(v134 + 24) = v130;
    swift_storeEnumTagMultiPayload();
    v135 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650) + 48);
    v136 = (uint64_t)v193;
    v179((uint64_t)v193, v177, v180);
    v137 = swift_allocObject();
    *(_OWORD *)(v137 + 16) = v202;
    v138 = v190;
    ((void (*)(uint64_t, uint64_t, uint64_t))v201)(v137 + v199, v178, v190);
    v139 = sub_23E0E212C(v137);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v172(v133, v217);
    v119 = v196;
    sub_23DF89C7C(v196, &qword_256D1D5E0);
    *(_QWORD *)(v136 + v135) = v139;
    swift_storeEnumTagMultiPayload();
    v140 = (int *)v194;
    v141 = (uint64_t)v181;
    v142 = &v181[*(int *)(v194 + 32)];
    v143 = *(int *)(v194 + 40);
    ((void (*)(char *, char *, uint64_t))v185)(v181, v208, v138);
    sub_23DF89384(v134, v141 + v140[5], type metadata accessor for Device.Control.Kind);
    sub_23DF89384(v136, v141 + v140[6], type metadata accessor for Device.Control.Source);
    *(_BYTE *)(v141 + v140[7]) = 0;
    *(_QWORD *)v142 = 0;
    *((_QWORD *)v142 + 1) = 0;
    *(_WORD *)(v141 + v140[9]) = 1028;
    *(_BYTE *)(v141 + v143) = 11;
    *(_BYTE *)(v141 + v140[11]) = 1;
    v114 = v140;
    v170(v141, 0, 1, v140);
    sub_23DFF7160(v141, v119);
    v120 = v195;
  }
  v144 = v187;
  sub_23DF89C1C(v119, v187, &qword_256D1D5E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v120 + 48))(v144, 1, v114) == 1)
  {
    sub_23DF89C7C(v144, &qword_256D1D5E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v145 = type metadata accessor for Device.ControlGroup(0);
    v146 = *(unsigned __int8 *)(*(_QWORD *)(v145 - 8) + 80);
    v147 = (v146 + 32) & ~v146;
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v202;
    v148 = v57 + v147;
    v149 = v206;
    sub_23DF73E10(v206, v148, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v150 = (_QWORD *)(v148 + *(int *)(v145 + 20));
    v151 = (_QWORD *)(v148 + *(int *)(v145 + 24));
    *v150 = 0;
    v150[1] = 0;
    *v151 = 0;
    v151[1] = 0;
    sub_23DF89C7C(v119, &qword_256D1D5E0);
    v152 = v149;
  }
  else
  {
    v153 = v182;
    sub_23DF89384(v144, v182, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v154 = v120;
    v155 = type metadata accessor for Device.ControlGroup(0);
    v156 = *(unsigned __int8 *)(*(_QWORD *)(v155 - 8) + 80);
    v157 = (v156 + 32) & ~v156;
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v202;
    v158 = v57 + v157;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v159 = *(_QWORD *)(v154 + 72);
    v160 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    v161 = swift_allocObject();
    *(_OWORD *)(v161 + 16) = v207;
    v162 = v161 + v160;
    v163 = v206;
    sub_23DF73E10(v206, v162, type metadata accessor for Device.Control);
    sub_23DF73E10(v153, v162 + v159, type metadata accessor for Device.Control);
    v164 = (uint64_t)v183;
    *v183 = v161;
    swift_storeEnumTagMultiPayload();
    v165 = *(int *)(v155 + 24);
    v166 = (_QWORD *)(v158 + *(int *)(v155 + 20));
    v167 = (_QWORD *)(v158 + v165);
    sub_23DF89384(v164, v158, type metadata accessor for Device.ControlGroup.LayoutType);
    *v166 = 0;
    v166[1] = 0;
    *v167 = 0;
    v167[1] = 0;
    sub_23DF73E54(v153, type metadata accessor for Device.Control);
    sub_23DF89C7C(v119, &qword_256D1D5E0);
    v152 = v163;
  }
  sub_23DF73E54(v152, type metadata accessor for Device.Control);
  (*(void (**)(char *, uint64_t))(v209 + 8))(v205, v210);
  (*(void (**)(char *, uint64_t))(v212 + 8))(v211, v213);
  return v57;
}

unint64_t static Device.Control.ThermostatState.Mode.targetThermostatMode(for:)@<X0>(char *a1@<X8>)
{
  unint64_t result;
  char v3;
  char v4;
  char v5;
  char v6;

  result = sub_23E135238();
  if ((v3 & 1) != 0)
  {
    result = sub_23E135220();
    if (result >= 3)
      v6 = 4;
    else
      v6 = 3 - result;
    if ((v5 & 1) != 0)
      v4 = 4;
    else
      v4 = v6;
  }
  else if (result >= 4)
  {
    v4 = 4;
  }
  else
  {
    v4 = 0x3010200u >> (8 * result);
  }
  *a1 = v4;
  return result;
}

unint64_t Device.Control.ThermostatState.Mode.init(heatingCoolingState:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = 0x10200u >> (8 * result);
  if (result >= 3)
    LOBYTE(v2) = 4;
  *a2 = v2;
  return result;
}

ValueMetadata *_s10ThermostatVMa_0()
{
  return &_s10ThermostatVN_0;
}

ValueMetadata *_s12HeaterCoolerVMa()
{
  return &_s12HeaterCoolerVN;
}

uint64_t sub_23DFF6E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[16];

  v0 = sub_23E1356DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23E135B2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE4E2F8], v0);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  v14 = sub_23E1359AC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
  {
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D530);
    v16 = sub_23E135B8C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
LABEL_4:
    sub_23DF89C7C((uint64_t)v9, &qword_256D1F8F0);
    return MEMORY[0x24BEE4AF8];
  }
  sub_23E1359A0();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v6, v14);
  v17 = sub_23E135B8C();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
    goto LABEL_4;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v18 + 88))(v9, v17) == *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(_BYTE *, uint64_t))(v18 + 96))(v9, v17);
    v21 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
    MEMORY[0x24BDAC7A8](v21);
    *(_QWORD *)&v22[-16] = v13;
    v19 = sub_23DFFA8DC((uint64_t)sub_23DFF71A8, (uint64_t)&v22[-32], (uint64_t)&unk_250EC6478);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return v19;
  }
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v9, v17);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23DFF7160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFF71A8(uint64_t a1)
{
  char v1;

  sub_23DFF5728(a1);
  return v1 & 1;
}

uint64_t sub_23DFF71C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  _BYTE v15[64];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_BYTE *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 73);
  v13 = *(_QWORD *)(v1 + 8);
  v16 = v13;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v9;
  v25 = v10;
  sub_23DF98590(v13, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_23DF9C754((uint64_t)v15);
  sub_23DF985F0(v13, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_23DFF81A4();
  sub_23DFF81E8();
  result = sub_23E136480();
  v12 = v15[1];
  *a1 = v15[0];
  a1[1] = v12;
  return result;
}

id sub_23DFF731C(char a1)
{
  id v1;
  void *v2;

  if (!a1)
  {
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6FC8]), sel_init);
    if (qword_256D1D2F0 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (a1 == 1)
  {
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6FC8]), sel_init);
    if (qword_256D1D2E0 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6FC8]), sel_init);
  if (qword_256D1D2E8 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  sub_23DFF84F0(0, &qword_256D20D70);
  v2 = (void *)sub_23E137260();
  objc_msgSend(v1, sel_setBackgroundEffects_, v2);

  return v1;
}

id sub_23DFF7474()
{
  char *v0;

  return sub_23DFF731C(*v0);
}

uint64_t sub_23DFF748C()
{
  return sub_23E1363FC();
}

uint64_t sub_23DFF74CC()
{
  sub_23DFF84AC();
  return sub_23E13645C();
}

uint64_t sub_23DFF751C()
{
  sub_23DFF84AC();
  return sub_23E136408();
}

void sub_23DFF756C()
{
  sub_23DFF84AC();
  sub_23E136450();
  __break(1u);
}

double sub_23DFF7594()
{
  double result;

  xmmword_256D20C60 = xmmword_23E13B5A0;
  *(_OWORD *)algn_256D20C70 = xmmword_23E13B5B0;
  xmmword_256D20C80 = xmmword_23E13B5C0;
  unk_256D20C90 = xmmword_23E13B5B0;
  xmmword_256D20CA0 = xmmword_23E13B5D0;
  qword_256D20CB0 = 0x3FEFCED916872B02;
  result = 0.0;
  *(_OWORD *)algn_256D20CB8 = 0u;
  *(__int128 *)((char *)&xmmword_256D20CC0 + 8) = 0u;
  qword_256D20CD8 = 0x3FF0000000000000;
  xmmword_256D20CE0 = 0u;
  unk_256D20CF0 = 0u;
  return result;
}

uint64_t sub_23DFF75F8()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20D78);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E13B5E0;
  *(_QWORD *)(v0 + 32) = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 14);
  result = sub_23E137284();
  qword_256D34678 = v0;
  return result;
}

id sub_23DFF7680()
{
  id result;

  result = sub_23DFF769C();
  qword_256D34680 = (uint64_t)result;
  return result;
}

id sub_23DFF769C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id result;
  _OWORD v6[10];

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20D78);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E13B5F0;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23E13B600;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
  *(_QWORD *)(v1 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, -2);
  *(_QWORD *)(v1 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 4);
  *(_QWORD *)(v1 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, -8);
  *(_QWORD *)&v6[0] = v1;
  sub_23E137284();
  sub_23DFF84F0(0, (unint64_t *)&qword_256D20D80);
  v2 = (void *)sub_23E137260();
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_colorEffectLuminanceCurveMap_blendingAmount_, v2, 0.24, *(_QWORD *)&v6[0]);

  *(_QWORD *)(v0 + 32) = v4;
  if (qword_256D1D2D8 != -1)
    swift_once();
  v6[0] = xmmword_256D20C60;
  v6[1] = *(_OWORD *)algn_256D20C70;
  v6[2] = xmmword_256D20C80;
  v6[3] = unk_256D20C90;
  v6[4] = xmmword_256D20CA0;
  v6[5] = *(_OWORD *)&qword_256D20CB0;
  v6[6] = xmmword_256D20CC0;
  v6[7] = unk_256D20CD0;
  v6[8] = xmmword_256D20CE0;
  v6[9] = unk_256D20CF0;
  *(_QWORD *)(v0 + 40) = objc_msgSend(v3, sel_colorEffectMatrix_, v6);
  result = objc_msgSend((id)objc_opt_self(), sel_effectWithBlurRadius_, 20.0);
  if (result)
  {
    *(_QWORD *)(v0 + 48) = result;
    *(_QWORD *)&v6[0] = v0;
    sub_23E137284();
    return *(id *)&v6[0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23DFF78A8()
{
  id result;

  result = sub_23DFF78C4();
  qword_256D34688 = (uint64_t)result;
  return result;
}

id sub_23DFF78C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20D78);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E13B600;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23E13B600;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 0.764976526);
  *(_QWORD *)(v1 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
  *(_QWORD *)(v1 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 0.34);
  *(_QWORD *)(v1 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 0.6);
  sub_23E137284();
  sub_23DFF84F0(0, (unint64_t *)&qword_256D20D80);
  v2 = (void *)sub_23E137260();
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_colorEffectLuminanceCurveMap_blendingAmount_, v2, 0.25);

  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = objc_msgSend(v3, sel_colorEffectSaturate_, 1.2);
  result = objc_msgSend((id)objc_opt_self(), sel_effectWithBlurRadius_, 32.0);
  if (result)
  {
    *(_QWORD *)(v0 + 48) = result;
    *(_QWORD *)(v0 + 56) = objc_msgSend(v3, sel_colorEffectBrightness_, -0.1);
    sub_23E137284();
    return (id)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23DFF7ABC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6950]), sel_initWithRed_green_blue_alpha_, 0.235294118, 0.235294118, 0.262745098, 0.75);
  qword_256D20D00 = (uint64_t)result;
  return result;
}

id static UILabel.prefixLabelOnColor.getter()
{
  return sub_23DFF7C54(&qword_256D1D2F8, (id *)&qword_256D20D00);
}

id sub_23DFF7B24()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6950]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.75);
  qword_256D20D08 = (uint64_t)result;
  return result;
}

id static UILabel.prefixLabelOffColor.getter()
{
  return sub_23DFF7C54(&qword_256D1D300, (id *)&qword_256D20D08);
}

id sub_23DFF7B80()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6950]), sel_initWithRed_green_blue_alpha_, 0.235294118, 0.235294118, 0.262745098, 0.6);
  qword_256D20D10 = (uint64_t)result;
  return result;
}

id static UILabel.secondaryLabelOnColor.getter()
{
  return sub_23DFF7C54(&qword_256D1D308, (id *)&qword_256D20D10);
}

id sub_23DFF7BF0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6950]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.6);
  qword_256D20D18 = (uint64_t)result;
  return result;
}

id static UILabel.secondaryLabelOffColor.getter()
{
  return sub_23DFF7C54(&qword_256D1D310, (id *)&qword_256D20D18);
}

id sub_23DFF7C54(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for VisualEffect()
{
  return &type metadata for VisualEffect;
}

uint64_t sub_23DFF7CD8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23DFF7CE8@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v4;
  double result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  int v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  unsigned __int16 v17;
  unsigned __int8 v18;
  char v19;

  *((_QWORD *)&v13 + 1) = &type metadata for ControlCenterFeatures;
  *(_QWORD *)&v14 = sub_23DFF83B0();
  v4 = sub_23E134CA4();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
  if ((v4 & 1) != 0)
  {
    swift_getKeyPath();
  }
  else
  {
    if (a1 == 1)
      sub_23E136C48();
    else
      swift_getKeyPath();
    sub_23DFF83FC();
    sub_23E136480();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20D58);
  sub_23DFF83FC();
  sub_23DFF8440();
  sub_23E136480();
  result = *(double *)&v12;
  v6 = v13;
  v7 = v14;
  v8 = v15;
  v9 = v16;
  v10 = v17 | (v18 << 16);
  v11 = v19;
  *(_OWORD *)a2 = v12;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 64) = v9;
  *(_WORD *)(a2 + 72) = v10;
  *(_BYTE *)(a2 + 74) = BYTE2(v10);
  *(_BYTE *)(a2 + 75) = v11;
  return result;
}

id sub_23DFF7EB0()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id result;
  id v13;
  void *v14;
  uint64_t v15;
  _BYTE v16[72];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  if (*(_BYTE *)v0 != 1)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_controlCenterDarkMaterial);
    if (v13)
      return v13;
    __break(1u);
    goto LABEL_8;
  }
  v1 = *(_BYTE *)(v0 + 73);
  v2 = *(_BYTE *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 8);
  v9 = *(_QWORD *)(v0 + 16);
  v17 = v10;
  v18 = v9;
  v19 = v8;
  v20 = v7;
  v21 = v6;
  v22 = v5;
  v23 = v4;
  v24 = v3;
  v15 = v3;
  v25 = v2;
  v26 = v1;
  sub_23DF98590(v10, v9, v8, v7, v6, v5, v4, v3, v2, v1);
  sub_23DF9C754((uint64_t)v16);
  sub_23DF985F0(v10, v9, v8, v7, v6, v5, v4, v15, v2, v1);
  if (v16[64] != 1)
  {
LABEL_8:
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6FC8]), sel_init);
    if (qword_256D1D2E0 != -1)
      swift_once();
    sub_23DFF84F0(0, &qword_256D20D70);
    v14 = (void *)sub_23E137260();
    objc_msgSend(v13, sel_setBackgroundEffects_, v14);
    goto LABEL_11;
  }
  v11 = (void *)objc_opt_self();
  result = objc_msgSend(v11, sel_controlCenterDarkMaterial);
  if (result)
  {
    v13 = result;
    result = objc_msgSend(v11, sel_controlCenterLightFill);
    if (result)
    {
      v14 = result;
      objc_msgSend(v13, sel_addSubview_, result);
      objc_msgSend(v14, sel_setAutoresizingMask_, 18);
LABEL_11:

      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23DFF80D8()
{
  sub_23DFF8868();
  return sub_23E13645C();
}

uint64_t sub_23DFF8128()
{
  sub_23DFF8868();
  return sub_23E136408();
}

void sub_23DFF8178()
{
  sub_23DFF8868();
  sub_23E136450();
  __break(1u);
}

double sub_23DFF819C@<D0>(uint64_t a1@<X8>)
{
  char *v1;

  return sub_23DFF7CE8(*v1, a1);
}

unint64_t sub_23DFF81A4()
{
  unint64_t result;

  result = qword_256D20D20;
  if (!qword_256D20D20)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B848, &type metadata for VisualEffect.ControlCenterMaterialView);
    atomic_store(result, (unint64_t *)&qword_256D20D20);
  }
  return result;
}

unint64_t sub_23DFF81E8()
{
  unint64_t result;

  result = qword_256D20D28;
  if (!qword_256D20D28)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B7F8, &type metadata for VisualEffect.BasicVisualEffectView);
    atomic_store(result, (unint64_t *)&qword_256D20D28);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualEffect.BasicVisualEffectView()
{
  return &type metadata for VisualEffect.BasicVisualEffectView;
}

ValueMetadata *type metadata accessor for VisualEffect.ControlCenterMaterialView()
{
  return &type metadata for VisualEffect.ControlCenterMaterialView;
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23DFF82A0 + 4 * byte_23E13B645[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23DFF82D4 + 4 * byte_23E13B640[v4]))();
}

uint64_t sub_23DFF82D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DFF82DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DFF82E4);
  return result;
}

uint64_t sub_23DFF82F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DFF82F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23DFF82FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DFF8304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualEffect.Style()
{
  return &type metadata for VisualEffect.Style;
}

uint64_t sub_23DFF8320()
{
  return sub_23DF98488(&qword_256D20D30, &qword_256D20D38, (uint64_t (*)(void))sub_23DFF81A4, (uint64_t (*)(void))sub_23DFF81E8);
}

unint64_t sub_23DFF8358()
{
  unint64_t result;

  result = qword_256D20D40;
  if (!qword_256D20D40)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B740, &type metadata for VisualEffect.Style);
    atomic_store(result, (unint64_t *)&qword_256D20D40);
  }
  return result;
}

uint64_t sub_23DFF83A0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23DFF83B0()
{
  unint64_t result;

  result = qword_256D20D48;
  if (!qword_256D20D48)
  {
    result = MEMORY[0x24264C55C](&unk_23E13DE70, &type metadata for ControlCenterFeatures);
    atomic_store(result, (unint64_t *)&qword_256D20D48);
  }
  return result;
}

unint64_t sub_23DFF83FC()
{
  unint64_t result;

  result = qword_256D20D50;
  if (!qword_256D20D50)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B960, &type metadata for VisualEffect.ControlCenterMaterialView.MaterialView);
    atomic_store(result, (unint64_t *)&qword_256D20D50);
  }
  return result;
}

unint64_t sub_23DFF8440()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256D20D60;
  if (!qword_256D20D60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20D58);
    v2 = sub_23DFF83FC();
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D20D60);
  }
  return result;
}

unint64_t sub_23DFF84AC()
{
  unint64_t result;

  result = qword_256D20D68;
  if (!qword_256D20D68)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B768, &type metadata for VisualEffect.BasicVisualEffectView);
    atomic_store(result, (unint64_t *)&qword_256D20D68);
  }
  return result;
}

uint64_t sub_23DFF84F0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectVwxx_0(uint64_t a1)
{
  return sub_23DF985F0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_BYTE *)(a2 + 72);
  v13 = *(_BYTE *)(a2 + 73);
  sub_23DF98590(v3, v4, v5, v6, v7, v8, v9, v10, v11, v13);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 73) = v13;
  return a1;
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_BYTE *)(a2 + 72);
  v23 = *(_BYTE *)(a2 + 73);
  sub_23DF98590(v3, v4, v5, v6, v7, v8, v9, v10, v11, v23);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_BYTE *)(a1 + 72);
  v21 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 73) = v23;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 72);
  v4 = *(_BYTE *)(a2 + 73);
  v5 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_BYTE *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 73);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = v3;
  *(_BYTE *)(a1 + 73) = v4;
  sub_23DF985F0(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 74))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 73);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s22HomeAccessoryControlUI12VisualEffectVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 74) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 74) = 0;
    if (a2)
      *(_BYTE *)(result + 73) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualEffect.ControlCenterMaterialView.MaterialView()
{
  return &type metadata for VisualEffect.ControlCenterMaterialView.MaterialView;
}

uint64_t sub_23DFF8830()
{
  return sub_23DF98488(&qword_256D20D88, &qword_256D20D90, (uint64_t (*)(void))sub_23DFF83FC, (uint64_t (*)(void))sub_23DFF8440);
}

unint64_t sub_23DFF8868()
{
  unint64_t result;

  result = qword_256D20D98;
  if (!qword_256D20D98)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B8D0, &type metadata for VisualEffect.ControlCenterMaterialView.MaterialView);
    atomic_store(result, (unint64_t *)&qword_256D20D98);
  }
  return result;
}

uint64_t View.alwaysEnabledOnTapGesture(disablingBlock:perform:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)()@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t (*v27)();
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  unint64_t v43;
  unint64_t v44;
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)();
  _QWORD v64[2];
  _QWORD v65[2];
  uint64_t v66;
  uint64_t (*v67)();
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  char v76;

  v6 = a4;
  v58 = a3;
  v57 = a2;
  v62 = a6;
  v66 = a4;
  v67 = a5;
  v63 = a5;
  v8 = MEMORY[0x24264C520](0, &v66, MEMORY[0x24BDF2550], 0);
  v54 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v54 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9A8);
  v11 = sub_23E135FF4();
  v55 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v54 - v15;
  v16 = sub_23E135FF4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v54 - v21;
  v61 = sub_23E13648C();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)&v54 - v23;
  if ((a1 & 1) != 0)
  {
    v24 = swift_allocObject();
    v25 = v58;
    *(_QWORD *)(v24 + 16) = v57;
    *(_QWORD *)(v24 + 24) = v25;
    KeyPath = swift_getKeyPath();
    LOBYTE(v66) = 1;
    v67 = sub_23DFF9A98;
    v68 = v24;
    v69 = KeyPath;
    v70 = 0;
    swift_retain();
    v27 = v63;
    MEMORY[0x24264B440](&v66, v6, &type metadata for AlwaysEnabledTapGestureModifier, v63);
    swift_release();
    swift_release();
    v28 = sub_23DF8DABC();
    v65[0] = v27;
    v65[1] = v28;
    v29 = MEMORY[0x24BDED308];
    MEMORY[0x24264C55C](MEMORY[0x24BDED308], v16, v65);
    v30 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v30(v22, v20, v16);
    v31 = *(void (**)(char *, uint64_t))(v17 + 8);
    v31(v20, v16);
    v30(v20, v22, v16);
    v66 = v6;
    v67 = v27;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v33 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    v64[0] = OpaqueTypeConformance2;
    v64[1] = v33;
    MEMORY[0x24264C55C](v29, v11, v64);
    v34 = v59;
    sub_23DFF8E74((uint64_t)v20, v16);
    v31(v20, v16);
    v31(v22, v16);
  }
  else
  {
    v58 = v6;
    v35 = v63;
    sub_23E1369CC();
    swift_getKeyPath();
    v76 = 1;
    v66 = v58;
    v67 = v35;
    v36 = swift_getOpaqueTypeConformance2();
    sub_23E136990();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v8);
    v37 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    v75[0] = v36;
    v75[1] = v37;
    v38 = MEMORY[0x24BDED308];
    MEMORY[0x24264C55C](MEMORY[0x24BDED308], v11, v75);
    v39 = v55;
    v40 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
    v41 = v56;
    v40(v56, v14, v11);
    v42 = *(void (**)(char *, uint64_t))(v39 + 8);
    v42(v14, v11);
    v40(v14, v41, v11);
    v43 = sub_23DF8DABC();
    v74[0] = v35;
    v74[1] = v43;
    v6 = v58;
    MEMORY[0x24264C55C](v38, v16, v74);
    v34 = v59;
    sub_23DFF8F38((uint64_t)v14, v16, v11);
    v42(v14, v11);
    v42(v41, v11);
  }
  v44 = sub_23DF8DABC();
  v45 = v63;
  v73[0] = v63;
  v73[1] = v44;
  v46 = MEMORY[0x24BDED308];
  v47 = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v16, v73);
  v66 = v6;
  v67 = v45;
  v48 = swift_getOpaqueTypeConformance2();
  v49 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
  v72[0] = v48;
  v72[1] = v49;
  v50 = MEMORY[0x24264C55C](v46, v11, v72);
  v71[0] = v47;
  v71[1] = v50;
  v51 = v61;
  MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v61, v71);
  v52 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v62, v34, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v34, v51);
}

uint64_t sub_23DFF8E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23DFF8E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_23E136474();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_23E136480();
}

uint64_t sub_23DFF8F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_23E136474();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_23E136480();
}

uint64_t sub_23DFF8FFC@<X0>(char a1@<W0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];

  v35 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E218);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256D20DE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E2E8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E220);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_256D1D230 != -1)
      swift_once();
    v19 = qword_256D34600;
    v20 = a3[3];
    v38 = a3[2];
    v39 = v20;
    v40[0] = a3[4];
    *(_OWORD *)((char *)v40 + 10) = *(__int128 *)((char *)a3 + 74);
    v21 = a3[1];
    v36 = *a3;
    v37 = v21;
    sub_23DF95FCC();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    sub_23DF89C1C(a2, (uint64_t)v15, &qword_256D1E218);
    v30 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    *v30 = v19;
    v30[1] = v23;
    v30[2] = v25;
    v30[3] = v27;
    v30[4] = v29;
    sub_23DF89C1C((uint64_t)v15, (uint64_t)v12, &qword_256D1E2E8);
    swift_storeEnumTagMultiPayload();
    sub_23DF99354();
    sub_23DF993D8();
    swift_retain();
    sub_23E136480();
    v31 = (uint64_t)v15;
    v32 = &qword_256D1E2E8;
  }
  else
  {
    sub_23DF89C1C(a2, (uint64_t)v9, &qword_256D1E218);
    sub_23DF89C1C((uint64_t)v9, (uint64_t)v12, &qword_256D1E218);
    swift_storeEnumTagMultiPayload();
    sub_23DF99354();
    sub_23DF993D8();
    sub_23E136480();
    v31 = (uint64_t)v9;
    v32 = &qword_256D1E218;
  }
  sub_23DF89C7C(v31, v32);
  sub_23DF89340((uint64_t)v18, v35, &qword_256D1E220);
  return sub_23DF98F1C((uint64_t)a3);
}

uint64_t View.fade(edges:)()
{
  sub_23E136FE4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20DA0);
  sub_23DFF9F14();
  return sub_23E136B34();
}

uint64_t View.alwaysEnabledOnTapGesture(disablingBlock:perform:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  void (*v49)(char *, uint64_t);
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  _QWORD v75[2];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[2];
  _QWORD v85[2];
  char v86;

  v66 = a3;
  v65 = a2;
  v71 = a6;
  v9 = sub_23E136498();
  v61 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a4;
  v77 = v10;
  v72 = v10;
  v70 = a5;
  v78 = a5;
  v79 = MEMORY[0x24BDEF530];
  v13 = MEMORY[0x24264C520](0, &v76, MEMORY[0x24BDF2538], 0);
  v62 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v60 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9A8);
  v16 = sub_23E135FF4();
  v63 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v64 = (char *)&v60 - v20;
  v73 = a4;
  v21 = sub_23E135FF4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v60 - v26;
  v69 = sub_23E13648C();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v67 = (char *)&v60 - v28;
  if ((a1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    LOBYTE(v76) = 1;
    v77 = v65;
    v78 = v66;
    v79 = KeyPath;
    v80 = 0;
    v30 = v73;
    v31 = v70;
    MEMORY[0x24264B440](&v76, v73, &type metadata for AlwaysEnabledTapGestureModifier, v70);
    swift_release();
    v32 = sub_23DF8DABC();
    v75[0] = v31;
    v75[1] = v32;
    v33 = MEMORY[0x24BDED308];
    MEMORY[0x24264C55C](MEMORY[0x24BDED308], v21, v75);
    v34 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v34(v27, v25, v21);
    v35 = *(void (**)(char *, uint64_t))(v22 + 8);
    v35(v25, v21);
    v34(v25, v27, v21);
    v76 = v30;
    v77 = v72;
    v78 = v31;
    v79 = MEMORY[0x24BDEF530];
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v37 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    v74[0] = OpaqueTypeConformance2;
    v74[1] = v37;
    MEMORY[0x24264C55C](v33, v16, v74);
    v38 = v67;
    sub_23DFF8E74((uint64_t)v25, v21);
    v35(v25, v21);
    v35(v27, v21);
  }
  else
  {
    sub_23E1365A0();
    v39 = v73;
    v40 = v72;
    v41 = v70;
    sub_23E1369C0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v40);
    swift_getKeyPath();
    v86 = 1;
    v76 = v39;
    v77 = v40;
    v78 = v41;
    v79 = MEMORY[0x24BDEF530];
    v42 = swift_getOpaqueTypeConformance2();
    sub_23E136990();
    swift_release();
    v43 = v13;
    v31 = v41;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v43);
    v44 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    v85[0] = v42;
    v85[1] = v44;
    v45 = MEMORY[0x24BDED308];
    MEMORY[0x24264C55C](MEMORY[0x24BDED308], v16, v85);
    v46 = v63;
    v47 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    v48 = v64;
    v47(v64, v19, v16);
    v49 = *(void (**)(char *, uint64_t))(v46 + 8);
    v49(v19, v16);
    v47(v19, v48, v16);
    v50 = sub_23DF8DABC();
    v84[0] = v31;
    v84[1] = v50;
    MEMORY[0x24264C55C](v45, v21, v84);
    v38 = v67;
    sub_23DFF8F38((uint64_t)v19, v21, v16);
    v49(v19, v16);
    v49(v48, v16);
  }
  v51 = sub_23DF8DABC();
  v83[0] = v31;
  v83[1] = v51;
  v52 = MEMORY[0x24BDED308];
  v53 = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v21, v83);
  v76 = v73;
  v77 = v72;
  v78 = v31;
  v79 = MEMORY[0x24BDEF530];
  v54 = swift_getOpaqueTypeConformance2();
  v55 = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
  v82[0] = v54;
  v82[1] = v55;
  v56 = MEMORY[0x24264C55C](v52, v16, v82);
  v81[0] = v53;
  v81[1] = v56;
  v57 = v69;
  MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v69, v81);
  v58 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v71, v38, v57);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v38, v57);
}

uint64_t sub_23DFF99B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E13621C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23DFF99E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E13621C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23DFF9A0C()
{
  return sub_23E136228();
}

uint64_t sub_23DFF9A30()
{
  return sub_23E136228();
}

uint64_t sub_23DFF9A54(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23DFF9A74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DFF9A98()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23DFF9AB8(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  sub_23DF89F20(v6, v7);
  v8 = sub_23DF9C59C(v6, v7);
  result = sub_23DF8A078(v6, v7);
  if ((v8 & 1) != 0 || (*(_BYTE *)a1 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, double, double))(a1 + 8))(result, a2, a3);
  return result;
}

uint64_t sub_23DFF9B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v21 = a1;
  v22 = a2;
  v3 = sub_23E136498();
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20DB0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  v11 = v2[1];
  v12 = v2[2];
  v23 = v2[3];
  v24 = *((_BYTE *)v2 + 32);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v11;
  v14 = v2[3];
  *(_QWORD *)(v13 + 32) = v12;
  *(_QWORD *)(v13 + 40) = v14;
  *(_BYTE *)(v13 + 48) = *((_BYTE *)v2 + 32);
  swift_retain();
  sub_23DFFA4E4((uint64_t)&v23);
  sub_23E1365A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20DB8);
  sub_23DF89B88(&qword_256D20DC0, &qword_256D20DB8, MEMORY[0x24BDEFB78]);
  sub_23E1369C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  KeyPath = swift_getKeyPath();
  v16 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22, v9, v6);
  v17 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20DC8) + 36);
  *(_QWORD *)v17 = KeyPath;
  *(_BYTE *)(v17 + 8) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

__n128 sub_23DFF9D20@<Q0>(uint64_t a1@<X8>, double a2@<D1>, double a3@<D3>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;
  uint64_t v13;
  _OWORD v14[10];
  __int128 v15;
  _BYTE v16[183];
  char v17;
  _QWORD v18[2];
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[23];
  __int128 v31;
  __n128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];

  if (a2 == 0.0 && a3 == 0.0)
  {
    sub_23DFC561C((uint64_t)v18);
  }
  else
  {
    v6 = sub_23E1362D0();
    sub_23DFFA510((uint64_t)v14, a2, a3);
    *(_OWORD *)&v16[71] = v14[4];
    *(_OWORD *)&v16[55] = v14[3];
    *(_OWORD *)&v16[119] = v14[7];
    *(_OWORD *)&v16[135] = v14[8];
    *(_OWORD *)&v16[151] = v14[9];
    *(_OWORD *)&v16[167] = v15;
    *(_OWORD *)&v16[87] = v14[5];
    *(_OWORD *)&v16[103] = v14[6];
    *(_OWORD *)&v16[7] = v14[0];
    *(_OWORD *)&v16[23] = v14[1];
    *(_OWORD *)&v16[39] = v14[2];
    v28 = *(_OWORD *)&v16[128];
    v29 = *(_OWORD *)&v16[144];
    *(_OWORD *)v30 = *(_OWORD *)&v16[160];
    v24 = *(_OWORD *)&v16[64];
    v25 = *(_OWORD *)&v16[80];
    v26 = *(_OWORD *)&v16[96];
    v27 = *(_OWORD *)&v16[112];
    v20 = *(_OWORD *)v16;
    v21 = *(_OWORD *)&v16[16];
    v22 = *(_OWORD *)&v16[32];
    v17 = 0;
    v18[0] = v6;
    v18[1] = 0;
    v19 = 0;
    *(_QWORD *)&v30[15] = *((_QWORD *)&v15 + 1);
    v23 = *(_OWORD *)&v16[48];
    sub_23DFC55D0((uint64_t)v18);
  }
  sub_23DF89340((uint64_t)v18, (uint64_t)&v13, &qword_256D1F588);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F590);
  sub_23DF89B88(&qword_256D1F598, &qword_256D1F590, MEMORY[0x24BDF4498]);
  sub_23DFC55D8();
  sub_23E136480();
  v7 = v42[0];
  *(_OWORD *)(a1 + 160) = v41;
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 185) = *(_OWORD *)((char *)v42 + 9);
  v8 = v38;
  *(_OWORD *)(a1 + 96) = v37;
  *(_OWORD *)(a1 + 112) = v8;
  v9 = v40;
  *(_OWORD *)(a1 + 128) = v39;
  *(_OWORD *)(a1 + 144) = v9;
  v10 = v34;
  *(_OWORD *)(a1 + 32) = v33;
  *(_OWORD *)(a1 + 48) = v10;
  v11 = v36;
  *(_OWORD *)(a1 + 64) = v35;
  *(_OWORD *)(a1 + 80) = v11;
  result = v32;
  *(_OWORD *)a1 = v31;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

double sub_23DFF9F08@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_23DFF9D20(a1, *(double *)(v1 + 24), *(double *)(v1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_23DFF9F14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D20DA8;
  if (!qword_256D20DA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20DA0);
    v2[0] = sub_23DF89B88(&qword_256D1F598, &qword_256D1F590, MEMORY[0x24BDF4498]);
    v2[1] = sub_23DFC55D8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20DA8);
  }
  return result;
}

uint64_t sub_23DFF9F98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_23E135FF4();
  v4 = sub_23E136498();
  v14 = v1;
  v15 = v4;
  v5 = MEMORY[0x24BDEF530];
  v16 = v2;
  v17 = MEMORY[0x24BDEF530];
  MEMORY[0x24264C520](255, &v14, MEMORY[0x24BDF2538], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9A8);
  v6 = sub_23E135FF4();
  v7 = sub_23E13648C();
  v13[0] = v2;
  v13[1] = sub_23DF8DABC();
  v8 = MEMORY[0x24BDED308];
  v9 = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v3, v13);
  v14 = v1;
  v15 = v4;
  v16 = v2;
  v17 = v5;
  v12[0] = swift_getOpaqueTypeConformance2();
  v12[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
  v11[0] = v9;
  v11[1] = MEMORY[0x24264C55C](v8, v6, v12);
  return MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v7, v11);
}

uint64_t sub_23DFFA0EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_23E135FF4();
  v12 = v1;
  v13 = v2;
  MEMORY[0x24264C520](255, &v12, MEMORY[0x24BDF2550], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1D9A8);
  v4 = sub_23E135FF4();
  v5 = sub_23E13648C();
  v11[0] = v2;
  v11[1] = sub_23DF8DABC();
  v6 = MEMORY[0x24BDED308];
  v7 = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v3, v11);
  v12 = v1;
  v13 = v2;
  v10[0] = swift_getOpaqueTypeConformance2();
  v10[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
  v9[0] = v7;
  v9[1] = MEMORY[0x24264C55C](v6, v4, v10);
  return MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v5, v9);
}

uint64_t sub_23DFFA21C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1F498);
  v2 = sub_23E135FF4();
  v4[0] = v1;
  v4[1] = sub_23DF89B88(&qword_256D1F490, &qword_256D1F498, MEMORY[0x24BDEF828]);
  return MEMORY[0x24264C55C](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for AlwaysEnabledTapGestureModifier(uint64_t a1)
{
  swift_release();
  return sub_23DF8A078(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for AlwaysEnabledTapGestureModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  swift_retain();
  sub_23DF89F20(v4, v5);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for AlwaysEnabledTapGestureModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_23DF89F20(v5, v2);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v2;
  sub_23DF8A078(v6, v7);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AlwaysEnabledTapGestureModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v4;
  sub_23DF8A078(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlwaysEnabledTapGestureModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlwaysEnabledTapGestureModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlwaysEnabledTapGestureModifier()
{
  return &type metadata for AlwaysEnabledTapGestureModifier;
}

uint64_t sub_23DFFA49C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23DFFA4AC()
{
  uint64_t v0;

  swift_release();
  sub_23DF8A078(*(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23DFFA4DC(double a1, double a2)
{
  uint64_t v2;

  return sub_23DFF9AB8(v2 + 16, a1, a2);
}

uint64_t sub_23DFFA4E4(uint64_t a1)
{
  sub_23DF89F20(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

void sub_23DFFA510(uint64_t a1@<X8>, double a2@<D1>, double a3@<D3>)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  unsigned __int8 v40;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;

  v6 = 0uLL;
  if (a2 != 0.0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20DD0);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_23E138410;
    sub_23E136C24();
    v23 = sub_23E136C60();
    swift_release();
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = sub_23E136C24();
    sub_23E137284();
    sub_23E13708C();
    sub_23E137098();
    MEMORY[0x24264B824](v22);
    sub_23E135F10();
    v7 = v29;
    sub_23E136FE4();
    sub_23E135E5C();
    v13 = v31;
    v12 = v30;
    v6 = 0uLL;
    v8 = v32;
    v9 = v33;
    v10 = v34;
    v11 = v35;
    v14 = v36;
    if (a3 == 0.0)
      goto LABEL_3;
LABEL_5:
    v27 = v13;
    v28 = v12;
    v26 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20DD0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23E138410;
    *(_QWORD *)(v24 + 32) = sub_23E136C24();
    sub_23E136C24();
    v25 = sub_23E136C60();
    swift_release();
    *(_QWORD *)(v24 + 40) = v25;
    sub_23E137284();
    sub_23E13708C();
    sub_23E137098();
    MEMORY[0x24264B824](v24);
    sub_23E135F10();
    v15 = v37;
    sub_23E136FE4();
    sub_23E135E5C();
    v20 = v39;
    v6 = v38;
    v14 = v26;
    v13 = v27;
    v12 = v28;
    v16 = v24;
    v17 = v40;
    v18 = v41;
    v19 = v42;
    v21 = v43;
    goto LABEL_6;
  }
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0uLL;
  v13 = 0uLL;
  v14 = 0uLL;
  if (a3 != 0.0)
    goto LABEL_5;
LABEL_3:
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0uLL;
  v21 = 0uLL;
LABEL_6:
  *(_QWORD *)a1 = v7;
  *(_OWORD *)(a1 + 8) = v12;
  *(_OWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v20;
  *(_QWORD *)(a1 + 128) = v16;
  *(_QWORD *)(a1 + 136) = v17;
  *(_QWORD *)(a1 + 144) = v18;
  *(_QWORD *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 160) = v21;
}

unint64_t sub_23DFFA7E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256D20DD8;
  if (!qword_256D20DD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20DC8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20DB8);
    v2[3] = sub_23E136498();
    v2[4] = sub_23DF89B88(&qword_256D20DC0, &qword_256D20DB8, MEMORY[0x24BDEFB78]);
    v2[5] = MEMORY[0x24BDEF530];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88((unint64_t *)&qword_256D1D9A0, &qword_256D1D9A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D20DD8);
  }
  return result;
}

ValueMetadata *_s12HeaterCoolerVMa_0()
{
  return &_s12HeaterCoolerVN_0;
}

uint64_t sub_23DFFA8DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(char *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t (*v12)(char *);
  char v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(char *))result;
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8];
    v12 = (uint64_t (*)(char *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_BYTE *)(a3 + v7 + 32);
      v13 = v11;
      result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v14 = v8;
        if ((result & 1) == 0)
        {
          result = sub_23E09E188(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v14;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_23E09E188(v9 > 1, v10 + 1, 1);
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_BYTE *)(v8 + v10 + 32) = v11;
        v6 = v12;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_23DFFAA1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  uint64_t v48;
  int v49;
  unsigned __int8 *v50;
  uint64_t v51;
  int v52;
  int *v53;
  int v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  char *v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;
  _QWORD v97[4];
  __int16 v98;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v92 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v94 = (uint64_t)&v85 - v5;
  *(_QWORD *)&v91 = type metadata accessor for AccessoryControlInfo(0);
  v93 = *(_QWORD *)(v91 - 8);
  v6 = MEMORY[0x24BDAC7A8](v91);
  v90 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v95 = (uint64_t)&v85 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8E8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E135B74();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F8);
  v16 = sub_23E1356DC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23E138410;
  v21 = v20 + v19;
  v22 = *(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104);
  v22(v21, *MEMORY[0x24BE4E368], v16);
  v22(v21 + v18, *MEMORY[0x24BE4E2F8], v16);
  v23 = sub_23E0E23A0(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  LOBYTE(v16) = HAPControlSolver.Source.has(characteristicKinds:)(v23);
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  v89 = v15;
  v24 = v95;
  sub_23DFF3ADC(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_23DF89C7C((uint64_t)v11, &qword_256D1F8E8);
    return MEMORY[0x24BEE4AF8];
  }
  v26 = v12;
  v27 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v89, v11, v12);
  v28 = type metadata accessor for HAPControlSolver.Source();
  v29 = sub_23E135AB4();
  v30 = sub_23E135A54();
  v88 = 4;
  v85 = v28;
  if ((v31 & 1) != 0)
  {
    v32 = v24;
  }
  else
  {
    v32 = v24;
    if (v29 != 2)
    {
      if ((v29 & 1) != 0)
      {
        if (v30 > 2)
          v33 = 4;
        else
          v33 = 3 - v30;
        v88 = v33;
      }
      else
      {
        v88 = 0;
      }
    }
  }
  v34 = sub_23DFFBDF4();
  sub_23E135B50();
  v36 = v35;
  sub_23E135B44();
  v38 = v37;
  sub_23E135B68();
  v40 = v39;
  v96 = v88;
  sub_23DFFB18C(&v96, (uint64_t)v97);
  v41 = v97[1];
  v43 = v97[2];
  v42 = v97[3];
  v44 = v98;
  v45 = *(_QWORD *)(v34 + 16);
  v87 = v27;
  v86 = v26;
  v95 = v34;
  if (v45)
  {
    v46 = (unsigned __int8 *)(v34 + 32);
    v47 = (unsigned __int8 *)(v34 + 32);
    v48 = v45;
    do
    {
      v49 = *v47++;
      if (v49 == 3)
      {
        v55 = v97[0];
        v56 = 3;
        v53 = (int *)v91;
        goto LABEL_29;
      }
      --v48;
    }
    while (v48);
    v50 = (unsigned __int8 *)(v34 + 32);
    v51 = v45;
    do
    {
      v52 = *v50++;
      if (v52 == 1)
      {
        v55 = v97[0];
        v56 = 2;
        v53 = (int *)v91;
        goto LABEL_29;
      }
      --v51;
    }
    while (v51);
    v53 = (int *)v91;
    while (1)
    {
      v54 = *v46++;
      if (v54 == 2)
        break;
      if (!--v45)
      {
        v55 = v97[0];
        v56 = 0;
        goto LABEL_29;
      }
    }
    v55 = v97[0];
    v56 = 1;
  }
  else
  {
    v55 = v97[0];
    v56 = 0;
    v53 = (int *)v91;
  }
LABEL_29:
  v57 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v32, a1, v57);
  v58 = v32 + v53[5];
  *(_QWORD *)v58 = v36;
  *(_QWORD *)(v58 + 8) = v38;
  *(_QWORD *)(v58 + 16) = v40;
  *(_BYTE *)(v58 + 24) = v56;
  *(_QWORD *)(v58 + 32) = 1;
  *(_BYTE *)(v58 + 40) = 1;
  *(_QWORD *)(v58 + 48) = v55;
  *(_QWORD *)(v58 + 56) = v41;
  *(_QWORD *)(v58 + 64) = v43;
  *(_QWORD *)(v58 + 72) = v42;
  *(_WORD *)(v58 + 80) = v44;
  type metadata accessor for AccessoryControlInfo.State(0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v59 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
  v60 = (v59 + 32) & ~v59;
  v61 = swift_allocObject();
  v91 = xmmword_23E138050;
  *(_OWORD *)(v61 + 16) = xmmword_23E138050;
  sub_23DF73E10(a1, v61 + v60, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v62 = (_QWORD *)(v32 + v53[7]);
  v63 = v53[9];
  *(_QWORD *)(v32 + v53[11]) = v61;
  *(_BYTE *)(v32 + v53[6]) = 0;
  *v62 = 0;
  v62[1] = 0;
  *(_WORD *)(v32 + v53[8]) = 1028;
  *(_BYTE *)(v32 + v63) = 12;
  *(_BYTE *)(v32 + v53[10]) = 1;
  v64 = v94;
  sub_23DFFB288(a1, v95, v88, v94);
  swift_bridgeObjectRelease();
  v65 = v92;
  sub_23DFFC264(v64, v92);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v93 + 48))(v65, 1, v53) == 1)
  {
    sub_23DF89C7C(v65, &qword_256D1F300);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v66 = type metadata accessor for AccessoryControlGroup(0);
    v67 = *(unsigned __int8 *)(*(_QWORD *)(v66 - 8) + 80);
    v68 = (v67 + 32) & ~v67;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v91;
    sub_23DF73E10(v32, v25 + v68, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v69 = (uint64_t *)(a1 + *(int *)(v85 + 28));
    v71 = *v69;
    v70 = v69[1];
    v72 = (_QWORD *)(v25 + v68 + *(int *)(v66 + 24));
    v73 = (_QWORD *)(v25 + v68 + *(int *)(v66 + 20));
    *v73 = v71;
    v73[1] = v70;
    *v72 = 0;
    v72[1] = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    v74 = v90;
    sub_23DF89384(v65, v90, type metadata accessor for AccessoryControlInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v75 = type metadata accessor for AccessoryControlGroup(0);
    v76 = *(unsigned __int8 *)(*(_QWORD *)(v75 - 8) + 80);
    v77 = (v76 + 32) & ~v76;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v91;
    v78 = v25 + v77 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    sub_23DF73E10(v32, v25 + v77, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E10(v74, v78, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v79 = (uint64_t *)(a1 + *(int *)(v85 + 28));
    v81 = *v79;
    v80 = v79[1];
    v82 = (_QWORD *)(v25 + v77 + *(int *)(v75 + 24));
    v83 = (_QWORD *)(v25 + v77 + *(int *)(v75 + 20));
    *v83 = v81;
    v83[1] = v80;
    *v82 = 0;
    v82[1] = 0;
    swift_bridgeObjectRetain();
    sub_23DFFC2AC(v74);
  }
  sub_23DF89C7C(v64, &qword_256D1F300);
  sub_23DFFC2AC(v32);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v86);
  return v25;
}

void sub_23DFFB18C(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  if ((_DWORD)v2 != 4)
  {
    type metadata accessor for HAPControlSolver.Source();
    sub_23E135A3C();
    sub_23E135A24();
    sub_23E135A18();
    __asm { BR              X9 }
  }
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_WORD *)(a2 + 32) = 255;
}

void sub_23DFFB224()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  v0[1] = v2;
  v0[2] = 0;
  v0[3] = 0;
  JUMPOUT(0x23DFFB1C0);
}

void sub_23DFFB234()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  if ((v3 & 1) == 0)
  {
    *v0 = v1;
    v0[1] = v4;
    v0[2] = v2;
    v0[3] = 0;
    JUMPOUT(0x23DFFB1C0);
  }
  JUMPOUT(0x23DFFB1B4);
}

void sub_23DFFB248(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  int v5;
  uint64_t v6;
  double v7;

  if (((v5 | a2) & 1) == 0)
  {
    v7 = v4;
    if (*(double *)&a1 < v4)
      v7 = *(double *)&a1;
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = v6;
    *(double *)(v2 + 16) = v7;
    *(double *)(v2 + 24) = *(double *)&a1;
    JUMPOUT(0x23DFFB1C0);
  }
  JUMPOUT(0x23DFFB1B4);
}

void sub_23DFFB274(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) == 0)
  {
    *v2 = v3;
    v2[1] = v4;
    v2[2] = a1;
    v2[3] = 0;
    JUMPOUT(0x23DFFB1C0);
  }
  JUMPOUT(0x23DFFB1B4);
}

uint64_t sub_23DFFB288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v42 = a3;
  v43 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v43);
  v47 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23E134C80();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E1356DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E1359AC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE4E2F8], v10);
  v41 = type metadata accessor for HAPControlSolver.Source();
  v48 = a1;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_23DF89C7C((uint64_t)v16, &qword_256D1D530);
    v21 = type metadata accessor for AccessoryControlInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a4, 1, 1, v21);
  }
  else
  {
    v39 = v17;
    v40 = a4;
    v37 = v20;
    v38 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v23 = *(_QWORD *)(a2 + 16);
    v24 = MEMORY[0x24BEE4AF8];
    if (v23)
    {
      v53 = MEMORY[0x24BEE4AF8];
      sub_23E09E16C(0, v23, 0);
      v51 = 0x800000023E144860;
      v52 = 0x800000023E144820;
      v49 = 0x800000023E144880;
      v50 = 0x800000023E144840;
      __asm { BR              X9 }
    }
    v25 = *(_BYTE *)(v48 + *(int *)(v41 + 40));
    v26 = v40;
    v27 = v37;
    if (v42 != 4)
      __asm { BR              X12 }
    v28 = v44;
    sub_23E135988();
    v29 = (uint64_t)v47;
    *v47 = v24;
    *(_BYTE *)(v29 + 8) = v25;
    *(_QWORD *)(v29 + 16) = 0;
    *(_BYTE *)(v29 + 24) = 1;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v30 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_23E138050;
    sub_23DF73E10(v48, v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
    v33 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v34 = (_QWORD *)(v26 + v33[7]);
    v35 = v33[9];
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v26, v28, v46);
    sub_23DF89384(v29, v26 + v33[5], type metadata accessor for AccessoryControlInfo.State);
    *(_QWORD *)(v26 + v33[11]) = v32;
    *(_BYTE *)(v26 + v33[6]) = 0;
    *v34 = 0;
    v34[1] = 0;
    *(_WORD *)(v26 + v33[8]) = 1028;
    *(_BYTE *)(v26 + v35) = 10;
    *(_BYTE *)(v26 + v33[10]) = 1;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v33 - 1) + 56))(v26, 0, 1, v33);
  }
}

uint64_t sub_23DFFB7C8@<X0>(__n128 *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v19[2];
  unsigned __int16 v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v19[0] = *a1;
  v19[1] = v9;
  v20 = a1[2].n128_u16[0];
  v10 = sub_23DFFB964(v19);
  v11 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v12 = sub_23E134C80();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v15 + v14, a2, v12);
  v16 = sub_23E0E212C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v10;
  a3[1] = 0;
  v17 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v17 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v17 + 28)) = v16;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 0, 1, v17);
}

unint64_t sub_23DFFB964(__n128 *a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v17;
  __n128 v18;
  char v19;

  sub_23DFCA204(a1 + 1, &v17);
  sub_23DFCA204(&v17, &v18);
  if (!v19)
    __asm { BR              X10 }
  if (v19 == 1)
  {
    v2 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_23E138410;
    v8 = v7 + v6;
    v9 = (_QWORD *)(v8 + *(int *)(v3 + 48));
    v10 = *MEMORY[0x24BE4E2A8];
    v11 = sub_23E1356DC();
    v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
    ((void (*)(unint64_t, uint64_t, uint64_t))v12)(v8, v10, v11);
    v13 = MEMORY[0x24BEE13C8];
    v9[3] = MEMORY[0x24BEE13C8];
    *v9 = v2.n128_u64[0];
    v14 = (_QWORD *)(v8 + v5 + *(int *)(v3 + 48));
    v12();
    v14[3] = v13;
    *v14 = v2.n128_u64[1];
    v15 = v7;
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  return sub_23E0ECA08(v15);
}

uint64_t sub_23DFFBBDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DFFC0DC(*a1);
  v10 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v11 = sub_23E134C80();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v14 + v13, a2, v11);
  v15 = sub_23E0E212C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v9;
  a3[1] = 0;
  v16 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v16 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v16 + 28)) = v15;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
}

void sub_23DFFBD70(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23DFFBDA4()
{
  return 1;
}

uint64_t sub_23DFFBDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[16];

  v0 = sub_23E1356DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23E135B2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE4E2F8], v0);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  v14 = sub_23E1359AC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
  {
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D530);
    v16 = sub_23E135B8C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
LABEL_4:
    sub_23DF89C7C((uint64_t)v9, &qword_256D1F8F0);
    return MEMORY[0x24BEE4AF8];
  }
  sub_23E1359A0();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v6, v14);
  v17 = sub_23E135B8C();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
    goto LABEL_4;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v18 + 88))(v9, v17) == *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(_BYTE *, uint64_t))(v18 + 96))(v9, v17);
    v21 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
    MEMORY[0x24BDAC7A8](v21);
    *(_QWORD *)&v22[-16] = v13;
    v19 = sub_23DFFA8DC((uint64_t)sub_23DFFC2E8, (uint64_t)&v22[-32], (uint64_t)&unk_250EC6638);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return v19;
  }
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v9, v17);
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23DFFC0DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  unint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  if (a1 == 100)
  {
    *(_OWORD *)(v6 + 16) = xmmword_23E138050;
    v7 = v6 + v5;
    v8 = v6 + v5 + *(int *)(v2 + 48);
    v9 = *MEMORY[0x24BE4E368];
    v10 = sub_23E1356DC();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v7, v9, v10);
    *(_QWORD *)(v8 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v8 = 0;
  }
  else
  {
    *(_OWORD *)(v6 + 16) = xmmword_23E138410;
    v11 = v6 + v5;
    v12 = (_QWORD *)(v11 + *(int *)(v2 + 48));
    v13 = *MEMORY[0x24BE4E2F8];
    v14 = sub_23E1356DC();
    v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 104);
    ((void (*)(unint64_t, uint64_t, uint64_t))v15)(v11, v13, v14);
    v12[3] = MEMORY[0x24BEE1768];
    *v12 = a1;
    v16 = v11 + v4 + *(int *)(v2 + 48);
    v15();
    *(_QWORD *)(v16 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v16 = 1;
  }
  return sub_23E0ECA08(v6);
}

uint64_t sub_23DFFC264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DFFC2AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryControlInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DFFC2E8(uint64_t a1)
{
  char v1;

  sub_23DFFBD70(a1);
  return v1 & 1;
}

uint64_t sub_23DFFC304@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  __int128 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t, uint64_t);
  __int128 v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  int v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a4;
  v37 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v28[-v12];
  v14 = *a1;
  v35 = a1[1];
  v36 = v14;
  v15 = *((_QWORD *)a1 + 4);
  v33 = *((_QWORD *)a1 + 5);
  v34 = v15;
  v16 = *((_WORD *)a1 + 24);
  v32 = *a2;
  v17 = *((_QWORD *)a2 + 2);
  v31 = *((unsigned __int8 *)a2 + 24);
  v30 = *((_QWORD *)a2 + 4);
  v29 = *((unsigned __int8 *)a2 + 40);
  *(_QWORD *)(a5 + 120) = swift_getKeyPath();
  *(_BYTE *)(a5 + 128) = 0;
  *(_QWORD *)(a5 + 136) = swift_getKeyPath();
  type metadata accessor for AccessoryControlsModel();
  sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
  *(_OWORD *)(a5 + 144) = 0u;
  *(_OWORD *)(a5 + 160) = 0u;
  *(_OWORD *)(a5 + 176) = 0u;
  *(_OWORD *)(a5 + 186) = 0u;
  *(_QWORD *)(a5 + 208) = sub_23E1360CC();
  *(_QWORD *)(a5 + 216) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE0);
  swift_allocObject();
  v39 = sub_23E0B4DB8(0x406F400000000000, 0);
  sub_23E136D8C();
  v19 = v41;
  *(_QWORD *)(a5 + 224) = v40;
  *(_QWORD *)(a5 + 232) = v19;
  v20 = type metadata accessor for ThermostatControlView();
  v21 = a5 + *(int *)(v20 + 48);
  v22 = _s9KnobStateOMa(0);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v13, 1, 1, v22);
  sub_23DF89C1C((uint64_t)v13, (uint64_t)v11, &qword_256D20ED0);
  sub_23E136D8C();
  sub_23DF89C7C((uint64_t)v13, &qword_256D20ED0);
  v24 = v35;
  *(_OWORD *)a5 = v36;
  *(_OWORD *)(a5 + 16) = v24;
  v25 = v33;
  *(_QWORD *)(a5 + 32) = v34;
  *(_QWORD *)(a5 + 40) = v25;
  *(_WORD *)(a5 + 48) = v16;
  *(_OWORD *)(a5 + 56) = v32;
  *(_QWORD *)(a5 + 72) = v17;
  *(_BYTE *)(a5 + 80) = v31;
  *(_QWORD *)(a5 + 88) = v30;
  *(_BYTE *)(a5 + 96) = v29;
  v23(v13, 1, 1, v22);
  sub_23DF89C7C(v21, &qword_256D20EE8);
  *(_QWORD *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8) + 28)) = 0;
  result = sub_23DF89340((uint64_t)v13, v21, &qword_256D20ED0);
  v27 = a5 + *(int *)(v20 + 52);
  *(_BYTE *)v27 = 0;
  *(_QWORD *)(v27 + 8) = 0;
  *(_QWORD *)(a5 + 104) = v37;
  *(_BYTE *)(a5 + 112) = v38;
  return result;
}

void (*sub_23DFFC5C4(_QWORD *a1))(char **a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  v3 = malloc(0xC0uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = v1[1];
  v3[17] = *v1;
  v3[18] = v5;
  v6 = v1[2];
  v7 = v1[3];
  v3[19] = v6;
  v3[20] = v7;
  v8 = v1[4];
  v9 = v1[5];
  v3[21] = v8;
  v3[22] = v9;
  v10 = *((_WORD *)v1 + 24);
  *((_WORD *)v3 + 25) = v10;
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  v3[4] = v8;
  v3[5] = v9;
  *((_WORD *)v3 + 24) = v10;
  swift_retain();
  swift_retain();
  v3[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  MEMORY[0x24264B734]();
  return sub_23DFFC660;
}

void sub_23DFFC660(char **a1)
{
  char *v1;
  __int16 v2;
  __int16 v3;
  uint64_t v4;
  __int128 v5;

  v1 = *a1;
  v2 = *((_WORD *)*a1 + 44);
  v3 = *((_WORD *)*a1 + 25);
  v4 = *((_QWORD *)*a1 + 18);
  *(_QWORD *)v1 = *((_QWORD *)*a1 + 17);
  *((_QWORD *)v1 + 1) = v4;
  v5 = *(_OWORD *)(v1 + 168);
  *((_OWORD *)v1 + 1) = *(_OWORD *)(v1 + 152);
  *((_OWORD *)v1 + 2) = v5;
  *((_WORD *)v1 + 24) = v3;
  *((_OWORD *)v1 + 6) = *(_OWORD *)(v1 + 56);
  *((_OWORD *)v1 + 7) = *(_OWORD *)(v1 + 72);
  *((_WORD *)v1 + 64) = v2;
  sub_23E136E70();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_23DFFC6D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int16 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  __int16 v63;
  char v64;
  __int128 v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t OpaqueTypeConformance2;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  __int16 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int8 v119;
  char v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (**v145)();
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  __int128 v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  _OWORD v203[2];
  __int16 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;
  unsigned __int8 v214;
  __int128 v215;
  __int128 v216;
  uint64_t v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int16 v222;

  v191 = a1;
  v2 = sub_23E13660C();
  v189 = *(_QWORD *)(v2 - 8);
  v190 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v188 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  MEMORY[0x24BDAC7A8](v178);
  v173 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = type metadata accessor for ThermostatControlView();
  v5 = *(_QWORD *)(v198 - 8);
  v202 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v198);
  v7 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)&v195 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FB0);
  MEMORY[0x24BDAC7A8](v196);
  v194 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FB8);
  v161 = *(_QWORD *)(v11 - 8);
  v162 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v160 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FC0);
  v163 = *(_QWORD *)(v13 - 8);
  v164 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v197 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FC8);
  v168 = *(_QWORD *)(v15 - 8);
  v169 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v165 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FD0);
  v174 = *(_QWORD *)(v17 - 8);
  v175 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v172 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FD8);
  MEMORY[0x24BDAC7A8](v167);
  v171 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FE0);
  MEMORY[0x24BDAC7A8](v166);
  v176 = (uint64_t)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FE8);
  MEMORY[0x24BDAC7A8](v170);
  v177 = (uint64_t)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FF0);
  MEMORY[0x24BDAC7A8](v181);
  v179 = (uint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20FF8);
  v183 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v182 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21000);
  MEMORY[0x24BDAC7A8](v24);
  v187 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21008);
  MEMORY[0x24BDAC7A8](v184);
  v186 = (uint64_t)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = _s9KnobStateOMa(0);
  v27 = *(_QWORD *)(v199 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  v29 = MEMORY[0x24BDAC7A8](v199);
  v193 = (uint64_t)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v147 - v30;
  v32 = *(_QWORD *)(v1 + 8);
  v33 = *(_WORD *)(v1 + 48);
  *(_QWORD *)&v209 = *(_QWORD *)v1;
  *((_QWORD *)&v209 + 1) = v32;
  v34 = *(_OWORD *)(v1 + 16);
  v35 = *(_OWORD *)(v1 + 32);
  v192 = v1;
  v210 = v34;
  v211 = v35;
  LOWORD(v212) = v33;
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  MEMORY[0x24264B734](&v218);
  v209 = v218;
  v210 = v219;
  LOWORD(v211) = v220;
  sub_23DFFD7C4((uint64_t)&v209, (uint64_t)v31);
  sub_23DF73E10(v1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v180 = v31;
  sub_23DF73E10((uint64_t)v31, (uint64_t)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), _s9KnobStateOMa);
  sub_23E1372C0();
  v36 = sub_23E1372B4();
  v148 = *(unsigned __int8 *)(v5 + 80);
  v37 = (v148 + 32) & ~v148;
  v38 = v148 | 7;
  v39 = (v37 + v202 + *(unsigned __int8 *)(v27 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v40 = swift_allocObject();
  v41 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v40 + 16) = v36;
  *(_QWORD *)(v40 + 24) = v41;
  sub_23DF89384((uint64_t)v7, v40 + v37, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v42 = v192;
  sub_23DF89384(v193, v40 + v39, _s9KnobStateOMa);
  sub_23DF73E10(v42, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v43 = sub_23E1372B4();
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v43;
  *(_QWORD *)(v44 + 24) = MEMORY[0x24BEE6930];
  sub_23DF89384((uint64_t)v7, v44 + v37, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  sub_23E136E94();
  sub_23DFFE2B0((uint64_t)&v209);
  v45 = v209;
  v157 = BYTE8(v209);
  v156 = v210;
  v155 = BYTE8(v210);
  v154 = v211;
  v153 = BYTE8(v211);
  v152 = v212;
  v151 = BYTE8(v212);
  v150 = v213;
  v149 = v214;
  v46 = v42 + *(int *)(v198 + 52);
  v47 = *(_BYTE *)v46;
  v158 = v46;
  v48 = *(_QWORD *)(v46 + 8);
  LOBYTE(v203[0]) = v47;
  *((_QWORD *)&v203[0] + 1) = v48;
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136DB0();
  v147 = *((_QWORD *)&v218 + 1);
  v49 = v218;
  v50 = v219;
  sub_23DF73E10(v42, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v51 = (v148 + 16) & ~v148;
  v202 += v51;
  v200 = v38;
  v52 = swift_allocObject();
  v199 = v51;
  v201 = v7;
  sub_23DF89384((uint64_t)v7, v52 + v51, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v53 = (int *)type metadata accessor for RingControlView(0);
  v54 = (uint64_t)v194;
  v55 = &v194[v53[8]];
  if (qword_256D1D468 != -1)
    swift_once();
  sub_23E135DCC();
  v56 = v216;
  *(_OWORD *)v55 = v215;
  *((_OWORD *)v55 + 1) = v56;
  *((_QWORD *)v55 + 4) = v217;
  sub_23DF89340(v195, v54, &qword_256D1F0F8);
  v57 = v54 + v53[5];
  *(_QWORD *)v57 = v45;
  *(_BYTE *)(v57 + 8) = v157;
  *(_QWORD *)(v57 + 16) = v156;
  *(_BYTE *)(v57 + 24) = v155;
  *(_QWORD *)(v57 + 32) = v154;
  *(_BYTE *)(v57 + 40) = v153;
  *(_QWORD *)(v57 + 48) = v152;
  *(_BYTE *)(v57 + 56) = v151;
  *(_QWORD *)(v57 + 64) = v150;
  *(_BYTE *)(v57 + 72) = v149;
  v58 = v54 + v53[6];
  v59 = v147;
  *(_QWORD *)v58 = v49;
  *(_QWORD *)(v58 + 8) = v59;
  *(_BYTE *)(v58 + 16) = v50;
  v60 = (_QWORD *)(v54 + v53[7]);
  *v60 = sub_23E003E54;
  v60[1] = v52;
  v61 = *(_OWORD *)(v42 + 152);
  v62 = *(_OWORD *)(v42 + 184);
  v211 = *(_OWORD *)(v42 + 168);
  v212 = v62;
  LOWORD(v213) = *(_WORD *)(v42 + 200);
  v209 = *(_OWORD *)(v42 + 136);
  v210 = v61;
  sub_23DF98EC8((uint64_t)&v209, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v218);
  sub_23DF98EC8((uint64_t)&v209, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v63 = v218;
  v64 = BYTE8(v218);
  v195 = v219;
  v65 = v220;
  v66 = v221;
  v67 = BYTE1(v221);
  v68 = *((_QWORD *)&v221 + 1);
  v69 = v222;
  v70 = v54 + *(int *)(v196 + 36);
  v71 = _s22StatusTextViewModifierVMa(0);
  sub_23E08A7FC((uint64_t *)(v70 + *(int *)(v71 + 20)));
  *(_WORD *)v70 = v63;
  *(_BYTE *)(v70 + 8) = v64;
  *(_OWORD *)(v70 + 16) = v195;
  *(_OWORD *)(v70 + 32) = v65;
  *(_BYTE *)(v70 + 48) = v66;
  *(_BYTE *)(v70 + 49) = v67;
  *(_QWORD *)(v70 + 56) = v68;
  *(_BYTE *)(v70 + 64) = v69;
  v72 = v158;
  v73 = *(_QWORD *)(v158 + 8);
  LOBYTE(v218) = *(_BYTE *)v158;
  *((_QWORD *)&v218 + 1) = v73;
  sub_23E136D98();
  LOBYTE(v218) = v203[0];
  v74 = (uint64_t)v201;
  sub_23DF73E10(v42, (uint64_t)v201, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v75 = swift_allocObject();
  v76 = v199;
  sub_23DF89384(v74, v75 + v199, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v77 = sub_23E0041CC();
  v78 = v160;
  v79 = v196;
  v80 = (uint64_t)v194;
  sub_23E136B7C();
  swift_release();
  sub_23DF89C7C(v80, &qword_256D20FB0);
  v81 = *(_QWORD *)(v72 + 8);
  LOBYTE(v218) = *(_BYTE *)v72;
  *((_QWORD *)&v218 + 1) = v81;
  sub_23E136D98();
  sub_23DF73E10(v42, v74, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v82 = swift_allocObject();
  sub_23DF89384(v74, v82 + v76, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  *(_QWORD *)&v218 = v79;
  *((_QWORD *)&v218 + 1) = MEMORY[0x24BEE1328];
  *(_QWORD *)&v219 = v77;
  *((_QWORD *)&v219 + 1) = MEMORY[0x24BEE1340];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v84 = v162;
  sub_23E136B88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v78, v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  v85 = (uint64_t)v173;
  sub_23E136D98();
  v86 = (uint64_t)v201;
  sub_23DF73E10(v42, (uint64_t)v201, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v87 = swift_allocObject();
  v88 = v199;
  sub_23DF89384(v86, v87 + v199, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  *(_QWORD *)&v218 = v84;
  *((_QWORD *)&v218 + 1) = MEMORY[0x24BEE1328];
  *(_QWORD *)&v219 = OpaqueTypeConformance2;
  *((_QWORD *)&v219 + 1) = MEMORY[0x24BEE1340];
  v198 = swift_getOpaqueTypeConformance2();
  v89 = sub_23E0042A4();
  v90 = v164;
  v91 = v165;
  v92 = v178;
  v93 = v197;
  sub_23E136B88();
  swift_release();
  sub_23DF89C7C(v85, &qword_256D20ED0);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v93, v90);
  v94 = *(_QWORD *)(v42 + 8);
  v95 = *(_WORD *)(v42 + 48);
  *(_QWORD *)&v218 = *(_QWORD *)v42;
  *((_QWORD *)&v218 + 1) = v94;
  v96 = *(_OWORD *)(v42 + 32);
  v219 = *(_OWORD *)(v42 + 16);
  v220 = v96;
  LOWORD(v221) = v95;
  MEMORY[0x24264B734](v203, v159);
  v218 = v203[0];
  v219 = v203[1];
  LOWORD(v220) = v204;
  v97 = (uint64_t)v201;
  sub_23DF73E10(v42, (uint64_t)v201, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v98 = swift_allocObject();
  sub_23DF89384(v97, v98 + v88, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECB0);
  v205 = v90;
  v206 = v92;
  v207 = v198;
  v208 = v89;
  swift_getOpaqueTypeConformance2();
  sub_23E004370();
  v99 = v172;
  v100 = v169;
  sub_23E136B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v168 + 8))(v91, v100);
  v101 = *(_QWORD *)(v42 + 120);
  LOBYTE(v85) = *(_BYTE *)(v42 + 128);
  sub_23DF89F20(v101, v85);
  LOBYTE(v100) = sub_23DF9C59C(v101, v85);
  sub_23DF8A078(v101, v85);
  if ((v100 & 1) != 0)
    v102 = 1.0;
  else
    v102 = 0.5;
  v104 = v174;
  v103 = v175;
  v105 = (uint64_t)v171;
  (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v171, v99, v175);
  *(double *)(v105 + *(int *)(v167 + 36)) = v102;
  (*(void (**)(char *, uint64_t))(v104 + 8))(v99, v103);
  LOBYTE(v104) = *(_BYTE *)(v42 + 112);
  v106 = *(_QWORD *)(v42 + 104);
  v107 = v176;
  sub_23DF89C1C(v105, v176, &qword_256D20FD8);
  v108 = v107 + *(int *)(v166 + 36);
  *(_BYTE *)v108 = v104;
  *(_QWORD *)(v108 + 8) = v106;
  sub_23DF89C7C(v105, &qword_256D20FD8);
  LOBYTE(v103) = sub_23E136744();
  sub_23E135D00();
  v110 = v109;
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v117 = v177;
  sub_23DF89C1C(v107, v177, &qword_256D20FE0);
  v118 = v117 + *(int *)(v170 + 36);
  *(_BYTE *)v118 = v103;
  *(_QWORD *)(v118 + 8) = v110;
  *(_QWORD *)(v118 + 16) = v112;
  *(_QWORD *)(v118 + 24) = v114;
  *(_QWORD *)(v118 + 32) = v116;
  *(_BYTE *)(v118 + 40) = 0;
  sub_23DF89C7C(v107, &qword_256D20FE0);
  LOBYTE(v107) = sub_23E136750();
  v119 = sub_23E136768();
  v120 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v107)
    v120 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v119)
    v120 = sub_23E13675C();
  v121 = *(_OWORD *)(v42 + 184);
  v220 = *(_OWORD *)(v42 + 168);
  v221 = v121;
  v222 = *(_WORD *)(v42 + 200);
  v122 = *(_OWORD *)(v42 + 152);
  v218 = *(_OWORD *)(v42 + 136);
  v219 = v122;
  sub_23DF98EC8((uint64_t)&v218, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v203);
  sub_23DF98EC8((uint64_t)&v218, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  sub_23E135D00();
  v124 = v123;
  v126 = v125;
  v128 = v127;
  v130 = v129;
  v131 = v179;
  sub_23DF89C1C(v117, v179, &qword_256D20FE8);
  v132 = v181;
  v133 = v131 + *(int *)(v181 + 36);
  *(_BYTE *)v133 = v120;
  *(_QWORD *)(v133 + 8) = v124;
  *(_QWORD *)(v133 + 16) = v126;
  *(_QWORD *)(v133 + 24) = v128;
  *(_QWORD *)(v133 + 32) = v130;
  *(_BYTE *)(v133 + 40) = 0;
  sub_23DF89C7C(v117, &qword_256D20FE8);
  v134 = v188;
  sub_23E1365F4();
  v135 = sub_23DF8E904(&qword_256D21050, &qword_256D20FF0, sub_23E004418, MEMORY[0x24BDECC60]);
  v136 = v182;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v189 + 8))(v134, v190);
  sub_23DF89C7C(v131, &qword_256D20FF0);
  v137 = v42;
  v138 = (uint64_t)v201;
  sub_23DF73E10(v137, (uint64_t)v201, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v139 = swift_allocObject();
  v140 = v199;
  sub_23DF89384(v138, v139 + v199, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  *(_QWORD *)&v203[0] = v132;
  *((_QWORD *)&v203[0] + 1) = v135;
  swift_getOpaqueTypeConformance2();
  v141 = (uint64_t)v187;
  v142 = v185;
  sub_23E136B10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v183 + 8))(v136, v142);
  sub_23DF73E10(v192, v138, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v143 = swift_allocObject();
  sub_23DF89384(v138, v143 + v140, (uint64_t (*)(_QWORD))type metadata accessor for ThermostatControlView);
  v144 = v186;
  sub_23DF89C1C(v141, v186, &qword_256D21000);
  v145 = (uint64_t (**)())(v144 + *(int *)(v184 + 36));
  *v145 = sub_23E0049AC;
  v145[1] = (uint64_t (*)())v143;
  v145[2] = 0;
  v145[3] = 0;
  sub_23DF89C7C(v141, &qword_256D21000);
  sub_23DF73E54((uint64_t)v180, _s9KnobStateOMa);
  return sub_23DF89340(v144, v191, &qword_256D21008);
}

uint64_t sub_23DFFD7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unsigned int v52;
  double v54;
  double v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  void *v65;
  double v66;
  double v67;
  double v68;
  BOOL v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  double v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double v114;
  double v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  double v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  _BYTE *v145;
  char *v146;
  char *v147;
  _BYTE *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  int *v154;
  uint64_t v155;

  v4 = _s4KnobV2IDOMa(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v143 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v147 = (char *)&v135 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v146 = (char *)&v135 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v153 = (char *)&v135 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v149 = (char *)&v135 - v13;
  v154 = (int *)_s4KnobVMa(0);
  v14 = MEMORY[0x24BDAC7A8](v154);
  v141 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v142 = (uint64_t)&v135 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v144 = (char *)&v135 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v148 = (char *)&v135 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v135 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v145 = (char *)&v135 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v150 = (char *)&v135 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v152 = (uint64_t)&v135 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v135 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v151 = (uint64_t)&v135 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v135 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v135 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&v135 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)&v135 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)&v135 - v50;
  v52 = *(unsigned __int16 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32) == 0xFF)
  {
    _s9KnobStateOMa(0);
    return swift_storeEnumTagMultiPayload();
  }
  v137 = v49;
  v139 = a2;
  v54 = *(double *)(a1 + 16);
  v55 = *(double *)(a1 + 24);
  v56 = _s4KnobV10IconConfigVMa(0);
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56);
  v140 = v56;
  v138 = v57;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v51, 1, 1);
  if (!(_BYTE)v52)
  {
    if (v52 >> 8 == 1)
    {
      v109 = (uint64_t)v51;
      v110 = (v54 + 0.0 - *(double *)(v155 + 56)) / (*(double *)(v155 + 64) - *(double *)(v155 + 56));
      v111 = sub_23E136C30();
      sub_23DF89C1C((uint64_t)v51, (uint64_t)v41, &qword_256D20EF0);
      v112 = (uint64_t)v147;
      sub_23E134C74();
      v113 = sub_23E134C80();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 0, 2, v113);
      if (v110 > 0.0)
        v114 = v110;
      else
        v114 = 0.0;
      if (v114 <= 1.0)
        v115 = v114;
      else
        v115 = 1.0;
      v116 = v154;
      v117 = v154[7];
      v118 = v154[8];
      v119 = (uint64_t)v144;
      v120 = (uint64_t)&v144[v154[9]];
      v138(v120, 1, 1, v140);
      *(double *)(v119 + v116[5]) = v115;
      *(_QWORD *)(v119 + v116[6]) = v111;
      sub_23DF89384(v112, v119, _s4KnobV2IDOMa);
      *(_BYTE *)(v119 + v117) = 0;
      *(_BYTE *)(v119 + v118) = 0;
      sub_23E004AC0((uint64_t)v41, v120);
      v105 = v148;
      sub_23DF89384(v119, (uint64_t)v148, _s4KnobVMa);
      v121 = sub_23DFFF3E4(&qword_256D1D320);
      sub_23DF89C7C(v109, &qword_256D20EF0);
      v122 = v116[6];
      swift_release();
      *(_QWORD *)&v105[v122] = v121;
      v108 = v116[7];
    }
    else
    {
      if (v52 >> 8 != 2)
      {
        v123 = (v54 - *(double *)(v155 + 56)) / (*(double *)(v155 + 64) - *(double *)(v155 + 56));
        v124 = sub_23E136C30();
        sub_23DF89C1C((uint64_t)v51, (uint64_t)v38, &qword_256D20EF0);
        v125 = (uint64_t)v143;
        sub_23E134C74();
        v126 = sub_23E134C80();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v125, 0, 2, v126);
        v127 = 0.0;
        if (v123 > 0.0)
          v127 = v123;
        if (v127 <= 1.0)
          v128 = v127;
        else
          v128 = 1.0;
        v129 = v154;
        v130 = v154[7];
        v131 = v154[8];
        v132 = (uint64_t)v141;
        v133 = (uint64_t)&v141[v154[9]];
        v138(v133, 1, 1, v140);
        *(double *)(v132 + v129[5]) = v128;
        *(_QWORD *)(v132 + v129[6]) = v124;
        sub_23DF89384(v125, v132, _s4KnobV2IDOMa);
        *(_BYTE *)(v132 + v130) = 0;
        *(_BYTE *)(v132 + v131) = 0;
        sub_23E004AC0((uint64_t)v38, v133);
        v134 = v142;
        sub_23DF89384(v132, v142, _s4KnobVMa);
        sub_23DF89C7C((uint64_t)v51, &qword_256D20EF0);
        sub_23DF89384(v134, v139, _s4KnobVMa);
        _s9KnobStateOMa(0);
        return swift_storeEnumTagMultiPayload();
      }
      v94 = (uint64_t)v51;
      v95 = (v54 - *(double *)(v155 + 56)) / (*(double *)(v155 + 64) - *(double *)(v155 + 56));
      v96 = sub_23E136C30();
      sub_23DF89C1C((uint64_t)v51, (uint64_t)v44, &qword_256D20EF0);
      v97 = (uint64_t)v146;
      sub_23E134C74();
      v98 = sub_23E134C80();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v97, 0, 2, v98);
      v99 = 0.0;
      if (v95 > 0.0)
        v99 = v95;
      if (v99 <= 1.0)
        v100 = v99;
      else
        v100 = 1.0;
      v101 = v154;
      v102 = v154[7];
      v103 = v154[8];
      v104 = (uint64_t)&v24[v154[9]];
      v138(v104, 1, 1, v140);
      *(double *)&v24[v101[5]] = v100;
      *(_QWORD *)&v24[v101[6]] = v96;
      sub_23DF89384(v97, (uint64_t)v24, _s4KnobV2IDOMa);
      v24[v102] = 0;
      v24[v103] = 0;
      sub_23E004AC0((uint64_t)v44, v104);
      v105 = v145;
      sub_23DF89384((uint64_t)v24, (uint64_t)v145, _s4KnobVMa);
      v106 = sub_23DFFF3E4(&qword_256D1D318);
      sub_23DF89C7C(v94, &qword_256D20EF0);
      v107 = v101[6];
      swift_release();
      *(_QWORD *)&v105[v107] = v106;
      v108 = v101[8];
    }
    v105[v108] = 1;
    sub_23DF73E10((uint64_t)v105, v139, _s4KnobVMa);
    _s9KnobStateOMa(0);
    swift_storeEnumTagMultiPayload();
    return sub_23DF73E54((uint64_t)v105, _s4KnobVMa);
  }
  if (v52 == 1)
  {
    v58 = (uint64_t)v51;
    v59 = v155;
    v60 = *(double *)(v155 + 56);
    v61 = *(double *)(v155 + 64);
    v62 = v61 - v60;
    v63 = (v54 - v60) / (v61 - v60);
    v64 = (v55 + 0.0 - v60) / (v61 - v60);
    if (v64 < v63)
    {
      v65 = (void *)sub_23E1355B0();
      sub_23E137374();
      v67 = v66;

      v68 = *(double *)(v59 + 72);
      v69 = v67 < v68;
      v70 = v67 * ceil(v68 / v67);
      if (!v69)
        v70 = v67;
      v63 = v64 - v70 / v62;
    }
    v147 = (char *)sub_23DFFF3E4(&qword_256D1D320);
    v136 = v58;
    sub_23DF89C1C(v58, (uint64_t)v48, &qword_256D20EF0);
    v71 = (uint64_t)v149;
    sub_23E134C74();
    v72 = sub_23E134C80();
    v148 = *(_BYTE **)(*(_QWORD *)(v72 - 8) + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v148)(v71, 0, 2, v72);
    if (v63 > 0.0)
      v73 = v63;
    else
      v73 = 0.0;
    v74 = 1.0;
    if (v73 <= 1.0)
      v75 = v73;
    else
      v75 = 1.0;
    v76 = v154;
    v78 = v154[7];
    v77 = v154[8];
    v79 = (uint64_t)&v33[v154[9]];
    v80 = v138;
    v138(v79, 1, 1, v140);
    *(double *)&v33[v76[5]] = v75;
    *(_QWORD *)&v33[v76[6]] = v147;
    sub_23DF89384(v71, (uint64_t)v33, _s4KnobV2IDOMa);
    v33[v78] = 0;
    v33[v77] = 0;
    sub_23E004AC0((uint64_t)v48, v79);
    v81 = v151;
    sub_23DF89384((uint64_t)v33, v151, _s4KnobVMa);
    v82 = sub_23DFFF3E4(&qword_256D1D318);
    v83 = v58;
    v84 = v137;
    sub_23DF89C1C(v83, v137, &qword_256D20EF0);
    v85 = (uint64_t)v153;
    sub_23E134C74();
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v148)(v85, 0, 2, v72);
    if (v64 > 0.0)
      v86 = v64;
    else
      v86 = 0.0;
    if (v86 <= 1.0)
      v74 = v86;
    v87 = v76[7];
    v88 = v76[8];
    v89 = (uint64_t)v150;
    v90 = (uint64_t)&v150[v76[9]];
    v80(v90, 1, 1, v140);
    *(double *)(v89 + v76[5]) = v74;
    *(_QWORD *)(v89 + v76[6]) = v82;
    sub_23DF89384(v85, v89, _s4KnobV2IDOMa);
    *(_BYTE *)(v89 + v87) = 0;
    *(_BYTE *)(v89 + v88) = 0;
    sub_23E004AC0(v84, v90);
    v91 = v152;
    sub_23DF89384(v89, v152, _s4KnobVMa);
    sub_23DF89C7C(v136, &qword_256D20EF0);
    *(_BYTE *)(v81 + v76[7]) = 1;
    *(_BYTE *)(v91 + v76[8]) = 1;
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100);
    v93 = v139 + *(int *)(v92 + 48);
    sub_23DF89384(v81, v139, _s4KnobVMa);
    sub_23DF89384(v91, v93, _s4KnobVMa);
    _s9KnobStateOMa(0);
  }
  else
  {
    sub_23DF89C7C((uint64_t)v51, &qword_256D20EF0);
    _s9KnobStateOMa(0);
  }
  return swift_storeEnumTagMultiPayload();
}

double sub_23DFFE2B0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double result;
  _QWORD v22[4];
  unsigned __int8 v23;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_BYTE *)(v2 + 128);
  sub_23DF89F20(v4, v5);
  v6 = sub_23DF9C59C(v4, v5);
  sub_23DF8A078(v4, v5);
  if ((v6 & 1) != 0
    && (v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010), MEMORY[0x24264B734](v22, v7), v23 ^ 0xFF))
  {
    v8 = *(_BYTE *)(v2 + 80);
  }
  else
  {
    v8 = 0;
  }
  v9 = sub_23DFFEC20();
  v11 = v10;
  v12 = (void *)sub_23E1355B0();
  sub_23E137374();
  v14 = v13;

  v15 = *(double *)(v2 + 72);
  if (v14 < v15)
    v14 = v14 * ceil(v15 / v14);
  v17 = *(double *)(v2 + 56);
  v16 = *(double *)(v2 + 64);
  v18 = (void *)sub_23E1355B0();
  sub_23E137374();
  v20 = v19;

  if (v20 < v15)
    v20 = v20 * ceil(v15 / v20);
  *(_QWORD *)a1 = 0x4012D97C7F3321D2;
  *(_BYTE *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 24) = v11;
  *(double *)(a1 + 32) = v14 / (v16 - v17);
  *(_BYTE *)(a1 + 40) = 0;
  result = v20 / (v16 - v17);
  *(double *)(a1 + 48) = result;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 1;
  return result;
}

_QWORD *sub_23DFFE42C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int16 v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *result;
  double v13;
  double v14;
  int v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  void (*v24)(char **);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  double v43;
  double v44;
  uint64_t v45;
  void (*v46)(char **);
  uint64_t v47;
  __int128 v48;
  _QWORD v49[2];
  __int128 v50;
  __int128 v51;
  __int16 v52;
  _QWORD v53[4];
  __int16 v54;

  v2 = v1;
  v4 = sub_23E134CBC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v49[-2] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v9 = *(_WORD *)(v1 + 48);
  v49[0] = *(_QWORD *)v1;
  v49[1] = v8;
  v10 = *(_OWORD *)(v1 + 32);
  v50 = *(_OWORD *)(v1 + 16);
  v51 = v10;
  v52 = v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  result = MEMORY[0x24264B734](v53, v11);
  if ((_BYTE)v54 != 0xFF)
  {
    v13 = *(double *)&v53[2];
    v14 = *(double *)&v53[3];
    v15 = v54;
    v16 = (void *)sub_23E1355B0();
    sub_23E137374();
    v18 = v17;

    v19 = *(double *)(v2 + 72);
    if (v18 < v19)
      v18 = v18 * ceil(v19 / v18);
    if ((a1 & 1) != 0)
    {
      v42 = sub_23E137614();
      result = (_QWORD *)swift_bridgeObjectRelease();
      v43 = -1.0;
      if ((v42 & 1) != 0)
        v43 = 1.0;
      v20 = v18 * v43;
      if (v15)
        goto LABEL_6;
    }
    else
    {
      result = (_QWORD *)swift_bridgeObjectRelease();
      v20 = v18 * 1.0;
      if (v15)
      {
LABEL_6:
        if (v15 != 1)
          return result;
        v21 = sub_23DFFF354(v14 + v20);
        v22 = sub_23DFFF354(v20 + v13);
        v24 = sub_23DFFC5C4(v49);
        if (*(unsigned __int8 *)(v23 + 32) != 0xFF)
        {
          *(double *)(v23 + 16) = v22;
          *(double *)(v23 + 24) = v21;
          *(_BYTE *)(v23 + 32) = 1;
        }
        ((void (*)(_QWORD *, _QWORD))v24)(v49, 0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD78);
        v25 = swift_allocObject();
        v48 = xmmword_23E138410;
        *(_OWORD *)(v25 + 16) = xmmword_23E138410;
        *(_QWORD *)(v25 + 32) = sub_23E1355C8();
        *(_QWORD *)(v25 + 40) = v26;
        *(_QWORD *)(v25 + 48) = sub_23E1355C8();
        *(_QWORD *)(v25 + 56) = v27;
        v49[0] = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD80);
        sub_23E0049D8();
        v28 = sub_23E137134();
        v30 = v29;
        swift_bridgeObjectRelease();
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v48;
        *(_QWORD *)(v31 + 32) = sub_23E1355C8();
        *(_QWORD *)(v31 + 40) = v32;
        *(_QWORD *)(v31 + 48) = sub_23E1355C8();
        *(_QWORD *)(v31 + 56) = v33;
        v49[0] = v31;
        v34 = sub_23E137134();
        v36 = v35;
        swift_bridgeObjectRelease();
        v37 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
        v38 = objc_msgSend(v37, sel_userInterfaceLayoutDirection);

        if (v38)
        {
          v39 = v36;
        }
        else
        {
          v34 = v28;
          v39 = v30;
        }
        swift_bridgeObjectRelease();
        v40 = v34;
        v41 = v39;
        goto LABEL_19;
      }
    }
    v44 = v13;
    v46 = sub_23DFFC5C4(v49);
    if (*(unsigned __int8 *)(v45 + 32) != 0xFF)
    {
      v47 = v45;
      *(double *)(v45 + 16) = sub_23DFFF354(v20 + v44);
      *(_QWORD *)(v47 + 24) = 0;
      *(_BYTE *)(v47 + 32) = 0;
    }
    ((void (*)(_QWORD *, _QWORD))v46)(v49, 0);
    v40 = sub_23E1355C8();
LABEL_19:
    MEMORY[0x242649598](v40, v41);
    sub_23E134CB0();
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void sub_23DFFE7E4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  if ((*a2 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21070);
    v2 = sub_23E136D98();
    sub_23E003E94(v2);
    swift_release();
  }
}

uint64_t sub_23DFFE83C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21078);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  if (*(_QWORD *)(a1 + 208))
  {
    swift_retain();
    sub_23E08CB58((uint64_t)v7);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23DF89C1C((uint64_t)v7, (uint64_t)v5, &qword_256D21078);
    swift_retain();
    sub_23E135C88();
    sub_23DF89C7C((uint64_t)v7, &qword_256D21078);
    return swift_release();
  }
  else
  {
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23DFFE984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v15[-v8];
  v10 = (char *)(a3 + *(int *)(type metadata accessor for ThermostatControlView() + 52));
  v11 = *v10;
  v12 = *((_QWORD *)v10 + 1);
  v15[8] = v11;
  v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  result = sub_23E136D98();
  if ((v17 & 1) == 0)
  {
    v14 = _s9KnobStateOMa(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
    sub_23DF89C1C((uint64_t)v9, (uint64_t)v7, &qword_256D20ED0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
    sub_23E136DA4();
    return sub_23DF89C7C((uint64_t)v9, &qword_256D20ED0);
  }
  return result;
}

_QWORD *sub_23DFFEAB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v2 = sub_23E1366D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BDF1140])
    return sub_23DFFE42C(0);
  if (v6 == *MEMORY[0x24BDF1138])
    return sub_23DFFE42C(1);
  return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23DFFEB98(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 88);
  v2 = *(unsigned __int8 *)(a1 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE0);
  swift_allocObject();
  sub_23E0B4DB8(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21070);
  return sub_23E136DA4();
}

uint64_t sub_23DFFEC20()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v4;
  uint64_t v5;
  __int16 v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  MEMORY[0x24264B734](&v4, v1);
  if ((_BYTE)v6 == 0xFF || (v5 & 1) != 0)
    return 0;
  v2 = (v4 - *(double *)(v0 + 56)) / (*(double *)(v0 + 64) - *(double *)(v0 + 56));
  if (v2 <= 0.0)
    v2 = 0.0;
  if (v2 > 1.0)
    v2 = 1.0;
  return *(_QWORD *)&v2;
}

uint64_t sub_23DFFECDC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ThermostatControlView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136D98();
  v7 = _s9KnobStateOMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7) != 1)
    return sub_23DF89384((uint64_t)v6, a2, _s9KnobStateOMa);
  sub_23DF89C7C((uint64_t)v6, &qword_256D20ED0);
  return sub_23DF73E10(a1, a2, _s9KnobStateOMa);
}

_QWORD *sub_23DFFEDCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  sub_23DF73E10(a1, (uint64_t)&v10 - v6, _s9KnobStateOMa);
  v8 = _s9KnobStateOMa(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  type metadata accessor for ThermostatControlView();
  sub_23DF89C1C((uint64_t)v7, (uint64_t)v5, &qword_256D20ED0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136DA4();
  sub_23DF89C7C((uint64_t)v7, &qword_256D20ED0);
  return sub_23DFFEEE0(a1);
}

_QWORD *sub_23DFFEEE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int16 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int16 v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int16 v18;

  result = sub_23DFFEFDC(a1, (uint64_t)&v11);
  if ((_BYTE)v13 != 0xFF)
  {
    v15 = v11;
    v16 = BYTE8(v11) & 1;
    v17 = v12;
    v18 = v13;
    v3 = *(_QWORD *)(v1 + 232);
    *(_QWORD *)&v11 = *(_QWORD *)(v1 + 224);
    *((_QWORD *)&v11 + 1) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21070);
    sub_23E136D98();
    v4 = *(_QWORD *)(v1 + 8);
    v5 = *(_WORD *)(v1 + 48);
    *(_QWORD *)&v11 = *(_QWORD *)v1;
    *((_QWORD *)&v11 + 1) = v4;
    v6 = *(_OWORD *)(v1 + 32);
    v12 = *(_OWORD *)(v1 + 16);
    v13 = v6;
    v14 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    sub_23E136E88();
    v11 = v7;
    v12 = v8;
    v13 = v9;
    v14 = v10;
    sub_23E0B61A8((uint64_t)&v11);
    swift_release();
    return (_QWORD *)sub_23E004A90((uint64_t)&v11);
  }
  return result;
}

_QWORD *sub_23DFFEFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int16 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *result;
  __int16 v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  __int16 v28;
  unsigned int EnumCaseMultiPayload;
  uint64_t v30;
  double v31;
  double v32;
  BOOL v33;
  double v34;
  __int128 v35;
  __int16 v36;
  __int128 v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  __int128 v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  __int128 v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int16 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int16 v70;

  v3 = v2;
  *(_QWORD *)&v61 = a1;
  v5 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s4KnobVMa(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v56 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - v15;
  v17 = v2[1];
  v18 = *((_WORD *)v2 + 24);
  v62 = *v2;
  v63 = v17;
  v19 = *((_OWORD *)v2 + 2);
  v64 = *((_OWORD *)v2 + 1);
  v65 = v19;
  v66 = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  result = MEMORY[0x24264B734](&v67, v20);
  v22 = v70;
  if ((_BYTE)v70 == 0xFF)
    goto LABEL_10;
  v56 = v14;
  v57 = v11;
  v59 = v8;
  v58 = v69;
  v23 = v68;
  v60 = v67;
  v24 = v2[15];
  v25 = *((_BYTE *)v3 + 128);
  sub_23DF89F20(v3[15], v25);
  v26 = sub_23DF9C59C(v24, v25);
  result = (_QWORD *)sub_23DF8A078(v24, v25);
  if ((v26 & 1) == 0)
  {
LABEL_10:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    v38 = 255;
  }
  else
  {
    v27 = v23 & 1;
    v28 = v22 & 0xFF00;
    sub_23DF73E10(v61, (uint64_t)v7, _s9KnobStateOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload >= 2)
    {
      if (EnumCaseMultiPayload == 2)
      {
        v39 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48)];
        v40 = (uint64_t)v56;
        sub_23DF89384((uint64_t)v7, (uint64_t)v56, _s4KnobVMa);
        v41 = (uint64_t)v57;
        sub_23DF89384(v39, (uint64_t)v57, _s4KnobVMa);
        v42 = v59;
        v43 = *(int *)(v59 + 20);
        v44 = *(double *)(v40 + v43);
        if (v44 <= 1.0)
          v45 = *(double *)(v40 + v43);
        else
          v45 = 1.0;
        if (v44 > 0.0)
          v46 = v45;
        else
          v46 = 0.0;
        v48 = *((double *)v3 + 7);
        v47 = *((double *)v3 + 8);
        v49 = v47 - v48;
        *(double *)&v50 = sub_23DFFF354(v48 + v46 * (v47 - v48));
        v58 = v50;
        v51 = *(int *)(v42 + 20);
        v52 = *(double *)(v41 + v51);
        if (v52 <= 1.0)
          v53 = *(double *)(v41 + v51);
        else
          v53 = 1.0;
        if (v52 > 0.0)
          v54 = v53;
        else
          v54 = 0.0;
        *(double *)&v55 = sub_23DFFF354(v48 + v49 * v54);
        v61 = v55;
        sub_23DF73E54(v41, _s4KnobVMa);
        result = (_QWORD *)sub_23DF73E54(v40, _s4KnobVMa);
        *(_QWORD *)&v37 = v58;
        *((_QWORD *)&v37 + 1) = v61;
        v36 = 1;
      }
      else
      {
        v36 = v22;
        result = (_QWORD *)sub_23DF73E54((uint64_t)v7, _s9KnobStateOMa);
        v37 = v58;
      }
    }
    else
    {
      sub_23DF89384((uint64_t)v7, (uint64_t)v16, _s4KnobVMa);
      v30 = *(int *)(v59 + 20);
      v31 = *(double *)&v16[v30];
      v32 = 1.0;
      if (v31 <= 1.0)
        v32 = *(double *)&v16[v30];
      v33 = v31 > 0.0;
      v34 = 0.0;
      if (v33)
        v34 = v32;
      *(double *)&v35 = sub_23DFFF354(*((double *)v3 + 7) + v34 * (*((double *)v3 + 8) - *((double *)v3 + 7)));
      v61 = v35;
      result = (_QWORD *)sub_23DF73E54((uint64_t)v16, _s4KnobVMa);
      v36 = 0;
      v37 = (unint64_t)v61;
    }
    v38 = v28 | v36;
    *(_QWORD *)a2 = v60;
    *(_QWORD *)(a2 + 8) = v27;
    *(_OWORD *)(a2 + 16) = v37;
  }
  *(_WORD *)(a2 + 32) = v38;
  return result;
}

double sub_23DFFF354(double a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;

  v2 = v1;
  v4 = (void *)sub_23E1355B0();
  sub_23E137374();
  v6 = v5;

  v7 = *(double *)(v2 + 72);
  if (v6 < v7)
    v6 = v6 * ceil(v7 / v6);
  v8 = (void *)sub_23E1355B0();
  sub_23E137374();
  v10 = v9;

  if (v10 < v7)
    v10 = v10 * ceil(v7 / v10);
  return round(a1 / v6) * v10;
}

uint64_t sub_23DFFF3E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _QWORD v9[4];
  unsigned __int8 v10;

  v3 = v1;
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_BYTE *)(v3 + 128);
  sub_23DF89F20(v4, v5);
  v6 = sub_23DF9C59C(v4, v5);
  sub_23DF8A078(v4, v5);
  if ((v6 & 1) == 0)
    return sub_23E136C30();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  MEMORY[0x24264B734](v9, v7);
  if (v10 == 0xFF || *(_BYTE *)(v3 + 80) != 3)
    return sub_23E136C30();
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_23DFFF4D8()
{
  uint64_t result;

  result = sub_23E136BE8();
  qword_256D34690 = result;
  return result;
}

uint64_t sub_23DFFF50C()
{
  uint64_t result;

  result = sub_23E136BE8();
  qword_256D34698 = result;
  return result;
}

uint64_t sub_23DFFF544()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BundleFinder()
{
  return objc_opt_self();
}

void sub_23DFFF584()
{
  __asm { BR              X9 }
}

uint64_t sub_23DFFF5AC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  type metadata accessor for _BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_23E136D2C();
}

uint64_t type metadata accessor for ThermostatControlView()
{
  uint64_t result;

  result = qword_256D20F50;
  if (!qword_256D20F50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DFFF70C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v6;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(_QWORD, _QWORD, _QWORD);
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  void (*v79)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  void (*v89)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  void (*v99)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v105;
  char *v106;
  unsigned int (*v107)(_QWORD, _QWORD, _QWORD);
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(char *, uint64_t, uint64_t);
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    v6 = a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)((char *)a2 + 81);
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    v9 = a2[15];
    v10 = *((_BYTE *)a2 + 128);
    swift_retain();
    swift_retain();
    sub_23DF89F20(v9, v10);
    *(_QWORD *)(a1 + 120) = v9;
    *(_BYTE *)(a1 + 128) = v10;
    v11 = v6[17];
    v12 = v6[18];
    v13 = v6[19];
    v14 = v6[20];
    v15 = v6[21];
    v118 = a3;
    v119 = v6;
    v16 = v6[22];
    v17 = v6[23];
    v18 = v6[24];
    LOBYTE(v6) = *((_BYTE *)v6 + 200);
    v116 = *((_BYTE *)v119 + 201);
    sub_23DF98590(v11, v12, v13, v14, v15, v16, v17, v18, (char)v6, v116);
    *(_QWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 144) = v12;
    *(_QWORD *)(a1 + 152) = v13;
    *(_QWORD *)(a1 + 160) = v14;
    *(_QWORD *)(a1 + 168) = v15;
    *(_QWORD *)(a1 + 176) = v16;
    *(_QWORD *)(a1 + 184) = v17;
    *(_QWORD *)(a1 + 192) = v18;
    v20 = v118;
    v19 = v119;
    *(_BYTE *)(a1 + 200) = (_BYTE)v6;
    *(_BYTE *)(a1 + 201) = v116;
    v21 = v119[27];
    *(_QWORD *)(a1 + 208) = v119[26];
    *(_QWORD *)(a1 + 216) = v21;
    v22 = v119[29];
    v23 = *(int *)(v118 + 48);
    v24 = (char *)(a1 + v23);
    v25 = (char *)v119 + v23;
    *(_QWORD *)(a1 + 224) = v119[28];
    *(_QWORD *)(a1 + 232) = v22;
    v117 = a1;
    v26 = _s9KnobStateOMa(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v24;
      v31 = v117;
LABEL_39:
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
      *(_QWORD *)&v30[*(int *)(v100 + 28)] = *(_QWORD *)&v25[*(int *)(v100 + 28)];
      v101 = *(int *)(v20 + 52);
      v102 = v31 + v101;
      v103 = (uint64_t)v19 + v101;
      *(_BYTE *)v102 = *(_BYTE *)v103;
      *(_QWORD *)(v102 + 8) = *(_QWORD *)(v103 + 8);
      swift_retain();
      goto LABEL_40;
    }
    v115 = v27;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v36 = sub_23E134C80();
      v37 = *(_QWORD *)(v36 - 8);
      v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      v30 = v24;
      if (v110(v25, 2, v36))
      {
        v38 = _s4KnobV2IDOMa(0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v24, v25, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v24, 0, 2, v36);
      }
      v51 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v24[v51[5]] = *(_QWORD *)&v25[v51[5]];
      *(_QWORD *)&v24[v51[6]] = *(_QWORD *)&v25[v51[6]];
      v24[v51[7]] = v25[v51[7]];
      v24[v51[8]] = v25[v51[8]];
      v52 = v51[9];
      v53 = &v24[v52];
      v114 = v25;
      v54 = &v25[v52];
      v55 = _s4KnobV10IconConfigVMa(0);
      v56 = *(_QWORD *)(v55 - 8);
      v57 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v56 + 48);
      swift_retain();
      if (v57(v54, 1, v55))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v107 = v57;
        v73 = *((_QWORD *)v54 + 1);
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = v73;
        v74 = *(int *)(v55 + 20);
        v105 = &v54[v74];
        v106 = &v53[v74];
        v108 = v26;
        v109 = v36;
        v75 = v37;
        v76 = sub_23E136CFC();
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
        v57 = v107;
        swift_bridgeObjectRetain();
        v78 = v76;
        v37 = v75;
        v26 = v108;
        v77(v106, v105, v78);
        *(_QWORD *)&v53[*(int *)(v55 + 24)] = *(_QWORD *)&v54[*(int *)(v55 + 24)];
        v79 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56);
        swift_retain();
        v79(v53, 0, 1, v55);
        v36 = v109;
      }
      v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v81 = &v30[v80];
      v82 = &v114[v80];
      if (v110(&v114[v80], 2, v36))
      {
        v83 = _s4KnobV2IDOMa(0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v81, v82, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v81, 0, 2, v36);
      }
      *(_QWORD *)&v81[v51[5]] = *(_QWORD *)&v82[v51[5]];
      *(_QWORD *)&v81[v51[6]] = *(_QWORD *)&v82[v51[6]];
      v81[v51[7]] = v82[v51[7]];
      v81[v51[8]] = v82[v51[8]];
      v90 = v51[9];
      v91 = &v81[v90];
      v92 = &v82[v90];
      swift_retain();
      if (v57(v92, 1, v55))
      {
        v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        v94 = *((_QWORD *)v92 + 1);
        *(_QWORD *)v91 = *(_QWORD *)v92;
        *((_QWORD *)v91 + 1) = v94;
        v95 = *(int *)(v55 + 20);
        v113 = &v91[v95];
        v96 = &v92[v95];
        v97 = sub_23E136CFC();
        v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v113, v96, v97);
        *(_QWORD *)&v91[*(int *)(v55 + 24)] = *(_QWORD *)&v92[*(int *)(v55 + 24)];
        v99 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56);
        swift_retain();
        v99(v91, 0, 1, v55);
      }
      swift_storeEnumTagMultiPayload();
      v20 = v118;
      v19 = v119;
    }
    else
    {
      v30 = v24;
      if (EnumCaseMultiPayload == 1)
      {
        v39 = sub_23E134C80();
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v25, 2, v39))
        {
          v41 = _s4KnobV2IDOMa(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v24, v25, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v24, 0, 2, v39);
        }
        v59 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v24[v59[5]] = *(_QWORD *)&v25[v59[5]];
        *(_QWORD *)&v24[v59[6]] = *(_QWORD *)&v25[v59[6]];
        v24[v59[7]] = v25[v59[7]];
        v24[v59[8]] = v25[v59[8]];
        v60 = v59[9];
        v61 = &v24[v60];
        v114 = v25;
        v62 = &v25[v60];
        v63 = _s4KnobV10IconConfigVMa(0);
        v64 = *(_QWORD *)(v63 - 8);
        v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        swift_retain();
        if (v65(v62, 1, v63))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          v84 = *((_QWORD *)v62 + 1);
          *(_QWORD *)v61 = *(_QWORD *)v62;
          *((_QWORD *)v61 + 1) = v84;
          v85 = *(int *)(v63 + 20);
          v86 = &v61[v85];
          v112 = &v62[v85];
          v87 = sub_23E136CFC();
          v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
          swift_bridgeObjectRetain();
          v88(v86, v112, v87);
          *(_QWORD *)&v61[*(int *)(v63 + 24)] = *(_QWORD *)&v62[*(int *)(v63 + 24)];
          v89 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56);
          swift_retain();
          v89(v61, 0, 1, v63);
        }
        v20 = v118;
        v19 = v119;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v24, v25, *(_QWORD *)(v115 + 64));
          v42 = v115;
LABEL_38:
          v31 = v117;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v30, 0, 1, v26);
          goto LABEL_39;
        }
        v33 = sub_23E134C80();
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v25, 2, v33))
        {
          v35 = _s4KnobV2IDOMa(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v24, v25, v33);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v24, 0, 2, v33);
        }
        v43 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v24[v43[5]] = *(_QWORD *)&v25[v43[5]];
        *(_QWORD *)&v24[v43[6]] = *(_QWORD *)&v25[v43[6]];
        v24[v43[7]] = v25[v43[7]];
        v24[v43[8]] = v25[v43[8]];
        v44 = v43[9];
        v45 = &v24[v44];
        v114 = v25;
        v46 = &v25[v44];
        v47 = _s4KnobV10IconConfigVMa(0);
        v48 = *(_QWORD *)(v47 - 8);
        v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        swift_retain();
        if (v49(v46, 1, v47))
        {
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v67 = *((_QWORD *)v46 + 1);
          *(_QWORD *)v45 = *(_QWORD *)v46;
          *((_QWORD *)v45 + 1) = v67;
          v68 = *(int *)(v47 + 20);
          v69 = &v45[v68];
          v111 = &v46[v68];
          v70 = sub_23E136CFC();
          v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
          swift_bridgeObjectRetain();
          v71(v69, v111, v70);
          *(_QWORD *)&v45[*(int *)(v47 + 24)] = *(_QWORD *)&v46[*(int *)(v47 + 24)];
          v72 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56);
          swift_retain();
          v72(v45, 0, 1, v47);
        }
        v20 = v118;
        v19 = v119;
      }
      swift_storeEnumTagMultiPayload();
    }
    v25 = v114;
    v42 = v115;
    goto LABEL_38;
  }
  v31 = v4 + ((v3 + 16) & ~(unint64_t)v3);
LABEL_40:
  swift_retain();
  return v31;
}

uint64_t sub_23DFFFFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_23DF985F0(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_QWORD *)(a1 + 192), *(_BYTE *)(a1 + 200), *(_BYTE *)(a1 + 201));
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = _s9KnobStateOMa(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    goto LABEL_2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v4, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v13);
    v16 = _s4KnobVMa(0);
    swift_release();
    v17 = v4 + *(int *)(v16 + 36);
    v12 = _s4KnobV10IconConfigVMa(0);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
    if (!v18(v17, 1, v12))
    {
      swift_bridgeObjectRelease();
      v25 = v14;
      v19 = v17 + *(int *)(v12 + 20);
      v20 = sub_23E136CFC();
      v21 = v19;
      v14 = v25;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
      swift_release();
    }
    v22 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v15(v22, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v13);
    swift_release();
    v11 = v22 + *(int *)(v16 + 36);
    if (!v18(v11, 1, v12))
      goto LABEL_16;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v8 = sub_23E134C80();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 2, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
    v10 = _s4KnobVMa(0);
    swift_release();
    v11 = v4 + *(int *)(v10 + 36);
    v12 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
LABEL_16:
      swift_bridgeObjectRelease();
      v23 = v11 + *(int *)(v12 + 20);
      v24 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      swift_release();
    }
  }
LABEL_2:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  swift_release();
  return swift_release();
}

uint64_t sub_23E0002DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(_QWORD, _QWORD, _QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  void (*v78)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  void (*v87)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  void (*v99)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(char *, uint64_t, uint64_t);
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;

  v3 = a2;
  v4 = a1;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 120);
  v8 = *(_BYTE *)(a2 + 128);
  swift_retain();
  swift_retain();
  sub_23DF89F20(v7, v8);
  *(_QWORD *)(v4 + 120) = v7;
  *(_BYTE *)(v4 + 128) = v8;
  v9 = *(_QWORD *)(v3 + 136);
  v10 = *(_QWORD *)(v3 + 144);
  v11 = *(_QWORD *)(v3 + 152);
  v12 = *(_QWORD *)(v3 + 160);
  v14 = *(_QWORD *)(v3 + 168);
  v13 = *(_QWORD *)(v3 + 176);
  v16 = *(_QWORD *)(v3 + 184);
  v15 = *(_QWORD *)(v3 + 192);
  v120 = *(_BYTE *)(v3 + 200);
  v123 = *(_BYTE *)(v3 + 201);
  sub_23DF98590(v9, v10, v11, v12, v14, v13, v16, v15, v120, v123);
  *(_QWORD *)(v4 + 136) = v9;
  *(_QWORD *)(v4 + 144) = v10;
  *(_QWORD *)(v4 + 152) = v11;
  *(_QWORD *)(v4 + 160) = v12;
  *(_QWORD *)(v4 + 168) = v14;
  *(_QWORD *)(v4 + 176) = v13;
  *(_QWORD *)(v4 + 184) = v16;
  *(_QWORD *)(v4 + 192) = v15;
  *(_BYTE *)(v4 + 200) = v120;
  *(_BYTE *)(v4 + 201) = v123;
  v17 = *(_QWORD *)(v3 + 216);
  *(_QWORD *)(v4 + 208) = *(_QWORD *)(v3 + 208);
  *(_QWORD *)(v4 + 216) = v17;
  v18 = *(_QWORD *)(v3 + 232);
  v19 = *(int *)(a3 + 48);
  v20 = (char *)(v4 + v19);
  v21 = (char *)(v3 + v19);
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v3 + 224);
  *(_QWORD *)(v4 + 232) = v18;
  v22 = _s9KnobStateOMa(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_retain();
  swift_retain();
  v25 = v21;
  swift_retain();
  if (!v24(v21, 1, v22))
  {
    v124 = v23;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v122 = v3;
      v33 = sub_23E134C80();
      v34 = *(_QWORD *)(v33 - 8);
      v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      v27 = v20;
      v118 = v4;
      v109 = v34;
      if (v110(v21, 2, v33))
      {
        v35 = _s4KnobV2IDOMa(0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v20, v21, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v20, 0, 2, v33);
      }
      v49 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v20[v49[5]] = *(_QWORD *)&v21[v49[5]];
      *(_QWORD *)&v20[v49[6]] = *(_QWORD *)&v21[v49[6]];
      v20[v49[7]] = v21[v49[7]];
      v20[v49[8]] = v21[v49[8]];
      v50 = v49[9];
      v51 = &v20[v50];
      v114 = v25;
      v52 = &v25[v50];
      v53 = _s4KnobV10IconConfigVMa(0);
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v54 + 48);
      swift_retain();
      if (v55(v52, 1, v53))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v70 = *((_QWORD *)v52 + 1);
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = v70;
        v71 = *(int *)(v53 + 20);
        v105 = &v52[v71];
        v106 = &v51[v71];
        v107 = v22;
        v108 = v33;
        v72 = v55;
        v73 = v54;
        v74 = v53;
        v75 = sub_23E136CFC();
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v77 = v75;
        v53 = v74;
        v54 = v73;
        v55 = v72;
        v22 = v107;
        v76(v106, v105, v77);
        *(_QWORD *)&v51[*(int *)(v53 + 24)] = *(_QWORD *)&v52[*(int *)(v53 + 24)];
        v78 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56);
        swift_retain();
        v78(v51, 0, 1, v53);
        v33 = v108;
      }
      v79 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v80 = &v27[v79];
      v81 = &v114[v79];
      if (v110(&v114[v79], 2, v33))
      {
        v82 = _s4KnobV2IDOMa(0);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v80, v81, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v80, 0, 2, v33);
      }
      *(_QWORD *)&v80[v49[5]] = *(_QWORD *)&v81[v49[5]];
      *(_QWORD *)&v80[v49[6]] = *(_QWORD *)&v81[v49[6]];
      v80[v49[7]] = v81[v49[7]];
      v80[v49[8]] = v81[v49[8]];
      v88 = v49[9];
      v89 = &v80[v88];
      v90 = &v81[v88];
      swift_retain();
      if (v55(v90, 1, v53))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        v92 = *((_QWORD *)v90 + 1);
        *(_QWORD *)v89 = *(_QWORD *)v90;
        *((_QWORD *)v89 + 1) = v92;
        v93 = *(int *)(v53 + 20);
        v113 = &v89[v93];
        v94 = &v90[v93];
        v95 = v54;
        v96 = v53;
        v97 = sub_23E136CFC();
        v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v113, v94, v97);
        *(_QWORD *)&v89[*(int *)(v96 + 24)] = *(_QWORD *)&v90[*(int *)(v96 + 24)];
        v99 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56);
        swift_retain();
        v99(v89, 0, 1, v96);
      }
      swift_storeEnumTagMultiPayload();
      v4 = v118;
      v3 = v122;
      v39 = v124;
      v28 = a3;
      v25 = v114;
      goto LABEL_35;
    }
    v27 = v20;
    v28 = a3;
    if (EnumCaseMultiPayload == 1)
    {
      v121 = v3;
      v36 = sub_23E134C80();
      v37 = *(_QWORD *)(v36 - 8);
      v119 = v4;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v21, 2, v36))
      {
        v38 = _s4KnobV2IDOMa(0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v20, v21, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v20, 0, 2, v36);
      }
      v57 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v20[v57[5]] = *(_QWORD *)&v21[v57[5]];
      *(_QWORD *)&v20[v57[6]] = *(_QWORD *)&v21[v57[6]];
      v20[v57[7]] = v21[v57[7]];
      v20[v57[8]] = v21[v57[8]];
      v58 = v57[9];
      v59 = &v20[v58];
      v43 = v21;
      v60 = &v21[v58];
      v61 = _s4KnobV10IconConfigVMa(0);
      v62 = *(_QWORD *)(v61 - 8);
      v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      swift_retain();
      if (v63(v60, 1, v61))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v83 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = *(_QWORD *)v60;
        *((_QWORD *)v59 + 1) = v83;
        v84 = *(int *)(v61 + 20);
        v112 = &v60[v84];
        v116 = &v59[v84];
        v85 = sub_23E136CFC();
        v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
        swift_bridgeObjectRetain();
        v86(v116, v112, v85);
        *(_QWORD *)&v59[*(int *)(v61 + 24)] = *(_QWORD *)&v60[*(int *)(v61 + 24)];
        v87 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56);
        swift_retain();
        v87(v59, 0, 1, v61);
      }
      v4 = v119;
      v28 = a3;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v20, v21, *(_QWORD *)(v124 + 64));
        v39 = v124;
LABEL_35:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v27, 0, 1, v22);
        goto LABEL_36;
      }
      v121 = v3;
      v30 = sub_23E134C80();
      v31 = *(_QWORD *)(v30 - 8);
      v117 = v4;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v21, 2, v30))
      {
        v32 = _s4KnobV2IDOMa(0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v20, v21, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v20, 0, 2, v30);
      }
      v40 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v20[v40[5]] = *(_QWORD *)&v21[v40[5]];
      *(_QWORD *)&v20[v40[6]] = *(_QWORD *)&v21[v40[6]];
      v20[v40[7]] = v21[v40[7]];
      v20[v40[8]] = v21[v40[8]];
      v41 = v40[9];
      v42 = &v20[v41];
      v43 = v21;
      v44 = &v21[v41];
      v45 = _s4KnobV10IconConfigVMa(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      swift_retain();
      if (v47(v44, 1, v45))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v42, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v65 = *((_QWORD *)v44 + 1);
        *(_QWORD *)v42 = *(_QWORD *)v44;
        *((_QWORD *)v42 + 1) = v65;
        v66 = *(int *)(v45 + 20);
        v111 = &v44[v66];
        v115 = &v42[v66];
        v67 = sub_23E136CFC();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v115, v111, v67);
        *(_QWORD *)&v42[*(int *)(v45 + 24)] = *(_QWORD *)&v44[*(int *)(v45 + 24)];
        v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
        swift_retain();
        v69(v42, 0, 1, v45);
      }
      v4 = v117;
      v28 = a3;
    }
    swift_storeEnumTagMultiPayload();
    v3 = v121;
    v39 = v124;
    v25 = v43;
    goto LABEL_35;
  }
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  v27 = v20;
  v28 = a3;
LABEL_36:
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  *(_QWORD *)&v27[*(int *)(v100 + 28)] = *(_QWORD *)&v25[*(int *)(v100 + 28)];
  v101 = *(int *)(v28 + 52);
  v102 = v4 + v101;
  v103 = v3 + v101;
  *(_BYTE *)v102 = *(_BYTE *)v103;
  *(_QWORD *)(v102 + 8) = *(_QWORD *)(v103 + 8);
  swift_retain();
  swift_retain();
  return v4;
}

_QWORD *sub_23E000BAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  void (*v84)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  void (*v97)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  void (*v107)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(char *, uint64_t, uint64_t);
  int *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unsigned int (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  int *v126;
  uint64_t v127;
  unsigned int (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  void (*v142)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  void (*v152)(char *, _QWORD, uint64_t, uint64_t);
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  void (*v155)(char *, char *, uint64_t);
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *__dst;
  _QWORD *__dsta;
  unsigned int (*v162)(char *, uint64_t, uint64_t);
  char *v163;
  unsigned int (*v164)(char *, uint64_t, uint64_t);
  char *v165;
  char *v166;
  char *v167;
  unsigned int (*v168)(char *, uint64_t, uint64_t);
  uint64_t v169;
  unsigned int (*v170)(char *, uint64_t, uint64_t);
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char v187;
  _QWORD *v188;
  _QWORD *v189;
  _QWORD *v190;
  _QWORD *v191;
  _QWORD *v192;
  _QWORD *v193;

  v3 = a2;
  v4 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v4[1] = v3[1];
  swift_retain();
  swift_release();
  v5 = *((_OWORD *)v3 + 1);
  v6 = *((_OWORD *)v3 + 2);
  *((_WORD *)v4 + 24) = *((_WORD *)v3 + 24);
  *((_OWORD *)v4 + 1) = v5;
  *((_OWORD *)v4 + 2) = v6;
  v4[7] = v3[7];
  v4[8] = v3[8];
  v4[9] = v3[9];
  *((_BYTE *)v4 + 80) = *((_BYTE *)v3 + 80);
  v7 = v3[11];
  *((_BYTE *)v4 + 96) = *((_BYTE *)v3 + 96);
  v4[11] = v7;
  v4[13] = v3[13];
  *((_BYTE *)v4 + 112) = *((_BYTE *)v3 + 112);
  v8 = v3[15];
  v9 = *((_BYTE *)v3 + 128);
  sub_23DF89F20(v8, v9);
  v10 = v4[15];
  v11 = *((_BYTE *)v4 + 128);
  v4[15] = v8;
  *((_BYTE *)v4 + 128) = v9;
  sub_23DF8A078(v10, v11);
  v12 = v3[17];
  v13 = v3[18];
  v15 = v3[19];
  v14 = v3[20];
  v16 = v3[21];
  v17 = v3[22];
  v19 = v3[23];
  v18 = v3[24];
  v181 = *((_BYTE *)v3 + 200);
  v187 = *((_BYTE *)v3 + 201);
  sub_23DF98590(v12, v13, v15, v14, v16, v17, v19, v18, v181, v187);
  v20 = v4[17];
  v21 = v4[18];
  v22 = v4[19];
  v23 = v4[20];
  v24 = v4[21];
  v25 = v4[22];
  v26 = v4[23];
  v27 = v4[24];
  v28 = *((_BYTE *)v4 + 200);
  v29 = *((_BYTE *)v4 + 201);
  v4[17] = v12;
  v4[18] = v13;
  v4[19] = v15;
  v4[20] = v14;
  v4[21] = v16;
  v4[22] = v17;
  v30 = a3;
  v4[23] = v19;
  v4[24] = v18;
  *((_BYTE *)v4 + 200) = v181;
  *((_BYTE *)v4 + 201) = v187;
  sub_23DF985F0(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  v4[26] = v3[26];
  swift_retain();
  swift_release();
  v4[27] = v3[27];
  v4[28] = v3[28];
  swift_retain();
  swift_release();
  v4[29] = v3[29];
  swift_retain();
  swift_release();
  v31 = *(int *)(a3 + 48);
  v32 = (char *)v4 + v31;
  v33 = (char *)v3 + v31;
  v34 = _s9KnobStateOMa(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v18) = v36(v32, 1, v34);
  v37 = v36(v33, 1, v34);
  if ((_DWORD)v18)
  {
    if (!v37)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v47 = sub_23E134C80();
        v48 = *(_QWORD *)(v47 - 8);
        v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        v183 = v35;
        v169 = v47;
        if (v164(v33, 2, v47))
        {
          v49 = _s4KnobV2IDOMa(0);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v32, v33, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v32, 0, 2, v47);
        }
        v67 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v32[v67[5]] = *(_QWORD *)&v33[v67[5]];
        *(_QWORD *)&v32[v67[6]] = *(_QWORD *)&v33[v67[6]];
        v32[v67[7]] = v33[v67[7]];
        v32[v67[8]] = v33[v67[8]];
        v68 = v67[9];
        __dst = &v32[v68];
        v69 = &v33[v68];
        v70 = _s4KnobV10IconConfigVMa(0);
        v159 = *(_QWORD *)(v70 - 8);
        v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
        swift_retain();
        v179 = v70;
        v162 = v71;
        if (v71(v69, 1, v70))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          *(_QWORD *)__dst = *(_QWORD *)v69;
          *((_QWORD *)__dst + 1) = *((_QWORD *)v69 + 1);
          v85 = *(int *)(v70 + 20);
          v154 = &v69[v85];
          v156 = &__dst[v85];
          v190 = v3;
          v86 = v4;
          v87 = sub_23E136CFC();
          v153 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
          swift_bridgeObjectRetain();
          v88 = v87;
          v4 = v86;
          v3 = v190;
          v153(v156, v154, v88);
          *(_QWORD *)&__dst[*(int *)(v70 + 24)] = *(_QWORD *)&v69[*(int *)(v70 + 24)];
          v89 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56);
          swift_retain();
          v89(__dst, 0, 1, v70);
        }
        v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v91 = &v32[v90];
        v92 = &v33[v90];
        if (v164(&v33[v90], 2, v169))
        {
          v93 = _s4KnobV2IDOMa(0);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v91, v92, v169);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v91, 0, 2, v169);
        }
        *(_QWORD *)&v91[v67[5]] = *(_QWORD *)&v92[v67[5]];
        *(_QWORD *)&v91[v67[6]] = *(_QWORD *)&v92[v67[6]];
        v91[v67[7]] = v92[v67[7]];
        v91[v67[8]] = v92[v67[8]];
        v98 = v67[9];
        v99 = &v91[v98];
        v100 = &v92[v98];
        swift_retain();
        if (v162(v100, 1, v179))
        {
          v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v99 = *(_QWORD *)v100;
          *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
          v102 = *(int *)(v179 + 20);
          v167 = &v100[v102];
          v173 = &v99[v102];
          v191 = v3;
          v103 = v4;
          v104 = sub_23E136CFC();
          v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
          swift_bridgeObjectRetain();
          v106 = v104;
          v4 = v103;
          v3 = v191;
          v105(v173, v167, v106);
          *(_QWORD *)&v99[*(int *)(v179 + 24)] = *(_QWORD *)&v100[*(int *)(v179 + 24)];
          v107 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56);
          swift_retain();
          v107(v99, 0, 1, v179);
        }
        swift_storeEnumTagMultiPayload();
        v30 = a3;
        v35 = v183;
        goto LABEL_50;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v188 = v3;
        v176 = v4;
        v50 = sub_23E134C80();
        v51 = *(_QWORD *)(v50 - 8);
        v184 = v35;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v33, 2, v50))
        {
          v52 = _s4KnobV2IDOMa(0);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v32, v33, v50);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v32, 0, 2, v50);
        }
        v73 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v32[v73[5]] = *(_QWORD *)&v33[v73[5]];
        *(_QWORD *)&v32[v73[6]] = *(_QWORD *)&v33[v73[6]];
        v32[v73[7]] = v33[v73[7]];
        v32[v73[8]] = v33[v73[8]];
        v74 = v73[9];
        v75 = &v32[v74];
        v76 = &v33[v74];
        v77 = _s4KnobV10IconConfigVMa(0);
        v78 = *(_QWORD *)(v77 - 8);
        v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
        swift_retain();
        if (v79(v76, 1, v77))
        {
          v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v75 = *(_QWORD *)v76;
          *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
          v94 = *(int *)(v77 + 20);
          v166 = &v76[v94];
          v172 = &v75[v94];
          v95 = sub_23E136CFC();
          v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v96(v172, v166, v95);
          *(_QWORD *)&v75[*(int *)(v77 + 24)] = *(_QWORD *)&v76[*(int *)(v77 + 24)];
          v97 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56);
          swift_retain();
          v97(v75, 0, 1, v77);
        }
        v35 = v184;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v32, v33, *(_QWORD *)(v35 + 64));
LABEL_50:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          goto LABEL_51;
        }
        v188 = v3;
        v176 = v4;
        v39 = sub_23E134C80();
        v40 = *(_QWORD *)(v39 - 8);
        v182 = v35;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 2, v39))
        {
          v41 = _s4KnobV2IDOMa(0);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 2, v39);
        }
        v53 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v32[v53[5]] = *(_QWORD *)&v33[v53[5]];
        *(_QWORD *)&v32[v53[6]] = *(_QWORD *)&v33[v53[6]];
        v32[v53[7]] = v33[v53[7]];
        v32[v53[8]] = v33[v53[8]];
        v54 = v53[9];
        v55 = &v32[v54];
        v56 = &v33[v54];
        v57 = _s4KnobV10IconConfigVMa(0);
        v58 = *(_QWORD *)(v57 - 8);
        v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
        swift_retain();
        if (v59(v56, 1, v57))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v55 = *(_QWORD *)v56;
          *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
          v81 = *(int *)(v57 + 20);
          v165 = &v56[v81];
          v171 = &v55[v81];
          v82 = sub_23E136CFC();
          v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
          swift_bridgeObjectRetain();
          v83(v171, v165, v82);
          *(_QWORD *)&v55[*(int *)(v57 + 24)] = *(_QWORD *)&v56[*(int *)(v57 + 24)];
          v84 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56);
          swift_retain();
          v84(v55, 0, 1, v57);
        }
        v35 = v182;
      }
      swift_storeEnumTagMultiPayload();
      v4 = v176;
      v3 = v188;
      v30 = a3;
      goto LABEL_50;
    }
    goto LABEL_10;
  }
  if (v37)
  {
    sub_23DF73E54((uint64_t)v32, _s9KnobStateOMa);
LABEL_10:
    v42 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0) - 8) + 64);
LABEL_11:
    memcpy(v32, v33, v42);
    goto LABEL_51;
  }
  if (v4 == v3)
    goto LABEL_51;
  sub_23DF73E54((uint64_t)v32, _s9KnobStateOMa);
  v43 = swift_getEnumCaseMultiPayload();
  if (v43 != 2)
  {
    if (v43 == 1)
    {
      v189 = v3;
      v177 = v4;
      v64 = sub_23E134C80();
      v65 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v33, 2, v64))
      {
        v66 = _s4KnobV2IDOMa(0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v32, v33, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v32, 0, 2, v64);
      }
      v126 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v32[v126[5]] = *(_QWORD *)&v33[v126[5]];
      *(_QWORD *)&v32[v126[6]] = *(_QWORD *)&v33[v126[6]];
      v32[v126[7]] = v33[v126[7]];
      v32[v126[8]] = v33[v126[8]];
      v127 = v126[9];
      v115 = &v32[v127];
      v116 = &v33[v127];
      v117 = _s4KnobV10IconConfigVMa(0);
      v118 = *(_QWORD *)(v117 - 8);
      v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
      swift_retain();
      if (v128(v116, 1, v117))
      {
LABEL_60:
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
LABEL_66:
        swift_storeEnumTagMultiPayload();
        v4 = v177;
        v3 = v189;
        v30 = a3;
        goto LABEL_51;
      }
    }
    else
    {
      if (v43)
      {
        v42 = *(_QWORD *)(v35 + 64);
        goto LABEL_11;
      }
      v189 = v3;
      v177 = v4;
      v44 = sub_23E134C80();
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v33, 2, v44))
      {
        v46 = _s4KnobV2IDOMa(0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v32, v33, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v32, 0, 2, v44);
      }
      v113 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v32[v113[5]] = *(_QWORD *)&v33[v113[5]];
      *(_QWORD *)&v32[v113[6]] = *(_QWORD *)&v33[v113[6]];
      v32[v113[7]] = v33[v113[7]];
      v32[v113[8]] = v33[v113[8]];
      v114 = v113[9];
      v115 = &v32[v114];
      v116 = &v33[v114];
      v117 = _s4KnobV10IconConfigVMa(0);
      v118 = *(_QWORD *)(v117 - 8);
      v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
      swift_retain();
      if (v119(v116, 1, v117))
        goto LABEL_60;
    }
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *((_QWORD *)v115 + 1) = *((_QWORD *)v116 + 1);
    v139 = *(int *)(v117 + 20);
    v186 = &v115[v139];
    v174 = &v116[v139];
    v140 = sub_23E136CFC();
    v141 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16);
    swift_bridgeObjectRetain();
    v141(v186, v174, v140);
    *(_QWORD *)&v115[*(int *)(v117 + 24)] = *(_QWORD *)&v116[*(int *)(v117 + 24)];
    v142 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56);
    swift_retain();
    v142(v115, 0, 1, v117);
    goto LABEL_66;
  }
  v61 = sub_23E134C80();
  v62 = *(_QWORD *)(v61 - 8);
  v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v178 = v61;
  if (v170(v33, 2, v61))
  {
    v63 = _s4KnobV2IDOMa(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v32, v33, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v32, 0, 2, v61);
  }
  v120 = (int *)_s4KnobVMa(0);
  *(_QWORD *)&v32[v120[5]] = *(_QWORD *)&v33[v120[5]];
  *(_QWORD *)&v32[v120[6]] = *(_QWORD *)&v33[v120[6]];
  v32[v120[7]] = v33[v120[7]];
  v32[v120[8]] = v33[v120[8]];
  v121 = v120[9];
  v163 = &v32[v121];
  v122 = &v33[v121];
  v123 = _s4KnobV10IconConfigVMa(0);
  __dsta = *(_QWORD **)(v123 - 8);
  v124 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
  swift_retain();
  v185 = v123;
  v168 = v124;
  if (v124(v122, 1, v123))
  {
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v163, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v163 = *(_QWORD *)v122;
    *((_QWORD *)v163 + 1) = *((_QWORD *)v122 + 1);
    v130 = *(int *)(v123 + 20);
    v157 = &v122[v130];
    v158 = &v163[v130];
    v192 = v3;
    v131 = v4;
    v132 = sub_23E136CFC();
    v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
    swift_bridgeObjectRetain();
    v133 = v132;
    v4 = v131;
    v3 = v192;
    v155(v158, v157, v133);
    *(_QWORD *)&v163[*(int *)(v123 + 24)] = *(_QWORD *)&v122[*(int *)(v123 + 24)];
    v134 = (void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7];
    swift_retain();
    v134(v163, 0, 1, v123);
  }
  v135 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
  v136 = &v32[v135];
  v137 = &v33[v135];
  if (v170(&v33[v135], 2, v178))
  {
    v138 = _s4KnobV2IDOMa(0);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v136, v137, v178);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v136, 0, 2, v178);
  }
  *(_QWORD *)&v136[v120[5]] = *(_QWORD *)&v137[v120[5]];
  *(_QWORD *)&v136[v120[6]] = *(_QWORD *)&v137[v120[6]];
  v136[v120[7]] = v137[v120[7]];
  v136[v120[8]] = v137[v120[8]];
  v143 = v120[9];
  v144 = &v136[v143];
  v145 = &v137[v143];
  swift_retain();
  if (v168(v145, 1, v185))
  {
    v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v144 = *(_QWORD *)v145;
    *((_QWORD *)v144 + 1) = *((_QWORD *)v145 + 1);
    v147 = *(int *)(v185 + 20);
    v175 = &v145[v147];
    v180 = &v144[v147];
    v193 = v3;
    v148 = v4;
    v149 = sub_23E136CFC();
    v150 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
    swift_bridgeObjectRetain();
    v151 = v149;
    v4 = v148;
    v3 = v193;
    v150(v180, v175, v151);
    *(_QWORD *)&v144[*(int *)(v185 + 24)] = *(_QWORD *)&v145[*(int *)(v185 + 24)];
    v152 = (void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7];
    swift_retain();
    v152(v144, 0, 1, v185);
  }
  swift_storeEnumTagMultiPayload();
  v30 = a3;
LABEL_51:
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  *(_QWORD *)&v32[*(int *)(v108 + 28)] = *(_QWORD *)&v33[*(int *)(v108 + 28)];
  swift_retain();
  swift_release();
  v109 = *(int *)(v30 + 52);
  v110 = (char *)v4 + v109;
  v111 = (char *)v3 + v109;
  *v110 = *v111;
  *((_QWORD *)v110 + 1) = *((_QWORD *)v111 + 1);
  swift_retain();
  swift_release();
  return v4;
}

uint64_t sub_23E001C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v67;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v7 = *(_OWORD *)(a2 + 224);
  v8 = *(int *)(a3 + 48);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v7;
  v11 = _s9KnobStateOMa(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v67 = v12;
      v62 = v18;
      v59 = v19;
      if (v61(v10, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v9, v10, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 2, v18);
      }
      v31 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v31[5]] = *(_QWORD *)&v10[v31[5]];
      *(_QWORD *)&v9[v31[6]] = *(_QWORD *)&v10[v31[6]];
      v9[v31[7]] = v10[v31[7]];
      v9[v31[8]] = v10[v31[8]];
      v32 = v31[9];
      __dst = &v9[v32];
      v33 = &v10[v32];
      v34 = _s4KnobV10IconConfigVMa(0);
      v35 = *(_QWORD *)(v34 - 8);
      v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v58 = v35;
      if (v60(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v33;
        v41 = *(int *)(v34 + 20);
        v56 = &v33[v41];
        v57 = &__dst[v41];
        v42 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v57, v56, v42);
        *(_QWORD *)&__dst[*(int *)(v34 + 24)] = *(_QWORD *)&v33[*(int *)(v34 + 24)];
        (*(void (**)(void))(v35 + 56))();
      }
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v44 = &v9[v43];
      v45 = &v10[v43];
      if (v61(&v10[v43], 2, v62))
      {
        v46 = _s4KnobV2IDOMa(0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v44, v45, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v44, 0, 2, v62);
      }
      *(_QWORD *)&v44[v31[5]] = *(_QWORD *)&v45[v31[5]];
      *(_QWORD *)&v44[v31[6]] = *(_QWORD *)&v45[v31[6]];
      v44[v31[7]] = v45[v31[7]];
      v44[v31[8]] = v45[v31[8]];
      v47 = v31[9];
      v48 = &v44[v47];
      v49 = &v45[v47];
      if (v60(v49, 1, v34))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v48 = *(_OWORD *)v49;
        v51 = *(int *)(v34 + 20);
        v52 = &v48[v51];
        __dstb = &v49[v51];
        v53 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v52, __dstb, v53);
        *(_QWORD *)&v48[*(int *)(v34 + 24)] = *(_QWORD *)&v49[*(int *)(v34 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v48, 0, 1, v34);
      }
      goto LABEL_31;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v67 = v12;
      v21 = sub_23E134C80();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 2, v21))
      {
        v23 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v10, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v9, 0, 2, v21);
      }
      v37 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v37[5]] = *(_QWORD *)&v10[v37[5]];
      *(_QWORD *)&v9[v37[6]] = *(_QWORD *)&v10[v37[6]];
      v9[v37[7]] = v10[v37[7]];
      v9[v37[8]] = v10[v37[8]];
      v38 = v37[9];
      v26 = &v9[v38];
      v27 = &v10[v38];
      v28 = _s4KnobV10IconConfigVMa(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
LABEL_15:
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_31:
        swift_storeEnumTagMultiPayload();
        v12 = v67;
        goto LABEL_32;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
LABEL_32:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        goto LABEL_33;
      }
      v67 = v12;
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v9, v10, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 2, v15);
      }
      v24 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v24[5]] = *(_QWORD *)&v10[v24[5]];
      *(_QWORD *)&v9[v24[6]] = *(_QWORD *)&v10[v24[6]];
      v9[v24[7]] = v10[v24[7]];
      v9[v24[8]] = v10[v24[8]];
      v25 = v24[9];
      v26 = &v9[v25];
      v27 = &v10[v25];
      v28 = _s4KnobV10IconConfigVMa(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        goto LABEL_15;
    }
    *(_OWORD *)v26 = *(_OWORD *)v27;
    v39 = *(int *)(v28 + 20);
    v63 = &v27[v39];
    __dsta = &v26[v39];
    v40 = sub_23E136CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(__dsta, v63, v40);
    *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    goto LABEL_31;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_33:
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  *(_QWORD *)&v9[*(int *)(v54 + 28)] = *(_QWORD *)&v10[*(int *)(v54 + 28)];
  *(_OWORD *)(a1 + *(int *)(a3 + 52)) = *(_OWORD *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_23E0023AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  unsigned int (*v128)(char *, uint64_t, uint64_t);
  unsigned int (*v129)(char *, uint64_t, uint64_t);
  unsigned int (*v130)(char *, uint64_t, uint64_t);
  uint64_t v131;
  char *v132;
  void *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v7 = *(_BYTE *)(a2 + 128);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v7;
  sub_23DF8A078(v8, v9);
  v10 = *(_BYTE *)(a2 + 200);
  v11 = *(_BYTE *)(a2 + 201);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 152);
  v15 = *(_QWORD *)(a1 + 160);
  v16 = *(_QWORD *)(a1 + 168);
  v17 = *(_QWORD *)(a1 + 176);
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(_QWORD *)(a1 + 192);
  v20 = *(_BYTE *)(a1 + 200);
  v21 = *(_BYTE *)(a1 + 201);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 200) = v10;
  *(_BYTE *)(a1 + 201) = v11;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_release();
  v22 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v22;
  swift_release();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_release();
  v23 = *(int *)(a3 + 48);
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = _s9KnobStateOMa(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v40 = sub_23E134C80();
        v41 = *(_QWORD *)(v40 - 8);
        v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
        v140 = a3;
        v131 = v40;
        v124 = v41;
        if (v128(v25, 2, v40))
        {
          v42 = _s4KnobV2IDOMa(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v24, v25, v40);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v24, 0, 2, v40);
        }
        v59 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v24[v59[5]] = *(_QWORD *)&v25[v59[5]];
        *(_QWORD *)&v24[v59[6]] = *(_QWORD *)&v25[v59[6]];
        v24[v59[7]] = v25[v59[7]];
        v24[v59[8]] = v25[v59[8]];
        v60 = v59[9];
        __dsta = &v24[v60];
        v61 = &v25[v60];
        v62 = _s4KnobV10IconConfigVMa(0);
        v63 = *(_QWORD *)(v62 - 8);
        v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
        v122 = v63;
        if (v127(v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(__dsta, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v61;
          v69 = *(int *)(v62 + 20);
          v120 = &v61[v69];
          v121 = &__dsta[v69];
          v70 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v121, v120, v70);
          *(_QWORD *)&__dsta[*(int *)(v62 + 24)] = *(_QWORD *)&v61[*(int *)(v62 + 24)];
          (*(void (**)(void))(v63 + 56))();
        }
        v71 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v72 = &v24[v71];
        v73 = &v25[v71];
        if (v128(&v25[v71], 2, v131))
        {
          v74 = _s4KnobV2IDOMa(0);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v72, v73, v131);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v72, 0, 2, v131);
        }
        *(_QWORD *)&v72[v59[5]] = *(_QWORD *)&v73[v59[5]];
        *(_QWORD *)&v72[v59[6]] = *(_QWORD *)&v73[v59[6]];
        v72[v59[7]] = v73[v59[7]];
        v72[v59[8]] = v73[v59[8]];
        v75 = v59[9];
        v76 = &v72[v75];
        v77 = &v73[v75];
        if (v127(v77, 1, v62))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v76 = *(_OWORD *)v77;
          v79 = *(int *)(v62 + 20);
          v80 = &v76[v79];
          __dstc = &v77[v79];
          v81 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v80, __dstc, v81);
          *(_QWORD *)&v76[*(int *)(v62 + 24)] = *(_QWORD *)&v77[*(int *)(v62 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v76, 0, 1, v62);
        }
        swift_storeEnumTagMultiPayload();
        a3 = v140;
        goto LABEL_48;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v43 = sub_23E134C80();
        v44 = *(_QWORD *)(v43 - 8);
        v139 = a3;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v25, 2, v43))
        {
          v45 = _s4KnobV2IDOMa(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v24, v25, v43);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v24, 0, 2, v43);
        }
        v65 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v24[v65[5]] = *(_QWORD *)&v25[v65[5]];
        *(_QWORD *)&v24[v65[6]] = *(_QWORD *)&v25[v65[6]];
        v24[v65[7]] = v25[v65[7]];
        v24[v65[8]] = v25[v65[8]];
        v66 = v65[9];
        v48 = &v24[v66];
        v49 = &v25[v66];
        v50 = _s4KnobV10IconConfigVMa(0);
        v51 = *(_QWORD *)(v50 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
        {
LABEL_25:
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_38:
          a3 = v139;
          swift_storeEnumTagMultiPayload();
          goto LABEL_48;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v24, v25, *(_QWORD *)(v27 + 64));
LABEL_48:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          goto LABEL_49;
        }
        v32 = sub_23E134C80();
        v33 = *(_QWORD *)(v32 - 8);
        v139 = a3;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 2, v32))
        {
          v34 = _s4KnobV2IDOMa(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v24, v25, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 2, v32);
        }
        v46 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v24[v46[5]] = *(_QWORD *)&v25[v46[5]];
        *(_QWORD *)&v24[v46[6]] = *(_QWORD *)&v25[v46[6]];
        v24[v46[7]] = v25[v46[7]];
        v24[v46[8]] = v25[v46[8]];
        v47 = v46[9];
        v48 = &v24[v47];
        v49 = &v25[v47];
        v50 = _s4KnobV10IconConfigVMa(0);
        v51 = *(_QWORD *)(v50 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
          goto LABEL_25;
      }
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v67 = *(int *)(v50 + 20);
      v132 = &v49[v67];
      __dstb = &v48[v67];
      v68 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(__dstb, v132, v68);
      *(_QWORD *)&v48[*(int *)(v50 + 24)] = *(_QWORD *)&v49[*(int *)(v50 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_38;
    }
    goto LABEL_10;
  }
  if (v30)
  {
    sub_23DF73E54((uint64_t)v24, _s9KnobStateOMa);
LABEL_10:
    v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0) - 8) + 64);
LABEL_11:
    memcpy(v24, v25, v35);
    goto LABEL_49;
  }
  if (a1 == a2)
    goto LABEL_49;
  sub_23DF73E54((uint64_t)v24, _s9KnobStateOMa);
  v36 = swift_getEnumCaseMultiPayload();
  if (v36 != 2)
  {
    if (v36 == 1)
    {
      v56 = sub_23E134C80();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v25, 2, v56))
      {
        v58 = _s4KnobV2IDOMa(0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v24, v25, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v24, 0, 2, v56);
      }
      v101 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v24[v101[5]] = *(_QWORD *)&v25[v101[5]];
      *(_QWORD *)&v24[v101[6]] = *(_QWORD *)&v25[v101[6]];
      v24[v101[7]] = v25[v101[7]];
      v24[v101[8]] = v25[v101[8]];
      v102 = v101[9];
      v89 = &v24[v102];
      v90 = &v25[v102];
      v91 = _s4KnobV10IconConfigVMa(0);
      v92 = *(_QWORD *)(v91 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
      {
LABEL_52:
        v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
LABEL_60:
        swift_storeEnumTagMultiPayload();
        goto LABEL_49;
      }
    }
    else
    {
      if (v36)
      {
        v35 = *(_QWORD *)(v27 + 64);
        goto LABEL_11;
      }
      v37 = sub_23E134C80();
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v25, 2, v37))
      {
        v39 = _s4KnobV2IDOMa(0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v24, v25, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v24, 0, 2, v37);
      }
      v87 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v24[v87[5]] = *(_QWORD *)&v25[v87[5]];
      *(_QWORD *)&v24[v87[6]] = *(_QWORD *)&v25[v87[6]];
      v24[v87[7]] = v25[v87[7]];
      v24[v87[8]] = v25[v87[8]];
      v88 = v87[9];
      v89 = &v24[v88];
      v90 = &v25[v88];
      v91 = _s4KnobV10IconConfigVMa(0);
      v92 = *(_QWORD *)(v91 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
        goto LABEL_52;
    }
    *(_OWORD *)v89 = *(_OWORD *)v90;
    v103 = *(int *)(v91 + 20);
    v142 = a3;
    v104 = &v89[v103];
    __dstd = &v90[v103];
    v105 = sub_23E136CFC();
    v106 = v104;
    a3 = v142;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v106, __dstd, v105);
    *(_QWORD *)&v89[*(int *)(v91 + 24)] = *(_QWORD *)&v90[*(int *)(v91 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
    goto LABEL_60;
  }
  v53 = sub_23E134C80();
  v54 = *(_QWORD *)(v53 - 8);
  v130 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
  __dst = (void *)v53;
  v141 = a3;
  v126 = v54;
  if (v130(v25, 2, v53))
  {
    v55 = _s4KnobV2IDOMa(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v24, v25, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v24, 0, 2, v53);
  }
  v94 = (int *)_s4KnobVMa(0);
  *(_QWORD *)&v24[v94[5]] = *(_QWORD *)&v25[v94[5]];
  *(_QWORD *)&v24[v94[6]] = *(_QWORD *)&v25[v94[6]];
  v24[v94[7]] = v25[v94[7]];
  v24[v94[8]] = v25[v94[8]];
  v95 = v94[9];
  v96 = &v24[v95];
  v97 = &v25[v95];
  v98 = _s4KnobV10IconConfigVMa(0);
  v99 = *(_QWORD *)(v98 - 8);
  v129 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
  if (v129(v97, 1, v98))
  {
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v96 = *(_OWORD *)v97;
    v107 = *(int *)(v98 + 20);
    v123 = &v97[v107];
    v125 = &v96[v107];
    v108 = sub_23E136CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v125, v123, v108);
    *(_QWORD *)&v96[*(int *)(v98 + 24)] = *(_QWORD *)&v97[*(int *)(v98 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  }
  v109 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
  v110 = &v24[v109];
  v111 = &v25[v109];
  if (v130(&v25[v109], 2, (uint64_t)__dst))
  {
    v112 = _s4KnobV2IDOMa(0);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, void *))(v126 + 32))(v110, v111, __dst);
    (*(void (**)(char *, _QWORD, uint64_t, void *))(v126 + 56))(v110, 0, 2, __dst);
  }
  *(_QWORD *)&v110[v94[5]] = *(_QWORD *)&v111[v94[5]];
  *(_QWORD *)&v110[v94[6]] = *(_QWORD *)&v111[v94[6]];
  v110[v94[7]] = v111[v94[7]];
  v110[v94[8]] = v111[v94[8]];
  v113 = v94[9];
  v114 = &v110[v113];
  v115 = &v111[v113];
  if (v129(v115, 1, v98))
  {
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v114 = *(_OWORD *)v115;
    v117 = *(int *)(v98 + 20);
    v118 = &v114[v117];
    __dste = &v115[v117];
    v119 = sub_23E136CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v118, __dste, v119);
    *(_QWORD *)&v114[*(int *)(v98 + 24)] = *(_QWORD *)&v115[*(int *)(v98 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v114, 0, 1, v98);
  }
  swift_storeEnumTagMultiPayload();
  a3 = v141;
LABEL_49:
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  *(_QWORD *)&v24[*(int *)(v82 + 28)] = *(_QWORD *)&v25[*(int *)(v82 + 28)];
  swift_release();
  v83 = *(int *)(a3 + 52);
  v84 = a1 + v83;
  v85 = a2 + v83;
  *(_BYTE *)v84 = *(_BYTE *)v85;
  *(_QWORD *)(v84 + 8) = *(_QWORD *)(v85 + 8);
  swift_release();
  return a1;
}

uint64_t sub_23E003224()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E003230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_23E0032B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0032BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

void sub_23E003334()
{
  unint64_t v0;

  sub_23E0033F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23E0033F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D20F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20ED0);
    v0 = sub_23E136DBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D20F60);
  }
}

uint64_t sub_23E003448()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E003458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(unint64_t, uint64_t, uint64_t);
  unsigned int (*v49)(unint64_t, uint64_t, uint64_t);
  unint64_t v50;

  v1 = type metadata accessor for ThermostatControlView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = _s9KnobStateOMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  v8 = v0 + v3;
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v8 + 120), *(_BYTE *)(v8 + 128));
  sub_23DF985F0(*(_QWORD *)(v8 + 136), *(_QWORD *)(v8 + 144), *(_QWORD *)(v8 + 152), *(_QWORD *)(v8 + 160), *(_QWORD *)(v8 + 168), *(_QWORD *)(v8 + 176), *(_QWORD *)(v8 + 184), *(_QWORD *)(v8 + 192), *(_BYTE *)(v8 + 200), *(_BYTE *)(v8 + 201));
  swift_release();
  swift_release();
  swift_release();
  v9 = v0 + v3 + *(int *)(v1 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8 + *(int *)(v1 + 48), 1, v5))
    goto LABEL_2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v50 = v7;
    v38 = sub_23E134C80();
    v39 = *(_QWORD *)(v38 - 8);
    v49 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v39 + 48);
    if (!v49(v9, 2, v38))
      (*(void (**)(unint64_t, uint64_t))(v39 + 8))(v9, v38);
    v47 = v39;
    v40 = _s4KnobVMa(0);
    swift_release();
    v41 = v9 + *(int *)(v40 + 36);
    v22 = _s4KnobV10IconConfigVMa(0);
    v48 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
    if (!v48(v41, 1, v22))
    {
      swift_bridgeObjectRelease();
      v46 = v41 + *(int *)(v22 + 20);
      v42 = sub_23E136CFC();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v46, v42);
      swift_release();
    }
    v43 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v49(v43, 2, v38))
      (*(void (**)(unint64_t, uint64_t))(v47 + 8))(v43, v38);
    swift_release();
    v21 = v43 + *(int *)(v40 + 36);
    v7 = v50;
    if (!v48(v21, 1, v22))
      goto LABEL_35;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v18 = sub_23E134C80();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v9, v18);
    v20 = _s4KnobVMa(0);
    swift_release();
    v21 = v9 + *(int *)(v20 + 36);
    v22 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
    {
      v50 = v7;
LABEL_35:
      swift_bridgeObjectRelease();
      v44 = v21 + *(int *)(v22 + 20);
      v45 = sub_23E136CFC();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
      swift_release();
      v7 = v50;
    }
  }
LABEL_2:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  swift_release();
  swift_release();
  v10 = v0 + v7;
  v11 = swift_getEnumCaseMultiPayload();
  switch(v11)
  {
    case 2:
      v23 = sub_23E134C80();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      if (!v25(v10, 2, v23))
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v23);
      v26 = _s4KnobVMa(0);
      swift_release();
      v27 = v10 + *(int *)(v26 + 36);
      v16 = _s4KnobV10IconConfigVMa(0);
      v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
      if (!v28(v27, 1, v16))
      {
        swift_bridgeObjectRelease();
        v29 = v27 + *(int *)(v16 + 20);
        v30 = sub_23E136CFC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        swift_release();
      }
      v31 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      if (!v25(v31, 2, v23))
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
      swift_release();
      v15 = v31 + *(int *)(v26 + 36);
      if (!v28(v15, 1, v16))
        goto LABEL_26;
      break;
    case 1:
      v32 = sub_23E134C80();
      v33 = *(_QWORD *)(v32 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v0 + v7, 2, v32))
        (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v0 + v7, v32);
      v34 = _s4KnobVMa(0);
      swift_release();
      v15 = v10 + *(int *)(v34 + 36);
      v16 = _s4KnobV10IconConfigVMa(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
        goto LABEL_26;
      break;
    case 0:
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v7, 2, v12))
        (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v7, v12);
      v14 = _s4KnobVMa(0);
      swift_release();
      v15 = v10 + *(int *)(v14 + 36);
      v16 = _s4KnobV10IconConfigVMa(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
      {
LABEL_26:
        swift_bridgeObjectRelease();
        v35 = v15 + *(int *)(v16 + 20);
        v36 = sub_23E136CFC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
        swift_release();
      }
      break;
  }
  return swift_deallocObject();
}

uint64_t sub_23E003A58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ThermostatControlView() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(_s9KnobStateOMa(0) - 8) + 80);
  return sub_23DFFECDC(v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_23E003AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for ThermostatControlView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v3 + 120), *(_BYTE *)(v3 + 128));
  sub_23DF985F0(*(_QWORD *)(v3 + 136), *(_QWORD *)(v3 + 144), *(_QWORD *)(v3 + 152), *(_QWORD *)(v3 + 160), *(_QWORD *)(v3 + 168), *(_QWORD *)(v3 + 176), *(_QWORD *)(v3 + 184), *(_QWORD *)(v3 + 192), *(_BYTE *)(v3 + 200), *(_BYTE *)(v3 + 201));
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 48);
  v5 = _s9KnobStateOMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      if (!v26(v4, 2, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, v15);
      v23 = v16;
      v17 = v15;
      v18 = _s4KnobVMa(0);
      swift_release();
      v25 = v18;
      v19 = v4 + *(int *)(v18 + 36);
      v11 = _s4KnobV10IconConfigVMa(0);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
      if (!v24(v19, 1, v11))
      {
        swift_bridgeObjectRelease();
        v22 = v19 + *(int *)(v11 + 20);
        v20 = sub_23E136CFC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v22, v20);
        swift_release();
      }
      v21 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      if (!v26(v21, 2, v17))
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v17);
      swift_release();
      v10 = v21 + *(int *)(v25 + 36);
      if (!v24(v10, 1, v11))
        goto LABEL_7;
    }
    else if (EnumCaseMultiPayload <= 1)
    {
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 2, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
      v9 = _s4KnobVMa(0);
      swift_release();
      v10 = v4 + *(int *)(v9 + 36);
      v11 = _s4KnobV10IconConfigVMa(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
LABEL_7:
        swift_bridgeObjectRelease();
        v12 = v10 + *(int *)(v11 + 20);
        v13 = sub_23E136CFC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        swift_release();
      }
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_23E003E10(uint64_t a1)
{
  type metadata accessor for ThermostatControlView();
  return sub_23DFFEDCC(a1);
}

_QWORD *sub_23E003E54(char a1)
{
  char v1;

  v1 = a1 & 1;
  type metadata accessor for ThermostatControlView();
  return sub_23DFFE42C(v1);
}

uint64_t sub_23E003E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    if (*(_QWORD *)(v1 + 16))
    {
      MEMORY[0x24BDAC7A8](a1);
      sub_23E004A4C();
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      swift_getKeyPath();
      sub_23E135C7C();
      swift_release();
      a1 = swift_release();
      if (v6)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
        sub_23E136E70();
        a1 = sub_23DFD440C(v5, v6);
      }
    }
  }
  MEMORY[0x24BDAC7A8](a1);
  sub_23E004A4C();
  v3 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v3);
  swift_getKeyPath();
  swift_retain();
  return sub_23E135C88();
}

void sub_23E004180(uint64_t a1, _BYTE *a2)
{
  type metadata accessor for ThermostatControlView();
  sub_23DFFE7E4(a1, a2);
}

unint64_t sub_23E0041CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21018;
  if (!qword_256D21018)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FB0);
    v2[0] = sub_23DF73F28(&qword_256D21020, type metadata accessor for RingControlView, (uint64_t)&unk_23E142CE8);
    v2[1] = sub_23DF73F28(&qword_256D21028, _s22StatusTextViewModifierVMa, (uint64_t)&unk_23E140178);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21018);
  }
  return result;
}

uint64_t sub_23E004274()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThermostatControlView() - 8) + 80);
  return sub_23DFFE83C(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_23E0042A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D21030;
  if (!qword_256D21030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20ED0);
    v2 = sub_23DF73F28(&qword_256D21038, _s9KnobStateOMa, (uint64_t)&unk_23E13ED98);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D21030);
  }
  return result;
}

uint64_t sub_23E004324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThermostatControlView() - 8) + 80);
  return sub_23DFFE984(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_23E004370()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D21040;
  if (!qword_256D21040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1ECB0);
    v2 = sub_23E0043D4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D21040);
  }
  return result;
}

unint64_t sub_23E0043D4()
{
  unint64_t result;

  result = qword_256D21048;
  if (!qword_256D21048)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ThermostatState, &type metadata for Device.Control.ThermostatState);
    atomic_store(result, (unint64_t *)&qword_256D21048);
  }
  return result;
}

uint64_t sub_23E004418()
{
  return sub_23DF8E904(&qword_256D21058, &qword_256D20FE8, (uint64_t (*)(void))sub_23E00443C, MEMORY[0x24BDECC60]);
}

unint64_t sub_23E00443C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D21060;
  if (!qword_256D21060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FE0);
    v2[0] = sub_23E0044A8();
    v2[1] = sub_23DFC5014();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21060);
  }
  return result;
}

unint64_t sub_23E0044A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_256D21068;
  if (!qword_256D21068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FD8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FC8);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1ECB0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FC0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20ED0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FB8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FB0);
    sub_23E0041CC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_23E0042A4();
    v4[2] = v2;
    v4[3] = v3;
    v4[4] = swift_getOpaqueTypeConformance2();
    v4[5] = sub_23E004370();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_256D21068);
  }
  return result;
}

_QWORD *sub_23E004628(uint64_t a1)
{
  type metadata accessor for ThermostatControlView();
  return sub_23DFFEAB8(a1);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for ThermostatControlView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v3 + 120), *(_BYTE *)(v3 + 128));
  sub_23DF985F0(*(_QWORD *)(v3 + 136), *(_QWORD *)(v3 + 144), *(_QWORD *)(v3 + 152), *(_QWORD *)(v3 + 160), *(_QWORD *)(v3 + 168), *(_QWORD *)(v3 + 176), *(_QWORD *)(v3 + 184), *(_QWORD *)(v3 + 192), *(_BYTE *)(v3 + 200), *(_BYTE *)(v3 + 201));
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 48);
  v5 = _s9KnobStateOMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      if (!v26(v4, 2, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, v15);
      v23 = v16;
      v17 = v15;
      v18 = _s4KnobVMa(0);
      swift_release();
      v25 = v18;
      v19 = v4 + *(int *)(v18 + 36);
      v11 = _s4KnobV10IconConfigVMa(0);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
      if (!v24(v19, 1, v11))
      {
        swift_bridgeObjectRelease();
        v22 = v19 + *(int *)(v11 + 20);
        v20 = sub_23E136CFC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v22, v20);
        swift_release();
      }
      v21 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      if (!v26(v21, 2, v17))
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v17);
      swift_release();
      v10 = v21 + *(int *)(v25 + 36);
      if (!v24(v10, 1, v11))
        goto LABEL_7;
    }
    else if (EnumCaseMultiPayload <= 1)
    {
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 2, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
      v9 = _s4KnobVMa(0);
      swift_release();
      v10 = v4 + *(int *)(v9 + 36);
      v11 = _s4KnobV10IconConfigVMa(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
LABEL_7:
        swift_bridgeObjectRelease();
        v12 = v10 + *(int *)(v11 + 20);
        v13 = sub_23E136CFC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        swift_release();
      }
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0049AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThermostatControlView() - 8) + 80);
  return sub_23DFFEB98(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_23E0049D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D1FD88;
  if (!qword_256D1FD88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FD80);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256D1FD88);
  }
  return result;
}

uint64_t sub_23E004A34()
{
  return 16;
}

__n128 sub_23E004A40(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_23E004A4C()
{
  unint64_t result;

  result = qword_256D21080;
  if (!qword_256D21080)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ThermostatState, &type metadata for Device.Control.ThermostatState);
    atomic_store(result, (unint64_t *)&qword_256D21080);
  }
  return result;
}

uint64_t sub_23E004A90(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_23E004AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E004B08()
{
  return sub_23DF8E904(&qword_256D21088, &qword_256D21008, (uint64_t (*)(void))sub_23E004B3C, MEMORY[0x24BDF0910]);
}

unint64_t sub_23E004B3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D21090;
  if (!qword_256D21090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D21000);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D20FF0);
    v2[3] = sub_23DF8E904(&qword_256D21050, &qword_256D20FF0, sub_23E004418, MEMORY[0x24BDECC60]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D21090);
  }
  return result;
}

uint64_t MatterControlSolver.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MatterControlSolver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

HomeAccessoryControlUI::MatterControlSolver::ControlIdentifier_optional __swiftcall MatterControlSolver.ControlIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeAccessoryControlUI::MatterControlSolver::ControlIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E1375B4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MatterControlSolver.ControlIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E004CA8 + 4 * byte_23E13BCE0[*v0]))(1701736302, 0xE400000000000000);
}

unint64_t sub_23E004CA8()
{
  return 0xD000000000000013;
}

uint64_t sub_23E004CC4()
{
  return 0x7472617453637672;
}

uint64_t sub_23E004CE8()
{
  return 0x6D6F486F47637672;
}

void sub_23E004D04(char *a1)
{
  sub_23E09B208(*a1);
}

void sub_23E004D10()
{
  char *v0;

  sub_23E004D18(*v0);
}

void sub_23E004D18(char a1)
{
  sub_23E137698();
  __asm { BR              X10 }
}

uint64_t sub_23E004D60()
{
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t sub_23E004DE4()
{
  sub_23E137698();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

void sub_23E004E88()
{
  __asm { BR              X10 }
}

uint64_t sub_23E004EBC()
{
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

void sub_23E004F2C(uint64_t a1)
{
  char *v1;

  sub_23E122B5C(a1, *v1);
}

HomeAccessoryControlUI::MatterControlSolver::ControlIdentifier_optional sub_23E004F34(Swift::String *a1)
{
  return MatterControlSolver.ControlIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_23E004F40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E004F68 + 4 * byte_23E13BCEC[*v0]))();
}

void sub_23E004F68(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000023E144260;
}

void sub_23E004F88(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "rvcStartPause");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_23E004FB0(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F486F47637672;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_23E004FD0()
{
  sub_23E00B224();
  return sub_23E137254();
}

uint64_t sub_23E00502C()
{
  sub_23E00B224();
  return sub_23E137248();
}

uint64_t MatterControlSolver.SourcePath.endpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E134FEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MatterControlSolver.SourcePath.clusterKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MatterControlSolver.SourcePath(0);
  return sub_23DF89C1C(v1 + *(int *)(v3 + 20), a1, &qword_256D1EEE0);
}

uint64_t type metadata accessor for MatterControlSolver.SourcePath(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D211E8);
}

uint64_t MatterControlSolver.SourcePath.controlId.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MatterControlSolver.SourcePath(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t MatterControlSolver.SourcePath.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_23E137530();
  swift_bridgeObjectRelease();
  v8 = 3829371;
  v9 = 0xE300000000000000;
  v7 = sub_23E134FE0();
  sub_23E1375FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  sub_23E1371D0();
  LOWORD(v7) = sub_23E134FC8();
  sub_23E1375FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  sub_23E1371D0();
  v4 = type metadata accessor for MatterControlSolver.SourcePath(0);
  sub_23DF89C1C(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_256D1EEE0);
  sub_23E137188();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  sub_23E1371D0();
  return v8;
}

uint64_t MatterControlSolver.SourcePath.copyWith(newCluster:newControlID:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a1;
  v29 = a3;
  v27 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v5 = MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  v16 = sub_23E134FEC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v3, v16);
  sub_23DF89C1C(v28, (uint64_t)v13, &qword_256D1EEE0);
  v28 = v3;
  sub_23E00550C(v3, (uint64_t)v9);
  v21 = sub_23E134E78();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v21) == 1)
  {
    v23 = v27;
    sub_23DF89C1C((uint64_t)&v9[*(int *)(v27 + 20)], (uint64_t)v15, &qword_256D1EEE0);
    sub_23E005550((uint64_t)v9);
    sub_23DF89C7C((uint64_t)v13, &qword_256D1EEE0);
  }
  else
  {
    sub_23E005550((uint64_t)v9);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v15, v13, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v15, 0, 1, v21);
    v23 = v27;
  }
  sub_23E00550C(v28, (uint64_t)v7);
  if (v20 == 4)
    LOBYTE(v20) = v7[*(int *)(v23 + 24)];
  sub_23E005550((uint64_t)v7);
  v24 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v29, v19, v16);
  result = sub_23DF89340((uint64_t)v15, v24 + *(int *)(v23 + 20), &qword_256D1EEE0);
  *(_BYTE *)(v24 + *(int *)(v23 + 24)) = v20;
  return result;
}

uint64_t sub_23E00550C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MatterControlSolver.SourcePath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E005550(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MatterControlSolver.SourcePath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void MatterControlSolver.SourcePath.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23E134E78();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23E134C80();
  MEMORY[0x24BDAC7A8](v4);
  v5 = objc_msgSend((id)objc_opt_self(), sel_hmf_zeroUUID);
  sub_23E134C5C();

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD78);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23E13C150;
  sub_23E134FE0();
  *(_QWORD *)(v6 + 32) = sub_23E1375FC();
  *(_QWORD *)(v6 + 40) = v7;
  sub_23E134FC8();
  *(_QWORD *)(v6 + 48) = sub_23E1375FC();
  *(_QWORD *)(v6 + 56) = v8;
  v9 = (char *)&loc_23E00572C
     + dword_23E005914[*(unsigned __int8 *)(v1
                                          + *(int *)(type metadata accessor for MatterControlSolver.SourcePath(0) + 24))];
  __asm { BR              X12 }
}

uint64_t sub_23E00573C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  id v18;

  v8[8] = 0xD000000000000013;
  v8[9] = 0x800000023E144260;
  sub_23DF89C1C(v7 + *(int *)(a1 + 20), v6, &qword_256D1EEE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v6, 1, v3) == 1)
  {
    sub_23DF89C7C(v6, &qword_256D1EEE0);
  }
  else
  {
    *(_QWORD *)(v9 - 120) = v4;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v5, v6, v3);
    *(_DWORD *)(v9 - 96) = sub_23E134E6C();
    v10 = sub_23E1375FC();
    v12 = v11;
    v14 = v8[2];
    v13 = v8[3];
    if (v14 >= v13 >> 1)
      v8 = sub_23E007E10((_QWORD *)(v13 > 1), v14 + 1, 1, v8);
    v8[2] = v14 + 1;
    v15 = &v8[2 * v14];
    v15[4] = v10;
    v15[5] = v12;
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v5, v3);
    v4 = *(void **)(v9 - 120);
  }
  v16 = (void *)sub_23E134C38();
  v17 = (void *)sub_23E137260();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v4, sel_hmf_UUIDWithNamespace_data_salts_, v16, 0, v17);

  sub_23E134C5C();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 112) + 8))(v2, *(_QWORD *)(v9 - 104));
}

void MatterControlSolver.SourcePath.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_23E134E78();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E134FEC();
  sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
  sub_23E13711C();
  v8 = type metadata accessor for MatterControlSolver.SourcePath(0);
  sub_23DF89C1C(v0 + *(int *)(v8 + 20), (uint64_t)v7, &qword_256D1EEE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  __asm { BR              X10 }
}

uint64_t sub_23E005AD0()
{
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E005B5C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4B72657473756C63;
  if (*v0 != 1)
    v1 = 0x496C6F72746E6F63;
  if (*v0)
    return v1;
  else
    return 0x746E696F70646E65;
}

uint64_t sub_23E005BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E00B094(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E005BF0()
{
  return 0;
}

void sub_23E005BFC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23E005C08()
{
  sub_23E008F74();
  return sub_23E1376F8();
}

uint64_t sub_23E005C30()
{
  sub_23E008F74();
  return sub_23E137704();
}

uint64_t MatterControlSolver.SourcePath.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21098);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E008F74();
  sub_23E1376EC();
  v11[15] = 0;
  sub_23E134FEC();
  sub_23DF73F28(&qword_256D210A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4D9F8]);
  sub_23E1375E4();
  if (!v2)
  {
    v9 = type metadata accessor for MatterControlSolver.SourcePath(0);
    v11[14] = 1;
    sub_23E134E78();
    sub_23DF73F28(&qword_256D210B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D550]);
    sub_23E1375D8();
    v11[13] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_23E008FB8();
    sub_23E1375E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void MatterControlSolver.SourcePath.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_23E134E78();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23E134FEC();
  sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
  sub_23E13711C();
  v8 = type metadata accessor for MatterControlSolver.SourcePath(0);
  sub_23DF89C1C(v0 + *(int *)(v8 + 20), (uint64_t)v7, &qword_256D1EEE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  __asm { BR              X10 }
}

uint64_t sub_23E005FD4()
{
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t MatterControlSolver.SourcePath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v21 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23E134FEC();
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D210C0);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MatterControlSolver.SourcePath(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E008F74();
  v24 = v9;
  v13 = (uint64_t)v27;
  sub_23E1376E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v14 = (uint64_t)v22;
  v20 = v7;
  v27 = a1;
  v15 = (uint64_t)v12;
  v31 = 0;
  sub_23DF73F28(&qword_256D210C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA10]);
  v17 = v23;
  v16 = v24;
  sub_23E1375CC();
  v19[1] = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v17, v25);
  sub_23E134E78();
  v30 = 1;
  sub_23DF73F28(&qword_256D210D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D568]);
  sub_23E1375C0();
  sub_23DF89340(v14, v15 + *(int *)(v10 + 20), &qword_256D1EEE0);
  v28 = 2;
  sub_23E008FFC();
  sub_23E1375CC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v26);
  *(_BYTE *)(v15 + *(int *)(v10 + 24)) = v29;
  sub_23E00550C(v15, v21);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  return sub_23E005550(v15);
}

void sub_23E0063DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = sub_23E134E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E134FEC();
  sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
  sub_23E13711C();
  sub_23DF89C1C(v2 + *(int *)(a2 + 20), (uint64_t)v10, &qword_256D1EEE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __asm { BR              X10 }
}

uint64_t sub_23E006588()
{
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

void sub_23E006608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = sub_23E134E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23E134FEC();
  sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
  sub_23E13711C();
  sub_23DF89C1C(v2 + *(int *)(a2 + 20), (uint64_t)v10, &qword_256D1EEE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __asm { BR              X10 }
}

uint64_t sub_23E0067C8()
{
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t sub_23E006850@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MatterControlSolver.SourcePath.init(from:)(a1, a2);
}

uint64_t sub_23E006864(_QWORD *a1)
{
  return MatterControlSolver.SourcePath.encode(to:)(a1);
}

void MatterControlSolver.Source.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v12[4];

  v1 = sub_23E13552C();
  v12[2] = *(_QWORD *)(v1 - 8);
  v12[3] = v1;
  MEMORY[0x24BDAC7A8](v1);
  v12[1] = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED8);
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23E134E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEE0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E134FEC();
  sub_23DF73F28(&qword_256D1EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D9E8], MEMORY[0x24BE4DA00]);
  sub_23E13711C();
  v11 = type metadata accessor for MatterControlSolver.SourcePath(0);
  sub_23DF89C1C(v0 + *(int *)(v11 + 20), (uint64_t)v10, &qword_256D1EEE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1D770, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D540], MEMORY[0x24BE4D558]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __asm { BR              X10 }
}

uint64_t sub_23E006AA0()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23E1371C4();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  sub_23DF89C1C(v1 + v6[5], v4, &qword_256D1EED8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    v7 = *(_QWORD *)(v5 - 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v4, v2);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EEF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E068], MEMORY[0x24BE4E078]);
    sub_23E13711C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
  }
  v8 = *(_QWORD *)(v1 + v6[6]);
  swift_bridgeObjectRetain();
  sub_23E00840C(v0, v8);
  swift_bridgeObjectRelease();
  sub_23E1376B0();
  if (*(_BYTE *)(v1 + v6[8] + 2) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376BC();
  }
  sub_23E134E60();
  sub_23DF73F28(&qword_256D1EF00, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D520], MEMORY[0x24BE4D530]);
  sub_23E13711C();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E006CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int64_t v61;
  _BOOL4 v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = sub_23E135130();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - v8;
  v10 = sub_23E134E78();
  v64 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21328);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v52 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v57 = v15;
  v58 = a2;
  v61 = 0;
  v56 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v54 = v20;
  v55 = (unint64_t)(v22 + 63) >> 6;
  v53 = v55 - 1;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v26 = (v24 - 1) & v24;
      v27 = v25 | (v61 << 6);
LABEL_8:
      v28 = v56;
      (*(void (**)(char *, unint64_t, uint64_t))(v64 + 16))(v15, *(_QWORD *)(v56 + 48) + *(_QWORD *)(v64 + 72) * v27, v65);
      v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v5 + 72) * v27;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21330);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(&v15[*(int *)(v30 + 48)], v29, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 0, 1, v30);
      goto LABEL_30;
    }
    v31 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v31 < v55)
    {
      v32 = *(_QWORD *)(v54 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v61 + 2;
      ++v61;
      if (v31 + 1 < v55)
      {
        v32 = *(_QWORD *)(v54 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v61 = v31 + 1;
        if (v31 + 2 < v55)
        {
          v32 = *(_QWORD *)(v54 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v61 = v31 + 2;
          if (v31 + 3 < v55)
          {
            v32 = *(_QWORD *)(v54 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            v33 = v31 + 4;
            v61 = v31 + 3;
            if (v31 + 4 < v55)
              break;
          }
        }
      }
    }
LABEL_29:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21330);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    v26 = 0;
LABEL_30:
    sub_23DF89340((uint64_t)v15, (uint64_t)v18, &qword_256D21328);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21330);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v18, 1, v35);
    v62 = v36 == 1;
    if (v36 == 1)
      return v62;
    v63 = v26;
    v37 = &v18[*(int *)(v35 + 48)];
    v39 = v64;
    v38 = v65;
    v40 = v5;
    v41 = (uint64_t)v60;
    v42 = v18;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v18, v65);
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v9, v37, v4);
    v43 = v58;
    v44 = v9;
    v45 = sub_23DF84B78(v41);
    v47 = v46;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
    if ((v47 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v4);
      return 0;
    }
    v48 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v40 + 72) * v45;
    v49 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v59, v48, v4);
    sub_23DF73F28(&qword_256D21338, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DB00], MEMORY[0x24BE4DB18]);
    v50 = sub_23E137158();
    v51 = *(void (**)(char *, uint64_t))(v40 + 8);
    v51(v49, v4);
    result = ((uint64_t (*)(char *, uint64_t))v51)(v44, v4);
    v9 = v44;
    v5 = v40;
    v15 = v57;
    v18 = v42;
    v24 = v63;
    if ((v50 & 1) == 0)
      return v62;
  }
  v32 = *(_QWORD *)(v54 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v26 = (v32 - 1) & v32;
    v27 = __clz(__rbit64(v32)) + (v31 << 6);
    v61 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v55)
    {
      v61 = v53;
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(v54 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t MatterControlSolver.Source.hashValue.getter()
{
  sub_23E137698();
  MatterControlSolver.Source.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23E0071C8()
{
  sub_23E137698();
  MatterControlSolver.Source.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23E007208()
{
  sub_23E137698();
  MatterControlSolver.Source.hash(into:)();
  return sub_23E1376D4();
}

uint64_t MatterControlSolver.Source.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;

  v4 = sub_23E134C80();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135370();
  v9 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v10 = a2 + *(int *)(v9 + 20);
  v11 = sub_23E134E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_BYTE *)(a2 + *(int *)(v9 + 24)) = 0;
  v12 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  sub_23E135388();
  *(_QWORD *)(a2 + v12[6]) = sub_23E1353A0();
  *(_BYTE *)(a2 + v12[7]) = sub_23E135364() == 1;
  v13 = sub_23E13537C();
  v14 = a2 + v12[8];
  *(_WORD *)v14 = v13;
  *(_BYTE *)(v14 + 2) = BYTE2(v13) & 1;
  sub_23E135358();
  v20 = 0x746E696F70646E65;
  v21 = 0xE90000000000002DLL;
  sub_23E135394();
  sub_23DF73F28(&qword_256D1D810, v5, MEMORY[0x24BDCEAB8]);
  sub_23E1375FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  v15 = v20;
  v16 = v21;
  v17 = sub_23E1353AC();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  v19 = (uint64_t *)(a2 + v12[10]);
  *v19 = v15;
  v19[1] = v16;
  return result;
}

{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;

  v4 = sub_23E134C80();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1352D4();
  v9 = type metadata accessor for MatterControlSolver.SourcePath(0);
  v10 = a2 + *(int *)(v9 + 20);
  v11 = sub_23E134E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_BYTE *)(a2 + *(int *)(v9 + 24)) = 0;
  v12 = (int *)type metadata accessor for MatterControlSolver.Source(0);
  sub_23E1352E0();
  *(_QWORD *)(a2 + v12[6]) = sub_23E1352F8();
  *(_BYTE *)(a2 + v12[7]) = 1;
  v13 = a2 + v12[8];
  *(_WORD *)v13 = 0;
  *(_BYTE *)(v13 + 2) = 1;
  sub_23E1352C8();
  v19 = 0x746E696F70646E65;
  v20 = 0xE90000000000002DLL;
  sub_23E1352EC();
  sub_23DF73F28(&qword_256D1D810, v5, MEMORY[0x24BDCEAB8]);
  sub_23E1375FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  v14 = v19;
  v15 = v20;
  v16 = sub_23E135304();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
  v18 = (uint64_t *)(a2 + v12[10]);
  *v18 = v14;
  v18[1] = v15;
  return result;
}

_QWORD *sub_23E0075CC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E007710(a1, a2, a3, a4, &qword_256D21378);
}

_QWORD *sub_23E0075D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D21358);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00AB08(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E0076E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D20C58, type metadata accessor for Device.ControlGroup);
}

char *sub_23E0076F8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E007BB4(a1, a2, a3, a4, &qword_256D21370);
}

_QWORD *sub_23E007704(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E007710(a1, a2, a3, a4, &qword_256D21360);
}

_QWORD *sub_23E007710(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00ABF8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E007818(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D1D600, type metadata accessor for Device.Control);
}

uint64_t sub_23E00782C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23E137560();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23E00B454(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_23E007A38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23E00ACE0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E007B58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D21350, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DC28]);
}

uint64_t sub_23E007B6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D1D538, type metadata accessor for AccessoryControlInfo.Writer);
}

uint64_t sub_23E007B80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D21308, type metadata accessor for AccessoryControlInfo);
}

uint64_t sub_23E007B94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D1F350, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DCB8]);
}

char *sub_23E007BA8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E007BB4(a1, a2, a3, a4, &qword_256D212F8);
}

char *sub_23E007BB4(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23E00AEC0(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E007CA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D1F740, type metadata accessor for ColorControl.GridElement);
}

_QWORD *sub_23E007CBC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E0080A0(a1, a2, a3, a4, &qword_256D213E0, &qword_256D1F6F0);
}

_QWORD *sub_23E007CD0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E007CF8(a1, a2, a3, a4, &qword_256D213D8);
}

_QWORD *sub_23E007CE4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E007CF8(a1, a2, a3, a4, &qword_256D213D0);
}

_QWORD *sub_23E007CF8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00ADD4(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E007E10(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD78);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00AFA4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E007F1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D21368);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00ABF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E008028(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D1D540, type metadata accessor for AccessoryControlGroup);
}

uint64_t sub_23E00803C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D213C8, type metadata accessor for AccessoryControlDecorationButton.OverlayModifier.ButtonAlignmentGroup);
}

uint64_t sub_23E008050(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D213C0, type metadata accessor for AccessoryControlDecorationButton.Config);
}

uint64_t sub_23E008064(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D213B0, _s17FavoriteColorCellV5ValueOMa);
}

uint64_t sub_23E008078(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D213A8, (uint64_t (*)(_QWORD))MEMORY[0x24BE4E540]);
}

_QWORD *sub_23E00808C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E0080A0(a1, a2, a3, a4, &qword_256D21390, &qword_256D21398);
}

_QWORD *sub_23E0080A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E00B268(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E0081B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E00782C(a1, a2, a3, a4, &qword_256D213A0, _s21ColorSwatchPickerViewV9CellValueOMa);
}

