uint64_t initializeWithTake for Proto_Gnss_Emergency_GanssMeasurements(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v56;
  char *__dst;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = (char *)(a1 + v18);
  v22 = (char *)(a2 + v18);
  v23 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasuredParams?);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    v21[*(int *)(v23 + 20)] = v22[*(int *)(v23 + 20)];
    v26 = *(int *)(v23 + 24);
    __dst = &v21[v26];
    v27 = &v22[v26];
    v28 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
    v56 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v27, 1, v28))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasured?);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v7((uint64_t)__dst, (uint64_t)v27, v6);
      *(_QWORD *)&__dst[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(void))(v56 + 56))();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v30 = a3[11];
  v31 = a3[12];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = (char *)(a1 + v31);
  v35 = (char *)(a2 + v31);
  v36 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss?);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v34, (uint64_t)v35, v6);
    v34[*(int *)(v36 + 20)] = v35[*(int *)(v36 + 20)];
    v39 = *(int *)(v36 + 24);
    v40 = &v34[v39];
    v41 = &v35[v39];
    v42 = (void (*)(char *, char *, uint64_t))v7;
    v43 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
    v44 = *((_QWORD *)v43 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v44 + 48))(v41, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssSignalMeasurementInfo?);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v42(&v40[v43[5]], &v41[v43[5]], v6);
      v46 = v43[6];
      v47 = &v40[v46];
      v48 = &v41[v46];
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      v49 = v43[7];
      v50 = &v40[v49];
      v51 = &v41[v49];
      *(_DWORD *)v50 = *(_DWORD *)v51;
      v50[4] = v51[4];
      v52 = v43[8];
      v53 = &v40[v52];
      v54 = &v41[v52];
      *(_DWORD *)v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v44 + 56))(v40, 0, 1, v43);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_GanssMeasurements(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  int v54;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  size_t v63;
  void *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int *v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, int *);
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  void (*v102)(char *, char *, uint64_t);
  char *__dst;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;

  v6 = type metadata accessor for UnknownStorage();
  v105 = *(_QWORD *)(v6 - 8);
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 40);
  v104(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = (_BYTE *)(a1 + v17);
  v21 = (_BYTE *)(a2 + v17);
  v22 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v34 = v6;
      v104((uint64_t)v20, (uint64_t)v21, v6);
      v20[*(int *)(v22 + 20)] = v21[*(int *)(v22 + 20)];
      v35 = *(int *)(v22 + 24);
      v36 = &v20[v35];
      v37 = &v21[v35];
      v38 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
      v41 = v40(v36, 1, v38);
      v42 = v40(v37, 1, v38);
      if (v41)
      {
        if (!v42)
        {
          v6 = v34;
          (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v36, v37, v34);
          *(_QWORD *)&v36[*(int *)(v38 + 20)] = *(_QWORD *)&v37[*(int *)(v38 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
          goto LABEL_16;
        }
      }
      else
      {
        if (!v42)
        {
          v6 = v34;
          v104((uint64_t)v36, (uint64_t)v37, v34);
          *(_QWORD *)&v36[*(int *)(v38 + 20)] = *(_QWORD *)&v37[*(int *)(v38 + 20)];
          swift_release();
          goto LABEL_16;
        }
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v36, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
      }
      v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasured?);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      v6 = v34;
      goto LABEL_16;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
LABEL_7:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasuredParams?);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_16;
  }
  if (v26)
    goto LABEL_7;
  v102 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
  v102(v20, v21, v6);
  v20[*(int *)(v22 + 20)] = v21[*(int *)(v22 + 20)];
  v27 = *(int *)(v22 + 24);
  __dst = &v20[v27];
  v28 = &v21[v27];
  v29 = v6;
  v30 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasured?);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v102(__dst, v28, v29);
    *(_QWORD *)&__dst[*(int *)(v30 + 20)] = *(_QWORD *)&v28[*(int *)(v30 + 20)];
    (*(void (**)(void))(v31 + 56))();
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  v6 = v29;
LABEL_16:
  v44 = a3[11];
  v45 = a3[12];
  v46 = a1 + v44;
  v47 = a2 + v44;
  *(_DWORD *)v46 = *(_DWORD *)v47;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  v48 = a1 + v45;
  v49 = (char *)(a2 + v45);
  v50 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52((uint64_t)v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      v104(v48, (uint64_t)v49, v6);
      *(_BYTE *)(v48 + *(int *)(v50 + 20)) = v49[*(int *)(v50 + 20)];
      v66 = *(int *)(v50 + 24);
      v67 = (char *)(v48 + v66);
      v68 = &v49[v66];
      v69 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
      v70 = *((_QWORD *)v69 - 1);
      v71 = *(uint64_t (**)(char *, uint64_t, int *))(v70 + 48);
      v72 = v71(v67, 1, v69);
      v73 = v71(v68, 1, v69);
      if (v72)
      {
        if (!v73)
        {
          *(_QWORD *)v67 = *(_QWORD *)v68;
          (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v67[v69[5]], &v68[v69[5]], v6);
          v74 = v69[6];
          v75 = &v67[v74];
          v76 = &v68[v74];
          *(_DWORD *)v75 = *(_DWORD *)v76;
          v75[4] = v76[4];
          v77 = v69[7];
          v78 = &v67[v77];
          v79 = &v68[v77];
          *(_DWORD *)v78 = *(_DWORD *)v79;
          v78[4] = v79[4];
          v80 = v69[8];
          v81 = &v67[v80];
          v82 = &v68[v80];
          *(_DWORD *)v81 = *(_DWORD *)v82;
          v81[4] = v82[4];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v70 + 56))(v67, 0, 1, v69);
          return a1;
        }
      }
      else
      {
        if (!v73)
        {
          *(_QWORD *)v67 = *(_QWORD *)v68;
          swift_bridgeObjectRelease();
          v104((uint64_t)&v67[v69[5]], (uint64_t)&v68[v69[5]], v6);
          v93 = v69[6];
          v94 = &v67[v93];
          v95 = &v68[v93];
          *(_DWORD *)v94 = *(_DWORD *)v95;
          v94[4] = v95[4];
          v96 = v69[7];
          v97 = &v67[v96];
          v98 = &v68[v96];
          *(_DWORD *)v97 = *(_DWORD *)v98;
          v97[4] = v98[4];
          v99 = v69[8];
          v100 = &v67[v99];
          v101 = &v68[v99];
          *(_DWORD *)v100 = *(_DWORD *)v101;
          v100[4] = v101[4];
          return a1;
        }
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v67, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
      }
      v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssSignalMeasurementInfo?)
                                  - 8)
                      + 64);
      v64 = v67;
      v65 = v68;
      goto LABEL_23;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v48, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
LABEL_22:
    v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss?)
                                - 8)
                    + 64);
    v64 = (void *)v48;
    v65 = v49;
LABEL_23:
    memcpy(v64, v65, v63);
    return a1;
  }
  if (v54)
    goto LABEL_22;
  v55 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 32);
  v55(v48, v49, v6);
  *(_BYTE *)(v48 + *(int *)(v50 + 20)) = v49[*(int *)(v50 + 20)];
  v56 = *(int *)(v50 + 24);
  v57 = (_QWORD *)(v48 + v56);
  v58 = &v49[v56];
  v59 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  v60 = v6;
  v61 = *((_QWORD *)v59 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v61 + 48))(v58, 1, v59))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssSignalMeasurementInfo?);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    *v57 = *(_QWORD *)v58;
    v55((uint64_t)v57 + v59[5], &v58[v59[5]], v60);
    v83 = v59[6];
    v84 = (char *)v57 + v83;
    v85 = &v58[v83];
    *(_DWORD *)v84 = *(_DWORD *)v85;
    v84[4] = v85[4];
    v86 = v59[7];
    v87 = (char *)v57 + v86;
    v88 = &v58[v86];
    *(_DWORD *)v87 = *(_DWORD *)v88;
    v87[4] = v88[4];
    v89 = v59[8];
    v90 = (char *)v57 + v89;
    v91 = &v58[v89];
    *(_DWORD *)v90 = *(_DWORD *)v91;
    v90[4] = v91[4];
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v61 + 56))(v57, 0, 1, v59);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssMeasurements()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B28114(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 249)
  {
    if (*(unsigned __int8 *)(a1 + a3[5]) <= 6u)
      v9 = 6;
    else
      v9 = *(unsigned __int8 *)(a1 + a3[5]);
    v10 = v9 - 6;
    if (*(unsigned __int8 *)(a1 + a3[5]) >= 6u)
      return v10;
    else
      return 0;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasuredParams?);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[10];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss?);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[12];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssMeasurements()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B281F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 249)
    {
      *(_BYTE *)(a1 + a4[5]) = a2 + 6;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasuredParams?);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[10];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss?);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[12];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Proto_Gnss_Emergency_GanssMeasurements()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssTimeMeasuredParams?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GpsMeasurementElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = a3[13];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_GpsMeasurementElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_GpsMeasurementElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = (int *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)v27 = v29;
  v30 = a3[13];
  v31 = a1 + v30;
  v32 = a2 + v30;
  LOBYTE(v29) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v29;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_GpsMeasurementElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_GpsMeasurementElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsMeasurementElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B289C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 44)) <= 6u)
    v9 = 6;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
  v10 = v9 - 6;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 44)) >= 6u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsMeasurementElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B28A50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 44)) = a2 + 6;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GpsMeasurementElement()
{
  return type metadata completion function for Proto_Gnss_Emergency_GanssMeasurementElement();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsMeasurements()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsMeasurements()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_MeasurementReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_MeasurementReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsAssistanceRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsAssistanceRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssTimeModelElem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssTimeModelElem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GanssDataBitAssist(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v7 + v19;
    v22 = (char *)a2 + v19;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = (char *)v7 + v20;
    v24 = (char *)a2 + v20;
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    v25 = a3[10];
    v26 = (char *)v7 + v25;
    v27 = (char *)a2 + v25;
    LODWORD(v21) = *(_DWORD *)v27;
    v26[4] = v27[4];
    *(_DWORD *)v26 = (_DWORD)v21;
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_GanssDataBitAssist(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  v21 = (char *)a1 + v18;
  v22 = (char *)a2 + v18;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v23 = a3[10];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  LODWORD(v19) = *(_DWORD *)v25;
  v24[4] = v25[4];
  *(_DWORD *)v24 = (_DWORD)v19;
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_GanssDataBitAssist(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v17;
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = v20[4];
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v21;
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = v24[4];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v25;
  v26 = a3[10];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = v28[4];
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v27[4] = v29;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gnss_Emergency_GanssDataBitAssist(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)v23 = (_DWORD)v18;
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_GanssDataBitAssist(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)v23 = (_DWORD)v18;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssDataBitAssist()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssDataBitAssist()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GanssDataBitAssist()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssStoredSatDataElem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssStoredSatDataElem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GanssNavModelAddData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v7 + v19;
    v22 = (char *)a2 + v19;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = (char *)v7 + v20;
    v24 = (char *)a2 + v20;
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_GanssNavModelAddData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  v21 = (char *)a1 + v18;
  v22 = (char *)a2 + v18;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_GanssNavModelAddData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v17;
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = v20[4];
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v21;
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = v24[4];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v25;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gnss_Emergency_GanssNavModelAddData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_GanssNavModelAddData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssNavModelAddData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssNavModelAddData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GanssNavModelAddData()
{
  return type metadata completion function for Proto_Gnss_Emergency_GanssNavModelAddData();
}

{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_HorizWithVertVelocity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_HorizWithVertVelocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_HorizWithVertVelocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_HorizWithVertVelocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_HorizWithVertVelocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssAddAssistDataChoices()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssAddAssistDataChoices()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssAidRequestPerGanss()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssAidRequestPerGanss()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GpsAssistanceRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[9];
    v20 = a3[10];
    v21 = (char *)v7 + v19;
    v22 = (char *)a2 + v19;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = (char *)v7 + v20;
    v24 = (char *)a2 + v20;
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    v25 = a3[11];
    v26 = (char *)v7 + v25;
    v27 = (char *)a2 + v25;
    LODWORD(v21) = *(_DWORD *)v27;
    v26[4] = v27[4];
    *(_DWORD *)v26 = (_DWORD)v21;
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_GpsAssistanceRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  v18 = a3[9];
  v19 = a3[10];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = (char *)a1 + v19;
  v23 = (char *)a2 + v19;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  v24 = a3[11];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  LODWORD(v20) = *(_DWORD *)v26;
  v25[4] = v26[4];
  *(_DWORD *)v25 = (_DWORD)v20;
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_GpsAssistanceRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v17;
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = v20[4];
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v21;
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = v24[4];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v25;
  v26 = a3[11];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = v28[4];
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v27[4] = v29;
  return a1;
}

_OWORD *initializeWithTake for Proto_Gnss_Emergency_GpsAssistanceRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[9];
  v17 = a3[10];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = a3[11];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)v23 = (_DWORD)v18;
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_GpsAssistanceRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[9];
  v17 = a3[10];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = a3[11];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)v23 = (_DWORD)v18;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GanssAssistanceRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_117Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GanssAssistanceRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_118Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GpsAssistanceRequest()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_AssistanceNeededReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_AssistanceNeededReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_Polygon(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    *(_DWORD *)v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_Polygon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_Polygon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gnss_Emergency_Polygon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v12[4];
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_Polygon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v12[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_EutranCellTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_EutranCellTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_ClsGeranCellTime(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v22[4] = v23[4];
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    v24[4] = v25[4];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v26 = a3[11];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v27[4] = v28[4];
    *(_DWORD *)v27 = *(_DWORD *)v28;
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_ClsGeranCellTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_ClsGeranCellTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_BYTE *)(v33 + 4);
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = v34;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_ClsGeranCellTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_ClsGeranCellTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_ClsGeranCellTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_ClsGeranCellTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_ClsGeranCellTime()
{
  return type metadata completion function for Proto_Gnss_Emergency_ClsGeranCellTime();
}

{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsTowCdmaCellTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsTowCdmaCellTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CtsEutranCellTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CtsEutranCellTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      v19 = *(int *)(v12 + 24);
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v22 = a3[6];
    v23 = a3[7];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = (char *)a1 + v23;
    v27 = (char *)a2 + v23;
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t a1, uint64_t a2)
{
  return destroy for Proto_Gnss_Emergency_ClsUtranCellTime(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = *(int *)(v11 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  int v33;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v43 = a3;
  v44 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v35 = *(int *)(v12 + 20);
      v36 = &v10[v35];
      v37 = &v11[v35];
      v38 = v37[4];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v36[4] = v38;
      v39 = *(int *)(v12 + 24);
      v40 = &v10[v39];
      v41 = &v11[v39];
      v42 = v41[4];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v40[4] = v42;
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  v17 = *(int *)(v12 + 20);
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = v19[4];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v20;
  v21 = *(int *)(v12 + 24);
  v22 = &v10[v21];
  v23 = &v11[v21];
  v24 = v23[4];
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v22[4] = v24;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v26 = *(int *)(v43 + 24);
  v27 = a1 + v26;
  v28 = (int *)(v44 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)v27 = v29;
  v30 = *(int *)(v43 + 28);
  v31 = a1 + v30;
  v32 = (int *)(v44 + v30);
  v33 = *v32;
  *(_BYTE *)(v31 + 4) = *((_BYTE *)v32 + 4);
  *(_DWORD *)v31 = v33;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = *(int *)(v11 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_CtsCdmaCellTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v37 = a3;
  v38 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v31 = *(int *)(v12 + 20);
      v32 = &v10[v31];
      v33 = &v11[v31];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      v34 = *(int *)(v12 + 24);
      v35 = &v10[v34];
      v36 = &v11[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  v17 = *(int *)(v12 + 20);
  v18 = &v10[v17];
  v19 = &v11[v17];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = *(int *)(v12 + 24);
  v21 = &v10[v20];
  v22 = &v11[v20];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v24 = *(int *)(v37 + 24);
  v25 = *(int *)(v37 + 28);
  v26 = a1 + v24;
  v27 = v38 + v24;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a1 + v25;
  v29 = v38 + v25;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CtsCdmaCellTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2B38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm_0(a1, a2, a3, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CtsCdmaCellTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2B3A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm_0(a1, a2, a3, a4, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
}

void type metadata completion function for Proto_Gnss_Emergency_CtsCdmaCellTime()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_CellTimeData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v16 = v12[5];
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      v19 = v12[6];
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v22 = v12[7];
      v23 = &v10[v22];
      v24 = &v11[v22];
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    v25 = *(int *)(a3 + 24);
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v29 = *((_QWORD *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v26, (uint64_t *)v27, v7);
      v31 = v28[5];
      __dst = &v26[v31];
      v32 = &v27[v31];
      v33 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
        memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)__dst, (uint64_t *)v32, v7);
        v36 = *(int *)(v33 + 20);
        v37 = &__dst[v36];
        v38 = &v32[v36];
        *(_DWORD *)v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        v39 = *(int *)(v33 + 24);
        v40 = &__dst[v39];
        v41 = &v32[v39];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        (*(void (**)(void))(v34 + 56))();
      }
      v42 = v28[6];
      v43 = &v26[v42];
      v44 = &v27[v42];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      v43[4] = v44[4];
      v45 = v28[7];
      v46 = &v26[v45];
      v47 = &v27[v45];
      v46[4] = v47[4];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_CellTimeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v12(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    v12(v5, v4);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
  {
    v12(v7, v4);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v4);
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_CellTimeData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *__dst;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = v11[7];
    v21 = &v9[v20];
    v22 = &v10[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    v29 = v26[5];
    __dst = &v24[v29];
    v30 = &v25[v29];
    v31 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v7((uint64_t)__dst, (uint64_t)v30, v6);
      v34 = *(int *)(v31 + 20);
      v35 = &__dst[v34];
      v36 = &v30[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      v37 = *(int *)(v31 + 24);
      v38 = &__dst[v37];
      v39 = &v30[v37];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(void))(v32 + 56))();
    }
    v40 = v26[6];
    v41 = &v24[v40];
    v42 = &v25[v40];
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v43 = v26[7];
    v44 = &v24[v43];
    v45 = &v25[v43];
    v44[4] = v45[4];
    *(_DWORD *)v44 = *(_DWORD *)v45;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_CellTimeData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, int *);
  int v35;
  int v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v97;
  char *v98;
  char *v99;
  char v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  void (*__dst)(uint64_t, uint64_t, uint64_t);
  char *__dsta;

  v6 = type metadata accessor for UnknownStorage();
  v106 = *(_QWORD *)(v6 - 8);
  __dst = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 24);
  __dst(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v8, v9, v6);
      v15 = v10[5];
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = v17[4];
      *(_DWORD *)v16 = *(_DWORD *)v17;
      v16[4] = v18;
      v19 = v10[6];
      v20 = &v8[v19];
      v21 = &v9[v19];
      v22 = v21[4];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v22;
      v23 = v10[7];
      v24 = &v8[v23];
      v25 = &v9[v23];
      v26 = v25[4];
      *(_DWORD *)v24 = *(_DWORD *)v25;
      v24[4] = v26;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
      v28 = (void (*)(char *, char *, uint64_t))__dst;
      goto LABEL_8;
    }
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  if (v14)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
    goto LABEL_6;
  }
  v28 = (void (*)(char *, char *, uint64_t))__dst;
  __dst((uint64_t)v8, (uint64_t)v9, v6);
  v44 = v10[5];
  v45 = &v8[v44];
  v46 = &v9[v44];
  v47 = v46[4];
  *(_DWORD *)v45 = *(_DWORD *)v46;
  v45[4] = v47;
  v48 = v10[6];
  v49 = &v8[v48];
  v50 = &v9[v48];
  v51 = v50[4];
  *(_DWORD *)v49 = *(_DWORD *)v50;
  v49[4] = v51;
  v52 = v10[7];
  v53 = &v8[v52];
  v54 = &v9[v52];
  v55 = v54[4];
  *(_DWORD *)v53 = *(_DWORD *)v54;
  v53[4] = v55;
LABEL_8:
  v29 = *(int *)(a3 + 24);
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v33 = *((_QWORD *)v32 - 1);
  v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v30, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_14;
    }
    v28(v30, v31, v6);
    v56 = v32[5];
    v57 = &v30[v56];
    v58 = &v31[v56];
    v59 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v105 = *(_QWORD *)(v59 - 8);
    v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48);
    v61 = v60(v57, 1, v59);
    v62 = v60(v58, 1, v59);
    if (v61)
    {
      if (!v62)
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v57, v58, v6);
        v63 = *(int *)(v59 + 20);
        v64 = &v57[v63];
        v65 = &v58[v63];
        v66 = v65[4];
        *(_DWORD *)v64 = *(_DWORD *)v65;
        v64[4] = v66;
        v67 = *(int *)(v59 + 24);
        v68 = &v57[v67];
        v69 = &v58[v67];
        v70 = v69[4];
        *(_DWORD *)v68 = *(_DWORD *)v69;
        v68[4] = v70;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v57, 0, 1, v59);
LABEL_24:
        v88 = v32[6];
        v89 = &v30[v88];
        v90 = &v31[v88];
        v91 = *(_DWORD *)v90;
        v89[4] = v90[4];
        *(_DWORD *)v89 = v91;
        v92 = v32[7];
        v93 = &v30[v92];
        v94 = &v31[v92];
        v95 = *(_DWORD *)v94;
        v93[4] = v94[4];
        *(_DWORD *)v93 = v95;
        return a1;
      }
    }
    else
    {
      if (!v62)
      {
        __dst((uint64_t)v57, (uint64_t)v58, v6);
        v97 = *(int *)(v59 + 20);
        v98 = &v57[v97];
        v99 = &v58[v97];
        v100 = v99[4];
        *(_DWORD *)v98 = *(_DWORD *)v99;
        v98[4] = v100;
        v101 = *(int *)(v59 + 24);
        v102 = &v57[v101];
        v103 = &v58[v101];
        v104 = v103[4];
        *(_DWORD *)v102 = *(_DWORD *)v103;
        v102[4] = v104;
        goto LABEL_24;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v57, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    }
    v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_24;
  }
  if (v36)
  {
LABEL_14:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  v37 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  v37(v30, v31, v6);
  v38 = v32[5];
  __dsta = &v30[v38];
  v39 = &v31[v38];
  v40 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(__dsta, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v37(__dsta, v39, v6);
    v71 = *(int *)(v40 + 20);
    v72 = &__dsta[v71];
    v73 = &v39[v71];
    v74 = v73[4];
    *(_DWORD *)v72 = *(_DWORD *)v73;
    v72[4] = v74;
    v75 = *(int *)(v40 + 24);
    v76 = &__dsta[v75];
    v77 = &v39[v75];
    v78 = v77[4];
    *(_DWORD *)v76 = *(_DWORD *)v77;
    v76[4] = v78;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dsta, 0, 1, v40);
  }
  v79 = v32[6];
  v80 = &v30[v79];
  v81 = &v31[v79];
  v82 = *(_DWORD *)v81;
  v80[4] = v81[4];
  *(_DWORD *)v80 = v82;
  v83 = v32[7];
  v84 = &v30[v83];
  v85 = &v31[v83];
  v86 = *(_DWORD *)v85;
  v84[4] = v85[4];
  *(_DWORD *)v84 = v86;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_CellTimeData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *__dst;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = v11[7];
    v21 = &v9[v20];
    v22 = &v10[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    v29 = v26[5];
    __dst = &v24[v29];
    v30 = &v25[v29];
    v31 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v7((uint64_t)__dst, (uint64_t)v30, v6);
      v34 = *(int *)(v31 + 20);
      v35 = &__dst[v34];
      v36 = &v30[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      v37 = *(int *)(v31 + 24);
      v38 = &__dst[v37];
      v39 = &v30[v37];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(void))(v32 + 56))();
    }
    v40 = v26[6];
    v41 = &v24[v40];
    v42 = &v25[v40];
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v43 = v26[7];
    v44 = &v24[v43];
    v45 = &v25[v43];
    v44[4] = v45[4];
    *(_DWORD *)v44 = *(_DWORD *)v45;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_CellTimeData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, int *);
  int v32;
  int v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*__dst)(uint64_t, uint64_t, uint64_t);
  char *__dsta;

  v6 = type metadata accessor for UnknownStorage();
  v90 = *(_QWORD *)(v6 - 8);
  __dst = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 40);
  __dst(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v8, v9, v6);
      v15 = v10[5];
      v16 = &v8[v15];
      v17 = &v9[v15];
      *(_DWORD *)v16 = *(_DWORD *)v17;
      v16[4] = v17[4];
      v18 = v10[6];
      v19 = &v8[v18];
      v20 = &v9[v18];
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[4] = v20[4];
      v21 = v10[7];
      v22 = &v8[v21];
      v23 = &v9[v21];
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
      v25 = (void (*)(char *, char *, uint64_t))__dst;
      goto LABEL_8;
    }
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  if (v14)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
    goto LABEL_6;
  }
  v25 = (void (*)(char *, char *, uint64_t))__dst;
  __dst((uint64_t)v8, (uint64_t)v9, v6);
  v41 = v10[5];
  v42 = &v8[v41];
  v43 = &v9[v41];
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v43[4];
  v44 = v10[6];
  v45 = &v8[v44];
  v46 = &v9[v44];
  *(_DWORD *)v45 = *(_DWORD *)v46;
  v45[4] = v46[4];
  v47 = v10[7];
  v48 = &v8[v47];
  v49 = &v9[v47];
  *(_DWORD *)v48 = *(_DWORD *)v49;
  v48[4] = v49[4];
LABEL_8:
  v26 = *(int *)(a3 + 24);
  v27 = (char *)(a1 + v26);
  v28 = (char *)(a2 + v26);
  v29 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v30 = *((_QWORD *)v29 - 1);
  v31 = *(uint64_t (**)(char *, uint64_t, int *))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (v33)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v27, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_14;
    }
    v25(v27, v28, v6);
    v50 = v29[5];
    v51 = &v27[v50];
    v52 = &v28[v50];
    v53 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v89 = *(_QWORD *)(v53 - 8);
    v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
    v55 = v54(v51, 1, v53);
    v56 = v54(v52, 1, v53);
    if (v55)
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v51, v52, v6);
        v57 = *(int *)(v53 + 20);
        v58 = &v51[v57];
        v59 = &v52[v57];
        *(_DWORD *)v58 = *(_DWORD *)v59;
        v58[4] = v59[4];
        v60 = *(int *)(v53 + 24);
        v61 = &v51[v60];
        v62 = &v52[v60];
        *(_DWORD *)v61 = *(_DWORD *)v62;
        v61[4] = v62[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v51, 0, 1, v53);
LABEL_24:
        v76 = v29[6];
        v77 = &v27[v76];
        v78 = &v28[v76];
        *(_DWORD *)v77 = *(_DWORD *)v78;
        v77[4] = v78[4];
        v79 = v29[7];
        v80 = &v27[v79];
        v81 = &v28[v79];
        v80[4] = v81[4];
        *(_DWORD *)v80 = *(_DWORD *)v81;
        return a1;
      }
    }
    else
    {
      if (!v56)
      {
        __dst((uint64_t)v51, (uint64_t)v52, v6);
        v83 = *(int *)(v53 + 20);
        v84 = &v51[v83];
        v85 = &v52[v83];
        *(_DWORD *)v84 = *(_DWORD *)v85;
        v84[4] = v85[4];
        v86 = *(int *)(v53 + 24);
        v87 = &v51[v86];
        v88 = &v52[v86];
        *(_DWORD *)v87 = *(_DWORD *)v88;
        v87[4] = v88[4];
        goto LABEL_24;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v51, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    }
    v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_24;
  }
  if (v33)
  {
LABEL_14:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    return a1;
  }
  v34 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
  v34(v27, v28, v6);
  v35 = v29[5];
  __dsta = &v27[v35];
  v36 = &v28[v35];
  v37 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(__dsta, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v34(__dsta, v36, v6);
    v63 = *(int *)(v37 + 20);
    v64 = &__dsta[v63];
    v65 = &v36[v63];
    *(_DWORD *)v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v66 = *(int *)(v37 + 24);
    v67 = &__dsta[v66];
    v68 = &v36[v66];
    *(_DWORD *)v67 = *(_DWORD *)v68;
    v67[4] = v68[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dsta, 0, 1, v37);
  }
  v69 = v29[6];
  v70 = &v27[v69];
  v71 = &v28[v69];
  *(_DWORD *)v70 = *(_DWORD *)v71;
  v70[4] = v71[4];
  v72 = v29[7];
  v73 = &v27[v72];
  v74 = &v28[v72];
  v73[4] = v74[4];
  *(_DWORD *)v73 = *(_DWORD *)v74;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CellTimeData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2C850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_43Tm(a1, a2, a3, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CellTimeData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2C870(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_44Tm(a1, a2, a3, a4, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
}

void type metadata completion function for Proto_Gnss_Emergency_CellTimeData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for Proto_Gnss_Emergency_UtranGpsTimeMeasured(a1, a2, a3, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

char *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_CellTimeAssistance(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v54;
  uint64_t v55;
  char *__dst;
  uint64_t v57;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v57 = v13;
      v8(v10, v11, v7);
      v16 = *(int *)(v12 + 20);
      v17 = &v10[v16];
      v18 = &v11[v16];
      v19 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v20 = *((_QWORD *)v19 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v8(v17, v18, v7);
        v22 = v19[5];
        v23 = &v17[v22];
        v24 = &v18[v22];
        *(_DWORD *)v23 = *(_DWORD *)v24;
        v23[4] = v24[4];
        v25 = v19[6];
        v26 = &v17[v25];
        v27 = &v18[v25];
        *(_DWORD *)v26 = *(_DWORD *)v27;
        v26[4] = v27[4];
        v28 = v19[7];
        v29 = &v17[v28];
        v30 = &v18[v28];
        *(_DWORD *)v29 = *(_DWORD *)v30;
        v29[4] = v30[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
      }
      v31 = *(int *)(v12 + 24);
      v32 = &v10[v31];
      v33 = &v11[v31];
      v34 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v35 = *((_QWORD *)v34 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v55 = v35;
        v8(v32, v33, v7);
        v37 = v34[5];
        __dst = &v32[v37];
        v38 = &v33[v37];
        v39 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v54 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v39))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v8(__dst, v38, v7);
          v41 = *(int *)(v39 + 20);
          v42 = &__dst[v41];
          v43 = &v38[v41];
          *(_DWORD *)v42 = *(_DWORD *)v43;
          v42[4] = v43[4];
          v44 = *(int *)(v39 + 24);
          v45 = &__dst[v44];
          v46 = &v38[v44];
          *(_DWORD *)v45 = *(_DWORD *)v46;
          v45[4] = v46[4];
          (*(void (**)(void))(v54 + 56))();
        }
        v47 = v34[6];
        v48 = &v32[v47];
        v49 = &v33[v47];
        *(_DWORD *)v48 = *(_DWORD *)v49;
        v48[4] = v49[4];
        v50 = v34[7];
        v51 = &v32[v50];
        v52 = &v33[v50];
        v51[4] = v52[4];
        *(_DWORD *)v51 = *(_DWORD *)v52;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v55 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_CellTimeAssistance(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v14(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v14(v5, v4);
    v8 = v5 + *(int *)(v6 + 20);
    v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      v14(v8, v4);
    v10 = v5 + *(int *)(v6 + 24);
    v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
    if (!(_DWORD)result)
    {
      v14(v10, v4);
      v12 = v10 + *(int *)(v11 + 20);
      v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
      if (!(_DWORD)result)
        return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v4);
    }
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_CellTimeAssistance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v52;
  uint64_t v53;
  char *__dst;
  uint64_t v55;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v55 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      v20 = v17[5];
      v21 = &v15[v20];
      v22 = &v16[v20];
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      v23 = v17[6];
      v24 = &v15[v23];
      v25 = &v16[v23];
      *(_DWORD *)v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      v26 = v17[7];
      v27 = &v15[v26];
      v28 = &v16[v26];
      *(_DWORD *)v27 = *(_DWORD *)v28;
      v27[4] = v28[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    v29 = *(int *)(v11 + 24);
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v33 = *((_QWORD *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v53 = v33;
      v7((uint64_t)v30, (uint64_t)v31, v6);
      v35 = v32[5];
      __dst = &v30[v35];
      v36 = &v31[v35];
      v37 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      v52 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v36, 1, v37))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
        memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v36, v6);
        v39 = *(int *)(v37 + 20);
        v40 = &__dst[v39];
        v41 = &v36[v39];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        v42 = *(int *)(v37 + 24);
        v43 = &__dst[v42];
        v44 = &v36[v42];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        (*(void (**)(void))(v52 + 56))();
      }
      v45 = v32[6];
      v46 = &v30[v45];
      v47 = &v31[v45];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      v46[4] = v47[4];
      v48 = v32[7];
      v49 = &v30[v48];
      v50 = &v31[v48];
      v49[4] = v50[4];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v53 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

char *assignWithCopy for Proto_Gnss_Emergency_CellTimeAssistance(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t (*v31)(char *, uint64_t, int *);
  int v32;
  size_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  uint64_t v86;
  char *v87;
  char *v88;
  char v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  int *v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t, int *);
  int v104;
  int v105;
  void (*v106)(uint64_t, char *, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  int v117;
  size_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  int v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  void (*__src)(char *, char *, uint64_t);
  char *v167;
  char *v168;
  char *v169;
  char *v170;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v9 = *(int *)(a3 + 24);
  v10 = (uint64_t)&a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v167 = a1;
      v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
      v17(v10, v11, v6);
      v18 = *(int *)(v12 + 20);
      v19 = (char *)(v10 + v18);
      v20 = &v11[v18];
      v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v22 = *((_QWORD *)v21 - 1);
      __src = (void (*)(char *, char *, uint64_t))v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v17((uint64_t)v19, v20, v6);
        v35 = v21[5];
        v36 = &v19[v35];
        v37 = &v20[v35];
        v38 = v37[4];
        *(_DWORD *)v36 = *(_DWORD *)v37;
        v36[4] = v38;
        v39 = v21[6];
        v40 = &v19[v39];
        v41 = &v20[v39];
        v42 = v41[4];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v42;
        v43 = v21[7];
        v44 = &v19[v43];
        v45 = &v20[v43];
        v46 = v45[4];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v46;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      }
      a1 = v167;
      v47 = *(int *)(v12 + 24);
      v48 = (char *)(v10 + v47);
      v49 = &v11[v47];
      v50 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v51 = *((_QWORD *)v50 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v49, 1, v50))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v162 = v51;
        __src(v48, v49, v6);
        v53 = v50[5];
        __dsta = &v48[v53];
        v54 = &v49[v53];
        v55 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v160 = *(_QWORD *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v54, 1, v55))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dsta, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          __src(__dsta, v54, v6);
          v69 = *(int *)(v55 + 20);
          v70 = &__dsta[v69];
          v71 = &v54[v69];
          v72 = v71[4];
          *(_DWORD *)v70 = *(_DWORD *)v71;
          v70[4] = v72;
          v73 = *(int *)(v55 + 24);
          v74 = &__dsta[v73];
          v75 = &v54[v73];
          v76 = v75[4];
          *(_DWORD *)v74 = *(_DWORD *)v75;
          v74[4] = v76;
          (*(void (**)(void))(v160 + 56))();
        }
        a1 = v167;
        v77 = v50[6];
        v78 = &v48[v77];
        v79 = &v49[v77];
        v80 = *(_DWORD *)v79;
        v78[4] = v79[4];
        *(_DWORD *)v78 = v80;
        v81 = v50[7];
        v82 = &v48[v81];
        v83 = &v49[v81];
        v84 = *(_DWORD *)v83;
        v82[4] = v83[4];
        *(_DWORD *)v82 = v84;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v162 + 56))(v48, 0, 1, v50);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?)
                                - 8)
                    + 64);
    v25 = (void *)v10;
    v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  __dst = v8;
  v8((char *)v10, v11, v6);
  v27 = *(int *)(v12 + 20);
  v28 = (char *)(v10 + v27);
  v29 = &v11[v27];
  v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v161 = *((_QWORD *)v30 - 1);
  v31 = *(uint64_t (**)(char *, uint64_t, int *))(v161 + 48);
  v168 = v28;
  LODWORD(v28) = v31(v28, 1, v30);
  v32 = v31(v29, 1, v30);
  if ((_DWORD)v28)
  {
    if (v32)
    {
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v34 = v168;
LABEL_19:
      memcpy(v34, v29, v33);
      goto LABEL_26;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v168, v29, v6);
    v57 = v30[5];
    v58 = &v168[v57];
    v59 = &v29[v57];
    v60 = v59[4];
    *(_DWORD *)v58 = *(_DWORD *)v59;
    v58[4] = v60;
    v61 = v30[6];
    v62 = &v168[v61];
    v63 = &v29[v61];
    v64 = v63[4];
    *(_DWORD *)v62 = *(_DWORD *)v63;
    v62[4] = v64;
    v65 = v30[7];
    v66 = &v168[v65];
    v67 = &v29[v65];
    v68 = v67[4];
    *(_DWORD *)v66 = *(_DWORD *)v67;
    v66[4] = v68;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v161 + 56))(v168, 0, 1, v30);
  }
  else
  {
    if (v32)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v168, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v34 = v168;
      goto LABEL_19;
    }
    __dst(v168, v29, v6);
    v86 = v30[5];
    v87 = &v168[v86];
    v88 = &v29[v86];
    v89 = v88[4];
    *(_DWORD *)v87 = *(_DWORD *)v88;
    v87[4] = v89;
    v90 = v30[6];
    v91 = &v168[v90];
    v92 = &v29[v90];
    v93 = v92[4];
    *(_DWORD *)v91 = *(_DWORD *)v92;
    v91[4] = v93;
    v94 = v30[7];
    v95 = &v168[v94];
    v96 = &v29[v94];
    v97 = v96[4];
    *(_DWORD *)v95 = *(_DWORD *)v96;
    v95[4] = v97;
  }
LABEL_26:
  v98 = *(int *)(v12 + 24);
  v99 = v10 + v98;
  v100 = &v11[v98];
  v101 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v102 = *((_QWORD *)v101 - 1);
  v103 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v102 + 48);
  v104 = v103(v99, 1, v101);
  v105 = v103((uint64_t)v100, 1, v101);
  if (!v104)
  {
    if (v105)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v99, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_32;
    }
    __dst((char *)v99, v100, v6);
    v112 = v101[5];
    v113 = (char *)(v99 + v112);
    v114 = &v100[v112];
    v115 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v163 = *(_QWORD *)(v115 - 8);
    v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v163 + 48);
    v170 = v113;
    LODWORD(v113) = v116(v113, 1, v115);
    v117 = v116(v114, 1, v115);
    if ((_DWORD)v113)
    {
      if (!v117)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v170, v114, v6);
        v136 = *(int *)(v115 + 20);
        v137 = &v170[v136];
        v138 = &v114[v136];
        v139 = v138[4];
        *(_DWORD *)v137 = *(_DWORD *)v138;
        v137[4] = v139;
        v140 = *(int *)(v115 + 24);
        v141 = &v170[v140];
        v142 = &v114[v140];
        v143 = v142[4];
        *(_DWORD *)v141 = *(_DWORD *)v142;
        v141[4] = v143;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v170, 0, 1, v115);
        goto LABEL_43;
      }
      v118 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v119 = v170;
    }
    else
    {
      if (!v117)
      {
        __dst(v170, v114, v6);
        v144 = *(int *)(v115 + 20);
        v145 = &v170[v144];
        v146 = &v114[v144];
        v147 = v146[4];
        *(_DWORD *)v145 = *(_DWORD *)v146;
        v145[4] = v147;
        v148 = *(int *)(v115 + 24);
        v149 = &v170[v148];
        v150 = &v114[v148];
        v151 = v150[4];
        *(_DWORD *)v149 = *(_DWORD *)v150;
        v149[4] = v151;
        goto LABEL_43;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v170, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v118 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v119 = v170;
    }
    memcpy(v119, v114, v118);
LABEL_43:
    v152 = v101[6];
    v153 = v99 + v152;
    v154 = &v100[v152];
    v155 = *(_DWORD *)v154;
    *(_BYTE *)(v153 + 4) = v154[4];
    *(_DWORD *)v153 = v155;
    v156 = v101[7];
    v157 = v99 + v156;
    v158 = &v100[v156];
    v159 = *(_DWORD *)v158;
    *(_BYTE *)(v157 + 4) = v158[4];
    *(_DWORD *)v157 = v159;
    return a1;
  }
  if (v105)
  {
LABEL_32:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?)
                                - 8)
                    + 64);
    v25 = (void *)v99;
    v26 = v100;
    goto LABEL_8;
  }
  v106 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v106(v99, v100, v6);
  v107 = v101[5];
  v169 = (char *)(v99 + v107);
  v108 = &v100[v107];
  v109 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v110 = *(_QWORD *)(v109 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v169, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    v106((uint64_t)v169, v108, v6);
    v120 = *(int *)(v109 + 20);
    v121 = &v169[v120];
    v122 = &v108[v120];
    v123 = v122[4];
    *(_DWORD *)v121 = *(_DWORD *)v122;
    v121[4] = v123;
    v124 = *(int *)(v109 + 24);
    v125 = &v169[v124];
    v126 = &v108[v124];
    v127 = v126[4];
    *(_DWORD *)v125 = *(_DWORD *)v126;
    v125[4] = v127;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v169, 0, 1, v109);
  }
  v128 = v101[6];
  v129 = v99 + v128;
  v130 = &v100[v128];
  v131 = *(_DWORD *)v130;
  *(_BYTE *)(v129 + 4) = v130[4];
  *(_DWORD *)v129 = v131;
  v132 = v101[7];
  v133 = v99 + v132;
  v134 = &v100[v132];
  v135 = *(_DWORD *)v134;
  *(_BYTE *)(v133 + 4) = v134[4];
  *(_DWORD *)v133 = v135;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v102 + 56))(v99, 0, 1, v101);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_CellTimeAssistance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v52;
  uint64_t v53;
  char *__dst;
  uint64_t v55;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v55 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      v20 = v17[5];
      v21 = &v15[v20];
      v22 = &v16[v20];
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      v23 = v17[6];
      v24 = &v15[v23];
      v25 = &v16[v23];
      *(_DWORD *)v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      v26 = v17[7];
      v27 = &v15[v26];
      v28 = &v16[v26];
      *(_DWORD *)v27 = *(_DWORD *)v28;
      v27[4] = v28[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    v29 = *(int *)(v11 + 24);
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v33 = *((_QWORD *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v53 = v33;
      v7((uint64_t)v30, (uint64_t)v31, v6);
      v35 = v32[5];
      __dst = &v30[v35];
      v36 = &v31[v35];
      v37 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      v52 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v36, 1, v37))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
        memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v36, v6);
        v39 = *(int *)(v37 + 20);
        v40 = &__dst[v39];
        v41 = &v36[v39];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        v42 = *(int *)(v37 + 24);
        v43 = &__dst[v42];
        v44 = &v36[v42];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        (*(void (**)(void))(v52 + 56))();
      }
      v45 = v32[6];
      v46 = &v30[v45];
      v47 = &v31[v45];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      v46[4] = v47[4];
      v48 = v32[7];
      v49 = &v30[v48];
      v50 = &v31[v48];
      v49[4] = v50[4];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v53 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

char *assignWithTake for Proto_Gnss_Emergency_CellTimeAssistance(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t (*v31)(char *, uint64_t, int *);
  int v32;
  size_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int *v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, int *);
  int v91;
  int v92;
  void (*v93)(uint64_t, char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, uint64_t);
  int v104;
  size_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  void (*__src)(char *, char *, uint64_t);
  char *v144;
  char *v145;
  char *v146;
  char *v147;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v10 = (uint64_t)&a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v144 = a1;
      v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
      v17(v10, v11, v6);
      v18 = *(int *)(v12 + 20);
      v19 = (char *)(v10 + v18);
      v20 = &v11[v18];
      v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v22 = *((_QWORD *)v21 - 1);
      __src = (void (*)(char *, char *, uint64_t))v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v17((uint64_t)v19, v20, v6);
        v35 = v21[5];
        v36 = &v19[v35];
        v37 = &v20[v35];
        *(_DWORD *)v36 = *(_DWORD *)v37;
        v36[4] = v37[4];
        v38 = v21[6];
        v39 = &v19[v38];
        v40 = &v20[v38];
        *(_DWORD *)v39 = *(_DWORD *)v40;
        v39[4] = v40[4];
        v41 = v21[7];
        v42 = &v19[v41];
        v43 = &v20[v41];
        *(_DWORD *)v42 = *(_DWORD *)v43;
        v42[4] = v43[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      }
      a1 = v144;
      v44 = *(int *)(v12 + 24);
      v45 = (char *)(v10 + v44);
      v46 = &v11[v44];
      v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v48 = *((_QWORD *)v47 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        v139 = v48;
        __src(v45, v46, v6);
        v50 = v47[5];
        __dsta = &v45[v50];
        v51 = &v46[v50];
        v52 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v137 = *(_QWORD *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v51, 1, v52))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dsta, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          __src(__dsta, v51, v6);
          v63 = *(int *)(v52 + 20);
          v64 = &__dsta[v63];
          v65 = &v51[v63];
          *(_DWORD *)v64 = *(_DWORD *)v65;
          v64[4] = v65[4];
          v66 = *(int *)(v52 + 24);
          v67 = &__dsta[v66];
          v68 = &v51[v66];
          *(_DWORD *)v67 = *(_DWORD *)v68;
          v67[4] = v68[4];
          (*(void (**)(void))(v137 + 56))();
        }
        a1 = v144;
        v69 = v47[6];
        v70 = &v45[v69];
        v71 = &v46[v69];
        *(_DWORD *)v70 = *(_DWORD *)v71;
        v70[4] = v71[4];
        v72 = v47[7];
        v73 = &v45[v72];
        v74 = &v46[v72];
        v73[4] = v74[4];
        *(_DWORD *)v73 = *(_DWORD *)v74;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v139 + 56))(v45, 0, 1, v47);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?)
                                - 8)
                    + 64);
    v25 = (void *)v10;
    v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  __dst = v8;
  v8((char *)v10, v11, v6);
  v27 = *(int *)(v12 + 20);
  v28 = (char *)(v10 + v27);
  v29 = &v11[v27];
  v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v138 = *((_QWORD *)v30 - 1);
  v31 = *(uint64_t (**)(char *, uint64_t, int *))(v138 + 48);
  v145 = v28;
  LODWORD(v28) = v31(v28, 1, v30);
  v32 = v31(v29, 1, v30);
  if ((_DWORD)v28)
  {
    if (v32)
    {
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v34 = v145;
LABEL_19:
      memcpy(v34, v29, v33);
      goto LABEL_26;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v145, v29, v6);
    v54 = v30[5];
    v55 = &v145[v54];
    v56 = &v29[v54];
    *(_DWORD *)v55 = *(_DWORD *)v56;
    v55[4] = v56[4];
    v57 = v30[6];
    v58 = &v145[v57];
    v59 = &v29[v57];
    *(_DWORD *)v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    v60 = v30[7];
    v61 = &v145[v60];
    v62 = &v29[v60];
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v138 + 56))(v145, 0, 1, v30);
  }
  else
  {
    if (v32)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v145, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v34 = v145;
      goto LABEL_19;
    }
    __dst(v145, v29, v6);
    v76 = v30[5];
    v77 = &v145[v76];
    v78 = &v29[v76];
    *(_DWORD *)v77 = *(_DWORD *)v78;
    v77[4] = v78[4];
    v79 = v30[6];
    v80 = &v145[v79];
    v81 = &v29[v79];
    *(_DWORD *)v80 = *(_DWORD *)v81;
    v80[4] = v81[4];
    v82 = v30[7];
    v83 = &v145[v82];
    v84 = &v29[v82];
    *(_DWORD *)v83 = *(_DWORD *)v84;
    v83[4] = v84[4];
  }
LABEL_26:
  v85 = *(int *)(v12 + 24);
  v86 = v10 + v85;
  v87 = &v11[v85];
  v88 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v89 = *((_QWORD *)v88 - 1);
  v90 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v89 + 48);
  v91 = v90(v86, 1, v88);
  v92 = v90((uint64_t)v87, 1, v88);
  if (!v91)
  {
    if (v92)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v86, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_32;
    }
    __dst((char *)v86, v87, v6);
    v99 = v88[5];
    v100 = (char *)(v86 + v99);
    v101 = &v87[v99];
    v102 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v140 = *(_QWORD *)(v102 - 8);
    v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 48);
    v147 = v100;
    LODWORD(v100) = v103(v100, 1, v102);
    v104 = v103(v101, 1, v102);
    if ((_DWORD)v100)
    {
      if (!v104)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v147, v101, v6);
        v119 = *(int *)(v102 + 20);
        v120 = &v147[v119];
        v121 = &v101[v119];
        *(_DWORD *)v120 = *(_DWORD *)v121;
        v120[4] = v121[4];
        v122 = *(int *)(v102 + 24);
        v123 = &v147[v122];
        v124 = &v101[v122];
        *(_DWORD *)v123 = *(_DWORD *)v124;
        v123[4] = v124[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v147, 0, 1, v102);
        goto LABEL_43;
      }
      v105 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v106 = v147;
    }
    else
    {
      if (!v104)
      {
        __dst(v147, v101, v6);
        v125 = *(int *)(v102 + 20);
        v126 = &v147[v125];
        v127 = &v101[v125];
        *(_DWORD *)v126 = *(_DWORD *)v127;
        v126[4] = v127[4];
        v128 = *(int *)(v102 + 24);
        v129 = &v147[v128];
        v130 = &v101[v128];
        *(_DWORD *)v129 = *(_DWORD *)v130;
        v129[4] = v130[4];
        goto LABEL_43;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v147, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v105 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v106 = v147;
    }
    memcpy(v106, v101, v105);
LABEL_43:
    v131 = v88[6];
    v132 = v86 + v131;
    v133 = &v87[v131];
    *(_DWORD *)v132 = *(_DWORD *)v133;
    *(_BYTE *)(v132 + 4) = v133[4];
    v134 = v88[7];
    v135 = v86 + v134;
    v136 = &v87[v134];
    *(_BYTE *)(v135 + 4) = v136[4];
    *(_DWORD *)v135 = *(_DWORD *)v136;
    return a1;
  }
  if (v92)
  {
LABEL_32:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?)
                                - 8)
                    + 64);
    v25 = (void *)v86;
    v26 = v87;
    goto LABEL_8;
  }
  v93 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v93(v86, v87, v6);
  v94 = v88[5];
  v146 = (char *)(v86 + v94);
  v95 = &v87[v94];
  v96 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v97 = *(_QWORD *)(v96 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v146, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    v93((uint64_t)v146, v95, v6);
    v107 = *(int *)(v96 + 20);
    v108 = &v146[v107];
    v109 = &v95[v107];
    *(_DWORD *)v108 = *(_DWORD *)v109;
    v108[4] = v109[4];
    v110 = *(int *)(v96 + 24);
    v111 = &v146[v110];
    v112 = &v95[v110];
    *(_DWORD *)v111 = *(_DWORD *)v112;
    v111[4] = v112[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v146, 0, 1, v96);
  }
  v113 = v88[6];
  v114 = v86 + v113;
  v115 = &v87[v113];
  *(_DWORD *)v114 = *(_DWORD *)v115;
  *(_BYTE *)(v114 + 4) = v115[4];
  v116 = v88[7];
  v117 = v86 + v116;
  v118 = &v87[v116];
  *(_BYTE *)(v117 + 4) = v118[4];
  *(_DWORD *)v117 = *(_DWORD *)v118;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CellTimeAssistance()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2E5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_51Tm(a1, a2, a3, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
}

uint64_t __swift_get_extra_inhabitant_index_51Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v8 = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, a2, v8);
  if ((_DWORD)a2 == 249)
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 6u)
      v11 = 6;
    else
      v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    v12 = v11 - 6;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 6u)
      return v12;
    else
      return 0;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CellTimeAssistance()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2E6B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_52Tm(a1, a2, a3, a4, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
}

uint64_t __swift_store_extra_inhabitant_index_52Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  result = type metadata accessor for UnknownStorage();
  v11 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    v12 = result;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v14 = a1;
  }
  else
  {
    if (a3 == 249)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
      return result;
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v14 = a1 + *(int *)(a4 + 24);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  }
  return v13(v14, a2, a2, v12);
}

void type metadata completion function for Proto_Gnss_Emergency_CellTimeAssistance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for CLP_LogEntry_PrivateData_GlonassId(a1, a2, a3, (uint64_t)&unk_235BD8530, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_TowAssist(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = a3[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    LODWORD(v16) = *(_DWORD *)v22;
    v21[4] = v22[4];
    *(_DWORD *)v21 = (_DWORD)v16;
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_TowAssist(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  LODWORD(v15) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v15;
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_TowAssist(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_TowAssist(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  LODWORD(v15) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v15;
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_TowAssist(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  LODWORD(v15) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = v15;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_TowAssist()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_TowAssist()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_TowAssist()
{
  return type metadata completion function for Proto_Gnss_Emergency_GsmCellInfo();
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GpsReferenceTime(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v7 + v19;
    v22 = (char *)a2 + v19;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = (char *)v7 + v20;
    v24 = (char *)a2 + v20;
    v23[4] = v24[4];
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v25 = a3[10];
    v26 = a3[11];
    v27 = (char *)v7 + v25;
    v28 = (char *)a2 + v25;
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    *((_BYTE *)v7 + v26) = *((_BYTE *)a2 + v26);
    v29 = a3[13];
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v30 = (char *)v7 + v29;
    v31 = (char *)a2 + v29;
    v30[4] = v31[4];
    *(_DWORD *)v30 = *(_DWORD *)v31;
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_GpsReferenceTime(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = a3[9];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  v21 = (char *)a1 + v18;
  v22 = (char *)a2 + v18;
  v21[4] = v22[4];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = a3[10];
  v24 = a3[11];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  v25[4] = v26[4];
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v27 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v28[4] = v29[4];
  *(_DWORD *)v28 = *(_DWORD *)v29;
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_GpsReferenceTime(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_DWORD *)v12;
  v11[4] = v12[4];
  *(_DWORD *)v11 = v13;
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  LOBYTE(v13) = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v13;
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  LOBYTE(v13) = v19[4];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v13;
  v20 = a3[9];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  LOBYTE(v13) = v22[4];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v13;
  v23 = a3[10];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  LOBYTE(v13) = v25[4];
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v24[4] = v13;
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v26 = a3[13];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_DWORD *)v28;
  v27[4] = v28[4];
  *(_DWORD *)v27 = v29;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gnss_Emergency_GpsReferenceTime(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  v20[4] = v21[4];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v24[4] = v25[4];
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  v26 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v27[4] = v28[4];
  *(_DWORD *)v27 = *(_DWORD *)v28;
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_GpsReferenceTime(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = a3[8];
  v17 = a3[9];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  v20[4] = v21[4];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  v24[4] = v25[4];
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  v26 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v27[4] = v28[4];
  *(_DWORD *)v27 = *(_DWORD *)v28;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsReferenceTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsReferenceTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GpsReferenceTime()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_ReferenceLocation(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = a3[11];
    v27 = a3[12];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v30 = (char *)a1 + v27;
    v31 = (char *)a2 + v27;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = a3[13];
    v33 = a3[14];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = (char *)a1 + v33;
    v37 = (char *)a2 + v33;
    *(_DWORD *)v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    v38 = a3[15];
    v39 = a3[16];
    v40 = (char *)a1 + v38;
    v41 = (char *)a2 + v38;
    *(_DWORD *)v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    *((_BYTE *)a1 + v39) = *((_BYTE *)a2 + v39);
    v42 = a3[18];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v43[4] = v44[4];
    *(_DWORD *)v43 = *(_DWORD *)v44;
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_ReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = a3[15];
  v38 = a3[16];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v41 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)v42 = *(_DWORD *)v43;
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_ReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  int v44;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 4);
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = v10;
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 4);
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = v10;
  v32 = a3[13];
  v33 = a1 + v32;
  v34 = a2 + v32;
  LOBYTE(v10) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = v10;
  v35 = a3[14];
  v36 = a1 + v35;
  v37 = a2 + v35;
  LOBYTE(v10) = *(_BYTE *)(v37 + 4);
  *(_DWORD *)v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = v10;
  v38 = a3[15];
  v39 = a1 + v38;
  v40 = a2 + v38;
  LOBYTE(v10) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = v10;
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v41 = a3[18];
  v42 = a1 + v41;
  v43 = (int *)(a2 + v41);
  v44 = *v43;
  *(_BYTE *)(v42 + 4) = *((_BYTE *)v43 + 4);
  *(_DWORD *)v42 = v44;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_ReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = a3[15];
  v38 = a3[16];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v41 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)v42 = *(_DWORD *)v43;
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_ReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = a3[15];
  v38 = a3[16];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v41 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)v42 = *(_DWORD *)v43;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_ReferenceLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2FBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 64)) <= 6u)
    v9 = 6;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 64));
  v10 = v9 - 6;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 64)) >= 6u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_ReferenceLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B2FC54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 64)) = a2 + 6;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_ReferenceLocation()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsEphemeris()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsEphemeris()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GpsNavigationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    *((_BYTE *)v7 + v14) = *((_BYTE *)a2 + v14);
    v17 = a3[9];
    *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_GpsNavigationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_GpsNavigationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_DWORD *)v12;
  v11[4] = v12[4];
  *(_DWORD *)v11 = v13;
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v14 = a3[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  LOBYTE(v13) = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v13;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gnss_Emergency_GpsNavigationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_GpsNavigationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsNavigationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsNavigationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GpsNavigationModel()
{
  return type metadata completion function for Proto_Gnss_Emergency_GanssNavModelAddData();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CplaneConfig()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CplaneConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_CplaneConfig()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_CplaneContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v10[v12[5]] = v11[v12[5]];
      v10[v12[6]] = v11[v12[6]];
      v16 = v12[7];
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
    v23 = *((_QWORD *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v20, (uint64_t *)v21, v7);
      v20[v22[5]] = v21[v22[5]];
      v20[v22[6]] = v21[v22[6]];
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_CplaneContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    v10(v5, v4);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v4);
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_CplaneContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v9[v11[5]] = v10[v11[5]];
    v9[v11[6]] = v10[v11[6]];
    v14 = v11[7];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(const void *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    *((_BYTE *)v18 + v20[5]) = *((_BYTE *)v19 + v20[5]);
    *((_BYTE *)v18 + v20[6]) = *((_BYTE *)v19 + v20[6]);
    *((_BYTE *)v18 + v20[7]) = *((_BYTE *)v19 + v20[7]);
    *((_BYTE *)v18 + v20[8]) = *((_BYTE *)v19 + v20[8]);
    (*(void (**)(void *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_CplaneContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  int *v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, int *);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  v6 = type metadata accessor for UnknownStorage();
  v35 = *(_QWORD *)(v6 - 8);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24);
  v34(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v35 + 16))(v8, v9, v6);
      v8[v10[5]] = v9[v10[5]];
      v8[v10[6]] = v9[v10[6]];
      v15 = v10[7];
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = v17[8];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v16[8] = v18;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_Configuration);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v34((uint64_t)v8, (uint64_t)v9, v6);
  v8[v10[5]] = v9[v10[5]];
  v8[v10[6]] = v9[v10[6]];
  v30 = v10[7];
  v31 = &v8[v30];
  v32 = &v9[v30];
  v33 = v32[8];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v33;
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (_BYTE *)(a1 + v20);
  v22 = (_BYTE *)(a2 + v20);
  v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      v34((uint64_t)v21, (uint64_t)v22, v6);
      v21[v23[5]] = v22[v23[5]];
      v21[v23[6]] = v22[v23[6]];
      v21[v23[7]] = v22[v23[7]];
      v21[v23[8]] = v22[v23[8]];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v21, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v35 + 16))(v21, v22, v6);
  v21[v23[5]] = v22[v23[5]];
  v21[v23[6]] = v22[v23[6]];
  v21[v23[7]] = v22[v23[7]];
  v21[v23[8]] = v22[v23[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_CplaneContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v9[v11[5]] = v10[v11[5]];
    v9[v11[6]] = v10[v11[6]];
    v14 = v11[7];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(const void *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    *((_BYTE *)v18 + v20[5]) = *((_BYTE *)v19 + v20[5]);
    *((_BYTE *)v18 + v20[6]) = *((_BYTE *)v19 + v20[6]);
    *((_BYTE *)v18 + v20[7]) = *((_BYTE *)v19 + v20[7]);
    *((_BYTE *)v18 + v20[8]) = *((_BYTE *)v19 + v20[8]);
    (*(void (**)(void *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_CplaneContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage();
  v33 = *(_QWORD *)(v6 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 32))(v8, v9, v6);
      v8[v10[5]] = v9[v10[5]];
      v8[v10[6]] = v9[v10[6]];
      v15 = v10[7];
      v16 = &v8[v15];
      v17 = &v9[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v16[8] = v17[8];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_Configuration);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v32((uint64_t)v8, (uint64_t)v9, v6);
  v8[v10[5]] = v9[v10[5]];
  v8[v10[6]] = v9[v10[6]];
  v29 = v10[7];
  v30 = &v8[v29];
  v31 = &v9[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (_BYTE *)(a1 + v19);
  v21 = (_BYTE *)(a2 + v19);
  v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v32((uint64_t)v20, (uint64_t)v21, v6);
      v20[v22[5]] = v21[v22[5]];
      v20[v22[6]] = v21[v22[6]];
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 32))(v20, v21, v6);
  v20[v22[5]] = v21[v22[5]];
  v20[v22[6]] = v21[v22[6]];
  v20[v22[7]] = v21[v22[7]];
  v20[v22[8]] = v21[v22[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CplaneContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B30EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_43Tm(a1, a2, a3, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
}

uint64_t __swift_get_extra_inhabitant_index_43Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = type metadata accessor for UnknownStorage();
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
  {
    v12 = v10;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v14 = a1;
  }
  else
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v16 = *(_QWORD *)(v15 - 8);
    if (*(_DWORD *)(v16 + 84) == (_DWORD)a2)
    {
      v12 = v15;
      v17 = *(int *)(a3 + 20);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = *(int *)(a3 + 24);
    }
    v14 = a1 + v17;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  }
  return v13(v14, a2, v12);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CplaneContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B30F8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_44Tm(a1, a2, a3, a4, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Configuration?, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?);
}

uint64_t __swift_store_extra_inhabitant_index_44Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v12 = type metadata accessor for UnknownStorage();
  v13 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    v14 = v12;
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v16 = a1;
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v18 = *(_QWORD *)(v17 - 8);
    if (*(_DWORD *)(v18 + 84) == a3)
    {
      v14 = v17;
      v19 = *(int *)(a4 + 20);
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(a6);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = *(int *)(a4 + 24);
    }
    v16 = a1 + v19;
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  }
  return v15(v16, a2, a2, v14);
}

void type metadata completion function for Proto_Gnss_Emergency_CplaneContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for Proto_Gnss_Emergency_UtranGpsTimeMeasured(a1, a2, a3, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Configuration?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Configuration, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Cdma1xContext?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
}

void type metadata completion function for Proto_Gnss_Emergency_UtranGpsTimeMeasured(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t), unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  type metadata accessor for UnknownStorage();
  if (v11 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, a4, a5);
    if (v12 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, a6, a7);
      if (v13 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

char *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_EmergConfig(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, int *);
  void (*v36)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v36(a1, a2, v7);
    v8 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    v12 = a3[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v36(v13, v14, v7);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = v7;
    v21 = a3[8];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
    v25 = *((_QWORD *)v24 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v36(v22, v23, v20);
      v27 = v24[5];
      v28 = &v22[v27];
      v29 = &v23[v27];
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      v30 = v24[6];
      v31 = &v22[v30];
      v32 = &v23[v30];
      v33 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v33;
      v22[v24[7]] = v23[v24[7]];
      v22[v24[8]] = v23[v24[8]];
      v22[v24[9]] = v23[v24[9]];
      v22[v24[10]] = v23[v24[10]];
      v34 = *(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56);
      swift_bridgeObjectRetain();
      v34(v22, 0, 1, v24);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_EmergConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    v5(v6, v4);
  v8 = a1 + *(int *)(a2 + 32);
  v9 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    v5(v8, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_EmergConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, int *);
  void (*v33)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage();
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v33(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v33((uint64_t)v12, (uint64_t)v13, v6);
    *((_BYTE *)v12 + *(int *)(v14 + 20)) = *((_BYTE *)v13 + *(int *)(v14 + 20));
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v33((uint64_t)v19, (uint64_t)v20, v6);
    v24 = v21[5];
    v25 = &v19[v24];
    v26 = &v20[v24];
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    v27 = v21[6];
    v28 = &v19[v27];
    v29 = &v20[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v19[v21[7]] = v20[v21[7]];
    v19[v21[8]] = v20[v21[8]];
    v19[v21[9]] = v20[v21[9]];
    v19[v21[10]] = v20[v21[10]];
    v31 = *(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56);
    swift_bridgeObjectRetain();
    v31(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_EmergConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  void (*v34)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;

  v6 = type metadata accessor for UnknownStorage();
  v45 = *(_QWORD *)(v6 - 8);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 24);
  v44(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 16))(v11, v12, v6);
      v11[*(int *)(v13 + 20)] = v12[*(int *)(v13 + 20)];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v44((uint64_t)v11, (uint64_t)v12, v6);
  v11[*(int *)(v13 + 20)] = v12[*(int *)(v13 + 20)];
LABEL_7:
  v19 = a3[8];
  v20 = (_BYTE *)(a1 + v19);
  v21 = (_BYTE *)(a2 + v19);
  v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v44((uint64_t)v20, (uint64_t)v21, v6);
      v37 = v22[5];
      v38 = &v20[v37];
      v39 = &v21[v37];
      v40 = *(_DWORD *)v39;
      v38[4] = v39[4];
      *(_DWORD *)v38 = v40;
      v41 = v22[6];
      v42 = &v20[v41];
      v43 = &v21[v41];
      *v42 = *v43;
      v42[1] = v43[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      v20[v22[9]] = v21[v22[9]];
      v20[v22[10]] = v21[v22[10]];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 16))(v20, v21, v6);
  v27 = v22[5];
  v28 = &v20[v27];
  v29 = &v21[v27];
  v30 = *(_DWORD *)v29;
  v28[4] = v29[4];
  *(_DWORD *)v28 = v30;
  v31 = v22[6];
  v32 = &v20[v31];
  v33 = &v21[v31];
  *v32 = *v33;
  v32[1] = v33[1];
  v20[v22[7]] = v21[v22[7]];
  v20[v22[8]] = v21[v22[8]];
  v20[v22[9]] = v21[v22[9]];
  v20[v22[10]] = v21[v22[10]];
  v34 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v23 + 56);
  swift_bridgeObjectRetain();
  v34(v20, 0, 1, v22);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_EmergConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *((_BYTE *)v10 + *(int *)(v12 + 20)) = *((_BYTE *)v11 + *(int *)(v12 + 20));
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[8];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v16, (uint64_t)v17, v6);
    v21 = v18[5];
    v22 = &v16[v21];
    v23 = &v17[v21];
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    *(_OWORD *)&v16[v18[6]] = *(_OWORD *)&v17[v18[6]];
    v16[v18[7]] = v17[v18[7]];
    v16[v18[8]] = v17[v18[8]];
    v16[v18[9]] = v17[v18[9]];
    v16[v18[10]] = v17[v18[10]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_EmergConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;

  v6 = type metadata accessor for UnknownStorage();
  v43 = *(_QWORD *)(v6 - 8);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40);
  v42(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v43 + 32))(v13, v14, v6);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v42((uint64_t)v13, (uint64_t)v14, v6);
  v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
LABEL_7:
  v21 = a3[8];
  v22 = (_BYTE *)(a1 + v21);
  v23 = (_BYTE *)(a2 + v21);
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v42((uint64_t)v22, (uint64_t)v23, v6);
      v34 = v24[5];
      v35 = &v22[v34];
      v36 = &v23[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      v37 = v24[6];
      v38 = &v22[v37];
      v39 = (uint64_t *)&v23[v37];
      v41 = *v39;
      v40 = v39[1];
      *v38 = v41;
      v38[1] = v40;
      swift_bridgeObjectRelease();
      v22[v24[7]] = v23[v24[7]];
      v22[v24[8]] = v23[v24[8]];
      v22[v24[9]] = v23[v24[9]];
      v22[v24[10]] = v23[v24[10]];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v22, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v43 + 32))(v22, v23, v6);
  v29 = v24[5];
  v30 = &v22[v29];
  v31 = &v23[v29];
  *(_DWORD *)v30 = *(_DWORD *)v31;
  v30[4] = v31[4];
  *(_OWORD *)&v22[v24[6]] = *(_OWORD *)&v23[v24[6]];
  v22[v24[7]] = v23[v24[7]];
  v22[v24[8]] = v23[v24[8]];
  v22[v24[9]] = v23[v24[9]];
  v22[v24[10]] = v23[v24[10]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_EmergConfig()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B31EE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[6] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[7];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[8];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_EmergConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B31FD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Proto_Gnss_Emergency_EmergConfig()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CplaneConfig?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SuplConfig?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GpsAcqElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v26 = a3[11];
    v27 = a3[12];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v30 = (char *)a1 + v27;
    v31 = (char *)a2 + v27;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = a3[13];
    v33 = a3[14];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = (char *)a1 + v33;
    v37 = (char *)a2 + v33;
    *(_DWORD *)v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    v38 = a3[15];
    v39 = a3[16];
    v40 = (char *)a1 + v38;
    v41 = (char *)a2 + v38;
    *(_DWORD *)v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    v42 = (char *)a1 + v39;
    v43 = (char *)a2 + v39;
    *(_DWORD *)v42 = *(_DWORD *)v43;
    v42[4] = v43[4];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_GpsAcqElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = a3[15];
  v38 = a3[16];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = a1 + v38;
  v42 = a2 + v38;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_GpsAcqElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 4);
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = v10;
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 4);
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = v10;
  v32 = a3[13];
  v33 = a1 + v32;
  v34 = a2 + v32;
  LOBYTE(v10) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = v10;
  v35 = a3[14];
  v36 = a1 + v35;
  v37 = a2 + v35;
  LOBYTE(v10) = *(_BYTE *)(v37 + 4);
  *(_DWORD *)v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = v10;
  v38 = a3[15];
  v39 = a1 + v38;
  v40 = a2 + v38;
  LOBYTE(v10) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = v10;
  v41 = a3[16];
  v42 = a1 + v41;
  v43 = a2 + v41;
  LOBYTE(v10) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)v42 = *(_DWORD *)v43;
  *(_BYTE *)(v42 + 4) = v10;
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_GpsAcqElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = a3[15];
  v38 = a3[16];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = a1 + v38;
  v42 = a2 + v38;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_GpsAcqElement(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  v37 = a3[15];
  v38 = a3[16];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = a1 + v38;
  v42 = a2 + v38;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsAcqElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B329AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 68)) <= 7u)
    v9 = 7;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 68));
  v10 = v9 - 7;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 68)) >= 7u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsAcqElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B32A3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 68)) = a2 + 7;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_GpsAcqElement()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_GpsAcqAssistance(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v77;
  char *__dst;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = a3[8];
    v20 = (char *)v7 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v12(v20, v21, v11);
      v20[*(int *)(v22 + 20)] = v21[*(int *)(v22 + 20)];
      v25 = *(int *)(v22 + 24);
      v87 = v20;
      v26 = &v20[v25];
      v27 = &v21[v25];
      v28 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
      v86 = v12;
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v82 = v29;
        v83 = v23;
        v86(v26, v27, v11);
        v84 = v26;
        v85 = v28;
        v31 = *(int *)(v28 + 20);
        v32 = &v26[v31];
        v33 = &v27[v31];
        v34 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
        v80 = *((_QWORD *)v34 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v80 + 48))(v33, 1, v34))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v86(v32, v33, v11);
          v36 = v34[5];
          v37 = &v32[v36];
          v38 = &v33[v36];
          *(_DWORD *)v37 = *(_DWORD *)v38;
          v37[4] = v38[4];
          v39 = v34[6];
          v40 = &v32[v39];
          v41 = &v33[v39];
          *(_DWORD *)v40 = *(_DWORD *)v41;
          v40[4] = v41[4];
          v42 = v34[7];
          v43 = &v32[v42];
          v44 = &v33[v42];
          *(_DWORD *)v43 = *(_DWORD *)v44;
          v43[4] = v44[4];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v80 + 56))(v32, 0, 1, v34);
        }
        v45 = v84;
        v46 = *(int *)(v85 + 24);
        v47 = &v84[v46];
        v48 = &v27[v46];
        v49 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
        v50 = *((_QWORD *)v49 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v50 + 48))(v48, 1, v49))
        {
          v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          v52 = v82;
        }
        else
        {
          v86(v47, v48, v11);
          v53 = v49[5];
          v81 = v47;
          __dst = &v47[v53];
          v79 = v48;
          v54 = &v48[v53];
          v55 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
          v77 = *(_QWORD *)(v55 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v54, 1, v55))
          {
            v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
            memcpy(__dst, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            v86(__dst, v54, v11);
            v57 = *(int *)(v55 + 20);
            v58 = &__dst[v57];
            v59 = &v54[v57];
            *(_DWORD *)v58 = *(_DWORD *)v59;
            v58[4] = v59[4];
            v60 = *(int *)(v55 + 24);
            v61 = &__dst[v60];
            v62 = &v54[v60];
            *(_DWORD *)v61 = *(_DWORD *)v62;
            v61[4] = v62[4];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v55);
          }
          v52 = v82;
          v63 = v49[6];
          v64 = &v81[v63];
          v65 = &v79[v63];
          *(_DWORD *)v64 = *(_DWORD *)v65;
          v64[4] = v65[4];
          v66 = v49[7];
          v67 = &v81[v66];
          v68 = &v79[v66];
          v67[4] = v68[4];
          *(_DWORD *)v67 = *(_DWORD *)v68;
          (*(void (**)(void))(v50 + 56))();
          v45 = v84;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v45, 0, 1, v85);
        v23 = v83;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v87, 0, 1, v22);
    }
    v69 = a3[9];
    v70 = a3[10];
    v71 = (char *)v7 + v69;
    v72 = (char *)a2 + v69;
    *(_DWORD *)v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    *((_BYTE *)v7 + v70) = *((_BYTE *)a2 + v70);
    v73 = a3[12];
    *((_BYTE *)v7 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v74 = (char *)v7 + v73;
    v75 = (char *)a2 + v73;
    *(_DWORD *)v74 = *(_DWORD *)v75;
    v74[4] = v75[4];
  }
  return v7;
}

uint64_t destroy for Proto_Gnss_Emergency_GpsAcqAssistance(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v17(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v17(v6, v5);
    v9 = v6 + *(int *)(v7 + 24);
    v10 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    if (!(_DWORD)result)
    {
      v17(v9, v5);
      v11 = v9 + *(int *)(v10 + 20);
      v12 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
        v17(v11, v5);
      v13 = v9 + *(int *)(v10 + 24);
      v14 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
      if (!(_DWORD)result)
      {
        v17(v13, v5);
        v15 = v13 + *(int *)(v14 + 20);
        v16 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16);
        if (!(_DWORD)result)
          return ((uint64_t (*)(uint64_t, uint64_t))v17)(v15, v5);
      }
    }
  }
  return result;
}

_QWORD *initializeWithCopy for Proto_Gnss_Emergency_GpsAcqAssistance(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v75;
  char *__dst;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v10(v18, v19, v9);
    v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
    v23 = *(int *)(v20 + 24);
    v85 = v18;
    v24 = &v18[v23];
    v25 = &v19[v23];
    v26 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
    v84 = v10;
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v80 = v27;
      v81 = v21;
      v84(v24, v25, v9);
      v82 = v24;
      v83 = v26;
      v29 = *(int *)(v26 + 20);
      v30 = &v24[v29];
      v31 = &v25[v29];
      v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v78 = *((_QWORD *)v32 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v31, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v84(v30, v31, v9);
        v34 = v32[5];
        v35 = &v30[v34];
        v36 = &v31[v34];
        *(_DWORD *)v35 = *(_DWORD *)v36;
        v35[4] = v36[4];
        v37 = v32[6];
        v38 = &v30[v37];
        v39 = &v31[v37];
        *(_DWORD *)v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        v40 = v32[7];
        v41 = &v30[v40];
        v42 = &v31[v40];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v30, 0, 1, v32);
      }
      v43 = v82;
      v44 = *(int *)(v83 + 24);
      v45 = &v82[v44];
      v46 = &v25[v44];
      v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v48 = *((_QWORD *)v47 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v80;
      }
      else
      {
        v84(v45, v46, v9);
        v51 = v47[5];
        v79 = v45;
        __dst = &v45[v51];
        v77 = v46;
        v52 = &v46[v51];
        v53 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v75 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v52, 1, v53))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          v84(__dst, v52, v9);
          v55 = *(int *)(v53 + 20);
          v56 = &__dst[v55];
          v57 = &v52[v55];
          *(_DWORD *)v56 = *(_DWORD *)v57;
          v56[4] = v57[4];
          v58 = *(int *)(v53 + 24);
          v59 = &__dst[v58];
          v60 = &v52[v58];
          *(_DWORD *)v59 = *(_DWORD *)v60;
          v59[4] = v60[4];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v53);
        }
        v50 = v80;
        v61 = v47[6];
        v62 = &v79[v61];
        v63 = &v77[v61];
        *(_DWORD *)v62 = *(_DWORD *)v63;
        v62[4] = v63[4];
        v64 = v47[7];
        v65 = &v79[v64];
        v66 = &v77[v64];
        v65[4] = v66[4];
        *(_DWORD *)v65 = *(_DWORD *)v66;
        (*(void (**)(void))(v48 + 56))();
        v43 = v82;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v43, 0, 1, v83);
      v21 = v81;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v85, 0, 1, v20);
  }
  v67 = a3[9];
  v68 = a3[10];
  v69 = (char *)a1 + v67;
  v70 = (char *)a2 + v67;
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  *((_BYTE *)a1 + v68) = *((_BYTE *)a2 + v68);
  v71 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  *(_DWORD *)v72 = *(_DWORD *)v73;
  v72[4] = v73[4];
  return a1;
}

_QWORD *assignWithCopy for Proto_Gnss_Emergency_GpsAcqAssistance(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *);
  uint64_t v11;
  char *v12;
  char *v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  int v26;
  void (*v27)(uint64_t, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  size_t v35;
  void *v36;
  char *v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t (*v85)(uint64_t, uint64_t, int *);
  int v86;
  size_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int v124;
  void (*v125)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int v130;
  uint64_t v131;
  char *v132;
  char *v133;
  int v134;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int v164;
  uint64_t v165;
  char *v166;
  char *v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  int *v184;
  _QWORD *v185;
  uint64_t (*v186)(uint64_t, uint64_t, int *);
  int v187;
  int v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t (*v198)(uint64_t, uint64_t, uint64_t);
  int v199;
  size_t v200;
  void *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  int v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *__dst;
  uint64_t (**__dsta)(_QWORD, uint64_t, uint64_t);
  void (*v247)(char *, char *, uint64_t);
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  int *v256;
  void (*v257)(char *, char *, uint64_t);
  uint64_t v258;
  uint64_t v259;
  _QWORD *__src;
  _QWORD *__srca;
  char *__srcb;
  void (**__srcc)(uint64_t, _QWORD, uint64_t, int *);
  char *__srcd;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  void (*v268)(uint64_t, char *, uint64_t);
  uint64_t v269;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v265 = *(_QWORD *)(v9 - 8);
  v269 = v9;
  v10 = *(void (**)(char *, char *))(v265 + 24);
  v10(v7, v8);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = v13[4];
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v14;
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = v17[4];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v18;
  v19 = a3[8];
  v20 = (uint64_t)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v23 = *(_QWORD **)(v22 - 8);
  v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v23[6];
  v25 = v24(v20, 1, v22);
  v26 = v24((uint64_t)v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v256 = a3;
      __src = v23;
      v27 = *(void (**)(uint64_t, char *, uint64_t))(v265 + 16);
      v27(v20, v21, v269);
      *(_BYTE *)(v20 + *(int *)(v22 + 20)) = v21[*(int *)(v22 + 20)];
      v28 = *(int *)(v22 + 24);
      v29 = (char *)(v20 + v28);
      v30 = &v21[v28];
      v31 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        a3 = v256;
        v34 = __src;
      }
      else
      {
        v253 = v32;
        v27((uint64_t)v29, v30, v269);
        v52 = *(int *)(v31 + 20);
        v267 = v29;
        v53 = &v29[v52];
        v54 = &v30[v52];
        v55 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
        v249 = *((_QWORD *)v55 - 1);
        v247 = (void (*)(char *, char *, uint64_t))v27;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v249 + 48))(v54, 1, v55))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v27((uint64_t)v53, v54, v269);
          v57 = v55[5];
          v58 = &v53[v57];
          v59 = &v54[v57];
          v60 = v59[4];
          *(_DWORD *)v58 = *(_DWORD *)v59;
          v58[4] = v60;
          v61 = v55[6];
          v62 = &v53[v61];
          v63 = &v54[v61];
          v64 = v63[4];
          *(_DWORD *)v62 = *(_DWORD *)v63;
          v62[4] = v64;
          v65 = v55[7];
          v66 = &v53[v65];
          v67 = &v54[v65];
          v68 = v67[4];
          *(_DWORD *)v66 = *(_DWORD *)v67;
          v66[4] = v68;
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v249 + 56))(v53, 0, 1, v55);
        }
        v250 = v31;
        v69 = *(int *)(v31 + 24);
        v70 = v267;
        v71 = &v267[v69];
        v72 = &v30[v69];
        v73 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
        v74 = *((_QWORD *)v73 - 1);
        v34 = __src;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
        {
          v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          a3 = v256;
        }
        else
        {
          v243 = v74;
          v247(v71, v72, v269);
          v76 = v73[5];
          v244 = v71;
          __dst = &v71[v76];
          v77 = &v72[v76];
          v78 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
          v242 = *(_QWORD *)(v78 - 8);
          v79 = v77;
          v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v242 + 48))(v77, 1, v78);
          a3 = v256;
          if (v80)
          {
            v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
            memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            v247(__dst, v79, v269);
            v109 = *(int *)(v78 + 20);
            v110 = &__dst[v109];
            v111 = &v79[v109];
            v112 = v111[4];
            *(_DWORD *)v110 = *(_DWORD *)v111;
            v110[4] = v112;
            v113 = *(int *)(v78 + 24);
            v114 = &__dst[v113];
            v115 = &v79[v113];
            v116 = v115[4];
            *(_DWORD *)v114 = *(_DWORD *)v115;
            v114[4] = v116;
            (*(void (**)(void))(v242 + 56))();
          }
          v117 = v73[6];
          v118 = &v244[v117];
          v119 = &v72[v117];
          v120 = *(_DWORD *)v119;
          v118[4] = v119[4];
          *(_DWORD *)v118 = v120;
          v121 = v73[7];
          v122 = &v244[v121];
          v123 = &v72[v121];
          v124 = *(_DWORD *)v123;
          v122[4] = v123[4];
          *(_DWORD *)v122 = v124;
          (*(void (**)(void))(v243 + 56))();
          v70 = v267;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v70, 0, 1, v250);
      }
      v125 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v34[7];
      v126 = v20;
      goto LABEL_33;
    }
    goto LABEL_7;
  }
  if (v26)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v20, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
LABEL_7:
    v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?)
                                - 8)
                    + 64);
    v36 = (void *)v20;
    v37 = v21;
LABEL_8:
    memcpy(v36, v37, v35);
    goto LABEL_34;
  }
  v38 = (void (*)(uint64_t, char *, uint64_t))v10;
  ((void (*)(uint64_t, char *, uint64_t))v10)(v20, v21, v269);
  *(_BYTE *)(v20 + *(int *)(v22 + 20)) = v21[*(int *)(v22 + 20)];
  v39 = *(int *)(v22 + 24);
  v40 = v20 + v39;
  v41 = &v21[v39];
  v22 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  __srca = *(_QWORD **)(v22 - 8);
  v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__srca[6];
  v43 = v42(v40, 1, v22);
  v44 = v42((uint64_t)v41, 1, v22);
  if (v43)
  {
    if (!v44)
    {
      v45 = *(void (**)(uint64_t, char *, uint64_t))(v265 + 16);
      v45(v40, v41, v269);
      v46 = *(int *)(v22 + 20);
      v266 = v40;
      v47 = (char *)(v40 + v46);
      v48 = &v41[v46];
      v49 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v50 = *((_QWORD *)v49 - 1);
      v257 = (void (*)(char *, char *, uint64_t))v45;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v50 + 48))(v48, 1, v49))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v45((uint64_t)v47, v48, v269);
        v89 = v49[5];
        v90 = &v47[v89];
        v91 = &v48[v89];
        v92 = v91[4];
        *(_DWORD *)v90 = *(_DWORD *)v91;
        v90[4] = v92;
        v93 = v49[6];
        v94 = &v47[v93];
        v95 = &v48[v93];
        v96 = v95[4];
        *(_DWORD *)v94 = *(_DWORD *)v95;
        v94[4] = v96;
        v97 = v49[7];
        v98 = &v47[v97];
        v99 = &v48[v97];
        v100 = v99[4];
        *(_DWORD *)v98 = *(_DWORD *)v99;
        v98[4] = v100;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v50 + 56))(v47, 0, 1, v49);
      }
      v101 = *(int *)(v22 + 24);
      v102 = v266;
      v103 = (char *)(v266 + v101);
      v104 = &v41[v101];
      v105 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v106 = *((_QWORD *)v105 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v106 + 48))(v104, 1, v105))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        v108 = __srca;
      }
      else
      {
        v248 = v106;
        v257(v103, v104, v269);
        v136 = v105[5];
        v254 = &v103[v136];
        v137 = &v104[v136];
        v138 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        __dsta = *(uint64_t (***)(_QWORD, uint64_t, uint64_t))(v138 - 8);
        v252 = v137;
        v139 = ((uint64_t (**)(char *, uint64_t, uint64_t))__dsta)[6](v137, 1, v138);
        v108 = __srca;
        if (v139)
        {
          v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(v254, v252, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          v257(v254, v252, v269);
          v153 = *(int *)(v138 + 20);
          v154 = &v254[v153];
          v155 = &v252[v153];
          v156 = v155[4];
          *(_DWORD *)v154 = *(_DWORD *)v155;
          v154[4] = v156;
          v157 = *(int *)(v138 + 24);
          v158 = &v254[v157];
          v159 = &v252[v157];
          v160 = v159[4];
          *(_DWORD *)v158 = *(_DWORD *)v159;
          v158[4] = v160;
          ((void (*)(void))__dsta[7])();
        }
        v161 = v105[6];
        v162 = &v103[v161];
        v163 = &v104[v161];
        v164 = *(_DWORD *)v163;
        v162[4] = v163[4];
        *(_DWORD *)v162 = v164;
        v165 = v105[7];
        v166 = &v103[v165];
        v167 = &v104[v165];
        v168 = *(_DWORD *)v167;
        v166[4] = v167[4];
        *(_DWORD *)v166 = v168;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v248 + 56))(v103, 0, 1, v105);
        v102 = v266;
      }
      v125 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v108[7];
      v126 = v102;
LABEL_33:
      v125(v126, 0, 1, v22);
      goto LABEL_34;
    }
    goto LABEL_17;
  }
  if (v44)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v40, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_17:
    v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?)
                                - 8)
                    + 64);
    v36 = (void *)v40;
    v37 = v41;
    goto LABEL_8;
  }
  v38(v40, v41, v269);
  v82 = *(int *)(v22 + 20);
  v83 = v40 + v82;
  __srcb = &v41[v82];
  v84 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v251 = *((_QWORD *)v84 - 1);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v251 + 48);
  v258 = v83;
  LODWORD(v83) = v85(v83, 1, v84);
  v86 = v85((uint64_t)__srcb, 1, v84);
  if ((_DWORD)v83)
  {
    if (v86)
    {
      v87 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v88 = (void *)v258;
LABEL_39:
      memcpy(v88, __srcb, v87);
      goto LABEL_45;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v265 + 16))(v258, __srcb, v269);
    v141 = v84[5];
    v142 = v258 + v141;
    v143 = &__srcb[v141];
    v144 = v143[4];
    *(_DWORD *)v142 = *(_DWORD *)v143;
    *(_BYTE *)(v142 + 4) = v144;
    v145 = v84[6];
    v146 = v258 + v145;
    v147 = &__srcb[v145];
    v148 = v147[4];
    *(_DWORD *)v146 = *(_DWORD *)v147;
    *(_BYTE *)(v146 + 4) = v148;
    v149 = v84[7];
    v150 = v258 + v149;
    v151 = &__srcb[v149];
    v152 = v151[4];
    *(_DWORD *)v150 = *(_DWORD *)v151;
    *(_BYTE *)(v150 + 4) = v152;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v251 + 56))(v258, 0, 1);
  }
  else
  {
    if (v86)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v258, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v87 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v88 = (void *)v258;
      goto LABEL_39;
    }
    v38(v258, __srcb, v269);
    v169 = v84[5];
    v170 = v258 + v169;
    v171 = &__srcb[v169];
    v172 = v171[4];
    *(_DWORD *)v170 = *(_DWORD *)v171;
    *(_BYTE *)(v170 + 4) = v172;
    v173 = v84[6];
    v174 = v258 + v173;
    v175 = &__srcb[v173];
    v176 = v175[4];
    *(_DWORD *)v174 = *(_DWORD *)v175;
    *(_BYTE *)(v174 + 4) = v176;
    v177 = v84[7];
    v178 = v258 + v177;
    v179 = &__srcb[v177];
    v180 = v179[4];
    *(_DWORD *)v178 = *(_DWORD *)v179;
    *(_BYTE *)(v178 + 4) = v180;
  }
LABEL_45:
  v181 = *(int *)(v22 + 24);
  v182 = v40 + v181;
  v183 = &v41[v181];
  v184 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v185 = (_QWORD *)*((_QWORD *)v184 - 1);
  v186 = (uint64_t (*)(uint64_t, uint64_t, int *))v185[6];
  v187 = v186(v182, 1, v184);
  v188 = v186((uint64_t)v183, 1, v184);
  if (!v187)
  {
    if (v188)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v182, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_51;
    }
    v38(v182, v183, v269);
    v195 = v184[5];
    v196 = v182 + v195;
    __srcd = &v183[v195];
    v197 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v255 = *(_QWORD *)(v197 - 8);
    v259 = v196;
    v198 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v255 + 48);
    LODWORD(v196) = v198(v196, 1, v197);
    v199 = v198((uint64_t)__srcd, 1, v197);
    if ((_DWORD)v196)
    {
      if (!v199)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v265 + 16))(v259, __srcd, v269);
        v218 = *(int *)(v197 + 20);
        v219 = v259 + v218;
        v220 = &__srcd[v218];
        v221 = v220[4];
        *(_DWORD *)v219 = *(_DWORD *)v220;
        *(_BYTE *)(v219 + 4) = v221;
        v222 = *(int *)(v197 + 24);
        v223 = v259 + v222;
        v224 = &__srcd[v222];
        v225 = v224[4];
        *(_DWORD *)v223 = *(_DWORD *)v224;
        *(_BYTE *)(v223 + 4) = v225;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v255 + 56))(v259, 0, 1, v197);
        goto LABEL_62;
      }
      v200 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v201 = (void *)v259;
    }
    else
    {
      if (!v199)
      {
        v38(v259, __srcd, v269);
        v226 = *(int *)(v197 + 20);
        v227 = v259 + v226;
        v228 = &__srcd[v226];
        v229 = v228[4];
        *(_DWORD *)v227 = *(_DWORD *)v228;
        *(_BYTE *)(v227 + 4) = v229;
        v230 = *(int *)(v197 + 24);
        v231 = v259 + v230;
        v232 = &__srcd[v230];
        v233 = v232[4];
        *(_DWORD *)v231 = *(_DWORD *)v232;
        *(_BYTE *)(v231 + 4) = v233;
        goto LABEL_62;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v259, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v200 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v201 = (void *)v259;
    }
    memcpy(v201, __srcd, v200);
LABEL_62:
    v234 = v184[6];
    v235 = v182 + v234;
    v236 = &v183[v234];
    v237 = *(_DWORD *)v236;
    *(_BYTE *)(v235 + 4) = v236[4];
    *(_DWORD *)v235 = v237;
    v238 = v184[7];
    v239 = v182 + v238;
    v240 = &v183[v238];
    v241 = *(_DWORD *)v240;
    *(_BYTE *)(v239 + 4) = v240[4];
    *(_DWORD *)v239 = v241;
    goto LABEL_34;
  }
  if (v188)
  {
LABEL_51:
    v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?)
                                - 8)
                    + 64);
    v36 = (void *)v182;
    v37 = v183;
    goto LABEL_8;
  }
  __srcc = (void (**)(uint64_t, _QWORD, uint64_t, int *))v185;
  v268 = *(void (**)(uint64_t, char *, uint64_t))(v265 + 16);
  v268(v182, v183, v269);
  v189 = v184[5];
  v190 = (char *)(v182 + v189);
  v191 = &v183[v189];
  v192 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v193 = *(_QWORD *)(v192 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
  {
    v194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
  }
  else
  {
    v268((uint64_t)v190, v191, v269);
    v202 = *(int *)(v192 + 20);
    v203 = &v190[v202];
    v204 = &v191[v202];
    v205 = v204[4];
    *(_DWORD *)v203 = *(_DWORD *)v204;
    v203[4] = v205;
    v206 = *(int *)(v192 + 24);
    v207 = &v190[v206];
    v208 = &v191[v206];
    v209 = v208[4];
    *(_DWORD *)v207 = *(_DWORD *)v208;
    v207[4] = v209;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
  }
  v210 = v184[6];
  v211 = v182 + v210;
  v212 = &v183[v210];
  v213 = *(_DWORD *)v212;
  *(_BYTE *)(v211 + 4) = v212[4];
  *(_DWORD *)v211 = v213;
  v214 = v184[7];
  v215 = v182 + v214;
  v216 = &v183[v214];
  v217 = *(_DWORD *)v216;
  *(_BYTE *)(v215 + 4) = v216[4];
  *(_DWORD *)v215 = v217;
  __srcc[7](v182, 0, 1, v184);
LABEL_34:
  v127 = a3[9];
  v128 = (char *)a1 + v127;
  v129 = (char *)a2 + v127;
  v130 = *(_DWORD *)v129;
  v128[4] = v129[4];
  *(_DWORD *)v128 = v130;
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v131 = a3[12];
  v132 = (char *)a1 + v131;
  v133 = (char *)a2 + v131;
  v134 = *(_DWORD *)v133;
  v132[4] = v133[4];
  *(_DWORD *)v132 = v134;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gnss_Emergency_GpsAcqAssistance(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v75;
  char *__dst;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v10(v18, v19, v9);
    v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
    v23 = *(int *)(v20 + 24);
    v85 = v18;
    v24 = &v18[v23];
    v25 = &v19[v23];
    v26 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
    v84 = v10;
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v80 = v27;
      v81 = v21;
      v84(v24, v25, v9);
      v82 = v24;
      v83 = v26;
      v29 = *(int *)(v26 + 20);
      v30 = &v24[v29];
      v31 = &v25[v29];
      v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v78 = *((_QWORD *)v32 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v31, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v84(v30, v31, v9);
        v34 = v32[5];
        v35 = &v30[v34];
        v36 = &v31[v34];
        *(_DWORD *)v35 = *(_DWORD *)v36;
        v35[4] = v36[4];
        v37 = v32[6];
        v38 = &v30[v37];
        v39 = &v31[v37];
        *(_DWORD *)v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        v40 = v32[7];
        v41 = &v30[v40];
        v42 = &v31[v40];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56))(v30, 0, 1, v32);
      }
      v43 = v82;
      v44 = *(int *)(v83 + 24);
      v45 = &v82[v44];
      v46 = &v25[v44];
      v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v48 = *((_QWORD *)v47 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v50 = v80;
      }
      else
      {
        v84(v45, v46, v9);
        v51 = v47[5];
        v79 = v45;
        __dst = &v45[v51];
        v77 = v46;
        v52 = &v46[v51];
        v53 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v75 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v52, 1, v53))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          v84(__dst, v52, v9);
          v55 = *(int *)(v53 + 20);
          v56 = &__dst[v55];
          v57 = &v52[v55];
          *(_DWORD *)v56 = *(_DWORD *)v57;
          v56[4] = v57[4];
          v58 = *(int *)(v53 + 24);
          v59 = &__dst[v58];
          v60 = &v52[v58];
          *(_DWORD *)v59 = *(_DWORD *)v60;
          v59[4] = v60[4];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v53);
        }
        v50 = v80;
        v61 = v47[6];
        v62 = &v79[v61];
        v63 = &v77[v61];
        *(_DWORD *)v62 = *(_DWORD *)v63;
        v62[4] = v63[4];
        v64 = v47[7];
        v65 = &v79[v64];
        v66 = &v77[v64];
        v65[4] = v66[4];
        *(_DWORD *)v65 = *(_DWORD *)v66;
        (*(void (**)(void))(v48 + 56))();
        v43 = v82;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v43, 0, 1, v83);
      v21 = v81;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v85, 0, 1, v20);
  }
  v67 = a3[9];
  v68 = a3[10];
  v69 = (char *)a1 + v67;
  v70 = (char *)a2 + v67;
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  *((_BYTE *)a1 + v68) = *((_BYTE *)a2 + v68);
  v71 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  *(_DWORD *)v72 = *(_DWORD *)v73;
  v72[4] = v73[4];
  return a1;
}

_QWORD *assignWithTake for Proto_Gnss_Emergency_GpsAcqAssistance(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  size_t v32;
  void *v33;
  char *v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  int v40;
  int v41;
  void (*v42)(uint64_t, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t (*v79)(uint64_t, uint64_t, int *);
  int v80;
  size_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  void (*v112)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  int *v160;
  _QWORD *v161;
  uint64_t (*v162)(uint64_t, uint64_t, int *);
  int v163;
  int v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, uint64_t, uint64_t);
  int v175;
  size_t v176;
  void *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *__dst;
  void *__dsta;
  _QWORD *__dstb;
  char *__dstc;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  void (*v222)(char *, char *, uint64_t);
  char *v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *__src;
  _QWORD *__srca;
  char *__srcb;
  void (**__srcc)(uint64_t, _QWORD, uint64_t, int *);
  char *__srcd;
  uint64_t v231;
  void (*v232)(uint64_t, char *, uint64_t);
  uint64_t v233;
  void (*v234)(uint64_t, char *, uint64_t);
  uint64_t v235;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v231 = *(_QWORD *)(v9 - 8);
  v235 = v9;
  v10 = *(void (**)(char *, char *))(v231 + 40);
  v10(v7, v8);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  v17 = a3[8];
  v18 = (uint64_t)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  v21 = *(_QWORD **)(v20 - 8);
  v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v21[6];
  v23 = v22(v18, 1, v20);
  v24 = v22((uint64_t)v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      __src = v21;
      v232 = *(void (**)(uint64_t, char *, uint64_t))(v231 + 32);
      v232(v18, v19, v235);
      *(_BYTE *)(v18 + *(int *)(v20 + 20)) = v19[*(int *)(v20 + 20)];
      v25 = *(int *)(v20 + 24);
      v26 = (char *)(v18 + v25);
      v27 = &v19[v25];
      v28 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = __src;
      }
      else
      {
        v219 = v29;
        v232((uint64_t)v26, v27, v235);
        v49 = *(int *)(v28 + 20);
        v223 = v26;
        __dst = &v26[v49];
        v50 = &v27[v49];
        v51 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
        v212 = *((_QWORD *)v51 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v212 + 48))(v50, 1, v51))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
          memcpy(__dst, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          v232((uint64_t)__dst, v50, v235);
          v53 = v51[5];
          v54 = &__dst[v53];
          v55 = &v50[v53];
          *(_DWORD *)v54 = *(_DWORD *)v55;
          v54[4] = v55[4];
          v56 = v51[6];
          v57 = &__dst[v56];
          v58 = &v50[v56];
          *(_DWORD *)v57 = *(_DWORD *)v58;
          v57[4] = v58[4];
          v59 = v51[7];
          v60 = &__dst[v59];
          v61 = &v50[v59];
          *(_DWORD *)v60 = *(_DWORD *)v61;
          v60[4] = v61[4];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v212 + 56))(__dst, 0, 1, v51);
        }
        __dsta = (void *)v28;
        v62 = *(int *)(v28 + 24);
        v63 = v223;
        v64 = &v223[v62];
        v65 = &v27[v62];
        v66 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          v31 = __src;
        }
        else
        {
          v210 = v67;
          v232((uint64_t)v64, v65, v235);
          v69 = *(int *)(v66 + 20);
          v213 = v64;
          v209 = &v64[v69];
          v70 = &v65[v69];
          v71 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
          v208 = *(_QWORD *)(v71 - 8);
          v72 = v70;
          v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v208 + 48))(v70, 1, v71);
          v74 = v66;
          if (v73)
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
            memcpy(v209, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            v232((uint64_t)v209, v72, v235);
            v100 = *(int *)(v71 + 20);
            v101 = &v209[v100];
            v102 = &v72[v100];
            *(_DWORD *)v101 = *(_DWORD *)v102;
            v101[4] = v102[4];
            v103 = *(int *)(v71 + 24);
            v104 = &v209[v103];
            v105 = &v72[v103];
            *(_DWORD *)v104 = *(_DWORD *)v105;
            v104[4] = v105[4];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v209, 0, 1, v71);
          }
          v31 = __src;
          v106 = *(int *)(v74 + 24);
          v107 = &v213[v106];
          v108 = &v65[v106];
          *(_DWORD *)v107 = *(_DWORD *)v108;
          v107[4] = v108[4];
          v109 = *(int *)(v74 + 28);
          v110 = &v213[v109];
          v111 = &v65[v109];
          v110[4] = v111[4];
          *(_DWORD *)v110 = *(_DWORD *)v111;
          (*(void (**)(void))(v210 + 56))();
          v63 = v223;
        }
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v219 + 56))(v63, 0, 1, __dsta);
      }
      v112 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v31[7];
      v113 = v18;
      goto LABEL_33;
    }
    goto LABEL_7;
  }
  if (v24)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v18, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
LABEL_7:
    v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?)
                                - 8)
                    + 64);
    v33 = (void *)v18;
    v34 = v19;
LABEL_8:
    memcpy(v33, v34, v32);
    goto LABEL_34;
  }
  v35 = (void (*)(uint64_t, char *, uint64_t))v10;
  ((void (*)(uint64_t, char *, uint64_t))v10)(v18, v19, v235);
  *(_BYTE *)(v18 + *(int *)(v20 + 20)) = v19[*(int *)(v20 + 20)];
  v36 = *(int *)(v20 + 24);
  v37 = v18 + v36;
  v38 = &v19[v36];
  v20 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  __srca = *(_QWORD **)(v20 - 8);
  v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__srca[6];
  v40 = v39(v37, 1, v20);
  v41 = v39((uint64_t)v38, 1, v20);
  if (v40)
  {
    if (!v41)
    {
      v42 = *(void (**)(uint64_t, char *, uint64_t))(v231 + 32);
      v42(v37, v38, v235);
      v43 = *(int *)(v20 + 20);
      v233 = v37;
      v44 = (char *)(v37 + v43);
      v45 = &v38[v43];
      v46 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v47 = *((_QWORD *)v46 - 1);
      v222 = (void (*)(char *, char *, uint64_t))v42;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v42((uint64_t)v44, v45, v235);
        v83 = v46[5];
        v84 = &v44[v83];
        v85 = &v45[v83];
        *(_DWORD *)v84 = *(_DWORD *)v85;
        v84[4] = v85[4];
        v86 = v46[6];
        v87 = &v44[v86];
        v88 = &v45[v86];
        *(_DWORD *)v87 = *(_DWORD *)v88;
        v87[4] = v88[4];
        v89 = v46[7];
        v90 = &v44[v89];
        v91 = &v45[v89];
        *(_DWORD *)v90 = *(_DWORD *)v91;
        v90[4] = v91[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
      }
      v92 = *(int *)(v20 + 24);
      v93 = v233;
      v94 = (char *)(v233 + v92);
      v95 = &v38[v92];
      v96 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v97 = *((_QWORD *)v96 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v97 + 48))(v95, 1, v96))
      {
        v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        v99 = __srca;
      }
      else
      {
        v214 = v97;
        v222(v94, v95, v235);
        v122 = v96[5];
        v220 = &v94[v122];
        v123 = &v95[v122];
        v124 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v211 = *(_QWORD *)(v124 - 8);
        __dstc = v123;
        v125 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48))(v123, 1, v124);
        v99 = __srca;
        if (v125)
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(v220, __dstc, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          v222(v220, __dstc, v235);
          v136 = *(int *)(v124 + 20);
          v137 = &v220[v136];
          v138 = &__dstc[v136];
          *(_DWORD *)v137 = *(_DWORD *)v138;
          v137[4] = v138[4];
          v139 = *(int *)(v124 + 24);
          v140 = &v220[v139];
          v141 = &__dstc[v139];
          *(_DWORD *)v140 = *(_DWORD *)v141;
          v140[4] = v141[4];
          (*(void (**)(void))(v211 + 56))();
        }
        v142 = v96[6];
        v143 = &v94[v142];
        v144 = &v95[v142];
        *(_DWORD *)v143 = *(_DWORD *)v144;
        v143[4] = v144[4];
        v145 = v96[7];
        v146 = &v94[v145];
        v147 = &v95[v145];
        v146[4] = v147[4];
        *(_DWORD *)v146 = *(_DWORD *)v147;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v214 + 56))(v94, 0, 1, v96);
        v93 = v233;
      }
      v112 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v99[7];
      v113 = v93;
LABEL_33:
      v112(v113, 0, 1, v20);
      goto LABEL_34;
    }
    goto LABEL_17;
  }
  if (v41)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v37, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_17:
    v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?)
                                - 8)
                    + 64);
    v33 = (void *)v37;
    v34 = v38;
    goto LABEL_8;
  }
  v35(v37, v38, v235);
  v76 = *(int *)(v20 + 20);
  v77 = v37 + v76;
  __srcb = &v38[v76];
  v78 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  __dstb = (_QWORD *)*((_QWORD *)v78 - 1);
  v79 = (uint64_t (*)(uint64_t, uint64_t, int *))__dstb[6];
  v224 = v77;
  LODWORD(v77) = v79(v77, 1, v78);
  v80 = v79((uint64_t)__srcb, 1, v78);
  if ((_DWORD)v77)
  {
    if (v80)
    {
      v81 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v82 = (void *)v224;
LABEL_39:
      memcpy(v82, __srcb, v81);
      goto LABEL_45;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v231 + 32))(v224, __srcb, v235);
    v127 = v78[5];
    v128 = v224 + v127;
    v129 = &__srcb[v127];
    *(_DWORD *)v128 = *(_DWORD *)v129;
    *(_BYTE *)(v128 + 4) = v129[4];
    v130 = v78[6];
    v131 = v224 + v130;
    v132 = &__srcb[v130];
    *(_DWORD *)v131 = *(_DWORD *)v132;
    *(_BYTE *)(v131 + 4) = v132[4];
    v133 = v78[7];
    v134 = v224 + v133;
    v135 = &__srcb[v133];
    *(_DWORD *)v134 = *(_DWORD *)v135;
    *(_BYTE *)(v134 + 4) = v135[4];
    ((void (*)(uint64_t, _QWORD, uint64_t))__dstb[7])(v224, 0, 1);
  }
  else
  {
    if (v80)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v224, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v81 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v82 = (void *)v224;
      goto LABEL_39;
    }
    v35(v224, __srcb, v235);
    v148 = v78[5];
    v149 = v224 + v148;
    v150 = &__srcb[v148];
    *(_DWORD *)v149 = *(_DWORD *)v150;
    *(_BYTE *)(v149 + 4) = v150[4];
    v151 = v78[6];
    v152 = v224 + v151;
    v153 = &__srcb[v151];
    *(_DWORD *)v152 = *(_DWORD *)v153;
    *(_BYTE *)(v152 + 4) = v153[4];
    v154 = v78[7];
    v155 = v224 + v154;
    v156 = &__srcb[v154];
    *(_DWORD *)v155 = *(_DWORD *)v156;
    *(_BYTE *)(v155 + 4) = v156[4];
  }
LABEL_45:
  v157 = *(int *)(v20 + 24);
  v158 = v37 + v157;
  v159 = &v38[v157];
  v160 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v161 = (_QWORD *)*((_QWORD *)v160 - 1);
  v162 = (uint64_t (*)(uint64_t, uint64_t, int *))v161[6];
  v163 = v162(v158, 1, v160);
  v164 = v162((uint64_t)v159, 1, v160);
  if (!v163)
  {
    if (v164)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v158, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_51;
    }
    v35(v158, v159, v235);
    v171 = v160[5];
    v172 = v158 + v171;
    __srcd = &v159[v171];
    v173 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v221 = *(_QWORD *)(v173 - 8);
    v225 = v172;
    v174 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v221 + 48);
    LODWORD(v172) = v174(v172, 1, v173);
    v175 = v174((uint64_t)__srcd, 1, v173);
    if ((_DWORD)v172)
    {
      if (!v175)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v231 + 32))(v225, __srcd, v235);
        v190 = *(int *)(v173 + 20);
        v191 = v225 + v190;
        v192 = &__srcd[v190];
        *(_DWORD *)v191 = *(_DWORD *)v192;
        *(_BYTE *)(v191 + 4) = v192[4];
        v193 = *(int *)(v173 + 24);
        v194 = v225 + v193;
        v195 = &__srcd[v193];
        *(_DWORD *)v194 = *(_DWORD *)v195;
        *(_BYTE *)(v194 + 4) = v195[4];
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v221 + 56))(v225, 0, 1, v173);
        goto LABEL_62;
      }
      v176 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v177 = (void *)v225;
    }
    else
    {
      if (!v175)
      {
        v35(v225, __srcd, v235);
        v196 = *(int *)(v173 + 20);
        v197 = v225 + v196;
        v198 = &__srcd[v196];
        *(_DWORD *)v197 = *(_DWORD *)v198;
        *(_BYTE *)(v197 + 4) = v198[4];
        v199 = *(int *)(v173 + 24);
        v200 = v225 + v199;
        v201 = &__srcd[v199];
        *(_DWORD *)v200 = *(_DWORD *)v201;
        *(_BYTE *)(v200 + 4) = v201[4];
        goto LABEL_62;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v225, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v176 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v177 = (void *)v225;
    }
    memcpy(v177, __srcd, v176);
LABEL_62:
    v202 = v160[6];
    v203 = v158 + v202;
    v204 = &v159[v202];
    *(_DWORD *)v203 = *(_DWORD *)v204;
    *(_BYTE *)(v203 + 4) = v204[4];
    v205 = v160[7];
    v206 = v158 + v205;
    v207 = &v159[v205];
    *(_BYTE *)(v206 + 4) = v207[4];
    *(_DWORD *)v206 = *(_DWORD *)v207;
    goto LABEL_34;
  }
  if (v164)
  {
LABEL_51:
    v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?)
                                - 8)
                    + 64);
    v33 = (void *)v158;
    v34 = v159;
    goto LABEL_8;
  }
  __srcc = (void (**)(uint64_t, _QWORD, uint64_t, int *))v161;
  v234 = *(void (**)(uint64_t, char *, uint64_t))(v231 + 32);
  v234(v158, v159, v235);
  v165 = v160[5];
  v166 = (char *)(v158 + v165);
  v167 = &v159[v165];
  v168 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v169 = *(_QWORD *)(v168 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48))(v167, 1, v168))
  {
    v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
  }
  else
  {
    v234((uint64_t)v166, v167, v235);
    v178 = *(int *)(v168 + 20);
    v179 = &v166[v178];
    v180 = &v167[v178];
    *(_DWORD *)v179 = *(_DWORD *)v180;
    v179[4] = v180[4];
    v181 = *(int *)(v168 + 24);
    v182 = &v166[v181];
    v183 = &v167[v181];
    *(_DWORD *)v182 = *(_DWORD *)v183;
    v182[4] = v183[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
  }
  v184 = v160[6];
  v185 = v158 + v184;
  v186 = &v159[v184];
  *(_DWORD *)v185 = *(_DWORD *)v186;
  *(_BYTE *)(v185 + 4) = v186[4];
  v187 = v160[7];
  v188 = v158 + v187;
  v189 = &v159[v187];
  *(_BYTE *)(v188 + 4) = v189[4];
  *(_DWORD *)v188 = *(_DWORD *)v189;
  __srcc[7](v158, 0, 1, v160);
LABEL_34:
  v114 = a3[9];
  v115 = a3[10];
  v116 = (char *)a1 + v114;
  v117 = (char *)a2 + v114;
  *(_DWORD *)v116 = *(_DWORD *)v117;
  v116[4] = v117[4];
  *((_BYTE *)a1 + v115) = *((_BYTE *)a2 + v115);
  v118 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v119 = (char *)a1 + v118;
  v120 = (char *)a2 + v118;
  *(_DWORD *)v119 = *(_DWORD *)v120;
  v119[4] = v120[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_GpsAcqAssistance()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B355EC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_GpsAcqAssistance()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_235B3569C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void type metadata completion function for Proto_Gnss_Emergency_GpsAcqAssistance()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CellTimeAssistance?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CellFTAssistanceRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_39Tm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 6u)
    v9 = 6;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  v10 = v9 - 6;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 6u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CellFTAssistanceRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_40Tm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_CellFTAssistanceRequest()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

char *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_CellFTAssistance(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  char *__dst;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    a1[v9] = a2[v9];
    v10 = a3[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v58 = v14;
      v8(v11, v12, v7);
      v17 = *(int *)(v13 + 20);
      v18 = &v11[v17];
      v19 = &v12[v17];
      v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v21 = *((_QWORD *)v20 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v8(v18, v19, v7);
        v23 = v20[5];
        v24 = &v18[v23];
        v25 = &v19[v23];
        *(_DWORD *)v24 = *(_DWORD *)v25;
        v24[4] = v25[4];
        v26 = v20[6];
        v27 = &v18[v26];
        v28 = &v19[v26];
        *(_DWORD *)v27 = *(_DWORD *)v28;
        v27[4] = v28[4];
        v29 = v20[7];
        v30 = &v18[v29];
        v31 = &v19[v29];
        *(_DWORD *)v30 = *(_DWORD *)v31;
        v30[4] = v31[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      }
      v32 = *(int *)(v13 + 24);
      v33 = &v11[v32];
      v34 = &v12[v32];
      v35 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v36 = *((_QWORD *)v35 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v56 = v36;
        v8(v33, v34, v7);
        v38 = v35[5];
        __dst = &v33[v38];
        v39 = &v34[v38];
        v40 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v55 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v39, 1, v40))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v8(__dst, v39, v7);
          v42 = *(int *)(v40 + 20);
          v43 = &__dst[v42];
          v44 = &v39[v42];
          *(_DWORD *)v43 = *(_DWORD *)v44;
          v43[4] = v44[4];
          v45 = *(int *)(v40 + 24);
          v46 = &__dst[v45];
          v47 = &v39[v45];
          *(_DWORD *)v46 = *(_DWORD *)v47;
          v46[4] = v47[4];
          (*(void (**)(void))(v55 + 56))();
        }
        v48 = v35[6];
        v49 = &v33[v48];
        v50 = &v34[v48];
        *(_DWORD *)v49 = *(_DWORD *)v50;
        v49[4] = v50[4];
        v51 = v35[7];
        v52 = &v33[v51];
        v53 = &v34[v51];
        v52[4] = v53[4];
        *(_DWORD *)v52 = *(_DWORD *)v53;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v56 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_CellFTAssistance(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v14(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v14(v5, v4);
    v8 = v5 + *(int *)(v6 + 20);
    v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      v14(v8, v4);
    v10 = v5 + *(int *)(v6 + 24);
    v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
    if (!(_DWORD)result)
    {
      v14(v10, v4);
      v12 = v10 + *(int *)(v11 + 20);
      v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
      if (!(_DWORD)result)
        return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v4);
    }
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_CellFTAssistance(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  char *__dst;
  uint64_t v56;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v56 = v13;
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v15 = *(int *)(v12 + 20);
    v16 = &v10[v15];
    v17 = &v11[v15];
    v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    v19 = *((_QWORD *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      v21 = v18[5];
      v22 = &v16[v21];
      v23 = &v17[v21];
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      v24 = v18[6];
      v25 = &v16[v24];
      v26 = &v17[v24];
      *(_DWORD *)v25 = *(_DWORD *)v26;
      v25[4] = v26[4];
      v27 = v18[7];
      v28 = &v16[v27];
      v29 = &v17[v27];
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
    }
    v30 = *(int *)(v12 + 24);
    v31 = &v10[v30];
    v32 = &v11[v30];
    v33 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v34 = *((_QWORD *)v33 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v54 = v34;
      v7((uint64_t)v31, (uint64_t)v32, v6);
      v36 = v33[5];
      __dst = &v31[v36];
      v37 = &v32[v36];
      v38 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      v53 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
        memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v37, v6);
        v40 = *(int *)(v38 + 20);
        v41 = &__dst[v40];
        v42 = &v37[v40];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        v43 = *(int *)(v38 + 24);
        v44 = &__dst[v43];
        v45 = &v37[v43];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(void))(v53 + 56))();
      }
      v46 = v33[6];
      v47 = &v31[v46];
      v48 = &v32[v46];
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      v49 = v33[7];
      v50 = &v31[v49];
      v51 = &v32[v49];
      v50[4] = v51[4];
      *(_DWORD *)v50 = *(_DWORD *)v51;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithCopy for Proto_Gnss_Emergency_CellFTAssistance(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  int v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t (*v31)(char *, uint64_t, int *);
  int v32;
  size_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  uint64_t v86;
  char *v87;
  char *v88;
  char v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  int *v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t, int *);
  int v104;
  int v105;
  void (*v106)(uint64_t, char *, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  int v117;
  size_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  int v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  void (*__src)(char *, char *, uint64_t);
  char *v167;
  char *v168;
  char *v169;
  char *v170;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  a1[a3[6]] = a2[a3[6]];
  v9 = a3[7];
  v10 = (uint64_t)&a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v167 = a1;
      v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
      v17(v10, v11, v6);
      v18 = *(int *)(v12 + 20);
      v19 = (char *)(v10 + v18);
      v20 = &v11[v18];
      v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v22 = *((_QWORD *)v21 - 1);
      __src = (void (*)(char *, char *, uint64_t))v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v17((uint64_t)v19, v20, v6);
        v35 = v21[5];
        v36 = &v19[v35];
        v37 = &v20[v35];
        v38 = v37[4];
        *(_DWORD *)v36 = *(_DWORD *)v37;
        v36[4] = v38;
        v39 = v21[6];
        v40 = &v19[v39];
        v41 = &v20[v39];
        v42 = v41[4];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v42;
        v43 = v21[7];
        v44 = &v19[v43];
        v45 = &v20[v43];
        v46 = v45[4];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v46;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      }
      a1 = v167;
      v47 = *(int *)(v12 + 24);
      v48 = (char *)(v10 + v47);
      v49 = &v11[v47];
      v50 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v51 = *((_QWORD *)v50 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v49, 1, v50))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v162 = v51;
        __src(v48, v49, v6);
        v53 = v50[5];
        __dsta = &v48[v53];
        v54 = &v49[v53];
        v55 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v160 = *(_QWORD *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v54, 1, v55))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dsta, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          __src(__dsta, v54, v6);
          v69 = *(int *)(v55 + 20);
          v70 = &__dsta[v69];
          v71 = &v54[v69];
          v72 = v71[4];
          *(_DWORD *)v70 = *(_DWORD *)v71;
          v70[4] = v72;
          v73 = *(int *)(v55 + 24);
          v74 = &__dsta[v73];
          v75 = &v54[v73];
          v76 = v75[4];
          *(_DWORD *)v74 = *(_DWORD *)v75;
          v74[4] = v76;
          (*(void (**)(void))(v160 + 56))();
        }
        a1 = v167;
        v77 = v50[6];
        v78 = &v48[v77];
        v79 = &v49[v77];
        v80 = *(_DWORD *)v79;
        v78[4] = v79[4];
        *(_DWORD *)v78 = v80;
        v81 = v50[7];
        v82 = &v48[v81];
        v83 = &v49[v81];
        v84 = *(_DWORD *)v83;
        v82[4] = v83[4];
        *(_DWORD *)v82 = v84;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v162 + 56))(v48, 0, 1, v50);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?)
                                - 8)
                    + 64);
    v25 = (void *)v10;
    v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  __dst = v8;
  v8((char *)v10, v11, v6);
  v27 = *(int *)(v12 + 20);
  v28 = (char *)(v10 + v27);
  v29 = &v11[v27];
  v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v161 = *((_QWORD *)v30 - 1);
  v31 = *(uint64_t (**)(char *, uint64_t, int *))(v161 + 48);
  v168 = v28;
  LODWORD(v28) = v31(v28, 1, v30);
  v32 = v31(v29, 1, v30);
  if ((_DWORD)v28)
  {
    if (v32)
    {
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v34 = v168;
LABEL_19:
      memcpy(v34, v29, v33);
      goto LABEL_26;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v168, v29, v6);
    v57 = v30[5];
    v58 = &v168[v57];
    v59 = &v29[v57];
    v60 = v59[4];
    *(_DWORD *)v58 = *(_DWORD *)v59;
    v58[4] = v60;
    v61 = v30[6];
    v62 = &v168[v61];
    v63 = &v29[v61];
    v64 = v63[4];
    *(_DWORD *)v62 = *(_DWORD *)v63;
    v62[4] = v64;
    v65 = v30[7];
    v66 = &v168[v65];
    v67 = &v29[v65];
    v68 = v67[4];
    *(_DWORD *)v66 = *(_DWORD *)v67;
    v66[4] = v68;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v161 + 56))(v168, 0, 1, v30);
  }
  else
  {
    if (v32)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v168, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v34 = v168;
      goto LABEL_19;
    }
    __dst(v168, v29, v6);
    v86 = v30[5];
    v87 = &v168[v86];
    v88 = &v29[v86];
    v89 = v88[4];
    *(_DWORD *)v87 = *(_DWORD *)v88;
    v87[4] = v89;
    v90 = v30[6];
    v91 = &v168[v90];
    v92 = &v29[v90];
    v93 = v92[4];
    *(_DWORD *)v91 = *(_DWORD *)v92;
    v91[4] = v93;
    v94 = v30[7];
    v95 = &v168[v94];
    v96 = &v29[v94];
    v97 = v96[4];
    *(_DWORD *)v95 = *(_DWORD *)v96;
    v95[4] = v97;
  }
LABEL_26:
  v98 = *(int *)(v12 + 24);
  v99 = v10 + v98;
  v100 = &v11[v98];
  v101 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v102 = *((_QWORD *)v101 - 1);
  v103 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v102 + 48);
  v104 = v103(v99, 1, v101);
  v105 = v103((uint64_t)v100, 1, v101);
  if (!v104)
  {
    if (v105)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v99, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_32;
    }
    __dst((char *)v99, v100, v6);
    v112 = v101[5];
    v113 = (char *)(v99 + v112);
    v114 = &v100[v112];
    v115 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v163 = *(_QWORD *)(v115 - 8);
    v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v163 + 48);
    v170 = v113;
    LODWORD(v113) = v116(v113, 1, v115);
    v117 = v116(v114, 1, v115);
    if ((_DWORD)v113)
    {
      if (!v117)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v170, v114, v6);
        v136 = *(int *)(v115 + 20);
        v137 = &v170[v136];
        v138 = &v114[v136];
        v139 = v138[4];
        *(_DWORD *)v137 = *(_DWORD *)v138;
        v137[4] = v139;
        v140 = *(int *)(v115 + 24);
        v141 = &v170[v140];
        v142 = &v114[v140];
        v143 = v142[4];
        *(_DWORD *)v141 = *(_DWORD *)v142;
        v141[4] = v143;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v170, 0, 1, v115);
        goto LABEL_43;
      }
      v118 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v119 = v170;
    }
    else
    {
      if (!v117)
      {
        __dst(v170, v114, v6);
        v144 = *(int *)(v115 + 20);
        v145 = &v170[v144];
        v146 = &v114[v144];
        v147 = v146[4];
        *(_DWORD *)v145 = *(_DWORD *)v146;
        v145[4] = v147;
        v148 = *(int *)(v115 + 24);
        v149 = &v170[v148];
        v150 = &v114[v148];
        v151 = v150[4];
        *(_DWORD *)v149 = *(_DWORD *)v150;
        v149[4] = v151;
        goto LABEL_43;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v170, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v118 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v119 = v170;
    }
    memcpy(v119, v114, v118);
LABEL_43:
    v152 = v101[6];
    v153 = v99 + v152;
    v154 = &v100[v152];
    v155 = *(_DWORD *)v154;
    *(_BYTE *)(v153 + 4) = v154[4];
    *(_DWORD *)v153 = v155;
    v156 = v101[7];
    v157 = v99 + v156;
    v158 = &v100[v156];
    v159 = *(_DWORD *)v158;
    *(_BYTE *)(v157 + 4) = v158[4];
    *(_DWORD *)v157 = v159;
    return a1;
  }
  if (v105)
  {
LABEL_32:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?)
                                - 8)
                    + 64);
    v25 = (void *)v99;
    v26 = v100;
    goto LABEL_8;
  }
  v106 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v106(v99, v100, v6);
  v107 = v101[5];
  v169 = (char *)(v99 + v107);
  v108 = &v100[v107];
  v109 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v110 = *(_QWORD *)(v109 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v169, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    v106((uint64_t)v169, v108, v6);
    v120 = *(int *)(v109 + 20);
    v121 = &v169[v120];
    v122 = &v108[v120];
    v123 = v122[4];
    *(_DWORD *)v121 = *(_DWORD *)v122;
    v121[4] = v123;
    v124 = *(int *)(v109 + 24);
    v125 = &v169[v124];
    v126 = &v108[v124];
    v127 = v126[4];
    *(_DWORD *)v125 = *(_DWORD *)v126;
    v125[4] = v127;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v169, 0, 1, v109);
  }
  v128 = v101[6];
  v129 = v99 + v128;
  v130 = &v100[v128];
  v131 = *(_DWORD *)v130;
  *(_BYTE *)(v129 + 4) = v130[4];
  *(_DWORD *)v129 = v131;
  v132 = v101[7];
  v133 = v99 + v132;
  v134 = &v100[v132];
  v135 = *(_DWORD *)v134;
  *(_BYTE *)(v133 + 4) = v134[4];
  *(_DWORD *)v133 = v135;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v102 + 56))(v99, 0, 1, v101);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_CellFTAssistance(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  char *__dst;
  uint64_t v56;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v56 = v13;
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v15 = *(int *)(v12 + 20);
    v16 = &v10[v15];
    v17 = &v11[v15];
    v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    v19 = *((_QWORD *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      v21 = v18[5];
      v22 = &v16[v21];
      v23 = &v17[v21];
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      v24 = v18[6];
      v25 = &v16[v24];
      v26 = &v17[v24];
      *(_DWORD *)v25 = *(_DWORD *)v26;
      v25[4] = v26[4];
      v27 = v18[7];
      v28 = &v16[v27];
      v29 = &v17[v27];
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
    }
    v30 = *(int *)(v12 + 24);
    v31 = &v10[v30];
    v32 = &v11[v30];
    v33 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    v34 = *((_QWORD *)v33 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v54 = v34;
      v7((uint64_t)v31, (uint64_t)v32, v6);
      v36 = v33[5];
      __dst = &v31[v36];
      v37 = &v32[v36];
      v38 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
      v53 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
        memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v37, v6);
        v40 = *(int *)(v38 + 20);
        v41 = &__dst[v40];
        v42 = &v37[v40];
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        v43 = *(int *)(v38 + 24);
        v44 = &__dst[v43];
        v45 = &v37[v43];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(void))(v53 + 56))();
      }
      v46 = v33[6];
      v47 = &v31[v46];
      v48 = &v32[v46];
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      v49 = v33[7];
      v50 = &v31[v49];
      v51 = &v32[v49];
      v50[4] = v51[4];
      *(_DWORD *)v50 = *(_DWORD *)v51;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithTake for Proto_Gnss_Emergency_CellFTAssistance(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t (*v32)(char *, uint64_t, int *);
  int v33;
  size_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  int *v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, int *);
  int v92;
  int v93;
  void (*v94)(uint64_t, char *, uint64_t);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  size_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  void (*__src)(char *, char *, uint64_t);
  char *v145;
  char *v146;
  char *v147;
  char *v148;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v9] = a2[v9];
  v10 = a3[7];
  v11 = (uint64_t)&a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v145 = a1;
      v18 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
      v18(v11, v12, v6);
      v19 = *(int *)(v13 + 20);
      v20 = (char *)(v11 + v19);
      v21 = &v12[v19];
      v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
      v23 = *((_QWORD *)v22 - 1);
      __src = (void (*)(char *, char *, uint64_t))v18;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v18((uint64_t)v20, v21, v6);
        v36 = v22[5];
        v37 = &v20[v36];
        v38 = &v21[v36];
        *(_DWORD *)v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        v39 = v22[6];
        v40 = &v20[v39];
        v41 = &v21[v39];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        v42 = v22[7];
        v43 = &v20[v42];
        v44 = &v21[v42];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      a1 = v145;
      v45 = *(int *)(v13 + 24);
      v46 = (char *)(v11 + v45);
      v47 = &v12[v45];
      v48 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
      v49 = *((_QWORD *)v48 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1, v48))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v140 = v49;
        __src(v46, v47, v6);
        v51 = v48[5];
        __dsta = &v46[v51];
        v52 = &v47[v51];
        v53 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
        v138 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v52, 1, v53))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
          memcpy(__dsta, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          __src(__dsta, v52, v6);
          v64 = *(int *)(v53 + 20);
          v65 = &__dsta[v64];
          v66 = &v52[v64];
          *(_DWORD *)v65 = *(_DWORD *)v66;
          v65[4] = v66[4];
          v67 = *(int *)(v53 + 24);
          v68 = &__dsta[v67];
          v69 = &v52[v67];
          *(_DWORD *)v68 = *(_DWORD *)v69;
          v68[4] = v69[4];
          (*(void (**)(void))(v138 + 56))();
        }
        a1 = v145;
        v70 = v48[6];
        v71 = &v46[v70];
        v72 = &v47[v70];
        *(_DWORD *)v71 = *(_DWORD *)v72;
        v71[4] = v72[4];
        v73 = v48[7];
        v74 = &v46[v73];
        v75 = &v47[v73];
        v74[4] = v75[4];
        *(_DWORD *)v74 = *(_DWORD *)v75;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v140 + 56))(v46, 0, 1, v48);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      return a1;
    }
    goto LABEL_7;
  }
  if (v17)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v11, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?)
                                - 8)
                    + 64);
    v26 = (void *)v11;
    v27 = v12;
LABEL_8:
    memcpy(v26, v27, v25);
    return a1;
  }
  __dst = v8;
  v8((char *)v11, v12, v6);
  v28 = *(int *)(v13 + 20);
  v29 = (char *)(v11 + v28);
  v30 = &v12[v28];
  v31 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v139 = *((_QWORD *)v31 - 1);
  v32 = *(uint64_t (**)(char *, uint64_t, int *))(v139 + 48);
  v146 = v29;
  LODWORD(v29) = v32(v29, 1, v31);
  v33 = v32(v30, 1, v31);
  if ((_DWORD)v29)
  {
    if (v33)
    {
      v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v35 = v146;
LABEL_19:
      memcpy(v35, v30, v34);
      goto LABEL_26;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v146, v30, v6);
    v55 = v31[5];
    v56 = &v146[v55];
    v57 = &v30[v55];
    *(_DWORD *)v56 = *(_DWORD *)v57;
    v56[4] = v57[4];
    v58 = v31[6];
    v59 = &v146[v58];
    v60 = &v30[v58];
    *(_DWORD *)v59 = *(_DWORD *)v60;
    v59[4] = v60[4];
    v61 = v31[7];
    v62 = &v146[v61];
    v63 = &v30[v61];
    *(_DWORD *)v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v139 + 56))(v146, 0, 1, v31);
  }
  else
  {
    if (v33)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v146, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsEutranCellTime?)
                                  - 8)
                      + 64);
      v35 = v146;
      goto LABEL_19;
    }
    __dst(v146, v30, v6);
    v77 = v31[5];
    v78 = &v146[v77];
    v79 = &v30[v77];
    *(_DWORD *)v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    v80 = v31[6];
    v81 = &v146[v80];
    v82 = &v30[v80];
    *(_DWORD *)v81 = *(_DWORD *)v82;
    v81[4] = v82[4];
    v83 = v31[7];
    v84 = &v146[v83];
    v85 = &v30[v83];
    *(_DWORD *)v84 = *(_DWORD *)v85;
    v84[4] = v85[4];
  }
LABEL_26:
  v86 = *(int *)(v13 + 24);
  v87 = v11 + v86;
  v88 = &v12[v86];
  v89 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v90 = *((_QWORD *)v89 - 1);
  v91 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v90 + 48);
  v92 = v91(v87, 1, v89);
  v93 = v91((uint64_t)v88, 1, v89);
  if (!v92)
  {
    if (v93)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v87, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_32;
    }
    __dst((char *)v87, v88, v6);
    v100 = v89[5];
    v101 = (char *)(v87 + v100);
    v102 = &v88[v100];
    v103 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    v141 = *(_QWORD *)(v103 - 8);
    v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
    v148 = v101;
    LODWORD(v101) = v104(v101, 1, v103);
    v105 = v104(v102, 1, v103);
    if ((_DWORD)v101)
    {
      if (!v105)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v148, v102, v6);
        v120 = *(int *)(v103 + 20);
        v121 = &v148[v120];
        v122 = &v102[v120];
        *(_DWORD *)v121 = *(_DWORD *)v122;
        v121[4] = v122[4];
        v123 = *(int *)(v103 + 24);
        v124 = &v148[v123];
        v125 = &v102[v123];
        *(_DWORD *)v124 = *(_DWORD *)v125;
        v124[4] = v125[4];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v148, 0, 1, v103);
        goto LABEL_43;
      }
      v106 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v107 = v148;
    }
    else
    {
      if (!v105)
      {
        __dst(v148, v102, v6);
        v126 = *(int *)(v103 + 20);
        v127 = &v148[v126];
        v128 = &v102[v126];
        *(_DWORD *)v127 = *(_DWORD *)v128;
        v127[4] = v128[4];
        v129 = *(int *)(v103 + 24);
        v130 = &v148[v129];
        v131 = &v102[v129];
        *(_DWORD *)v130 = *(_DWORD *)v131;
        v130[4] = v131[4];
        goto LABEL_43;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v148, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v106 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?)
                                   - 8)
                       + 64);
      v107 = v148;
    }
    memcpy(v107, v102, v106);
LABEL_43:
    v132 = v89[6];
    v133 = v87 + v132;
    v134 = &v88[v132];
    *(_DWORD *)v133 = *(_DWORD *)v134;
    *(_BYTE *)(v133 + 4) = v134[4];
    v135 = v89[7];
    v136 = v87 + v135;
    v137 = &v88[v135];
    *(_BYTE *)(v136 + 4) = v137[4];
    *(_DWORD *)v136 = *(_DWORD *)v137;
    return a1;
  }
  if (v93)
  {
LABEL_32:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CtsCdmaCellTime?)
                                - 8)
                    + 64);
    v26 = (void *)v87;
    v27 = v88;
    goto LABEL_8;
  }
  v94 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v94(v87, v88, v6);
  v95 = v89[5];
  v147 = (char *)(v87 + v95);
  v96 = &v88[v95];
  v97 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v98 = *(_QWORD *)(v97 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsTowCdmaCellTime?);
    memcpy(v147, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    v94((uint64_t)v147, v96, v6);
    v108 = *(int *)(v97 + 20);
    v109 = &v147[v108];
    v110 = &v96[v108];
    *(_DWORD *)v109 = *(_DWORD *)v110;
    v109[4] = v110[4];
    v111 = *(int *)(v97 + 24);
    v112 = &v147[v111];
    v113 = &v96[v111];
    *(_DWORD *)v112 = *(_DWORD *)v113;
    v112[4] = v113[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v147, 0, 1, v97);
  }
  v114 = v89[6];
  v115 = v87 + v114;
  v116 = &v88[v114];
  *(_DWORD *)v115 = *(_DWORD *)v116;
  *(_BYTE *)(v115 + 4) = v116[4];
  v117 = v89[7];
  v118 = v87 + v117;
  v119 = &v88[v117];
  *(_BYTE *)(v118 + 4) = v119[4];
  *(_DWORD *)v118 = *(_DWORD *)v119;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v90 + 56))(v87, 0, 1, v89);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_CellFTAssistance()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B376B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 249)
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 6u)
      v9 = 6;
    else
      v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    v10 = v9 - 6;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 6u)
      return v10;
    else
      return 0;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_CellFTAssistance()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B3776C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 249)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 6;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Proto_Gnss_Emergency_CellFTAssistance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for Proto_Gnss_Emergency_GeranGanssTimeMeasured(a1, a2, a3, (uint64_t)&unk_235BD93A8, (uint64_t)&unk_235BD8530, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CellTimeData?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

void type metadata completion function for Proto_Gnss_Emergency_GeranGanssTimeMeasured(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v9;
  unint64_t v10;

  type metadata accessor for UnknownStorage();
  if (v9 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, a6, a7);
    if (v10 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_NetworkReferenceLocation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v22[8] = v23[8];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    v24[4] = v25[4];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v26 = a3[11];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v27[4] = v28[4];
    *(_DWORD *)v27 = *(_DWORD *)v28;
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_NetworkReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_NetworkReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_BYTE *)(v33 + 4);
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = v34;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_NetworkReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_NetworkReferenceLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_NetworkReferenceLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_NetworkReferenceLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_NetworkReferenceLocation()
{
  return type metadata completion function for Proto_Gnss_Emergency_ClsGeranCellTime();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_NetworkReferenceTime(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_NetworkReferenceTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_NetworkReferenceTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_NetworkReferenceTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_NetworkReferenceTime(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_NetworkReferenceTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_NetworkReferenceTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_NetworkReferenceTime()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_Is801VelocityInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_Is801VelocityInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_Is801ClockInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_Is801ClockInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_ClsGpsCellTime(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_ClsGpsCellTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_ClsGpsCellTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_ClsGpsCellTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_ClsGpsCellTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_Is801HeightInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_Is801HeightInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *initializeBufferWithCopyOfBuffer for Proto_Gnss_Emergency_Is801LocationInd(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    v13 = &a1[v10];
    v14 = &a2[v10];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = a3[8];
    v17 = &a1[v15];
    v18 = &a2[v15];
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = &a1[v16];
    v20 = &a2[v16];
    v19[4] = v20[4];
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v21 = a3[9];
    v22 = a3[10];
    v23 = &a1[v21];
    v24 = &a2[v21];
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    a1[v22] = a2[v22];
    v25 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    v26 = &a1[v25];
    v27 = &a2[v25];
    v28 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
    v29 = *((_QWORD *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v8(v26, v27, v7);
      v32 = v28[5];
      v33 = &v26[v32];
      v34 = &v27[v32];
      *(_DWORD *)v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      v35 = v28[6];
      v36 = &v26[v35];
      v37 = &v27[v35];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      v38 = v28[7];
      v39 = &v26[v38];
      v40 = &v27[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
    }
    v41 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v44 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v8(v42, v43, v7);
      v47 = *(int *)(v44 + 20);
      v48 = &v42[v47];
      v49 = &v43[v47];
      *(_DWORD *)v48 = *(_DWORD *)v49;
      v48[4] = v49[4];
      v50 = *(int *)(v44 + 24);
      v51 = &v42[v50];
      v52 = &v43[v50];
      *(_DWORD *)v51 = *(_DWORD *)v52;
      v51[4] = v52[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v53 = a3[16];
    a1[a3[15]] = a2[a3[15]];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v56 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v8(v54, v55, v7);
      v59 = *(int *)(v56 + 20);
      v60 = &v54[v59];
      v61 = &v55[v59];
      *(_DWORD *)v60 = *(_DWORD *)v61;
      v60[4] = v61[4];
      v62 = *(int *)(v56 + 24);
      v63 = &v54[v62];
      v64 = &v55[v62];
      *(_DWORD *)v63 = *(_DWORD *)v64;
      v63[4] = v64[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_Emergency_Is801LocationInd(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v12(a1, v4);
  v5 = a1 + a2[12];
  v6 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    v12(v5, v4);
  v7 = a1 + a2[14];
  v8 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    v12(v7, v4);
  v9 = a1 + a2[16];
  v10 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v4);
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_Emergency_Is801LocationInd(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v24 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v25, (uint64_t)v26, v6);
    v30 = v27[5];
    v31 = &v25[v30];
    v32 = &v26[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = v27[6];
    v34 = &v25[v33];
    v35 = &v26[v33];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = v27[7];
    v37 = &v25[v36];
    v38 = &v26[v36];
    *(_DWORD *)v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
  }
  v39 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v40 = (char *)(a1 + v39);
  v41 = (char *)(a2 + v39);
  v42 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v40, (uint64_t)v41, v6);
    v45 = *(int *)(v42 + 20);
    v46 = &v40[v45];
    v47 = &v41[v45];
    *(_DWORD *)v46 = *(_DWORD *)v47;
    v46[4] = v47[4];
    v48 = *(int *)(v42 + 24);
    v49 = &v40[v48];
    v50 = &v41[v48];
    *(_DWORD *)v49 = *(_DWORD *)v50;
    v49[4] = v50[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v51 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v52, (uint64_t)v53, v6);
    v57 = *(int *)(v54 + 20);
    v58 = &v52[v57];
    v59 = &v53[v57];
    *(_DWORD *)v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    v60 = *(int *)(v54 + 24);
    v61 = &v52[v60];
    v62 = &v53[v60];
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Emergency_Is801LocationInd(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, int *);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  uint64_t v77;
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;

  v6 = type metadata accessor for UnknownStorage();
  v108 = *(_QWORD *)(v6 - 8);
  v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 24);
  v107(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v23 = a3[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v24, v25, v6);
      v31 = v26[5];
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = v33[4];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[4] = v34;
      v35 = v26[6];
      v36 = &v24[v35];
      v37 = &v25[v35];
      v38 = v37[4];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v36[4] = v38;
      v39 = v26[7];
      v40 = &v24[v39];
      v41 = &v25[v39];
      v42 = v41[4];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v40[4] = v42;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
LABEL_6:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  v107((uint64_t)v24, (uint64_t)v25, v6);
  v79 = v26[5];
  v80 = &v24[v79];
  v81 = &v25[v79];
  v82 = v81[4];
  *(_DWORD *)v80 = *(_DWORD *)v81;
  v80[4] = v82;
  v83 = v26[6];
  v84 = &v24[v83];
  v85 = &v25[v83];
  v86 = v85[4];
  *(_DWORD *)v84 = *(_DWORD *)v85;
  v84[4] = v86;
  v87 = v26[7];
  v88 = &v24[v87];
  v89 = &v25[v87];
  v90 = v89[4];
  *(_DWORD *)v88 = *(_DWORD *)v89;
  v88[4] = v90;
LABEL_7:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v44 = a3[14];
  v45 = (char *)(a1 + v44);
  v46 = (char *)(a2 + v44);
  v47 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v45, v46, v6);
      v52 = *(int *)(v47 + 20);
      v53 = &v45[v52];
      v54 = &v46[v52];
      v55 = v54[4];
      *(_DWORD *)v53 = *(_DWORD *)v54;
      v53[4] = v55;
      v56 = *(int *)(v47 + 24);
      v57 = &v45[v56];
      v58 = &v46[v56];
      v59 = v58[4];
      *(_DWORD *)v57 = *(_DWORD *)v58;
      v57[4] = v59;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v51)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v45, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
LABEL_12:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_13;
  }
  v107((uint64_t)v45, (uint64_t)v46, v6);
  v91 = *(int *)(v47 + 20);
  v92 = &v45[v91];
  v93 = &v46[v91];
  v94 = v93[4];
  *(_DWORD *)v92 = *(_DWORD *)v93;
  v92[4] = v94;
  v95 = *(int *)(v47 + 24);
  v96 = &v45[v95];
  v97 = &v46[v95];
  v98 = v97[4];
  *(_DWORD *)v96 = *(_DWORD *)v97;
  v96[4] = v98;
LABEL_13:
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v61 = a3[16];
  v62 = (char *)(a1 + v61);
  v63 = (char *)(a2 + v61);
  v64 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      v107((uint64_t)v62, (uint64_t)v63, v6);
      v99 = *(int *)(v64 + 20);
      v100 = &v62[v99];
      v101 = &v63[v99];
      v102 = v101[4];
      *(_DWORD *)v100 = *(_DWORD *)v101;
      v100[4] = v102;
      v103 = *(int *)(v64 + 24);
      v104 = &v62[v103];
      v105 = &v63[v103];
      v106 = v105[4];
      *(_DWORD *)v104 = *(_DWORD *)v105;
      v104[4] = v106;
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v62, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
    goto LABEL_18;
  }
  if (v68)
  {
LABEL_18:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v62, v63, v6);
  v69 = *(int *)(v64 + 20);
  v70 = &v62[v69];
  v71 = &v63[v69];
  v72 = v71[4];
  *(_DWORD *)v70 = *(_DWORD *)v71;
  v70[4] = v72;
  v73 = *(int *)(v64 + 24);
  v74 = &v62[v73];
  v75 = &v63[v73];
  v76 = v75[4];
  *(_DWORD *)v74 = *(_DWORD *)v75;
  v74[4] = v76;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Emergency_Is801LocationInd(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v24 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v25, (uint64_t)v26, v6);
    v30 = v27[5];
    v31 = &v25[v30];
    v32 = &v26[v30];
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v33 = v27[6];
    v34 = &v25[v33];
    v35 = &v26[v33];
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = v27[7];
    v37 = &v25[v36];
    v38 = &v26[v36];
    *(_DWORD *)v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
  }
  v39 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v40 = (char *)(a1 + v39);
  v41 = (char *)(a2 + v39);
  v42 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v40, (uint64_t)v41, v6);
    v45 = *(int *)(v42 + 20);
    v46 = &v40[v45];
    v47 = &v41[v45];
    *(_DWORD *)v46 = *(_DWORD *)v47;
    v46[4] = v47[4];
    v48 = *(int *)(v42 + 24);
    v49 = &v40[v48];
    v50 = &v41[v48];
    *(_DWORD *)v49 = *(_DWORD *)v50;
    v49[4] = v50[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v51 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v52, (uint64_t)v53, v6);
    v57 = *(int *)(v54 + 20);
    v58 = &v52[v57];
    v59 = &v53[v57];
    *(_DWORD *)v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    v60 = *(int *)(v54 + 24);
    v61 = &v52[v60];
    v62 = &v53[v60];
    *(_DWORD *)v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Emergency_Is801LocationInd(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, int *);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;

  v6 = type metadata accessor for UnknownStorage();
  v94 = *(_QWORD *)(v6 - 8);
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 40);
  v93(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v23 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v24, v25, v6);
      v31 = v26[5];
      v32 = &v24[v31];
      v33 = &v25[v31];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      v34 = v26[6];
      v35 = &v24[v34];
      v36 = &v25[v34];
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      v37 = v26[7];
      v38 = &v24[v37];
      v39 = &v25[v37];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
LABEL_6:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_7;
  }
  v93((uint64_t)v24, (uint64_t)v25, v6);
  v72 = v26[5];
  v73 = &v24[v72];
  v74 = &v25[v72];
  *(_DWORD *)v73 = *(_DWORD *)v74;
  v73[4] = v74[4];
  v75 = v26[6];
  v76 = &v24[v75];
  v77 = &v25[v75];
  *(_DWORD *)v76 = *(_DWORD *)v77;
  v76[4] = v77[4];
  v78 = v26[7];
  v79 = &v24[v78];
  v80 = &v25[v78];
  *(_DWORD *)v79 = *(_DWORD *)v80;
  v79[4] = v80[4];
LABEL_7:
  v41 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v42 = (char *)(a1 + v41);
  v43 = (char *)(a2 + v41);
  v44 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v6);
      v49 = *(int *)(v44 + 20);
      v50 = &v42[v49];
      v51 = &v43[v49];
      *(_DWORD *)v50 = *(_DWORD *)v51;
      v50[4] = v51[4];
      v52 = *(int *)(v44 + 24);
      v53 = &v42[v52];
      v54 = &v43[v52];
      *(_DWORD *)v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v48)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v42, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
LABEL_12:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_13;
  }
  v93((uint64_t)v42, (uint64_t)v43, v6);
  v81 = *(int *)(v44 + 20);
  v82 = &v42[v81];
  v83 = &v43[v81];
  *(_DWORD *)v82 = *(_DWORD *)v83;
  v82[4] = v83[4];
  v84 = *(int *)(v44 + 24);
  v85 = &v42[v84];
  v86 = &v43[v84];
  *(_DWORD *)v85 = *(_DWORD *)v86;
  v85[4] = v86[4];
LABEL_13:
  v56 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v57 = (char *)(a1 + v56);
  v58 = (char *)(a2 + v56);
  v59 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 1, v59);
  v63 = v61(v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      v93((uint64_t)v57, (uint64_t)v58, v6);
      v87 = *(int *)(v59 + 20);
      v88 = &v57[v87];
      v89 = &v58[v87];
      *(_DWORD *)v88 = *(_DWORD *)v89;
      v88[4] = v89[4];
      v90 = *(int *)(v59 + 24);
      v91 = &v57[v90];
      v92 = &v58[v90];
      *(_DWORD *)v91 = *(_DWORD *)v92;
      v91[4] = v92[4];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v57, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
    goto LABEL_18;
  }
  if (v63)
  {
LABEL_18:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v57, v58, v6);
  v64 = *(int *)(v59 + 20);
  v65 = &v57[v64];
  v66 = &v58[v64];
  *(_DWORD *)v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  v67 = *(int *)(v59 + 24);
  v68 = &v57[v67];
  v69 = &v58[v67];
  *(_DWORD *)v68 = *(_DWORD *)v69;
  v68[4] = v69[4];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_Is801LocationInd()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B39B98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 253)
  {
    v9 = *(unsigned __int8 *)(a1 + a3[11]);
    if (v9 >= 2)
      v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
    else
      v10 = -2;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[12];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[14];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[16];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_Is801LocationInd()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B39CB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + a4[11]) = a2 + 2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[12];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[14];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[16];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Proto_Gnss_Emergency_Is801LocationInd()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Is801VelocityInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Is801ClockInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Is801HeightInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_MeasurementReportWithEstimate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_MeasurementReportWithEstimate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Emergency_Cdma1xContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Emergency_Cdma1xContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Emergency_Cdma1xContext()
{
  return type metadata completion function for Proto_Gnss_Emergency_HorizWithVertVelocity();
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_Init._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_Init._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_QoP?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_QoP);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SLPAddress?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Notification?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Notification);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SuplInitVer2Extension?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_SessionStatus._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_SessionStatus._StorageClass()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_NetworkReferenceLocation?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_NetworkReferenceTime?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_UtranGanssTimeMeasured?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GeranGanssTimeMeasured?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_ClsEutranCell?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_ShapeInfo._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_ShapeInfo._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_PointUncertainCircle?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_PointUncertainEllipse?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_EllipsoidArc?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
        if (v3 <= 0x3F)
        {
          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_EllipsoidPoint?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
          if (v4 <= 0x3F)
          {
            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_PointAltitude?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
            if (v5 <= 0x3F)
            {
              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Polygon?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Polygon);
              if (v6 <= 0x3F)
                swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_PositionReport._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_PositionReport._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SessionInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_LocationInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssLocationInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_LocEstimate?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
        if (v3 <= 0x3F)
        {
          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_VelocityEstimate?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_GpsMeasurements._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_GpsMeasurements._StorageClass()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsTimeMeasuredParams?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsTOD?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_MeasurementReport._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_MeasurementReport._StorageClass(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for Proto_Gnss_Emergency_MeasurementReport._StorageClass(a1, a2, a3, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssMeasurements?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssDataBitAssist?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssNavModelAddData?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssAddAssistDataChoices?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SessionInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsAssistanceRequest?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GanssAssistanceRequest?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for Proto_Gnss_Emergency_MeasurementReport._StorageClass(a1, a2, a3, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Is801LocationInd?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Is801LocationInd);
}

void type metadata completion function for Proto_Gnss_Emergency_MeasurementReport._StorageClass(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SessionInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  if (v7 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsMeasurements?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
    if (v8 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, a4, a5);
      if (v9 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_Result()
{
  lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
  return Enum.hash(into:)();
}

unint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gnss_Result@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Proto_Gnss_Result.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gnss_Result@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Proto_Gnss_Result.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void *static Proto_Gnss_Result.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_Result.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_Result(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gnss_Result.allCases.getter;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_GnssContent()
{
  lazy protocol witness table accessor for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent();
  return Enum.hash(into:)();
}

void *static Proto_Gnss_GnssContent.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_GnssContent.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_GnssContent(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gnss_GnssContent.allCases.getter;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_EstimationTechnology()
{
  lazy protocol witness table accessor for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology();
  return Enum.hash(into:)();
}

void *static Proto_Gnss_EstimationTechnology.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_EstimationTechnology.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_EstimationTechnology(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_EstimationTechnology;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_TimeQuality()
{
  lazy protocol witness table accessor for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality();
  return Enum.hash(into:)();
}

void *static Proto_Gnss_TimeQuality.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_TimeQuality.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_TimeQuality(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gnss_TimeQuality.allCases.getter;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_PositionAssistType()
{
  lazy protocol witness table accessor for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType();
  return Enum.hash(into:)();
}

void *static Proto_Gnss_PositionAssistType.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_PositionAssistType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_PositionAssistType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_PositionAssistType;
}

uint64_t Proto_Gnss_MotionActivityContext.rawValue.getter(char a1)
{
  return qword_235BDBE98[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gnss_MotionActivityContext(char *a1, char *a2)
{
  return qword_235BDBE98[*a1] == qword_235BDBE98[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_MotionActivityContext()
{
  lazy protocol witness table accessor for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gnss_MotionActivityContext@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gnss_MotionActivityContext.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gnss_MotionActivityContext()
{
  char *v0;

  return qword_235BDBE98[*v0];
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gnss_MotionActivityContext@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gnss_MotionActivityContext.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gnss_MotionActivityContext(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BDBE98[*v1];
}

void *static Proto_Gnss_MotionActivityContext.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_MotionActivityContext.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_MotionActivityContext(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gnss_MotionActivityContext.allCases.getter;
}

uint64_t Proto_Gnss_MovingState.rawValue.getter(char a1)
{
  return qword_235BDBEE8[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gnss_MovingState(char *a1, char *a2)
{
  return qword_235BDBEE8[*a1] == qword_235BDBEE8[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_MovingState()
{
  lazy protocol witness table accessor for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState();
  return Enum.hash(into:)();
}

unint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gnss_MovingState@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Proto_Gnss_MovingState.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gnss_MovingState()
{
  char *v0;

  return qword_235BDBEE8[*v0];
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gnss_MovingState@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Proto_Gnss_MovingState.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gnss_MovingState(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BDBEE8[*v1];
}

void *static Proto_Gnss_MovingState.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_MovingState.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_MovingState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_MovingState;
}

uint64_t Proto_Gnss_Reliability.rawValue.getter(char a1)
{
  return qword_235BDBF80[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gnss_Reliability(char *a1, char *a2)
{
  return qword_235BDBF80[*a1] == qword_235BDBF80[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_Reliability()
{
  lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gnss_Reliability@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gnss_Reliability.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gnss_Reliability()
{
  char *v0;

  return qword_235BDBF80[*v0];
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gnss_Reliability@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gnss_Reliability.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gnss_Reliability(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BDBF80[*v1];
}

void *static Proto_Gnss_Reliability.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_Reliability.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_Reliability(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gnss_Reliability.allCases.getter;
}

uint64_t Proto_Gnss_DeviceMountState.rawValue.getter(char a1)
{
  return qword_235BDBF10[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gnss_DeviceMountState(char *a1, char *a2)
{
  return qword_235BDBF10[*a1] == qword_235BDBF10[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_DeviceMountState()
{
  lazy protocol witness table accessor for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState();
  return Enum.hash(into:)();
}

unint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gnss_DeviceMountState@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Proto_Gnss_DeviceMountState.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gnss_DeviceMountState()
{
  char *v0;

  return qword_235BDBF10[*v0];
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gnss_DeviceMountState@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Proto_Gnss_DeviceMountState.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gnss_DeviceMountState(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BDBF10[*v1];
}

void *static Proto_Gnss_DeviceMountState.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_DeviceMountState.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_DeviceMountState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_DeviceMountState;
}

uint64_t Proto_Gnss_SignalEnvironmentType.rawValue.getter(char a1)
{
  return qword_235BDBF30[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gnss_SignalEnvironmentType(char *a1, char *a2)
{
  return qword_235BDBF30[*a1] == qword_235BDBF30[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_SignalEnvironmentType()
{
  lazy protocol witness table accessor for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gnss_SignalEnvironmentType@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gnss_SignalEnvironmentType.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gnss_SignalEnvironmentType()
{
  char *v0;

  return qword_235BDBF30[*v0];
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gnss_SignalEnvironmentType@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gnss_SignalEnvironmentType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gnss_SignalEnvironmentType(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BDBF30[*v1];
}

void *static Proto_Gnss_SignalEnvironmentType.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_SignalEnvironmentType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_SignalEnvironmentType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gnss_SignalEnvironmentType.allCases.getter;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_DeleteGnssDataBitMask()
{
  lazy protocol witness table accessor for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask();
  return Enum.hash(into:)();
}

void *static Proto_Gnss_DeleteGnssDataBitMask.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_DeleteGnssDataBitMask.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_DeleteGnssDataBitMask(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_DeleteGnssDataBitMask;
}

double Proto_Gnss_Position.latitude.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.latitude.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeNanoseconds.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.latitude.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasLatitude.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearLatitude()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.longitude.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.longitude.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.longitude.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasLongitude.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearLongitude()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.altWgs84.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.altWgs84.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.altWgs84.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasAltWgs84.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearAltWgs84()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.undulation.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.undulation.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseUncNanoseconds.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.undulation.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasUndulation.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearUndulation()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseUncNanoseconds()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.verticalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.avgTemperatureOverLastEpochDegreesCelsius.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.verticalUncertainty.setter(double a1)
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.avgTemperatureOverLastEpochDegreesCelsius.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.verticalUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasVerticalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.hasAvgTemperatureOverLastEpochDegreesCelsius.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearVerticalUncertainty()()
{
  CLP_LogEntry_PrivateData_ReceiverClockCorrections.clearAvgTemperatureOverLastEpochDegreesCelsius()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.semiMajorHorizontalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.roadWidthM.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.semiMajorHorizontalUncertainty.setter(double a1)
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.roadWidthM.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.semiMajorHorizontalUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasSemiMajorHorizontalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasRoadWidthM.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearSemiMajorHorizontalUncertainty()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearRoadWidthM()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.semiMinorHorizontalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.startLatitudeDeg.getter(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.semiMinorHorizontalUncertainty.setter(double a1)
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.startLatitudeDeg.setter(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*Proto_Gnss_Position.semiMinorHorizontalUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasSemiMinorHorizontalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasStartLatitudeDeg.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearSemiMinorHorizontalUncertainty()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearStartLatitudeDeg()(type metadata accessor for Proto_Gnss_Position);
}

double Proto_Gnss_Position.semiMajorAzimuthHorizontalUncertainty.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 48);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gnss_Position.semiMajorAzimuthHorizontalUncertainty.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Position(0);
  v4 = v1 + *(int *)(result + 48);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_Position.semiMajorAzimuthHorizontalUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasSemiMajorAzimuthHorizontalUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasStartLongitudeDeg.getter(type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Position.clearSemiMajorAzimuthHorizontalUncertainty()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearStartLongitudeDeg()(type metadata accessor for Proto_Gnss_Position);
}

uint64_t Proto_Gnss_Position.source.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 52));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gnss_Position.source.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Position(0);
  v4 = v1 + *(int *)(result + 52);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_Position.source.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 52);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_Position.hasSource.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 52) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gnss_Position.clearSource()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 52);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gnss_Position.reliability.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 56));
  if (v1 == 6)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gnss_Position.reliability.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*Proto_Gnss_Position.reliability.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 56);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.type.modify;
}

BOOL Proto_Gnss_Position.hasReliability.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 56)) != 6;
}

Swift::Void __swiftcall Proto_Gnss_Position.clearReliability()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 56)) = 6;
}

uint64_t Proto_Gnss_Position.assistanceUsed.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 60));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gnss_Position.assistanceUsed.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Position(0);
  v4 = v1 + *(int *)(result + 60);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_Position.assistanceUsed.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 60);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Position.hasAssistanceUsed.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 60) + 8) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gnss_Position.clearAssistanceUsed()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 60);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t Proto_Gnss_Position.gnssContentInFix.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 64));
  if (v1 == 6)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gnss_Position.gnssContentInFix.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*Proto_Gnss_Position.gnssContentInFix.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 64);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_Position.hasGnssContentInFix.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 64)) != 6;
}

Swift::Void __swiftcall Proto_Gnss_Position.clearGnssContentInFix()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0) + 64)) = 6;
}

int *Proto_Gnss_Position.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Position(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = a1 + result[7];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = a1 + result[8];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1 + result[9];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1 + result[10];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + result[11];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1 + result[12];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1 + result[13];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  *(_BYTE *)(a1 + result[14]) = 6;
  v12 = a1 + result[15];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  *(_BYTE *)(a1 + result[16]) = 6;
  return result;
}

double Proto_Gnss_Velocity.horizSpeed.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t Proto_Gnss_Velocity.horizSpeed.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeNanoseconds.setter(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*Proto_Gnss_Velocity.horizSpeed.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Velocity.hasHorizSpeed.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Velocity.clearHorizSpeed()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_Velocity);
}

double Proto_Gnss_Velocity.horizSpeedUnc.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t Proto_Gnss_Velocity.horizSpeedUnc.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*Proto_Gnss_Velocity.horizSpeedUnc.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Velocity.hasHorizSpeedUnc.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Velocity.clearHorizSpeedUnc()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gnss_Velocity);
}

double Proto_Gnss_Velocity.vertVelocity.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t Proto_Gnss_Velocity.vertVelocity.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*Proto_Gnss_Velocity.vertVelocity.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Velocity.hasVertVelocity.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Velocity.clearVertVelocity()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gnss_Velocity);
}

double Proto_Gnss_Velocity.vertVelocityUnc.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t Proto_Gnss_Velocity.vertVelocityUnc.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseUncNanoseconds.setter(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*Proto_Gnss_Velocity.vertVelocityUnc.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Velocity.hasVertVelocityUnc.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Velocity.clearVertVelocityUnc()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseUncNanoseconds()(type metadata accessor for Proto_Gnss_Velocity);
}

double Proto_Gnss_Velocity.course.getter()
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.avgTemperatureOverLastEpochDegreesCelsius.getter(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t Proto_Gnss_Velocity.course.setter(double a1)
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.avgTemperatureOverLastEpochDegreesCelsius.setter(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*Proto_Gnss_Velocity.course.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Velocity.hasCourse.getter()
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.hasAvgTemperatureOverLastEpochDegreesCelsius.getter(type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Velocity.clearCourse()()
{
  CLP_LogEntry_PrivateData_ReceiverClockCorrections.clearAvgTemperatureOverLastEpochDegreesCelsius()(type metadata accessor for Proto_Gnss_Velocity);
}

double Proto_Gnss_Velocity.courseUnc.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.roadWidthM.getter(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t Proto_Gnss_Velocity.courseUnc.setter(double a1)
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.roadWidthM.setter(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*Proto_Gnss_Velocity.courseUnc.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Velocity.hasCourseUnc.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasRoadWidthM.getter(type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Velocity.clearCourseUnc()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearRoadWidthM()(type metadata accessor for Proto_Gnss_Velocity);
}

int *Proto_Gnss_Velocity.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Velocity(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = a1 + result[7];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = a1 + result[8];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1 + result[9];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1 + result[10];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t Proto_Gnss_Time.gpsNanoSeconds.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.gpsNanoSeconds.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gnss_Time);
}

uint64_t (*Proto_Gnss_Time.gpsNanoSeconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Time.hasGpsNanoSeconds.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearGpsNanoSeconds()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_Time);
}

float Proto_Gnss_Time.gpsTimeUncertaintyNanoSeconds.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.residual.getter(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.gpsTimeUncertaintyNanoSeconds.setter(float a1)
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.residual.setter(type metadata accessor for Proto_Gnss_Time, a1);
}

uint64_t (*Proto_Gnss_Time.gpsTimeUncertaintyNanoSeconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  float v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 24);
  v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0.0;
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_Time.hasGpsTimeUncertaintyNanoSeconds.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearGpsTimeUncertaintyNanoSeconds()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.leapSecondsFromGpsStartValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 28)) & 1;
}

uint64_t Proto_Gnss_Time.leapSecondsFromGpsStartValid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Time(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*Proto_Gnss_Time.leapSecondsFromGpsStartValid.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_Time.hasLeapSecondsFromGpsStartValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 28)) != 2;
}

Swift::Void __swiftcall Proto_Gnss_Time.clearLeapSecondsFromGpsStartValid()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 28)) = 2;
}

uint64_t Proto_Gnss_Time.leapSecondsFromGpsStart.getter()
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.getter(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.leapSecondsFromGpsStart.setter(int a1)
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.setter(a1, type metadata accessor for Proto_Gnss_Time);
}

uint64_t (*Proto_Gnss_Time.leapSecondsFromGpsStart.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_Time.hasLeapSecondsFromGpsStart.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasGalileoSpreadingCode.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearLeapSecondsFromGpsStart()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearGalileoSpreadingCode()(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.clockNanoSeconds.getter()
{
  return Proto_Gnss_Time.clockNanoSeconds.getter(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.clockNanoSeconds.setter(uint64_t a1)
{
  return Proto_Gnss_Time.clockNanoSeconds.setter(a1, type metadata accessor for Proto_Gnss_Time);
}

uint64_t (*Proto_Gnss_Time.clockNanoSeconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Time.hasClockNanoSeconds.getter()
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.hasAvgTemperatureOverLastEpochDegreesCelsius.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearClockNanoSeconds()()
{
  CLP_LogEntry_PrivateData_ReceiverClockCorrections.clearAvgTemperatureOverLastEpochDegreesCelsius()(type metadata accessor for Proto_Gnss_Time);
}

double Proto_Gnss_Time.machContinuousSeconds.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.roadWidthM.getter(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.machContinuousSeconds.setter(double a1)
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.roadWidthM.setter(type metadata accessor for Proto_Gnss_Time, a1);
}

uint64_t (*Proto_Gnss_Time.machContinuousSeconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Time.hasMachContinuousSeconds.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasRoadWidthM.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearMachContinuousSeconds()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearRoadWidthM()(type metadata accessor for Proto_Gnss_Time);
}

double Proto_Gnss_Time.machContinuousUncertaintySeconds.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.startLatitudeDeg.getter(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.machContinuousUncertaintySeconds.setter(double a1)
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.startLatitudeDeg.setter(type metadata accessor for Proto_Gnss_Time, a1);
}

uint64_t (*Proto_Gnss_Time.machContinuousUncertaintySeconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Time.hasMachContinuousUncertaintySeconds.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasStartLatitudeDeg.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearMachContinuousUncertaintySeconds()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearStartLatitudeDeg()(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.basebandSystemTimeNs.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 48));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gnss_Time.basebandSystemTimeNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Time(0);
  v4 = v1 + *(int *)(result + 48);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_Time.basebandSystemTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Time.hasBasebandSystemTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasStartLongitudeDeg.getter(type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Time.clearBasebandSystemTimeNs()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearStartLongitudeDeg()(type metadata accessor for Proto_Gnss_Time);
}

uint64_t Proto_Gnss_Time.basebandSystemTimeUncNs.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 52));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gnss_Time.basebandSystemTimeUncNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_Time(0);
  v4 = v1 + *(int *)(result + 52);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_Time.basebandSystemTimeUncNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 52);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_Time.hasBasebandSystemTimeUncNs.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 52) + 8) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gnss_Time.clearBasebandSystemTimeUncNs()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0) + 52);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

int *Proto_Gnss_Time.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  *(_BYTE *)(a1 + result[7]) = 2;
  v5 = a1 + result[8];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[9];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1 + result[10];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1 + result[11];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + result[12];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1 + result[13];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  return result;
}

uint64_t Proto_Gnss_Fix.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v7 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Time);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  v10 = a1 + v7[8];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + v7[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1 + v7[10];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1 + v7[11];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a1 + v7[12];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = a1 + v7[13];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
}

uint64_t Proto_Gnss_Fix.time.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.time.setter(a1, &demangling cache variable for type metadata for Proto_Gnss_Time?, type metadata accessor for Proto_Gnss_Time, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time);
}

void (*Proto_Gnss_Fix.time.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v9[v6[7]] = 2;
    v13 = &v9[v6[8]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    v14 = &v9[v6[9]];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    v15 = &v9[v6[10]];
    *(_QWORD *)v15 = 0;
    v15[8] = 1;
    v16 = &v9[v6[11]];
    *(_QWORD *)v16 = 0;
    v16[8] = 1;
    v17 = &v9[v6[12]];
    *(_QWORD *)v17 = 0;
    v17[8] = 1;
    v18 = &v9[v6[13]];
    *(_QWORD *)v18 = 0;
    v18[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Time);
  }
  return Proto_Gnss_Fix.time.modify;
}

void Proto_Gnss_Fix.time.modify(uint64_t a1, char a2)
{
  Proto_Gnss_Fix.time.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gnss_Time?, type metadata accessor for Proto_Gnss_Time, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time);
}

BOOL Proto_Gnss_Fix.hasTime.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Time?, type metadata accessor for Proto_Gnss_Fix, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time, type metadata accessor for Proto_Gnss_Time);
}

Swift::Void __swiftcall Proto_Gnss_Fix.clearTime()()
{
  Proto_Gnss_Fix.clearTime()(&demangling cache variable for type metadata for Proto_Gnss_Time?, type metadata accessor for Proto_Gnss_Time, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time);
}

uint64_t Proto_Gnss_Fix.position.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v7 = (int *)type metadata accessor for Proto_Gnss_Position(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Position);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1 + v7[7];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1 + v7[8];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1 + v7[9];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1 + v7[10];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a1 + v7[11];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = a1 + v7[12];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a1 + v7[13];
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  *(_BYTE *)(a1 + v7[14]) = 6;
  v17 = a1 + v7[15];
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  *(_BYTE *)(a1 + v7[16]) = 6;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Position?);
}

uint64_t Proto_Gnss_Fix.position.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.time.setter(a1, &demangling cache variable for type metadata for Proto_Gnss_Position?, type metadata accessor for Proto_Gnss_Position, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
}

void (*Proto_Gnss_Fix.position.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Proto_Gnss_Position(0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  Proto_Gnss_Fix.position.getter((uint64_t)v4);
  return Proto_Gnss_Fix.position.modify;
}

void Proto_Gnss_Fix.position.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions(*(_QWORD *)(a1 + 16), (uint64_t)v2, type metadata accessor for Proto_Gnss_Position);
    Proto_Gnss_Fix.time.setter((uint64_t)v2, &demangling cache variable for type metadata for Proto_Gnss_Position?, type metadata accessor for Proto_Gnss_Position, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v3, type metadata accessor for Proto_Gnss_Position);
  }
  else
  {
    Proto_Gnss_Fix.time.setter(*(_QWORD *)(a1 + 16), &demangling cache variable for type metadata for Proto_Gnss_Position?, type metadata accessor for Proto_Gnss_Position, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
  }
  free(v3);
  free(v2);
}

BOOL Proto_Gnss_Fix.hasPosition.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Position?, type metadata accessor for Proto_Gnss_Fix, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position, type metadata accessor for Proto_Gnss_Position);
}

Swift::Void __swiftcall Proto_Gnss_Fix.clearPosition()()
{
  Proto_Gnss_Fix.clearTime()(&demangling cache variable for type metadata for Proto_Gnss_Position?, type metadata accessor for Proto_Gnss_Position, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
}

uint64_t Proto_Gnss_Fix.clearTime()(uint64_t *a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
    v12 = swift_allocObject();
    v13 = swift_retain();
    specialized Proto_Gnss_Fix._StorageClass.init(copying:)(v13);
    swift_release();
    *(_QWORD *)(v7 + v11) = v12;
    swift_release();
  }
  v14 = *(_QWORD *)(v7 + v11);
  v15 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
  v16 = v14 + *a3;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v10, v16, a1);
  swift_endAccess();
  return swift_release();
}

uint64_t Proto_Gnss_Fix.velocity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  v7 = (int *)type metadata accessor for Proto_Gnss_Velocity(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Velocity);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1 + v7[7];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1 + v7[8];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1 + v7[9];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1 + v7[10];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
}

uint64_t Proto_Gnss_Fix.velocity.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.time.setter(a1, &demangling cache variable for type metadata for Proto_Gnss_Velocity?, type metadata accessor for Proto_Gnss_Velocity, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity);
}

uint64_t Proto_Gnss_Fix.time.setter(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v8 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v23 - v14;
  v16 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
    v17 = swift_allocObject();
    v18 = swift_retain();
    specialized Proto_Gnss_Fix._StorageClass.init(copying:)(v18);
    swift_release();
    *(_QWORD *)(v8 + v16) = v17;
    swift_release();
  }
  v19 = *(_QWORD *)(v8 + v16);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v15, a3);
  v20 = a3(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 0, 1, v20);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v15, (uint64_t)v13, a2);
  v21 = v19 + *a4;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v13, v21, a2);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gnss_Fix.velocity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Velocity(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    v14 = &v9[v6[8]];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    v15 = &v9[v6[9]];
    *(_QWORD *)v15 = 0;
    v15[8] = 1;
    v16 = &v9[v6[10]];
    *(_QWORD *)v16 = 0;
    v16[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Velocity);
  }
  return Proto_Gnss_Fix.velocity.modify;
}

void Proto_Gnss_Fix.velocity.modify(uint64_t a1, char a2)
{
  Proto_Gnss_Fix.time.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gnss_Velocity?, type metadata accessor for Proto_Gnss_Velocity, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity);
}

void Proto_Gnss_Fix.time.modify(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(_QWORD), _QWORD *a5)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v8 = *(void **)a1;
  v9 = *(void **)(*(_QWORD *)a1 + 40);
  v10 = *(void **)(*(_QWORD *)a1 + 48);
  v11 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, (uint64_t)v9, a4);
    Proto_Gnss_Fix.time.setter((uint64_t)v9, a3, a4, a5);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, a4);
  }
  else
  {
    Proto_Gnss_Fix.time.setter((uint64_t)v10, a3, a4, a5);
  }
  free(v10);
  free(v9);
  free(v11);
  free(v8);
}

BOOL Proto_Gnss_Fix.hasVelocity.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Velocity?, type metadata accessor for Proto_Gnss_Fix, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity, type metadata accessor for Proto_Gnss_Velocity);
}

Swift::Void __swiftcall Proto_Gnss_Fix.clearVelocity()()
{
  Proto_Gnss_Fix.clearTime()(&demangling cache variable for type metadata for Proto_Gnss_Velocity?, type metadata accessor for Proto_Gnss_Velocity, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity);
}

uint64_t Proto_Gnss_Fix.spoofingFlags.getter()
{
  return Proto_Gnss_Fix.spoofingFlags.getter(type metadata accessor for Proto_Gnss_Fix, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

uint64_t Proto_Gnss_Fix.spoofingFlags.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.spoofingFlags.setter(a1, type metadata accessor for Proto_Gnss_Fix, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_Fix._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_Fix._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

void (*Proto_Gnss_Fix.spoofingFlags.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gnss_Fix.spoofingFlags.modify;
}

void Proto_Gnss_Fix.spoofingFlags.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_DaemonLocation.horizontalAccuracy.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_Fix._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_Fix._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

BOOL Proto_Gnss_Fix.hasSpoofingFlags.getter()
{
  return CLP_LogEntry_PrivateData_Measurement.hasStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_Fix, &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

Swift::Void __swiftcall Proto_Gnss_Fix.clearSpoofingFlags()()
{
  CLP_LogEntry_PrivateData_DaemonLocation.clearHorizontalAccuracy()(type metadata accessor for Proto_Gnss_Fix, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_Fix._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_Fix._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

uint64_t Proto_Gnss_Fix.estimationTechnology.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  if (*v1 == 5)
    return 0;
  else
    return *v1;
}

uint64_t Proto_Gnss_Fix.estimationTechnology.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    specialized Proto_Gnss_Fix._StorageClass.init(copying:)(v6);
    swift_release();
    *(_QWORD *)(v2 + v4) = v5;
    swift_release();
  }
  v7 = (_BYTE *)(*(_QWORD *)(v2 + v4)
               + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  result = swift_beginAccess();
  *v7 = a1;
  return result;
}

void (*Proto_Gnss_Fix.estimationTechnology.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (unsigned __int8 *)(*(_QWORD *)(v1 + v4)
                         + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  v6 = *v5;
  if (v6 == 5)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gnss_Fix.estimationTechnology.modify;
}

void Proto_Gnss_Fix.estimationTechnology.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    specialized Proto_Gnss_Fix._StorageClass.init(copying:)(v9);
    swift_release();
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL Proto_Gnss_Fix.hasEstimationTechnology.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  return *v1 != 5;
}

Swift::Void __swiftcall Proto_Gnss_Fix.clearEstimationTechnology()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v1 = v0;
  v2 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
    v3 = swift_allocObject();
    v4 = swift_retain();
    specialized Proto_Gnss_Fix._StorageClass.init(copying:)(v4);
    swift_release();
    *(_QWORD *)(v1 + v2) = v3;
    swift_release();
  }
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v2)
               + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  *v5 = 5;
}

uint64_t Proto_Gnss_Fix.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_SyncState.init()(type metadata accessor for Proto_Gnss_Fix, &one-time initialization token for defaultInstance, &static Proto_Gnss_Fix._StorageClass.defaultInstance, a1);
}

uint64_t variable initialization expression of Proto_Gnss_Fix._storage()
{
  return variable initialization expression of CLP_LogEntry_PrivateData_SyncState._storage(&one-time initialization token for defaultInstance);
}

uint64_t Proto_Gnss_TimeTransferData.isGpsWeekValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 20)) & 1;
}

uint64_t Proto_Gnss_TimeTransferData.isGpsWeekValid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Proto_Gnss_TimeTransferData.isGpsWeekValid.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_TimeTransferData.hasIsGpsWeekValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferData.clearIsGpsWeekValid()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 20)) = 2;
}

uint64_t Proto_Gnss_TimeTransferData.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 24), (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v7 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Time);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  v10 = a1 + v7[8];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + v7[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1 + v7[10];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1 + v7[11];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a1 + v7[12];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = a1 + v7[13];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
}

uint64_t Proto_Gnss_TimeTransferData.time.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 24);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for Proto_Gnss_Time);
  v4 = type metadata accessor for Proto_Gnss_Time(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Proto_Gnss_TimeTransferData.time.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v9[v6[7]] = 2;
    v13 = &v9[v6[8]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    v14 = &v9[v6[9]];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    v15 = &v9[v6[10]];
    *(_QWORD *)v15 = 0;
    v15[8] = 1;
    v16 = &v9[v6[11]];
    *(_QWORD *)v16 = 0;
    v16[8] = 1;
    v17 = &v9[v6[12]];
    *(_QWORD *)v17 = 0;
    v17[8] = 1;
    v18 = &v9[v6[13]];
    *(_QWORD *)v18 = 0;
    v18[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Time);
  }
  return Proto_Gnss_TimeTransferData.time.modify;
}

void Proto_Gnss_TimeTransferData.time.modify(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v4, type metadata accessor for Proto_Gnss_Time);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v9, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v4, v9, type metadata accessor for Proto_Gnss_Time);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, type metadata accessor for Proto_Gnss_Time);
  }
  else
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(**(_QWORD **)a1 + v3, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, v9, type metadata accessor for Proto_Gnss_Time);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL Proto_Gnss_TimeTransferData.hasTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 24), (uint64_t)v3, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v5 = type metadata accessor for Proto_Gnss_Time(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  return v6;
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferData.clearTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 24);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v2 = type metadata accessor for Proto_Gnss_Time(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Proto_Gnss_TimeTransferData.quality.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 28));
  if (v1 == 7)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gnss_TimeTransferData.quality.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*Proto_Gnss_TimeTransferData.quality.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 28);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_TimeTransferData.hasQuality.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 28)) != 7;
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferData.clearQuality()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 28)) = 7;
}

uint64_t Proto_Gnss_TimeTransferData.constellationsUsed.getter()
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.getter(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t Proto_Gnss_TimeTransferData.constellationsUsed.setter(int a1)
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.setter(a1, type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t (*Proto_Gnss_TimeTransferData.constellationsUsed.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_TimeTransferData.hasConstellationsUsed.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasGalileoSpreadingCode.getter(type metadata accessor for Proto_Gnss_TimeTransferData);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferData.clearConstellationsUsed()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearGalileoSpreadingCode()(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t Proto_Gnss_TimeTransferData.basebandSystemTimeNs.getter()
{
  return Proto_Gnss_Time.clockNanoSeconds.getter(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t Proto_Gnss_Time.clockNanoSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _BYTE *v2;

  v2 = (_BYTE *)(v1 + *(int *)(a1(0) + 36));
  if (v2[8])
    return 0;
  else
    return *(_QWORD *)v2;
}

uint64_t Proto_Gnss_TimeTransferData.basebandSystemTimeNs.setter(uint64_t a1)
{
  return Proto_Gnss_Time.clockNanoSeconds.setter(a1, type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t Proto_Gnss_Time.clockNanoSeconds.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a2(0);
  v5 = v2 + *(int *)(result + 36);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_TimeTransferData.basebandSystemTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_TimeTransferData.hasBasebandSystemTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_ReceiverClockCorrections.hasAvgTemperatureOverLastEpochDegreesCelsius.getter(type metadata accessor for Proto_Gnss_TimeTransferData);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferData.clearBasebandSystemTimeNs()()
{
  CLP_LogEntry_PrivateData_ReceiverClockCorrections.clearAvgTemperatureOverLastEpochDegreesCelsius()(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t Proto_Gnss_TimeTransferData.basebandSystemTimeUncNs.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 40));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gnss_TimeTransferData.basebandSystemTimeUncNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  v4 = v1 + *(int *)(result + 40);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_TimeTransferData.basebandSystemTimeUncNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_TimeTransferData.hasBasebandSystemTimeUncNs.getter()
{
  return CLP_LogEntry_PrivateData_DirectionOfTravel.hasRoadWidthM.getter(type metadata accessor for Proto_Gnss_TimeTransferData);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferData.clearBasebandSystemTimeUncNs()()
{
  CLP_LogEntry_PrivateData_DirectionOfTravel.clearRoadWidthM()(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t Proto_Gnss_TimeTransferData.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gnss_TimeTransferData(0);
  *(_BYTE *)(a1 + v2[5]) = 2;
  v3 = a1 + v2[6];
  v4 = type metadata accessor for Proto_Gnss_Time(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_BYTE *)(a1 + v2[7]) = 7;
  v6 = a1 + v2[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + v2[9];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1 + v2[10];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t variable initialization expression of Proto_Gnss_TimeTransferData._time@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Proto_Gnss_Time(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v7 = (int *)type metadata accessor for Proto_Gnss_TimeTransferData(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_TimeTransferData);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  v8 = a1 + v7[6];
  v9 = type metadata accessor for Proto_Gnss_Time(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_BYTE *)(a1 + v7[7]) = 7;
  v10 = a1 + v7[8];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + v7[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1 + v7[10];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.data.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0);
    v11 = swift_allocObject();
    v12 = swift_retain();
    specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:)(v12);
    swift_release();
    *(_QWORD *)(v2 + v10) = v11;
    swift_release();
  }
  v13 = *(_QWORD *)(v2 + v10);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferData);
  v14 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v7, v15, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gnss_TimeTransferDataExtend.data.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gnss_TimeTransferData(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v11 = &v9[v6[6]];
    v12 = type metadata accessor for Proto_Gnss_Time(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v9[v6[7]] = 7;
    v13 = &v9[v6[8]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    v14 = &v9[v6[9]];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    v15 = &v9[v6[10]];
    *(_QWORD *)v15 = 0;
    v15[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferData);
  }
  return Proto_Gnss_TimeTransferDataExtend.data.modify;
}

void Proto_Gnss_TimeTransferDataExtend.data.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v3, type metadata accessor for Proto_Gnss_TimeTransferData);
    Proto_Gnss_TimeTransferDataExtend.data.setter((uint64_t)v3);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v4, type metadata accessor for Proto_Gnss_TimeTransferData);
  }
  else
  {
    Proto_Gnss_TimeTransferDataExtend.data.setter(*(_QWORD *)(*(_QWORD *)a1 + 48));
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL Proto_Gnss_TimeTransferDataExtend.hasData.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data, type metadata accessor for Proto_Gnss_TimeTransferData);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferDataExtend.clearData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:)(v7);
    swift_release();
    *(_QWORD *)(v1 + v5) = v6;
    swift_release();
  }
  v8 = *(_QWORD *)(v1 + v5);
  v9 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v4, v10, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gnss_TimeTransferDataExtend.timeMarkBeforeMachAbsTick.getter()
{
  return Proto_Gnss_Fix.spoofingFlags.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t Proto_Gnss_Fix.spoofingFlags.getter(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v3;

  v3 = (_BYTE *)(*(_QWORD *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  if (v3[8])
    return 0;
  else
    return *(_QWORD *)v3;
}

uint64_t Proto_Gnss_TimeTransferDataExtend.timeMarkBeforeMachAbsTick.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.spoofingFlags.setter(a1, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t Proto_Gnss_Fix.spoofingFlags.setter(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), void (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v9 = v5;
  v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    v12 = swift_allocObject();
    v13 = swift_retain();
    a4(v13);
    swift_release();
    *(_QWORD *)(v9 + v11) = v12;
    swift_release();
  }
  v14 = *(_QWORD *)(v9 + v11) + *a5;
  result = swift_beginAccess();
  *(_QWORD *)v14 = a1;
  *(_BYTE *)(v14 + 8) = 0;
  return result;
}

void (*Proto_Gnss_TimeTransferDataExtend.timeMarkBeforeMachAbsTick.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gnss_TimeTransferDataExtend.timeMarkBeforeMachAbsTick.modify;
}

void Proto_Gnss_TimeTransferDataExtend.timeMarkBeforeMachAbsTick.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_DaemonLocation.horizontalAccuracy.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

BOOL Proto_Gnss_TimeTransferDataExtend.hasTimeMarkBeforeMachAbsTick.getter()
{
  return CLP_LogEntry_PrivateData_Measurement.hasStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferDataExtend.clearTimeMarkBeforeMachAbsTick()()
{
  CLP_LogEntry_PrivateData_DaemonLocation.clearHorizontalAccuracy()(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.timeMarkAfterMachAbsTick.getter()
{
  return Proto_Gnss_Fix.spoofingFlags.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.timeMarkAfterMachAbsTick.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.spoofingFlags.setter(a1, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

void (*Proto_Gnss_TimeTransferDataExtend.timeMarkAfterMachAbsTick.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gnss_TimeTransferDataExtend.timeMarkAfterMachAbsTick.modify;
}

void Proto_Gnss_TimeTransferDataExtend.timeMarkAfterMachAbsTick.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_DaemonLocation.horizontalAccuracy.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

BOOL Proto_Gnss_TimeTransferDataExtend.hasTimeMarkAfterMachAbsTick.getter()
{
  return CLP_LogEntry_PrivateData_Measurement.hasStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferDataExtend.clearTimeMarkAfterMachAbsTick()()
{
  CLP_LogEntry_PrivateData_DaemonLocation.clearHorizontalAccuracy()(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.currentMachContMinusMachAbsNs.getter()
{
  return Proto_Gnss_Fix.spoofingFlags.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.currentMachContMinusMachAbsNs.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.spoofingFlags.setter(a1, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

void (*Proto_Gnss_TimeTransferDataExtend.currentMachContMinusMachAbsNs.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gnss_TimeTransferDataExtend.currentMachContMinusMachAbsNs.modify;
}

void Proto_Gnss_TimeTransferDataExtend.currentMachContMinusMachAbsNs.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_DaemonLocation.horizontalAccuracy.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

BOOL Proto_Gnss_TimeTransferDataExtend.hasCurrentMachContMinusMachAbsNs.getter()
{
  return CLP_LogEntry_PrivateData_Measurement.hasStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferDataExtend.clearCurrentMachContMinusMachAbsNs()()
{
  CLP_LogEntry_PrivateData_DaemonLocation.clearHorizontalAccuracy()(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.timeMarkCenterMachAbsTimeNs.getter()
{
  return Proto_Gnss_Fix.spoofingFlags.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.timeMarkCenterMachAbsTimeNs.setter(uint64_t a1)
{
  return Proto_Gnss_Fix.spoofingFlags.setter(a1, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

void (*Proto_Gnss_TimeTransferDataExtend.timeMarkCenterMachAbsTimeNs.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gnss_TimeTransferDataExtend.timeMarkCenterMachAbsTimeNs.modify;
}

void Proto_Gnss_TimeTransferDataExtend.timeMarkCenterMachAbsTimeNs.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_DaemonLocation.horizontalAccuracy.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

BOOL Proto_Gnss_TimeTransferDataExtend.hasTimeMarkCenterMachAbsTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_Measurement.hasStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

Swift::Void __swiftcall Proto_Gnss_TimeTransferDataExtend.clearTimeMarkCenterMachAbsTimeNs()()
{
  CLP_LogEntry_PrivateData_DaemonLocation.clearHorizontalAccuracy()(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (void (*)(_QWORD))type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass, (void (*)(uint64_t))specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

uint64_t Proto_Gnss_TimeTransferDataExtend.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_SyncState.init()(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &one-time initialization token for defaultInstance, &static Proto_Gnss_TimeTransferDataExtend._StorageClass.defaultInstance, a1);
}

uint64_t variable initialization expression of Proto_Gnss_TimeTransferDataExtend._storage()
{
  return variable initialization expression of CLP_LogEntry_PrivateData_SyncState._storage(&one-time initialization token for defaultInstance);
}

uint64_t Proto_Gnss_RawPressureSample.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t Proto_Gnss_RawPressureSample.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t (*Proto_Gnss_RawPressureSample.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_RawPressureSample(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_RawPressureSample.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_RawPressureSample);
}

Swift::Void __swiftcall Proto_Gnss_RawPressureSample.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_RawPressureSample);
}

float Proto_Gnss_RawPressureSample.pressure.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.residual.getter(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t Proto_Gnss_RawPressureSample.pressure.setter(float a1)
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.residual.setter(type metadata accessor for Proto_Gnss_RawPressureSample, a1);
}

uint64_t (*Proto_Gnss_RawPressureSample.pressure.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  float v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_RawPressureSample(0) + 24);
  v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0.0;
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_RawPressureSample.hasPressure.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gnss_RawPressureSample);
}

Swift::Void __swiftcall Proto_Gnss_RawPressureSample.clearPressure()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t Proto_Gnss_RawPressureSample.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  UnknownStorage.init()();
  result = type metadata accessor for Proto_Gnss_RawPressureSample(0);
  v3 = a1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + *(int *)(result + 24);
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  return result;
}

uint64_t Proto_Gnss_SensorSample3Axis.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t Proto_Gnss_SensorSample3Axis.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t (*Proto_Gnss_SensorSample3Axis.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_SensorSample3Axis.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

Swift::Void __swiftcall Proto_Gnss_SensorSample3Axis.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

float Proto_Gnss_SensorSample3Axis.x.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.residual.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t Proto_Gnss_SensorSample3Axis.x.setter(float a1)
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.residual.setter(type metadata accessor for Proto_Gnss_SensorSample3Axis, a1);
}

uint64_t (*Proto_Gnss_SensorSample3Axis.x.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  float v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0) + 24);
  v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0.0;
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SensorSample3Axis.hasX.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

Swift::Void __swiftcall Proto_Gnss_SensorSample3Axis.clearX()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

float Proto_Gnss_SensorSample3Axis.y.getter()
{
  uint64_t v0;
  uint64_t v1;
  float result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0) + 28);
  result = *(float *)v1;
  if (*(_BYTE *)(v1 + 4))
    return 0.0;
  return result;
}

uint64_t Proto_Gnss_SensorSample3Axis.y.setter(float a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
  v4 = v1 + *(int *)(result + 28);
  *(float *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_SensorSample3Axis.y.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  float v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0) + 28);
  v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0.0;
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SensorSample3Axis.hasY.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasBeidouRangingCode.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

Swift::Void __swiftcall Proto_Gnss_SensorSample3Axis.clearY()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearBeidouRangingCode()(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

float Proto_Gnss_SensorSample3Axis.z.getter()
{
  uint64_t v0;
  uint64_t v1;
  float result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0) + 32);
  result = *(float *)v1;
  if (*(_BYTE *)(v1 + 4))
    return 0.0;
  return result;
}

uint64_t Proto_Gnss_SensorSample3Axis.z.setter(float a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
  v4 = v1 + *(int *)(result + 32);
  *(float *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_SensorSample3Axis.z.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  float v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0) + 32);
  v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0.0;
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SensorSample3Axis.hasZ.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasGalileoSpreadingCode.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

Swift::Void __swiftcall Proto_Gnss_SensorSample3Axis.clearZ()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearGalileoSpreadingCode()(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

int *Proto_Gnss_SensorSample3Axis.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  return result;
}

uint64_t Proto_Gnss_SvId.satelliteSystem.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 20));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gnss_SvId.satelliteSystem.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_SvId(0);
  v4 = v1 + *(int *)(result + 20);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_SvId.satelliteSystem.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SvId.hasSatelliteSystem.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 20) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gnss_SvId.clearSatelliteSystem()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 20);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gnss_SvId.prn.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 24));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gnss_SvId.prn.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_SvId(0);
  v4 = v1 + *(int *)(result + 24);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_SvId.prn.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SvId.hasPrn.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gnss_SvId);
}

Swift::Void __swiftcall Proto_Gnss_SvId.clearPrn()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t Proto_Gnss_SvId.gloSlotNumber.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 28));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gnss_SvId.gloSlotNumber.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_SvId(0);
  v4 = v1 + *(int *)(result + 28);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_SvId.gloSlotNumber.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SvId.hasGloSlotNumber.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasBeidouRangingCode.getter(type metadata accessor for Proto_Gnss_SvId);
}

Swift::Void __swiftcall Proto_Gnss_SvId.clearGloSlotNumber()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearBeidouRangingCode()(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t Proto_Gnss_SvId.gloSlotSource.getter()
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.getter(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t Proto_Gnss_SvId.gloSlotSource.setter(int a1)
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.setter(a1, type metadata accessor for Proto_Gnss_SvId);
}

uint64_t (*Proto_Gnss_SvId.gloSlotSource.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SvId.hasGloSlotSource.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasGalileoSpreadingCode.getter(type metadata accessor for Proto_Gnss_SvId);
}

Swift::Void __swiftcall Proto_Gnss_SvId.clearGloSlotSource()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearGalileoSpreadingCode()(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t Proto_Gnss_SvId.gloFrequencyNumber.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 36));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gnss_SvId.gloFrequencyNumber.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_SvId(0);
  v4 = v1 + *(int *)(result + 36);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gnss_SvId.gloFrequencyNumber.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gnss_SvId.hasGloFrequencyNumber.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 36) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gnss_SvId.clearGloFrequencyNumber()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0) + 36);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

int *Proto_Gnss_SvId.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_SvId(0);
  v3 = a1 + result[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + result[9];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

double Proto_Gnss_PwrMeasurement.localTime.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t Proto_Gnss_PwrMeasurement.localTime.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeNanoseconds.setter(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*Proto_Gnss_PwrMeasurement.localTime.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_PwrMeasurement.hasLocalTime.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

Swift::Void __swiftcall Proto_Gnss_PwrMeasurement.clearLocalTime()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

double Proto_Gnss_PwrMeasurement.measIntervalSec.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t Proto_Gnss_PwrMeasurement.measIntervalSec.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*Proto_Gnss_PwrMeasurement.measIntervalSec.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_PwrMeasurement.hasMeasIntervalSec.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

Swift::Void __swiftcall Proto_Gnss_PwrMeasurement.clearMeasIntervalSec()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

double Proto_Gnss_PwrMeasurement.activeIntervalSec.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t Proto_Gnss_PwrMeasurement.activeIntervalSec.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*Proto_Gnss_PwrMeasurement.activeIntervalSec.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_PwrMeasurement.hasActiveIntervalSec.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

Swift::Void __swiftcall Proto_Gnss_PwrMeasurement.clearActiveIntervalSec()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

double Proto_Gnss_PwrMeasurement.avgPwrMw.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t Proto_Gnss_PwrMeasurement.avgPwrMw.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseUncNanoseconds.setter(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*Proto_Gnss_PwrMeasurement.avgPwrMw.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_PwrMeasurement.hasAvgPwrMw.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

Swift::Void __swiftcall Proto_Gnss_PwrMeasurement.clearAvgPwrMw()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseUncNanoseconds()(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t Proto_Gnss_PwrMeasurement.status.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 36)) & 1;
}

uint64_t Proto_Gnss_PwrMeasurement.status.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*Proto_Gnss_PwrMeasurement.status.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_PwrMeasurement.hasStatus.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 36)) != 2;
}

Swift::Void __swiftcall Proto_Gnss_PwrMeasurement.clearStatus()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0) + 36)) = 2;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus()
{
  lazy protocol witness table accessor for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus();
  return Enum.hash(into:)();
}

int *Proto_Gnss_PwrMeasurement.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = a1 + result[7];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = a1 + result[8];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a1 + result[9]) = 2;
  return result;
}

void *static Proto_Gnss_PwrMeasurement.PowerLoggingStatus.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gnss_PwrMeasurement.PowerLoggingStatus.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
}

uint64_t Proto_Gnss_DecodedRti.mTimeOfFileGenerationInSecondsSinceGpsEpoch.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t Proto_Gnss_DecodedRti.mTimeOfFileGenerationInSecondsSinceGpsEpoch.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t (*Proto_Gnss_DecodedRti.mTimeOfFileGenerationInSecondsSinceGpsEpoch.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_DecodedRti.hasMTimeOfFileGenerationInSecondsSinceGpsEpoch.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_DecodedRti);
}

Swift::Void __swiftcall Proto_Gnss_DecodedRti.clearMTimeOfFileGenerationInSecondsSinceGpsEpoch()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t Proto_Gnss_DecodedRti.mIsDataIntegrityValid.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.getter(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t Proto_Gnss_DecodedRti.mIsDataIntegrityValid.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.setter(a1, type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t (*Proto_Gnss_DecodedRti.mIsDataIntegrityValid.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_DecodedRti.hasMIsDataIntegrityValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0) + 24)) != 2;
}

Swift::Void __swiftcall Proto_Gnss_DecodedRti.clearMIsDataIntegrityValid()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0) + 24)) = 2;
}

uint64_t Proto_Gnss_DecodedRti.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  UnknownStorage.init()();
  result = type metadata accessor for Proto_Gnss_DecodedRti(0);
  v3 = a1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.mTimeOfGpsDataStartInSecondsSinceGpsEpoch.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.mTimeOfGpsDataStartInSecondsSinceGpsEpoch.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t (*Proto_Gnss_DecodedExtendedEphemeris.mTimeOfGpsDataStartInSecondsSinceGpsEpoch.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_DecodedExtendedEphemeris.hasMTimeOfGpsDataStartInSecondsSinceGpsEpoch.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

Swift::Void __swiftcall Proto_Gnss_DecodedExtendedEphemeris.clearMTimeOfGpsDataStartInSecondsSinceGpsEpoch()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.mIsDataIntegrityValid.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.getter(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.mIsDataIntegrityValid.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.setter(a1, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t (*Proto_Gnss_DecodedExtendedEphemeris.mIsDataIntegrityValid.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_DecodedExtendedEphemeris.hasMIsDataIntegrityValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 24)) != 2;
}

Swift::Void __swiftcall Proto_Gnss_DecodedExtendedEphemeris.clearMIsDataIntegrityValid()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 24)) = 2;
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.mTimeOfGpsDataEndInSecondsSinceGpsEpoch.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 28));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.mTimeOfGpsDataEndInSecondsSinceGpsEpoch.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v4 = v1 + *(int *)(result + 28);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gnss_DecodedExtendedEphemeris.mTimeOfGpsDataEndInSecondsSinceGpsEpoch.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gnss_DecodedExtendedEphemeris.hasMTimeOfGpsDataEndInSecondsSinceGpsEpoch.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

Swift::Void __swiftcall Proto_Gnss_DecodedExtendedEphemeris.clearMTimeOfGpsDataEndInSecondsSinceGpsEpoch()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.assistanceFileType.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 32));
  if (v1 == 7)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.assistanceFileType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*Proto_Gnss_DecodedExtendedEphemeris.assistanceFileType.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 32);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gnss_DecodedExtendedEphemeris.hasAssistanceFileType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 32)) != 7;
}

Swift::Void __swiftcall Proto_Gnss_DecodedExtendedEphemeris.clearAssistanceFileType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0) + 32)) = 7;
}

int *Proto_Gnss_DecodedExtendedEphemeris.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + result[6]) = 2;
  v4 = a1 + result[7];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(a1 + result[8]) = 7;
  return result;
}

uint64_t Proto_Gnss_Result._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Result._protobuf_nameMap);
}

uint64_t static Proto_Gnss_Result._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Result._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_Result@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Result._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_GnssContent._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_GnssContent._protobuf_nameMap);
}

uint64_t static Proto_Gnss_GnssContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_GnssContent._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_GnssContent@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_GnssContent._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_EstimationTechnology._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_EstimationTechnology._protobuf_nameMap);
}

uint64_t static Proto_Gnss_EstimationTechnology._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_EstimationTechnology._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_EstimationTechnology@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_EstimationTechnology._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_TimeQuality._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeQuality._protobuf_nameMap);
}

uint64_t static Proto_Gnss_TimeQuality._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeQuality._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_TimeQuality@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeQuality._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_PositionAssistType._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PositionAssistType._protobuf_nameMap);
}

uint64_t static Proto_Gnss_PositionAssistType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PositionAssistType._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_PositionAssistType@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PositionAssistType._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_MotionActivityContext._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_MotionActivityContext._protobuf_nameMap);
}

uint64_t static Proto_Gnss_MotionActivityContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_MotionActivityContext._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_MotionActivityContext@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_MotionActivityContext._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_MovingState._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_MovingState._protobuf_nameMap);
}

uint64_t static Proto_Gnss_MovingState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_MovingState._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_MovingState@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_MovingState._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_Reliability._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Reliability._protobuf_nameMap);
}

uint64_t static Proto_Gnss_Reliability._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Reliability._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_Reliability@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Reliability._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_DeviceMountState._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DeviceMountState._protobuf_nameMap);
}

uint64_t static Proto_Gnss_DeviceMountState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DeviceMountState._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_DeviceMountState@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DeviceMountState._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_SignalEnvironmentType._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SignalEnvironmentType._protobuf_nameMap);
}

uint64_t static Proto_Gnss_SignalEnvironmentType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SignalEnvironmentType._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_SignalEnvironmentType@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SignalEnvironmentType._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_DeleteGnssDataBitMask._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DeleteGnssDataBitMask._protobuf_nameMap);
}

uint64_t static Proto_Gnss_DeleteGnssDataBitMask._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DeleteGnssDataBitMask._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_DeleteGnssDataBitMask@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DeleteGnssDataBitMask._protobuf_nameMap, a1);
}

void *Proto_Gnss_Position.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_Position.protoMessageName;
}

unint64_t static Proto_Gnss_Position.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t Proto_Gnss_Position._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Position._protobuf_nameMap);
}

uint64_t static Proto_Gnss_Position._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Position._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_Position.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          type metadata accessor for Proto_Gnss_Position(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          goto LABEL_11;
        case 9:
          type metadata accessor for Proto_Gnss_Position(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_11;
        case 10:
          type metadata accessor for Proto_Gnss_Position(0);
          lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability();
          goto LABEL_10;
        case 11:
          type metadata accessor for Proto_Gnss_Position(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_11;
        case 12:
          type metadata accessor for Proto_Gnss_Position(0);
          lazy protocol witness table accessor for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent();
LABEL_10:
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
LABEL_11:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_Position.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Position(0);
  v10 = (int *)result;
  if ((*(_BYTE *)(v5 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  if (!v4)
  {
    if ((*(_BYTE *)(v5 + v10[6] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v5 + v10[7] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v5 + v10[8] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    closure #5 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Position);
    closure #6 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Position);
    closure #7 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Position);
    closure #8 in Proto_Gnss_Position.traverse<A>(visitor:)(v5);
    closure #9 in Proto_Gnss_Position.traverse<A>(visitor:)(v5);
    closure #10 in Proto_Gnss_Position.traverse<A>(visitor:)(v5);
    closure #11 in Proto_Gnss_Position.traverse<A>(visitor:)(v5);
    closure #12 in Proto_Gnss_Position.traverse<A>(visitor:)(v5);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #8 in Proto_Gnss_Position.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #9 in Proto_Gnss_Position.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 52) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #10 in Proto_Gnss_Position.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 56)) != 6)
  {
    lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #11 in Proto_Gnss_Position.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 60) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #12 in Proto_Gnss_Position.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Position(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 64)) != 6)
  {
    lazy protocol witness table accessor for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int Proto_Gnss_Position.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_Position, &lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_Position@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a2 + v8;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a2 + v11;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a1[12];
  v15 = a2 + a1[11];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a2 + v14;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v17 = a1[14];
  v18 = a2 + a1[13];
  *(_DWORD *)v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  *(_BYTE *)(a2 + v17) = 6;
  v19 = a1[16];
  v20 = a2 + a1[15];
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  *(_BYTE *)(a2 + v19) = 6;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_Position()
{
  return Proto_Gnss_Position.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_Position(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gnss_Position.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_Position()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_Position@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Position._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_Position()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_Position()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
  return Message.hash(into:)();
}

void *Proto_Gnss_Velocity.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_Velocity.protoMessageName;
}

unint64_t static Proto_Gnss_Velocity.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t Proto_Gnss_Velocity._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Velocity._protobuf_nameMap);
}

uint64_t static Proto_Gnss_Velocity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Velocity._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_Velocity.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          type metadata accessor for Proto_Gnss_Velocity(0);
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_Velocity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Velocity(0);
  v10 = (int *)result;
  if ((*(_BYTE *)(v5 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  if (!v4)
  {
    if ((*(_BYTE *)(v5 + v10[6] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v5 + v10[7] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v5 + v10[8] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    closure #5 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Velocity);
    closure #6 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Velocity);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_Velocity.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_Velocity, &lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_Velocity@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a2 + v8;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a2 + v11;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_Velocity()
{
  return Proto_Gnss_Velocity.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_Velocity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gnss_Velocity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_Velocity()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_Velocity@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Velocity._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_Velocity()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_Velocity()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
  return Message.hash(into:)();
}

void *Proto_Gnss_Time.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_Time.protoMessageName;
}

uint64_t static Proto_Gnss_Time.protoMessageName.getter()
{
  return 0x6E672E6F746F7270;
}

uint64_t Proto_Gnss_Time._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Time._protobuf_nameMap);
}

uint64_t static Proto_Gnss_Time._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Time._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_Time.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 5:
        case 8:
        case 9:
          type metadata accessor for Proto_Gnss_Time(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_10;
        case 2:
          type metadata accessor for Proto_Gnss_Time(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          goto LABEL_10;
        case 3:
          type metadata accessor for Proto_Gnss_Time(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          goto LABEL_10;
        case 4:
          type metadata accessor for Proto_Gnss_Time(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
          goto LABEL_10;
        case 6:
        case 7:
          type metadata accessor for Proto_Gnss_Time(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
LABEL_10:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_Time.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v10;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_Time(0);
  v10 = (int *)result;
  if ((*(_BYTE *)(v5 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v4)
  {
    if ((*(_BYTE *)(v5 + v10[6] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    if (*(_BYTE *)(v5 + v10[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if ((*(_BYTE *)(v5 + v10[8] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    closure #5 in Proto_Gnss_Time.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Time);
    closure #6 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Time);
    closure #7 in CLP_LogEntry_PrivateData_DirectionOfTravel.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Time);
    closure #8 in Proto_Gnss_Time.traverse<A>(visitor:)(v5);
    closure #9 in Proto_Gnss_Time.traverse<A>(visitor:)(v5);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #8 in Proto_Gnss_Time.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Time(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #9 in Proto_Gnss_Time.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_Time(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 52) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  return result;
}

Swift::Int Proto_Gnss_Time.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_Time, &lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_Time@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  v9 = a2 + v8;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a2 + v10;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1[12];
  v14 = a2 + a1[11];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = a2 + v13;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a2 + a1[13];
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_Time()
{
  return Proto_Gnss_Time.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_Time(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gnss_Time.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_Time()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_Time@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Time._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_Time()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_Time()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
  return Message.hash(into:)();
}

const char *Proto_Gnss_Fix.protoMessageName.unsafeMutableAddressor()
{
  return "proto.gnss.Fix";
}

uint64_t static Proto_Gnss_Fix.protoMessageName.getter()
{
  return 0x6E672E6F746F7270;
}

uint64_t Proto_Gnss_Fix._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Fix._protobuf_nameMap);
}

uint64_t static Proto_Gnss_Fix._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Fix._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_Fix._StorageClass.__deallocating_deinit()
{
  uint64_t v0;

  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  return swift_deallocClassInstance();
}

uint64_t Proto_Gnss_Fix.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t *v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  uint64_t v13;

  v2 = v1;
  v3 = v0;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    specialized Proto_Gnss_Fix._StorageClass.init(copying:)(v6);
    swift_release();
    *(_QWORD *)(v3 + v4) = v5;
    swift_release();
  }
  swift_retain();
  v7 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v1)
  {
    while ((v8 & 1) == 0)
    {
      switch(v7)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Time(0);
          v10 = &lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time;
          v11 = type metadata accessor for Proto_Gnss_Time;
          v12 = &protocol conformance descriptor for Proto_Gnss_Time;
          goto LABEL_7;
        case 2:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Position(0);
          v10 = &lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position;
          v11 = type metadata accessor for Proto_Gnss_Position;
          v12 = &protocol conformance descriptor for Proto_Gnss_Position;
          goto LABEL_7;
        case 3:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Velocity(0);
          v10 = &lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity;
          v11 = type metadata accessor for Proto_Gnss_Velocity;
          v12 = &protocol conformance descriptor for Proto_Gnss_Velocity;
LABEL_7:
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(v10, v11, (uint64_t)v12);
          v13 = v2;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
          goto LABEL_8;
        case 4:
          swift_beginAccess();
          v13 = v2;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_8;
        case 5:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology();
          v13 = v2;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
LABEL_8:
          v2 = v13;
          swift_endAccess();
          break;
        default:
          break;
      }
      v7 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t Proto_Gnss_Fix.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE *v13;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0) + 20));
  v10 = swift_retain();
  closure #1 in closure #1 in Proto_Gnss_Fix.traverse<A>(visitor:)(v10, a1, a2, a3);
  if (v4)
    return swift_release();
  closure #2 in closure #1 in Proto_Gnss_Fix.traverse<A>(visitor:)(v9, a1, a2, a3);
  closure #3 in closure #1 in Proto_Gnss_Fix.traverse<A>(visitor:)(v9, a1, a2, a3);
  v12 = v9
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  swift_beginAccess();
  if ((*(_BYTE *)(v12 + 8) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  v13 = (_BYTE *)(v9
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  if (*v13 != 5)
  {
    lazy protocol witness table accessor for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t closure #1 in closure #1 in Proto_Gnss_Fix.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Time(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Time);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Time);
}

uint64_t closure #2 in closure #1 in Proto_Gnss_Fix.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Position(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Position);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Position);
}

uint64_t closure #3 in closure #1 in Proto_Gnss_Fix.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Velocity(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Velocity);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t static Proto_Gnss_Fix.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gnss_Fix, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gnss_Fix.== infix(_:_:)) & 1;
}

BOOL closure #1 in static Proto_Gnss_Fix.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _BOOL8 result;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unsigned __int8 *v63;
  int v64;
  unsigned __int8 *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v83 = a2;
  v74 = type metadata accessor for Proto_Gnss_Velocity(0);
  v72 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v68 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Velocity?, Proto_Gnss_Velocity?));
  MEMORY[0x24BDAC7A8](v71);
  v75 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v69 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v73 = (uint64_t)&v67 - v8;
  v81 = type metadata accessor for Proto_Gnss_Position(0);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v70 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Position?, Proto_Gnss_Position?));
  MEMORY[0x24BDAC7A8](v78);
  v82 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v76 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v80 = (uint64_t)&v67 - v14;
  v15 = type metadata accessor for Proto_Gnss_Time(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v77 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Time?, Proto_Gnss_Time?));
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v67 - v25;
  v27 = a1;
  v28 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v28, (uint64_t)v26, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v29 = v83;
  v30 = v83 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess();
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v26, (uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v30, v31, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v20, 1, v15) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v26, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    v33 = v27;
    if (v32(v31, 1, v15) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
      goto LABEL_8;
    }
LABEL_6:
    v34 = &demangling cache variable for type metadata for (Proto_Gnss_Time?, Proto_Gnss_Time?);
    v35 = (uint64_t)v20;
LABEL_22:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v35, v34);
    goto LABEL_23;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, (uint64_t)v24, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if (v32(v31, 1, v15) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v26, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v24, type metadata accessor for Proto_Gnss_Time);
    goto LABEL_6;
  }
  v36 = v31;
  v37 = v77;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v36, v77, type metadata accessor for Proto_Gnss_Time);
  v33 = v27;
  swift_retain();
  swift_retain();
  v38 = specialized static Proto_Gnss_Time.== infix(_:_:)((uint64_t)v24, v37);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v37, type metadata accessor for Proto_Gnss_Time);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v26, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v24, type metadata accessor for Proto_Gnss_Time);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if ((v38 & 1) == 0)
    goto LABEL_23;
LABEL_8:
  v39 = v33 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess();
  v40 = v80;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v39, v80, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v41 = v29 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess();
  v42 = v82;
  v43 = v82 + *(int *)(v78 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v40, v82, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v41, v43, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  v45 = v81;
  if (v44(v42, 1, v81) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v40, &demangling cache variable for type metadata for Proto_Gnss_Position?);
    if (v44(v43, 1, v45) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v42, &demangling cache variable for type metadata for Proto_Gnss_Position?);
      goto LABEL_15;
    }
LABEL_13:
    v34 = &demangling cache variable for type metadata for (Proto_Gnss_Position?, Proto_Gnss_Position?);
LABEL_21:
    v35 = v42;
    goto LABEL_22;
  }
  v46 = v76;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v42, v76, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  if (v44(v43, 1, v45) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v40, &demangling cache variable for type metadata for Proto_Gnss_Position?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v46, type metadata accessor for Proto_Gnss_Position);
    goto LABEL_13;
  }
  v47 = v70;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v43, v70, type metadata accessor for Proto_Gnss_Position);
  v48 = specialized static Proto_Gnss_Position.== infix(_:_:)(v46, v47);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v47, type metadata accessor for Proto_Gnss_Position);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v40, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v46, type metadata accessor for Proto_Gnss_Position);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v42, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  if ((v48 & 1) == 0)
    goto LABEL_23;
LABEL_15:
  v49 = v33 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess();
  v50 = v73;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v49, v73, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  v51 = v29 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess();
  v42 = v75;
  v52 = v75 + *(int *)(v71 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v50, v75, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v51, v52, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  v54 = v74;
  if (v53(v42, 1, v74) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v50, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
    if (v53(v52, 1, v54) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v42, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  v55 = v69;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v42, v69, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  if (v53(v52, 1, v54) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v50, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v55, type metadata accessor for Proto_Gnss_Velocity);
LABEL_20:
    v34 = &demangling cache variable for type metadata for (Proto_Gnss_Velocity?, Proto_Gnss_Velocity?);
    goto LABEL_21;
  }
  v57 = v68;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v52, v68, type metadata accessor for Proto_Gnss_Velocity);
  v58 = specialized static Proto_Gnss_Velocity.== infix(_:_:)(v55, v57);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v57, type metadata accessor for Proto_Gnss_Velocity);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v50, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v55, type metadata accessor for Proto_Gnss_Velocity);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v42, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  if ((v58 & 1) == 0)
    goto LABEL_23;
LABEL_27:
  v59 = (uint64_t *)(v33
                  + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
  swift_beginAccess();
  v60 = *v59;
  v61 = *((_BYTE *)v59 + 8);
  v62 = v29
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  swift_beginAccess();
  if ((v61 & 1) != 0)
  {
    if ((*(_BYTE *)(v62 + 8) & 1) != 0)
      goto LABEL_32;
LABEL_23:
    swift_release();
    swift_release();
    return 0;
  }
  if ((*(_BYTE *)(v62 + 8) & 1) != 0 || v60 != *(_QWORD *)v62)
    goto LABEL_23;
LABEL_32:
  v63 = (unsigned __int8 *)(v33
                          + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  v64 = *v63;
  swift_release();
  v65 = (unsigned __int8 *)(v29
                          + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  v66 = *v65;
  swift_release();
  if (v64 == 5)
    return v66 == 5;
  result = 0;
  if (v66 != 5 && v64 == v66)
    return 1;
  return result;
}

Swift::Int Proto_Gnss_Fix.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_Fix, &lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_Fix@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for Message.init() in conformance CLP_LogEntry_PrivateData_SyncState(a1, &one-time initialization token for defaultInstance, &static Proto_Gnss_Fix._StorageClass.defaultInstance, a2);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_Fix()
{
  return Proto_Gnss_Fix.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_Fix(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gnss_Fix.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_Fix()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_Fix@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_Fix._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_Fix()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_Fix()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
  return Message.hash(into:)();
}

void *Proto_Gnss_TimeTransferData.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_TimeTransferData.protoMessageName;
}

unint64_t static Proto_Gnss_TimeTransferData.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t Proto_Gnss_TimeTransferData._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeTransferData._protobuf_nameMap);
}

uint64_t static Proto_Gnss_TimeTransferData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeTransferData._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_TimeTransferData.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gnss_TimeTransferData(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          goto LABEL_5;
        case 2:
          type metadata accessor for Proto_Gnss_TimeTransferData(0);
          type metadata accessor for Proto_Gnss_Time(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
          goto LABEL_5;
        case 3:
          type metadata accessor for Proto_Gnss_TimeTransferData(0);
          lazy protocol witness table accessor for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality();
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_5;
        case 4:
          type metadata accessor for Proto_Gnss_TimeTransferData(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_5;
        case 5:
        case 6:
          type metadata accessor for Proto_Gnss_TimeTransferData(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_TimeTransferData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;

  v5 = v3;
  result = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  v10 = result;
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v4)
  {
    closure #2 in Proto_Gnss_TimeTransferData.traverse<A>(visitor:)(v5, a1, a2, a3);
    if (*(_BYTE *)(v5 + *(int *)(v10 + 28)) != 7)
    {
      lazy protocol witness table accessor for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    if ((*(_BYTE *)(v5 + *(int *)(v10 + 32) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    closure #5 in Proto_Gnss_Time.traverse<A>(visitor:)(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_TimeTransferData);
    closure #6 in Proto_Gnss_TimeTransferData.traverse<A>(visitor:)(v5);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #2 in Proto_Gnss_TimeTransferData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Time(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 24), (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Time);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Time);
}

uint64_t closure #5 in Proto_Gnss_Time.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in Proto_Gnss_TimeTransferData.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 40) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  return result;
}

Swift::Int Proto_Gnss_TimeTransferData.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_TimeTransferData, &lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_TimeTransferData@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  v4 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  v5 = a2 + v4;
  v6 = type metadata accessor for Proto_Gnss_Time(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 7;
  v9 = a2 + v8;
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a2 + v10;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_TimeTransferData()
{
  return Proto_Gnss_TimeTransferData.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_TimeTransferData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gnss_TimeTransferData.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_TimeTransferData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_TimeTransferData@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeTransferData._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_TimeTransferData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_TimeTransferData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
  return Message.hash(into:)();
}

void *Proto_Gnss_TimeTransferDataExtend.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_TimeTransferDataExtend.protoMessageName;
}

unint64_t static Proto_Gnss_TimeTransferDataExtend.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t Proto_Gnss_TimeTransferDataExtend._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeTransferDataExtend._protobuf_nameMap);
}

uint64_t static Proto_Gnss_TimeTransferDataExtend._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeTransferDataExtend._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_TimeTransferDataExtend._StorageClass.__deallocating_deinit()
{
  uint64_t v0;

  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  return swift_deallocClassInstance();
}

uint64_t Proto_Gnss_TimeTransferDataExtend.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v2 = v1;
  v3 = v0;
  v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:)(v6);
    swift_release();
    *(_QWORD *)(v3 + v4) = v5;
    swift_release();
  }
  swift_retain();
  v7 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v1)
  {
    while ((v8 & 1) == 0)
    {
      switch(v7)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_TimeTransferData(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
          v10 = v2;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
          goto LABEL_7;
        case 2:
        case 3:
        case 4:
        case 5:
          swift_beginAccess();
          v10 = v2;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
LABEL_7:
          v2 = v10;
          swift_endAccess();
          break;
        default:
          break;
      }
      v7 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t Proto_Gnss_TimeTransferDataExtend.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0) + 20));
  v10 = swift_retain();
  closure #1 in closure #1 in Proto_Gnss_TimeTransferDataExtend.traverse<A>(visitor:)(v10, a1, a2, a3);
  if (v4)
    return swift_release();
  v12 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  swift_beginAccess();
  if ((*(_BYTE *)(v12 + 8) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  v13 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  swift_beginAccess();
  if ((*(_BYTE *)(v13 + 8) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  v14 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  swift_beginAccess();
  if ((*(_BYTE *)(v14 + 8) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  v15 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs;
  swift_beginAccess();
  if ((*(_BYTE *)(v15 + 8) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t closure #1 in closure #1 in Proto_Gnss_TimeTransferDataExtend.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_TimeTransferData);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t static Proto_Gnss_TimeTransferDataExtend.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, closure #1 in static Proto_Gnss_TimeTransferDataExtend.== infix(_:_:)) & 1;
}

uint64_t closure #1 in static Proto_Gnss_TimeTransferDataExtend.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  int v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_TimeTransferData?, Proto_Gnss_TimeTransferData?));
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v43 - v13;
  v15 = a1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v15, (uint64_t)v14, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v16 = a2
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  v17 = (uint64_t)&v9[*(int *)(v7 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, (uint64_t)v9, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v16, v17, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v18((uint64_t)v9, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
    v19 = a2;
    if (v18(v17, 1, v4) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v9, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
      goto LABEL_8;
    }
LABEL_6:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v9, &demangling cache variable for type metadata for (Proto_Gnss_TimeTransferData?, Proto_Gnss_TimeTransferData?));
    goto LABEL_26;
  }
  v20 = v45;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v9, v45, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  if (v18(v17, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v20, type metadata accessor for Proto_Gnss_TimeTransferData);
    goto LABEL_6;
  }
  v21 = v44;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v17, v44, type metadata accessor for Proto_Gnss_TimeTransferData);
  swift_retain();
  v19 = a2;
  swift_retain();
  v22 = specialized static Proto_Gnss_TimeTransferData.== infix(_:_:)(v20, v21);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v21, type metadata accessor for Proto_Gnss_TimeTransferData);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v20, type metadata accessor for Proto_Gnss_TimeTransferData);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v9, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  if ((v22 & 1) == 0)
    goto LABEL_26;
LABEL_8:
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
  swift_beginAccess();
  v24 = *v23;
  v25 = *((_BYTE *)v23 + 8);
  v26 = v19
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  swift_beginAccess();
  if ((v25 & 1) != 0)
  {
    if ((*(_BYTE *)(v26 + 8) & 1) == 0)
      goto LABEL_26;
  }
  else if ((*(_BYTE *)(v26 + 8) & 1) != 0 || v24 != *(_QWORD *)v26)
  {
    goto LABEL_26;
  }
  v27 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
  swift_beginAccess();
  v28 = *v27;
  v29 = *((_BYTE *)v27 + 8);
  v30 = v19
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  swift_beginAccess();
  if ((v29 & 1) != 0)
  {
    if ((*(_BYTE *)(v30 + 8) & 1) == 0)
      goto LABEL_26;
  }
  else if ((*(_BYTE *)(v30 + 8) & 1) != 0 || v28 != *(_QWORD *)v30)
  {
    goto LABEL_26;
  }
  v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
  swift_beginAccess();
  v32 = *v31;
  v33 = *((_BYTE *)v31 + 8);
  v34 = v19
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  swift_beginAccess();
  if ((v33 & 1) != 0)
  {
    if ((*(_BYTE *)(v34 + 8) & 1) != 0)
      goto LABEL_23;
LABEL_26:
    swift_release();
    swift_release();
    return 0;
  }
  if ((*(_BYTE *)(v34 + 8) & 1) != 0 || v32 != *(_QWORD *)v34)
    goto LABEL_26;
LABEL_23:
  v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
  swift_beginAccess();
  v36 = *v35;
  v37 = *((_BYTE *)v35 + 8);
  swift_release();
  v38 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
  swift_beginAccess();
  v39 = *v38;
  v40 = *((unsigned __int8 *)v38 + 8);
  swift_release();
  if ((v37 & 1) != 0)
  {
    if (!v40)
      return 0;
  }
  else
  {
    if (v36 == v39)
      v42 = v40;
    else
      v42 = 1;
    if ((v42 & 1) != 0)
      return 0;
  }
  return 1;
}

Swift::Int Proto_Gnss_TimeTransferDataExtend.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_TimeTransferDataExtend, &lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_TimeTransferDataExtend@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for Message.init() in conformance CLP_LogEntry_PrivateData_SyncState(a1, &one-time initialization token for defaultInstance, &static Proto_Gnss_TimeTransferDataExtend._StorageClass.defaultInstance, a2);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_TimeTransferDataExtend()
{
  return Proto_Gnss_TimeTransferDataExtend.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_TimeTransferDataExtend(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gnss_TimeTransferDataExtend.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_TimeTransferDataExtend()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_TimeTransferDataExtend@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_TimeTransferDataExtend._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_TimeTransferDataExtend()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_TimeTransferDataExtend()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
  return Message.hash(into:)();
}

void *Proto_Gnss_RawPressureSample.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_RawPressureSample.protoMessageName;
}

unint64_t static Proto_Gnss_RawPressureSample.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t Proto_Gnss_RawPressureSample._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_RawPressureSample._protobuf_nameMap);
}

uint64_t static Proto_Gnss_RawPressureSample._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_RawPressureSample._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_RawPressureSample.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      type metadata accessor for Proto_Gnss_RawPressureSample(0);
      dispatch thunk of Decoder.decodeSingularFloatField(value:)();
    }
    else if (result == 1)
    {
      type metadata accessor for Proto_Gnss_RawPressureSample(0);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gnss_RawPressureSample.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gnss_RawPressureSample(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_RawPressureSample.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_RawPressureSample, &lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_RawPressureSample()
{
  return Proto_Gnss_RawPressureSample.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_RawPressureSample()
{
  return Proto_Gnss_RawPressureSample.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_RawPressureSample()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_RawPressureSample@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_RawPressureSample._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_RawPressureSample()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_RawPressureSample()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
  return Message.hash(into:)();
}

void *Proto_Gnss_SensorSample3Axis.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_SensorSample3Axis.protoMessageName;
}

unint64_t static Proto_Gnss_SensorSample3Axis.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t Proto_Gnss_SensorSample3Axis._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SensorSample3Axis._protobuf_nameMap);
}

uint64_t static Proto_Gnss_SensorSample3Axis._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SensorSample3Axis._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_SensorSample3Axis.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 2:
        case 3:
        case 4:
          type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_SensorSample3Axis.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[8] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_SensorSample3Axis.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_SensorSample3Axis@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_SensorSample3Axis()
{
  return Proto_Gnss_SensorSample3Axis.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_SensorSample3Axis()
{
  return Proto_Gnss_SensorSample3Axis.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_SensorSample3Axis()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_SensorSample3Axis@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SensorSample3Axis._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_SensorSample3Axis()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_SensorSample3Axis()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
  return Message.hash(into:)();
}

void *Proto_Gnss_SvId.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_SvId.protoMessageName;
}

uint64_t static Proto_Gnss_SvId.protoMessageName.getter()
{
  return 0x6E672E6F746F7270;
}

uint64_t Proto_Gnss_SvId._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SvId._protobuf_nameMap);
}

uint64_t static Proto_Gnss_SvId._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SvId._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_SvId.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          type metadata accessor for Proto_Gnss_SvId(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_5;
        case 2:
          type metadata accessor for Proto_Gnss_SvId(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
          goto LABEL_5;
        case 5:
          type metadata accessor for Proto_Gnss_SvId(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularSInt32Field(value:)();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_SvId.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gnss_SvId(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 4) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[8] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[9] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_SvId.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_SvId, &lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_SvId()
{
  return Proto_Gnss_SvId.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_SvId()
{
  return Proto_Gnss_SvId.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_SvId()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_SvId@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_SvId._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_SvId()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_SvId()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
  return Message.hash(into:)();
}

void *Proto_Gnss_PwrMeasurement.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_PwrMeasurement.protoMessageName;
}

unint64_t static Proto_Gnss_PwrMeasurement.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t Proto_Gnss_PwrMeasurement._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PwrMeasurement._protobuf_nameMap);
}

uint64_t static Proto_Gnss_PwrMeasurement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PwrMeasurement._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_PwrMeasurement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          type metadata accessor for Proto_Gnss_PwrMeasurement(0);
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          break;
        case 5:
          type metadata accessor for Proto_Gnss_PwrMeasurement(0);
          lazy protocol witness table accessor for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_PwrMeasurement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[8] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[9]) != 2)
    {
      lazy protocol witness table accessor for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_PwrMeasurement.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_PwrMeasurement, &lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_PwrMeasurement()
{
  return Proto_Gnss_PwrMeasurement.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_PwrMeasurement()
{
  return Proto_Gnss_PwrMeasurement.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_PwrMeasurement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_PwrMeasurement@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PwrMeasurement._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_PwrMeasurement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_PwrMeasurement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
  return Message.hash(into:)();
}

uint64_t Proto_Gnss_PwrMeasurement.PowerLoggingStatus._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PwrMeasurement.PowerLoggingStatus._protobuf_nameMap);
}

uint64_t static Proto_Gnss_PwrMeasurement.PowerLoggingStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PwrMeasurement.PowerLoggingStatus._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_PwrMeasurement.PowerLoggingStatus._protobuf_nameMap, a1);
}

void *Proto_Gnss_DecodedRti.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_DecodedRti.protoMessageName;
}

unint64_t static Proto_Gnss_DecodedRti.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t Proto_Gnss_DecodedRti._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DecodedRti._protobuf_nameMap);
}

uint64_t static Proto_Gnss_DecodedRti._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DecodedRti._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_DecodedRti.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      type metadata accessor for Proto_Gnss_DecodedRti(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)();
    }
    else if (result == 1)
    {
      type metadata accessor for Proto_Gnss_DecodedRti(0);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gnss_DecodedRti.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gnss_DecodedRti(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v3 + 24)) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_DecodedRti.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_DecodedRti, &lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_DecodedRti@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 24);
  v6 = a2 + *(int *)(a1 + 20);
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 2;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_DecodedRti()
{
  return Proto_Gnss_DecodedRti.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_DecodedRti()
{
  return Proto_Gnss_DecodedRti.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_DecodedRti()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_DecodedRti@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DecodedRti._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_DecodedRti()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_DecodedRti()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
  return Message.hash(into:)();
}

void *Proto_Gnss_DecodedExtendedEphemeris.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gnss_DecodedExtendedEphemeris.protoMessageName;
}

unint64_t static Proto_Gnss_DecodedExtendedEphemeris.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DecodedExtendedEphemeris._protobuf_nameMap);
}

uint64_t static Proto_Gnss_DecodedExtendedEphemeris._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DecodedExtendedEphemeris._protobuf_nameMap, a1);
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_5;
        case 2:
          type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          goto LABEL_5;
        case 4:
          type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
          lazy protocol witness table accessor for type CLP_LogEntry_PrivateData_SvPositionSource and conformance CLP_LogEntry_PrivateData_SvPositionSource();
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gnss_DecodedExtendedEphemeris.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + v3[6]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[8]) != 7)
    {
      lazy protocol witness table accessor for type CLP_LogEntry_PrivateData_SvPositionSource and conformance CLP_LogEntry_PrivateData_SvPositionSource();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gnss_DecodedExtendedEphemeris.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, &lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gnss_DecodedExtendedEphemeris@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 2;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a2 + v7) = 7;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gnss_DecodedExtendedEphemeris()
{
  return Proto_Gnss_DecodedExtendedEphemeris.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gnss_DecodedExtendedEphemeris()
{
  return Proto_Gnss_DecodedExtendedEphemeris.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gnss_DecodedExtendedEphemeris()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gnss_DecodedExtendedEphemeris@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gnss_DecodedExtendedEphemeris._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gnss_DecodedExtendedEphemeris()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gnss_DecodedExtendedEphemeris()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
  return Message.hash(into:)();
}

unint64_t specialized Proto_Gnss_Result.init(rawValue:)(unint64_t result)
{
  if (result >= 0xA)
    return 10;
  return result;
}

uint64_t specialized Proto_Gnss_MotionActivityContext.init(rawValue:)(unint64_t a1)
{
  if (a1 > 9)
    return 10;
  else
    return byte_235BDBF70[a1];
}

unint64_t specialized Proto_Gnss_MovingState.init(rawValue:)(unint64_t a1)
{
  if (a1 >= 5)
    return 5;
  else
    return 0x4030201uLL >> (8 * a1);
}

uint64_t specialized Proto_Gnss_Reliability.init(rawValue:)(uint64_t a1)
{
  uint64_t result;

  result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 1;
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      goto LABEL_6;
    case 10:
      result = 2;
      break;
    case 25:
      result = 3;
      break;
    default:
      if (a1 == 50)
      {
        result = 4;
      }
      else if (a1 == 75)
      {
        result = 5;
      }
      else
      {
LABEL_6:
        result = 6;
      }
      break;
  }
  return result;
}

unint64_t specialized Proto_Gnss_DeviceMountState.init(rawValue:)(unint64_t a1)
{
  if (a1 >= 5)
    return 4;
  else
    return 0x3020104uLL >> (8 * a1);
}

uint64_t specialized Proto_Gnss_SignalEnvironmentType.init(rawValue:)(unint64_t a1)
{
  if (a1 > 0xF)
    return 8;
  else
    return asc_235BFA046[a1];
}

uint64_t type metadata accessor for Proto_Gnss_Position(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_Position);
}

uint64_t type metadata accessor for Proto_Gnss_Velocity(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_Velocity);
}

uint64_t type metadata accessor for Proto_Gnss_Time(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_Time);
}

uint64_t type metadata accessor for Proto_Gnss_Fix(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_Fix);
}

uint64_t type metadata accessor for Proto_Gnss_Fix._StorageClass(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_Fix._StorageClass);
}

uint64_t specialized Proto_Gnss_Fix._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v27;
  uint64_t v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  v12 = type metadata accessor for Proto_Gnss_Time(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  v14 = type metadata accessor for Proto_Gnss_Position(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  v16 = type metadata accessor for Proto_Gnss_Velocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  v18 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology) = 5;
  v19 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v19, (uint64_t)v10, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v10, v11, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  swift_endAccess();
  v20 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v20, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v7, v13, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  swift_endAccess();
  v21 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess();
  v22 = v28;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v21, v28, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v22, v15, &demangling cache variable for type metadata for Proto_Gnss_Velocity?);
  swift_endAccess();
  v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
  swift_beginAccess();
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  swift_beginAccess();
  *(_QWORD *)v17 = v24;
  *(_BYTE *)(v17 + 8) = (_BYTE)v23;
  v25 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess();
  LOBYTE(v25) = *v25;
  swift_beginAccess();
  *v18 = (_BYTE)v25;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_TimeTransferData(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_TimeTransferData);
}

uint64_t type metadata accessor for Proto_Gnss_TimeTransferDataExtend(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_TimeTransferDataExtend._StorageClass);
}

uint64_t specialized Proto_Gnss_TimeTransferDataExtend._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _BYTE v22[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  v7 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v5, v6, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferData?);
  swift_endAccess();
  v13 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
  swift_beginAccess();
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  swift_beginAccess();
  *(_QWORD *)v8 = v14;
  *(_BYTE *)(v8 + 8) = (_BYTE)v13;
  v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
  swift_beginAccess();
  v16 = *v15;
  LOBYTE(v15) = *((_BYTE *)v15 + 8);
  swift_beginAccess();
  *(_QWORD *)v9 = v16;
  *(_BYTE *)(v9 + 8) = (_BYTE)v15;
  v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
  swift_beginAccess();
  v18 = *v17;
  LOBYTE(v17) = *((_BYTE *)v17 + 8);
  swift_beginAccess();
  *(_QWORD *)v10 = v18;
  *(_BYTE *)(v10 + 8) = (_BYTE)v17;
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
  swift_beginAccess();
  v20 = *v19;
  LOBYTE(v19) = *((_BYTE *)v19 + 8);
  swift_beginAccess();
  *(_QWORD *)v11 = v20;
  *(_BYTE *)(v11 + 8) = (_BYTE)v19;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_RawPressureSample(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_RawPressureSample);
}

uint64_t type metadata accessor for Proto_Gnss_SensorSample3Axis(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_SensorSample3Axis);
}

uint64_t type metadata accessor for Proto_Gnss_SvId(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_SvId);
}

uint64_t type metadata accessor for Proto_Gnss_PwrMeasurement(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_PwrMeasurement);
}

uint64_t type metadata accessor for Proto_Gnss_DecodedRti(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_DecodedRti);
}

uint64_t type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t specialized static Proto_Gnss_DecodedExtendedEphemeris.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  _QWORD *v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  char v29;
  void (*v30)(_BYTE *, uint64_t);
  _BYTE v32[16];

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v32[-v9];
  v11 = (int *)type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_24;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_24;
  }
  v17 = v11[6];
  v18 = *(unsigned __int8 *)(a1 + v17);
  v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2)
      goto LABEL_24;
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_24;
  }
  v20 = v11[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = *(_BYTE *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a2 + v20);
  v24 = *(unsigned __int8 *)(a2 + v20 + 8);
  if ((v22 & 1) != 0)
  {
    if (!v24)
      goto LABEL_24;
  }
  else
  {
    if (*v21 != *v23)
      LOBYTE(v24) = 1;
    if ((v24 & 1) != 0)
      goto LABEL_24;
  }
  v25 = v11[8];
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 7)
  {
    if (v27 == 7)
      goto LABEL_23;
LABEL_24:
    v29 = 0;
    return v29 & 1;
  }
  v32[15] = v26;
  if (v27 == 7)
    goto LABEL_24;
  v32[14] = v27;
  lazy protocol witness table accessor for type CLP_LogEntry_PrivateData_SvPositionSource and conformance CLP_LogEntry_PrivateData_SvPositionSource();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    goto LABEL_24;
LABEL_23:
  v28 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v28(v10, a1, v4);
  v28(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v29 = dispatch thunk of static Equatable.== infix(_:_:)();
  v30 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v30(v8, v4);
  v30(v10, v4);
  return v29 & 1;
}

uint64_t specialized static Proto_Gnss_SensorSample3Axis.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  float *v18;
  char v19;
  float *v20;
  int v21;
  uint64_t v22;
  float *v23;
  char v24;
  float *v25;
  int v26;
  uint64_t v27;
  float *v28;
  char v29;
  float *v30;
  int v31;
  char v32;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_SensorSample3Axis(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_21;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_21;
  }
  v17 = v11[6];
  v18 = (float *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (float *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_21;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_21;
  }
  v22 = v11[7];
  v23 = (float *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (float *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) == 0)
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_21;
LABEL_19:
    v27 = v11[8];
    v28 = (float *)(a1 + v27);
    v29 = *(_BYTE *)(a1 + v27 + 4);
    v30 = (float *)(a2 + v27);
    v31 = *(unsigned __int8 *)(a2 + v27 + 4);
    if ((v29 & 1) != 0)
    {
      if (!v31)
        goto LABEL_21;
    }
    else
    {
      if (*v28 != *v30)
        LOBYTE(v31) = 1;
      if ((v31 & 1) != 0)
        goto LABEL_21;
    }
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v34(v10, a1, v4);
    v34(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    v35 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35(v8, v4);
    v35(v10, v4);
    return v32 & 1;
  }
  if (v26)
    goto LABEL_19;
LABEL_21:
  v32 = 0;
  return v32 & 1;
}

uint64_t specialized static Proto_Gnss_RawPressureSample.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  float *v18;
  char v19;
  float *v20;
  int v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v26;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for Proto_Gnss_RawPressureSample(0);
  v12 = *(int *)(v11 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) == 0)
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_9;
LABEL_7:
    v17 = *(int *)(v11 + 24);
    v18 = (float *)(a1 + v17);
    v19 = *(_BYTE *)(a1 + v17 + 4);
    v20 = (float *)(a2 + v17);
    v21 = *(unsigned __int8 *)(a2 + v17 + 4);
    if ((v19 & 1) != 0)
    {
      if (!v21)
        goto LABEL_9;
    }
    else
    {
      if (*v18 != *v20)
        LOBYTE(v21) = 1;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23(v10, a1, v4);
    v23(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v22 = dispatch thunk of static Equatable.== infix(_:_:)();
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    v24(v10, v4);
    return v22 & 1;
  }
  if (v16)
    goto LABEL_7;
LABEL_9:
  v22 = 0;
  return v22 & 1;
}

uint64_t specialized static Proto_Gnss_TimeTransferData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  char v41;
  _DWORD *v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  int v53;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = type metadata accessor for UnknownStorage();
  v66 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v61 - v7;
  v8 = type metadata accessor for Proto_Gnss_Time(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Time?, Proto_Gnss_Time?));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v61 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v61 - v21;
  v23 = type metadata accessor for Proto_Gnss_TimeTransferData(0);
  v24 = *(int *)(v23 + 20);
  v25 = a1;
  v26 = *(unsigned __int8 *)(a1 + v24);
  v68 = a2;
  v27 = *(unsigned __int8 *)(a2 + v24);
  if (v26 == 2)
  {
    if (v27 != 2)
      goto LABEL_32;
  }
  else if (v27 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0)
  {
    goto LABEL_32;
  }
  v63 = v4;
  v28 = a1;
  v29 = (int *)v23;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v25 + *(int *)(v23 + 24), (uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v62 = v29;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v68 + v29[6], (uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v30 = (uint64_t)&v13[*(int *)(v11 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, (uint64_t)v13, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, v30, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v31((uint64_t)v13, 1, v8) != 1)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, (uint64_t)v17, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    if (v31(v30, 1, v8) != 1)
    {
      v33 = v67;
      outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v30, v67, type metadata accessor for Proto_Gnss_Time);
      v34 = specialized static Proto_Gnss_Time.== infix(_:_:)((uint64_t)v17, v33);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v33, type metadata accessor for Proto_Gnss_Time);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Time?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v17, type metadata accessor for Proto_Gnss_Time);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for Proto_Gnss_Time?);
      if ((v34 & 1) == 0)
        goto LABEL_32;
      goto LABEL_13;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Time?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v17, type metadata accessor for Proto_Gnss_Time);
LABEL_11:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for (Proto_Gnss_Time?, Proto_Gnss_Time?));
    v32 = 0;
    return v32 & 1;
  }
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Time?);
  if (v31(v30, 1, v8) != 1)
    goto LABEL_11;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for Proto_Gnss_Time?);
LABEL_13:
  v35 = v62[7];
  v36 = *(unsigned __int8 *)(v28 + v35);
  v37 = *(unsigned __int8 *)(v68 + v35);
  if (v36 == 7)
  {
    v38 = v63;
    if (v37 != 7)
      goto LABEL_32;
    goto LABEL_18;
  }
  v32 = 0;
  v38 = v63;
  if (v37 != 7 && v36 == v37)
  {
LABEL_18:
    v39 = v62[8];
    v40 = (_DWORD *)(v28 + v39);
    v41 = *(_BYTE *)(v28 + v39 + 4);
    v42 = (_DWORD *)(v68 + v39);
    v43 = *(unsigned __int8 *)(v68 + v39 + 4);
    if ((v41 & 1) != 0)
    {
      if (!v43)
        goto LABEL_32;
    }
    else
    {
      if (*v40 != *v42)
        LOBYTE(v43) = 1;
      if ((v43 & 1) != 0)
        goto LABEL_32;
    }
    v44 = v62[9];
    v45 = (_QWORD *)(v28 + v44);
    v46 = *(_BYTE *)(v28 + v44 + 8);
    v47 = (_QWORD *)(v68 + v44);
    v48 = *(unsigned __int8 *)(v68 + v44 + 8);
    if ((v46 & 1) == 0)
    {
      if (*v45 != *v47)
        LOBYTE(v48) = 1;
      if ((v48 & 1) != 0)
        goto LABEL_32;
LABEL_30:
      v49 = v62[10];
      v50 = (_QWORD *)(v28 + v49);
      v51 = *(_BYTE *)(v28 + v49 + 8);
      v52 = (_QWORD *)(v68 + v49);
      v53 = *(unsigned __int8 *)(v68 + v49 + 8);
      if ((v51 & 1) != 0)
      {
        if (!v53)
          goto LABEL_32;
      }
      else
      {
        if (*v50 != *v52)
          LOBYTE(v53) = 1;
        if ((v53 & 1) != 0)
          goto LABEL_32;
      }
      v55 = v66;
      v56 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
      v57 = v28;
      v58 = v64;
      v56(v64, v57, v38);
      v59 = v65;
      v56(v65, v68, v38);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)();
      v60 = *(void (**)(char *, uint64_t))(v55 + 8);
      v60(v59, v38);
      v60(v58, v38);
      return v32 & 1;
    }
    if (v48)
      goto LABEL_30;
LABEL_32:
    v32 = 0;
  }
  return v32 & 1;
}

uint64_t specialized static Proto_Gnss_PwrMeasurement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  uint64_t v27;
  double *v28;
  char v29;
  double *v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  char v35;
  void (*v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v39 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  v12 = v11[5];
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_27;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_27;
  }
  v17 = v11[6];
  v18 = (double *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (double *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_27;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_27;
  }
  v22 = v11[7];
  v23 = (double *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 8);
  v25 = (double *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_27;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_27;
  }
  v27 = v11[8];
  v28 = (double *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 8);
  v30 = (double *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_27;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_27;
  }
  v32 = v11[9];
  v33 = *(unsigned __int8 *)(a1 + v32);
  v34 = *(unsigned __int8 *)(a2 + v32);
  if (v33 == 2)
  {
    if (v34 != 2)
    {
LABEL_27:
      v35 = 0;
      return v35 & 1;
    }
LABEL_31:
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v37(v10, a1, v4);
    v37(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v35 = dispatch thunk of static Equatable.== infix(_:_:)();
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v8, v4);
    v38(v10, v4);
    return v35 & 1;
  }
  v35 = 0;
  if (v34 != 2 && ((v34 ^ v33) & 1) == 0)
    goto LABEL_31;
  return v35 & 1;
}

uint64_t specialized static Proto_Gnss_DecodedRti.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  v12 = *(int *)(v11 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_13;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_13;
  }
  v17 = *(int *)(v11 + 24);
  v18 = *(unsigned __int8 *)(a1 + v17);
  v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2)
    {
LABEL_13:
      v21 = 0;
      return v21 & 1;
    }
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_13;
  }
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v10, a1, v4);
  v20(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v8, v4);
  v22(v10, v4);
  return v21 & 1;
}

uint64_t specialized static Proto_Gnss_Velocity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  uint64_t v27;
  double *v28;
  char v29;
  double *v30;
  int v31;
  uint64_t v32;
  double *v33;
  char v34;
  double *v35;
  int v36;
  uint64_t v37;
  double *v38;
  char v39;
  double *v40;
  int v41;
  char v42;
  void (*v44)(char *, uint64_t, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v46 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Velocity(0);
  v12 = v11[5];
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_33;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_33;
  }
  v17 = v11[6];
  v18 = (double *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (double *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_33;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_33;
  }
  v22 = v11[7];
  v23 = (double *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 8);
  v25 = (double *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_33;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_33;
  }
  v27 = v11[8];
  v28 = (double *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 8);
  v30 = (double *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_33;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_33;
  }
  v32 = v11[9];
  v33 = (double *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 8);
  v35 = (double *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 8);
  if ((v34 & 1) == 0)
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_33;
LABEL_31:
    v37 = v11[10];
    v38 = (double *)(a1 + v37);
    v39 = *(_BYTE *)(a1 + v37 + 8);
    v40 = (double *)(a2 + v37);
    v41 = *(unsigned __int8 *)(a2 + v37 + 8);
    if ((v39 & 1) != 0)
    {
      if (!v41)
        goto LABEL_33;
    }
    else
    {
      if (*v38 != *v40)
        LOBYTE(v41) = 1;
      if ((v41 & 1) != 0)
        goto LABEL_33;
    }
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v44(v10, a1, v4);
    v44(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v42 = dispatch thunk of static Equatable.== infix(_:_:)();
    v45 = *(void (**)(char *, uint64_t))(v5 + 8);
    v45(v8, v4);
    v45(v10, v4);
    return v42 & 1;
  }
  if (v36)
    goto LABEL_31;
LABEL_33:
  v42 = 0;
  return v42 & 1;
}

uint64_t specialized static Proto_Gnss_SvId.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  char v37;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  uint64_t v41;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_SvId(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_27;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_27;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_27;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_27;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_27;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_27;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) == 0)
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_27;
LABEL_25:
    v32 = v11[9];
    v33 = (_DWORD *)(a1 + v32);
    v34 = *(_BYTE *)(a1 + v32 + 4);
    v35 = (_DWORD *)(a2 + v32);
    v36 = *(unsigned __int8 *)(a2 + v32 + 4);
    if ((v34 & 1) != 0)
    {
      if (!v36)
        goto LABEL_27;
    }
    else
    {
      if (*v33 != *v35)
        LOBYTE(v36) = 1;
      if ((v36 & 1) != 0)
        goto LABEL_27;
    }
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39(v10, a1, v4);
    v39(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v37 = dispatch thunk of static Equatable.== infix(_:_:)();
    v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    v40(v8, v4);
    v40(v10, v4);
    return v37 & 1;
  }
  if (v31)
    goto LABEL_25;
LABEL_27:
  v37 = 0;
  return v37 & 1;
}

uint64_t specialized static Proto_Gnss_Time.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  float *v18;
  char v19;
  float *v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  char v27;
  _DWORD *v28;
  int v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  double *v36;
  char v37;
  double *v38;
  int v39;
  uint64_t v40;
  double *v41;
  char v42;
  double *v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  _QWORD *v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  _QWORD *v53;
  int v54;
  char v55;
  void (*v57)(char *, uint64_t, uint64_t);
  void (*v58)(char *, uint64_t);
  uint64_t v59;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v59 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_50;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_50;
  }
  v17 = v11[6];
  v18 = (float *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (float *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_50;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_50;
  }
  v22 = v11[7];
  v23 = *(unsigned __int8 *)(a1 + v22);
  v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 2)
  {
    if (v24 != 2)
      goto LABEL_50;
  }
  else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
  {
    goto LABEL_50;
  }
  v25 = v11[8];
  v26 = (_DWORD *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 4);
  v28 = (_DWORD *)(a2 + v25);
  v29 = *(unsigned __int8 *)(a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v29)
      goto LABEL_50;
  }
  else
  {
    if (*v26 != *v28)
      LOBYTE(v29) = 1;
    if ((v29 & 1) != 0)
      goto LABEL_50;
  }
  v30 = v11[9];
  v31 = (_QWORD *)(a1 + v30);
  v32 = *(_BYTE *)(a1 + v30 + 8);
  v33 = (_QWORD *)(a2 + v30);
  v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if ((v32 & 1) != 0)
  {
    if (!v34)
      goto LABEL_50;
  }
  else
  {
    if (*v31 != *v33)
      LOBYTE(v34) = 1;
    if ((v34 & 1) != 0)
      goto LABEL_50;
  }
  v35 = v11[10];
  v36 = (double *)(a1 + v35);
  v37 = *(_BYTE *)(a1 + v35 + 8);
  v38 = (double *)(a2 + v35);
  v39 = *(unsigned __int8 *)(a2 + v35 + 8);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_50;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_50;
  }
  v40 = v11[11];
  v41 = (double *)(a1 + v40);
  v42 = *(_BYTE *)(a1 + v40 + 8);
  v43 = (double *)(a2 + v40);
  v44 = *(unsigned __int8 *)(a2 + v40 + 8);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_50;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_50;
  }
  v45 = v11[12];
  v46 = (_QWORD *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 8);
  v48 = (_QWORD *)(a2 + v45);
  v49 = *(unsigned __int8 *)(a2 + v45 + 8);
  if ((v47 & 1) == 0)
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_50;
LABEL_48:
    v50 = v11[13];
    v51 = (_QWORD *)(a1 + v50);
    v52 = *(_BYTE *)(a1 + v50 + 8);
    v53 = (_QWORD *)(a2 + v50);
    v54 = *(unsigned __int8 *)(a2 + v50 + 8);
    if ((v52 & 1) != 0)
    {
      if (!v54)
        goto LABEL_50;
    }
    else
    {
      if (*v51 != *v53)
        LOBYTE(v54) = 1;
      if ((v54 & 1) != 0)
        goto LABEL_50;
    }
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v57(v10, a1, v4);
    v57(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v55 = dispatch thunk of static Equatable.== infix(_:_:)();
    v58 = *(void (**)(char *, uint64_t))(v5 + 8);
    v58(v8, v4);
    v58(v10, v4);
    return v55 & 1;
  }
  if (v49)
    goto LABEL_48;
LABEL_50:
  v55 = 0;
  return v55 & 1;
}

uint64_t specialized static Proto_Gnss_Position.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  uint64_t v27;
  double *v28;
  char v29;
  double *v30;
  int v31;
  uint64_t v32;
  double *v33;
  char v34;
  double *v35;
  int v36;
  uint64_t v37;
  double *v38;
  char v39;
  double *v40;
  int v41;
  uint64_t v42;
  double *v43;
  char v44;
  double *v45;
  int v46;
  uint64_t v47;
  double *v48;
  char v49;
  double *v50;
  int v51;
  uint64_t v52;
  _DWORD *v53;
  char v54;
  _DWORD *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char v62;
  _QWORD *v63;
  int v64;
  uint64_t v65;
  int v66;
  int v67;
  char v68;
  void (*v70)(char *, uint64_t, uint64_t);
  void (*v71)(char *, uint64_t);
  uint64_t v72;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v72 - v9;
  v11 = (int *)type metadata accessor for Proto_Gnss_Position(0);
  v12 = v11[5];
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_68;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_68;
  }
  v17 = v11[6];
  v18 = (double *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (double *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_68;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_68;
  }
  v22 = v11[7];
  v23 = (double *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 8);
  v25 = (double *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_68;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_68;
  }
  v27 = v11[8];
  v28 = (double *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 8);
  v30 = (double *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_68;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_68;
  }
  v32 = v11[9];
  v33 = (double *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 8);
  v35 = (double *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 8);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_68;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_68;
  }
  v37 = v11[10];
  v38 = (double *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 8);
  v40 = (double *)(a2 + v37);
  v41 = *(unsigned __int8 *)(a2 + v37 + 8);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_68;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_68;
  }
  v42 = v11[11];
  v43 = (double *)(a1 + v42);
  v44 = *(_BYTE *)(a1 + v42 + 8);
  v45 = (double *)(a2 + v42);
  v46 = *(unsigned __int8 *)(a2 + v42 + 8);
  if ((v44 & 1) != 0)
  {
    if (!v46)
      goto LABEL_68;
  }
  else
  {
    if (*v43 != *v45)
      LOBYTE(v46) = 1;
    if ((v46 & 1) != 0)
      goto LABEL_68;
  }
  v47 = v11[12];
  v48 = (double *)(a1 + v47);
  v49 = *(_BYTE *)(a1 + v47 + 8);
  v50 = (double *)(a2 + v47);
  v51 = *(unsigned __int8 *)(a2 + v47 + 8);
  if ((v49 & 1) != 0)
  {
    if (!v51)
      goto LABEL_68;
  }
  else
  {
    if (*v48 != *v50)
      LOBYTE(v51) = 1;
    if ((v51 & 1) != 0)
      goto LABEL_68;
  }
  v52 = v11[13];
  v53 = (_DWORD *)(a1 + v52);
  v54 = *(_BYTE *)(a1 + v52 + 4);
  v55 = (_DWORD *)(a2 + v52);
  v56 = *(unsigned __int8 *)(a2 + v52 + 4);
  if ((v54 & 1) != 0)
  {
    if (!v56)
      goto LABEL_68;
  }
  else
  {
    if (*v53 != *v55)
      LOBYTE(v56) = 1;
    if ((v56 & 1) != 0)
      goto LABEL_68;
  }
  v57 = v11[14];
  v58 = *(char *)(a1 + v57);
  v59 = *(char *)(a2 + v57);
  if (v58 == 6)
  {
    if ((_DWORD)v59 != 6)
      goto LABEL_68;
  }
  else if ((_DWORD)v59 == 6 || qword_235BDBF80[v58] != qword_235BDBF80[v59])
  {
    goto LABEL_68;
  }
  v60 = v11[15];
  v61 = (_QWORD *)(a1 + v60);
  v62 = *(_BYTE *)(a1 + v60 + 8);
  v63 = (_QWORD *)(a2 + v60);
  v64 = *(unsigned __int8 *)(a2 + v60 + 8);
  if ((v62 & 1) != 0)
  {
    if (!v64)
      goto LABEL_68;
  }
  else
  {
    if (*v61 != *v63)
      LOBYTE(v64) = 1;
    if ((v64 & 1) != 0)
      goto LABEL_68;
  }
  v65 = v11[16];
  v66 = *(unsigned __int8 *)(a1 + v65);
  v67 = *(unsigned __int8 *)(a2 + v65);
  if (v66 == 6)
  {
    if (v67 != 6)
    {
LABEL_68:
      v68 = 0;
      return v68 & 1;
    }
LABEL_72:
    v70 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v70(v10, a1, v4);
    v70(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v68 = dispatch thunk of static Equatable.== infix(_:_:)();
    v71 = *(void (**)(char *, uint64_t))(v5 + 8);
    v71(v8, v4);
    v71(v10, v4);
    return v68 & 1;
  }
  v68 = 0;
  if (v67 != 6 && v66 == v67)
    goto LABEL_72;
  return v68 & 1;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_Result()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_Result] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_Result]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_GnssContent, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_GnssContent, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_GnssContent, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_GnssContent, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_GnssContent and conformance Proto_Gnss_GnssContent);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_GnssContent()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_GnssContent] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_GnssContent]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_EstimationTechnology, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_EstimationTechnology, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_EstimationTechnology, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_EstimationTechnology, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_EstimationTechnology and conformance Proto_Gnss_EstimationTechnology);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_EstimationTechnology()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_EstimationTechnology] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_EstimationTechnology]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_TimeQuality, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_TimeQuality, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_TimeQuality, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_TimeQuality, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_TimeQuality and conformance Proto_Gnss_TimeQuality);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_TimeQuality()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_TimeQuality] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_TimeQuality]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PositionAssistType, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PositionAssistType, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PositionAssistType, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PositionAssistType, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_PositionAssistType()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_PositionAssistType] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_PositionAssistType]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MotionActivityContext, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MotionActivityContext, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MotionActivityContext, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MotionActivityContext, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_MotionActivityContext()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_MotionActivityContext] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_MotionActivityContext]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MovingState, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MovingState, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MovingState, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_MovingState, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_MovingState()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_MovingState] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_MovingState]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_Reliability, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_Reliability, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_Reliability, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_Reliability, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_Reliability()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_Reliability] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_Reliability]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeviceMountState, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeviceMountState, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeviceMountState, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeviceMountState, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_DeviceMountState()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_DeviceMountState] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_DeviceMountState]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_SignalEnvironmentType, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_SignalEnvironmentType, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_SignalEnvironmentType, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_SignalEnvironmentType, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_SignalEnvironmentType()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_SignalEnvironmentType] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_SignalEnvironmentType]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeleteGnssDataBitMask, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeleteGnssDataBitMask, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeleteGnssDataBitMask, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_DeleteGnssDataBitMask, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_DeleteGnssDataBitMask and conformance Proto_Gnss_DeleteGnssDataBitMask);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_DeleteGnssDataBitMask()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_DeleteGnssDataBitMask] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_DeleteGnssDataBitMask]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PwrMeasurement.PowerLoggingStatus, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PwrMeasurement.PowerLoggingStatus, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PwrMeasurement.PowerLoggingStatus, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gnss_PwrMeasurement.PowerLoggingStatus, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement.PowerLoggingStatus and conformance Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gnss_PwrMeasurement.PowerLoggingStatus()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gnss_PwrMeasurement.PowerLoggingStatus] and conformance [A], &demangling cache variable for type metadata for [Proto_Gnss_PwrMeasurement.PowerLoggingStatus]);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_Position()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
}

uint64_t base witness table accessor for Message in Proto_Gnss_Position()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_Position()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_Position()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_Velocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
}

uint64_t base witness table accessor for Message in Proto_Gnss_Velocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_Velocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_Velocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Velocity and conformance Proto_Gnss_Velocity, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Velocity);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_Time()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
}

uint64_t base witness table accessor for Message in Proto_Gnss_Time()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_Time()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_Time()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Time and conformance Proto_Gnss_Time, type metadata accessor for Proto_Gnss_Time, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Time);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_Fix()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
}

uint64_t base witness table accessor for Message in Proto_Gnss_Fix()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_Fix()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_Fix()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_TimeTransferData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
}

uint64_t base witness table accessor for Message in Proto_Gnss_TimeTransferData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_TimeTransferData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_TimeTransferData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferData and conformance Proto_Gnss_TimeTransferData, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_TimeTransferDataExtend()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t base witness table accessor for Message in Proto_Gnss_TimeTransferDataExtend()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_TimeTransferDataExtend()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_TimeTransferDataExtend()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_RawPressureSample()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t base witness table accessor for Message in Proto_Gnss_RawPressureSample()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_RawPressureSample()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_RawPressureSample()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_SensorSample3Axis()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t base witness table accessor for Message in Proto_Gnss_SensorSample3Axis()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_SensorSample3Axis()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_SensorSample3Axis()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_SvId()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
}

uint64_t base witness table accessor for Message in Proto_Gnss_SvId()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_SvId()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_SvId()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_PwrMeasurement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
}

uint64_t base witness table accessor for Message in Proto_Gnss_PwrMeasurement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_PwrMeasurement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_PwrMeasurement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_DecodedRti()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
}

uint64_t base witness table accessor for Message in Proto_Gnss_DecodedRti()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_DecodedRti()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_DecodedRti()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gnss_DecodedExtendedEphemeris()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t base witness table accessor for Message in Proto_Gnss_DecodedExtendedEphemeris()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t base witness table accessor for Hashable in Proto_Gnss_DecodedExtendedEphemeris()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t base witness table accessor for Equatable in Proto_Gnss_DecodedExtendedEphemeris()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
}

ValueMetadata *type metadata accessor for Proto_Gnss_Result()
{
  return &type metadata for Proto_Gnss_Result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_GnssContent()
{
  return &type metadata for Proto_Gnss_GnssContent;
}

ValueMetadata *type metadata accessor for Proto_Gnss_EstimationTechnology()
{
  return &type metadata for Proto_Gnss_EstimationTechnology;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_TimeQuality(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_235B4CCEC + 4 * byte_235BD9A1C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_235B4CD20 + 4 * byte_235BD9A17[v4]))();
}

uint64_t sub_235B4CD20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CD28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4CD30);
  return result;
}

uint64_t sub_235B4CD3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4CD44);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_235B4CD48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CD50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_TimeQuality()
{
  return &type metadata for Proto_Gnss_TimeQuality;
}

ValueMetadata *type metadata accessor for Proto_Gnss_PositionAssistType()
{
  return &type metadata for Proto_Gnss_PositionAssistType;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Result(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_235B4CDCC + 4 * byte_235BD9A26[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_235B4CE00 + 4 * byte_235BD9A21[v4]))();
}

uint64_t sub_235B4CE00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CE08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4CE10);
  return result;
}

uint64_t sub_235B4CE1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4CE24);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_235B4CE28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CE30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_MotionActivityContext()
{
  return &type metadata for Proto_Gnss_MotionActivityContext;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_EstimationTechnology(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_235B4CE98 + 4 * byte_235BD9A30[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_235B4CECC + 4 * byte_235BD9A2B[v4]))();
}

uint64_t sub_235B4CECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4CEDCLL);
  return result;
}

uint64_t sub_235B4CEE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4CEF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_235B4CEF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CEFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_MovingState()
{
  return &type metadata for Proto_Gnss_MovingState;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_GnssContent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_235B4CF64 + 4 * byte_235BD9A3A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_235B4CF98 + 4 * byte_235BD9A35[v4]))();
}

uint64_t sub_235B4CF98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CFA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4CFA8);
  return result;
}

uint64_t sub_235B4CFB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4CFBCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_235B4CFC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4CFC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Reliability()
{
  return &type metadata for Proto_Gnss_Reliability;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_PositionAssistType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_235B4D030 + 4 * byte_235BD9A44[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_235B4D064 + 4 * byte_235BD9A3F[v4]))();
}

uint64_t sub_235B4D064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4D06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4D074);
  return result;
}

uint64_t sub_235B4D080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4D088);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_235B4D08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4D094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_DeviceMountState()
{
  return &type metadata for Proto_Gnss_DeviceMountState;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_SignalEnvironmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_235B4D0FC + 4 * byte_235BD9A4E[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_235B4D130 + 4 * byte_235BD9A49[v4]))();
}

uint64_t sub_235B4D130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4D138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4D140);
  return result;
}

uint64_t sub_235B4D14C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4D154);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_235B4D158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4D160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_SignalEnvironmentType()
{
  return &type metadata for Proto_Gnss_SignalEnvironmentType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_DeleteGnssDataBitMask()
{
  return &type metadata for Proto_Gnss_DeleteGnssDataBitMask;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Position(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    v18[8] = v19[8];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = a3[11];
    v27 = a3[12];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = (char *)a1 + v27;
    v31 = (char *)a2 + v27;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = a3[13];
    v33 = a3[14];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
    v36 = a3[15];
    v37 = a3[16];
    v38 = (char *)a1 + v36;
    v39 = (char *)a2 + v36;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    *((_BYTE *)a1 + v37) = *((_BYTE *)a2 + v37);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Position(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v35 = a3[15];
  v36 = a3[16];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Position(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v10;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v10;
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v10;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v10;
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = v10;
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v10;
  v32 = a3[13];
  v33 = a1 + v32;
  v34 = a2 + v32;
  LOBYTE(v10) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = v10;
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v35 = a3[15];
  v36 = a1 + v35;
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  *(_BYTE *)(v36 + 8) = *((_BYTE *)v37 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Position(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v35 = a3[15];
  v36 = a3[16];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Position(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  v31 = a3[13];
  v32 = a3[14];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v35 = a3[15];
  v36 = a3[16];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Position()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4D8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 56)) <= 6u)
    v9 = 6;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 56));
  v10 = v9 - 6;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 56)) >= 6u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Position()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4D97C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 56)) = a2 + 6;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Position()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_Velocity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v24 = *(_QWORD *)v23;
    v22[8] = v23[8];
    *(_QWORD *)v22 = v24;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    v25[8] = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Velocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (uint64_t *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Velocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v30;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Velocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (uint64_t *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Velocity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (uint64_t *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Velocity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Velocity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_Velocity()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_Time(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = a3[9];
    v18 = a3[10];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    v21 = (char *)a1 + v18;
    v22 = (char *)a2 + v18;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = a3[11];
    v24 = a3[12];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    v27 = (char *)a1 + v24;
    v28 = (char *)a2 + v24;
    v29 = *(_QWORD *)v28;
    v27[8] = v28[8];
    *(_QWORD *)v27 = v29;
    v30 = a3[13];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v32[8];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_Time(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[11];
  v23 = a3[12];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a1 + v23;
  v27 = (uint64_t *)(a2 + v23);
  v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_Time(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LODWORD(v10) = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = v10;
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v10;
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v10;
  v23 = a3[11];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v10;
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = v10;
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_Time(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[11];
  v23 = a3[12];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a1 + v23;
  v27 = (uint64_t *)(a2 + v23);
  v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_Time(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[11];
  v23 = a3[12];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a1 + v23;
  v27 = (uint64_t *)(a2 + v23);
  v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Time()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4E620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Time()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4E6C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_Time()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_Fix()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_Fix()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *initializeBufferWithCopyOfBuffer for Proto_Gnss_TimeTransferData(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for Proto_Gnss_Time(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      v16 = v12[5];
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      v19 = v12[6];
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v10[v12[7]] = v11[v12[7]];
      v22 = v12[8];
      v23 = &v10[v22];
      v24 = &v11[v22];
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      v25 = v12[9];
      v26 = &v10[v25];
      v27 = &v11[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      v28 = v12[10];
      v29 = &v10[v28];
      v30 = &v11[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v30[8];
      v31 = v12[11];
      v32 = &v10[v31];
      v33 = &v11[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v34 = v12[12];
      v35 = &v10[v34];
      v36 = &v11[v34];
      v35[8] = v36[8];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v37 = v12[13];
      v38 = &v10[v37];
      v39 = &v11[v37];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v38[8] = v39[8];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    v40 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    v41 = &a1[v40];
    v42 = &a2[v40];
    v41[4] = v42[4];
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v43 = a3[9];
    v44 = a3[10];
    v45 = &a1[v43];
    v46 = &a2[v43];
    v45[8] = v46[8];
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v47 = &a1[v44];
    v48 = &a2[v44];
    v47[8] = v48[8];
    *(_QWORD *)v47 = *(_QWORD *)v48;
  }
  return a1;
}

uint64_t destroy for Proto_Gnss_TimeTransferData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Proto_Gnss_Time(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  return result;
}

uint64_t initializeWithCopy for Proto_Gnss_TimeTransferData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v9[v11[7]] = v10[v11[7]];
    v20 = v11[8];
    v21 = &v9[v20];
    v22 = &v10[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = v11[9];
    v24 = &v9[v23];
    v25 = &v10[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v11[10];
    v27 = &v9[v26];
    v28 = &v10[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v11[11];
    v30 = &v9[v29];
    v31 = &v10[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v11[12];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v33[8] = v34[8];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v35 = v11[13];
    v36 = &v9[v35];
    v37 = &v10[v35];
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v38 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)v39 = *(_DWORD *)v40;
  v41 = a3[9];
  v42 = a3[10];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = a1 + v42;
  v46 = a2 + v42;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_TimeTransferData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v81 = a3;
  v9 = a3[6];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v80 = *((_QWORD *)v12 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v80 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v55 = v12[5];
      v56 = &v10[v55];
      v57 = &v11[v55];
      v58 = *(_QWORD *)v57;
      v56[8] = v57[8];
      *(_QWORD *)v56 = v58;
      v59 = v12[6];
      v60 = &v10[v59];
      v61 = &v11[v59];
      LOBYTE(v58) = v61[4];
      *(_DWORD *)v60 = *(_DWORD *)v61;
      v60[4] = v58;
      v10[v12[7]] = v11[v12[7]];
      v62 = v12[8];
      v63 = &v10[v62];
      v64 = &v11[v62];
      LODWORD(v58) = *(_DWORD *)v64;
      v63[4] = v64[4];
      *(_DWORD *)v63 = v58;
      v65 = v12[9];
      v66 = &v10[v65];
      v67 = &v11[v65];
      LOBYTE(v58) = v67[8];
      *(_QWORD *)v66 = *(_QWORD *)v67;
      v66[8] = v58;
      v68 = v12[10];
      v69 = &v10[v68];
      v70 = &v11[v68];
      LOBYTE(v58) = v70[8];
      *(_QWORD *)v69 = *(_QWORD *)v70;
      v69[8] = v58;
      v71 = v12[11];
      v72 = &v10[v71];
      v73 = &v11[v71];
      LOBYTE(v58) = v73[8];
      *(_QWORD *)v72 = *(_QWORD *)v73;
      v72[8] = v58;
      v74 = v12[12];
      v75 = &v10[v74];
      v76 = &v11[v74];
      LOBYTE(v58) = v76[8];
      *(_QWORD *)v75 = *(_QWORD *)v76;
      v75[8] = v58;
      v77 = v12[13];
      v78 = &v10[v77];
      v79 = &v11[v77];
      LOBYTE(v58) = v79[8];
      *(_QWORD *)v78 = *(_QWORD *)v79;
      v78[8] = v58;
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, type metadata accessor for Proto_Gnss_Time);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v11, v6);
  v16 = v12[5];
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  v20 = v12[6];
  v21 = &v10[v20];
  v22 = &v11[v20];
  LOBYTE(v19) = v22[4];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v19;
  v10[v12[7]] = v11[v12[7]];
  v23 = v12[8];
  v24 = &v10[v23];
  v25 = &v11[v23];
  LODWORD(v19) = *(_DWORD *)v25;
  v24[4] = v25[4];
  *(_DWORD *)v24 = v19;
  v26 = v12[9];
  v27 = &v10[v26];
  v28 = &v11[v26];
  LOBYTE(v19) = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v19;
  v29 = v12[10];
  v30 = &v10[v29];
  v31 = &v11[v29];
  LOBYTE(v19) = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v19;
  v32 = v12[11];
  v33 = &v10[v32];
  v34 = &v11[v32];
  LOBYTE(v19) = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v19;
  v35 = v12[12];
  v36 = &v10[v35];
  v37 = &v11[v35];
  LOBYTE(v19) = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v19;
  v38 = v12[13];
  v39 = &v10[v38];
  v40 = &v11[v38];
  LOBYTE(v19) = v40[8];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v19;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v80 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_BYTE *)(a1 + v81[7]) = *(_BYTE *)(a2 + v81[7]);
  v42 = v81[8];
  v43 = a1 + v42;
  v44 = (int *)(a2 + v42);
  v45 = *v44;
  *(_BYTE *)(v43 + 4) = *((_BYTE *)v44 + 4);
  *(_DWORD *)v43 = v45;
  v46 = v81[9];
  v47 = a1 + v46;
  v48 = (uint64_t *)(a2 + v46);
  v49 = *v48;
  *(_BYTE *)(v47 + 8) = *((_BYTE *)v48 + 8);
  *(_QWORD *)v47 = v49;
  v50 = v81[10];
  v51 = a1 + v50;
  v52 = (uint64_t *)(a2 + v50);
  v53 = *v52;
  *(_BYTE *)(v51 + 8) = *((_BYTE *)v52 + 8);
  *(_QWORD *)v51 = v53;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_TimeTransferData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v9[v11[7]] = v10[v11[7]];
    v20 = v11[8];
    v21 = &v9[v20];
    v22 = &v10[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = v11[9];
    v24 = &v9[v23];
    v25 = &v10[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v11[10];
    v27 = &v9[v26];
    v28 = &v10[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v11[11];
    v30 = &v9[v29];
    v31 = &v10[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v11[12];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v33[8] = v34[8];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v35 = v11[13];
    v36 = &v9[v35];
    v37 = &v10[v35];
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v38 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)v39 = *(_DWORD *)v40;
  v41 = a3[9];
  v42 = a3[10];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = a1 + v42;
  v46 = a2 + v42;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_TimeTransferData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int *v76;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  v76 = a3;
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = (int *)type metadata accessor for Proto_Gnss_Time(0);
  v75 = *((_QWORD *)v12 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v75 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v51 = v12[5];
      v52 = &v10[v51];
      v53 = &v11[v51];
      *(_QWORD *)v52 = *(_QWORD *)v53;
      v52[8] = v53[8];
      v54 = v12[6];
      v55 = &v10[v54];
      v56 = &v11[v54];
      *(_DWORD *)v55 = *(_DWORD *)v56;
      v55[4] = v56[4];
      v10[v12[7]] = v11[v12[7]];
      v57 = v12[8];
      v58 = &v10[v57];
      v59 = &v11[v57];
      *(_DWORD *)v58 = *(_DWORD *)v59;
      v58[4] = v59[4];
      v60 = v12[9];
      v61 = &v10[v60];
      v62 = &v11[v60];
      *(_QWORD *)v61 = *(_QWORD *)v62;
      v61[8] = v62[8];
      v63 = v12[10];
      v64 = &v10[v63];
      v65 = &v11[v63];
      *(_QWORD *)v64 = *(_QWORD *)v65;
      v64[8] = v65[8];
      v66 = v12[11];
      v67 = &v10[v66];
      v68 = &v11[v66];
      *(_QWORD *)v67 = *(_QWORD *)v68;
      v67[8] = v68[8];
      v69 = v12[12];
      v70 = &v10[v69];
      v71 = &v11[v69];
      v70[8] = v71[8];
      *(_QWORD *)v70 = *(_QWORD *)v71;
      v72 = v12[13];
      v73 = &v10[v72];
      v74 = &v11[v72];
      *(_QWORD *)v73 = *(_QWORD *)v74;
      v73[8] = v74[8];
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, type metadata accessor for Proto_Gnss_Time);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v10, v11, v6);
  v16 = v12[5];
  v17 = &v10[v16];
  v18 = &v11[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = v12[6];
  v20 = &v10[v19];
  v21 = &v11[v19];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v10[v12[7]] = v11[v12[7]];
  v22 = v12[8];
  v23 = &v10[v22];
  v24 = &v11[v22];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v24[4];
  v25 = v12[9];
  v26 = &v10[v25];
  v27 = &v11[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = v12[10];
  v29 = &v10[v28];
  v30 = &v11[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = v12[11];
  v32 = &v10[v31];
  v33 = &v11[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  v34 = v12[12];
  v35 = &v10[v34];
  v36 = &v11[v34];
  v35[8] = v36[8];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v37 = v12[13];
  v38 = &v10[v37];
  v39 = &v11[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v39[8];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v75 + 56))(v10, 0, 1, v12);
LABEL_7:
  v41 = v76[8];
  *(_BYTE *)(a1 + v76[7]) = *(_BYTE *)(a2 + v76[7]);
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v44 = v76[9];
  v45 = v76[10];
  v46 = a1 + v44;
  v47 = a2 + v44;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = a1 + v45;
  v49 = a2 + v45;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_TimeTransferData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4F678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unsigned int v11;
  int v12;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 253)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 2)
    v12 = ((v11 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v12 = -2;
  if (v12 < 0)
    v12 = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_TimeTransferData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4F748(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Time?);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Proto_Gnss_TimeTransferData()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Time?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Time);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_TimeTransferDataExtend()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_TimeTransferDataExtend()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_RawPressureSample()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_RawPressureSample()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_RawPressureSample()
{
  return type metadata completion function for Proto_Gnss_RawPressureSample();
}

{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gnss_SensorSample3Axis(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_SensorSample3Axis(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_SensorSample3Axis(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_SensorSample3Axis(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_SensorSample3Axis(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_SensorSample3Axis()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_SensorSample3Axis()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_SensorSample3Axis()
{
  return type metadata completion function for Proto_Gnss_SensorSample3Axis();
}

{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_SvId()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_SvId()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_SvId()
{
  return type metadata completion function for Proto_Gnss_SvId();
}

{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_PwrMeasurement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4FD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36)) <= 2u)
    v9 = 2;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  v10 = v9 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36)) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_PwrMeasurement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B4FDC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 2;
  return result;
}

uint64_t type metadata completion function for Proto_Gnss_PwrMeasurement()
{
  return type metadata completion function for Proto_Gnss_SvId();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_DeleteGnssDataBitMask(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235B4FF18 + 4 * byte_235BD9A58[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235B4FF4C + 4 * byte_235BD9A53[v4]))();
}

uint64_t sub_235B4FF4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4FF54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B4FF5CLL);
  return result;
}

uint64_t sub_235B4FF68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B4FF70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235B4FF74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B4FF7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_PwrMeasurement.PowerLoggingStatus()
{
  return &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_DecodedRti(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_DecodedRti(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_DecodedRti(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_DecodedRti(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_DecodedRti(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_DecodedRti()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_DecodedRti()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_DecodedRti()
{
  return type metadata completion function for Proto_Gnss_RawPressureSample();
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gnss_DecodedExtendedEphemeris(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = a3[7];
    v13 = a3[8];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gnss_DecodedExtendedEphemeris(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t assignWithCopy for Proto_Gnss_DecodedExtendedEphemeris(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gnss_DecodedExtendedEphemeris(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for Proto_Gnss_DecodedExtendedEphemeris(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gnss_DecodedExtendedEphemeris()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_DecodedExtendedEphemeris()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gnss_DecodedExtendedEphemeris()
{
  return type metadata completion function for Proto_Gnss_SensorSample3Axis();
}

uint64_t ObjC metadata update function for Proto_Gnss_Fix._StorageClass()
{
  return type metadata accessor for Proto_Gnss_Fix._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_Fix._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Time?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Time);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Position?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Position);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Velocity?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Velocity);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gnss_TimeTransferDataExtend._StorageClass()
{
  return type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0);
}

void type metadata completion function for Proto_Gnss_TimeTransferDataExtend._StorageClass()
{
  unint64_t v0;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_TimeTransferData?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_TimeTransferData);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.machContTimeNs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 24))
    return 0;
  else
    return *(_QWORD *)(v1 + 16);
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.machContTimeNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = 0;
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass);
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.machContTimeNs.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 16);
  if (*(_BYTE *)(v5 + 24))
    v6 = 0;
  v3[9] = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.machContTimeNs.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.machContTimeNs.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(_QWORD *)(v10 + 16) = v4;
  *(_BYTE *)(v10 + 24) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasMachContTimeNs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 24) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearMachContTimeNs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.mac.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 40))
    return 0;
  else
    return *(_QWORD *)(v1 + 32);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.mac.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 32) = a1;
  *(_BYTE *)(v6 + 40) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.mac.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  if (*(_BYTE *)(v5 + 40))
    v6 = 0;
  v3[9] = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.mac.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.mac.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(_QWORD *)(v10 + 32) = v4;
  *(_BYTE *)(v10 + 40) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasMac.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 40) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearMac()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.rssiDb.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 48))
    return 0;
  else
    return *(unsigned int *)(v1 + 44);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.rssiDb.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 44) = a1;
  *(_BYTE *)(v6 + 48) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.rssiDb.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_DWORD *)(v5 + 44);
  if (*(_BYTE *)(v5 + 48))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.rssiDb.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.rssiDb.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 44) = v4;
  *(_BYTE *)(v10 + 48) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasRssiDb.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 48) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearRssiDb()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_DWORD *)(v4 + 44) = 0;
  *(_BYTE *)(v4 + 48) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.channel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 56))
    return 0;
  else
    return *(unsigned int *)(v1 + 52);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.channel.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 52) = a1;
  *(_BYTE *)(v6 + 56) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.channel.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_DWORD *)(v5 + 52);
  if (*(_BYTE *)(v5 + 56))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.channel.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.channel.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 52) = v4;
  *(_BYTE *)(v10 + 56) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasChannel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 56) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearChannel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_DWORD *)(v4 + 52) = 0;
  *(_BYTE *)(v4 + 56) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.antennaIndex.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 64))
    return 0;
  else
    return *(unsigned int *)(v1 + 60);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.antennaIndex.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 60) = a1;
  *(_BYTE *)(v6 + 64) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.antennaIndex.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_DWORD *)(v5 + 60);
  if (*(_BYTE *)(v5 + 64))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.antennaIndex.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.antennaIndex.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 60) = v4;
  *(_BYTE *)(v10 + 64) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasAntennaIndex.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 64) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearAntennaIndex()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_DWORD *)(v4 + 60) = 0;
  *(_BYTE *)(v4 + 64) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  if (v3 >> 60 == 15)
    v4 = 0;
  else
    v4 = *(_QWORD *)(v1 + 72);
  outlined copy of Data?(v2, v3);
  return v4;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.payload.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v5 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v7);
    *(_QWORD *)(v2 + v5) = v6;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 72);
  v10 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v8 + 72) = a1;
  *(_QWORD *)(v8 + 80) = a2;
  return outlined consume of Data?(v9, v10);
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.payload.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(_QWORD *)(v5 + 80);
  if (v7 >> 60 == 15)
    v8 = 0;
  else
    v8 = *(_QWORD *)(v5 + 72);
  v9 = 0xC000000000000000;
  if (v7 >> 60 != 15)
    v9 = *(_QWORD *)(v5 + 80);
  v3[9] = v8;
  v3[10] = v9;
  outlined copy of Data?(v6, v7);
  return CLP_LogEntry_AONLoc_BtAdvertisement.payload.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.payload.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    outlined copy of Data._Representation(*(_QWORD *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
      v7 = swift_allocObject();
      v8 = swift_retain();
      CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v8);
      *(_QWORD *)(v6 + v5) = v7;
      swift_release();
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(_QWORD *)(v9 + 80);
    *(_QWORD *)(v9 + 72) = v3;
    *(_QWORD *)(v9 + 80) = v4;
    outlined consume of Data?(v10, v11);
    outlined consume of Data._Representation(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = *(int *)(v2 + 96);
      v13 = *(_QWORD *)(v2 + 88);
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
      v14 = swift_allocObject();
      v15 = swift_retain();
      CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v15);
      *(_QWORD *)(v13 + v12) = v14;
      swift_release();
    }
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    v17 = *(_QWORD *)(v16 + 72);
    v18 = *(_QWORD *)(v16 + 80);
    *(_QWORD *)(v16 + 72) = v3;
    *(_QWORD *)(v16 + 80) = v4;
    outlined consume of Data?(v17, v18);
  }
  free((void *)v2);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return *(_QWORD *)(v1 + 80) >> 60 != 15;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearPayload()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(_QWORD *)(v4 + 80);
  *(_OWORD *)(v4 + 72) = xmmword_235BB6C50;
  outlined consume of Data?(v5, v6);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.btType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 88) == 3)
    return 0;
  else
    return *(unsigned __int8 *)(v1 + 88);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.btType.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 88) = a1;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.btType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v5 + 88);
  if (v6 == 3)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.btType.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.btType.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 88);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasBtType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 88) != 3;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearBtType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_BYTE *)(v4 + 88) = 3;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.deviceFlags.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 104))
    return 0;
  else
    return *(_QWORD *)(v1 + 96);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.deviceFlags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 96) = a1;
  *(_BYTE *)(v6 + 104) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.deviceFlags.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 96);
  if (*(_BYTE *)(v5 + 104))
    v6 = 0;
  v3[9] = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.deviceFlags.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.deviceFlags.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(_QWORD *)(v10 + 96) = v4;
  *(_BYTE *)(v10 + 104) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasDeviceFlags.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 104) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearDeviceFlags()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 96) = 0;
  *(_BYTE *)(v4 + 104) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.discoveryFlags.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 120))
    return 0;
  else
    return *(_QWORD *)(v1 + 112);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.discoveryFlags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 112) = a1;
  *(_BYTE *)(v6 + 120) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.discoveryFlags.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 112);
  if (*(_BYTE *)(v5 + 120))
    v6 = 0;
  v3[9] = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.discoveryFlags.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.discoveryFlags.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(_QWORD *)(v10 + 112) = v4;
  *(_BYTE *)(v10 + 120) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasDiscoveryFlags.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 120) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearDiscoveryFlags()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 112) = 0;
  *(_BYTE *)(v4 + 120) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.productID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 128))
    return 0;
  else
    return *(unsigned int *)(v1 + 124);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.productID.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 124) = a1;
  *(_BYTE *)(v6 + 128) = 0;
  return result;
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.productID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_DWORD *)(v5 + 124);
  if (*(_BYTE *)(v5 + 128))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return CLP_LogEntry_AONLoc_BtAdvertisement.productID.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.productID.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 124) = v4;
  *(_BYTE *)(v10 + 128) = 0;
  free((void *)v3);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasProductID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 128) & 1) == 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearProductID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_DWORD *)(v4 + 124) = 0;
  *(_BYTE *)(v4 + 128) = 1;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 144))
    v2 = *(_QWORD *)(v1 + 136);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v7);
    *(_QWORD *)(v2 + v5) = v6;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v8 + 136) = a1;
  *(_QWORD *)(v8 + 144) = a2;
  return swift_bridgeObjectRelease();
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.identifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  if (*(_QWORD *)(v5 + 144))
  {
    v6 = *(_QWORD *)(v5 + 136);
    v7 = *(_QWORD *)(v5 + 144);
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  v3[9] = v6;
  v3[10] = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_AONLoc_BtAdvertisement.identifier.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.identifier.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
      v7 = swift_allocObject();
      v8 = swift_retain();
      CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v8);
      *(_QWORD *)(v6 + v5) = v7;
      swift_release();
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v9 + 136) = v3;
    *(_QWORD *)(v9 + 144) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 88);
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
      v12 = swift_allocObject();
      v13 = swift_retain();
      CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v13);
      *(_QWORD *)(v11 + v10) = v12;
      swift_release();
    }
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v14 + 136) = v3;
    *(_QWORD *)(v14 + 144) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return *(_QWORD *)(v1 + 144) != 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 136) = 0;
  *(_QWORD *)(v4 + 144) = 0;
  swift_bridgeObjectRelease();
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.idsDeviceID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 160))
    v2 = *(_QWORD *)(v1 + 152);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.idsDeviceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v7);
    *(_QWORD *)(v2 + v5) = v6;
    swift_release();
  }
  v8 = *(_QWORD *)(v2 + v5);
  swift_beginAccess();
  *(_QWORD *)(v8 + 152) = a1;
  *(_QWORD *)(v8 + 160) = a2;
  return swift_bridgeObjectRelease();
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.idsDeviceID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  if (*(_QWORD *)(v5 + 160))
  {
    v6 = *(_QWORD *)(v5 + 152);
    v7 = *(_QWORD *)(v5 + 160);
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  v3[9] = v6;
  v3[10] = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_AONLoc_BtAdvertisement.idsDeviceID.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.idsDeviceID.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  v4 = *(_QWORD *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v2 + 96);
      v6 = *(_QWORD *)(v2 + 88);
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
      v7 = swift_allocObject();
      v8 = swift_retain();
      CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v8);
      *(_QWORD *)(v6 + v5) = v7;
      swift_release();
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v9 + 152) = v3;
    *(_QWORD *)(v9 + 160) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v2 + 96);
      v11 = *(_QWORD *)(v2 + 88);
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
      v12 = swift_allocObject();
      v13 = swift_retain();
      CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v13);
      *(_QWORD *)(v11 + v10) = v12;
      swift_release();
    }
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(_QWORD *)(v14 + 152) = v3;
    *(_QWORD *)(v14 + 160) = v4;
  }
  swift_bridgeObjectRelease();
  free((void *)v2);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasIdsDeviceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_beginAccess();
  return *(_QWORD *)(v1 + 160) != 0;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearIdsDeviceID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 152) = 0;
  *(_QWORD *)(v4 + 160) = 0;
  swift_bridgeObjectRelease();
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v7 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  *(_BYTE *)(a1 + v7[6]) = 2;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  *(_BYTE *)(a1 + v7[10]) = 8;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
}

int *CLP_LogEntry_AONLoc_Type7Info.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  *(_BYTE *)(a1 + result[9]) = 2;
  *(_BYTE *)(a1 + result[10]) = 8;
  return result;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  v13 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of CLP_LogEntry_AONLoc_Type7Info?((uint64_t)v8, (uint64_t)v6);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of CLP_LogEntry_AONLoc_Type7Info?((uint64_t)v6, v14);
  swift_endAccess();
  return swift_release();
}

void (*CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v9[v6[6]] = 2;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    v9[v6[10]] = 8;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  }
  return CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.modify;
}

void CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v3, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
    CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.setter((uint64_t)v3);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v4, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  }
  else
  {
    CLP_LogEntry_AONLoc_BtAdvertisement.type7Info.setter(*(_QWORD *)(*(_QWORD *)a1 + 48));
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL CLP_LogEntry_AONLoc_BtAdvertisement.hasType7Info.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v4, (uint64_t)v3, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v5 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  return v6;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.clearType7Info()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of CLP_LogEntry_AONLoc_Type7Info?((uint64_t)v3, v9);
  swift_endAccess();
  swift_release();
}

ALProtobuf::CLP_LogEntry_AONLoc_BtAdvertisement::BtType_optional __swiftcall CLP_LogEntry_AONLoc_BtAdvertisement.BtType.init(rawValue:)(Swift::Int rawValue)
{
  char v1;
  ALProtobuf::CLP_LogEntry_AONLoc_BtAdvertisement::BtType_optional v2;

  if (rawValue == 7)
    v1 = 1;
  else
    v1 = 3;
  if (rawValue == 18)
    v2.value = ALProtobuf_CLP_LogEntry_AONLoc_BtAdvertisement_BtType_type18;
  else
    v2.value = v1;
  if (rawValue)
    return v2;
  else
    return 0;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.BtType.rawValue.getter(char a1)
{
  return qword_235BDCA00[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType(char *a1, char *a2)
{
  return qword_235BDCA00[*a1] == qword_235BDCA00[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_BtAdvertisement.BtType and conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.init(rawValue:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;
  char v4;

  if (result)
    v2 = 3;
  else
    v2 = 0;
  if (result == 7)
    v3 = 1;
  else
    v3 = v2;
  if (result == 18)
    v4 = 2;
  else
    v4 = v3;
  *a2 = v4;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType()
{
  char *v0;

  return qword_235BDCA00[*v0];
}

uint64_t *protocol witness for RawRepresentable.init(rawValue:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType@<X0>(uint64_t *result@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;
  char v5;

  v2 = *result;
  if (*result)
    v3 = 3;
  else
    v3 = 0;
  if (v2 == 7)
    v4 = 1;
  else
    v4 = v3;
  if (v2 == 18)
    v5 = 2;
  else
    v5 = v4;
  *a2 = v5;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BDCA00[*v1];
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  UnknownStorage.init()();
  v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = static CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.defaultInstance;
  return swift_retain();
}

uint64_t variable initialization expression of CLP_LogEntry_AONLoc_BtAdvertisement._storage()
{
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  return swift_retain();
}

void *static CLP_LogEntry_AONLoc_BtAdvertisement.BtType.allCases.getter()
{
  return &outlined read-only object #0 of static CLP_LogEntry_AONLoc_BtAdvertisement.BtType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType;
}

uint64_t CLP_LogEntry_AONLoc_BtDeviceInfo.cbDeviceBytes.getter()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0) + 20));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  outlined copy of Data?(*v1, v2);
  return v3;
}

uint64_t CLP_LogEntry_AONLoc_BtDeviceInfo.cbDeviceBytes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0) + 20);
  result = outlined consume of Data?(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*CLP_LogEntry_AONLoc_BtDeviceInfo.cbDeviceBytes.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  outlined copy of Data?(v5, v6);
  return Proto_Gnss_Emergency_WlanMeasurementElement.bssid.modify;
}

BOOL CLP_LogEntry_AONLoc_BtDeviceInfo.hasCbDeviceBytes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0) + 20) + 8) >> 60 != 15;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtDeviceInfo.clearCbDeviceBytes()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0) + 20);
  outlined consume of Data?(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_OWORD *)v1 = xmmword_235BB6C50;
}

double CLP_LogEntry_AONLoc_BtDeviceInfo.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;

  UnknownStorage.init()();
  v2 = type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0);
  result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v2 + 20)) = xmmword_235BB6C50;
  return result;
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.eventReceiptTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 24), (uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  CLP_LogEntry_PrivateData_TimeStamp.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.eventReceiptTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 24);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  v4 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*CLP_LogEntry_AONLoc_BtNotification.eventReceiptTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    CLP_LogEntry_PrivateData_TimeStamp.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  }
  return CLP_LogEntry_AONLoc_BtNotification.eventReceiptTime.modify;
}

void CLP_LogEntry_AONLoc_BtNotification.eventReceiptTime.modify(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v4, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v9, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v4, v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  }
  else
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(**(_QWORD **)a1 + v3, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL CLP_LogEntry_AONLoc_BtNotification.hasEventReceiptTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 24), (uint64_t)v3, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v5 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  return v6;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtNotification.clearEventReceiptTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 24);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v2 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.isSimulated.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.isSimulated.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t (*CLP_LogEntry_AONLoc_BtNotification.isSimulated.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_BtNotification.hasIsSimulated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 28)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtNotification.clearIsSimulated()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 28)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.isApOn.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.getter(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.isApOn.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.setter(a1, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t (*CLP_LogEntry_AONLoc_BtNotification.isApOn.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_BtNotification.hasIsApOn.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 32)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtNotification.clearIsApOn()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 32)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.isScreenOn.getter()
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.getter(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.isScreenOn.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.setter(a1, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t (*CLP_LogEntry_AONLoc_BtNotification.isScreenOn.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_BtNotification.hasIsScreenOn.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 36)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_BtNotification.clearIsScreenOn()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 36)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 20);
  v4 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0) + 20);
  v4 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CLP_LogEntry_AONLoc_BtNotification.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  uint64_t result;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
  UnknownStorage.init()();
  v3 = (char *)a1 + v2[6];
  v4 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *((_BYTE *)a1 + v2[7]) = 2;
  *((_BYTE *)a1 + v2[8]) = 2;
  *((_BYTE *)a1 + v2[9]) = 2;
  return result;
}

uint64_t variable initialization expression of CLP_LogEntry_AONLoc_BtNotification._eventReceiptTime@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isSameAccount.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 20)) & 1;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isSameAccount.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*CLP_LogEntry_AONLoc_Type7Info.isSameAccount.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_Type7Info.hasIsSameAccount.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 20)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_Type7Info.clearIsSameAccount()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 20)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isFamily.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 24)) & 1;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isFamily.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*CLP_LogEntry_AONLoc_Type7Info.isFamily.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_Type7Info.hasIsFamily.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 24)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_Type7Info.clearIsFamily()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 24)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isSharedHome.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isSharedHome.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t (*CLP_LogEntry_AONLoc_Type7Info.isSharedHome.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_Type7Info.hasIsSharedHome.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 28)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_Type7Info.clearIsSharedHome()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 28)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isLeftBud.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.getter(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isLeftBud.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.setter(a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t (*CLP_LogEntry_AONLoc_Type7Info.isLeftBud.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_Type7Info.hasIsLeftBud.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 32)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_Type7Info.clearIsLeftBud()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 32)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isCase.getter()
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.getter(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.isCase.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.setter(a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t (*CLP_LogEntry_AONLoc_Type7Info.isCase.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL CLP_LogEntry_AONLoc_Type7Info.hasIsCase.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 36)) != 2;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_Type7Info.clearIsCase()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 36)) = 2;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.placement.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 40));
  if (v1 == 8)
    return 0;
  else
    return v1;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.placement.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*CLP_LogEntry_AONLoc_Type7Info.placement.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 40);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 8)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.type.modify;
}

BOOL CLP_LogEntry_AONLoc_Type7Info.hasPlacement.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 40)) != 8;
}

Swift::Void __swiftcall CLP_LogEntry_AONLoc_Type7Info.clearPlacement()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0) + 40)) = 8;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CLP_LogEntry_AONLoc_Type7Info.Placement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement();
  return Enum.hash(into:)();
}

void *static CLP_LogEntry_AONLoc_Type7Info.Placement.allCases.getter()
{
  return &outlined read-only object #0 of static CLP_LogEntry_AONLoc_Type7Info.Placement.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance CLP_LogEntry_AONLoc_Type7Info.Placement(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static CLP_LogEntry_AONLoc_Type7Info.Placement.allCases.getter;
}

void *CLP_LogEntry_AONLoc_BtAdvertisement.protoMessageName.unsafeMutableAddressor()
{
  return &static CLP_LogEntry_AONLoc_BtAdvertisement.protoMessageName;
}

unint64_t static CLP_LogEntry_AONLoc_BtAdvertisement.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtAdvertisement._protobuf_nameMap);
}

uint64_t static CLP_LogEntry_AONLoc_BtAdvertisement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtAdvertisement._protobuf_nameMap, a1);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  _DWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v36;
  _BYTE *v37;
  _QWORD *v38;
  _QWORD *v39;
  _DWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_DWORD *)(v1 + 44) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  *(_DWORD *)(v1 + 52) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_DWORD *)(v1 + 60) = 0;
  v36 = (_DWORD *)(v1 + 60);
  *(_BYTE *)(v1 + 64) = 1;
  *(_OWORD *)(v1 + 72) = xmmword_235BB6C50;
  *(_BYTE *)(v1 + 88) = 3;
  *(_QWORD *)(v1 + 96) = 0;
  v37 = (_BYTE *)(v1 + 88);
  v38 = (_QWORD *)(v1 + 96);
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 112) = 0;
  v39 = (_QWORD *)(v1 + 112);
  *(_DWORD *)(v1 + 124) = 0;
  v40 = (_DWORD *)(v1 + 124);
  *(_BYTE *)(v1 + 120) = 1;
  *(_BYTE *)(v1 + 128) = 1;
  *(_OWORD *)(v1 + 152) = 0u;
  v42 = (_QWORD *)(v1 + 152);
  v5 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  v43 = v1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  *(_OWORD *)(v1 + 136) = 0u;
  v41 = (_QWORD *)(v1 + 136);
  v6 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v7;
  *(_BYTE *)(v1 + 24) = v8;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v9;
  *(_BYTE *)(v1 + 40) = v10;
  swift_beginAccess();
  LODWORD(v9) = *(_DWORD *)(a1 + 44);
  v11 = *(_BYTE *)(a1 + 48);
  swift_beginAccess();
  *(_DWORD *)(v1 + 44) = v9;
  *(_BYTE *)(v1 + 48) = v11;
  swift_beginAccess();
  LODWORD(v9) = *(_DWORD *)(a1 + 52);
  v12 = *(_BYTE *)(a1 + 56);
  swift_beginAccess();
  *(_DWORD *)(v1 + 52) = v9;
  *(_BYTE *)(v1 + 56) = v12;
  swift_beginAccess();
  LODWORD(v9) = *(_DWORD *)(a1 + 60);
  v13 = *(_BYTE *)(a1 + 64);
  v14 = v36;
  swift_beginAccess();
  *v14 = v9;
  *(_BYTE *)(v1 + 64) = v13;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v17 = *(_QWORD *)(v1 + 72);
  v18 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 72) = v15;
  *(_QWORD *)(v1 + 80) = v16;
  outlined copy of Data?(v15, v16);
  outlined consume of Data?(v17, v18);
  swift_beginAccess();
  LOBYTE(v9) = *(_BYTE *)(a1 + 88);
  v19 = v37;
  swift_beginAccess();
  *v19 = v9;
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 96);
  LOBYTE(v19) = *(_BYTE *)(a1 + 104);
  v21 = v38;
  swift_beginAccess();
  *v21 = v20;
  *(_BYTE *)(v1 + 104) = (_BYTE)v19;
  swift_beginAccess();
  v22 = *(_QWORD *)(a1 + 112);
  LOBYTE(v19) = *(_BYTE *)(a1 + 120);
  v23 = v39;
  swift_beginAccess();
  *v23 = v22;
  *(_BYTE *)(v1 + 120) = (_BYTE)v19;
  swift_beginAccess();
  LODWORD(v22) = *(_DWORD *)(a1 + 124);
  LOBYTE(v19) = *(_BYTE *)(a1 + 128);
  v24 = v40;
  swift_beginAccess();
  *v24 = v22;
  *(_BYTE *)(v1 + 128) = (_BYTE)v19;
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 136);
  v25 = *(_QWORD *)(a1 + 144);
  v27 = v41;
  swift_beginAccess();
  *v27 = v26;
  *(_QWORD *)(v1 + 144) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 152);
  v28 = *(_QWORD *)(a1 + 160);
  v30 = v42;
  swift_beginAccess();
  *v30 = v29;
  *(_QWORD *)(v1 + 160) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  v32 = v31;
  v33 = v44;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v32, v44, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  swift_release();
  v34 = v43;
  swift_beginAccess();
  outlined assign with take of CLP_LogEntry_AONLoc_Type7Info?(v33, v34);
  swift_endAccess();
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t outlined init with take of CLP_LogEntry_AONLoc_Type7Info?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of CLP_LogEntry_AONLoc_Type7Info?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.__deallocating_deinit()
{
  uint64_t v0;

  outlined consume of Data?(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  return swift_deallocClassInstance();
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v2 = v1;
  v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v0 + v3) = v4;
    swift_release();
  }
  swift_retain();
  v6 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v1)
  {
    while ((v7 & 1) == 0)
    {
      switch(v6)
      {
        case 1:
        case 9:
        case 10:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_16;
        case 2:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularFixed64Field(value:)();
          goto LABEL_16;
        case 3:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularSInt32Field(value:)();
          goto LABEL_16;
        case 4:
        case 5:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
          goto LABEL_16;
        case 6:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularBytesField(value:)();
          goto LABEL_16;
        case 8:
          swift_beginAccess();
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_BtAdvertisement.BtType and conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_16;
        case 11:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_16;
        case 12:
        case 13:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularStringField(value:)();
          goto LABEL_16;
        case 31:
          swift_beginAccess();
          type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
LABEL_16:
          v2 = v9;
          swift_endAccess();
          break;
        default:
          break;
      }
      v6 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20));
  swift_retain();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 24) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (v4)
    return swift_release();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 40) & 1) == 0)
    dispatch thunk of Visitor.visitSingularFixed64Field(value:fieldNumber:)();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 48) & 1) == 0)
    dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 56) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 64) & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  swift_beginAccess();
  v11 = *(_QWORD *)(v9 + 80);
  if (v11 >> 60 != 15)
  {
    v12 = *(_QWORD *)(v9 + 72);
    outlined copy of Data._Representation(v12, *(_QWORD *)(v9 + 80));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    outlined consume of Data?(v12, v11);
  }
  swift_beginAccess();
  if (*(_BYTE *)(v9 + 88) != 3)
  {
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_BtAdvertisement.BtType and conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 104) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 120) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  swift_beginAccess();
  if ((*(_BYTE *)(v9 + 128) & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  swift_beginAccess();
  if (*(_QWORD *)(v9 + 144))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(v9 + 160))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    swift_bridgeObjectRelease();
  }
  closure #13 in closure #1 in CLP_LogEntry_AONLoc_BtAdvertisement.traverse<A>(visitor:)(v9, a1, a2, a3);
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t closure #13 in closure #1 in CLP_LogEntry_AONLoc_BtAdvertisement.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

BOOL closure #1 in static CLP_LogEntry_AONLoc_BtAdvertisement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  char v21;
  char v22;
  int v23;
  char v24;
  char v25;
  int v26;
  char v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  _BYTE *v57;
  char v58;
  _BYTE v59[4];
  int v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;

  v63 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  v4 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v62 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CLP_LogEntry_AONLoc_Type7Info?, CLP_LogEntry_AONLoc_Type7Info?));
  MEMORY[0x24BDAC7A8](v6);
  v64 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v59[-v12];
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  v16 = *(_BYTE *)(a2 + 24);
  if ((v15 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (v14 != *(_QWORD *)(a2 + 16))
      v16 = 1;
    if ((v16 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_BYTE *)(a1 + 40);
  swift_beginAccess();
  v19 = *(_BYTE *)(a2 + 40);
  if ((v18 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (v17 != *(_QWORD *)(a2 + 32))
      v19 = 1;
    if ((v19 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v20 = *(_DWORD *)(a1 + 44);
  v21 = *(_BYTE *)(a1 + 48);
  swift_beginAccess();
  v22 = *(_BYTE *)(a2 + 48);
  if ((v21 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 48))
      return 0;
  }
  else
  {
    if (v20 != *(_DWORD *)(a2 + 44))
      v22 = 1;
    if ((v22 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v23 = *(_DWORD *)(a1 + 52);
  v24 = *(_BYTE *)(a1 + 56);
  swift_beginAccess();
  v25 = *(_BYTE *)(a2 + 56);
  if ((v24 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return 0;
  }
  else
  {
    if (v23 != *(_DWORD *)(a2 + 52))
      v25 = 1;
    if ((v25 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v26 = *(_DWORD *)(a1 + 60);
  v27 = *(_BYTE *)(a1 + 64);
  swift_beginAccess();
  v28 = *(_BYTE *)(a2 + 64);
  if ((v27 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 64))
      return 0;
  }
  else
  {
    if (v26 != *(_DWORD *)(a2 + 60))
      v28 = 1;
    if ((v28 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 72);
  v30 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v31 = *(_QWORD *)(a2 + 72);
  v32 = *(_QWORD *)(a2 + 80);
  if (v30 >> 60 == 15)
  {
    if (v32 >> 60 == 15)
    {
      swift_retain();
      swift_retain();
      goto LABEL_37;
    }
LABEL_35:
    v33 = *(_QWORD *)(a2 + 72);
    outlined copy of Data?(v29, v30);
    outlined copy of Data?(v33, v32);
    outlined consume of Data?(v29, v30);
    outlined consume of Data?(v33, v32);
    return 0;
  }
  if (v32 >> 60 == 15)
    goto LABEL_35;
  v34 = v29;
  v61 = v29;
  v35 = v31;
  outlined copy of Data?(v34, v30);
  swift_retain();
  swift_retain();
  outlined copy of Data?(v35, v32);
  specialized static Data.== infix(_:_:)(v61, v30);
  v60 = v36;
  outlined consume of Data?(v35, v32);
  outlined consume of Data?(v61, v30);
  if ((v60 & 1) == 0)
    goto LABEL_73;
LABEL_37:
  swift_beginAccess();
  v37 = *(char *)(a1 + 88);
  swift_beginAccess();
  v38 = *(char *)(a2 + 88);
  if (v37 == 3)
  {
    if ((_DWORD)v38 != 3)
      goto LABEL_73;
  }
  else if ((_DWORD)v38 == 3 || qword_235BDCA00[v37] != qword_235BDCA00[v38])
  {
    goto LABEL_73;
  }
  swift_beginAccess();
  v39 = *(_QWORD *)(a1 + 96);
  v40 = *(_BYTE *)(a1 + 104);
  swift_beginAccess();
  if ((v40 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 104) & 1) == 0)
      goto LABEL_73;
  }
  else if ((*(_BYTE *)(a2 + 104) & 1) != 0 || v39 != *(_QWORD *)(a2 + 96))
  {
    goto LABEL_73;
  }
  swift_beginAccess();
  v41 = *(_QWORD *)(a1 + 112);
  v42 = *(_BYTE *)(a1 + 120);
  swift_beginAccess();
  if ((v42 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 120) & 1) == 0)
      goto LABEL_73;
  }
  else if ((*(_BYTE *)(a2 + 120) & 1) != 0 || v41 != *(_QWORD *)(a2 + 112))
  {
    goto LABEL_73;
  }
  swift_beginAccess();
  v43 = *(_DWORD *)(a1 + 124);
  v44 = *(_BYTE *)(a1 + 128);
  swift_beginAccess();
  if ((v44 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 128) & 1) == 0)
      goto LABEL_73;
  }
  else if ((*(_BYTE *)(a2 + 128) & 1) != 0 || v43 != *(_DWORD *)(a2 + 124))
  {
    goto LABEL_73;
  }
  swift_beginAccess();
  v45 = *(_QWORD *)(a1 + 136);
  v46 = *(_QWORD *)(a1 + 144);
  swift_beginAccess();
  v47 = *(_QWORD *)(a2 + 144);
  if (v46)
  {
    if (!v47
      || (v45 != *(_QWORD *)(a2 + 136) || v46 != v47) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      goto LABEL_73;
    }
  }
  else if (v47)
  {
    goto LABEL_73;
  }
  swift_beginAccess();
  v48 = *(_QWORD *)(a1 + 152);
  v49 = *(_QWORD *)(a1 + 160);
  swift_beginAccess();
  v50 = *(_QWORD *)(a2 + 160);
  if (!v49)
  {
    if (!v50)
      goto LABEL_69;
LABEL_73:
    swift_release();
    swift_release();
    return 0;
  }
  if (!v50 || (v48 != *(_QWORD *)(a2 + 152) || v49 != v50) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    goto LABEL_73;
LABEL_69:
  v51 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v51, (uint64_t)v13, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v52 = a2
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess();
  v53 = v64;
  v54 = (uint64_t)&v64[*(int *)(v6 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, (uint64_t)v64, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v52, v54, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v55((uint64_t)v53, 1, v63) == 1)
  {
    swift_release();
    swift_release();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
    if (v55(v54, 1, v63) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v64, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
      return 1;
    }
LABEL_77:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v64, &demangling cache variable for type metadata for (CLP_LogEntry_AONLoc_Type7Info?, CLP_LogEntry_AONLoc_Type7Info?));
    return 0;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v64, (uint64_t)v11, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  if (v55(v54, 1, v63) == 1)
  {
    swift_release();
    swift_release();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
    goto LABEL_77;
  }
  v57 = v62;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v54, (uint64_t)v62, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  v58 = specialized static CLP_LogEntry_AONLoc_Type7Info.== infix(_:_:)((uint64_t)v11, (uint64_t)v57);
  swift_release();
  swift_release();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v57, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v64, &demangling cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?);
  return (v58 & 1) != 0;
}

Swift::Int CLP_LogEntry_AONLoc_BtAdvertisement.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, &lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t protocol witness for Message.init() in conformance CLP_LogEntry_AONLoc_BtAdvertisement@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  UnknownStorage.init()();
  v4 = *(int *)(a1 + 20);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = static CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass.defaultInstance;
  return swift_retain();
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return CLP_LogEntry_AONLoc_BtAdvertisement.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CLP_LogEntry_AONLoc_BtAdvertisement.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtAdvertisement._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CLP_LogEntry_AONLoc_BtAdvertisement()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
  return Message.hash(into:)();
}

uint64_t CLP_LogEntry_AONLoc_BtAdvertisement.BtType._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtAdvertisement.BtType._protobuf_nameMap);
}

uint64_t static CLP_LogEntry_AONLoc_BtAdvertisement.BtType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtAdvertisement.BtType._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_BtAdvertisement.BtType@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtAdvertisement.BtType._protobuf_nameMap, a1);
}

void *CLP_LogEntry_AONLoc_BtDeviceInfo.protoMessageName.unsafeMutableAddressor()
{
  return &static CLP_LogEntry_AONLoc_BtDeviceInfo.protoMessageName;
}

unint64_t static CLP_LogEntry_AONLoc_BtDeviceInfo.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t CLP_LogEntry_AONLoc_BtDeviceInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtDeviceInfo._protobuf_nameMap);
}

uint64_t static CLP_LogEntry_AONLoc_BtDeviceInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtDeviceInfo._protobuf_nameMap, a1);
}

uint64_t CLP_LogEntry_AONLoc_BtDeviceInfo.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0);
      dispatch thunk of Decoder.decodeSingularBytesField(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t CLP_LogEntry_AONLoc_BtDeviceInfo.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0);
  v3 = v0 + *(int *)(result + 20);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    outlined copy of Data._Representation(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    result = outlined consume of Data?(v5, v4);
  }
  if (!v1)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

Swift::Int CLP_LogEntry_AONLoc_BtDeviceInfo.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, &lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

double protocol witness for Message.init() in conformance CLP_LogEntry_AONLoc_BtDeviceInfo@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  UnknownStorage.init()();
  result = 0.0;
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_235BB6C50;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return CLP_LogEntry_AONLoc_BtDeviceInfo.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return CLP_LogEntry_AONLoc_BtDeviceInfo.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_BtDeviceInfo@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtDeviceInfo._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
  return Message.hash(into:)();
}

void *CLP_LogEntry_AONLoc_BtNotification.protoMessageName.unsafeMutableAddressor()
{
  return &static CLP_LogEntry_AONLoc_BtNotification.protoMessageName;
}

unint64_t static CLP_LogEntry_AONLoc_BtNotification.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t CLP_LogEntry_AONLoc_BtNotification._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtNotification._protobuf_nameMap);
}

uint64_t static CLP_LogEntry_AONLoc_BtNotification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtNotification._protobuf_nameMap, a1);
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
          type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request((unint64_t *)&lazy protocol witness table cache variable for type CLP_LogEntry_PrivateData_TimeStamp and conformance CLP_LogEntry_PrivateData_TimeStamp, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_PrivateData_TimeStamp);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
          goto LABEL_5;
        case 2:
          type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
          v4 = v3;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
          goto LABEL_5;
        case 4:
        case 5:
        case 6:
          type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t CLP_LogEntry_AONLoc_BtNotification.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int *v6;

  result = closure #1 in CLP_LogEntry_AONLoc_BtNotification.traverse<A>(visitor:)(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
    }
    v6 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
    if (*(_BYTE *)(v3 + v6[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v3 + v6[8]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v3 + v6[9]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in CLP_LogEntry_AONLoc_BtNotification.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 24), (uint64_t)v7, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request((unint64_t *)&lazy protocol witness table cache variable for type CLP_LogEntry_PrivateData_TimeStamp and conformance CLP_LogEntry_PrivateData_TimeStamp, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_PrivateData_TimeStamp);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
}

Swift::Int CLP_LogEntry_AONLoc_BtNotification.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, &lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t protocol witness for Message.init() in conformance CLP_LogEntry_AONLoc_BtNotification@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  *a2 = MEMORY[0x24BEE4AF8];
  UnknownStorage.init()();
  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[8];
  *((_BYTE *)a2 + a1[7]) = 2;
  *((_BYTE *)a2 + v7) = 2;
  *((_BYTE *)a2 + a1[9]) = 2;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance CLP_LogEntry_AONLoc_BtNotification()
{
  return CLP_LogEntry_AONLoc_BtNotification.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance CLP_LogEntry_AONLoc_BtNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CLP_LogEntry_AONLoc_BtNotification.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance CLP_LogEntry_AONLoc_BtNotification()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_BtNotification@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_BtNotification._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CLP_LogEntry_AONLoc_BtNotification()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CLP_LogEntry_AONLoc_BtNotification()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
  return Message.hash(into:)();
}

void *CLP_LogEntry_AONLoc_Type7Info.protoMessageName.unsafeMutableAddressor()
{
  return &static CLP_LogEntry_AONLoc_Type7Info.protoMessageName;
}

unint64_t static CLP_LogEntry_AONLoc_Type7Info.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_Type7Info._protobuf_nameMap);
}

uint64_t static CLP_LogEntry_AONLoc_Type7Info._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_Type7Info._protobuf_nameMap, a1);
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        case 6:
          type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  v3 = (int *)result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + v3[6]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[8]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    closure #5 in CLP_LogEntry_AONLoc_Type7Info.traverse<A>(visitor:)(v0);
    closure #6 in CLP_LogEntry_AONLoc_Type7Info.traverse<A>(visitor:)(v0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #5 in CLP_LogEntry_AONLoc_Type7Info.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in CLP_LogEntry_AONLoc_Type7Info.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 8)
  {
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int CLP_LogEntry_AONLoc_Type7Info.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, &lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t protocol witness for Message.init() in conformance CLP_LogEntry_AONLoc_Type7Info@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  *(_BYTE *)(a2 + v5) = 2;
  v6 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v6) = 2;
  v7 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 2;
  *(_BYTE *)(a2 + v7) = 8;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance CLP_LogEntry_AONLoc_Type7Info()
{
  return CLP_LogEntry_AONLoc_Type7Info.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance CLP_LogEntry_AONLoc_Type7Info()
{
  return CLP_LogEntry_AONLoc_Type7Info.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance CLP_LogEntry_AONLoc_Type7Info()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Type7Info@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_Type7Info._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CLP_LogEntry_AONLoc_Type7Info()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CLP_LogEntry_AONLoc_Type7Info()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
  return Message.hash(into:)();
}

uint64_t CLP_LogEntry_AONLoc_Type7Info.Placement._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_Type7Info.Placement._protobuf_nameMap);
}

uint64_t static CLP_LogEntry_AONLoc_Type7Info.Placement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_Type7Info.Placement._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Type7Info.Placement@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static CLP_LogEntry_AONLoc_Type7Info.Placement._protobuf_nameMap, a1);
}

uint64_t specialized static CLP_LogEntry_AONLoc_BtNotification.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;

  v4 = type metadata accessor for UnknownStorage();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v52 - v7;
  v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CLP_LogEntry_PrivateData_TimeStamp?, CLP_LogEntry_PrivateData_TimeStamp?));
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v59 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v52 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v52 - v21;
  v23 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0);
  v24 = *(int *)(v23 + 24);
  v57 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = (int *)v23;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v25, (uint64_t)v22, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v27 = v26[6];
  v58 = a2;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)a2 + v27, (uint64_t)v20, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, (uint64_t)v14, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, v28, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v14, 1, v8) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    if (v29(v28, 1, v8) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
      goto LABEL_8;
    }
LABEL_6:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, &demangling cache variable for type metadata for (CLP_LogEntry_PrivateData_TimeStamp?, CLP_LogEntry_PrivateData_TimeStamp?));
    goto LABEL_25;
  }
  v30 = v59;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, v59, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  if (v29(v28, 1, v8) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v30, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v28, (uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_PrivateData_TimeStamp and conformance CLP_LogEntry_PrivateData_TimeStamp, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_PrivateData_TimeStamp);
  v31 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v30, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v14, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
  if ((v31 & 1) == 0)
    goto LABEL_25;
LABEL_8:
  v32 = v57;
  v33 = v58;
  if ((specialized static Array<A>.== infix(_:_:)(*v57, *v58) & 1) == 0)
    goto LABEL_25;
  v34 = v26[7];
  v35 = *((unsigned __int8 *)v32 + v34);
  v36 = *((unsigned __int8 *)v33 + v34);
  if (v35 == 2)
  {
    if (v36 != 2)
      goto LABEL_25;
  }
  else if (v36 == 2 || ((((v36 & 1) == 0) ^ v35) & 1) == 0)
  {
    goto LABEL_25;
  }
  v37 = v26[8];
  v38 = *((unsigned __int8 *)v32 + v37);
  v39 = *((unsigned __int8 *)v33 + v37);
  if (v38 == 2)
  {
    if (v39 != 2)
      goto LABEL_25;
  }
  else if (v39 == 2 || ((((v39 & 1) == 0) ^ v38) & 1) == 0)
  {
    goto LABEL_25;
  }
  v40 = v26[9];
  v41 = *((unsigned __int8 *)v32 + v40);
  v42 = *((unsigned __int8 *)v33 + v40);
  if (v41 != 2)
  {
    if (v42 != 2 && ((((v42 & 1) == 0) ^ v41) & 1) != 0)
      goto LABEL_24;
LABEL_25:
    v49 = 0;
    return v49 & 1;
  }
  if (v42 != 2)
    goto LABEL_25;
LABEL_24:
  v43 = (char *)v32 + v26[5];
  v45 = v55;
  v44 = v56;
  v46 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v47 = v53;
  v46(v53, v43, v56);
  v48 = v54;
  v46(v54, (char *)v33 + v26[5], v44);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  v50 = *(void (**)(char *, uint64_t))(v45 + 8);
  v50(v48, v44);
  v50(v47, v44);
  return v49 & 1;
}

uint64_t specialized static CLP_LogEntry_AONLoc_BtDeviceInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  char v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[12];
  int v23;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v22[-v9];
  v11 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15)
      goto LABEL_7;
    goto LABEL_5;
  }
  if (v16 >> 60 == 15)
  {
LABEL_5:
    outlined copy of Data?(v12, v13);
    outlined copy of Data?(v15, v16);
    outlined consume of Data?(v12, v13);
    outlined consume of Data?(v15, v16);
LABEL_8:
    v19 = 0;
    return v19 & 1;
  }
  outlined copy of Data?(v12, v13);
  outlined copy of Data?(v15, v16);
  specialized static Data.== infix(_:_:)(v12, v13);
  v23 = v17;
  outlined consume of Data?(v15, v16);
  outlined consume of Data?(v12, v13);
  if ((v23 & 1) == 0)
    goto LABEL_8;
LABEL_7:
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  v20 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v20(v10, v4);
  return v19 & 1;
}

uint64_t specialized static CLP_LogEntry_AONLoc_Type7Info.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  char v30;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v34;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - v9;
  v11 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_28;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_28;
  }
  v15 = v11[6];
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
      goto LABEL_28;
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_28;
  }
  v18 = v11[7];
  v19 = *(unsigned __int8 *)(a1 + v18);
  v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2)
      goto LABEL_28;
  }
  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_28;
  }
  v21 = v11[8];
  v22 = *(unsigned __int8 *)(a1 + v21);
  v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 != 2)
      goto LABEL_28;
  }
  else if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
  {
    goto LABEL_28;
  }
  v24 = v11[9];
  v25 = *(unsigned __int8 *)(a1 + v24);
  v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2)
      goto LABEL_28;
  }
  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_28;
  }
  v27 = v11[10];
  v28 = *(unsigned __int8 *)(a1 + v27);
  v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 8)
  {
    if (v29 != 8)
    {
LABEL_28:
      v30 = 0;
      return v30 & 1;
    }
LABEL_32:
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v32(v10, a1, v4);
    v32(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v30 = dispatch thunk of static Equatable.== infix(_:_:)();
    v33 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33(v8, v4);
    v33(v10, v4);
    return v30 & 1;
  }
  v30 = 0;
  if (v29 != 8 && v28 == v29)
    goto LABEL_32;
  return v30 & 1;
}

uint64_t specialized static CLP_LogEntry_AONLoc_BtAdvertisement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(),
        swift_retain(),
        v14 = closure #1 in static CLP_LogEntry_AONLoc_BtAdvertisement.== infix(_:_:)(v12, v13),
        swift_release(),
        swift_release(),
        v14))
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = dispatch thunk of static Equatable.== infix(_:_:)();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in CLP_LogEntry_AONLoc_BtAdvertisement.BtType()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [CLP_LogEntry_AONLoc_BtAdvertisement.BtType] and conformance [A], &demangling cache variable for type metadata for [CLP_LogEntry_AONLoc_BtAdvertisement.BtType]);
}

unint64_t lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement;
  if (!lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info.Placement, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement;
  if (!lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info.Placement, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement;
  if (!lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info.Placement, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement;
  if (!lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info.Placement, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info.Placement and conformance CLP_LogEntry_AONLoc_Type7Info.Placement);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in CLP_LogEntry_AONLoc_Type7Info.Placement()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [CLP_LogEntry_AONLoc_Type7Info.Placement] and conformance [A], &demangling cache variable for type metadata for [CLP_LogEntry_AONLoc_Type7Info.Placement]);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t base witness table accessor for Message in CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t base witness table accessor for Hashable in CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t base witness table accessor for Equatable in CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtAdvertisement and conformance CLP_LogEntry_AONLoc_BtAdvertisement, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

uint64_t base witness table accessor for Message in CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

uint64_t base witness table accessor for Hashable in CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

uint64_t base witness table accessor for Equatable in CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtDeviceInfo and conformance CLP_LogEntry_AONLoc_BtDeviceInfo, type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in CLP_LogEntry_AONLoc_BtNotification()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t base witness table accessor for Message in CLP_LogEntry_AONLoc_BtNotification()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t base witness table accessor for Hashable in CLP_LogEntry_AONLoc_BtNotification()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t base witness table accessor for Equatable in CLP_LogEntry_AONLoc_BtNotification()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_BtNotification and conformance CLP_LogEntry_AONLoc_BtNotification, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in CLP_LogEntry_AONLoc_Type7Info()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t base witness table accessor for Message in CLP_LogEntry_AONLoc_Type7Info()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t base witness table accessor for Hashable in CLP_LogEntry_AONLoc_Type7Info()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t base witness table accessor for Equatable in CLP_LogEntry_AONLoc_Type7Info()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_AONLoc_Type7Info and conformance CLP_LogEntry_AONLoc_Type7Info, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B59424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtAdvertisement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B594AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtAdvertisement.BtType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235B59570 + 4 * byte_235BDBFE0[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235B595A4 + 4 * byte_235BDBFDB[v4]))();
}

uint64_t sub_235B595A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B595AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B595B4);
  return result;
}

uint64_t sub_235B595C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B595C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235B595CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B595D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement.BtType()
{
  return &type metadata for CLP_LogEntry_AONLoc_BtAdvertisement.BtType;
}

uint64_t *initializeBufferWithCopyOfBuffer for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      outlined copy of Data._Representation(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
  }
  return a1;
}

uint64_t initializeWithCopy for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    outlined copy of Data._Representation(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      v12 = *v9;
      outlined copy of Data._Representation(v12, v10);
      v13 = *v8;
      v14 = v8[1];
      *v8 = v12;
      v8[1] = v10;
      outlined consume of Data._Representation(v13, v14);
      return a1;
    }
    outlined destroy of Data((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  v11 = *v9;
  outlined copy of Data._Representation(v11, v10);
  *v8 = v11;
  v8[1] = v10;
  return a1;
}

uint64_t initializeWithTake for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      v12 = *v8;
      *v8 = *v9;
      v8[1] = v11;
      outlined consume of Data._Representation(v12, v10);
      return a1;
    }
    outlined destroy of Data((uint64_t)v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B5990C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B599A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t type metadata completion function for CLP_LogEntry_AONLoc_BtDeviceInfo()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

_QWORD *initializeBufferWithCopyOfBuffer for CLP_LogEntry_AONLoc_BtNotification(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    v17 = *((_QWORD *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      v19 = v16[5];
      v20 = &v14[v19];
      v21 = &v15[v19];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      v22 = v16[6];
      v23 = &v14[v22];
      v24 = &v15[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v16[7];
      v26 = &v14[v25];
      v27 = &v15[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
    v28 = a3[8];
    *((_BYTE *)v7 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v7 + v28) = *((_BYTE *)a2 + v28);
    *((_BYTE *)v7 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return v7;
}

_QWORD *initializeWithCopy for CLP_LogEntry_AONLoc_BtNotification(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v17 = v14[5];
    v18 = &v12[v17];
    v19 = &v13[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v14[6];
    v21 = &v12[v20];
    v22 = &v13[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v14[7];
    v24 = &v12[v23];
    v25 = &v13[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  v26 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithCopy for CLP_LogEntry_AONLoc_BtNotification(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  char v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char v44;
  uint64_t v45;
  int *v46;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v46 = a3;
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v45 = *((_QWORD *)v15 - 1);
  v16 = *(uint64_t (**)(char *, uint64_t, int *))(v45 + 48);
  v17 = v16(v13, 1, v15);
  v18 = v16(v14, 1, v15);
  if (!v17)
  {
    if (!v18)
    {
      v11(v13, v14, v9);
      v33 = v15[5];
      v34 = &v13[v33];
      v35 = &v14[v33];
      v36 = v35[8];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v34[8] = v36;
      v37 = v15[6];
      v38 = &v13[v37];
      v39 = &v14[v37];
      v40 = v39[8];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v38[8] = v40;
      v41 = v15[7];
      v42 = &v13[v41];
      v43 = &v14[v41];
      v44 = v43[8];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      v42[8] = v44;
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  v19 = v15[5];
  v20 = &v13[v19];
  v21 = &v14[v19];
  v22 = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v22;
  v23 = v15[6];
  v24 = &v13[v23];
  v25 = &v14[v23];
  v26 = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v26;
  v27 = v15[7];
  v28 = &v13[v27];
  v29 = &v14[v27];
  v30 = v29[8];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v30;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v45 + 56))(v13, 0, 1, v15);
LABEL_7:
  *((_BYTE *)a1 + v46[7]) = *((_BYTE *)a2 + v46[7]);
  *((_BYTE *)a1 + v46[8]) = *((_BYTE *)a2 + v46[8]);
  *((_BYTE *)a1 + v46[9]) = *((_BYTE *)a2 + v46[9]);
  return a1;
}

_QWORD *initializeWithTake for CLP_LogEntry_AONLoc_BtNotification(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v17 = v14[5];
    v18 = &v12[v17];
    v19 = &v13[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v14[6];
    v21 = &v12[v20];
    v22 = &v13[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v14[7];
    v24 = &v12[v23];
    v25 = &v13[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  v26 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for CLP_LogEntry_AONLoc_BtNotification(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int *v41;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v41 = a3;
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  v40 = *((_QWORD *)v15 - 1);
  v16 = *(uint64_t (**)(char *, uint64_t, int *))(v40 + 48);
  v17 = v16(v13, 1, v15);
  v18 = v16(v14, 1, v15);
  if (!v17)
  {
    if (!v18)
    {
      v11(v13, v14, v9);
      v31 = v15[5];
      v32 = &v13[v31];
      v33 = &v14[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v34 = v15[6];
      v35 = &v13[v34];
      v36 = &v14[v34];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v35[8] = v36[8];
      v37 = v15[7];
      v38 = &v13[v37];
      v39 = &v14[v37];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v38[8] = v39[8];
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  v19 = v15[5];
  v20 = &v13[v19];
  v21 = &v14[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = v15[6];
  v23 = &v13[v22];
  v24 = &v14[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = v15[7];
  v26 = &v13[v25];
  v27 = &v14[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56))(v13, 0, 1, v15);
LABEL_7:
  v29 = v41[8];
  *((_BYTE *)a1 + v41[7]) = *((_BYTE *)a2 + v41[7]);
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  *((_BYTE *)a1 + v41[9]) = *((_BYTE *)a2 + v41[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtNotification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B5A338(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtNotification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_235B5A3E8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void type metadata completion function for CLP_LogEntry_AONLoc_BtNotification()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for CLP_LogEntry_PrivateData_TimeStamp?, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for CLP_LogEntry_AONLoc_Type7Info(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v10 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  }
  return a1;
}

uint64_t initializeWithCopy for CLP_LogEntry_AONLoc_Type7Info(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t assignWithCopy for CLP_LogEntry_AONLoc_Type7Info(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for CLP_LogEntry_AONLoc_Type7Info(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for CLP_LogEntry_AONLoc_Type7Info(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_AONLoc_Type7Info()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B5A838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_Type7Info()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235B5A8DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t type metadata completion function for CLP_LogEntry_AONLoc_Type7Info()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_Type7Info.Placement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_235B5AA24 + 4 * byte_235BDBFEA[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_235B5AA58 + 4 * byte_235BDBFE5[v4]))();
}

uint64_t sub_235B5AA58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B5AA60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235B5AA68);
  return result;
}

uint64_t sub_235B5AA74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235B5AA7CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_235B5AA80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235B5AA88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_AONLoc_Type7Info.Placement()
{
  return &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement;
}

uint64_t ObjC metadata update function for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass()
{
  return type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0);
}

void type metadata completion function for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass()
{
  unint64_t v0;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for CLP_LogEntry_AONLoc_Type7Info?, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t Proto_Gpsd_SuplInitDecodeResult.rawValue.getter(char a1)
{
  return qword_235BE1A60[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gpsd_SuplInitDecodeResult(char *a1, char *a2)
{
  return qword_235BE1A60[*a1] == qword_235BE1A60[*a2];
}

BOOL specialized == infix<A>(_:_:)(char a1, char a2)
{
  return qword_235BE1AE8[a1] == qword_235BE1AE8[a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SuplInitDecodeResult()
{
  lazy protocol witness table accessor for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gpsd_SuplInitDecodeResult()
{
  char *v0;

  return qword_235BE1A60[*v0];
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gpsd_SuplInitDecodeResult(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BE1A60[*v1];
}

void *static Proto_Gpsd_SuplInitDecodeResult.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gpsd_SuplInitDecodeResult.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_SuplInitDecodeResult(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_SuplInitDecodeResult;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_CompressionType()
{
  lazy protocol witness table accessor for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType();
  return Enum.hash(into:)();
}

void *static Proto_Gpsd_CompressionType.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gpsd_CompressionType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_CompressionType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_CompressionType;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfoType()
{
  lazy protocol witness table accessor for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType();
  return Enum.hash(into:)();
}

void *static Proto_Gpsd_LtlInfoType.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gpsd_LtlInfoType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_LtlInfoType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_LtlInfoType;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_CntinStatus()
{
  lazy protocol witness table accessor for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus();
  return Enum.hash(into:)();
}

void *static Proto_Gpsd_CntinStatus.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gpsd_CntinStatus.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_CntinStatus(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gpsd_CntinStatus.allCases.getter;
}

uint64_t Proto_Gpsd_Request.machContinuousTimeNs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 24))
    return 0;
  else
    return *(_QWORD *)(v1 + 16);
}

uint64_t Proto_Gpsd_Request.machContinuousTimeNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = 0;
  return result;
}

void (*Proto_Gpsd_Request.machContinuousTimeNs.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 16);
  if (*(_BYTE *)(v5 + 24))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gpsd_Request.machContinuousTimeNs.modify;
}

void Proto_Gpsd_Request.machContinuousTimeNs.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(_QWORD *)(v10 + 16) = v4;
  *(_BYTE *)(v10 + 24) = 0;
  free((void *)v3);
}

BOOL Proto_Gpsd_Request.hasMachContinuousTimeNs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 24) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearMachContinuousTimeNs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 1;
}

uint64_t Proto_Gpsd_Request.transactionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32))
    return 0;
  else
    return *(unsigned int *)(v1 + 28);
}

uint64_t Proto_Gpsd_Request.transactionID.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 28) = a1;
  *(_BYTE *)(v6 + 32) = 0;
  return result;
}

void (*Proto_Gpsd_Request.transactionID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_DWORD *)(v5 + 28);
  if (*(_BYTE *)(v5 + 32))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_Request.transactionID.modify;
}

void Proto_Gpsd_Request.transactionID.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 28) = v4;
  *(_BYTE *)(v10 + 32) = 0;
  free((void *)v3);
}

BOOL Proto_Gpsd_Request.hasTransactionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 32) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearTransactionID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_DWORD *)(v4 + 28) = 0;
  *(_BYTE *)(v4 + 32) = 1;
}

uint64_t Proto_Gpsd_Request.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 33) == 61)
    return 0;
  else
    return *(unsigned __int8 *)(v1 + 33);
}

uint64_t Proto_Gpsd_Request.type.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 33) = a1;
  return result;
}

void (*Proto_Gpsd_Request.type.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v5 + 33);
  if (v6 == 61)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_Request.type.modify;
}

void Proto_Gpsd_Request.type.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 33);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL Proto_Gpsd_Request.hasType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 33) != 61;
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_BYTE *)(v4 + 33) = 61;
}

uint64_t Proto_Gpsd_Request.injectAssistancePosition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  v9 = type metadata accessor for Proto_Gnss_Position(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_BYTE *)(a1 + v7[6]) = 4;
  *(_BYTE *)(a1 + v7[7]) = 2;
  v10 = a1 + v7[8];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  v3 = a1 + v2[5];
  v4 = type metadata accessor for Proto_Gnss_Position(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_BYTE *)(a1 + v2[6]) = 4;
  *(_BYTE *)(a1 + v2[7]) = 2;
  v6 = a1 + v2[8];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  return result;
}

uint64_t Proto_Gpsd_Request.injectAssistancePosition.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  v13 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.injectAssistancePosition.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    v12 = type metadata accessor for Proto_Gnss_Position(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v9[v6[6]] = 4;
    v9[v6[7]] = 2;
    v13 = &v9[v6[8]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  }
  return Proto_Gpsd_Request.injectAssistancePosition.modify;
}

void Proto_Gpsd_Request.injectAssistancePosition.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.injectAssistancePosition.setter, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

BOOL Proto_Gpsd_Request.hasInjectAssistancePosition.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearInjectAssistancePosition()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.injectAssistanceTime.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.injectAssistanceTime.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, a1);
}

int *Proto_Gpsd_InjectAssistanceTime.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_Wgs84Ecef.init()(type metadata accessor for Proto_Gpsd_InjectAssistanceTime, a1);
}

uint64_t Proto_Gpsd_Request.injectAssistanceTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  v13 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.injectAssistanceTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  }
  return Proto_Gpsd_Request.injectAssistanceTime.modify;
}

void Proto_Gpsd_Request.injectAssistanceTime.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.injectAssistanceTime.setter, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

BOOL Proto_Gpsd_Request.hasInjectAssistanceTime.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearInjectAssistanceTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistancePressure.getter@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistancePressure.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, a1);
}

uint64_t Proto_Gpsd_SetAssistancePressure.init()@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_SetAssistancePressure.init()((void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistancePressure, a1);
}

uint64_t Proto_Gpsd_Request.setAssistancePressure.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistancePressure.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  }
  return Proto_Gpsd_Request.setAssistancePressure.modify;
}

void Proto_Gpsd_Request.setAssistancePressure.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistancePressure.setter, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

BOOL Proto_Gpsd_Request.hasSetAssistancePressure.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistancePressure()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceAccel.getter@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistancePressure.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, a1);
}

uint64_t Proto_Gpsd_SetAssistanceAccel.init()@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_SetAssistancePressure.init()((void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistanceAccel, a1);
}

uint64_t Proto_Gpsd_SetAssistancePressure.init()@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = MEMORY[0x24BEE4AF8];
  a1(0);
  return UnknownStorage.init()();
}

uint64_t Proto_Gpsd_Request.setAssistanceAccel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceAccel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  }
  return Proto_Gpsd_Request.setAssistanceAccel.modify;
}

void Proto_Gpsd_Request.setAssistanceAccel.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceAccel.setter, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceAccel.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceAccel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceGyro.getter@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistancePressure.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, a1);
}

uint64_t Proto_Gpsd_SetAssistanceGyro.init()@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_SetAssistancePressure.init()((void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistanceGyro, a1);
}

uint64_t Proto_Gpsd_Request.setAssistanceGyro.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceGyro.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  }
  return Proto_Gpsd_Request.setAssistanceGyro.modify;
}

void Proto_Gpsd_Request.setAssistanceGyro.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceGyro.setter, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceGyro.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceGyro()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceDem.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.injectAssistanceTime.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

int *Proto_Gpsd_SetAssistanceDem.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_Wgs84Ecef.init()(type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

uint64_t Proto_Gpsd_Request.setAssistanceDem.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceDem.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  }
  return Proto_Gpsd_Request.setAssistanceDem.modify;
}

void Proto_Gpsd_Request.setAssistanceDem.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceDem.setter, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceDem.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceDem()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceMapVector.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1 + v7[7];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  *(_BYTE *)(a1 + v7[8]) = 2;
  v11 = a1 + v7[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a1 + v7[10];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1 + v7[11];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a1 + v7[12];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  *(_BYTE *)(a1 + v7[13]) = 2;
  *(_BYTE *)(a1 + v7[14]) = 2;
  *(_BYTE *)(a1 + v7[15]) = 2;
  *(_BYTE *)(a1 + v7[16]) = 2;
  *(_BYTE *)(a1 + v7[17]) = 2;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
}

int *Proto_Gpsd_SetAssistanceMapVector.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = a1 + result[7];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  *(_BYTE *)(a1 + result[8]) = 2;
  v6 = a1 + result[9];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1 + result[10];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1 + result[11];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + result[12];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(a1 + result[13]) = 2;
  *(_BYTE *)(a1 + result[14]) = 2;
  *(_BYTE *)(a1 + result[15]) = 2;
  *(_BYTE *)(a1 + result[16]) = 2;
  *(_BYTE *)(a1 + result[17]) = 2;
  return result;
}

uint64_t Proto_Gpsd_Request.setAssistanceMapVector.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceMapVector.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    v9[v6[8]] = 2;
    v14 = &v9[v6[9]];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    v15 = &v9[v6[10]];
    *(_QWORD *)v15 = 0;
    v15[8] = 1;
    v16 = &v9[v6[11]];
    *(_QWORD *)v16 = 0;
    v16[8] = 1;
    v17 = &v9[v6[12]];
    *(_QWORD *)v17 = 0;
    v17[8] = 1;
    v9[v6[13]] = 2;
    v9[v6[14]] = 2;
    v9[v6[15]] = 2;
    v9[v6[16]] = 2;
    v9[v6[17]] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  }
  return Proto_Gpsd_Request.setAssistanceMapVector.modify;
}

void Proto_Gpsd_Request.setAssistanceMapVector.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceMapVector.setter, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceMapVector.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceMapVector()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceMotionActivityContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a1 + v7[6]) = 10;
  *(_BYTE *)(a1 + v7[7]) = 5;
  *(_BYTE *)(a1 + v7[8]) = 6;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
}

int *Proto_Gpsd_SetAssistanceMotionActivityContext.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + result[6]) = 10;
  *(_BYTE *)(a1 + result[7]) = 5;
  *(_BYTE *)(a1 + result[8]) = 6;
  return result;
}

uint64_t Proto_Gpsd_Request.setAssistanceMotionActivityContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceMotionActivityContext.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v9[v6[6]] = 10;
    v9[v6[7]] = 5;
    v9[v6[8]] = 6;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  }
  return Proto_Gpsd_Request.setAssistanceMotionActivityContext.modify;
}

void Proto_Gpsd_Request.setAssistanceMotionActivityContext.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceMotionActivityContext.setter, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceMotionActivityContext.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceMotionActivityContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceMountState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v7 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  UnknownStorage.init()();
  v8 = a1 + *(int *)(v7 + 20);
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = 4;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
}

uint64_t Proto_Gpsd_SetAssistanceMountState.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  UnknownStorage.init()();
  result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  v3 = a1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 4;
  return result;
}

uint64_t Proto_Gpsd_Request.setAssistanceMountState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceMountState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v9[*(int *)(v6 + 24)] = 4;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  }
  return Proto_Gpsd_Request.setAssistanceMountState.modify;
}

void Proto_Gpsd_Request.setAssistanceMountState.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceMountState.setter, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceMountState.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceMountState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceSignalEnvironment.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistanceSignalEnvironment.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, 8, a1);
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_CplaneConfig.init()(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, 8, a1);
}

uint64_t Proto_Gpsd_Request.setAssistanceSignalEnvironment.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceSignalEnvironment.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 8;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  }
  return Proto_Gpsd_Request.setAssistanceSignalEnvironment.modify;
}

void Proto_Gpsd_Request.setAssistanceSignalEnvironment.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceSignalEnvironment.setter, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceSignalEnvironment.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceSignalEnvironment()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceSpeedConstraint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = a1 + v7[7];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = a1 + v7[8];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
}

int *Proto_Gpsd_SetAssistanceSpeedConstraint.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = a1 + result[7];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = a1 + result[8];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  return result;
}

uint64_t Proto_Gpsd_Request.setAssistanceSpeedConstraint.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceSpeedConstraint.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    v14 = &v9[v6[8]];
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  }
  return Proto_Gpsd_Request.setAssistanceSpeedConstraint.modify;
}

void Proto_Gpsd_Request.setAssistanceSpeedConstraint.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceSpeedConstraint.setter, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceSpeedConstraint.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceSpeedConstraint()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setAssistanceAlongTrackVelocity.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.injectAssistanceTime.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t Proto_Gpsd_Request.injectAssistanceTime.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20)) + *a2;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v11, a1);
  v13 = (int *)a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v11, 1, v13) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, a4, a3);
  UnknownStorage.init()();
  v14 = a4 + v13[5];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = a4 + v13[6];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a4 + v13[7];
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v11, a1);
}

int *Proto_Gpsd_SetAssistanceAlongTrackVelocity.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_Wgs84Ecef.init()(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t Proto_Gpsd_Request.setAssistanceAlongTrackVelocity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  v13 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setAssistanceAlongTrackVelocity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    v13[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  }
  return Proto_Gpsd_Request.setAssistanceAlongTrackVelocity.modify;
}

void Proto_Gpsd_Request.setAssistanceAlongTrackVelocity.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setAssistanceAlongTrackVelocity.setter, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

BOOL Proto_Gpsd_Request.hasSetAssistanceAlongTrackVelocity.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetAssistanceAlongTrackVelocity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.injectAssistanceFile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v7 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  UnknownStorage.init()();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = xmmword_235BB6C50;
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = 3;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
}

double Proto_Gpsd_InjectAssistanceFile.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;

  UnknownStorage.init()();
  v2 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v2 + 20)) = xmmword_235BB6C50;
  *(_BYTE *)(a1 + *(int *)(v2 + 24)) = 3;
  return result;
}

uint64_t Proto_Gpsd_Request.injectAssistanceFile.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  v13 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.injectAssistanceFile.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    *(_OWORD *)&v9[*(int *)(v6 + 20)] = xmmword_235BB6C50;
    v9[*(int *)(v6 + 24)] = 3;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  }
  return Proto_Gpsd_Request.injectAssistanceFile.modify;
}

void Proto_Gpsd_Request.injectAssistanceFile.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.injectAssistanceFile.setter, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

BOOL Proto_Gpsd_Request.hasInjectAssistanceFile.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearInjectAssistanceFile()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.injectRtiFile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v7 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  UnknownStorage.init()();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = xmmword_235BB6C50;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
}

double Proto_Gpsd_InjectRtiFile.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;

  UnknownStorage.init()();
  v2 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v2 + 20)) = xmmword_235BB6C50;
  return result;
}

uint64_t Proto_Gpsd_Request.injectRtiFile.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  v13 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.injectRtiFile.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    *(_OWORD *)&v9[*(int *)(v6 + 20)] = xmmword_235BB6C50;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  }
  return Proto_Gpsd_Request.injectRtiFile.modify;
}

void Proto_Gpsd_Request.injectRtiFile.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.injectRtiFile.setter, type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

BOOL Proto_Gpsd_Request.hasInjectRtiFile.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearInjectRtiFile()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.injectSvidBlocklist.getter@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistancePressure.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, a1);
}

uint64_t Proto_Gpsd_Request.setAssistancePressure.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20)) + *a2;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v11, a1);
  v13 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, (uint64_t)a4, a3);
  *a4 = MEMORY[0x24BEE4AF8];
  UnknownStorage.init()();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v11, a1);
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.init()@<X0>(_QWORD *a1@<X8>)
{
  return Proto_Gpsd_SetAssistancePressure.init()((void (*)(_QWORD))type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, a1);
}

uint64_t Proto_Gpsd_Request.injectSvidBlocklist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  v13 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.injectSvidBlocklist.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  }
  return Proto_Gpsd_Request.injectSvidBlocklist.modify;
}

void Proto_Gpsd_Request.injectSvidBlocklist.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.injectSvidBlocklist.setter, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

BOOL Proto_Gpsd_Request.hasInjectSvidBlocklist.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearInjectSvidBlocklist()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.deleteGnssData.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.deleteGnssData.getter(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, a1);
}

uint64_t Proto_Gpsd_DeleteGnssData.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_DeleteGnssData.init()(type metadata accessor for Proto_Gpsd_DeleteGnssData, a1);
}

uint64_t Proto_Gpsd_Request.deleteGnssData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  v13 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.deleteGnssData.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  }
  return Proto_Gpsd_Request.deleteGnssData.modify;
}

void Proto_Gpsd_Request.deleteGnssData.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.deleteGnssData.setter, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

BOOL Proto_Gpsd_Request.hasDeleteGnssData.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearDeleteGnssData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setPvtmReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  *(_BYTE *)(a1 + v7[6]) = 2;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  *(_BYTE *)(a1 + v7[10]) = 2;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
}

int *Proto_Gpsd_SetPvtmReport.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  *(_BYTE *)(a1 + result[9]) = 2;
  *(_BYTE *)(a1 + result[10]) = 2;
  return result;
}

uint64_t Proto_Gpsd_Request.setPvtmReport.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  v13 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setPvtmReport.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v9[v6[6]] = 2;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    v9[v6[10]] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  }
  return Proto_Gpsd_Request.setPvtmReport.modify;
}

void Proto_Gpsd_Request.setPvtmReport.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setPvtmReport.setter, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

BOOL Proto_Gpsd_Request.hasSetPvtmReport.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetPvtmReport()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setNmeaHandler.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.deleteGnssData.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, a1);
}

uint64_t Proto_Gpsd_Request.deleteGnssData.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20)) + *a2;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v11, a1);
  v13 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, a4, a3);
  UnknownStorage.init()();
  v14 = a4 + *(int *)(v13 + 20);
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v11, a1);
}

uint64_t Proto_Gpsd_SetNmeaHandler.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_DeleteGnssData.init()(type metadata accessor for Proto_Gpsd_SetNmeaHandler, a1);
}

uint64_t Proto_Gpsd_DeleteGnssData.init()@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  UnknownStorage.init()();
  result = a1(0);
  v5 = a2 + *(int *)(result + 20);
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  return result;
}

uint64_t Proto_Gpsd_Request.setNmeaHandler.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  v13 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setNmeaHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  }
  return Proto_Gpsd_Request.setNmeaHandler.modify;
}

void Proto_Gpsd_Request.setNmeaHandler.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setNmeaHandler.setter, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

BOOL Proto_Gpsd_Request.hasSetNmeaHandler.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetNmeaHandler()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setConfigSimulatorMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v7 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = 2;
  v8 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  UnknownStorage.init()();
  result = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  *(_BYTE *)(a1 + *(int *)(result + 20)) = 2;
  v3 = a1 + *(int *)(result + 24);
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  return result;
}

uint64_t Proto_Gpsd_Request.setConfigSimulatorMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  v13 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setConfigSimulatorMode.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    v11 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  }
  return Proto_Gpsd_Request.setConfigSimulatorMode.modify;
}

void Proto_Gpsd_Request.setConfigSimulatorMode.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setConfigSimulatorMode.setter, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

BOOL Proto_Gpsd_Request.hasSetConfigSimulatorMode.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetConfigSimulatorMode()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setConfigEnableGnssConstellations.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.setConfigEnableGnssConstellations.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, a1);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_ClsGpsCellTime.init()(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, a1);
}

uint64_t Proto_Gpsd_Request.setConfigEnableGnssConstellations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  v13 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setConfigEnableGnssConstellations.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  }
  return Proto_Gpsd_Request.setConfigEnableGnssConstellations.modify;
}

void Proto_Gpsd_Request.setConfigEnableGnssConstellations.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setConfigEnableGnssConstellations.setter, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

BOOL Proto_Gpsd_Request.hasSetConfigEnableGnssConstellations.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetConfigEnableGnssConstellations()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setConfigDutyCycling.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistanceSignalEnvironment.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, 2, a1);
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_CplaneConfig.init()(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, 2, a1);
}

uint64_t Proto_Gpsd_Request.setConfigDutyCycling.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  v13 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setConfigDutyCycling.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  }
  return Proto_Gpsd_Request.setConfigDutyCycling.modify;
}

void Proto_Gpsd_Request.setConfigDutyCycling.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setConfigDutyCycling.setter, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

BOOL Proto_Gpsd_Request.hasSetConfigDutyCycling.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetConfigDutyCycling()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.terminationImminent.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.terminationImminent.getter(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, a1);
}

uint64_t Proto_Gpsd_TerminationImminent.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_TerminationImminent.init()(type metadata accessor for Proto_Gpsd_TerminationImminent, a1);
}

uint64_t Proto_Gpsd_Request.terminationImminent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_TerminationImminent);
  v13 = type metadata accessor for Proto_Gpsd_TerminationImminent(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.terminationImminent.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_TerminationImminent(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_TerminationImminent);
  }
  return Proto_Gpsd_Request.terminationImminent.modify;
}

void Proto_Gpsd_Request.terminationImminent.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.terminationImminent.setter, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

BOOL Proto_Gpsd_Request.hasTerminationImminent.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearTerminationImminent()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_TerminationImminent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.exitMessage.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.terminationImminent.getter(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, a1);
}

uint64_t Proto_Gpsd_Request.terminationImminent.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20)) + *a2;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v11, a1);
  v13 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, a4, a3);
  UnknownStorage.init()();
  v14 = (_QWORD *)(a4 + *(int *)(v13 + 20));
  *v14 = 0;
  v14[1] = 0;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v11, a1);
}

uint64_t Proto_Gpsd_ExitMessage.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_TerminationImminent.init()(type metadata accessor for Proto_Gpsd_ExitMessage, a1);
}

uint64_t Proto_Gpsd_TerminationImminent.init()@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;

  UnknownStorage.init()();
  result = a1(0);
  v5 = (_QWORD *)(a2 + *(int *)(result + 20));
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t Proto_Gpsd_Request.exitMessage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_ExitMessage);
  v13 = type metadata accessor for Proto_Gpsd_ExitMessage(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.exitMessage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_ExitMessage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_ExitMessage);
  }
  return Proto_Gpsd_Request.exitMessage.modify;
}

void Proto_Gpsd_Request.exitMessage.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.exitMessage.setter, type metadata accessor for Proto_Gpsd_ExitMessage);
}

BOOL Proto_Gpsd_Request.hasExitMessage.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage, type metadata accessor for Proto_Gpsd_ExitMessage);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearExitMessage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_ExitMessage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.injectLtlInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v7 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_LtlInfo);
  UnknownStorage.init()();
  v8 = *(int *)(v7 + 20);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = static Proto_Gpsd_LtlInfo._StorageClass.defaultInstance;
  swift_retain();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
}

uint64_t Proto_Gpsd_LtlInfo.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_SyncState.init()(type metadata accessor for Proto_Gpsd_LtlInfo, &one-time initialization token for defaultInstance, &static Proto_Gpsd_LtlInfo._StorageClass.defaultInstance, a1);
}

uint64_t Proto_Gpsd_Request.injectLtlInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_LtlInfo);
  v13 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.injectLtlInfo.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = *(int *)(v6 + 20);
    if (one-time initialization token for defaultInstance != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = static Proto_Gpsd_LtlInfo._StorageClass.defaultInstance;
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo);
  }
  return Proto_Gpsd_Request.injectLtlInfo.modify;
}

void Proto_Gpsd_Request.injectLtlInfo.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.injectLtlInfo.setter, type metadata accessor for Proto_Gpsd_LtlInfo);
}

BOOL Proto_Gpsd_Request.hasInjectLtlInfo.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearInjectLtlInfo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.startContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *started;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  started = (int *)type metadata accessor for Proto_Gpsd_StartContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)started - 1) + 48))(v5, 1, started) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_StartContext);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + started[5]) = 2;
  *(_BYTE *)(a1 + started[6]) = 2;
  *(_BYTE *)(a1 + started[7]) = 2;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
}

int *Proto_Gpsd_StartContext.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_StartContext(0);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  return result;
}

uint64_t Proto_Gpsd_Request.startContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t started;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_StartContext);
  started = type metadata accessor for Proto_Gpsd_StartContext(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 56))(v8, 0, 1, started);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.startContext.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *started;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  started = (int *)type metadata accessor for Proto_Gpsd_StartContext(0);
  v7 = *((_QWORD *)started - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, started) == 1)
  {
    UnknownStorage.init()();
    v9[started[5]] = 2;
    v9[started[6]] = 2;
    v9[started[7]] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_StartContext);
  }
  return Proto_Gpsd_Request.startContext.modify;
}

void Proto_Gpsd_Request.startContext.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.startContext.setter, type metadata accessor for Proto_Gpsd_StartContext);
}

BOOL Proto_Gpsd_Request.hasStartContext.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext, type metadata accessor for Proto_Gpsd_StartContext);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearStartContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t started;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  started = type metadata accessor for Proto_Gpsd_StartContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 56))(v3, 1, 1, started);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.cntinStatusUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.setAssistanceSignalEnvironment.getter(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate, type metadata accessor for Proto_Gpsd_CntinStatusMessage, 7, a1);
}

uint64_t Proto_Gpsd_Request.setAssistanceSignalEnvironment.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20)) + *a2;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v14, (uint64_t)v13, a1);
  v15 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, a5, a3);
  UnknownStorage.init()();
  *(_BYTE *)(a5 + *(int *)(v15 + 20)) = a4;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, a1);
}

uint64_t Proto_Gpsd_CntinStatusMessage.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_CplaneConfig.init()(type metadata accessor for Proto_Gpsd_CntinStatusMessage, 7, a1);
}

uint64_t Proto_Gpsd_Request.cntinStatusUpdate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  v13 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.cntinStatusUpdate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 7;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  }
  return Proto_Gpsd_Request.cntinStatusUpdate.modify;
}

void Proto_Gpsd_Request.cntinStatusUpdate.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.cntinStatusUpdate.setter, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
}

BOOL Proto_Gpsd_Request.hasCntinStatusUpdate.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearCntinStatusUpdate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setThermalRiskState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v7 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  UnknownStorage.init()();
  v8 = a1 + *(int *)(v7 + 20);
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
}

uint64_t Proto_Gpsd_SetThermalRiskState.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  UnknownStorage.init()();
  result = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  v3 = a1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + *(int *)(result + 24);
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  return result;
}

uint64_t Proto_Gpsd_Request.setThermalRiskState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  v13 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setThermalRiskState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  }
  return Proto_Gpsd_Request.setThermalRiskState.modify;
}

void Proto_Gpsd_Request.setThermalRiskState.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setThermalRiskState.setter, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

BOOL Proto_Gpsd_Request.hasSetThermalRiskState.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetThermalRiskState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.setConfigRfBandEnable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v7 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = 2;
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = 2;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  UnknownStorage.init()();
  result = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  *(_BYTE *)(a1 + *(int *)(result + 20)) = 2;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t Proto_Gpsd_Request.setConfigRfBandEnable.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  v13 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.setConfigRfBandEnable.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    v9[*(int *)(v6 + 24)] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  }
  return Proto_Gpsd_Request.setConfigRfBandEnable.modify;
}

void Proto_Gpsd_Request.setConfigRfBandEnable.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.setConfigRfBandEnable.setter, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

BOOL Proto_Gpsd_Request.hasSetConfigRfBandEnable.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSetConfigRfBandEnable()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.emergConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  Proto_Gnss_Emergency_EmergConfig.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
}

uint64_t Proto_Gpsd_Request.emergConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  v13 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.emergConfig.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_EmergConfig.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  }
  return Proto_Gpsd_Request.emergConfig.modify;
}

void Proto_Gpsd_Request.emergConfig.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.emergConfig.setter, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

BOOL Proto_Gpsd_Request.hasEmergConfig.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearEmergConfig()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.positionRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  Proto_Gnss_Emergency_PositionRequest.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
}

uint64_t Proto_Gpsd_Request.positionRequest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  v13 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.positionRequest.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_PositionRequest.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  }
  return Proto_Gpsd_Request.positionRequest.modify;
}

void Proto_Gpsd_Request.positionRequest.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.positionRequest.setter, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

BOOL Proto_Gpsd_Request.hasPositionRequest.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearPositionRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.sessionID.getter()
{
  return CLP_LogEntry_PrivateData_DaemonLocation.confidence.getter(type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

uint64_t Proto_Gpsd_Request.sessionID.setter(int a1)
{
  return CLP_LogEntry_PrivateData_Location.client.setter(a1, type metadata accessor for Proto_Gpsd_Request, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

void (*Proto_Gpsd_Request.sessionID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  swift_beginAccess();
  v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_Request.sessionID.modify;
}

void Proto_Gpsd_Request.sessionID.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_MeasurementExtension.codeLockDurationSeconds.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

BOOL Proto_Gpsd_Request.hasSessionID.getter()
{
  return CLP_LogEntry_PrivateData_MeasurementExtension.hasNoncoherentIntervalCount.getter(type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSessionID()()
{
  CLP_LogEntry_PrivateData_MeasurementExtension.clearNoncoherentIntervalCount()(type metadata accessor for Proto_Gpsd_Request, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

uint64_t Proto_Gpsd_Request.gpsReferenceTime.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  Proto_Gnss_Emergency_GpsReferenceTime.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
}

uint64_t Proto_Gpsd_Request.gpsReferenceTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.gpsReferenceTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_GpsReferenceTime.init()(v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  }
  return Proto_Gpsd_Request.gpsReferenceTime.modify;
}

void Proto_Gpsd_Request.gpsReferenceTime.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.gpsReferenceTime.setter, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

BOOL Proto_Gpsd_Request.hasGpsReferenceTime.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearGpsReferenceTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.referenceLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  Proto_Gnss_Emergency_ReferenceLocation.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
}

uint64_t Proto_Gpsd_Request.referenceLocation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  v13 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.referenceLocation.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_ReferenceLocation.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  }
  return Proto_Gpsd_Request.referenceLocation.modify;
}

void Proto_Gpsd_Request.referenceLocation.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.referenceLocation.setter, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

BOOL Proto_Gpsd_Request.hasReferenceLocation.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearReferenceLocation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.gpsNavigationModel.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  Proto_Gnss_Emergency_GpsNavigationModel.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
}

uint64_t Proto_Gpsd_Request.gpsNavigationModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.gpsNavigationModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_GpsNavigationModel.init()(v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  }
  return Proto_Gpsd_Request.gpsNavigationModel.modify;
}

void Proto_Gpsd_Request.gpsNavigationModel.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.gpsNavigationModel.setter, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

BOOL Proto_Gpsd_Request.hasGpsNavigationModel.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearGpsNavigationModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.gpsAcqAssistance.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  Proto_Gnss_Emergency_GpsAcqAssistance.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
}

uint64_t Proto_Gpsd_Request.gpsAcqAssistance.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  v13 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.gpsAcqAssistance.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_GpsAcqAssistance.init()(v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  }
  return Proto_Gpsd_Request.gpsAcqAssistance.modify;
}

void Proto_Gpsd_Request.gpsAcqAssistance.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.gpsAcqAssistance.setter, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

BOOL Proto_Gpsd_Request.hasGpsAcqAssistance.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearGpsAcqAssistance()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.cellFtAssistance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  Proto_Gnss_Emergency_CellFTAssistance.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
}

uint64_t Proto_Gpsd_Request.cellFtAssistance.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.cellFtAssistance.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_CellFTAssistance.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  }
  return Proto_Gpsd_Request.cellFtAssistance.modify;
}

void Proto_Gpsd_Request.cellFtAssistance.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.cellFtAssistance.setter, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
}

BOOL Proto_Gpsd_Request.hasCellFtAssistance.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearCellFtAssistance()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.cplaneContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  Proto_Gnss_Emergency_CplaneContext.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
}

uint64_t Proto_Gpsd_Request.cplaneContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.cplaneContext.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_CplaneContext.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  }
  return Proto_Gpsd_Request.cplaneContext.modify;
}

void Proto_Gpsd_Request.cplaneContext.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.cplaneContext.setter, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
}

BOOL Proto_Gpsd_Request.hasCplaneContext.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearCplaneContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.suplInitVec.getter()
{
  return Proto_Gpsd_Request.suplInitVec.getter();
}

{
  type metadata accessor for Proto_Gpsd_Request(0);
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Proto_Gpsd_Request.suplInitVec.setter(uint64_t a1)
{
  return Proto_Gpsd_Request.suplInitVec.setter(a1, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
}

void (*Proto_Gpsd_Request.suplInitVec.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return Proto_Gpsd_Request.suplInitVec.modify;
}

void Proto_Gpsd_Request.suplInitVec.modify(uint64_t *a1, char a2)
{
  Proto_Gpsd_Request.suplInitVec.modify(a1, a2, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
}

uint64_t Proto_Gpsd_Request.locationID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  Proto_Gnss_Emergency_LocationId.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
}

uint64_t Proto_Gpsd_Request.locationID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  v13 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.locationID.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_LocationId.init()(v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  }
  return Proto_Gpsd_Request.locationID.modify;
}

void Proto_Gpsd_Request.locationID.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.locationID.setter, type metadata accessor for Proto_Gnss_Emergency_LocationId);
}

BOOL Proto_Gpsd_Request.hasLocationID.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID, type metadata accessor for Proto_Gnss_Emergency_LocationId);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearLocationID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.suplInitIndex.getter()
{
  return CLP_LogEntry_PrivateData_DaemonLocation.confidence.getter(type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t Proto_Gpsd_Request.suplInitIndex.setter(int a1)
{
  return CLP_LogEntry_PrivateData_Location.client.setter(a1, type metadata accessor for Proto_Gpsd_Request, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

void (*Proto_Gpsd_Request.suplInitIndex.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess();
  v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_Request.suplInitIndex.modify;
}

void Proto_Gpsd_Request.suplInitIndex.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_MeasurementExtension.codeLockDurationSeconds.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

BOOL Proto_Gpsd_Request.hasSuplInitIndex.getter()
{
  return CLP_LogEntry_PrivateData_MeasurementExtension.hasNoncoherentIntervalCount.getter(type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSuplInitIndex()()
{
  CLP_LogEntry_PrivateData_MeasurementExtension.clearNoncoherentIntervalCount()(type metadata accessor for Proto_Gpsd_Request, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t Proto_Gpsd_Request.suplCert.getter()
{
  return Proto_Gpsd_Request.suplInitVec.getter();
}

uint64_t Proto_Gpsd_Request.suplCert.setter(uint64_t a1)
{
  return Proto_Gpsd_Request.suplInitVec.setter(a1, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
}

uint64_t Proto_Gpsd_Request.suplInitVec.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v7);
    *(_QWORD *)(v2 + v5) = v6;
    swift_release();
  }
  v8 = (_QWORD *)(*(_QWORD *)(v2 + v5) + *a2);
  swift_beginAccess();
  *v8 = a1;
  return swift_bridgeObjectRelease();
}

void (*Proto_Gpsd_Request.suplCert.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + v4)
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return Proto_Gpsd_Request.suplCert.modify;
}

void Proto_Gpsd_Request.suplCert.modify(uint64_t *a1, char a2)
{
  Proto_Gpsd_Request.suplInitVec.modify(a1, a2, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
}

void Proto_Gpsd_Request.suplInitVec.modify(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = *(int *)(v4 + 88);
      v7 = *(_QWORD *)(v4 + 80);
      type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
      v8 = swift_allocObject();
      v9 = swift_retain();
      Proto_Gpsd_Request._StorageClass.init(copying:)(v9);
      *(_QWORD *)(v7 + v6) = v8;
      swift_release();
    }
    v10 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess();
    *v10 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v11 = *(int *)(v4 + 88);
      v12 = *(_QWORD *)(v4 + 80);
      type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
      v13 = swift_allocObject();
      v14 = swift_retain();
      Proto_Gpsd_Request._StorageClass.init(copying:)(v14);
      *(_QWORD *)(v12 + v11) = v13;
      swift_release();
    }
    v15 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess();
    *v15 = v5;
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t Proto_Gpsd_Request.servingCellLte.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  return *v1 & 1;
}

uint64_t Proto_Gpsd_Request.servingCellLte.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;
  uint64_t result;

  v2 = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v1 + v4) = v5;
    swift_release();
  }
  v7 = a1 & 1;
  v8 = (_BYTE *)(*(_QWORD *)(v2 + v4)
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  result = swift_beginAccess();
  *v8 = v7;
  return result;
}

void (*Proto_Gpsd_Request.servingCellLte.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *v5 & 1;
  return Proto_Gpsd_Request.servingCellLte.modify;
}

void Proto_Gpsd_Request.servingCellLte.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL Proto_Gpsd_Request.hasServingCellLte.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  return *v1 != 2;
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearServingCellLte()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  *v4 = 2;
}

uint64_t Proto_Gpsd_Request.simInstance.getter()
{
  return CLP_LogEntry_PrivateData_DaemonLocation.confidence.getter(type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t Proto_Gpsd_Request.simInstance.setter(int a1)
{
  return CLP_LogEntry_PrivateData_Location.client.setter(a1, type metadata accessor for Proto_Gpsd_Request, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

void (*Proto_Gpsd_Request.simInstance.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess();
  v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_Request.simInstance.modify;
}

void Proto_Gpsd_Request.simInstance.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_MeasurementExtension.codeLockDurationSeconds.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

BOOL Proto_Gpsd_Request.hasSimInstance.getter()
{
  return CLP_LogEntry_PrivateData_MeasurementExtension.hasNoncoherentIntervalCount.getter(type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSimInstance()()
{
  CLP_LogEntry_PrivateData_MeasurementExtension.clearNoncoherentIntervalCount()(type metadata accessor for Proto_Gpsd_Request, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Request._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Request._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t Proto_Gpsd_Request.suplContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  Proto_Gnss_Emergency_SuplContext.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
}

uint64_t Proto_Gpsd_Request.suplContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  v13 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.suplContext.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_SuplContext.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  }
  return Proto_Gpsd_Request.suplContext.modify;
}

void Proto_Gpsd_Request.suplContext.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.suplContext.setter, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

BOOL Proto_Gpsd_Request.hasSuplContext.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearSuplContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.wlanMeasurementList.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  Proto_Gnss_Emergency_WlanMeasurementList.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
}

uint64_t Proto_Gpsd_Request.wlanMeasurementList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  v13 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Request.wlanMeasurementList.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_WlanMeasurementList.init()(v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  }
  return Proto_Gpsd_Request.wlanMeasurementList.modify;
}

void Proto_Gpsd_Request.wlanMeasurementList.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Request.wlanMeasurementList.setter, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

BOOL Proto_Gpsd_Request.hasWlanMeasurementList.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?, type metadata accessor for Proto_Gpsd_Request, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

Swift::Void __swiftcall Proto_Gpsd_Request.clearWlanMeasurementList()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Request.TypeEnum.rawValue.getter(char a1)
{
  return qword_235BE1AE8[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gpsd_Request.TypeEnum(char *a1, char *a2)
{
  return qword_235BE1AE8[*a1] == qword_235BE1AE8[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Request.TypeEnum()
{
  lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gpsd_Request.TypeEnum@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gpsd_Request.TypeEnum.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gpsd_Request.TypeEnum()
{
  char *v0;

  return qword_235BE1AE8[*v0];
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gpsd_Request.TypeEnum@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gpsd_Request.TypeEnum.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gpsd_Request.TypeEnum(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BE1AE8[*v1];
}

uint64_t Proto_Gpsd_Request.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_SyncState.init()(type metadata accessor for Proto_Gpsd_Request, &one-time initialization token for defaultInstance, &static Proto_Gpsd_Request._StorageClass.defaultInstance, a1);
}

uint64_t variable initialization expression of Proto_Gpsd_Request._storage()
{
  return variable initialization expression of CLP_LogEntry_PrivateData_SyncState._storage(&one-time initialization token for defaultInstance);
}

void *static Proto_Gpsd_Request.TypeEnum.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gpsd_Request.TypeEnum.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_Request.TypeEnum(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gpsd_Request.TypeEnum.allCases.getter;
}

uint64_t Proto_Gpsd_Response.requestType.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 20));
  if (v1 == 61)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_Response.requestType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_Response(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_Response.requestType.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 61)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_Response.hasRequestType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 20)) != 61;
}

Swift::Void __swiftcall Proto_Gpsd_Response.clearRequestType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 20)) = 61;
}

uint64_t Proto_Gpsd_Response.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_Response);
}

uint64_t Proto_Gpsd_Response.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.setter(a1, type metadata accessor for Proto_Gpsd_Response);
}

uint64_t (*Proto_Gpsd_Response.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_Response.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_Response);
}

Swift::Void __swiftcall Proto_Gpsd_Response.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_Response);
}

uint64_t Proto_Gpsd_Response.resultCode.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 28));
  if (v1 == 10)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_Response.resultCode.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_Response(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_Response.resultCode.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 28);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 10)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.type.modify;
}

BOOL Proto_Gpsd_Response.hasResultCode.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 28)) != 10;
}

Swift::Void __swiftcall Proto_Gpsd_Response.clearResultCode()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0) + 28)) = 10;
}

int *Proto_Gpsd_Response.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  *(_BYTE *)(a1 + result[5]) = 61;
  v3 = a1 + result[6];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + result[7]) = 10;
  return result;
}

uint64_t variable initialization expression of Proto_Gpsd_Response._requestType()
{
  return 61;
}

uint64_t Proto_Gpsd_Indication.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 16) == 24)
    return 0;
  else
    return *(unsigned __int8 *)(v1 + 16);
}

uint64_t Proto_Gpsd_Indication.type.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 16) = a1;
  return result;
}

void (*Proto_Gpsd_Indication.type.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 24)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_Indication.type.modify;
}

void Proto_Gpsd_Indication.type.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 16);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL Proto_Gpsd_Indication.hasType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 16) != 24;
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearType()()
{
  Proto_Gnss_Emergency_Init.clearPosMethod()(type metadata accessor for Proto_Gpsd_Indication, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), 24);
}

uint64_t Proto_Gpsd_Indication.requestType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 17) == 61)
    return 0;
  else
    return *(unsigned __int8 *)(v1 + 17);
}

uint64_t Proto_Gpsd_Indication.requestType.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 17) = a1;
  return result;
}

void (*Proto_Gpsd_Indication.requestType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v5 + 17);
  if (v6 == 61)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_Indication.requestType.modify;
}

void Proto_Gpsd_Indication.requestType.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 17);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL Proto_Gpsd_Indication.hasRequestType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 17) != 61;
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearRequestType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_BYTE *)(v4 + 17) = 61;
}

uint64_t Proto_Gpsd_Indication.machContinuousTimeNs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 32))
    return 0;
  else
    return *(_QWORD *)(v1 + 24);
}

uint64_t Proto_Gpsd_Indication.machContinuousTimeNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_QWORD *)(v6 + 24) = a1;
  *(_BYTE *)(v6 + 32) = 0;
  return result;
}

void (*Proto_Gpsd_Indication.machContinuousTimeNs.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  if (*(_BYTE *)(v5 + 32))
    v6 = 0;
  v3[9] = v6;
  return Proto_Gpsd_Indication.machContinuousTimeNs.modify;
}

void Proto_Gpsd_Indication.machContinuousTimeNs.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 88);
    v7 = *(_QWORD *)(v3 + 80);
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(_QWORD *)(v10 + 24) = v4;
  *(_BYTE *)(v10 + 32) = 0;
  free((void *)v3);
}

BOOL Proto_Gpsd_Indication.hasMachContinuousTimeNs.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 32) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearMachContinuousTimeNs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 1;
}

uint64_t Proto_Gpsd_Indication.fix.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v7 = type metadata accessor for Proto_Gnss_Fix(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Fix);
  Proto_Gnss_Fix.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
}

uint64_t Proto_Gpsd_Indication.fix.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Fix);
  v13 = type metadata accessor for Proto_Gnss_Fix(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.fix.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Fix(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Fix.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Fix);
  }
  return Proto_Gpsd_Indication.fix.modify;
}

void Proto_Gpsd_Indication.fix.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.fix.setter, type metadata accessor for Proto_Gnss_Fix);
}

BOOL Proto_Gpsd_Indication.hasFix.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Fix?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix, type metadata accessor for Proto_Gnss_Fix);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearFix()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Fix(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.meas.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v7 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
}

uint64_t Proto_Gpsd_Indication.meas.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  v13 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.meas.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  }
  return Proto_Gpsd_Indication.meas.modify;
}

void Proto_Gpsd_Indication.meas.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.meas.setter, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
}

BOOL Proto_Gpsd_Indication.hasMeas.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearMeas()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.powerMeasurement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v7 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_PwrMeasurement);
  Proto_Gnss_PwrMeasurement.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
}

uint64_t Proto_Gpsd_Indication.powerMeasurement.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_PwrMeasurement);
  v13 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.powerMeasurement.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_PwrMeasurement.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_PwrMeasurement);
  }
  return Proto_Gpsd_Indication.powerMeasurement.modify;
}

void Proto_Gpsd_Indication.powerMeasurement.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.powerMeasurement.setter, type metadata accessor for Proto_Gnss_PwrMeasurement);
}

BOOL Proto_Gpsd_Indication.hasPowerMeasurement.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearPowerMeasurement()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.status.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_Status(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_Status);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
}

int *Proto_Gpsd_Status.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_Status(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  *(_BYTE *)(a1 + result[9]) = 2;
  return result;
}

uint64_t Proto_Gpsd_Indication.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_Status);
  v13 = type metadata accessor for Proto_Gpsd_Status(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.status.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_Status(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Status);
  }
  return Proto_Gpsd_Indication.status.modify;
}

void Proto_Gpsd_Indication.status.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.status.setter, type metadata accessor for Proto_Gpsd_Status);
}

BOOL Proto_Gpsd_Indication.hasStatus.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_Status?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status, type metadata accessor for Proto_Gpsd_Status);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_Status(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.timeTransferDataExtend.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v7 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  Proto_Gnss_TimeTransferDataExtend.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
}

uint64_t Proto_Gpsd_Indication.timeTransferDataExtend.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  v13 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.timeTransferDataExtend.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_TimeTransferDataExtend.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  }
  return Proto_Gpsd_Indication.timeTransferDataExtend.modify;
}

void Proto_Gpsd_Indication.timeTransferDataExtend.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.timeTransferDataExtend.setter, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
}

BOOL Proto_Gpsd_Indication.hasTimeTransferDataExtend.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearTimeTransferDataExtend()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.recoveryStatistics.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v7 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  *a1 = MEMORY[0x24BEE4AF8];
  UnknownStorage.init()();
  v8 = (char *)a1 + *(int *)(v7 + 24);
  v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
}

uint64_t Proto_Gpsd_RecoveryStatistics.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  UnknownStorage.init()();
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

uint64_t Proto_Gpsd_Indication.recoveryStatistics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  v13 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.recoveryStatistics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    v11 = (char *)v9 + *(int *)(v6 + 24);
    v12 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  }
  return Proto_Gpsd_Indication.recoveryStatistics.modify;
}

void Proto_Gpsd_Indication.recoveryStatistics.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.recoveryStatistics.setter, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

BOOL Proto_Gpsd_Indication.hasRecoveryStatistics.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearRecoveryStatistics()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.ltlInfoRequest.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Indication.cntinClockControl.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, 5, a1);
}

uint64_t Proto_Gpsd_Indication.cntinClockControl.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20)) + *a2;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v14, (uint64_t)v13, a1);
  v15 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, a5, a3);
  UnknownStorage.init()();
  *(_BYTE *)(a5 + *(int *)(v15 + 20)) = a4;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, a1);
}

uint64_t Proto_Gpsd_LtlInfoRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_CplaneConfig.init()(type metadata accessor for Proto_Gpsd_LtlInfoRequest, 5, a1);
}

uint64_t Proto_Gpsd_Indication.ltlInfoRequest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  v13 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.ltlInfoRequest.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 5;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  }
  return Proto_Gpsd_Indication.ltlInfoRequest.modify;
}

void Proto_Gpsd_Indication.ltlInfoRequest.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.ltlInfoRequest.setter, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
}

BOOL Proto_Gpsd_Indication.hasLtlInfoRequest.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearLtlInfoRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.decodedExtendedEphemeris.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v7 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  Proto_Gnss_DecodedExtendedEphemeris.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
}

uint64_t Proto_Gpsd_Indication.decodedExtendedEphemeris.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  v13 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.decodedExtendedEphemeris.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_DecodedExtendedEphemeris.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  }
  return Proto_Gpsd_Indication.decodedExtendedEphemeris.modify;
}

void Proto_Gpsd_Indication.decodedExtendedEphemeris.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.decodedExtendedEphemeris.setter, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

BOOL Proto_Gpsd_Indication.hasDecodedExtendedEphemeris.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearDecodedExtendedEphemeris()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.decodedRti.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v7 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_DecodedRti);
  Proto_Gnss_DecodedRti.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
}

uint64_t Proto_Gpsd_Indication.decodedRti.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_DecodedRti);
  v13 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.decodedRti.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_DecodedRti.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_DecodedRti);
  }
  return Proto_Gpsd_Indication.decodedRti.modify;
}

void Proto_Gpsd_Indication.decodedRti.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.decodedRti.setter, type metadata accessor for Proto_Gnss_DecodedRti);
}

BOOL Proto_Gpsd_Indication.hasDecodedRti.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti, type metadata accessor for Proto_Gnss_DecodedRti);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearDecodedRti()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.startStatus.getter()
{
  return Proto_Gpsd_Indication.startStatus.getter(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

uint64_t Proto_Gpsd_Indication.startStatus.setter(char a1)
{
  return Proto_Gpsd_Indication.startStatus.setter(a1, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

void (*Proto_Gpsd_Indication.startStatus.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (unsigned __int8 *)(*(_QWORD *)(v1 + v4)
                         + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess();
  v6 = *v5;
  if (v6 == 10)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_Indication.startStatus.modify;
}

void Proto_Gpsd_Indication.startStatus.modify(uint64_t *a1, char a2)
{
  Proto_Gpsd_Indication.startStatus.modify(a1, a2, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

BOOL Proto_Gpsd_Indication.hasStartStatus.getter()
{
  return Proto_Gpsd_Indication.hasStartStatus.getter(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearStartStatus()()
{
  Proto_Gpsd_Indication.clearStartStatus()(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus, 10);
}

uint64_t Proto_Gpsd_Indication.stopStatus.getter()
{
  return Proto_Gpsd_Indication.startStatus.getter(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

uint64_t Proto_Gpsd_Indication.startStatus.getter(_QWORD *a1)
{
  uint64_t v1;
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)(*(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20)) + *a1);
  swift_beginAccess();
  if (*v2 == 10)
    return 0;
  else
    return *v2;
}

uint64_t Proto_Gpsd_Indication.stopStatus.setter(char a1)
{
  return Proto_Gpsd_Indication.startStatus.setter(a1, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

uint64_t Proto_Gpsd_Indication.startStatus.setter(char a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;

  v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v7);
    *(_QWORD *)(v2 + v5) = v6;
    swift_release();
  }
  v8 = (_BYTE *)(*(_QWORD *)(v2 + v5) + *a2);
  result = swift_beginAccess();
  *v8 = a1;
  return result;
}

void (*Proto_Gpsd_Indication.stopStatus.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (unsigned __int8 *)(*(_QWORD *)(v1 + v4)
                         + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess();
  v6 = *v5;
  if (v6 == 10)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_Indication.stopStatus.modify;
}

void Proto_Gpsd_Indication.stopStatus.modify(uint64_t *a1, char a2)
{
  Proto_Gpsd_Indication.startStatus.modify(a1, a2, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

void Proto_Gpsd_Indication.startStatus.modify(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  v5 = *a1;
  v6 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 80);
    v9 = *(_QWORD *)(v5 + 72);
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v9 + v8) = v10;
    swift_release();
  }
LABEL_4:
  v12 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 80)) + *a3);
  swift_beginAccess();
  *v12 = v6;
  free((void *)v5);
}

BOOL Proto_Gpsd_Indication.hasStopStatus.getter()
{
  return Proto_Gpsd_Indication.hasStartStatus.getter(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

BOOL Proto_Gpsd_Indication.hasStartStatus.getter(_QWORD *a1)
{
  uint64_t v1;
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)(*(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20)) + *a1);
  swift_beginAccess();
  return *v2 != 10;
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearStopStatus()()
{
  Proto_Gpsd_Indication.clearStartStatus()(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus, 10);
}

uint64_t Proto_Gpsd_Indication.clearStartStatus()(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;

  v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v6 = swift_allocObject();
    v7 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v7);
    *(_QWORD *)(v2 + v5) = v6;
    swift_release();
  }
  v8 = (_BYTE *)(*(_QWORD *)(v2 + v5) + *a1);
  result = swift_beginAccess();
  *v8 = a2;
  return result;
}

uint64_t Proto_Gpsd_Indication.cntinClockControl.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Indication.cntinClockControl.getter(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, 2, a1);
}

uint64_t Proto_Gpsd_CntinClockControl.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_CplaneConfig.init()(type metadata accessor for Proto_Gpsd_CntinClockControl, 2, a1);
}

uint64_t Proto_Gpsd_Indication.cntinClockControl.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_CntinClockControl);
  v13 = type metadata accessor for Proto_Gpsd_CntinClockControl(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.cntinClockControl.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_CntinClockControl(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_CntinClockControl);
  }
  return Proto_Gpsd_Indication.cntinClockControl.modify;
}

void Proto_Gpsd_Indication.cntinClockControl.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.cntinClockControl.setter, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

BOOL Proto_Gpsd_Indication.hasCntinClockControl.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearCntinClockControl()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_CntinClockControl(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.exception.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_Exception(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_Exception);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + v7[7];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
}

int *Proto_Gpsd_Exception.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_Exception(0);
  v3 = a1 + result[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  return result;
}

uint64_t Proto_Gpsd_Indication.exception.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_Exception);
  v13 = type metadata accessor for Proto_Gpsd_Exception(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.exception.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_Exception(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v13 = &v9[v6[7]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Exception);
  }
  return Proto_Gpsd_Indication.exception.modify;
}

void Proto_Gpsd_Indication.exception.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.exception.setter, type metadata accessor for Proto_Gpsd_Exception);
}

BOOL Proto_Gpsd_Indication.hasException.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_Exception?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception, type metadata accessor for Proto_Gpsd_Exception);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearException()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_Exception(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.askBasebandReset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = a1 + v7[6];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = (_QWORD *)(a1 + v7[7]);
  *v10 = 0;
  v10[1] = 0;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
}

int *Proto_Gpsd_AskBasebandReset.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v3 = a1 + result[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = a1 + result[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = (_QWORD *)(a1 + result[7]);
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t Proto_Gpsd_Indication.askBasebandReset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  v13 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.askBasebandReset.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v12 = &v9[v6[6]];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    v13 = &v9[v6[7]];
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  }
  return Proto_Gpsd_Indication.askBasebandReset.modify;
}

void Proto_Gpsd_Indication.askBasebandReset.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.askBasebandReset.setter, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

BOOL Proto_Gpsd_Indication.hasAskBasebandReset.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearAskBasebandReset()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.summaryReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  Proto_Gnss_Emergency_SummaryReport.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
}

uint64_t Proto_Gpsd_Indication.summaryReport.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  v13 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.summaryReport.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_SummaryReport.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  }
  return Proto_Gpsd_Indication.summaryReport.modify;
}

void Proto_Gpsd_Indication.summaryReport.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.summaryReport.setter, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

BOOL Proto_Gpsd_Indication.hasSummaryReport.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearSummaryReport()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.positionReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  Proto_Gnss_Emergency_PositionReport.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
}

uint64_t Proto_Gpsd_Indication.positionReport.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  v13 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.positionReport.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_PositionReport.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  }
  return Proto_Gpsd_Indication.positionReport.modify;
}

void Proto_Gpsd_Indication.positionReport.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.positionReport.setter, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

BOOL Proto_Gpsd_Indication.hasPositionReport.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearPositionReport()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.cplaneMeasurementReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  Proto_Gnss_Emergency_MeasurementReport.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
}

uint64_t Proto_Gpsd_Indication.cplaneMeasurementReport.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  v13 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.cplaneMeasurementReport.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_MeasurementReport.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  }
  return Proto_Gpsd_Indication.cplaneMeasurementReport.modify;
}

void Proto_Gpsd_Indication.cplaneMeasurementReport.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.cplaneMeasurementReport.setter, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

BOOL Proto_Gpsd_Indication.hasCplaneMeasurementReport.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearCplaneMeasurementReport()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.assistanceNeededReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  Proto_Gnss_Emergency_AssistanceNeededReport.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
}

uint64_t Proto_Gpsd_Indication.assistanceNeededReport.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  v13 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.assistanceNeededReport.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_AssistanceNeededReport.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  }
  return Proto_Gpsd_Indication.assistanceNeededReport.modify;
}

void Proto_Gpsd_Indication.assistanceNeededReport.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.assistanceNeededReport.setter, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

BOOL Proto_Gpsd_Indication.hasAssistanceNeededReport.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearAssistanceNeededReport()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.cellFtAssistanceRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  Proto_Gnss_Emergency_CellFTAssistanceRequest.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
}

uint64_t Proto_Gpsd_Indication.cellFtAssistanceRequest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  v13 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.cellFtAssistanceRequest.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_CellFTAssistanceRequest.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  }
  return Proto_Gpsd_Indication.cellFtAssistanceRequest.modify;
}

void Proto_Gpsd_Indication.cellFtAssistanceRequest.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.cellFtAssistanceRequest.setter, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

BOOL Proto_Gpsd_Indication.hasCellFtAssistanceRequest.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearCellFtAssistanceRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.cplaneMeasurementReportWithEstimate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  Proto_Gnss_Emergency_MeasurementReportWithEstimate.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
}

uint64_t Proto_Gpsd_Indication.cplaneMeasurementReportWithEstimate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  v13 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.cplaneMeasurementReportWithEstimate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_MeasurementReportWithEstimate.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  }
  return Proto_Gpsd_Indication.cplaneMeasurementReportWithEstimate.modify;
}

void Proto_Gpsd_Indication.cplaneMeasurementReportWithEstimate.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.cplaneMeasurementReportWithEstimate.setter, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

BOOL Proto_Gpsd_Indication.hasCplaneMeasurementReportWithEstimate.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearCplaneMeasurementReportWithEstimate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.suplSessionStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  Proto_Gnss_Emergency_SessionStatus.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
}

uint64_t Proto_Gpsd_Indication.suplSessionStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  v13 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.suplSessionStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_SessionStatus.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  }
  return Proto_Gpsd_Indication.suplSessionStatus.modify;
}

void Proto_Gpsd_Indication.suplSessionStatus.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.suplSessionStatus.setter, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

BOOL Proto_Gpsd_Indication.hasSuplSessionStatus.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearSuplSessionStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.decodedSuplInit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Init);
  Proto_Gnss_Emergency_Init.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
}

uint64_t Proto_Gpsd_Indication.decodedSuplInit.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_Init);
  v13 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.decodedSuplInit.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_Init.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Init);
  }
  return Proto_Gpsd_Indication.decodedSuplInit.modify;
}

void Proto_Gpsd_Indication.decodedSuplInit.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.decodedSuplInit.setter, type metadata accessor for Proto_Gnss_Emergency_Init);
}

BOOL Proto_Gpsd_Indication.hasDecodedSuplInit.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit, type metadata accessor for Proto_Gnss_Emergency_Init);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearDecodedSuplInit()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.suplInitIndex.getter()
{
  return CLP_LogEntry_PrivateData_DaemonLocation.confidence.getter(type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t Proto_Gpsd_Indication.suplInitIndex.setter(int a1)
{
  return CLP_LogEntry_PrivateData_Location.client.setter(a1, type metadata accessor for Proto_Gpsd_Indication, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

void (*Proto_Gpsd_Indication.suplInitIndex.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess();
  v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_Indication.suplInitIndex.modify;
}

void Proto_Gpsd_Indication.suplInitIndex.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_MeasurementExtension.codeLockDurationSeconds.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

BOOL Proto_Gpsd_Indication.hasSuplInitIndex.getter()
{
  return CLP_LogEntry_PrivateData_MeasurementExtension.hasNoncoherentIntervalCount.getter(type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearSuplInitIndex()()
{
  CLP_LogEntry_PrivateData_MeasurementExtension.clearNoncoherentIntervalCount()(type metadata accessor for Proto_Gpsd_Indication, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t Proto_Gpsd_Indication.suplInitDecodeResult.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess();
  if (*v1 == 4)
    return 0;
  else
    return *v1;
}

uint64_t Proto_Gpsd_Indication.suplInitDecodeResult.setter(char a1)
{
  return Proto_Gpsd_Indication.startStatus.setter(a1, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
}

void (*Proto_Gpsd_Indication.suplInitDecodeResult.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (unsigned __int8 *)(*(_QWORD *)(v1 + v4)
                         + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess();
  v6 = *v5;
  if (v6 == 4)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_Indication.suplInitDecodeResult.modify;
}

void Proto_Gpsd_Indication.suplInitDecodeResult.modify(uint64_t *a1, char a2)
{
  Proto_Gpsd_Indication.startStatus.modify(a1, a2, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
}

BOOL Proto_Gpsd_Indication.hasSuplInitDecodeResult.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
                         + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess();
  return *v1 != 4;
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearSuplInitDecodeResult()()
{
  Proto_Gpsd_Indication.clearStartStatus()(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult, 4);
}

uint64_t Proto_Gpsd_Indication.simInstance.getter()
{
  return CLP_LogEntry_PrivateData_DaemonLocation.confidence.getter(type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t Proto_Gpsd_Indication.simInstance.setter(int a1)
{
  return CLP_LogEntry_PrivateData_Location.client.setter(a1, type metadata accessor for Proto_Gpsd_Indication, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

void (*Proto_Gpsd_Indication.simInstance.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess();
  v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_Indication.simInstance.modify;
}

void Proto_Gpsd_Indication.simInstance.modify(uint64_t *a1, char a2)
{
  CLP_LogEntry_PrivateData_MeasurementExtension.codeLockDurationSeconds.modify(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

BOOL Proto_Gpsd_Indication.hasSimInstance.getter()
{
  return CLP_LogEntry_PrivateData_MeasurementExtension.hasNoncoherentIntervalCount.getter(type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearSimInstance()()
{
  CLP_LogEntry_PrivateData_MeasurementExtension.clearNoncoherentIntervalCount()(type metadata accessor for Proto_Gpsd_Indication, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_Indication._StorageClass, (void (*)(uint64_t))Proto_Gpsd_Indication._StorageClass.init(copying:), &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t Proto_Gpsd_Indication.wlanMeasurementRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v7 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  Proto_Gnss_Emergency_WlanMeasurementRequest.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
}

uint64_t Proto_Gpsd_Indication.wlanMeasurementRequest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  v13 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_Indication.wlanMeasurementRequest.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Emergency_WlanMeasurementRequest.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  }
  return Proto_Gpsd_Indication.wlanMeasurementRequest.modify;
}

void Proto_Gpsd_Indication.wlanMeasurementRequest.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_Indication.wlanMeasurementRequest.setter, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

BOOL Proto_Gpsd_Indication.hasWlanMeasurementRequest.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?, type metadata accessor for Proto_Gpsd_Indication, &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

Swift::Void __swiftcall Proto_Gpsd_Indication.clearWlanMeasurementRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_Indication.TypeEnum.rawValue.getter(char a1)
{
  return qword_235BE19A0[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Proto_Gpsd_Indication.TypeEnum(char *a1, char *a2)
{
  return qword_235BE19A0[*a1] == qword_235BE19A0[*a2];
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Indication.TypeEnum()
{
  lazy protocol witness table accessor for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum();
  return Enum.hash(into:)();
}

uint64_t protocol witness for Enum.init(rawValue:) in conformance Proto_Gpsd_Indication.TypeEnum@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gpsd_Indication.TypeEnum.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for Enum.rawValue.getter in conformance Proto_Gpsd_Indication.TypeEnum()
{
  char *v0;

  return qword_235BE19A0[*v0];
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Proto_Gpsd_Indication.TypeEnum@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = specialized Proto_Gpsd_Indication.TypeEnum.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Proto_Gpsd_Indication.TypeEnum(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_235BE19A0[*v1];
}

uint64_t Proto_Gpsd_Indication.init()@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_PrivateData_SyncState.init()(type metadata accessor for Proto_Gpsd_Indication, &one-time initialization token for defaultInstance, &static Proto_Gpsd_Indication._StorageClass.defaultInstance, a1);
}

uint64_t variable initialization expression of Proto_Gpsd_Indication._storage()
{
  return variable initialization expression of CLP_LogEntry_PrivateData_SyncState._storage(&one-time initialization token for defaultInstance);
}

void *static Proto_Gpsd_Indication.TypeEnum.allCases.getter()
{
  return &outlined read-only object #0 of static Proto_Gpsd_Indication.TypeEnum.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Proto_Gpsd_Indication.TypeEnum(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Proto_Gpsd_Indication.TypeEnum.allCases.getter;
}

uint64_t Proto_Gpsd_Status.gpsdUptime.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.gpsdUptime.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*Proto_Gpsd_Status.gpsdUptime.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_Status.hasGpsdUptime.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_Status);
}

Swift::Void __swiftcall Proto_Gpsd_Status.clearGpsdUptime()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.deviceUptime.getter()
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.deviceUptime.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.setter(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*Proto_Gpsd_Status.deviceUptime.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_Status.hasDeviceUptime.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_Status);
}

Swift::Void __swiftcall Proto_Gpsd_Status.clearDeviceUptime()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.isDeviceInitialized.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.isDeviceInitialized.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*Proto_Gpsd_Status.isDeviceInitialized.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_Status.hasIsDeviceInitialized.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 28)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_Status.clearIsDeviceInitialized()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 28)) = 2;
}

uint64_t Proto_Gpsd_Status.isDeviceInterfaceBusy.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.getter(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.isDeviceInterfaceBusy.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.setter(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*Proto_Gpsd_Status.isDeviceInterfaceBusy.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_Status.hasIsDeviceInterfaceBusy.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 32)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_Status.clearIsDeviceInterfaceBusy()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 32)) = 2;
}

uint64_t Proto_Gpsd_Status.isDeviceActive.getter()
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.getter(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t Proto_Gpsd_Status.isDeviceActive.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.setter(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*Proto_Gpsd_Status.isDeviceActive.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_Status.hasIsDeviceActive.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 36)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_Status.clearIsDeviceActive()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0) + 36)) = 2;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportPvt.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 20));
  return (v1 == 2) | v1 & 1u;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportPvt.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*Proto_Gpsd_SetPvtmReport.reportPvt.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 20);
  *(_BYTE *)(a1 + 12) = (*(_BYTE *)(v1 + v3) == 2) | *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetPvtmReport.hasReportPvt.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetPvtmReport.clearReportPvt()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportMeasurement.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.getter(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t Proto_Gpsd_SetPvtmReport.reportMeasurement.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.setter(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*Proto_Gpsd_SetPvtmReport.reportMeasurement.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetPvtmReport.hasReportMeasurement.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 24)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetPvtmReport.clearReportMeasurement()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 24)) = 2;
}

uint64_t Proto_Gpsd_SetPvtmReport.includeExtendedMeasurementInfo.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t Proto_Gpsd_SetPvtmReport.includeExtendedMeasurementInfo.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*Proto_Gpsd_SetPvtmReport.includeExtendedMeasurementInfo.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetPvtmReport.hasIncludeExtendedMeasurementInfo.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 28)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetPvtmReport.clearIncludeExtendedMeasurementInfo()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 28)) = 2;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportSvInfo.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.getter(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t Proto_Gpsd_SetPvtmReport.reportSvInfo.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.setter(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*Proto_Gpsd_SetPvtmReport.reportSvInfo.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetPvtmReport.hasReportSvInfo.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 32)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetPvtmReport.clearReportSvInfo()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 32)) = 2;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportBandCorrections.getter()
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.getter(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t Proto_Gpsd_SetPvtmReport.reportBandCorrections.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL2CSyncState.towDecoded.setter(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*Proto_Gpsd_SetPvtmReport.reportBandCorrections.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetPvtmReport.hasReportBandCorrections.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 36)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetPvtmReport.clearReportBandCorrections()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 36)) = 2;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportTimeConversion.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 40)) & 1;
}

uint64_t Proto_Gpsd_SetPvtmReport.reportTimeConversion.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetPvtmReport.reportTimeConversion.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 40);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetPvtmReport.hasReportTimeConversion.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 40)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetPvtmReport.clearReportTimeConversion()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0) + 40)) = 2;
}

uint64_t Proto_Gpsd_InjectAssistanceFile.predictionsFile.getter()
{
  return Proto_Gpsd_InjectAssistanceFile.predictionsFile.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t Proto_Gpsd_InjectAssistanceFile.predictionsFile.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_InjectAssistanceFile.predictionsFile.setter(a1, a2, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t (*Proto_Gpsd_InjectAssistanceFile.predictionsFile.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  outlined copy of Data?(v5, v6);
  return Proto_Gpsd_InjectAssistanceFile.predictionsFile.modify;
}

BOOL Proto_Gpsd_InjectAssistanceFile.hasPredictionsFile.getter()
{
  return Proto_Gpsd_InjectAssistanceFile.hasPredictionsFile.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistanceFile.clearPredictionsFile()()
{
  Proto_Gpsd_InjectAssistanceFile.clearPredictionsFile()(type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t Proto_Gpsd_InjectAssistanceFile.compressionType.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0) + 24));
  if (v1 == 3)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_InjectAssistanceFile.compressionType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_InjectAssistanceFile.compressionType.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0) + 24);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 3)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_InjectAssistanceFile.hasCompressionType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0) + 24)) != 3;
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistanceFile.clearCompressionType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0) + 24)) = 3;
}

uint64_t Proto_Gpsd_InjectRtiFile.rtiFile.getter()
{
  return Proto_Gpsd_InjectAssistanceFile.predictionsFile.getter(type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t Proto_Gpsd_InjectAssistanceFile.predictionsFile.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 20));
  v3 = v2[1];
  if (v3 >> 60 == 15)
    v4 = 0;
  else
    v4 = *v2;
  outlined copy of Data?(*v2, v3);
  return v4;
}

uint64_t Proto_Gpsd_InjectRtiFile.rtiFile.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_InjectAssistanceFile.predictionsFile.setter(a1, a2, type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t Proto_Gpsd_InjectAssistanceFile.predictionsFile.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = v3 + *(int *)(a3(0) + 20);
  result = outlined consume of Data?(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
  *(_QWORD *)v6 = a1;
  *(_QWORD *)(v6 + 8) = a2;
  return result;
}

uint64_t (*Proto_Gpsd_InjectRtiFile.rtiFile.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectRtiFile(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  outlined copy of Data?(v5, v6);
  return Proto_Gpsd_InjectAssistanceFile.predictionsFile.modify;
}

BOOL Proto_Gpsd_InjectRtiFile.hasRtiFile.getter()
{
  return Proto_Gpsd_InjectAssistanceFile.hasPredictionsFile.getter(type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

BOOL Proto_Gpsd_InjectAssistanceFile.hasPredictionsFile.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 20) + 8) >> 60 != 15;
}

Swift::Void __swiftcall Proto_Gpsd_InjectRtiFile.clearRtiFile()()
{
  Proto_Gpsd_InjectAssistanceFile.clearPredictionsFile()(type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

double Proto_Gpsd_InjectAssistanceFile.clearPredictionsFile()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = v1 + *(int *)(a1(0) + 20);
  outlined consume of Data?(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  result = 0.0;
  *(_OWORD *)v2 = xmmword_235BB6C50;
  return result;
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.getter(type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, a1);
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.unknownFields.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.setter(a1, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t (*Proto_Gpsd_InjectSvidBlocklist.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.position.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 20), (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v7 = type metadata accessor for Proto_Gnss_Position(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Position);
  Proto_Gnss_Position.init()(a1);
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Position?);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.position.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 20);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for Proto_Gnss_Position);
  v4 = type metadata accessor for Proto_Gnss_Position(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Proto_Gpsd_InjectAssistancePosition.position.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gnss_Position(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 20);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    Proto_Gnss_Position.init()((uint64_t)v9);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Position);
  }
  return Proto_Gpsd_InjectAssistancePosition.position.modify;
}

void Proto_Gpsd_InjectAssistancePosition.position.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_AONLoc_Request.resultOptions.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gnss_Position?, type metadata accessor for Proto_Gnss_Position);
}

BOOL Proto_Gpsd_InjectAssistancePosition.hasPosition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 20), (uint64_t)v3, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v5 = type metadata accessor for Proto_Gnss_Position(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  return v6;
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistancePosition.clearPosition()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 20);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v2 = type metadata accessor for Proto_Gnss_Position(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.positionAssistType.getter()
{
  return CLP_LogEntry_PrivateData_SignalEnvironmentInfo.fidelityLevel.getter(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.positionAssistType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_InjectAssistancePosition.positionAssistType.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 24);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_InjectAssistancePosition.hasPositionAssistType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 24)) != 4;
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistancePosition.clearPositionAssistType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 24)) = 4;
}

uint64_t Proto_Gpsd_InjectAssistancePosition.altitudeValid.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.altitudeValid.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t (*Proto_Gpsd_InjectAssistancePosition.altitudeValid.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_InjectAssistancePosition.hasAltitudeValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 28)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistancePosition.clearAltitudeValid()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 28)) = 2;
}

uint64_t Proto_Gpsd_InjectAssistancePosition.machContinuousTimeNs.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 32));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gpsd_InjectAssistancePosition.machContinuousTimeNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  v4 = v1 + *(int *)(result + 32);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_InjectAssistancePosition.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_InjectAssistancePosition.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistancePosition.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseUncNanoseconds()(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t variable initialization expression of Proto_Gpsd_InjectAssistancePosition._position@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of CLP_LogEntry_AONLoc_Request._resultOptions(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.gpsNanoseconds.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.gpsNanoseconds.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t (*Proto_Gpsd_InjectAssistanceTime.gpsNanoseconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_InjectAssistanceTime.hasGpsNanoseconds.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistanceTime.clearGpsNanoseconds()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.uncertaintyNanoseconds.getter()
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.uncertaintyNanoseconds.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.setter(a1, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t (*Proto_Gpsd_InjectAssistanceTime.uncertaintyNanoseconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_InjectAssistanceTime.hasUncertaintyNanoseconds.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistanceTime.clearUncertaintyNanoseconds()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.machContinuousTimeNs.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0) + 28));
  if (v1[8])
    return 0;
  else
    return *(_QWORD *)v1;
}

uint64_t Proto_Gpsd_InjectAssistanceTime.machContinuousTimeNs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  v4 = v1 + *(int *)(result + 28);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_InjectAssistanceTime.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_InjectAssistanceTime.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

Swift::Void __swiftcall Proto_Gpsd_InjectAssistanceTime.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t Proto_Gpsd_DeleteGnssData.deleteFlags.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t Proto_Gpsd_DeleteGnssData.deleteFlags.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t (*Proto_Gpsd_DeleteGnssData.deleteFlags.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_DeleteGnssData(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_DeleteGnssData.hasDeleteFlags.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

Swift::Void __swiftcall Proto_Gpsd_DeleteGnssData.clearDeleteFlags()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t Proto_Gpsd_SetNmeaHandler.nmeaMask.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t Proto_Gpsd_SetNmeaHandler.nmeaMask.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t (*Proto_Gpsd_SetNmeaHandler.nmeaMask.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetNmeaHandler(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetNmeaHandler.hasNmeaMask.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

Swift::Void __swiftcall Proto_Gpsd_SetNmeaHandler.clearNmeaMask()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t Proto_Gpsd_SetAssistancePressure.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.getter(type metadata accessor for Proto_Gpsd_SetAssistancePressure, a1);
}

uint64_t Proto_Gpsd_SetAssistancePressure.unknownFields.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t (*Proto_Gpsd_SetAssistancePressure.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_SetAssistanceAccel.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAccel, a1);
}

uint64_t Proto_Gpsd_SetAssistanceAccel.unknownFields.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t (*Proto_Gpsd_SetAssistanceAccel.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_SetAssistanceGyro.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.getter(type metadata accessor for Proto_Gpsd_SetAssistanceGyro, a1);
}

uint64_t Proto_Gpsd_SetAssistanceGyro.unknownFields.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t (*Proto_Gpsd_SetAssistanceGyro.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_SetAssistanceDem.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t Proto_Gpsd_SetAssistanceDem.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t (*Proto_Gpsd_SetAssistanceDem.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceDem(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceDem.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceDem.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

double Proto_Gpsd_SetAssistanceDem.ellipsoidalAltitudeWgs84.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t Proto_Gpsd_SetAssistanceDem.ellipsoidalAltitudeWgs84.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceDem.ellipsoidalAltitudeWgs84.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceDem(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceDem.hasEllipsoidalAltitudeWgs84.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceDem.clearEllipsoidalAltitudeWgs84()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

double Proto_Gpsd_SetAssistanceDem.altitudeUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t Proto_Gpsd_SetAssistanceDem.altitudeUncertainty.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceDem.altitudeUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceDem(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceDem.hasAltitudeUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceDem.clearAltitudeUncertainty()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

double Proto_Gpsd_SetAssistanceMapVector.segmentStartLatitude.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.segmentStartLatitude.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.segmentStartLatitude.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasSegmentStartLatitude.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearSegmentStartLatitude()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

double Proto_Gpsd_SetAssistanceMapVector.segmentStartLongitude.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.segmentStartLongitude.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.segmentStartLongitude.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasSegmentStartLongitude.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearSegmentStartLongitude()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.altitudeValid.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.altitudeValid.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.altitudeValid.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasAltitudeValid.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 32)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearAltitudeValid()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 32)) = 2;
}

double Proto_Gpsd_SetAssistanceMapVector.segmentStartAltWgs84.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 36);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.segmentStartAltWgs84.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v4 = v1 + *(int *)(result + 36);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.segmentStartAltWgs84.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasSegmentStartAltWgs84.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 36) + 8) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearSegmentStartAltWgs84()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 36);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

double Proto_Gpsd_SetAssistanceMapVector.segmentLengthM.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 40);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.segmentLengthM.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v4 = v1 + *(int *)(result + 40);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.segmentLengthM.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasSegmentLengthM.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 40) + 8) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearSegmentLengthM()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 40);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

double Proto_Gpsd_SetAssistanceMapVector.segmentDirectionDeg.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 44);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.segmentDirectionDeg.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v4 = v1 + *(int *)(result + 44);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.segmentDirectionDeg.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasSegmentDirectionDeg.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 44) + 8) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearSegmentDirectionDeg()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 44);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

double Proto_Gpsd_SetAssistanceMapVector.segmentWidthM.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 48);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.segmentWidthM.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v4 = v1 + *(int *)(result + 48);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.segmentWidthM.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasSegmentWidthM.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 48) + 8) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearSegmentWidthM()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 48);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isFreeway.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 52)) & 1;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isFreeway.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.isFreeway.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 52);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasIsFreeway.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 52)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearIsFreeway()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 52)) = 2;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isRailway.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 56)) & 1;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isRailway.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.isRailway.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 56);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasIsRailway.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 56)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearIsRailway()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 56)) = 2;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isOneWayRoad.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 60)) & 1;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isOneWayRoad.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  *(_BYTE *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.isOneWayRoad.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 60);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasIsOneWayRoad.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 60)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearIsOneWayRoad()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 60)) = 2;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isTunnel.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 64)) & 1;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isTunnel.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.isTunnel.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 64);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasIsTunnel.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 64)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearIsTunnel()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 64)) = 2;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isBridge.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 68)) & 1;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.isBridge.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMapVector.isBridge.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 68);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMapVector.hasIsBridge.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 68)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMapVector.clearIsBridge()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0) + 68)) = 2;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t (*Proto_Gpsd_SetAssistanceMotionActivityContext.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMotionActivityContext.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMotionActivityContext.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.context.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 24));
  if (v1 == 10)
    return 1;
  else
    return v1;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.context.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMotionActivityContext.context.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 24);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 10)
    LOBYTE(v4) = 1;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMotionActivityContext.hasContext.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 24)) != 10;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMotionActivityContext.clearContext()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 24)) = 10;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.movingState.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 28));
  if (v1 == 5)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.movingState.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMotionActivityContext.movingState.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 28);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 5)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMotionActivityContext.hasMovingState.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 28)) != 5;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMotionActivityContext.clearMovingState()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 28)) = 5;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.motionReliability.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 32));
  if (v1 == 6)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.motionReliability.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMotionActivityContext.motionReliability.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 32);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMotionActivityContext.hasMotionReliability.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 32)) != 6;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMotionActivityContext.clearMotionReliability()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0) + 32)) = 6;
}

uint64_t Proto_Gpsd_SetAssistanceMountState.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t Proto_Gpsd_SetAssistanceMountState.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t (*Proto_Gpsd_SetAssistanceMountState.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceMountState.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMountState.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t Proto_Gpsd_SetAssistanceMountState.mountState.getter()
{
  return CLP_LogEntry_PrivateData_SignalEnvironmentInfo.fidelityLevel.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t Proto_Gpsd_SetAssistanceMountState.mountState.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceMountState.mountState.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0) + 24);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceMountState.hasMountState.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0) + 24)) != 4;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceMountState.clearMountState()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0) + 24)) = 4;
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment.signalEnvironmentType.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0) + 20));
  if (v1 == 8)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment.signalEnvironmentType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceSignalEnvironment.signalEnvironmentType.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 8)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetAssistanceSignalEnvironment.hasSignalEnvironmentType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0) + 20)) != 8;
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceSignalEnvironment.clearSignalEnvironmentType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0) + 20)) = 8;
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t (*Proto_Gpsd_SetAssistanceSpeedConstraint.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceSpeedConstraint.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceSpeedConstraint.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

double Proto_Gpsd_SetAssistanceSpeedConstraint.duration.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.duration.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceSpeedConstraint.duration.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceSpeedConstraint.hasDuration.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceSpeedConstraint.clearDuration()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

double Proto_Gpsd_SetAssistanceSpeedConstraint.speedLowerBound.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.speedLowerBound.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceSpeedConstraint.speedLowerBound.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceSpeedConstraint.hasSpeedLowerBound.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceSpeedConstraint.clearSpeedLowerBound()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

double Proto_Gpsd_SetAssistanceSpeedConstraint.speedUpperBound.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0) + 32);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.speedUpperBound.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v4 = v1 + *(int *)(result + 32);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_SetAssistanceSpeedConstraint.speedUpperBound.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceSpeedConstraint.hasSpeedUpperBound.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseUncNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceSpeedConstraint.clearSpeedUpperBound()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseUncNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t (*Proto_Gpsd_SetAssistanceAlongTrackVelocity.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceAlongTrackVelocity.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceAlongTrackVelocity.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

double Proto_Gpsd_SetAssistanceAlongTrackVelocity.velAlongTrack.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity.velAlongTrack.setter(double a1)
{
  return CLP_LogEntry_PrivateData_SvTime.timeUncNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceAlongTrackVelocity.velAlongTrack.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceAlongTrackVelocity.hasVelAlongTrack.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceAlongTrackVelocity.clearVelAlongTrack()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

double Proto_Gpsd_SetAssistanceAlongTrackVelocity.velAlongTrackUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity.velAlongTrackUncertainty.setter(double a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.accumulatedPhaseNanoseconds.setter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t (*Proto_Gpsd_SetAssistanceAlongTrackVelocity.velAlongTrackUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetAssistanceAlongTrackVelocity.hasVelAlongTrackUncertainty.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.hasAccumulatedPhaseNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

Swift::Void __swiftcall Proto_Gpsd_SetAssistanceAlongTrackVelocity.clearVelAlongTrackUncertainty()()
{
  CLP_LogEntry_PrivateData_PhaseTracking.clearAccumulatedPhaseNanoseconds()(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t Proto_Gpsd_SetThermalRiskState.machContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t Proto_Gpsd_SetThermalRiskState.machContinuousTimeNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t (*Proto_Gpsd_SetThermalRiskState.machContinuousTimeNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetThermalRiskState(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_SetThermalRiskState.hasMachContinuousTimeNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

Swift::Void __swiftcall Proto_Gpsd_SetThermalRiskState.clearMachContinuousTimeNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t Proto_Gpsd_SetThermalRiskState.thermalRiskScale.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t Proto_Gpsd_SetThermalRiskState.thermalRiskScale.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t (*Proto_Gpsd_SetThermalRiskState.thermalRiskScale.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetThermalRiskState(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_SetThermalRiskState.hasThermalRiskScale.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

Swift::Void __swiftcall Proto_Gpsd_SetThermalRiskState.clearThermalRiskScale()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.isEnabled.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.getter(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.isEnabled.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t (*Proto_Gpsd_SetConfigSimulatorMode.isEnabled.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetConfigSimulatorMode.hasIsEnabled.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigSimulatorMode.clearIsEnabled()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.defaultGpsWeek.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.defaultGpsWeek.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t (*Proto_Gpsd_SetConfigSimulatorMode.defaultGpsWeek.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_SetConfigSimulatorMode.hasDefaultGpsWeek.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigSimulatorMode.clearDefaultGpsWeek()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.enableFlags.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.getter(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.enableFlags.setter(int a1)
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t (*Proto_Gpsd_SetConfigEnableGnssConstellations.enableFlags.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_SetConfigEnableGnssConstellations.hasEnableFlags.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.hasSlotNum.getter(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigEnableGnssConstellations.clearEnableFlags()()
{
  CLP_LogEntry_PrivateData_GlonassSlotInfo.clearSlotNum()(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.disableFlags.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.disableFlags.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t (*Proto_Gpsd_SetConfigEnableGnssConstellations.disableFlags.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_SetConfigEnableGnssConstellations.hasDisableFlags.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigEnableGnssConstellations.clearDisableFlags()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.enableL1.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.getter(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.enableL1.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t (*Proto_Gpsd_SetConfigRfBandEnable.enableL1.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetConfigRfBandEnable.hasEnableL1.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigRfBandEnable.clearEnableL1()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.enableL5.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.getter(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.enableL5.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t (*Proto_Gpsd_SetConfigRfBandEnable.enableL5.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetConfigRfBandEnable.hasEnableL5.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0) + 24)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigRfBandEnable.clearEnableL5()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0) + 24)) = 2;
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.isEnabled.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.getter(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.isEnabled.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t (*Proto_Gpsd_SetConfigDutyCycling.isEnabled.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_SetConfigDutyCycling.hasIsEnabled.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_SetConfigDutyCycling.clearIsEnabled()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_TerminationImminent.reason.getter()
{
  return Proto_Gpsd_TerminationImminent.reason.getter(type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t Proto_Gpsd_TerminationImminent.reason.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_TerminationImminent.reason.setter(a1, a2, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t (*Proto_Gpsd_TerminationImminent.reason.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_TerminationImminent(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_PrivateData_XtraFileAvailable.where.modify;
}

BOOL Proto_Gpsd_TerminationImminent.hasReason.getter()
{
  return Proto_Gpsd_TerminationImminent.hasReason.getter(type metadata accessor for Proto_Gpsd_TerminationImminent);
}

Swift::Void __swiftcall Proto_Gpsd_TerminationImminent.clearReason()()
{
  Proto_Gpsd_TerminationImminent.clearReason()(type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t Proto_Gpsd_ExitMessage.reason.getter()
{
  return Proto_Gpsd_TerminationImminent.reason.getter(type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t Proto_Gpsd_TerminationImminent.reason.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 20));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t Proto_Gpsd_ExitMessage.reason.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_TerminationImminent.reason.setter(a1, a2, type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t Proto_Gpsd_TerminationImminent.reason.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 20));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*Proto_Gpsd_ExitMessage.reason.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_ExitMessage(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_PrivateData_XtraFileAvailable.where.modify;
}

BOOL Proto_Gpsd_ExitMessage.hasReason.getter()
{
  return Proto_Gpsd_TerminationImminent.hasReason.getter(type metadata accessor for Proto_Gpsd_ExitMessage);
}

BOOL Proto_Gpsd_TerminationImminent.hasReason.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 20) + 8) != 0;
}

Swift::Void __swiftcall Proto_Gpsd_ExitMessage.clearReason()()
{
  Proto_Gpsd_TerminationImminent.clearReason()(type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t Proto_Gpsd_TerminationImminent.clearReason()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(v1 + *(int *)(a1(0) + 20));
  result = swift_bridgeObjectRelease();
  *v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t Proto_Gpsd_RecoveryStatistics.recoveryStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 24), (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  v8 = a1 + v7[6];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
}

int *Proto_Gpsd_RecoveryStatistics.RecoveryStatus.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  *(_BYTE *)(a1 + result[5]) = 2;
  v3 = a1 + result[6];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  return result;
}

uint64_t Proto_Gpsd_RecoveryStatistics.recoveryStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0) + 24);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  v4 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Proto_Gpsd_RecoveryStatistics.recoveryStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v11 = &v9[v6[6]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  }
  return Proto_Gpsd_RecoveryStatistics.recoveryStatus.modify;
}

void Proto_Gpsd_RecoveryStatistics.recoveryStatus.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_AONLoc_Request.resultOptions.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

BOOL Proto_Gpsd_RecoveryStatistics.hasRecoveryStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 24), (uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v5 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  return v6;
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.clearRecoveryStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0) + 24);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v2 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Proto_Gpsd_RecoveryStatistics.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics, a1);
}

uint64_t Proto_Gpsd_RecoveryStatistics.unknownFields.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.setter(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.recoveryAttempted.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.recoveryAttempted.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryStatus.recoveryAttempted.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryStatus.hasRecoveryAttempted.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryStatus.clearRecoveryAttempted()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.numRecoveryAttempts.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.numRecoveryAttempts.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryStatus.numRecoveryAttempts.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryStatus.hasNumRecoveryAttempts.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryStatus.clearNumRecoveryAttempts()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.recovered.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.recovered.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryStatus.recovered.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryStatus.hasRecovered.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 28)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryStatus.clearRecovered()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 28)) = 2;
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.inOutRecovery.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.inOutRecovery.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.towDecoded.setter(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryStatus.inOutRecovery.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryStatus.hasInOutRecovery.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 32)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryStatus.clearInOutRecovery()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0) + 32)) = 2;
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.file.getter()
{
  return Proto_Gpsd_TerminationImminent.reason.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.file.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_TerminationImminent.reason.setter(a1, a2, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryPoint.file.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_PrivateData_XtraFileAvailable.where.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hasFile.getter()
{
  return Proto_Gpsd_TerminationImminent.hasReason.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryPoint.clearFile()()
{
  Proto_Gpsd_TerminationImminent.clearReason()(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.lineNumber.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.lineNumber.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryPoint.lineNumber.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hasLineNumber.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryPoint.clearLineNumber()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.getter()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.setter(a1, a2, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t (*Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_PrivateData_XtraFileAvailable.where.modify;
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hasFunction.getter()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hasFunction.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

Swift::Void __swiftcall Proto_Gpsd_RecoveryStatistics.RecoveryPoint.clearFunction()()
{
  Proto_Gpsd_RecoveryStatistics.RecoveryPoint.clearFunction()(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

int *Proto_Gpsd_RecoveryStatistics.RecoveryPoint.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0);
  v3 = (_QWORD *)(a1 + result[5]);
  *v3 = 0;
  v3[1] = 0;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = (_QWORD *)(a1 + result[7]);
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t variable initialization expression of Proto_Gpsd_RecoveryStatistics._recoveryStatus@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of CLP_LogEntry_AONLoc_Request._resultOptions(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, a1);
}

uint64_t Proto_Gpsd_LtlInfoRequest.infoType.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0) + 20));
  if (v1 == 5)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_LtlInfoRequest.infoType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfoRequest.infoType.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 5)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_LtlInfoRequest.hasInfoType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0) + 20)) != 5;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfoRequest.clearInfoType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0) + 20)) = 5;
}

uint64_t Proto_Gpsd_LtlInfo.success.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 16) & 1;
}

uint64_t Proto_Gpsd_LtlInfo.success.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 16) = a1 & 1;
  return result;
}

void (*Proto_Gpsd_LtlInfo.success.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 16) & 1;
  return Proto_Gpsd_LtlInfo.success.modify;
}

void Proto_Gpsd_LtlInfo.success.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80));
  swift_beginAccess();
  *(_BYTE *)(v10 + 16) = v4;
  free((void *)v3);
}

BOOL Proto_Gpsd_LtlInfo.hasSuccess.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 16) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearSuccess()()
{
  Proto_Gnss_Emergency_Init.clearPosMethod()(type metadata accessor for Proto_Gpsd_LtlInfo, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass, (void (*)(uint64_t))Proto_Gpsd_LtlInfo._StorageClass.init(copying:), 2);
}

uint64_t Proto_Gpsd_LtlInfo.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 24))
    return 0;
  else
    return *(unsigned int *)(v1 + 20);
}

uint64_t Proto_Gpsd_LtlInfo.errorCode.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_DWORD *)(v6 + 20) = a1;
  *(_BYTE *)(v6 + 24) = 0;
  return result;
}

void (*Proto_Gpsd_LtlInfo.errorCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(_DWORD *)(v5 + 20);
  if (*(_BYTE *)(v5 + 24))
    v6 = 0;
  *((_DWORD *)v3 + 20) = v6;
  return Proto_Gpsd_LtlInfo.errorCode.modify;
}

void Proto_Gpsd_LtlInfo.errorCode.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 20) = v4;
  *(_BYTE *)(v10 + 24) = 0;
  free((void *)v3);
}

BOOL Proto_Gpsd_LtlInfo.hasErrorCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 24) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearErrorCode()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_DWORD *)(v4 + 20) = 0;
  *(_BYTE *)(v4 + 24) = 1;
}

uint64_t Proto_Gpsd_LtlInfo.infoType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 25) == 5)
    return 0;
  else
    return *(unsigned __int8 *)(v1 + 25);
}

uint64_t Proto_Gpsd_LtlInfo.infoType.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v1 + v3) = v4;
    swift_release();
  }
  v6 = *(_QWORD *)(v1 + v3);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 25) = a1;
  return result;
}

void (*Proto_Gpsd_LtlInfo.infoType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v5 + 25);
  if (v6 == 5)
    LOBYTE(v6) = 0;
  *((_BYTE *)v3 + 84) = v6;
  return Proto_Gpsd_LtlInfo.infoType.modify;
}

void Proto_Gpsd_LtlInfo.infoType.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v8 = swift_allocObject();
    v9 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v9);
    *(_QWORD *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 25);
  swift_beginAccess();
  *v10 = v4;
  free((void *)v3);
}

BOOL Proto_Gpsd_LtlInfo.hasInfoType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_beginAccess();
  return *(_BYTE *)(v1 + 25) != 5;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearInfoType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v2 = swift_allocObject();
    v3 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v3);
    *(_QWORD *)(v0 + v1) = v2;
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + v1);
  swift_beginAccess();
  *(_BYTE *)(v4 + 25) = 5;
}

uint64_t Proto_Gpsd_LtlInfo.initialParams.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  UnknownStorage.init()();
  v8 = a1 + v7[5];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1 + v7[6];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + v7[7];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + v7[8];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a1 + v7[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a1 + v7[10];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  *(_BYTE *)(a1 + v7[11]) = 2;
  v14 = a1 + v7[12];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a1 + v7[13];
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a1 + v7[14];
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  v17 = a1 + v7[15];
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
}

int *Proto_Gpsd_LtlInfo.LtlInitialParams.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  result = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v3 = a1 + result[5];
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  v4 = a1 + result[6];
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  v5 = a1 + result[7];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a1 + result[8];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1 + result[9];
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1 + result[10];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  *(_BYTE *)(a1 + result[11]) = 2;
  v9 = a1 + result[12];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a1 + result[13];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1 + result[14];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  v12 = a1 + result[15];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.initialParams.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  v13 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_LtlInfo.initialParams.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[v6[5]];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[v6[6]];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v13 = &v9[v6[7]];
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    v14 = &v9[v6[8]];
    *(_DWORD *)v14 = 0;
    v14[4] = 1;
    v15 = &v9[v6[9]];
    *(_DWORD *)v15 = 0;
    v15[4] = 1;
    v16 = &v9[v6[10]];
    *(_DWORD *)v16 = 0;
    v16[4] = 1;
    v9[v6[11]] = 2;
    v17 = &v9[v6[12]];
    *(_DWORD *)v17 = 0;
    v17[4] = 1;
    v18 = &v9[v6[13]];
    *(_DWORD *)v18 = 0;
    v18[4] = 1;
    v19 = &v9[v6[14]];
    *(_DWORD *)v19 = 0;
    v19[4] = 1;
    v20 = &v9[v6[15]];
    *(_DWORD *)v20 = 0;
    v20[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  }
  return Proto_Gpsd_LtlInfo.initialParams.modify;
}

void Proto_Gpsd_LtlInfo.initialParams.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_LtlInfo.initialParams.setter, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

BOOL Proto_Gpsd_LtlInfo.hasInitialParams.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?, type metadata accessor for Proto_Gpsd_LtlInfo, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearInitialParams()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_LtlInfo.lutParams.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  v7 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  v8 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v8;
  UnknownStorage.init()();
  v9 = (char *)a1 + *(int *)(v7 + 28);
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = (char *)a1 + *(int *)(v7 + 32);
  *(_DWORD *)v10 = 0;
  v10[4] = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v5;
  char *v6;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  v3 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  result = UnknownStorage.init()();
  v5 = (char *)a1 + *(int *)(v3 + 28);
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  v6 = (char *)a1 + *(int *)(v3 + 32);
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.lutParams.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  v13 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_LtlInfo.lutParams.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    *v9 = MEMORY[0x24BEE4AF8];
    v9[1] = v11;
    UnknownStorage.init()();
    v12 = (char *)v9 + *(int *)(v6 + 28);
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    v13 = (char *)v9 + *(int *)(v6 + 32);
    *(_DWORD *)v13 = 0;
    v13[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  }
  return Proto_Gpsd_LtlInfo.lutParams.modify;
}

void Proto_Gpsd_LtlInfo.lutParams.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_LtlInfo.lutParams.setter, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

BOOL Proto_Gpsd_LtlInfo.hasLutParams.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?, type metadata accessor for Proto_Gpsd_LtlInfo, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearLutParams()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_LtlInfo.currentSrcCalib.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v6, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  v7 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  *a1 = MEMORY[0x24BEE4AF8];
  UnknownStorage.init()();
  v8 = (char *)a1 + *(int *)(v7 + 24);
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  v9 = (char *)a1 + *(int *)(v7 + 28);
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  char *v5;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  result = UnknownStorage.init()();
  v4 = (char *)a1 + *(int *)(v2 + 24);
  *(_DWORD *)v4 = 0;
  v4[4] = 1;
  v5 = (char *)a1 + *(int *)(v2 + 28);
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.currentSrcCalib.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  v13 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_LtlInfo.currentSrcCalib.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    v11 = (char *)v9 + *(int *)(v6 + 24);
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = (char *)v9 + *(int *)(v6 + 28);
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  }
  return Proto_Gpsd_LtlInfo.currentSrcCalib.modify;
}

void Proto_Gpsd_LtlInfo.currentSrcCalib.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_LtlInfo.currentSrcCalib.setter, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

BOOL Proto_Gpsd_LtlInfo.hasCurrentSrcCalib.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?, type metadata accessor for Proto_Gpsd_LtlInfo, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearCurrentSrcCalib()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_LtlInfo.racPmicAdcrPreCal.getter@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gpsd_Request.setConfigEnableGnssConstellations.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?, type metadata accessor for Proto_Gpsd_LtlInfo, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, a1);
}

uint64_t Proto_Gpsd_Request.setConfigEnableGnssConstellations.getter@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v5 + *(int *)(a2(0) + 20)) + *a3;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v14, (uint64_t)v13, a1);
  v15 = a4(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, a5, a4);
  UnknownStorage.init()();
  v16 = a5 + *(int *)(v15 + 20);
  *(_DWORD *)v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  v17 = a5 + *(int *)(v15 + 24);
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, a1);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.init()@<X0>(uint64_t a1@<X8>)
{
  return Proto_Gnss_Emergency_ClsGpsCellTime.init()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, a1);
}

uint64_t Proto_Gpsd_LtlInfo.racPmicAdcrPreCal.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v10 = swift_allocObject();
    v11 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v11);
    *(_QWORD *)(v1 + v9) = v10;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + v9);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, (uint64_t)v8, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  v13 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  outlined init with take of Proto_Gpsd_Response?((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v6, v14, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  swift_endAccess();
  return swift_release();
}

void (*Proto_Gpsd_LtlInfo.racPmicAdcrPreCal.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[4] = v5;
  v6 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v3[5] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[6] = v9;
  v10 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)v11 = 0;
    v11[4] = 1;
    v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  }
  return Proto_Gpsd_LtlInfo.racPmicAdcrPreCal.modify;
}

void Proto_Gpsd_LtlInfo.racPmicAdcrPreCal.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_PrivateData_SyncState.gpsL1.modify(a1, a2, (void (*)(void *))Proto_Gpsd_LtlInfo.racPmicAdcrPreCal.setter, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

BOOL Proto_Gpsd_LtlInfo.hasRacPmicAdcrPreCal.getter()
{
  return CLP_LogEntry_PrivateData_SyncState.hasGpsL1.getter(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?, type metadata accessor for Proto_Gpsd_LtlInfo, &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.clearRacPmicAdcrPreCal()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v5 = swift_allocObject();
    v6 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v6);
    *(_QWORD *)(v0 + v4) = v5;
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + v4);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v3, v9, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  swift_endAccess();
  swift_release();
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.ltlUpdateCount.getter()
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.ltlUpdateCount.setter(int a1)
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlLutParams.ltlUpdateCount.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlLutParams.hasLtlUpdateCount.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasBeidouRangingCode.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlLutParams.clearLtlUpdateCount()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearBeidouRangingCode()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.ltlCleanupCount.getter()
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.ltlCleanupCount.setter(int a1)
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlLutParams.ltlCleanupCount.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlLutParams.hasLtlCleanupCount.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasGalileoSpreadingCode.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlLutParams.clearLtlCleanupCount()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearGalileoSpreadingCode()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0) + 24);
  v4 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0) + 24);
  v4 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlLutParams.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.prodVersion.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.prodVersion.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.prodVersion.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.hasProdVersion.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.clearProdVersion()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.postCalVersion.getter()
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.postCalVersion.setter(int a1)
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.postCalVersion.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.hasPostCalVersion.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasBeidouRangingCode.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.clearPostCalVersion()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearBeidouRangingCode()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, a1);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.unknownFields.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.unknownFields.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  return ALFWiFiScanResultsRequester.query(options:callback:start:end:);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.adcGain.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.adcGain.setter(int a1)
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.adcGain.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.hasAdcGain.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.hasSlotNum.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.clearAdcGain()()
{
  CLP_LogEntry_PrivateData_GlonassSlotInfo.clearSlotNum()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.adcOffset.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.adcOffset.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.adcOffset.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.hasAdcOffset.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.clearAdcOffset()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c5.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c5.setter(int a1)
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.c5.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasC5.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.hasSlotNum.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearC5()()
{
  CLP_LogEntry_PrivateData_GlonassSlotInfo.clearSlotNum()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c4.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c4.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.c4.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasC4.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearC4()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c3.getter()
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c3.setter(int a1)
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.c3.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasC3.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasBeidouRangingCode.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearC3()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearBeidouRangingCode()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c2.getter()
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c2.setter(int a1)
{
  return CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate.currentModesOfOperation.setter(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.c2.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 32);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasC2.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasGalileoSpreadingCode.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearC2()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearGalileoSpreadingCode()(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c1.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 36));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c1.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v4 = v1 + *(int *)(result + 36);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.c1.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 36);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasC1.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 36) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearC1()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 36);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c0.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 40));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.c0.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.c0.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasC0.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 40) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearC0()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 40);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.coeffCalibrated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 44)) & 1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.coeffCalibrated.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.coeffCalibrated.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 44);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasCoeffCalibrated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 44)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearCoeffCalibrated()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 44)) = 2;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.refTemp.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 48));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.refTemp.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v4 = v1 + *(int *)(result + 48);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.refTemp.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 48);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasRefTemp.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 48) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearRefTemp()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 48);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.ltlCleanupFactor.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 52));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.ltlCleanupFactor.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v4 = v1 + *(int *)(result + 52);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.ltlCleanupFactor.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 52);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasLtlCleanupFactor.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 52) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearLtlCleanupFactor()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 52);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.hwID.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 56));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.hwID.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v4 = v1 + *(int *)(result + 56);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.hwID.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 56);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasHwID.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 56) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearHwID()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 56);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.clockID.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 60));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.clockID.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v4 = v1 + *(int *)(result + 60);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_LtlInfo.LtlInitialParams.clockID.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 60);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_LtlInfo.LtlInitialParams.hasClockID.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 60) + 4) & 1) == 0;
}

Swift::Void __swiftcall Proto_Gpsd_LtlInfo.LtlInitialParams.clearClockID()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0) + 60);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t variable initialization expression of Proto_Gpsd_LtlInfo._storage()
{
  return variable initialization expression of CLP_LogEntry_PrivateData_SyncState._storage(&one-time initialization token for defaultInstance);
}

uint64_t Proto_Gpsd_CntinStatusMessage.status.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0) + 20));
  if (v1 == 7)
    return 0;
  else
    return v1;
}

uint64_t Proto_Gpsd_CntinStatusMessage.status.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Proto_Gpsd_CntinStatusMessage.status.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0) + 20);
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_CntinStatusMessage.hasStatus.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0) + 20)) != 7;
}

Swift::Void __swiftcall Proto_Gpsd_CntinStatusMessage.clearStatus()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0) + 20)) = 7;
}

uint64_t Proto_Gpsd_CntinClockControl.enableCntinClock.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.getter(type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t Proto_Gpsd_CntinClockControl.enableCntinClock.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t (*Proto_Gpsd_CntinClockControl.enableCntinClock.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_CntinClockControl(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_CntinClockControl.hasEnableCntinClock.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinClockControl(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_CntinClockControl.clearEnableCntinClock()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinClockControl(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_Exception.typeDeprecated.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.getter(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t Proto_Gpsd_Exception.typeDeprecated.setter(int a1)
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.slotNum.setter(a1, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t (*Proto_Gpsd_Exception.typeDeprecated.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0) + 20);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_Exception.hasTypeDeprecated.getter()
{
  return CLP_LogEntry_PrivateData_GlonassSlotInfo.hasSlotNum.getter(type metadata accessor for Proto_Gpsd_Exception);
}

Swift::Void __swiftcall Proto_Gpsd_Exception.clearTypeDeprecated()()
{
  CLP_LogEntry_PrivateData_GlonassSlotInfo.clearSlotNum()(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t Proto_Gpsd_Exception.payload.getter()
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.getter(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t Proto_Gpsd_Exception.payload.setter(int a1)
{
  return CLP_LogEntry_PrivateData_LeapSecondChange.newLeapSecond.setter(a1, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t (*Proto_Gpsd_Exception.payload.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0) + 24);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_Exception.hasPayload.getter()
{
  return CLP_LogEntry_PrivateData_SvMeasurementUsage.hasResidual.getter(type metadata accessor for Proto_Gpsd_Exception);
}

Swift::Void __swiftcall Proto_Gpsd_Exception.clearPayload()()
{
  CLP_LogEntry_PrivateData_SvMeasurementUsage.clearResidual()(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t Proto_Gpsd_Exception.typeInteger.getter()
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.getter(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t Proto_Gpsd_Exception.typeInteger.setter(int a1)
{
  return CLP_LogEntry_PrivateData_WifiAccessPoint.rssiDb.setter(a1, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t (*Proto_Gpsd_Exception.typeInteger.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return CLP_LogEntry_AONLoc_Request.processID.modify;
}

BOOL Proto_Gpsd_Exception.hasTypeInteger.getter()
{
  return CLP_LogEntry_PrivateData_ConstellationId.hasBeidouRangingCode.getter(type metadata accessor for Proto_Gpsd_Exception);
}

Swift::Void __swiftcall Proto_Gpsd_Exception.clearTypeInteger()()
{
  CLP_LogEntry_PrivateData_ConstellationId.clearBeidouRangingCode()(type metadata accessor for Proto_Gpsd_Exception);
}

double Proto_Gpsd_AskBasebandReset.machContinuousSeconds.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0) + 20);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t Proto_Gpsd_AskBasebandReset.machContinuousSeconds.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v4 = v1 + *(int *)(result + 20);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*Proto_Gpsd_AskBasebandReset.machContinuousSeconds.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_AskBasebandReset.hasMachContinuousSeconds.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

Swift::Void __swiftcall Proto_Gpsd_AskBasebandReset.clearMachContinuousSeconds()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t Proto_Gpsd_AskBasebandReset.reasonCode.getter()
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t Proto_Gpsd_AskBasebandReset.reasonCode.setter(uint64_t a1)
{
  return CLP_LogEntry_AONLoc_Response.machContinuousTimeNs.setter(a1, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t (*Proto_Gpsd_AskBasebandReset.reasonCode.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_AskBasebandReset.hasReasonCode.getter()
{
  return CLP_LogEntry_AONLoc_Response.hasMachContinuousTimeNs.getter(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

Swift::Void __swiftcall Proto_Gpsd_AskBasebandReset.clearReasonCode()()
{
  CLP_LogEntry_AONLoc_Response.clearMachContinuousTimeNs()(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t Proto_Gpsd_AskBasebandReset.reasonString.getter()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.getter(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 28));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t Proto_Gpsd_AskBasebandReset.reasonString.setter(uint64_t a1, uint64_t a2)
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.setter(a1, a2, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.function.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 28));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*Proto_Gpsd_AskBasebandReset.reasonString.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_PrivateData_XtraFileAvailable.where.modify;
}

BOOL Proto_Gpsd_AskBasebandReset.hasReasonString.getter()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hasFunction.getter(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

BOOL Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hasFunction.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 28) + 8) != 0;
}

Swift::Void __swiftcall Proto_Gpsd_AskBasebandReset.clearReasonString()()
{
  Proto_Gpsd_RecoveryStatistics.RecoveryPoint.clearFunction()(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.clearFunction()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(v1 + *(int *)(a1(0) + 28));
  result = swift_bridgeObjectRelease();
  *v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t Proto_Gpsd_LogEntry.printTimeMachContinuousNs.getter()
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t Proto_Gpsd_LogEntry.printTimeMachContinuousNs.setter(uint64_t a1)
{
  return CLP_LogEntry_PrivateData_PhaseTracking.phaseStartTimeNanoseconds.setter(a1, type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t (*Proto_Gpsd_LogEntry.printTimeMachContinuousNs.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8))
    v5 = 0;
  else
    v5 = *v4;
  *(_QWORD *)a1 = v5;
  return CLP_LogEntry_AONLoc_Request.machContinuousTimeNs.modify;
}

BOOL Proto_Gpsd_LogEntry.hasPrintTimeMachContinuousNs.getter()
{
  return CLP_LogEntry_PrivateData_SvTime.hasTimeNanoseconds.getter(type metadata accessor for Proto_Gpsd_LogEntry);
}

Swift::Void __swiftcall Proto_Gpsd_LogEntry.clearPrintTimeMachContinuousNs()()
{
  CLP_LogEntry_PrivateData_SvTime.clearTimeNanoseconds()(type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t Proto_Gpsd_LogEntry.comment.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 24));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Proto_Gpsd_LogEntry.comment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Proto_Gpsd_LogEntry.comment.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return CLP_LogEntry_PrivateData_XtraFileAvailable.where.modify;
}

BOOL Proto_Gpsd_LogEntry.hasComment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 24) + 8) != 0;
}

Swift::Void __swiftcall Proto_Gpsd_LogEntry.clearComment()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 24));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t Proto_Gpsd_LogEntry.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 28), (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  v7 = type metadata accessor for Proto_Gpsd_Request(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_Request);
  UnknownStorage.init()();
  v8 = *(int *)(v7 + 20);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = static Proto_Gpsd_Request._StorageClass.defaultInstance;
  swift_retain();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
}

uint64_t Proto_Gpsd_LogEntry.request.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 28);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for Proto_Gpsd_Request);
  v4 = type metadata accessor for Proto_Gpsd_Request(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Proto_Gpsd_LogEntry.request.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gpsd_Request(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 28);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = *(int *)(v6 + 20);
    if (one-time initialization token for defaultInstance != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = static Proto_Gpsd_Request._StorageClass.defaultInstance;
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Request);
  }
  return Proto_Gpsd_LogEntry.request.modify;
}

void Proto_Gpsd_LogEntry.request.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_AONLoc_Request.resultOptions.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gpsd_Request?, type metadata accessor for Proto_Gpsd_Request);
}

BOOL Proto_Gpsd_LogEntry.hasRequest.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 28), (uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  v5 = type metadata accessor for Proto_Gpsd_Request(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  return v6;
}

Swift::Void __swiftcall Proto_Gpsd_LogEntry.clearRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 28);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  v2 = type metadata accessor for Proto_Gpsd_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Proto_Gpsd_LogEntry.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 32), (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  v7 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_Response);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 61;
  v8 = a1 + v7[6];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a1 + v7[7]) = 10;
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
}

uint64_t Proto_Gpsd_LogEntry.response.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 32);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for Proto_Gpsd_Response);
  v4 = type metadata accessor for Proto_Gpsd_Response(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Proto_Gpsd_LogEntry.response.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 32);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 61;
    v11 = &v9[v6[6]];
    *(_QWORD *)v11 = 0;
    v11[8] = 1;
    v9[v6[7]] = 10;
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Response);
  }
  return Proto_Gpsd_LogEntry.response.modify;
}

void Proto_Gpsd_LogEntry.response.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_AONLoc_Request.resultOptions.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gpsd_Response?, type metadata accessor for Proto_Gpsd_Response);
}

BOOL Proto_Gpsd_LogEntry.hasResponse.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 32), (uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  v5 = type metadata accessor for Proto_Gpsd_Response(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  return v6;
}

Swift::Void __swiftcall Proto_Gpsd_LogEntry.clearResponse()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 32);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  v2 = type metadata accessor for Proto_Gpsd_Response(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Proto_Gpsd_LogEntry.indication.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + *(int *)(v6 + 36), (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  v7 = type metadata accessor for Proto_Gpsd_Indication(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    return outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, a1, type metadata accessor for Proto_Gpsd_Indication);
  UnknownStorage.init()();
  v8 = *(int *)(v7 + 20);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  *(_QWORD *)(a1 + v8) = static Proto_Gpsd_Indication._StorageClass.defaultInstance;
  swift_retain();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
}

uint64_t Proto_Gpsd_LogEntry.indication.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 36);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v3, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(a1, v3, type metadata accessor for Proto_Gpsd_Indication);
  v4 = type metadata accessor for Proto_Gpsd_Indication(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*Proto_Gpsd_LogEntry.indication.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for Proto_Gpsd_Indication(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 36);
  *((_DWORD *)v3 + 12) = v10;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1 + v10, (uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v11 = *(int *)(v6 + 20);
    if (one-time initialization token for defaultInstance != -1)
      swift_once();
    *(_QWORD *)&v9[v11] = static Proto_Gpsd_Indication._StorageClass.defaultInstance;
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v5, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  }
  else
  {
    outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Indication);
  }
  return Proto_Gpsd_LogEntry.indication.modify;
}

void Proto_Gpsd_LogEntry.indication.modify(uint64_t a1, char a2)
{
  CLP_LogEntry_AONLoc_Request.resultOptions.modify(a1, a2, &demangling cache variable for type metadata for Proto_Gpsd_Indication?, type metadata accessor for Proto_Gpsd_Indication);
}

BOOL Proto_Gpsd_LogEntry.hasIndication.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + *(int *)(v4 + 36), (uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  v5 = type metadata accessor for Proto_Gpsd_Indication(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v3, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  return v6;
}

Swift::Void __swiftcall Proto_Gpsd_LogEntry.clearIndication()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0) + 36);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v1, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  v2 = type metadata accessor for Proto_Gpsd_Indication(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t Proto_Gpsd_LogEntry.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  UnknownStorage.init()();
  v2 = (int *)type metadata accessor for Proto_Gpsd_LogEntry(0);
  v3 = a1 + v2[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + v2[6]);
  *v4 = 0;
  v4[1] = 0;
  v5 = a1 + v2[7];
  v6 = type metadata accessor for Proto_Gpsd_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a1 + v2[8];
  v8 = type metadata accessor for Proto_Gpsd_Response(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = a1 + v2[9];
  v10 = type metadata accessor for Proto_Gpsd_Indication(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
}

uint64_t variable initialization expression of Proto_Gpsd_LogEntry._request@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of CLP_LogEntry_AONLoc_Request._resultOptions(type metadata accessor for Proto_Gpsd_Request, a1);
}

uint64_t variable initialization expression of Proto_Gpsd_LogEntry._response@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of CLP_LogEntry_AONLoc_Request._resultOptions(type metadata accessor for Proto_Gpsd_Response, a1);
}

uint64_t variable initialization expression of Proto_Gpsd_LogEntry._indication@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of CLP_LogEntry_AONLoc_Request._resultOptions(type metadata accessor for Proto_Gpsd_Indication, a1);
}

uint64_t Proto_Gpsd_StartContext.enableLteBand13Filter.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.getter(type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t Proto_Gpsd_StartContext.enableLteBand13Filter.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.codeLock.setter(a1, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t (*Proto_Gpsd_StartContext.enableLteBand13Filter.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_StartContext.hasEnableLteBand13Filter.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 20)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_StartContext.clearEnableLteBand13Filter()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 20)) = 2;
}

uint64_t Proto_Gpsd_StartContext.enableBenignEnvironmentPowerSaving.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.getter(type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t Proto_Gpsd_StartContext.enableBenignEnvironmentPowerSaving.setter(char a1)
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.navBit.setter(a1, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t (*Proto_Gpsd_StartContext.enableBenignEnvironmentPowerSaving.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_StartContext.hasEnableBenignEnvironmentPowerSaving.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 24)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_StartContext.clearEnableBenignEnvironmentPowerSaving()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 24)) = 2;
}

uint64_t Proto_Gpsd_StartContext.inRegionWhereColdSearchesShouldPrioritizeBeidou.getter()
{
  return CLP_LogEntry_PrivateData_GpsL1SyncState.subframe.getter(type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t Proto_Gpsd_StartContext.inRegionWhereColdSearchesShouldPrioritizeBeidou.setter(char a1)
{
  return CLP_LogEntry_AONLoc_WiFiIndication.isLastBatch.setter(a1, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t (*Proto_Gpsd_StartContext.inRegionWhereColdSearchesShouldPrioritizeBeidou.modify(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return CLP_LogEntry_AONLoc_Request.ResultOptions.repeat.modify;
}

BOOL Proto_Gpsd_StartContext.hasInRegionWhereColdSearchesShouldPrioritizeBeidou.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 28)) != 2;
}

Swift::Void __swiftcall Proto_Gpsd_StartContext.clearInRegionWhereColdSearchesShouldPrioritizeBeidou()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0) + 28)) = 2;
}

uint64_t Proto_Gpsd_SuplInitDecodeResult._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SuplInitDecodeResult._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SuplInitDecodeResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SuplInitDecodeResult._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SuplInitDecodeResult@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SuplInitDecodeResult._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_CompressionType._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CompressionType._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_CompressionType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CompressionType._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_CompressionType@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CompressionType._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfoType._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfoType._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfoType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfoType._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfoType@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfoType._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_CntinStatus._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinStatus._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_CntinStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinStatus._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_CntinStatus@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinStatus._protobuf_nameMap, a1);
}

void *Proto_Gpsd_Request.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_Request.protoMessageName;
}

unint64_t static Proto_Gpsd_Request.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t Proto_Gpsd_Request._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Request._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Request._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Request._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_Request._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t started;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  uint64_t v282;
  _QWORD *v283;
  _BYTE *v284;
  _BYTE *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _QWORD v295[2];
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  _BYTE *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  MEMORY[0x24BDAC7A8](v3);
  v376 = (uint64_t)v295 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  MEMORY[0x24BDAC7A8](v5);
  v375 = (uint64_t)v295 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  MEMORY[0x24BDAC7A8](v7);
  v374 = (uint64_t)v295 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  MEMORY[0x24BDAC7A8](v9);
  v373 = (uint64_t)v295 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  MEMORY[0x24BDAC7A8](v11);
  v372 = (uint64_t)v295 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  MEMORY[0x24BDAC7A8](v13);
  v371 = (uint64_t)v295 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  MEMORY[0x24BDAC7A8](v15);
  v370 = (uint64_t)v295 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  MEMORY[0x24BDAC7A8](v17);
  v369 = (uint64_t)v295 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  MEMORY[0x24BDAC7A8](v19);
  v368 = (uint64_t)v295 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  MEMORY[0x24BDAC7A8](v21);
  v367 = (uint64_t)v295 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  MEMORY[0x24BDAC7A8](v23);
  v366 = (uint64_t)v295 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  MEMORY[0x24BDAC7A8](v25);
  v365 = (uint64_t)v295 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  MEMORY[0x24BDAC7A8](v27);
  v364 = (uint64_t)v295 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  MEMORY[0x24BDAC7A8](v29);
  v363 = (uint64_t)v295 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  MEMORY[0x24BDAC7A8](v31);
  v362 = (uint64_t)v295 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  MEMORY[0x24BDAC7A8](v33);
  v361 = (uint64_t)v295 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  MEMORY[0x24BDAC7A8](v35);
  v360 = (uint64_t)v295 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  MEMORY[0x24BDAC7A8](v37);
  v359 = (uint64_t)v295 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  MEMORY[0x24BDAC7A8](v39);
  v358 = (uint64_t)v295 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  MEMORY[0x24BDAC7A8](v41);
  v357 = (uint64_t)v295 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  MEMORY[0x24BDAC7A8](v43);
  v356 = (uint64_t)v295 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  MEMORY[0x24BDAC7A8](v45);
  v355 = (uint64_t)v295 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  MEMORY[0x24BDAC7A8](v47);
  v354 = (uint64_t)v295 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  MEMORY[0x24BDAC7A8](v49);
  v353 = (uint64_t)v295 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  MEMORY[0x24BDAC7A8](v51);
  v350 = (uint64_t)v295 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  MEMORY[0x24BDAC7A8](v53);
  v346 = (uint64_t)v295 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  MEMORY[0x24BDAC7A8](v55);
  v342 = (uint64_t)v295 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  MEMORY[0x24BDAC7A8](v57);
  v338 = (uint64_t)v295 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  MEMORY[0x24BDAC7A8](v59);
  v334 = (uint64_t)v295 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  MEMORY[0x24BDAC7A8](v61);
  v330 = (uint64_t)v295 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  MEMORY[0x24BDAC7A8](v63);
  v326 = (uint64_t)v295 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  MEMORY[0x24BDAC7A8](v65);
  v322 = (uint64_t)v295 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  MEMORY[0x24BDAC7A8](v67);
  v318 = (uint64_t)v295 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  MEMORY[0x24BDAC7A8](v69);
  v314 = (uint64_t)v295 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  MEMORY[0x24BDAC7A8](v71);
  v310 = (uint64_t)v295 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  MEMORY[0x24BDAC7A8](v73);
  v306 = (uint64_t)v295 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  MEMORY[0x24BDAC7A8](v75);
  v302 = (uint64_t)v295 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  MEMORY[0x24BDAC7A8](v77);
  v298 = (uint64_t)v295 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  MEMORY[0x24BDAC7A8](v79);
  v81 = (char *)v295 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_DWORD *)(v1 + 28) = 0;
  *(_WORD *)(v1 + 32) = 15617;
  v295[1] = v1 + 33;
  v82 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  v83 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 1, 1, v83);
  v84 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  v85 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 1, 1, v85);
  v86 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  v296 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  v87 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v86, 1, 1, v87);
  v88 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  v297 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  v89 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 1, 1, v89);
  v90 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  v299 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  v91 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 1, 1, v91);
  v92 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  v300 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  v93 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v92, 1, 1, v93);
  v94 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  v301 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  v95 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 1, 1, v95);
  v96 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  v303 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  v97 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 1, 1, v97);
  v98 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  v304 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  v99 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v98, 1, 1, v99);
  v100 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  v305 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  v101 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v100, 1, 1, v101);
  v102 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  v307 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  v103 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 1, 1, v103);
  v104 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  v308 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  v105 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v104, 1, 1, v105);
  v106 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  v309 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  v107 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 1, 1, v107);
  v108 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  v311 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  v109 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 1, 1, v109);
  v110 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  v312 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  v111 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v110, 1, 1, v111);
  v112 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  v313 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  v113 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 1, 1, v113);
  v114 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  v315 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  v115 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v114, 1, 1, v115);
  v116 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  v316 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  v117 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v116, 1, 1, v117);
  v118 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  v317 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  v119 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v118, 1, 1, v119);
  v120 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  v319 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  v121 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v120, 1, 1, v121);
  v122 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  v320 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  v123 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v122, 1, 1, v123);
  v124 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  v321 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  v125 = type metadata accessor for Proto_Gpsd_TerminationImminent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v124, 1, 1, v125);
  v126 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  v323 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  v127 = type metadata accessor for Proto_Gpsd_ExitMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v126, 1, 1, v127);
  v128 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  v324 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  v129 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v128, 1, 1, v129);
  v130 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  v325 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  started = type metadata accessor for Proto_Gpsd_StartContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 56))(v130, 1, 1, started);
  v132 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  v327 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  v133 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v132, 1, 1, v133);
  v134 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  v328 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  v135 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v134, 1, 1, v135);
  v136 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  v329 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  v137 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v136, 1, 1, v137);
  v138 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  v331 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  v139 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v138, 1, 1, v139);
  v140 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  v332 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  v141 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v140, 1, 1, v141);
  v142 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  v333 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  *(_DWORD *)v142 = 0;
  *(_BYTE *)(v142 + 4) = 1;
  v143 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  v335 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  v144 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v143, 1, 1, v144);
  v145 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  v336 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  v146 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v145, 1, 1, v146);
  v147 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  v337 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  v148 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v147, 1, 1, v148);
  v149 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  v339 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  v150 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v149, 1, 1, v150);
  v151 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  v340 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  v152 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v151, 1, 1, v152);
  v153 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  v341 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  v154 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 56))(v153, 1, 1, v154);
  v343 = (_QWORD *)(v1
                  + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  v155 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec) = MEMORY[0x24BEE4AF8];
  v156 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  v344 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  v157 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v156, 1, 1, v157);
  v158 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  v345 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  *(_DWORD *)v158 = 0;
  *(_BYTE *)(v158 + 4) = 1;
  v347 = (_QWORD *)(v1
                  + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert) = v155;
  v159 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  *v159 = 2;
  v160 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  v348 = v159;
  v349 = v160;
  *(_DWORD *)v160 = 0;
  *(_BYTE *)(v160 + 4) = 1;
  v161 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  v351 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  v162 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v161, 1, 1, v162);
  v163 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  v352 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  v164 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 56))(v163, 1, 1, v164);
  swift_beginAccess();
  v165 = *(_QWORD *)(a1 + 16);
  LOBYTE(v163) = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v165;
  *(_BYTE *)(v1 + 24) = v163;
  swift_beginAccess();
  LODWORD(v163) = *(_DWORD *)(a1 + 28);
  LOBYTE(v165) = *(_BYTE *)(a1 + 32);
  swift_beginAccess();
  *(_DWORD *)(v1 + 28) = v163;
  *(_BYTE *)(v1 + 32) = v165;
  swift_beginAccess();
  LOBYTE(v163) = *(_BYTE *)(a1 + 33);
  swift_beginAccess();
  *(_BYTE *)(v1 + 33) = v163;
  v166 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v166, (uint64_t)v81, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v81, v82, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  swift_endAccess();
  v167 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  v168 = v298;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v167, v298, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v168, v84, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  swift_endAccess();
  v169 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  v170 = v302;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v169, v302, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v171 = v296;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v170, v171, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  swift_endAccess();
  v172 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  v173 = v306;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v172, v306, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v174 = v297;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v173, v174, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  swift_endAccess();
  v175 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  v176 = v310;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v175, v310, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v177 = v299;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v176, v177, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  swift_endAccess();
  v178 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  v179 = v314;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v178, v314, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v180 = v300;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v179, v180, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  swift_endAccess();
  v181 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  v182 = v318;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v181, v318, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v183 = v301;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v182, v183, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  swift_endAccess();
  v184 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  v185 = v322;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v184, v322, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v186 = v303;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v185, v186, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  swift_endAccess();
  v187 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  v188 = v326;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v187, v326, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v189 = v304;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v188, v189, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  swift_endAccess();
  v190 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  v191 = v330;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v190, v330, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v192 = v305;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v191, v192, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  swift_endAccess();
  v193 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  v194 = v334;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v193, v334, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v195 = v307;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v194, v195, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  swift_endAccess();
  v196 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  v197 = v338;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v196, v338, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v198 = v308;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v197, v198, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  swift_endAccess();
  v199 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  v200 = v342;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v199, v342, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v201 = v309;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v200, v201, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  swift_endAccess();
  v202 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  v203 = v346;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v202, v346, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v204 = v311;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v203, v204, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  swift_endAccess();
  v205 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  v206 = v350;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v205, v350, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v207 = v312;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v206, v207, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  swift_endAccess();
  v208 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  v209 = v353;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v208, v353, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v210 = v313;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v209, v210, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  swift_endAccess();
  v211 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  v212 = v354;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v211, v354, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v213 = v315;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v212, v213, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  swift_endAccess();
  v214 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  v215 = v355;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v214, v355, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v216 = v316;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v215, v216, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  swift_endAccess();
  v217 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  v218 = v356;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v217, v356, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v219 = v317;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v218, v219, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  swift_endAccess();
  v220 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  v221 = v357;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v220, v357, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v222 = v319;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v221, v222, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  swift_endAccess();
  v223 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  v224 = v358;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v223, v358, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v225 = v320;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v224, v225, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  swift_endAccess();
  v226 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  v227 = v359;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v226, v359, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v228 = v321;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v227, v228, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  swift_endAccess();
  v229 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  v230 = v360;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v229, v360, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v231 = v323;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v230, v231, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  swift_endAccess();
  v232 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  v233 = v361;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v232, v361, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v234 = v324;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v233, v234, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  swift_endAccess();
  v235 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  v236 = v362;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v235, v362, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v237 = v325;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v236, v237, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  swift_endAccess();
  v238 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  v239 = v363;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v238, v363, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v240 = v327;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v239, v240, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  swift_endAccess();
  v241 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  v242 = v364;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v241, v364, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v243 = v328;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v242, v243, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  swift_endAccess();
  v244 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  v245 = v365;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v244, v365, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v246 = v329;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v245, v246, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  swift_endAccess();
  v247 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  v248 = v366;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v247, v366, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v249 = v331;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v248, v249, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  swift_endAccess();
  v250 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  v251 = v367;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v250, v367, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v252 = v332;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v251, v252, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  swift_endAccess();
  v253 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  swift_beginAccess();
  LODWORD(v251) = *(_DWORD *)v253;
  LOBYTE(v253) = *(_BYTE *)(v253 + 4);
  v254 = v333;
  swift_beginAccess();
  *(_DWORD *)v254 = v251;
  *(_BYTE *)(v254 + 4) = v253;
  v255 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  v256 = v368;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v255, v368, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v257 = v335;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v256, v257, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  swift_endAccess();
  v258 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  v259 = v369;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v258, v369, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v260 = v336;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v259, v260, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  swift_endAccess();
  v261 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  v262 = v370;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v261, v370, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v263 = v337;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v262, v263, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  swift_endAccess();
  v264 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  v265 = v371;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v264, v371, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v266 = v339;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v265, v266, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  swift_endAccess();
  v267 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  v268 = v372;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v267, v372, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v269 = v340;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v268, v269, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  swift_endAccess();
  v270 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  v271 = v373;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v270, v373, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v272 = v341;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v271, v272, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  swift_endAccess();
  v273 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  swift_beginAccess();
  v274 = *v273;
  v275 = v343;
  swift_beginAccess();
  *v275 = v274;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v276 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  v277 = v374;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v276, v374, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v278 = v344;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v277, v278, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  swift_endAccess();
  v279 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess();
  LODWORD(v277) = *(_DWORD *)v279;
  LOBYTE(v279) = *(_BYTE *)(v279 + 4);
  v280 = v345;
  swift_beginAccess();
  *(_DWORD *)v280 = v277;
  *(_BYTE *)(v280 + 4) = v279;
  v281 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  swift_beginAccess();
  v282 = *v281;
  v283 = v347;
  swift_beginAccess();
  *v283 = v282;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v284 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  LOBYTE(v284) = *v284;
  v285 = v348;
  swift_beginAccess();
  *v285 = (_BYTE)v284;
  v286 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess();
  LODWORD(v285) = *(_DWORD *)v286;
  LOBYTE(v286) = *(_BYTE *)(v286 + 4);
  v287 = v349;
  swift_beginAccess();
  *(_DWORD *)v287 = (_DWORD)v285;
  *(_BYTE *)(v287 + 4) = v286;
  v288 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  v289 = v375;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v288, v375, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v290 = v351;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v289, v290, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  swift_endAccess();
  v291 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  v292 = v376;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v291, v376, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  swift_release();
  v293 = v352;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v292, v293, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  swift_endAccess();
  return v1;
}

uint64_t Proto_Gpsd_Request._StorageClass.__deallocating_deinit()
{
  uint64_t v0;

  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  swift_bridgeObjectRelease();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  swift_bridgeObjectRelease();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  return swift_deallocClassInstance();
}

uint64_t Proto_Gpsd_Request.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  unint64_t *v11;
  void *v12;

  v2 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
    v3 = swift_allocObject();
    v4 = swift_retain();
    Proto_Gpsd_Request._StorageClass.init(copying:)(v4);
    *(_QWORD *)(v0 + v2) = v3;
    swift_release();
  }
  swift_retain();
  v5 = dispatch thunk of Decoder.nextFieldNumber()();
  v7 = v1;
  if (!v1)
  {
    while ((v6 & 1) == 0)
    {
      switch(v5)
      {
        case 1:
          swift_beginAccess();
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_52;
        case 2:
        case 61:
        case 72:
        case 75:
          swift_beginAccess();
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_52;
        case 3:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_52;
        case 4:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
          v10 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition;
          v12 = &protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition;
          goto LABEL_51;
        case 5:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
          v10 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime;
          v12 = &protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime;
          goto LABEL_51;
        case 6:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistancePressure;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure;
          goto LABEL_51;
        case 7:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel;
          goto LABEL_51;
        case 8:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro;
          goto LABEL_51;
        case 9:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceDem;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem;
          goto LABEL_51;
        case 10:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector;
          goto LABEL_51;
        case 11:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext;
          goto LABEL_51;
        case 12:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState;
          goto LABEL_51;
        case 13:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment;
          goto LABEL_51;
        case 14:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint;
          goto LABEL_51;
        case 15:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
          v10 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity;
          goto LABEL_51;
        case 16:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
          v10 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile;
          v12 = &protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile;
          goto LABEL_51;
        case 17:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
          v10 = type metadata accessor for Proto_Gpsd_InjectRtiFile;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile;
          v12 = &protocol conformance descriptor for Proto_Gpsd_InjectRtiFile;
          goto LABEL_51;
        case 18:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
          v10 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist;
          v12 = &protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist;
          goto LABEL_51;
        case 19:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
          v10 = type metadata accessor for Proto_Gpsd_DeleteGnssData;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData;
          v12 = &protocol conformance descriptor for Proto_Gpsd_DeleteGnssData;
          goto LABEL_51;
        case 20:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
          v10 = type metadata accessor for Proto_Gpsd_SetPvtmReport;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetPvtmReport;
          goto LABEL_51;
        case 21:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
          v10 = type metadata accessor for Proto_Gpsd_SetNmeaHandler;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler;
          goto LABEL_51;
        case 22:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
          v10 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode;
          goto LABEL_51;
        case 23:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
          v10 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations;
          goto LABEL_51;
        case 24:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
          v10 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling;
          goto LABEL_51;
        case 25:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_TerminationImminent(0);
          v10 = type metadata accessor for Proto_Gpsd_TerminationImminent;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent;
          v12 = &protocol conformance descriptor for Proto_Gpsd_TerminationImminent;
          goto LABEL_51;
        case 26:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_ExitMessage(0);
          v10 = type metadata accessor for Proto_Gpsd_ExitMessage;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage;
          v12 = &protocol conformance descriptor for Proto_Gpsd_ExitMessage;
          goto LABEL_51;
        case 27:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_LtlInfo(0);
          v10 = type metadata accessor for Proto_Gpsd_LtlInfo;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo;
          v12 = &protocol conformance descriptor for Proto_Gpsd_LtlInfo;
          goto LABEL_51;
        case 28:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_StartContext(0);
          v10 = type metadata accessor for Proto_Gpsd_StartContext;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext;
          v12 = &protocol conformance descriptor for Proto_Gpsd_StartContext;
          goto LABEL_51;
        case 29:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
          v10 = type metadata accessor for Proto_Gpsd_CntinStatusMessage;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage;
          v12 = &protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage;
          goto LABEL_51;
        case 30:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
          v10 = type metadata accessor for Proto_Gpsd_SetThermalRiskState;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState;
          goto LABEL_51;
        case 31:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
          v10 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable;
          v12 = &protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable;
          goto LABEL_51;
        case 50:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_EmergConfig and conformance Proto_Gnss_Emergency_EmergConfig;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_EmergConfig;
          goto LABEL_51;
        case 60:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_PositionRequest and conformance Proto_Gnss_Emergency_PositionRequest;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_PositionRequest;
          goto LABEL_51;
        case 62:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsReferenceTime and conformance Proto_Gnss_Emergency_GpsReferenceTime;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_GpsReferenceTime;
          goto LABEL_51;
        case 63:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_ReferenceLocation and conformance Proto_Gnss_Emergency_ReferenceLocation;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_ReferenceLocation;
          goto LABEL_51;
        case 64:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsNavigationModel and conformance Proto_Gnss_Emergency_GpsNavigationModel;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_GpsNavigationModel;
          goto LABEL_51;
        case 65:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsAcqAssistance and conformance Proto_Gnss_Emergency_GpsAcqAssistance;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_GpsAcqAssistance;
          goto LABEL_51;
        case 66:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CellFTAssistance and conformance Proto_Gnss_Emergency_CellFTAssistance;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_CellFTAssistance;
          goto LABEL_51;
        case 67:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CplaneContext and conformance Proto_Gnss_Emergency_CplaneContext;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_CplaneContext;
          goto LABEL_51;
        case 70:
        case 73:
          swift_beginAccess();
          v9 = v7;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)();
          goto LABEL_52;
        case 71:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_LocationId;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_LocationId and conformance Proto_Gnss_Emergency_LocationId;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_LocationId;
          goto LABEL_51;
        case 74:
          swift_beginAccess();
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          goto LABEL_52;
        case 76:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_SuplContext;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SuplContext and conformance Proto_Gnss_Emergency_SuplContext;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_SuplContext;
          goto LABEL_51;
        case 77:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_WlanMeasurementList and conformance Proto_Gnss_Emergency_WlanMeasurementList;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_WlanMeasurementList;
LABEL_51:
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(v11, v10, (uint64_t)v12);
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
LABEL_52:
          v7 = v9;
          swift_endAccess();
          break;
        default:
          break;
      }
      v5 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;

  v5 = v3;
  v9 = *(_BYTE **)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0) + 20));
  swift_retain();
  swift_beginAccess();
  if ((v9[24] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (v4)
    return swift_release();
  swift_beginAccess();
  if ((v9[32] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  swift_beginAccess();
  if (v9[33] != 61)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  closure #4 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #5 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #6 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #7 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #8 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #9 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #10 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #11 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #12 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #13 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #14 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #15 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #16 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #17 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #18 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #19 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #20 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #21 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #22 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #23 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #24 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #25 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #26 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #27 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #28 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #29 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #30 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #31 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #32 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #33 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  v10 = &v9[OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID];
  swift_beginAccess();
  if ((v10[4] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  closure #35 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #36 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #37 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #38 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #39 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #40 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  v11 = &v9[OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec];
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    swift_bridgeObjectRelease();
  }
  closure #41 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  v12 = &v9[OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex];
  swift_beginAccess();
  if ((v12[4] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  v13 = &v9[OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert];
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v13 + 16))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    swift_bridgeObjectRelease();
  }
  v14 = &v9[OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte];
  swift_beginAccess();
  if (*v14 != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  v15 = &v9[OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance];
  swift_beginAccess();
  if ((v15[4] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  closure #45 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #46 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t closure #4 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t closure #5 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t closure #6 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t closure #7 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t closure #8 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t closure #9 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t closure #10 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t closure #11 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t closure #12 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t closure #13 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t closure #14 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t closure #15 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t closure #16 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t closure #17 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t closure #18 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t closure #19 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t closure #20 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t closure #21 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t closure #22 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t closure #23 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t closure #24 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t closure #25 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_TerminationImminent(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_TerminationImminent);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t closure #26 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_ExitMessage(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_ExitMessage);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t closure #27 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo);
}

uint64_t closure #28 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t started;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for Proto_Gpsd_StartContext(0);
  v9 = *(_QWORD *)(started - 8);
  MEMORY[0x24BDAC7A8](started);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, started) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_StartContext);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t closure #29 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t closure #30 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t closure #31 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t closure #32 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_EmergConfig and conformance Proto_Gnss_Emergency_EmergConfig, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_EmergConfig);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t closure #33 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_PositionRequest and conformance Proto_Gnss_Emergency_PositionRequest, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_PositionRequest);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t closure #35 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsReferenceTime and conformance Proto_Gnss_Emergency_GpsReferenceTime, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_GpsReferenceTime);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t closure #36 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_ReferenceLocation and conformance Proto_Gnss_Emergency_ReferenceLocation, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_ReferenceLocation);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t closure #37 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsNavigationModel and conformance Proto_Gnss_Emergency_GpsNavigationModel, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_GpsNavigationModel);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t closure #38 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsAcqAssistance and conformance Proto_Gnss_Emergency_GpsAcqAssistance, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_GpsAcqAssistance);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t closure #39 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CellFTAssistance and conformance Proto_Gnss_Emergency_CellFTAssistance, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_CellFTAssistance);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
}

uint64_t closure #40 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CplaneContext and conformance Proto_Gnss_Emergency_CplaneContext, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_CplaneContext);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
}

uint64_t closure #41 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_LocationId and conformance Proto_Gnss_Emergency_LocationId, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_LocationId);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_LocationId);
}

uint64_t closure #45 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SuplContext and conformance Proto_Gnss_Emergency_SuplContext, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_SuplContext);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t closure #46 in closure #1 in Proto_Gpsd_Request.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_WlanMeasurementList and conformance Proto_Gnss_Emergency_WlanMeasurementList, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_WlanMeasurementList);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

uint64_t static Proto_Gpsd_Request.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_Request, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gpsd_Request.== infix(_:_:)) & 1;
}

BOOL closure #1 in static Proto_Gpsd_Request.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  int v246;
  char v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unsigned int (*v259)(uint64_t, uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unsigned int (*v268)(uint64_t, uint64_t, uint64_t);
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unsigned int (*v280)(uint64_t, uint64_t, uint64_t);
  uint64_t v281;
  uint64_t *v282;
  uint64_t *v283;
  char v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unsigned int (*v290)(uint64_t, uint64_t, uint64_t);
  uint64_t v291;
  uint64_t *v292;
  uint64_t *v293;
  char v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int (*v300)(uint64_t, uint64_t, uint64_t);
  uint64_t v301;
  uint64_t *v302;
  uint64_t *v303;
  char v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unsigned int (*v310)(uint64_t, uint64_t, uint64_t);
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unsigned int (*v320)(uint64_t, uint64_t, uint64_t);
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v325;
  char v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unsigned int (*v332)(uint64_t, uint64_t, uint64_t);
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  unsigned int (*v342)(uint64_t, uint64_t, uint64_t);
  uint64_t v343;
  uint64_t v344;
  char v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unsigned int (*v351)(uint64_t, uint64_t, uint64_t);
  uint64_t v352;
  uint64_t v353;
  char v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  unsigned int (*v360)(uint64_t, uint64_t, uint64_t);
  uint64_t v361;
  uint64_t v362;
  char v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unsigned int (*v369)(uint64_t, uint64_t, uint64_t);
  uint64_t v370;
  uint64_t v371;
  char v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  unsigned int (*v378)(uint64_t, uint64_t, uint64_t);
  uint64_t v379;
  uint64_t v380;
  char v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unsigned int (*v387)(uint64_t, uint64_t, uint64_t);
  uint64_t v388;
  uint64_t v389;
  char v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int (*v396)(uint64_t, uint64_t, uint64_t);
  uint64_t *v397;
  uint64_t *v398;
  char v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unsigned int (*v405)(uint64_t, uint64_t, uint64_t);
  uint64_t v406;
  uint64_t v407;
  char v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  unsigned int (*v414)(uint64_t, uint64_t, uint64_t);
  uint64_t v415;
  uint64_t v416;
  char v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  unsigned int (*v423)(uint64_t, uint64_t, uint64_t);
  uint64_t v424;
  uint64_t v425;
  char v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  unsigned int (*v432)(uint64_t, uint64_t, uint64_t);
  uint64_t v433;
  uint64_t v434;
  char v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  unsigned int (*v441)(uint64_t, uint64_t, uint64_t);
  uint64_t v442;
  uint64_t v443;
  char v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  unsigned int (*v450)(uint64_t, uint64_t, uint64_t);
  uint64_t v451;
  uint64_t v452;
  char v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  unsigned int (*v459)(uint64_t, uint64_t, uint64_t);
  uint64_t v460;
  uint64_t v461;
  char v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  unsigned int (*v468)(uint64_t, uint64_t, uint64_t);
  uint64_t v469;
  uint64_t v470;
  char v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  unsigned int (*v477)(uint64_t, uint64_t, uint64_t);
  uint64_t v478;
  uint64_t v479;
  char v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  unsigned int (*v486)(uint64_t, uint64_t, uint64_t);
  uint64_t v487;
  uint64_t v488;
  char v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unsigned int (*v495)(uint64_t, uint64_t, uint64_t);
  uint64_t v496;
  uint64_t v497;
  char v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  unsigned int (*v504)(uint64_t, uint64_t, uint64_t);
  uint64_t v505;
  uint64_t v506;
  char v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  unsigned int (*v513)(uint64_t, uint64_t, uint64_t);
  uint64_t v514;
  uint64_t v515;
  char v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  unsigned int (*v522)(uint64_t, uint64_t, uint64_t);
  uint64_t v523;
  uint64_t v524;
  char v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  unsigned int (*v531)(uint64_t, uint64_t, uint64_t);
  uint64_t v532;
  uint64_t v533;
  char v534;
  int *v535;
  int v536;
  char v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  unsigned int (*v544)(uint64_t, uint64_t, uint64_t);
  uint64_t v545;
  uint64_t v546;
  char v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  unsigned int (*v553)(uint64_t, uint64_t, uint64_t);
  uint64_t v554;
  uint64_t v555;
  char v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  unsigned int (*v562)(uint64_t, uint64_t, uint64_t);
  uint64_t v563;
  uint64_t v564;
  char v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  unsigned int (*v571)(uint64_t, uint64_t, uint64_t);
  uint64_t v572;
  uint64_t v573;
  char v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  unsigned int (*v580)(uint64_t, uint64_t, uint64_t);
  uint64_t v581;
  uint64_t v582;
  char v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  unsigned int (*v589)(uint64_t, uint64_t, uint64_t);
  uint64_t v590;
  uint64_t v591;
  char v592;
  uint64_t *v593;
  uint64_t v594;
  uint64_t *v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  unsigned int (*v601)(uint64_t, uint64_t, uint64_t);
  uint64_t v602;
  uint64_t v603;
  char v604;
  int *v605;
  int v606;
  char v607;
  uint64_t v608;
  uint64_t *v609;
  uint64_t v610;
  uint64_t *v611;
  unsigned __int8 *v612;
  int v613;
  unsigned __int8 *v614;
  int v615;
  int *v616;
  int v617;
  char v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  unsigned int (*v625)(uint64_t, uint64_t, uint64_t);
  uint64_t v626;
  uint64_t v627;
  char v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  unsigned int (*v634)(uint64_t, uint64_t, uint64_t);
  uint64_t v635;
  uint64_t v636;
  char v637;
  uint64_t v638;
  uint64_t *v639;
  uint64_t *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t started;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t *v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t *v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t *v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t *v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t *v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t *v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = v2;
  v4 = v1;
  v807 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  v803 = *(_QWORD *)(v807 - 8);
  MEMORY[0x24BDAC7A8](v807);
  v806 = (uint64_t)&v638 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v802 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_WlanMeasurementList?, Proto_Gnss_Emergency_WlanMeasurementList?));
  MEMORY[0x24BDAC7A8](v802);
  v808 = (uint64_t)&v638 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v805 = (uint64_t)&v638 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v804 = (uint64_t)&v638 - v10;
  v800 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  v796 = *(_QWORD *)(v800 - 8);
  MEMORY[0x24BDAC7A8](v800);
  v799 = (uint64_t)&v638 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v795 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_SuplContext?, Proto_Gnss_Emergency_SuplContext?));
  MEMORY[0x24BDAC7A8](v795);
  v801 = (uint64_t)&v638 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v798 = (uint64_t)&v638 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v797 = (uint64_t)&v638 - v16;
  v793 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  v789 = *(_QWORD *)(v793 - 8);
  MEMORY[0x24BDAC7A8](v793);
  v792 = (uint64_t)&v638 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v788 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_LocationId?, Proto_Gnss_Emergency_LocationId?));
  MEMORY[0x24BDAC7A8](v788);
  v794 = (uint64_t)&v638 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v791 = (uint64_t)&v638 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v790 = (uint64_t)&v638 - v22;
  v786 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0);
  v782 = *(_QWORD *)(v786 - 8);
  MEMORY[0x24BDAC7A8](v786);
  v785 = (uint64_t)&v638 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v781 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_CplaneContext?, Proto_Gnss_Emergency_CplaneContext?));
  MEMORY[0x24BDAC7A8](v781);
  v787 = (uint64_t)&v638 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v784 = (uint64_t)&v638 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v783 = (uint64_t)&v638 - v28;
  v779 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0);
  v775 = *(_QWORD *)(v779 - 8);
  MEMORY[0x24BDAC7A8](v779);
  v778 = (uint64_t)&v638 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v774 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_CellFTAssistance?, Proto_Gnss_Emergency_CellFTAssistance?));
  MEMORY[0x24BDAC7A8](v774);
  v780 = (uint64_t)&v638 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v777 = (uint64_t)&v638 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v776 = (uint64_t)&v638 - v34;
  v772 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0);
  v768 = *(_QWORD *)(v772 - 8);
  MEMORY[0x24BDAC7A8](v772);
  v771 = (uint64_t)&v638 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v767 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_GpsAcqAssistance?, Proto_Gnss_Emergency_GpsAcqAssistance?));
  MEMORY[0x24BDAC7A8](v767);
  v773 = (uint64_t)&v638 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v770 = (uint64_t)&v638 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v769 = (uint64_t)&v638 - v40;
  v765 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0);
  v761 = *(_QWORD *)(v765 - 8);
  MEMORY[0x24BDAC7A8](v765);
  v764 = (uint64_t)&v638 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v760 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_GpsNavigationModel?, Proto_Gnss_Emergency_GpsNavigationModel?));
  MEMORY[0x24BDAC7A8](v760);
  v766 = (uint64_t)&v638 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v763 = (uint64_t)&v638 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v762 = (uint64_t)&v638 - v46;
  v758 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  v754 = *(_QWORD *)(v758 - 8);
  MEMORY[0x24BDAC7A8](v758);
  v757 = (uint64_t)&v638 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v753 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_ReferenceLocation?, Proto_Gnss_Emergency_ReferenceLocation?));
  MEMORY[0x24BDAC7A8](v753);
  v759 = (uint64_t)&v638 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v756 = (uint64_t)&v638 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  v755 = (uint64_t)&v638 - v52;
  v751 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  v747 = *(_QWORD *)(v751 - 8);
  MEMORY[0x24BDAC7A8](v751);
  v750 = (uint64_t)&v638 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v746 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_GpsReferenceTime?, Proto_Gnss_Emergency_GpsReferenceTime?));
  MEMORY[0x24BDAC7A8](v746);
  v752 = (uint64_t)&v638 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v749 = (uint64_t)&v638 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v748 = (uint64_t)&v638 - v58;
  v744 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0);
  v740 = *(_QWORD *)(v744 - 8);
  MEMORY[0x24BDAC7A8](v744);
  v743 = (uint64_t)&v638 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v739 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_PositionRequest?, Proto_Gnss_Emergency_PositionRequest?));
  MEMORY[0x24BDAC7A8](v739);
  v745 = (uint64_t)&v638 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v62 = MEMORY[0x24BDAC7A8](v61);
  v742 = (uint64_t)&v638 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62);
  v741 = (uint64_t)&v638 - v64;
  v737 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0);
  v733 = *(_QWORD *)(v737 - 8);
  MEMORY[0x24BDAC7A8](v737);
  v736 = (uint64_t)&v638 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v732 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_EmergConfig?, Proto_Gnss_Emergency_EmergConfig?));
  MEMORY[0x24BDAC7A8](v732);
  v738 = (uint64_t)&v638 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v68 = MEMORY[0x24BDAC7A8](v67);
  v735 = (uint64_t)&v638 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68);
  v734 = (uint64_t)&v638 - v70;
  v729 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  v726 = *(_QWORD *)(v729 - 8);
  MEMORY[0x24BDAC7A8](v729);
  v730 = (uint64_t)&v638 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v725 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetConfigRfBandEnable?, Proto_Gpsd_SetConfigRfBandEnable?));
  MEMORY[0x24BDAC7A8](v725);
  v731 = (uint64_t)&v638 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v74 = MEMORY[0x24BDAC7A8](v73);
  v728 = (uint64_t)&v638 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v74);
  v727 = (uint64_t)&v638 - v76;
  v722 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  v719 = *(_QWORD *)(v722 - 8);
  MEMORY[0x24BDAC7A8](v722);
  v723 = (uint64_t)&v638 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v718 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetThermalRiskState?, Proto_Gpsd_SetThermalRiskState?));
  MEMORY[0x24BDAC7A8](v718);
  v724 = (uint64_t)&v638 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v80 = MEMORY[0x24BDAC7A8](v79);
  v721 = (uint64_t)&v638 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v80);
  v720 = (uint64_t)&v638 - v82;
  v715 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  v712 = *(_QWORD *)(v715 - 8);
  MEMORY[0x24BDAC7A8](v715);
  v716 = (uint64_t)&v638 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v711 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_CntinStatusMessage?, Proto_Gpsd_CntinStatusMessage?));
  MEMORY[0x24BDAC7A8](v711);
  v717 = (uint64_t)&v638 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v86 = MEMORY[0x24BDAC7A8](v85);
  v714 = (uint64_t)&v638 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v86);
  v713 = (uint64_t)&v638 - v88;
  started = type metadata accessor for Proto_Gpsd_StartContext(0);
  v705 = *(_QWORD *)(started - 8);
  MEMORY[0x24BDAC7A8](started);
  v709 = (uint64_t)&v638 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v704 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_StartContext?, Proto_Gpsd_StartContext?));
  MEMORY[0x24BDAC7A8](v704);
  v710 = (uint64_t)&v638 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v92 = MEMORY[0x24BDAC7A8](v91);
  v707 = (uint64_t)&v638 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v92);
  v706 = (uint64_t)&v638 - v94;
  v701 = type metadata accessor for Proto_Gpsd_LtlInfo(0);
  v698 = *(_QWORD *)(v701 - 8);
  MEMORY[0x24BDAC7A8](v701);
  v702 = (uint64_t)&v638 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v697 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo?, Proto_Gpsd_LtlInfo?));
  MEMORY[0x24BDAC7A8](v697);
  v703 = (uint64_t)&v638 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v98 = MEMORY[0x24BDAC7A8](v97);
  v700 = (uint64_t)&v638 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v98);
  v699 = (uint64_t)&v638 - v100;
  v694 = type metadata accessor for Proto_Gpsd_ExitMessage(0);
  v691 = *(_QWORD *)(v694 - 8);
  MEMORY[0x24BDAC7A8](v694);
  v695 = (uint64_t)&v638 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  v690 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_ExitMessage?, Proto_Gpsd_ExitMessage?));
  MEMORY[0x24BDAC7A8](v690);
  v696 = (uint64_t)&v638 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v104 = MEMORY[0x24BDAC7A8](v103);
  v693 = (uint64_t)&v638 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v104);
  v692 = (uint64_t)&v638 - v106;
  v687 = type metadata accessor for Proto_Gpsd_TerminationImminent(0);
  v684 = *(_QWORD *)(v687 - 8);
  MEMORY[0x24BDAC7A8](v687);
  v688 = (uint64_t)&v638 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  v683 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_TerminationImminent?, Proto_Gpsd_TerminationImminent?));
  MEMORY[0x24BDAC7A8](v683);
  v689 = (uint64_t)&v638 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v110 = MEMORY[0x24BDAC7A8](v109);
  v686 = (uint64_t)&v638 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v110);
  v685 = (uint64_t)&v638 - v112;
  v680 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0);
  v677 = *(_QWORD *)(v680 - 8);
  MEMORY[0x24BDAC7A8](v680);
  v681 = (uint64_t)&v638 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  v676 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetConfigDutyCycling?, Proto_Gpsd_SetConfigDutyCycling?));
  MEMORY[0x24BDAC7A8](v676);
  v682 = (uint64_t)&v638 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v116 = MEMORY[0x24BDAC7A8](v115);
  v679 = (uint64_t)&v638 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v116);
  v678 = (uint64_t)&v638 - v118;
  v673 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0);
  v670 = *(_QWORD *)(v673 - 8);
  MEMORY[0x24BDAC7A8](v673);
  v674 = (uint64_t)&v638 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  v669 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetConfigEnableGnssConstellations?, Proto_Gpsd_SetConfigEnableGnssConstellations?));
  MEMORY[0x24BDAC7A8](v669);
  v675 = (uint64_t)&v638 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v122 = MEMORY[0x24BDAC7A8](v121);
  v672 = (uint64_t)&v638 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v122);
  v671 = (uint64_t)&v638 - v124;
  v666 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  v663 = *(_QWORD *)(v666 - 8);
  MEMORY[0x24BDAC7A8](v666);
  v667 = (uint64_t)&v638 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  v662 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetConfigSimulatorMode?, Proto_Gpsd_SetConfigSimulatorMode?));
  MEMORY[0x24BDAC7A8](v662);
  v668 = (uint64_t)&v638 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v128 = MEMORY[0x24BDAC7A8](v127);
  v665 = (uint64_t)&v638 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v128);
  v664 = (uint64_t)&v638 - v130;
  v659 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0);
  v656 = *(_QWORD *)(v659 - 8);
  MEMORY[0x24BDAC7A8](v659);
  v660 = (uint64_t)&v638 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0);
  v655 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetNmeaHandler?, Proto_Gpsd_SetNmeaHandler?));
  MEMORY[0x24BDAC7A8](v655);
  v661 = (uint64_t)&v638 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v134 = MEMORY[0x24BDAC7A8](v133);
  v658 = (uint64_t)&v638 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v134);
  v657 = (uint64_t)&v638 - v136;
  v652 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  v649 = *(_QWORD *)(v652 - 8);
  MEMORY[0x24BDAC7A8](v652);
  v653 = (uint64_t)&v638 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0);
  v648 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetPvtmReport?, Proto_Gpsd_SetPvtmReport?));
  MEMORY[0x24BDAC7A8](v648);
  v654 = (uint64_t)&v638 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v140 = MEMORY[0x24BDAC7A8](v139);
  v651 = (uint64_t)&v638 - ((v141 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v140);
  v650 = (uint64_t)&v638 - v142;
  v645 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0);
  v642 = *(_QWORD *)(v645 - 8);
  MEMORY[0x24BDAC7A8](v645);
  v646 = (uint64_t)&v638 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  v641 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_DeleteGnssData?, Proto_Gpsd_DeleteGnssData?));
  MEMORY[0x24BDAC7A8](v641);
  v647 = (uint64_t)&v638 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v146 = MEMORY[0x24BDAC7A8](v145);
  v644 = (uint64_t)&v638 - ((v147 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v146);
  v643 = (uint64_t)&v638 - v148;
  v813 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0);
  v811 = *(_QWORD *)(v813 - 8);
  MEMORY[0x24BDAC7A8](v813);
  v640 = (uint64_t *)((char *)&v638 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0));
  v810 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_InjectSvidBlocklist?, Proto_Gpsd_InjectSvidBlocklist?));
  MEMORY[0x24BDAC7A8](v810);
  v814 = (uint64_t)&v638 - ((v150 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v152 = MEMORY[0x24BDAC7A8](v151);
  v639 = (uint64_t *)((char *)&v638 - ((v153 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v152);
  v812 = (uint64_t)&v638 - v154;
  v820 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  v817 = *(_QWORD *)(v820 - 8);
  MEMORY[0x24BDAC7A8](v820);
  v809 = (uint64_t)&v638 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0);
  v816 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_InjectRtiFile?, Proto_Gpsd_InjectRtiFile?));
  MEMORY[0x24BDAC7A8](v816);
  v824 = (uint64_t)&v638 - ((v156 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v158 = MEMORY[0x24BDAC7A8](v157);
  v818 = (uint64_t)&v638 - ((v159 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v158);
  v821 = (uint64_t)&v638 - v160;
  v827 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  v823 = *(_QWORD *)(v827 - 8);
  MEMORY[0x24BDAC7A8](v827);
  v815 = (uint64_t)&v638 - ((v161 + 15) & 0xFFFFFFFFFFFFFFF0);
  v822 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_InjectAssistanceFile?, Proto_Gpsd_InjectAssistanceFile?));
  MEMORY[0x24BDAC7A8](v822);
  v832 = (uint64_t)&v638 - ((v162 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v164 = MEMORY[0x24BDAC7A8](v163);
  v825 = (uint64_t)&v638 - ((v165 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v164);
  v828 = (uint64_t)&v638 - v166;
  v835 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0);
  v830 = *(_QWORD *)(v835 - 8);
  MEMORY[0x24BDAC7A8](v835);
  v819 = (uint64_t)&v638 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0);
  v829 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceAlongTrackVelocity?, Proto_Gpsd_SetAssistanceAlongTrackVelocity?));
  MEMORY[0x24BDAC7A8](v829);
  v836 = (uint64_t)&v638 - ((v168 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v170 = MEMORY[0x24BDAC7A8](v169);
  v831 = (uint64_t)&v638 - ((v171 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v170);
  v834 = (uint64_t)&v638 - v172;
  v842 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v838 = *(_QWORD *)(v842 - 8);
  MEMORY[0x24BDAC7A8](v842);
  v826 = (uint64_t)&v638 - ((v173 + 15) & 0xFFFFFFFFFFFFFFF0);
  v837 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceSpeedConstraint?, Proto_Gpsd_SetAssistanceSpeedConstraint?));
  MEMORY[0x24BDAC7A8](v837);
  v843 = (uint64_t)&v638 - ((v174 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v176 = MEMORY[0x24BDAC7A8](v175);
  v839 = (uint64_t)&v638 - ((v177 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v176);
  v841 = (uint64_t)&v638 - v178;
  v849 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  v845 = *(_QWORD *)(v849 - 8);
  MEMORY[0x24BDAC7A8](v849);
  v833 = (uint64_t)&v638 - ((v179 + 15) & 0xFFFFFFFFFFFFFFF0);
  v844 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceSignalEnvironment?, Proto_Gpsd_SetAssistanceSignalEnvironment?));
  MEMORY[0x24BDAC7A8](v844);
  v850 = (uint64_t)&v638 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v182 = MEMORY[0x24BDAC7A8](v181);
  v846 = (uint64_t)&v638 - ((v183 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v182);
  v848 = (uint64_t)&v638 - v184;
  v856 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  v852 = *(_QWORD *)(v856 - 8);
  MEMORY[0x24BDAC7A8](v856);
  v840 = (uint64_t)&v638 - ((v185 + 15) & 0xFFFFFFFFFFFFFFF0);
  v851 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceMountState?, Proto_Gpsd_SetAssistanceMountState?));
  MEMORY[0x24BDAC7A8](v851);
  v857 = (uint64_t)&v638 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v188 = MEMORY[0x24BDAC7A8](v187);
  v853 = (uint64_t)&v638 - ((v189 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v188);
  v855 = (uint64_t)&v638 - v190;
  v861 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  v859 = *(_QWORD *)(v861 - 8);
  MEMORY[0x24BDAC7A8](v861);
  v847 = (uint64_t)&v638 - ((v191 + 15) & 0xFFFFFFFFFFFFFFF0);
  v858 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceMotionActivityContext?, Proto_Gpsd_SetAssistanceMotionActivityContext?));
  MEMORY[0x24BDAC7A8](v858);
  v865 = (uint64_t)&v638 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v194 = MEMORY[0x24BDAC7A8](v193);
  v860 = (uint64_t)&v638 - ((v195 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v194);
  v864 = (uint64_t)&v638 - v196;
  v868 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v867 = *(_QWORD *)(v868 - 8);
  MEMORY[0x24BDAC7A8](v868);
  v854 = (uint64_t)&v638 - ((v197 + 15) & 0xFFFFFFFFFFFFFFF0);
  v866 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceMapVector?, Proto_Gpsd_SetAssistanceMapVector?));
  MEMORY[0x24BDAC7A8](v866);
  v872 = (uint64_t)&v638 - ((v198 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v200 = MEMORY[0x24BDAC7A8](v199);
  v862 = (uint64_t)&v638 - ((v201 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v200);
  v870 = (uint64_t)&v638 - v202;
  v875 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0);
  v874 = *(_QWORD *)(v875 - 8);
  MEMORY[0x24BDAC7A8](v875);
  v863 = (uint64_t)&v638 - ((v203 + 15) & 0xFFFFFFFFFFFFFFF0);
  v873 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceDem?, Proto_Gpsd_SetAssistanceDem?));
  MEMORY[0x24BDAC7A8](v873);
  v878 = (uint64_t)&v638 - ((v204 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v206 = MEMORY[0x24BDAC7A8](v205);
  v869 = (uint64_t)&v638 - ((v207 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v206);
  v877 = (uint64_t)&v638 - v208;
  v882 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0);
  v881 = *(_QWORD *)(v882 - 8);
  MEMORY[0x24BDAC7A8](v882);
  v871 = (uint64_t *)((char *)&v638 - ((v209 + 15) & 0xFFFFFFFFFFFFFFF0));
  v880 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceGyro?, Proto_Gpsd_SetAssistanceGyro?));
  MEMORY[0x24BDAC7A8](v880);
  v885 = (uint64_t)&v638 - ((v210 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v212 = MEMORY[0x24BDAC7A8](v211);
  v876 = (uint64_t *)((char *)&v638 - ((v213 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v212);
  v884 = (uint64_t)&v638 - v214;
  v889 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0);
  v888 = *(_QWORD *)(v889 - 8);
  MEMORY[0x24BDAC7A8](v889);
  v879 = (uint64_t *)((char *)&v638 - ((v215 + 15) & 0xFFFFFFFFFFFFFFF0));
  v887 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceAccel?, Proto_Gpsd_SetAssistanceAccel?));
  MEMORY[0x24BDAC7A8](v887);
  v892 = (uint64_t)&v638 - ((v216 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v218 = MEMORY[0x24BDAC7A8](v217);
  v883 = (uint64_t *)((char *)&v638 - ((v219 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v218);
  v891 = (uint64_t)&v638 - v220;
  v896 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0);
  v895 = *(_QWORD *)(v896 - 8);
  MEMORY[0x24BDAC7A8](v896);
  v886 = (uint64_t *)((char *)&v638 - ((v221 + 15) & 0xFFFFFFFFFFFFFFF0));
  v894 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_SetAssistancePressure?, Proto_Gpsd_SetAssistancePressure?));
  MEMORY[0x24BDAC7A8](v894);
  v899 = (uint64_t)&v638 - ((v222 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v224 = MEMORY[0x24BDAC7A8](v223);
  v890 = (uint64_t *)((char *)&v638 - ((v225 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v224);
  v898 = (uint64_t)&v638 - v226;
  v903 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  v902 = *(_QWORD *)(v903 - 8);
  MEMORY[0x24BDAC7A8](v903);
  v893 = (uint64_t)&v638 - ((v227 + 15) & 0xFFFFFFFFFFFFFFF0);
  v901 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_InjectAssistanceTime?, Proto_Gpsd_InjectAssistanceTime?));
  MEMORY[0x24BDAC7A8](v901);
  v906 = (uint64_t)&v638 - ((v228 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  v230 = MEMORY[0x24BDAC7A8](v229);
  v897 = (uint64_t)&v638 - ((v231 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v230);
  v905 = (uint64_t)&v638 - v232;
  v233 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  v234 = *(_QWORD *)(v233 - 8);
  MEMORY[0x24BDAC7A8](v233);
  v900 = (uint64_t)&v638 - ((v235 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_InjectAssistancePosition?, Proto_Gpsd_InjectAssistancePosition?));
  MEMORY[0x24BDAC7A8](v236);
  v907 = (uint64_t)&v638 - ((v237 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v239 = MEMORY[0x24BDAC7A8](v238);
  v904 = (uint64_t)&v638 - ((v240 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v239);
  v242 = (char *)&v638 - v241;
  swift_beginAccess();
  v243 = *(_QWORD *)(v4 + 16);
  v244 = v4;
  LOBYTE(v4) = *(_BYTE *)(v4 + 24);
  swift_beginAccess();
  v908 = v3;
  v245 = *(_BYTE *)(v3 + 24);
  if ((v4 & 1) != 0)
  {
    if (!*(_BYTE *)(v3 + 24))
      return 0;
  }
  else
  {
    if (v243 != *(_QWORD *)(v3 + 16))
      v245 = 1;
    if ((v245 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v246 = *(_DWORD *)(v244 + 28);
  v638 = v244;
  v247 = *(_BYTE *)(v244 + 32);
  v248 = v908;
  swift_beginAccess();
  v249 = *(_BYTE *)(v248 + 32);
  if ((v247 & 1) != 0)
  {
    if (!*(_BYTE *)(v248 + 32))
      return 0;
  }
  else
  {
    if (v246 != *(_DWORD *)(v248 + 28))
      v249 = 1;
    if ((v249 & 1) != 0)
      return 0;
  }
  v250 = v638;
  swift_beginAccess();
  v251 = *(unsigned __int8 *)(v250 + 33);
  v252 = v908;
  swift_beginAccess();
  v253 = *(unsigned __int8 *)(v252 + 33);
  if (v251 == 61)
  {
    if (v253 != 61)
      return 0;
  }
  else if (v253 == 61 || !specialized == infix<A>(_:_:)(v251, v253))
  {
    return 0;
  }
  v254 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v254, (uint64_t)v242, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v255 = v908;
  v256 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess();
  v257 = v907;
  v258 = v907 + *(int *)(v236 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v242, v907, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v256, v258, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  v259 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48);
  if (v259(v257, 1, v233) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v242, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
    if (v259(v258, 1, v233) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v907, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
      goto LABEL_26;
    }
LABEL_23:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v907, &demangling cache variable for type metadata for (Proto_Gpsd_InjectAssistancePosition?, Proto_Gpsd_InjectAssistancePosition?));
    goto LABEL_68;
  }
  v260 = v904;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v257, v904, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  if (v259(v258, 1, v233) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v242, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v260, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
    goto LABEL_23;
  }
  v261 = v900;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v258, v900, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  swift_retain();
  v255 = v908;
  swift_retain();
  v262 = specialized static Proto_Gpsd_InjectAssistancePosition.== infix(_:_:)(v260, v261);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v261, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v242, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v260, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  v250 = v638;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v257, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?);
  if ((v262 & 1) == 0)
    goto LABEL_68;
LABEL_26:
  v263 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  v264 = v905;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v263, v905, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  v265 = v255
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess();
  v266 = v906;
  v267 = v906 + *(int *)(v901 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v264, v906, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v265, v267, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  v268 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v902 + 48);
  v269 = v903;
  if (v268(v266, 1, v903) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v264, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
    if (v268(v267, 1, v269) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v906, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
      goto LABEL_33;
    }
LABEL_31:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_InjectAssistanceTime?, Proto_Gpsd_InjectAssistanceTime?);
    v272 = v906;
LABEL_67:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v272, v271);
    goto LABEL_68;
  }
  v270 = v897;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v266, v897, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  if (v268(v267, 1, v269) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v905, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v270, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
    goto LABEL_31;
  }
  v273 = v893;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v267, v893, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  v274 = specialized static Proto_Gpsd_InjectAssistanceTime.== infix(_:_:)(v270, v273);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v273, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v905, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v270, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v266, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?);
  if ((v274 & 1) == 0)
    goto LABEL_68;
LABEL_33:
  v275 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  v276 = v898;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v275, v898, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v277 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess();
  v278 = v899;
  v279 = v899 + *(int *)(v894 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v276, v899, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v277, v279, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  v280 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v895 + 48);
  v281 = v896;
  if (v280(v278, 1, v896) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v276, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
    if (v280(v279, 1, v281) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v899, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  v282 = v890;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v278, (uint64_t)v890, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  if (v280(v279, 1, v281) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v898, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v282, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
LABEL_38:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistancePressure?, Proto_Gpsd_SetAssistancePressure?);
    v272 = v899;
    goto LABEL_67;
  }
  v283 = v886;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v279, (uint64_t)v886, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  v284 = specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(v282, v283, type metadata accessor for Proto_Gnss_RawPressureSample, &lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v283, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v898, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v282, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v278, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?);
  if ((v284 & 1) == 0)
    goto LABEL_68;
LABEL_40:
  v285 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  v286 = v891;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v285, v891, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v287 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess();
  v288 = v892;
  v289 = v892 + *(int *)(v887 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v286, v892, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v287, v289, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  v290 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v888 + 48);
  v291 = v889;
  if (v290(v288, 1, v889) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v286, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
    if (v290(v289, 1, v291) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v892, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
      goto LABEL_47;
    }
    goto LABEL_45;
  }
  v292 = v883;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v288, (uint64_t)v883, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  if (v290(v289, 1, v291) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v891, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v292, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
LABEL_45:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceAccel?, Proto_Gpsd_SetAssistanceAccel?);
    v272 = v892;
    goto LABEL_67;
  }
  v293 = v879;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v289, (uint64_t)v879, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  v294 = specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(v292, v293, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v293, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v891, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v292, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v288, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?);
  if ((v294 & 1) == 0)
    goto LABEL_68;
LABEL_47:
  v295 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  v296 = v884;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v295, v884, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v297 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess();
  v298 = v885;
  v299 = v885 + *(int *)(v880 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v296, v885, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v297, v299, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  v300 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v881 + 48);
  v301 = v882;
  if (v300(v298, 1, v882) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v296, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
    if (v300(v299, 1, v301) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v885, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
      goto LABEL_54;
    }
    goto LABEL_52;
  }
  v302 = v876;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v298, (uint64_t)v876, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  if (v300(v299, 1, v301) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v884, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v302, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
LABEL_52:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceGyro?, Proto_Gpsd_SetAssistanceGyro?);
    v272 = v885;
    goto LABEL_67;
  }
  v303 = v871;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v299, (uint64_t)v871, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  v304 = specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(v302, v303, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v303, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v884, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v302, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v298, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?);
  if ((v304 & 1) == 0)
    goto LABEL_68;
LABEL_54:
  v305 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  v306 = v877;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v305, v877, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v307 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess();
  v308 = v878;
  v309 = v878 + *(int *)(v873 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v306, v878, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v307, v309, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  v310 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v874 + 48);
  v311 = v875;
  if (v310(v308, 1, v875) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v306, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
    if (v310(v309, 1, v311) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v878, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  v312 = v869;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v308, v869, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  if (v310(v309, 1, v311) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v877, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v312, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
LABEL_59:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceDem?, Proto_Gpsd_SetAssistanceDem?);
    v272 = v878;
    goto LABEL_67;
  }
  v313 = v863;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v309, v863, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  v314 = specialized static Proto_Gpsd_SetAssistanceAlongTrackVelocity.== infix(_:_:)(v312, v313, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v313, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v877, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v312, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v308, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?);
  if ((v314 & 1) == 0)
  {
LABEL_68:
    swift_release();
    swift_release();
    return 0;
  }
LABEL_61:
  v315 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  v316 = v870;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v315, v870, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v317 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess();
  v318 = v872;
  v319 = v872 + *(int *)(v866 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v316, v872, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v317, v319, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  v320 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v867 + 48);
  v321 = v868;
  if (v320(v318, 1, v868) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v316, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
    if (v320(v319, 1, v321) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v872, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
      goto LABEL_71;
    }
    goto LABEL_66;
  }
  v322 = v318;
  v323 = v862;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v322, v862, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  if (v320(v319, 1, v321) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v870, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v323, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
LABEL_66:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceMapVector?, Proto_Gpsd_SetAssistanceMapVector?);
    v272 = v872;
    goto LABEL_67;
  }
  v325 = v854;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v319, v854, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  v326 = specialized static Proto_Gpsd_SetAssistanceMapVector.== infix(_:_:)(v323, v325);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v325, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v870, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v323, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v872, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?);
  if ((v326 & 1) == 0)
    goto LABEL_68;
LABEL_71:
  v327 = v250
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  v328 = v864;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v327, v864, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v329 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess();
  v330 = v865;
  v331 = v865 + *(int *)(v858 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v328, v865, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v329, v331, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  v332 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v859 + 48);
  v333 = v861;
  if (v332(v330, 1, v861) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v864, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
    if (v332(v331, 1, v333) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v865, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
      goto LABEL_78;
    }
    goto LABEL_76;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v865, v860, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  if (v332(v331, 1, v333) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v864, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v860, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
LABEL_76:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceMotionActivityContext?, Proto_Gpsd_SetAssistanceMotionActivityContext?);
    v272 = v865;
    goto LABEL_67;
  }
  v334 = v847;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v331, v847, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  v335 = v860;
  v336 = specialized static Proto_Gpsd_SetAssistanceMotionActivityContext.== infix(_:_:)(v860, v334);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v334, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v864, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v335, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v865, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?);
  if ((v336 & 1) == 0)
    goto LABEL_68;
LABEL_78:
  v337 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  v338 = v855;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v337, v855, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v339 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess();
  v340 = v857;
  v341 = v857 + *(int *)(v851 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v338, v857, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v339, v341, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  v342 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v852 + 48);
  if (v342(v340, 1, v856) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v855, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
    if (v342(v341, 1, v856) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v857, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
      goto LABEL_85;
    }
    goto LABEL_83;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v857, v853, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  if (v342(v341, 1, v856) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v855, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v853, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
LABEL_83:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceMountState?, Proto_Gpsd_SetAssistanceMountState?);
    v272 = v857;
    goto LABEL_67;
  }
  v343 = v840;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v341, v840, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  v344 = v853;
  v345 = specialized static Proto_Gpsd_SetAssistanceMountState.== infix(_:_:)(v853, v343);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v343, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v855, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v344, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v857, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?);
  if ((v345 & 1) == 0)
    goto LABEL_68;
LABEL_85:
  v346 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  v347 = v848;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v346, v848, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v348 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess();
  v349 = v850;
  v350 = v850 + *(int *)(v844 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v347, v850, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v348, v350, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  v351 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v845 + 48);
  if (v351(v349, 1, v849) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v848, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
    if (v351(v350, 1, v849) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v850, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
      goto LABEL_92;
    }
    goto LABEL_90;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v850, v846, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  if (v351(v350, 1, v849) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v848, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v846, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
LABEL_90:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceSignalEnvironment?, Proto_Gpsd_SetAssistanceSignalEnvironment?);
    v272 = v850;
    goto LABEL_67;
  }
  v352 = v833;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v350, v833, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  v353 = v846;
  v354 = specialized static Proto_Gpsd_SetAssistanceSignalEnvironment.== infix(_:_:)(v846, v352);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v352, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v848, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v353, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v850, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?);
  if ((v354 & 1) == 0)
    goto LABEL_68;
LABEL_92:
  v355 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  v356 = v841;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v355, v841, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v357 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess();
  v358 = v843;
  v359 = v843 + *(int *)(v837 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v356, v843, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v357, v359, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  v360 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v838 + 48);
  if (v360(v358, 1, v842) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v841, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
    if (v360(v359, 1, v842) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v843, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
      goto LABEL_99;
    }
    goto LABEL_97;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v843, v839, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  if (v360(v359, 1, v842) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v841, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v839, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
LABEL_97:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceSpeedConstraint?, Proto_Gpsd_SetAssistanceSpeedConstraint?);
    v272 = v843;
    goto LABEL_67;
  }
  v361 = v826;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v359, v826, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  v362 = v839;
  v363 = specialized static Proto_Gpsd_SetAssistanceSpeedConstraint.== infix(_:_:)(v839, v361);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v361, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v841, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v362, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v843, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?);
  if ((v363 & 1) == 0)
    goto LABEL_68;
LABEL_99:
  v364 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  v365 = v834;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v364, v834, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v366 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess();
  v367 = v836;
  v368 = v836 + *(int *)(v829 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v365, v836, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v366, v368, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  v369 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v830 + 48);
  if (v369(v367, 1, v835) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v834, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
    if (v369(v368, 1, v835) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v836, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v836, v831, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  if (v369(v368, 1, v835) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v834, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v831, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
LABEL_104:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetAssistanceAlongTrackVelocity?, Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
    v272 = v836;
    goto LABEL_67;
  }
  v370 = v819;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v368, v819, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  v371 = v831;
  v372 = specialized static Proto_Gpsd_SetAssistanceAlongTrackVelocity.== infix(_:_:)(v831, v370, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v370, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v834, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v371, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v836, &demangling cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?);
  if ((v372 & 1) == 0)
    goto LABEL_68;
LABEL_106:
  v373 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  v374 = v828;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v373, v828, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v375 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess();
  v376 = v832;
  v377 = v832 + *(int *)(v822 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v374, v832, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v375, v377, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  v378 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v823 + 48);
  if (v378(v376, 1, v827) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v828, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
    if (v378(v377, 1, v827) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v832, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v832, v825, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  if (v378(v377, 1, v827) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v828, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v825, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
LABEL_111:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_InjectAssistanceFile?, Proto_Gpsd_InjectAssistanceFile?);
    v272 = v832;
    goto LABEL_67;
  }
  v379 = v815;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v377, v815, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  v380 = v825;
  v381 = specialized static Proto_Gpsd_InjectAssistanceFile.== infix(_:_:)(v825, v379);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v379, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v828, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v380, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v832, &demangling cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?);
  if ((v381 & 1) == 0)
    goto LABEL_68;
LABEL_113:
  v382 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  v383 = v821;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v382, v821, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v384 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess();
  v385 = v824;
  v386 = v824 + *(int *)(v816 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v383, v824, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v384, v386, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  v387 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v817 + 48);
  if (v387(v385, 1, v820) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v821, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
    if (v387(v386, 1, v820) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v824, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
      goto LABEL_120;
    }
    goto LABEL_118;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v824, v818, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  if (v387(v386, 1, v820) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v821, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v818, type metadata accessor for Proto_Gpsd_InjectRtiFile);
LABEL_118:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_InjectRtiFile?, Proto_Gpsd_InjectRtiFile?);
    v272 = v824;
    goto LABEL_67;
  }
  v388 = v809;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v386, v809, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  v389 = v818;
  v390 = specialized static Proto_Gpsd_InjectRtiFile.== infix(_:_:)(v818, v388);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v388, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v821, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v389, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v824, &demangling cache variable for type metadata for Proto_Gpsd_InjectRtiFile?);
  if ((v390 & 1) == 0)
    goto LABEL_68;
LABEL_120:
  v391 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  v392 = v812;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v391, v812, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v393 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess();
  v394 = v814;
  v395 = v814 + *(int *)(v810 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v392, v814, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v393, v395, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  v396 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v811 + 48);
  if (v396(v394, 1, v813) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v812, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
    if (v396(v395, 1, v813) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v814, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
      goto LABEL_127;
    }
    goto LABEL_125;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v814, (uint64_t)v639, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  if (v396(v395, 1, v813) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v812, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v639, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
LABEL_125:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_InjectSvidBlocklist?, Proto_Gpsd_InjectSvidBlocklist?);
    v272 = v814;
    goto LABEL_67;
  }
  v397 = v640;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v395, (uint64_t)v640, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  v398 = v639;
  v399 = specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(v639, v397, type metadata accessor for Proto_Gnss_SvId, &lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v397, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v812, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v398, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v814, &demangling cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?);
  if ((v399 & 1) == 0)
    goto LABEL_68;
LABEL_127:
  v400 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  v401 = v643;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v400, v643, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v402 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess();
  v403 = v647;
  v404 = v647 + *(int *)(v641 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v401, v647, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v402, v404, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  v405 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v642 + 48);
  if (v405(v403, 1, v645) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v643, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
    if (v405(v404, 1, v645) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v647, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
      goto LABEL_134;
    }
    goto LABEL_132;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v647, v644, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  if (v405(v404, 1, v645) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v643, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v644, type metadata accessor for Proto_Gpsd_DeleteGnssData);
LABEL_132:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_DeleteGnssData?, Proto_Gpsd_DeleteGnssData?);
    v272 = v647;
    goto LABEL_67;
  }
  v406 = v646;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v404, v646, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  v407 = v644;
  v408 = specialized static Proto_Gpsd_SetNmeaHandler.== infix(_:_:)(v644, v406, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v406, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v643, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v407, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v647, &demangling cache variable for type metadata for Proto_Gpsd_DeleteGnssData?);
  if ((v408 & 1) == 0)
    goto LABEL_68;
LABEL_134:
  v409 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  v410 = v650;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v409, v650, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v411 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess();
  v412 = v654;
  v413 = v654 + *(int *)(v648 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v410, v654, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v411, v413, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  v414 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v649 + 48);
  if (v414(v412, 1, v652) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v650, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
    if (v414(v413, 1, v652) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v654, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
      goto LABEL_141;
    }
    goto LABEL_139;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v654, v651, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  if (v414(v413, 1, v652) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v650, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v651, type metadata accessor for Proto_Gpsd_SetPvtmReport);
LABEL_139:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetPvtmReport?, Proto_Gpsd_SetPvtmReport?);
    v272 = v654;
    goto LABEL_67;
  }
  v415 = v653;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v413, v653, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  v416 = v651;
  v417 = specialized static Proto_Gpsd_SetPvtmReport.== infix(_:_:)(v651, v415);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v415, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v650, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v416, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v654, &demangling cache variable for type metadata for Proto_Gpsd_SetPvtmReport?);
  if ((v417 & 1) == 0)
    goto LABEL_68;
LABEL_141:
  v418 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  v419 = v657;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v418, v657, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v420 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess();
  v421 = v661;
  v422 = v661 + *(int *)(v655 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v419, v661, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v420, v422, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  v423 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v656 + 48);
  if (v423(v421, 1, v659) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v657, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
    if (v423(v422, 1, v659) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v661, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
      goto LABEL_148;
    }
    goto LABEL_146;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v661, v658, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  if (v423(v422, 1, v659) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v657, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v658, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
LABEL_146:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetNmeaHandler?, Proto_Gpsd_SetNmeaHandler?);
    v272 = v661;
    goto LABEL_67;
  }
  v424 = v660;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v422, v660, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  v425 = v658;
  v426 = specialized static Proto_Gpsd_SetNmeaHandler.== infix(_:_:)(v658, v424, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v424, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v657, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v425, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v661, &demangling cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?);
  if ((v426 & 1) == 0)
    goto LABEL_68;
LABEL_148:
  v427 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  v428 = v664;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v427, v664, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v429 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess();
  v430 = v668;
  v431 = v668 + *(int *)(v662 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v428, v668, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v429, v431, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  v432 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v663 + 48);
  if (v432(v430, 1, v666) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v664, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
    if (v432(v431, 1, v666) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v668, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
      goto LABEL_155;
    }
    goto LABEL_153;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v668, v665, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  if (v432(v431, 1, v666) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v664, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v665, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
LABEL_153:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetConfigSimulatorMode?, Proto_Gpsd_SetConfigSimulatorMode?);
    v272 = v668;
    goto LABEL_67;
  }
  v433 = v667;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v431, v667, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  v434 = v665;
  v435 = specialized static Proto_Gpsd_SetConfigSimulatorMode.== infix(_:_:)(v665, v433);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v433, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v664, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v434, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v668, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?);
  if ((v435 & 1) == 0)
    goto LABEL_68;
LABEL_155:
  v436 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  v437 = v671;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v436, v671, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v438 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess();
  v439 = v675;
  v440 = v675 + *(int *)(v669 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v437, v675, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v438, v440, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  v441 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v670 + 48);
  if (v441(v439, 1, v673) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v671, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
    if (v441(v440, 1, v673) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v675, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
      goto LABEL_162;
    }
    goto LABEL_160;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v675, v672, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  if (v441(v440, 1, v673) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v671, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v672, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
LABEL_160:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetConfigEnableGnssConstellations?, Proto_Gpsd_SetConfigEnableGnssConstellations?);
    v272 = v675;
    goto LABEL_67;
  }
  v442 = v674;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v440, v674, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  v443 = v672;
  v444 = specialized static Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted.== infix(_:_:)(v672, v442, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v442, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v671, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v443, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v675, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?);
  if ((v444 & 1) == 0)
    goto LABEL_68;
LABEL_162:
  v445 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  v446 = v678;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v445, v678, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v447 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess();
  v448 = v682;
  v449 = v682 + *(int *)(v676 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v446, v682, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v447, v449, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  v450 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v677 + 48);
  if (v450(v448, 1, v680) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v678, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
    if (v450(v449, 1, v680) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v682, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
      goto LABEL_169;
    }
    goto LABEL_167;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v682, v679, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  if (v450(v449, 1, v680) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v678, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v679, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
LABEL_167:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetConfigDutyCycling?, Proto_Gpsd_SetConfigDutyCycling?);
    v272 = v682;
    goto LABEL_67;
  }
  v451 = v681;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v449, v681, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  v452 = v679;
  v453 = specialized static Proto_Gpsd_SetConfigDutyCycling.== infix(_:_:)(v679, v451, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v451, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v678, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v452, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v682, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?);
  if ((v453 & 1) == 0)
    goto LABEL_68;
LABEL_169:
  v454 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  v455 = v685;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v454, v685, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v456 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess();
  v457 = v689;
  v458 = v689 + *(int *)(v683 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v455, v689, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v456, v458, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  v459 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v684 + 48);
  if (v459(v457, 1, v687) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v685, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
    if (v459(v458, 1, v687) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v689, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
      goto LABEL_176;
    }
    goto LABEL_174;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v689, v686, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  if (v459(v458, 1, v687) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v685, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v686, type metadata accessor for Proto_Gpsd_TerminationImminent);
LABEL_174:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_TerminationImminent?, Proto_Gpsd_TerminationImminent?);
    v272 = v689;
    goto LABEL_67;
  }
  v460 = v688;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v458, v688, type metadata accessor for Proto_Gpsd_TerminationImminent);
  v461 = v686;
  v462 = specialized static Proto_Gpsd_TerminationImminent.== infix(_:_:)(v686, v460, type metadata accessor for Proto_Gpsd_TerminationImminent);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v460, type metadata accessor for Proto_Gpsd_TerminationImminent);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v685, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v461, type metadata accessor for Proto_Gpsd_TerminationImminent);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v689, &demangling cache variable for type metadata for Proto_Gpsd_TerminationImminent?);
  if ((v462 & 1) == 0)
    goto LABEL_68;
LABEL_176:
  v463 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  v464 = v692;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v463, v692, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v465 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess();
  v466 = v696;
  v467 = v696 + *(int *)(v690 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v464, v696, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v465, v467, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  v468 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v691 + 48);
  if (v468(v466, 1, v694) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v692, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
    if (v468(v467, 1, v694) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v696, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
      goto LABEL_183;
    }
    goto LABEL_181;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v696, v693, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  if (v468(v467, 1, v694) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v692, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v693, type metadata accessor for Proto_Gpsd_ExitMessage);
LABEL_181:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_ExitMessage?, Proto_Gpsd_ExitMessage?);
    v272 = v696;
    goto LABEL_67;
  }
  v469 = v695;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v467, v695, type metadata accessor for Proto_Gpsd_ExitMessage);
  v470 = v693;
  v471 = specialized static Proto_Gpsd_TerminationImminent.== infix(_:_:)(v693, v469, type metadata accessor for Proto_Gpsd_ExitMessage);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v469, type metadata accessor for Proto_Gpsd_ExitMessage);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v692, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v470, type metadata accessor for Proto_Gpsd_ExitMessage);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v696, &demangling cache variable for type metadata for Proto_Gpsd_ExitMessage?);
  if ((v471 & 1) == 0)
    goto LABEL_68;
LABEL_183:
  v472 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  v473 = v699;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v472, v699, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v474 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess();
  v475 = v703;
  v476 = v703 + *(int *)(v697 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v473, v703, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v474, v476, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  v477 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v698 + 48);
  if (v477(v475, 1, v701) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v699, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
    if (v477(v476, 1, v701) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v703, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
      goto LABEL_190;
    }
    goto LABEL_188;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v703, v700, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  if (v477(v476, 1, v701) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v699, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v700, type metadata accessor for Proto_Gpsd_LtlInfo);
LABEL_188:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo?, Proto_Gpsd_LtlInfo?);
    v272 = v703;
    goto LABEL_67;
  }
  v478 = v702;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v476, v702, type metadata accessor for Proto_Gpsd_LtlInfo);
  v479 = v700;
  v480 = specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(v700, v478, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gpsd_LtlInfo.== infix(_:_:));
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v478, type metadata accessor for Proto_Gpsd_LtlInfo);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v699, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v479, type metadata accessor for Proto_Gpsd_LtlInfo);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v703, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo?);
  if ((v480 & 1) == 0)
    goto LABEL_68;
LABEL_190:
  v481 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  v482 = v706;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v481, v706, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v483 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess();
  v484 = v710;
  v485 = v710 + *(int *)(v704 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v482, v710, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v483, v485, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  v486 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v705 + 48);
  if (v486(v484, 1, started) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v706, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
    if (v486(v485, 1, started) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v710, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
      goto LABEL_197;
    }
    goto LABEL_195;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v710, v707, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  if (v486(v485, 1, started) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v706, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v707, type metadata accessor for Proto_Gpsd_StartContext);
LABEL_195:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_StartContext?, Proto_Gpsd_StartContext?);
    v272 = v710;
    goto LABEL_67;
  }
  v487 = v709;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v485, v709, type metadata accessor for Proto_Gpsd_StartContext);
  v488 = v707;
  v489 = specialized static Proto_Gpsd_StartContext.== infix(_:_:)(v707, v487);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v487, type metadata accessor for Proto_Gpsd_StartContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v706, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v488, type metadata accessor for Proto_Gpsd_StartContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v710, &demangling cache variable for type metadata for Proto_Gpsd_StartContext?);
  if ((v489 & 1) == 0)
    goto LABEL_68;
LABEL_197:
  v490 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  v491 = v713;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v490, v713, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v492 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess();
  v493 = v717;
  v494 = v717 + *(int *)(v711 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v491, v717, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v492, v494, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  v495 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v712 + 48);
  if (v495(v493, 1, v715) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v713, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
    if (v495(v494, 1, v715) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v717, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
      goto LABEL_204;
    }
    goto LABEL_202;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v717, v714, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  if (v495(v494, 1, v715) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v713, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v714, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
LABEL_202:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_CntinStatusMessage?, Proto_Gpsd_CntinStatusMessage?);
    v272 = v717;
    goto LABEL_67;
  }
  v496 = v716;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v494, v716, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  v497 = v714;
  v498 = specialized static Proto_Gpsd_CntinStatusMessage.== infix(_:_:)(v714, v496);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v496, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v713, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v497, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v717, &demangling cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?);
  if ((v498 & 1) == 0)
    goto LABEL_68;
LABEL_204:
  v499 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  v500 = v720;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v499, v720, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v501 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess();
  v502 = v724;
  v503 = v724 + *(int *)(v718 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v500, v724, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v501, v503, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  v504 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v719 + 48);
  if (v504(v502, 1, v722) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v720, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
    if (v504(v503, 1, v722) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v724, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
      goto LABEL_211;
    }
    goto LABEL_209;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v724, v721, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  if (v504(v503, 1, v722) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v720, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v721, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
LABEL_209:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetThermalRiskState?, Proto_Gpsd_SetThermalRiskState?);
    v272 = v724;
    goto LABEL_67;
  }
  v505 = v723;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v503, v723, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  v506 = v721;
  v507 = specialized static Proto_Gpsd_SetThermalRiskState.== infix(_:_:)(v721, v505);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v505, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v720, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v506, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v724, &demangling cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?);
  if ((v507 & 1) == 0)
    goto LABEL_68;
LABEL_211:
  v508 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  v509 = v727;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v508, v727, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v510 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess();
  v511 = v731;
  v512 = v731 + *(int *)(v725 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v509, v731, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v510, v512, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  v513 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v726 + 48);
  if (v513(v511, 1, v729) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v727, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
    if (v513(v512, 1, v729) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v731, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
      goto LABEL_218;
    }
    goto LABEL_216;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v731, v728, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  if (v513(v512, 1, v729) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v727, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v728, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
LABEL_216:
    v271 = &demangling cache variable for type metadata for (Proto_Gpsd_SetConfigRfBandEnable?, Proto_Gpsd_SetConfigRfBandEnable?);
    v272 = v731;
    goto LABEL_67;
  }
  v514 = v730;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v512, v730, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  v515 = v728;
  v516 = specialized static Proto_Gpsd_SetConfigRfBandEnable.== infix(_:_:)(v728, v514);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v514, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v727, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v515, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v731, &demangling cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?);
  if ((v516 & 1) == 0)
    goto LABEL_68;
LABEL_218:
  v517 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  v518 = v734;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v517, v734, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v519 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess();
  v520 = v738;
  v521 = v738 + *(int *)(v732 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v518, v738, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v519, v521, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  v522 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v733 + 48);
  if (v522(v520, 1, v737) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v734, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
    if (v522(v521, 1, v737) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v738, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
      goto LABEL_225;
    }
    goto LABEL_223;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v738, v735, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  if (v522(v521, 1, v737) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v734, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v735, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
LABEL_223:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_EmergConfig?, Proto_Gnss_Emergency_EmergConfig?);
    v272 = v738;
    goto LABEL_67;
  }
  v523 = v736;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v521, v736, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_EmergConfig and conformance Proto_Gnss_Emergency_EmergConfig, type metadata accessor for Proto_Gnss_Emergency_EmergConfig, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_EmergConfig);
  v524 = v735;
  v525 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v523, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v734, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v524, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v738, &demangling cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?);
  if ((v525 & 1) == 0)
    goto LABEL_68;
LABEL_225:
  v526 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  v527 = v741;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v526, v741, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v528 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess();
  v529 = v745;
  v530 = v745 + *(int *)(v739 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v527, v745, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v528, v530, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  v531 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v740 + 48);
  if (v531(v529, 1, v744) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v741, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
    if (v531(v530, 1, v744) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v745, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
      goto LABEL_232;
    }
    goto LABEL_230;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v745, v742, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  if (v531(v530, 1, v744) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v741, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v742, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
LABEL_230:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_PositionRequest?, Proto_Gnss_Emergency_PositionRequest?);
    v272 = v745;
    goto LABEL_67;
  }
  v532 = v743;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v530, v743, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_PositionRequest and conformance Proto_Gnss_Emergency_PositionRequest, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_PositionRequest);
  v533 = v742;
  v534 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v532, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v741, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v533, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v745, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?);
  if ((v534 & 1) == 0)
    goto LABEL_68;
LABEL_232:
  v535 = (int *)(v638
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
  swift_beginAccess();
  v536 = *v535;
  v537 = *((_BYTE *)v535 + 4);
  v538 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  swift_beginAccess();
  if ((v537 & 1) != 0)
  {
    if ((*(_BYTE *)(v538 + 4) & 1) == 0)
      goto LABEL_68;
  }
  else if ((*(_BYTE *)(v538 + 4) & 1) != 0 || v536 != *(_DWORD *)v538)
  {
    goto LABEL_68;
  }
  v539 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  v540 = v748;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v539, v748, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v541 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess();
  v542 = v752;
  v543 = v752 + *(int *)(v746 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v540, v752, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v541, v543, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  v544 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v747 + 48);
  if (v544(v542, 1, v751) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v748, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
    if (v544(v543, 1, v751) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v752, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
      goto LABEL_244;
    }
    goto LABEL_242;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v752, v749, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  if (v544(v543, 1, v751) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v748, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v749, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
LABEL_242:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_GpsReferenceTime?, Proto_Gnss_Emergency_GpsReferenceTime?);
    v272 = v752;
    goto LABEL_67;
  }
  v545 = v750;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v543, v750, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsReferenceTime and conformance Proto_Gnss_Emergency_GpsReferenceTime, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_GpsReferenceTime);
  v546 = v749;
  v547 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v545, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v748, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v546, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v752, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?);
  if ((v547 & 1) == 0)
    goto LABEL_68;
LABEL_244:
  v548 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  v549 = v755;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v548, v755, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v550 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess();
  v551 = v759;
  v552 = v759 + *(int *)(v753 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v549, v759, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v550, v552, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  v553 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v754 + 48);
  if (v553(v551, 1, v758) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v755, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
    if (v553(v552, 1, v758) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v759, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
      goto LABEL_251;
    }
    goto LABEL_249;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v759, v756, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  if (v553(v552, 1, v758) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v755, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v756, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
LABEL_249:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_ReferenceLocation?, Proto_Gnss_Emergency_ReferenceLocation?);
    v272 = v759;
    goto LABEL_67;
  }
  v554 = v757;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v552, v757, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_ReferenceLocation and conformance Proto_Gnss_Emergency_ReferenceLocation, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_ReferenceLocation);
  v555 = v756;
  v556 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v554, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v755, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v555, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v759, &demangling cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?);
  if ((v556 & 1) == 0)
    goto LABEL_68;
LABEL_251:
  v557 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  v558 = v762;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v557, v762, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v559 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess();
  v560 = v766;
  v561 = v766 + *(int *)(v760 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v558, v766, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v559, v561, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  v562 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v761 + 48);
  if (v562(v560, 1, v765) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v762, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
    if (v562(v561, 1, v765) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v766, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
      goto LABEL_258;
    }
    goto LABEL_256;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v766, v763, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  if (v562(v561, 1, v765) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v762, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v763, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
LABEL_256:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_GpsNavigationModel?, Proto_Gnss_Emergency_GpsNavigationModel?);
    v272 = v766;
    goto LABEL_67;
  }
  v563 = v764;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v561, v764, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsNavigationModel and conformance Proto_Gnss_Emergency_GpsNavigationModel, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_GpsNavigationModel);
  v564 = v763;
  v565 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v563, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v762, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v564, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v766, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?);
  if ((v565 & 1) == 0)
    goto LABEL_68;
LABEL_258:
  v566 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  v567 = v769;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v566, v769, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v568 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess();
  v569 = v773;
  v570 = v773 + *(int *)(v767 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v567, v773, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v568, v570, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  v571 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v768 + 48);
  if (v571(v569, 1, v772) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v769, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
    if (v571(v570, 1, v772) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v773, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
      goto LABEL_265;
    }
    goto LABEL_263;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v773, v770, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  if (v571(v570, 1, v772) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v769, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v770, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
LABEL_263:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_GpsAcqAssistance?, Proto_Gnss_Emergency_GpsAcqAssistance?);
    v272 = v773;
    goto LABEL_67;
  }
  v572 = v771;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v570, v771, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_GpsAcqAssistance and conformance Proto_Gnss_Emergency_GpsAcqAssistance, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_GpsAcqAssistance);
  v573 = v770;
  v574 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v572, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v769, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v573, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v773, &demangling cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?);
  if ((v574 & 1) == 0)
    goto LABEL_68;
LABEL_265:
  v575 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  v576 = v776;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v575, v776, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v577 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess();
  v578 = v780;
  v579 = v780 + *(int *)(v774 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v576, v780, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v577, v579, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  v580 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v775 + 48);
  if (v580(v578, 1, v779) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v776, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
    if (v580(v579, 1, v779) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v780, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
      goto LABEL_272;
    }
    goto LABEL_270;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v780, v777, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  if (v580(v579, 1, v779) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v776, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v777, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
LABEL_270:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_CellFTAssistance?, Proto_Gnss_Emergency_CellFTAssistance?);
    v272 = v780;
    goto LABEL_67;
  }
  v581 = v778;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v579, v778, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CellFTAssistance and conformance Proto_Gnss_Emergency_CellFTAssistance, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_CellFTAssistance);
  v582 = v777;
  v583 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v581, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v776, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v582, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v780, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?);
  if ((v583 & 1) == 0)
    goto LABEL_68;
LABEL_272:
  v584 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  v585 = v783;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v584, v783, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v586 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess();
  v587 = v787;
  v588 = v787 + *(int *)(v781 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v585, v787, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v586, v588, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  v589 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v782 + 48);
  if (v589(v587, 1, v786) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v783, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
    if (v589(v588, 1, v786) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v787, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
      goto LABEL_279;
    }
    goto LABEL_277;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v787, v784, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  if (v589(v588, 1, v786) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v783, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v784, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
LABEL_277:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_CplaneContext?, Proto_Gnss_Emergency_CplaneContext?);
    v272 = v787;
    goto LABEL_67;
  }
  v590 = v785;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v588, v785, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CplaneContext and conformance Proto_Gnss_Emergency_CplaneContext, type metadata accessor for Proto_Gnss_Emergency_CplaneContext, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_CplaneContext);
  v591 = v784;
  v592 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v590, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v783, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v591, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v787, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?);
  if ((v592 & 1) == 0)
    goto LABEL_68;
LABEL_279:
  v593 = (uint64_t *)(v638
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  swift_beginAccess();
  v594 = *v593;
  v595 = (uint64_t *)(v908
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  swift_beginAccess();
  if (!specialized static Array<A>.== infix(_:_:)(v594, *v595))
    goto LABEL_68;
  v596 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  v597 = v790;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v596, v790, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v598 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess();
  v599 = v794;
  v600 = v794 + *(int *)(v788 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v597, v794, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v598, v600, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  v601 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v789 + 48);
  if (v601(v599, 1, v793) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v790, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
    if (v601(v600, 1, v793) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v794, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
      goto LABEL_287;
    }
    goto LABEL_285;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v794, v791, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  if (v601(v600, 1, v793) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v790, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v791, type metadata accessor for Proto_Gnss_Emergency_LocationId);
LABEL_285:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_LocationId?, Proto_Gnss_Emergency_LocationId?);
    v272 = v794;
    goto LABEL_67;
  }
  v602 = v792;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v600, v792, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_LocationId and conformance Proto_Gnss_Emergency_LocationId, type metadata accessor for Proto_Gnss_Emergency_LocationId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_LocationId);
  v603 = v791;
  v604 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v602, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v790, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v603, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v794, &demangling cache variable for type metadata for Proto_Gnss_Emergency_LocationId?);
  if ((v604 & 1) == 0)
    goto LABEL_68;
LABEL_287:
  v605 = (int *)(v638
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
  swift_beginAccess();
  v606 = *v605;
  v607 = *((_BYTE *)v605 + 4);
  v608 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess();
  if ((v607 & 1) != 0)
  {
    if ((*(_BYTE *)(v608 + 4) & 1) == 0)
      goto LABEL_68;
  }
  else if ((*(_BYTE *)(v608 + 4) & 1) != 0 || v606 != *(_DWORD *)v608)
  {
    goto LABEL_68;
  }
  v609 = (uint64_t *)(v638
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  swift_beginAccess();
  v610 = *v609;
  v611 = (uint64_t *)(v908
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  swift_beginAccess();
  if (!specialized static Array<A>.== infix(_:_:)(v610, *v611))
    goto LABEL_68;
  v612 = (unsigned __int8 *)(v638
                           + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  v613 = *v612;
  v614 = (unsigned __int8 *)(v908
                           + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess();
  v615 = *v614;
  if (v613 == 2)
  {
    if (v615 != 2)
      goto LABEL_68;
  }
  else if (v615 == 2 || ((((v615 & 1) == 0) ^ v613) & 1) == 0)
  {
    goto LABEL_68;
  }
  v616 = (int *)(v638
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
  swift_beginAccess();
  v617 = *v616;
  v618 = *((_BYTE *)v616 + 4);
  v619 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess();
  if ((v618 & 1) != 0)
  {
    if ((*(_BYTE *)(v619 + 4) & 1) == 0)
      goto LABEL_68;
  }
  else if ((*(_BYTE *)(v619 + 4) & 1) != 0 || v617 != *(_DWORD *)v619)
  {
    goto LABEL_68;
  }
  v620 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  v621 = v797;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v620, v797, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v622 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess();
  v623 = v801;
  v624 = v801 + *(int *)(v795 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v621, v801, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v622, v624, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  v625 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v796 + 48);
  if (v625(v623, 1, v800) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v797, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
    if (v625(v624, 1, v800) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v801, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
      goto LABEL_310;
    }
    goto LABEL_308;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v801, v798, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  if (v625(v624, 1, v800) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v797, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v798, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
LABEL_308:
    v271 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_SuplContext?, Proto_Gnss_Emergency_SuplContext?);
    v272 = v801;
    goto LABEL_67;
  }
  v626 = v799;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v624, v799, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SuplContext and conformance Proto_Gnss_Emergency_SuplContext, type metadata accessor for Proto_Gnss_Emergency_SuplContext, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_SuplContext);
  v627 = v798;
  v628 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v626, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v797, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v627, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v801, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?);
  if ((v628 & 1) == 0)
    goto LABEL_68;
LABEL_310:
  v629 = v638
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  v630 = v804;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v629, v804, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v631 = v908
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess();
  v632 = v808;
  v633 = v808 + *(int *)(v802 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v630, v808, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v631, v633, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  v634 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v803 + 48);
  if (v634(v632, 1, v807) == 1)
  {
    swift_release();
    swift_release();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v804, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
    if (v634(v633, 1, v807) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v808, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
      return 1;
    }
LABEL_316:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v808, &demangling cache variable for type metadata for (Proto_Gnss_Emergency_WlanMeasurementList?, Proto_Gnss_Emergency_WlanMeasurementList?));
    return 0;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v808, v805, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  if (v634(v633, 1, v807) == 1)
  {
    swift_release();
    swift_release();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v804, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v805, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
    goto LABEL_316;
  }
  v635 = v806;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v633, v806, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_WlanMeasurementList and conformance Proto_Gnss_Emergency_WlanMeasurementList, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_WlanMeasurementList);
  v636 = v805;
  v637 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_release();
  swift_release();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v635, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v804, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v636, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v808, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?);
  return (v637 & 1) != 0;
}

Swift::Int Proto_Gpsd_Request.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_Request, &lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_Request@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for Message.init() in conformance CLP_LogEntry_PrivateData_SyncState(a1, &one-time initialization token for defaultInstance, &static Proto_Gpsd_Request._StorageClass.defaultInstance, a2);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_Request()
{
  return Proto_Gpsd_Request.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_Request.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_Request()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Request@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Request._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_Request()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Request()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
  return Message.hash(into:)();
}

uint64_t Proto_Gpsd_Request.TypeEnum._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Request.TypeEnum._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Request.TypeEnum._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Request.TypeEnum._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Request.TypeEnum@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Request.TypeEnum._protobuf_nameMap, a1);
}

void *Proto_Gpsd_Response.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_Response.protoMessageName;
}

unint64_t static Proto_Gpsd_Response.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t Proto_Gpsd_Response._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Response._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Response._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Response._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_Response.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        type metadata accessor for Proto_Gpsd_Response(0);
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
      }
      else if (result == 1)
      {
        type metadata accessor for Proto_Gpsd_Response(0);
        lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
        goto LABEL_5;
      }
LABEL_12:
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
    type metadata accessor for Proto_Gpsd_Response(0);
    lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
LABEL_5:
    dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
    goto LABEL_12;
  }
  return result;
}

uint64_t Proto_Gpsd_Response.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_Response(0);
  v3 = result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 61)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + *(int *)(v3 + 28)) != 10)
    {
      lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_Response.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_Response, &lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_Response@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 61;
  v6 = a2 + v5;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + a1[7]) = 10;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_Response()
{
  return Proto_Gpsd_Response.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_Response()
{
  return Proto_Gpsd_Response.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_Response()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Response@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Response._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_Response()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Response()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
  return Message.hash(into:)();
}

void *Proto_Gpsd_Indication.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_Indication.protoMessageName;
}

unint64_t static Proto_Gpsd_Indication.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t Proto_Gpsd_Indication._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Indication._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Indication._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Indication._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_Indication._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD v164[2];
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  _BYTE *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  MEMORY[0x24BDAC7A8](v3);
  v207 = (uint64_t)v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  MEMORY[0x24BDAC7A8](v5);
  v206 = (uint64_t)v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  MEMORY[0x24BDAC7A8](v7);
  v205 = (uint64_t)v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  MEMORY[0x24BDAC7A8](v9);
  v204 = (uint64_t)v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  MEMORY[0x24BDAC7A8](v11);
  v203 = (uint64_t)v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  MEMORY[0x24BDAC7A8](v13);
  v202 = (uint64_t)v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  MEMORY[0x24BDAC7A8](v15);
  v201 = (uint64_t)v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  MEMORY[0x24BDAC7A8](v17);
  v200 = (uint64_t)v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  MEMORY[0x24BDAC7A8](v19);
  v199 = (uint64_t)v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  MEMORY[0x24BDAC7A8](v21);
  v198 = (uint64_t)v164 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  MEMORY[0x24BDAC7A8](v23);
  v197 = (uint64_t)v164 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  MEMORY[0x24BDAC7A8](v25);
  v196 = (uint64_t)v164 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  MEMORY[0x24BDAC7A8](v27);
  v194 = (uint64_t)v164 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  MEMORY[0x24BDAC7A8](v29);
  v190 = (uint64_t)v164 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  MEMORY[0x24BDAC7A8](v31);
  v187 = (uint64_t)v164 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  MEMORY[0x24BDAC7A8](v33);
  v183 = (uint64_t)v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  MEMORY[0x24BDAC7A8](v35);
  v179 = (uint64_t)v164 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  MEMORY[0x24BDAC7A8](v37);
  v174 = (uint64_t)v164 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  MEMORY[0x24BDAC7A8](v39);
  v170 = (uint64_t)v164 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  MEMORY[0x24BDAC7A8](v41);
  v166 = (uint64_t)v164 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)v164 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v1 + 16) = 15640;
  *(_QWORD *)(v1 + 24) = 0;
  v164[1] = v1 + 17;
  *(_BYTE *)(v1 + 32) = 1;
  v46 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  v47 = type metadata accessor for Proto_Gnss_Fix(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  v48 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  v49 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
  v50 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  v51 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
  v52 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  v165 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  v53 = type metadata accessor for Proto_Gpsd_Status(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
  v54 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  v167 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  v55 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 1, 1, v55);
  v56 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  v168 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  v57 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
  v58 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  v169 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  v59 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
  v60 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  v171 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  v61 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  v62 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  v172 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  v63 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 1, 1, v63);
  v173 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus) = 10;
  v64 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  *v64 = 10;
  v65 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  v175 = v64;
  v176 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  v66 = type metadata accessor for Proto_Gpsd_CntinClockControl(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 1, 1, v66);
  v67 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  v177 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  v68 = type metadata accessor for Proto_Gpsd_Exception(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 1, 1, v68);
  v69 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  v178 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  v70 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
  v71 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  v180 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  v72 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 1, 1, v72);
  v73 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  v181 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  v74 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 1, 1, v74);
  v75 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  v182 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  v76 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 1, 1, v76);
  v77 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  v184 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  v78 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 1, 1, v78);
  v79 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  v185 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  v80 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 1, 1, v80);
  v81 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  v186 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  v82 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v81, 1, 1, v82);
  v83 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  v188 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  v84 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 1, 1, v84);
  v85 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  v189 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  v86 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 1, 1, v86);
  v87 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  v191 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  *(_DWORD *)v87 = 0;
  *(_BYTE *)(v87 + 4) = 1;
  v88 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  *v88 = 4;
  v89 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  v192 = v88;
  v193 = v89;
  *(_DWORD *)v89 = 0;
  *(_BYTE *)(v89 + 4) = 1;
  v90 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  v195 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  v91 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 1, 1, v91);
  swift_beginAccess();
  LOBYTE(v90) = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v90;
  swift_beginAccess();
  v92 = *(_BYTE *)(a1 + 17);
  swift_beginAccess();
  *(_BYTE *)(v1 + 17) = v92;
  swift_beginAccess();
  v93 = *(_QWORD *)(a1 + 24);
  LOBYTE(v90) = *(_BYTE *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = v93;
  *(_BYTE *)(v1 + 32) = v90;
  v94 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v94, (uint64_t)v45, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v45, v46, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  swift_endAccess();
  v95 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  v96 = v166;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v95, v166, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v96, v48, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  swift_endAccess();
  v97 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  v98 = v170;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v97, v170, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v98, v50, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  swift_endAccess();
  v99 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  v100 = v174;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v99, v174, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v101 = v165;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v100, v101, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  swift_endAccess();
  v102 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  v103 = v179;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v102, v179, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v104 = v167;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v103, v104, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  swift_endAccess();
  v105 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  v106 = v183;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v105, v183, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v107 = v168;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v106, v107, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  swift_endAccess();
  v108 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  v109 = v187;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v108, v187, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v110 = v169;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v109, v110, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  swift_endAccess();
  v111 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  v112 = v190;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v111, v190, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v113 = v171;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v112, v113, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  swift_endAccess();
  v114 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  v115 = v194;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v114, v194, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v116 = v172;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v115, v116, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  swift_endAccess();
  v117 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess();
  LOBYTE(v117) = *v117;
  v118 = v173;
  swift_beginAccess();
  *v118 = (_BYTE)v117;
  v119 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess();
  LOBYTE(v119) = *v119;
  v120 = v175;
  swift_beginAccess();
  *v120 = (_BYTE)v119;
  v121 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  v122 = v196;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v121, v196, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v123 = v176;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v122, v123, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  swift_endAccess();
  v124 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  v125 = v197;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v124, v197, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v126 = v177;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v125, v126, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  swift_endAccess();
  v127 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  v128 = v198;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v127, v198, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v129 = v178;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v128, v129, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  swift_endAccess();
  v130 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  v131 = v199;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v130, v199, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v132 = v180;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v131, v132, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  swift_endAccess();
  v133 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  v134 = v200;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v133, v200, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v135 = v181;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v134, v135, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  swift_endAccess();
  v136 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  v137 = v201;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v136, v201, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v138 = v182;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v137, v138, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  swift_endAccess();
  v139 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  v140 = v202;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v139, v202, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v141 = v184;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v140, v141, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  swift_endAccess();
  v142 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  v143 = v203;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v142, v203, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v144 = v185;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v143, v144, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  swift_endAccess();
  v145 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  v146 = v204;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v145, v204, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v147 = v186;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v146, v147, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  swift_endAccess();
  v148 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  v149 = v205;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v148, v205, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v150 = v188;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v149, v150, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  swift_endAccess();
  v151 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  v152 = v206;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v151, v206, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v153 = v189;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v152, v153, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  swift_endAccess();
  v154 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess();
  LODWORD(v152) = *(_DWORD *)v154;
  LOBYTE(v154) = *(_BYTE *)(v154 + 4);
  v155 = v191;
  swift_beginAccess();
  *(_DWORD *)v155 = v152;
  *(_BYTE *)(v155 + 4) = v154;
  v156 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess();
  LOBYTE(v156) = *v156;
  v157 = v192;
  swift_beginAccess();
  *v157 = (_BYTE)v156;
  v158 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess();
  LODWORD(v157) = *(_DWORD *)v158;
  LOBYTE(v158) = *(_BYTE *)(v158 + 4);
  v159 = v193;
  swift_beginAccess();
  *(_DWORD *)v159 = (_DWORD)v157;
  *(_BYTE *)(v159 + 4) = v158;
  v160 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  v161 = v207;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v160, v207, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  swift_release();
  v162 = v195;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v161, v162, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  swift_endAccess();
  return v1;
}

uint64_t Proto_Gpsd_Indication._StorageClass.__deallocating_deinit()
{
  uint64_t v0;

  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  return swift_deallocClassInstance();
}

uint64_t Proto_Gpsd_Indication.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  unint64_t *v11;
  void *v12;

  v2 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
    v3 = swift_allocObject();
    v4 = swift_retain();
    Proto_Gpsd_Indication._StorageClass.init(copying:)(v4);
    *(_QWORD *)(v0 + v2) = v3;
    swift_release();
  }
  swift_retain();
  v5 = dispatch thunk of Decoder.nextFieldNumber()();
  v7 = v1;
  if (!v1)
  {
    while ((v6 & 1) == 0)
    {
      switch(v5)
      {
        case 1:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum();
          goto LABEL_32;
        case 2:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
          goto LABEL_32;
        case 3:
          swift_beginAccess();
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_36;
        case 4:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Fix(0);
          v10 = type metadata accessor for Proto_Gnss_Fix;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix;
          v12 = &protocol conformance descriptor for Proto_Gnss_Fix;
          goto LABEL_35;
        case 5:
          swift_beginAccess();
          type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
          v10 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents;
          v11 = &lazy protocol witness table cache variable for type CLP_LogEntry_PrivateData_MeasurementReportCallbackContents and conformance CLP_LogEntry_PrivateData_MeasurementReportCallbackContents;
          v12 = &protocol conformance descriptor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents;
          goto LABEL_35;
        case 6:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_PwrMeasurement(0);
          v10 = type metadata accessor for Proto_Gnss_PwrMeasurement;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement;
          v12 = &protocol conformance descriptor for Proto_Gnss_PwrMeasurement;
          goto LABEL_35;
        case 9:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_Status(0);
          v10 = type metadata accessor for Proto_Gpsd_Status;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status;
          v12 = &protocol conformance descriptor for Proto_Gpsd_Status;
          goto LABEL_35;
        case 10:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
          v10 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend;
          v12 = &protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend;
          goto LABEL_35;
        case 16:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
          v10 = type metadata accessor for Proto_Gpsd_RecoveryStatistics;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics;
          v12 = &protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics;
          goto LABEL_35;
        case 17:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
          v10 = type metadata accessor for Proto_Gpsd_LtlInfoRequest;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest;
          v12 = &protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest;
          goto LABEL_35;
        case 18:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
          v10 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris;
          v12 = &protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris;
          goto LABEL_35;
        case 19:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_DecodedRti(0);
          v10 = type metadata accessor for Proto_Gnss_DecodedRti;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti;
          v12 = &protocol conformance descriptor for Proto_Gnss_DecodedRti;
          goto LABEL_35;
        case 20:
        case 22:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
          goto LABEL_32;
        case 21:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_CntinClockControl(0);
          v10 = type metadata accessor for Proto_Gpsd_CntinClockControl;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl;
          v12 = &protocol conformance descriptor for Proto_Gpsd_CntinClockControl;
          goto LABEL_35;
        case 23:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_Exception(0);
          v10 = type metadata accessor for Proto_Gpsd_Exception;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception;
          v12 = &protocol conformance descriptor for Proto_Gpsd_Exception;
          goto LABEL_35;
        case 25:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
          v10 = type metadata accessor for Proto_Gpsd_AskBasebandReset;
          v11 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset;
          v12 = &protocol conformance descriptor for Proto_Gpsd_AskBasebandReset;
          goto LABEL_35;
        case 30:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SummaryReport and conformance Proto_Gnss_Emergency_SummaryReport;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_SummaryReport;
          goto LABEL_35;
        case 40:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_PositionReport;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_PositionReport and conformance Proto_Gnss_Emergency_PositionReport;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_PositionReport;
          goto LABEL_35;
        case 41:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_MeasurementReport and conformance Proto_Gnss_Emergency_MeasurementReport;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_MeasurementReport;
          goto LABEL_35;
        case 42:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_AssistanceNeededReport and conformance Proto_Gnss_Emergency_AssistanceNeededReport;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_AssistanceNeededReport;
          goto LABEL_35;
        case 43:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CellFTAssistanceRequest and conformance Proto_Gnss_Emergency_CellFTAssistanceRequest;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_CellFTAssistanceRequest;
          goto LABEL_35;
        case 44:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_MeasurementReportWithEstimate and conformance Proto_Gnss_Emergency_MeasurementReportWithEstimate;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_MeasurementReportWithEstimate;
          goto LABEL_35;
        case 50:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SessionStatus and conformance Proto_Gnss_Emergency_SessionStatus;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_SessionStatus;
          goto LABEL_35;
        case 51:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_Init(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_Init;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_Init and conformance Proto_Gnss_Emergency_Init;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_Init;
          goto LABEL_35;
        case 52:
        case 54:
          swift_beginAccess();
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_36;
        case 53:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult();
LABEL_32:
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_36;
        case 55:
          swift_beginAccess();
          type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
          v10 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest;
          v11 = &lazy protocol witness table cache variable for type Proto_Gnss_Emergency_WlanMeasurementRequest and conformance Proto_Gnss_Emergency_WlanMeasurementRequest;
          v12 = &protocol conformance descriptor for Proto_Gnss_Emergency_WlanMeasurementRequest;
LABEL_35:
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(v11, v10, (uint64_t)v12);
          v9 = v7;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
LABEL_36:
          v7 = v9;
          swift_endAccess();
          break;
        default:
          break;
      }
      v5 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v9;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;

  v5 = v3;
  v9 = *(_BYTE **)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0) + 20));
  swift_retain();
  swift_beginAccess();
  if (v9[16] != 24)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  if (v4)
    return swift_release();
  swift_beginAccess();
  if (v9[17] != 61)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v9[32] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  closure #4 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #5 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #6 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #7 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #8 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #9 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #10 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #11 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #12 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  v11 = &v9[OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus];
  swift_beginAccess();
  if (*v11 != 10)
  {
    lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  closure #14 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  v12 = &v9[OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus];
  swift_beginAccess();
  if (*v12 != 10)
  {
    lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  closure #16 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #17 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #18 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #19 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #20 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #21 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #22 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #23 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #24 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #25 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  v13 = &v9[OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex];
  swift_beginAccess();
  if ((v13[4] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  v14 = &v9[OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult];
  swift_beginAccess();
  if (*v14 != 4)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  v15 = &v9[OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance];
  swift_beginAccess();
  if ((v15[4] & 1) == 0)
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  closure #29 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t closure #4 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Fix(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Fix);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Fix);
}

uint64_t closure #5 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_PrivateData_MeasurementReportCallbackContents and conformance CLP_LogEntry_PrivateData_MeasurementReportCallbackContents, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
}

uint64_t closure #6 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_PwrMeasurement);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t closure #7 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_Status(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_Status);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t closure #8 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t closure #9 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t closure #10 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t closure #11 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t closure #12 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_DecodedRti);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t closure #14 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_CntinClockControl(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_CntinClockControl);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t closure #16 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_Exception(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_Exception);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t closure #17 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t closure #18 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SummaryReport and conformance Proto_Gnss_Emergency_SummaryReport, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_SummaryReport);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

uint64_t closure #19 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_PositionReport and conformance Proto_Gnss_Emergency_PositionReport, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_PositionReport);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t closure #20 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_MeasurementReport and conformance Proto_Gnss_Emergency_MeasurementReport, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_MeasurementReport);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

uint64_t closure #21 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_AssistanceNeededReport and conformance Proto_Gnss_Emergency_AssistanceNeededReport, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_AssistanceNeededReport);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t closure #22 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CellFTAssistanceRequest and conformance Proto_Gnss_Emergency_CellFTAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

uint64_t closure #23 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_MeasurementReportWithEstimate and conformance Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t closure #24 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SessionStatus and conformance Proto_Gnss_Emergency_SessionStatus, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_SessionStatus);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

uint64_t closure #25 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Init);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_Init and conformance Proto_Gnss_Emergency_Init, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_Init);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_Init);
}

uint64_t closure #29 in closure #1 in Proto_Gpsd_Indication.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_WlanMeasurementRequest and conformance Proto_Gnss_Emergency_WlanMeasurementRequest, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t static Proto_Gpsd_Indication.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_Indication, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gpsd_Indication.== infix(_:_:)) & 1;
}

BOOL closure #1 in static Proto_Gpsd_Indication.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned int (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t (*v190)(uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int (*v205)(uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned int (*v217)(uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t *v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unsigned int (*v229)(uint64_t, uint64_t, uint64_t);
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unsigned int (*v239)(uint64_t, uint64_t, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unsigned int (*v249)(uint64_t, uint64_t, uint64_t);
  uint64_t v250;
  uint64_t v251;
  char v252;
  unsigned __int8 *v253;
  int v254;
  unsigned __int8 *v255;
  int v256;
  unsigned __int8 *v257;
  int v258;
  unsigned __int8 *v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unsigned int (*v266)(uint64_t, uint64_t, uint64_t);
  uint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unsigned int (*v275)(uint64_t, uint64_t, uint64_t);
  uint64_t v276;
  uint64_t v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unsigned int (*v284)(uint64_t, uint64_t, uint64_t);
  uint64_t v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unsigned int (*v293)(uint64_t, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  char v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unsigned int (*v302)(uint64_t, uint64_t, uint64_t);
  uint64_t v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unsigned int (*v311)(uint64_t, uint64_t, uint64_t);
  uint64_t v312;
  uint64_t v313;
  char v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unsigned int (*v320)(uint64_t, uint64_t, uint64_t);
  uint64_t v321;
  uint64_t v322;
  char v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unsigned int (*v329)(uint64_t, uint64_t, uint64_t);
  uint64_t v330;
  uint64_t v331;
  char v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unsigned int (*v338)(uint64_t, uint64_t, uint64_t);
  uint64_t v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unsigned int (*v347)(uint64_t, uint64_t, uint64_t);
  uint64_t v348;
  uint64_t v349;
  char v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unsigned int (*v356)(uint64_t, uint64_t, uint64_t);
  uint64_t v357;
  uint64_t v358;
  char v359;
  int *v360;
  int v361;
  char v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  int *v368;
  int v369;
  char v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  unsigned int (*v377)(uint64_t, uint64_t, uint64_t);
  uint64_t v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t *v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  char *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  char *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  char v526;
  char v527;
  char v528;
  char v529;

  v442 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  v438 = *(_QWORD *)(v442 - 8);
  MEMORY[0x24BDAC7A8](v442);
  v441 = (uint64_t)&v381 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v437 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_WlanMeasurementRequest?, Proto_Gnss_Emergency_WlanMeasurementRequest?));
  MEMORY[0x24BDAC7A8](v437);
  v443 = (uint64_t)&v381 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v440 = (uint64_t)&v381 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v439 = (uint64_t)&v381 - v9;
  v435 = type metadata accessor for Proto_Gnss_Emergency_Init(0);
  v431 = *(_QWORD *)(v435 - 8);
  MEMORY[0x24BDAC7A8](v435);
  v434 = (uint64_t)&v381 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v430 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_Init?, Proto_Gnss_Emergency_Init?));
  MEMORY[0x24BDAC7A8](v430);
  v436 = (uint64_t)&v381 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v433 = (uint64_t)&v381 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v432 = (uint64_t)&v381 - v15;
  v428 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0);
  v424 = *(_QWORD *)(v428 - 8);
  MEMORY[0x24BDAC7A8](v428);
  v427 = (uint64_t)&v381 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v423 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_SessionStatus?, Proto_Gnss_Emergency_SessionStatus?));
  MEMORY[0x24BDAC7A8](v423);
  v429 = (uint64_t)&v381 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v426 = (uint64_t)&v381 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v425 = (uint64_t)&v381 - v21;
  v421 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0);
  v417 = *(_QWORD *)(v421 - 8);
  MEMORY[0x24BDAC7A8](v421);
  v420 = (uint64_t)&v381 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v416 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_MeasurementReportWithEstimate?, Proto_Gnss_Emergency_MeasurementReportWithEstimate?));
  MEMORY[0x24BDAC7A8](v416);
  v422 = (uint64_t)&v381 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v419 = (uint64_t)&v381 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v418 = (uint64_t)&v381 - v27;
  v414 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0);
  v410 = *(_QWORD *)(v414 - 8);
  MEMORY[0x24BDAC7A8](v414);
  v413 = (uint64_t)&v381 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v409 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_CellFTAssistanceRequest?, Proto_Gnss_Emergency_CellFTAssistanceRequest?));
  MEMORY[0x24BDAC7A8](v409);
  v415 = (uint64_t)&v381 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v412 = (uint64_t)&v381 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v411 = (uint64_t)&v381 - v33;
  v407 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0);
  v403 = *(_QWORD *)(v407 - 8);
  MEMORY[0x24BDAC7A8](v407);
  v406 = (uint64_t)&v381 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v402 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_AssistanceNeededReport?, Proto_Gnss_Emergency_AssistanceNeededReport?));
  MEMORY[0x24BDAC7A8](v402);
  v408 = (uint64_t)&v381 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v405 = (uint64_t)&v381 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v404 = (uint64_t)&v381 - v39;
  v400 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0);
  v396 = *(_QWORD *)(v400 - 8);
  MEMORY[0x24BDAC7A8](v400);
  v399 = (uint64_t)&v381 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v395 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_MeasurementReport?, Proto_Gnss_Emergency_MeasurementReport?));
  MEMORY[0x24BDAC7A8](v395);
  v401 = (uint64_t)&v381 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v398 = (uint64_t)&v381 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v397 = (uint64_t)&v381 - v45;
  v393 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0);
  v389 = *(_QWORD *)(v393 - 8);
  MEMORY[0x24BDAC7A8](v393);
  v392 = (uint64_t)&v381 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v388 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_PositionReport?, Proto_Gnss_Emergency_PositionReport?));
  MEMORY[0x24BDAC7A8](v388);
  v394 = (uint64_t)&v381 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v391 = (uint64_t)&v381 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v390 = (uint64_t)&v381 - v51;
  v449 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0);
  v447 = *(_QWORD *)(v449 - 8);
  MEMORY[0x24BDAC7A8](v449);
  v387 = (uint64_t)&v381 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v446 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Emergency_SummaryReport?, Proto_Gnss_Emergency_SummaryReport?));
  MEMORY[0x24BDAC7A8](v446);
  v450 = (uint64_t)&v381 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v55 = MEMORY[0x24BDAC7A8](v54);
  v386 = (uint64_t)&v381 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v55);
  v448 = (uint64_t)&v381 - v57;
  v456 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v452 = *(_QWORD *)(v456 - 8);
  MEMORY[0x24BDAC7A8](v456);
  v385 = (uint64_t)&v381 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_AskBasebandReset?, Proto_Gpsd_AskBasebandReset?));
  MEMORY[0x24BDAC7A8](v451);
  v457 = (uint64_t)&v381 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v61 = MEMORY[0x24BDAC7A8](v60);
  v445 = (uint64_t)&v381 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61);
  v454 = (uint64_t)&v381 - v63;
  v461 = type metadata accessor for Proto_Gpsd_Exception(0);
  v459 = *(_QWORD *)(v461 - 8);
  MEMORY[0x24BDAC7A8](v461);
  v444 = (uint64_t)&v381 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v458 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_Exception?, Proto_Gpsd_Exception?));
  MEMORY[0x24BDAC7A8](v458);
  v462 = (uint64_t)&v381 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v67 = MEMORY[0x24BDAC7A8](v66);
  v455 = (uint64_t)&v381 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v67);
  v460 = (uint64_t)&v381 - v69;
  v467 = type metadata accessor for Proto_Gpsd_CntinClockControl(0);
  v464 = *(_QWORD *)(v467 - 8);
  MEMORY[0x24BDAC7A8](v467);
  v453 = (uint64_t)&v381 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v463 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_CntinClockControl?, Proto_Gpsd_CntinClockControl?));
  MEMORY[0x24BDAC7A8](v463);
  v468 = (uint64_t)&v381 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v73 = MEMORY[0x24BDAC7A8](v72);
  v465 = (uint64_t)&v381 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v73);
  v466 = (uint64_t)&v381 - v75;
  v476 = type metadata accessor for Proto_Gnss_DecodedRti(0);
  v472 = *(_QWORD *)(v476 - 8);
  MEMORY[0x24BDAC7A8](v476);
  v469 = (uint64_t)&v381 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v471 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_DecodedRti?, Proto_Gnss_DecodedRti?));
  MEMORY[0x24BDAC7A8](v471);
  v477 = (uint64_t)&v381 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v79 = MEMORY[0x24BDAC7A8](v78);
  v473 = (uint64_t)&v381 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v79);
  v475 = (uint64_t)&v381 - v81;
  v481 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0);
  v479 = *(_QWORD *)(v481 - 8);
  MEMORY[0x24BDAC7A8](v481);
  v470 = (uint64_t)&v381 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v478 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_DecodedExtendedEphemeris?, Proto_Gnss_DecodedExtendedEphemeris?));
  MEMORY[0x24BDAC7A8](v478);
  v485 = (uint64_t)&v381 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v85 = MEMORY[0x24BDAC7A8](v84);
  v480 = (uint64_t)&v381 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v85);
  v484 = (uint64_t)&v381 - v87;
  v488 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  v487 = *(_QWORD *)(v488 - 8);
  MEMORY[0x24BDAC7A8](v488);
  v474 = (uint64_t)&v381 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  v486 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_LtlInfoRequest?, Proto_Gpsd_LtlInfoRequest?));
  MEMORY[0x24BDAC7A8](v486);
  v492 = (uint64_t)&v381 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v91 = MEMORY[0x24BDAC7A8](v90);
  v482 = (uint64_t)&v381 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v91);
  v491 = (uint64_t)&v381 - v93;
  v495 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  v494 = *(_QWORD *)(v495 - 8);
  MEMORY[0x24BDAC7A8](v495);
  v483 = (uint64_t *)((char *)&v381 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0));
  v493 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_RecoveryStatistics?, Proto_Gpsd_RecoveryStatistics?));
  MEMORY[0x24BDAC7A8](v493);
  v496 = (uint64_t)&v381 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v97 = MEMORY[0x24BDAC7A8](v96);
  v489 = (uint64_t *)((char *)&v381 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v97);
  v510 = (char *)&v381 - v99;
  v501 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0);
  v500 = *(_QWORD *)(v501 - 8);
  MEMORY[0x24BDAC7A8](v501);
  v490 = (uint64_t)&v381 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  v499 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_TimeTransferDataExtend?, Proto_Gnss_TimeTransferDataExtend?));
  MEMORY[0x24BDAC7A8](v499);
  v502 = (uint64_t)&v381 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v103 = MEMORY[0x24BDAC7A8](v102);
  v497 = (uint64_t)&v381 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v103);
  v504 = (uint64_t)&v381 - v105;
  v508 = type metadata accessor for Proto_Gpsd_Status(0);
  v507 = *(_QWORD *)(v508 - 8);
  MEMORY[0x24BDAC7A8](v508);
  v498 = (uint64_t)&v381 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  v506 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_Status?, Proto_Gpsd_Status?));
  MEMORY[0x24BDAC7A8](v506);
  v509 = (uint64_t)&v381 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v109 = MEMORY[0x24BDAC7A8](v108);
  v503 = (uint64_t)&v381 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v109);
  v522 = (uint64_t)&v381 - v111;
  v514 = type metadata accessor for Proto_Gnss_PwrMeasurement(0);
  v513 = *(_QWORD *)(v514 - 8);
  MEMORY[0x24BDAC7A8](v514);
  v505 = (uint64_t)&v381 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  v512 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_PwrMeasurement?, Proto_Gnss_PwrMeasurement?));
  MEMORY[0x24BDAC7A8](v512);
  v515 = (uint64_t)&v381 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v115 = MEMORY[0x24BDAC7A8](v114);
  v521 = (char *)&v381 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v115);
  v523 = (uint64_t)&v381 - v117;
  v519 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0);
  v518 = *(_QWORD *)(v519 - 8);
  MEMORY[0x24BDAC7A8](v519);
  v511 = (uint64_t)&v381 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  v517 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?, CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?));
  MEMORY[0x24BDAC7A8](v517);
  v520 = (uint64_t)&v381 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v121 = MEMORY[0x24BDAC7A8](v120);
  v516 = (uint64_t)&v381 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v121);
  v524 = (uint64_t)&v381 - v123;
  v124 = type metadata accessor for Proto_Gnss_Fix(0);
  v125 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v127 = (char *)&v381 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Fix?, Proto_Gnss_Fix?));
  MEMORY[0x24BDAC7A8](v128);
  v525 = (uint64_t)&v381 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v131 = MEMORY[0x24BDAC7A8](v130);
  v133 = (char *)&v381 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v131);
  v135 = (char *)&v381 - v134;
  swift_beginAccess();
  v136 = *(char *)(a1 + 16);
  swift_beginAccess();
  v137 = *(char *)(a2 + 16);
  if (v136 == 24)
  {
    if ((_DWORD)v137 != 24)
      return 0;
  }
  else if ((_DWORD)v137 == 24 || qword_235BE19A0[v136] != qword_235BE19A0[v137])
  {
    return 0;
  }
  swift_beginAccess();
  v138 = *(char *)(a1 + 17);
  swift_beginAccess();
  v139 = *(char *)(a2 + 17);
  if (v138 == 61)
  {
    if ((_DWORD)v139 != 61)
      return 0;
  }
  else if ((_DWORD)v139 == 61 || qword_235BE1AE8[v138] != qword_235BE1AE8[v139])
  {
    return 0;
  }
  swift_beginAccess();
  v382 = *(_QWORD *)(a1 + 24);
  v383 = a1;
  v140 = *(_BYTE *)(a1 + 32);
  swift_beginAccess();
  v384 = a2;
  v141 = *(_BYTE *)(a2 + 32);
  if ((v140 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 32))
      return 0;
  }
  else
  {
    if (v382 != *(_QWORD *)(a2 + 24))
      v141 = 1;
    if ((v141 & 1) != 0)
      return 0;
  }
  v142 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v142, (uint64_t)v135, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v143 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess();
  v144 = v525;
  v145 = v525 + *(int *)(v128 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v135, v525, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v143, v145, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  v146 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  if (v146(v144, 1, v124) == 1)
  {
    v147 = v383;
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v135, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
    if (v146(v145, 1, v124) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v525, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
      goto LABEL_24;
    }
LABEL_22:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Fix?, Proto_Gnss_Fix?);
    v150 = v525;
LABEL_59:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v150, v149);
    goto LABEL_60;
  }
  v148 = v383;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v144, (uint64_t)v133, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  if (v146(v145, 1, v124) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v135, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v133, type metadata accessor for Proto_Gnss_Fix);
    goto LABEL_22;
  }
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v145, (uint64_t)v127, type metadata accessor for Proto_Gnss_Fix);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Fix and conformance Proto_Gnss_Fix, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Fix);
  swift_retain();
  swift_retain();
  v151 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v127, type metadata accessor for Proto_Gnss_Fix);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v135, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v133, type metadata accessor for Proto_Gnss_Fix);
  v152 = v144;
  v147 = v148;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v152, &demangling cache variable for type metadata for Proto_Gnss_Fix?);
  if ((v151 & 1) == 0)
    goto LABEL_60;
LABEL_24:
  v153 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  v154 = v524;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v153, v524, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v155 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess();
  v156 = v520;
  v157 = v520 + *(int *)(v517 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v154, v520, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v158 = v155;
  v159 = v156;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v158, v157, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v160 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v518 + 48);
  v161 = v519;
  if (v160(v156, 1, v519) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v154, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
    v162 = v160(v157, 1, v161);
    v163 = v522;
    v164 = (uint64_t)v521;
    v165 = v523;
    if (v162 == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
      goto LABEL_31;
    }
LABEL_29:
    v149 = &demangling cache variable for type metadata for (CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?, CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
LABEL_58:
    v150 = v159;
    goto LABEL_59;
  }
  v166 = v516;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v156, v516, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v167 = v160(v157, 1, v161);
  v168 = v522;
  v169 = v521;
  v165 = v523;
  if (v167 == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v524, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v166, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
    goto LABEL_29;
  }
  v170 = v511;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v157, v511, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type CLP_LogEntry_PrivateData_MeasurementReportCallbackContents and conformance CLP_LogEntry_PrivateData_MeasurementReportCallbackContents, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents, (uint64_t)&protocol conformance descriptor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  v171 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v170, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v524, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v172 = v166;
  v163 = v168;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v172, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?);
  v147 = v383;
  v164 = (uint64_t)v169;
  if ((v171 & 1) == 0)
    goto LABEL_60;
LABEL_31:
  v173 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v173, v165, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v174 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess();
  v175 = v165;
  v176 = v515;
  v177 = v515 + *(int *)(v512 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v175, v515, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v178 = v174;
  v159 = v176;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v178, v177, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  v179 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v513 + 48);
  v180 = v176;
  v181 = v514;
  if (v179(v180, 1, v514) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v175, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
    if (v179(v177, 1, v181) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, v164, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  if (v179(v177, 1, v181) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v523, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v164, type metadata accessor for Proto_Gnss_PwrMeasurement);
LABEL_36:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_PwrMeasurement?, Proto_Gnss_PwrMeasurement?);
    goto LABEL_58;
  }
  v182 = v164;
  v183 = v505;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v177, v505, type metadata accessor for Proto_Gnss_PwrMeasurement);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_PwrMeasurement and conformance Proto_Gnss_PwrMeasurement, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&protocol conformance descriptor for Proto_Gnss_PwrMeasurement);
  v184 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v183, type metadata accessor for Proto_Gnss_PwrMeasurement);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v523, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v182, type metadata accessor for Proto_Gnss_PwrMeasurement);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gnss_PwrMeasurement?);
  if ((v184 & 1) == 0)
    goto LABEL_60;
LABEL_38:
  v185 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v185, v163, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v186 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess();
  v187 = v509;
  v188 = v509 + *(int *)(v506 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v163, v509, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v189 = v186;
  v159 = v187;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v189, v188, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v190 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v507 + 48);
  v191 = v187;
  v192 = v508;
  if (v190(v191, 1, v508) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v163, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
    v193 = v190(v188, 1, v192);
    v194 = (uint64_t)v510;
    if (v193 == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
      goto LABEL_45;
    }
    goto LABEL_43;
  }
  v195 = v503;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, v503, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  v196 = v190(v188, 1, v192);
  v194 = (uint64_t)v510;
  if (v196 == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v522, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v195, type metadata accessor for Proto_Gpsd_Status);
LABEL_43:
    v149 = &demangling cache variable for type metadata for (Proto_Gpsd_Status?, Proto_Gpsd_Status?);
    goto LABEL_58;
  }
  v197 = v498;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v188, v498, type metadata accessor for Proto_Gpsd_Status);
  v198 = specialized static Proto_Gpsd_Status.== infix(_:_:)(v195, v197);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v197, type metadata accessor for Proto_Gpsd_Status);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v522, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v195, type metadata accessor for Proto_Gpsd_Status);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gpsd_Status?);
  if ((v198 & 1) == 0)
    goto LABEL_60;
LABEL_45:
  v199 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  v200 = v504;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v199, v504, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v201 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess();
  v202 = v502;
  v203 = v502 + *(int *)(v499 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v200, v502, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v204 = v201;
  v159 = v202;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v204, v203, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  v205 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v500 + 48);
  v206 = v202;
  v207 = v501;
  if (v205(v206, 1, v501) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v200, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
    if (v205(v203, 1, v207) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  v208 = v497;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, v497, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  if (v205(v203, 1, v207) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v504, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v208, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
LABEL_50:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_TimeTransferDataExtend?, Proto_Gnss_TimeTransferDataExtend?);
    goto LABEL_58;
  }
  v209 = v490;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v203, v490, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_TimeTransferDataExtend and conformance Proto_Gnss_TimeTransferDataExtend, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, (uint64_t)&protocol conformance descriptor for Proto_Gnss_TimeTransferDataExtend);
  v210 = dispatch thunk of static Equatable.== infix(_:_:)();
  v211 = v209;
  v194 = (uint64_t)v510;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v211, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v504, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v208, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?);
  if ((v210 & 1) == 0)
  {
LABEL_60:
    swift_release();
    swift_release();
    return 0;
  }
LABEL_52:
  v212 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v212, v194, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v213 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess();
  v214 = v496;
  v215 = v496 + *(int *)(v493 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v194, v496, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v216 = v213;
  v159 = v214;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v216, v215, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  v217 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v494 + 48);
  v218 = v214;
  v219 = v495;
  if (v217(v218, 1, v495) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v194, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
    if (v217(v215, 1, v219) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
      goto LABEL_63;
    }
    goto LABEL_57;
  }
  v220 = v489;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, (uint64_t)v489, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  if (v217(v215, 1, v219) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v194, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v220, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
LABEL_57:
    v149 = &demangling cache variable for type metadata for (Proto_Gpsd_RecoveryStatistics?, Proto_Gpsd_RecoveryStatistics?);
    goto LABEL_58;
  }
  v222 = v483;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v215, (uint64_t)v483, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  v223 = specialized static Proto_Gpsd_RecoveryStatistics.== infix(_:_:)(v220, v222);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v222, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v194, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v220, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v159, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?);
  if ((v223 & 1) == 0)
    goto LABEL_60;
LABEL_63:
  v224 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  v225 = v491;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v224, v491, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v226 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess();
  v227 = v492;
  v228 = v492 + *(int *)(v486 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v225, v492, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v226, v228, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  v229 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v487 + 48);
  v230 = v488;
  if (v229(v227, 1, v488) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v491, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
    if (v229(v228, 1, v230) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v492, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
      goto LABEL_70;
    }
    goto LABEL_68;
  }
  v231 = v482;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v492, v482, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  if (v229(v228, 1, v230) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v491, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v231, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
LABEL_68:
    v149 = &demangling cache variable for type metadata for (Proto_Gpsd_LtlInfoRequest?, Proto_Gpsd_LtlInfoRequest?);
    v150 = v492;
    goto LABEL_59;
  }
  v232 = v474;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v228, v474, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  v233 = specialized static Proto_Gpsd_LtlInfoRequest.== infix(_:_:)(v231, v232);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v232, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v491, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v231, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v492, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?);
  if ((v233 & 1) == 0)
    goto LABEL_60;
LABEL_70:
  v234 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  v235 = v484;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v234, v484, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v236 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess();
  v237 = v485;
  v238 = v485 + *(int *)(v478 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v235, v485, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v236, v238, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  v239 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v479 + 48);
  v240 = v481;
  if (v239(v237, 1, v481) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v484, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
    if (v239(v238, 1, v240) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v485, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
      goto LABEL_77;
    }
    goto LABEL_75;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v485, v480, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  if (v239(v238, 1, v240) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v484, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v480, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
LABEL_75:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_DecodedExtendedEphemeris?, Proto_Gnss_DecodedExtendedEphemeris?);
    v150 = v485;
    goto LABEL_59;
  }
  v241 = v470;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v238, v470, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedExtendedEphemeris and conformance Proto_Gnss_DecodedExtendedEphemeris, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedExtendedEphemeris);
  v242 = v480;
  v243 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v241, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v484, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v242, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v485, &demangling cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?);
  if ((v243 & 1) == 0)
    goto LABEL_60;
LABEL_77:
  v244 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  v245 = v475;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v244, v475, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v246 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess();
  v247 = v477;
  v248 = v477 + *(int *)(v471 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v245, v477, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v246, v248, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  v249 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v472 + 48);
  if (v249(v247, 1, v476) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v475, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
    if (v249(v248, 1, v476) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v477, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
      goto LABEL_84;
    }
    goto LABEL_82;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v477, v473, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  if (v249(v248, 1, v476) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v475, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v473, type metadata accessor for Proto_Gnss_DecodedRti);
LABEL_82:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_DecodedRti?, Proto_Gnss_DecodedRti?);
    v150 = v477;
    goto LABEL_59;
  }
  v250 = v469;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v248, v469, type metadata accessor for Proto_Gnss_DecodedRti);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_DecodedRti and conformance Proto_Gnss_DecodedRti, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&protocol conformance descriptor for Proto_Gnss_DecodedRti);
  v251 = v473;
  v252 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v250, type metadata accessor for Proto_Gnss_DecodedRti);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v475, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v251, type metadata accessor for Proto_Gnss_DecodedRti);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v477, &demangling cache variable for type metadata for Proto_Gnss_DecodedRti?);
  if ((v252 & 1) == 0)
    goto LABEL_60;
LABEL_84:
  v253 = (unsigned __int8 *)(v383
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess();
  v254 = *v253;
  v255 = (unsigned __int8 *)(v384
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess();
  v256 = *v255;
  if (v254 == 10)
  {
    if (v256 != 10)
      goto LABEL_60;
  }
  else
  {
    v529 = v254;
    if (v256 == 10)
      goto LABEL_60;
    v528 = v256;
    lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_60;
  }
  v257 = (unsigned __int8 *)(v383
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess();
  v258 = *v257;
  v259 = (unsigned __int8 *)(v384
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess();
  v260 = *v259;
  if (v258 == 10)
  {
    if (v260 != 10)
      goto LABEL_60;
  }
  else
  {
    v527 = v258;
    if (v260 == 10)
      goto LABEL_60;
    v526 = v260;
    lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_60;
  }
  v261 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  v262 = v466;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v261, v466, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v263 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess();
  v264 = v468;
  v265 = v468 + *(int *)(v463 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v262, v468, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v263, v265, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  v266 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v464 + 48);
  if (v266(v264, 1, v467) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v466, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
    if (v266(v265, 1, v467) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v468, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v468, v465, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  if (v266(v265, 1, v467) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v466, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v465, type metadata accessor for Proto_Gpsd_CntinClockControl);
LABEL_99:
    v149 = &demangling cache variable for type metadata for (Proto_Gpsd_CntinClockControl?, Proto_Gpsd_CntinClockControl?);
    v150 = v468;
    goto LABEL_59;
  }
  v267 = v453;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v265, v453, type metadata accessor for Proto_Gpsd_CntinClockControl);
  v268 = v465;
  v269 = specialized static Proto_Gpsd_SetConfigDutyCycling.== infix(_:_:)(v465, v267, type metadata accessor for Proto_Gpsd_CntinClockControl);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v267, type metadata accessor for Proto_Gpsd_CntinClockControl);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v466, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v268, type metadata accessor for Proto_Gpsd_CntinClockControl);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v468, &demangling cache variable for type metadata for Proto_Gpsd_CntinClockControl?);
  if ((v269 & 1) == 0)
    goto LABEL_60;
LABEL_101:
  v270 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  v271 = v460;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v270, v460, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v272 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess();
  v273 = v462;
  v274 = v462 + *(int *)(v458 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v271, v462, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v272, v274, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  v275 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v459 + 48);
  if (v275(v273, 1, v461) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v460, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
    if (v275(v274, 1, v461) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v462, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
      goto LABEL_108;
    }
    goto LABEL_106;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v462, v455, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  if (v275(v274, 1, v461) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v460, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v455, type metadata accessor for Proto_Gpsd_Exception);
LABEL_106:
    v149 = &demangling cache variable for type metadata for (Proto_Gpsd_Exception?, Proto_Gpsd_Exception?);
    v150 = v462;
    goto LABEL_59;
  }
  v276 = v444;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v274, v444, type metadata accessor for Proto_Gpsd_Exception);
  v277 = v455;
  v278 = specialized static Proto_Gpsd_Exception.== infix(_:_:)(v455, v276);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v276, type metadata accessor for Proto_Gpsd_Exception);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v460, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v277, type metadata accessor for Proto_Gpsd_Exception);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v462, &demangling cache variable for type metadata for Proto_Gpsd_Exception?);
  if ((v278 & 1) == 0)
    goto LABEL_60;
LABEL_108:
  v279 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  v280 = v454;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v279, v454, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v281 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess();
  v282 = v457;
  v283 = v457 + *(int *)(v451 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v280, v457, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v281, v283, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  v284 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v452 + 48);
  if (v284(v282, 1, v456) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v454, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
    if (v284(v283, 1, v456) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v457, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
      goto LABEL_115;
    }
    goto LABEL_113;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v457, v445, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  if (v284(v283, 1, v456) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v454, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v445, type metadata accessor for Proto_Gpsd_AskBasebandReset);
LABEL_113:
    v149 = &demangling cache variable for type metadata for (Proto_Gpsd_AskBasebandReset?, Proto_Gpsd_AskBasebandReset?);
    v150 = v457;
    goto LABEL_59;
  }
  v285 = v385;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v283, v385, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  v286 = v445;
  v287 = specialized static Proto_Gpsd_AskBasebandReset.== infix(_:_:)(v445, v285);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v285, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v454, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v286, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v457, &demangling cache variable for type metadata for Proto_Gpsd_AskBasebandReset?);
  if ((v287 & 1) == 0)
    goto LABEL_60;
LABEL_115:
  v288 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  v289 = v448;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v288, v448, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v290 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess();
  v291 = v450;
  v292 = v450 + *(int *)(v446 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v289, v450, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v290, v292, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  v293 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v447 + 48);
  if (v293(v291, 1, v449) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v448, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
    if (v293(v292, 1, v449) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v450, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
      goto LABEL_122;
    }
    goto LABEL_120;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v450, v386, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  if (v293(v292, 1, v449) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v448, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v386, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
LABEL_120:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_SummaryReport?, Proto_Gnss_Emergency_SummaryReport?);
    v150 = v450;
    goto LABEL_59;
  }
  v294 = v387;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v292, v387, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SummaryReport and conformance Proto_Gnss_Emergency_SummaryReport, type metadata accessor for Proto_Gnss_Emergency_SummaryReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_SummaryReport);
  v295 = v386;
  v296 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v294, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v448, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v295, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v450, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?);
  if ((v296 & 1) == 0)
    goto LABEL_60;
LABEL_122:
  v297 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  v298 = v390;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v297, v390, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v299 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess();
  v300 = v394;
  v301 = v394 + *(int *)(v388 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v298, v394, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v299, v301, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  v302 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v389 + 48);
  if (v302(v300, 1, v393) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v390, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
    if (v302(v301, 1, v393) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v394, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
      goto LABEL_129;
    }
    goto LABEL_127;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v394, v391, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  if (v302(v301, 1, v393) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v390, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v391, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
LABEL_127:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_PositionReport?, Proto_Gnss_Emergency_PositionReport?);
    v150 = v394;
    goto LABEL_59;
  }
  v303 = v392;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v301, v392, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_PositionReport and conformance Proto_Gnss_Emergency_PositionReport, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_PositionReport);
  v304 = v391;
  v305 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v303, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v390, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v304, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v394, &demangling cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?);
  if ((v305 & 1) == 0)
    goto LABEL_60;
LABEL_129:
  v306 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  v307 = v397;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v306, v397, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v308 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess();
  v309 = v401;
  v310 = v401 + *(int *)(v395 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v307, v401, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v308, v310, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  v311 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v396 + 48);
  if (v311(v309, 1, v400) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v397, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
    if (v311(v310, 1, v400) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v401, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
      goto LABEL_136;
    }
    goto LABEL_134;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v401, v398, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  if (v311(v310, 1, v400) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v397, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v398, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
LABEL_134:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_MeasurementReport?, Proto_Gnss_Emergency_MeasurementReport?);
    v150 = v401;
    goto LABEL_59;
  }
  v312 = v399;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v310, v399, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_MeasurementReport and conformance Proto_Gnss_Emergency_MeasurementReport, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_MeasurementReport);
  v313 = v398;
  v314 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v312, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v397, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v313, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v401, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?);
  if ((v314 & 1) == 0)
    goto LABEL_60;
LABEL_136:
  v315 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  v316 = v404;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v315, v404, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v317 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess();
  v318 = v408;
  v319 = v408 + *(int *)(v402 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v316, v408, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v317, v319, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  v320 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v403 + 48);
  if (v320(v318, 1, v407) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v404, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
    if (v320(v319, 1, v407) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v408, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
      goto LABEL_143;
    }
    goto LABEL_141;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v408, v405, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  if (v320(v319, 1, v407) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v404, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v405, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
LABEL_141:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_AssistanceNeededReport?, Proto_Gnss_Emergency_AssistanceNeededReport?);
    v150 = v408;
    goto LABEL_59;
  }
  v321 = v406;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v319, v406, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_AssistanceNeededReport and conformance Proto_Gnss_Emergency_AssistanceNeededReport, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_AssistanceNeededReport);
  v322 = v405;
  v323 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v321, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v404, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v322, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v408, &demangling cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?);
  if ((v323 & 1) == 0)
    goto LABEL_60;
LABEL_143:
  v324 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  v325 = v411;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v324, v411, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v326 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess();
  v327 = v415;
  v328 = v415 + *(int *)(v409 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v325, v415, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v326, v328, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  v329 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v410 + 48);
  if (v329(v327, 1, v414) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v411, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
    if (v329(v328, 1, v414) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v415, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
      goto LABEL_150;
    }
    goto LABEL_148;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v415, v412, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  if (v329(v328, 1, v414) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v411, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v412, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
LABEL_148:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_CellFTAssistanceRequest?, Proto_Gnss_Emergency_CellFTAssistanceRequest?);
    v150 = v415;
    goto LABEL_59;
  }
  v330 = v413;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v328, v413, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_CellFTAssistanceRequest and conformance Proto_Gnss_Emergency_CellFTAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  v331 = v412;
  v332 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v330, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v411, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v331, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v415, &demangling cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?);
  if ((v332 & 1) == 0)
    goto LABEL_60;
LABEL_150:
  v333 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  v334 = v418;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v333, v418, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v335 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess();
  v336 = v422;
  v337 = v422 + *(int *)(v416 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v334, v422, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v335, v337, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  v338 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v417 + 48);
  if (v338(v336, 1, v421) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v418, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
    if (v338(v337, 1, v421) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v422, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
      goto LABEL_157;
    }
    goto LABEL_155;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v422, v419, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  if (v338(v337, 1, v421) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v418, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v419, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
LABEL_155:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_MeasurementReportWithEstimate?, Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
    v150 = v422;
    goto LABEL_59;
  }
  v339 = v420;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v337, v420, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_MeasurementReportWithEstimate and conformance Proto_Gnss_Emergency_MeasurementReportWithEstimate, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  v340 = v419;
  v341 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v339, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v418, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v340, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v422, &demangling cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?);
  if ((v341 & 1) == 0)
    goto LABEL_60;
LABEL_157:
  v342 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  v343 = v425;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v342, v425, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v344 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess();
  v345 = v429;
  v346 = v429 + *(int *)(v423 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v343, v429, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v344, v346, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  v347 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v424 + 48);
  if (v347(v345, 1, v428) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v425, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
    if (v347(v346, 1, v428) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v429, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
      goto LABEL_164;
    }
    goto LABEL_162;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v429, v426, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  if (v347(v346, 1, v428) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v425, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v426, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
LABEL_162:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_SessionStatus?, Proto_Gnss_Emergency_SessionStatus?);
    v150 = v429;
    goto LABEL_59;
  }
  v348 = v427;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v346, v427, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_SessionStatus and conformance Proto_Gnss_Emergency_SessionStatus, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_SessionStatus);
  v349 = v426;
  v350 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v348, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v425, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v349, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v429, &demangling cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?);
  if ((v350 & 1) == 0)
    goto LABEL_60;
LABEL_164:
  v351 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  v352 = v432;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v351, v432, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v353 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess();
  v354 = v436;
  v355 = v436 + *(int *)(v430 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v352, v436, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v353, v355, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  v356 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v431 + 48);
  if (v356(v354, 1, v435) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v432, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
    if (v356(v355, 1, v435) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v436, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
      goto LABEL_171;
    }
    goto LABEL_169;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v436, v433, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  if (v356(v355, 1, v435) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v432, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v433, type metadata accessor for Proto_Gnss_Emergency_Init);
LABEL_169:
    v149 = &demangling cache variable for type metadata for (Proto_Gnss_Emergency_Init?, Proto_Gnss_Emergency_Init?);
    v150 = v436;
    goto LABEL_59;
  }
  v357 = v434;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v355, v434, type metadata accessor for Proto_Gnss_Emergency_Init);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_Init and conformance Proto_Gnss_Emergency_Init, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_Init);
  v358 = v433;
  v359 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v357, type metadata accessor for Proto_Gnss_Emergency_Init);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v432, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v358, type metadata accessor for Proto_Gnss_Emergency_Init);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v436, &demangling cache variable for type metadata for Proto_Gnss_Emergency_Init?);
  if ((v359 & 1) == 0)
    goto LABEL_60;
LABEL_171:
  v360 = (int *)(v383
               + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
  swift_beginAccess();
  v361 = *v360;
  v362 = *((_BYTE *)v360 + 4);
  v363 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess();
  if ((v362 & 1) != 0)
  {
    if ((*(_BYTE *)(v363 + 4) & 1) == 0)
      goto LABEL_60;
  }
  else if ((*(_BYTE *)(v363 + 4) & 1) != 0 || v361 != *(_DWORD *)v363)
  {
    goto LABEL_60;
  }
  v364 = (char *)(v383
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess();
  v365 = *v364;
  v366 = (char *)(v384
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess();
  v367 = *v366;
  if (v365 == 4)
  {
    if ((_DWORD)v367 != 4)
      goto LABEL_60;
  }
  else if ((_DWORD)v367 == 4 || qword_235BE1A60[v365] != qword_235BE1A60[v367])
  {
    goto LABEL_60;
  }
  v368 = (int *)(v383
               + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
  swift_beginAccess();
  v369 = *v368;
  v370 = *((_BYTE *)v368 + 4);
  v371 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess();
  if ((v370 & 1) != 0)
  {
    if ((*(_BYTE *)(v371 + 4) & 1) == 0)
      goto LABEL_60;
  }
  else if ((*(_BYTE *)(v371 + 4) & 1) != 0 || v369 != *(_DWORD *)v371)
  {
    goto LABEL_60;
  }
  v372 = v383
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  v373 = v439;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v372, v439, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v374 = v384
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess();
  v375 = v443;
  v376 = v443 + *(int *)(v437 + 48);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v373, v443, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v374, v376, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  v377 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v438 + 48);
  if (v377(v375, 1, v442) == 1)
  {
    swift_release();
    swift_release();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v439, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
    if (v377(v376, 1, v442) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v443, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
      return 1;
    }
LABEL_192:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v443, &demangling cache variable for type metadata for (Proto_Gnss_Emergency_WlanMeasurementRequest?, Proto_Gnss_Emergency_WlanMeasurementRequest?));
    return 0;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v443, v440, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  if (v377(v376, 1, v442) == 1)
  {
    swift_release();
    swift_release();
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v439, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v440, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
    goto LABEL_192;
  }
  v378 = v441;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v376, v441, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Emergency_WlanMeasurementRequest and conformance Proto_Gnss_Emergency_WlanMeasurementRequest, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  v379 = v440;
  v380 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_release();
  swift_release();
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v378, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v439, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v379, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v443, &demangling cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?);
  return (v380 & 1) != 0;
}

Swift::Int Proto_Gpsd_Indication.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_Indication, &lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_Indication@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for Message.init() in conformance CLP_LogEntry_PrivateData_SyncState(a1, &one-time initialization token for defaultInstance, &static Proto_Gpsd_Indication._StorageClass.defaultInstance, a2);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_Indication()
{
  return Proto_Gpsd_Indication.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_Indication(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_Indication.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_Indication()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Indication@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Indication._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_Indication()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Indication()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
  return Message.hash(into:)();
}

uint64_t Proto_Gpsd_Indication.TypeEnum._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Indication.TypeEnum._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Indication.TypeEnum._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Indication.TypeEnum._protobuf_nameMap, a1);
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Indication.TypeEnum@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Indication.TypeEnum._protobuf_nameMap, a1);
}

void *Proto_Gpsd_Status.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_Status.protoMessageName;
}

unint64_t static Proto_Gpsd_Status.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t Proto_Gpsd_Status._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Status._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Status._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Status._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_Status.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          type metadata accessor for Proto_Gpsd_Status(0);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 3:
        case 4:
        case 5:
          type metadata accessor for Proto_Gpsd_Status(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_Status.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_Status(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[8]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[9]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_Status.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_Status, &lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_Status@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v8) = 2;
  *(_BYTE *)(a2 + a1[9]) = 2;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_Status()
{
  return Proto_Gpsd_Status.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_Status()
{
  return Proto_Gpsd_Status.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_Status()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Status@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Status._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_Status()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Status()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetPvtmReport.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetPvtmReport.protoMessageName;
}

unint64_t static Proto_Gpsd_SetPvtmReport.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t Proto_Gpsd_SetPvtmReport._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetPvtmReport._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetPvtmReport._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetPvtmReport._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetPvtmReport.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_SetPvtmReport.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  v3 = (int *)result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + v3[6]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[8]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    closure #5 in Proto_Gpsd_SetPvtmReport.traverse<A>(visitor:)(v0);
    closure #6 in Proto_Gpsd_SetPvtmReport.traverse<A>(visitor:)(v0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #5 in Proto_Gpsd_SetPvtmReport.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in Proto_Gpsd_SetPvtmReport.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

Swift::Int Proto_Gpsd_SetPvtmReport.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetPvtmReport, &lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetPvtmReport@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  *(_BYTE *)(a2 + v5) = 2;
  v6 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v6) = 2;
  v7 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 2;
  *(_BYTE *)(a2 + v7) = 2;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetPvtmReport()
{
  return Proto_Gpsd_SetPvtmReport.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetPvtmReport()
{
  return Proto_Gpsd_SetPvtmReport.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetPvtmReport()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetPvtmReport@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetPvtmReport._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetPvtmReport()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetPvtmReport()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
  return Message.hash(into:)();
}

void *Proto_Gpsd_InjectAssistanceFile.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_InjectAssistanceFile.protoMessageName;
}

unint64_t static Proto_Gpsd_InjectAssistanceFile.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t Proto_Gpsd_InjectAssistanceFile._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistanceFile._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_InjectAssistanceFile._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistanceFile._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_InjectAssistanceFile.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
        lazy protocol witness table accessor for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
      }
      else if (result == 1)
      {
        type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
        dispatch thunk of Decoder.decodeSingularBytesField(value:)();
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_InjectAssistanceFile.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  result = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  v3 = result;
  v4 = v0 + *(int *)(result + 20);
  v5 = *(_QWORD *)(v4 + 8);
  if (v5 >> 60 != 15)
  {
    v6 = *(_QWORD *)v4;
    outlined copy of Data._Representation(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    result = outlined consume of Data?(v6, v5);
  }
  if (!v1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v3 + 24)) != 3)
    {
      lazy protocol witness table accessor for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_InjectAssistanceFile.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceFile, &lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
}

double protocol witness for Message.init() in conformance Proto_Gpsd_InjectAssistanceFile@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;

  UnknownStorage.init()();
  result = 0.0;
  v5 = *(int *)(a1 + 24);
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_235BB6C50;
  *(_BYTE *)(a2 + v5) = 3;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_InjectAssistanceFile()
{
  return Proto_Gpsd_InjectAssistanceFile.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_InjectAssistanceFile()
{
  return Proto_Gpsd_InjectAssistanceFile.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_InjectAssistanceFile()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_InjectAssistanceFile@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistanceFile._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_InjectAssistanceFile()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_InjectAssistanceFile()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
  return Message.hash(into:)();
}

void *Proto_Gpsd_InjectRtiFile.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_InjectRtiFile.protoMessageName;
}

unint64_t static Proto_Gpsd_InjectRtiFile.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t Proto_Gpsd_InjectRtiFile._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectRtiFile._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_InjectRtiFile._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectRtiFile._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_InjectRtiFile.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectRtiFile.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_InjectRtiFile, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A0]);
}

uint64_t Proto_Gpsd_InjectRtiFile.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for Proto_Gpsd_InjectRtiFile(0);
  v3 = v0 + *(int *)(result + 20);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    outlined copy of Data._Representation(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    result = outlined consume of Data?(v5, v4);
  }
  if (!v1)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

Swift::Int Proto_Gpsd_InjectRtiFile.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_InjectRtiFile, &lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_InjectRtiFile()
{
  return Proto_Gpsd_InjectRtiFile.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_InjectRtiFile()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_InjectRtiFile@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectRtiFile._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_InjectRtiFile()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_InjectRtiFile()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
  return Message.hash(into:)();
}

void *Proto_Gpsd_InjectSvidBlocklist.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_InjectSvidBlocklist.protoMessageName;
}

unint64_t static Proto_Gpsd_InjectSvidBlocklist.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t Proto_Gpsd_InjectSvidBlocklist._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectSvidBlocklist._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_InjectSvidBlocklist._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectSvidBlocklist._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gnss_SvId, &lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId);
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gnss_SvId, &lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t static Proto_Gpsd_InjectSvidBlocklist.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gnss_SvId, &lazy protocol witness table cache variable for type Proto_Gnss_SvId and conformance Proto_Gnss_SvId, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SvId, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist) & 1;
}

Swift::Int Proto_Gpsd_InjectSvidBlocklist.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, &lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_InjectSvidBlocklist()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_InjectSvidBlocklist@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectSvidBlocklist._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_InjectSvidBlocklist()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_InjectSvidBlocklist()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
  return Message.hash(into:)();
}

void *Proto_Gpsd_InjectAssistancePosition.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_InjectAssistancePosition.protoMessageName;
}

unint64_t static Proto_Gpsd_InjectAssistancePosition.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t Proto_Gpsd_InjectAssistancePosition._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistancePosition._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_InjectAssistancePosition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistancePosition._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_InjectAssistancePosition.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
          type metadata accessor for Proto_Gnss_Position(0);
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
          goto LABEL_5;
        case 2:
          type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
          lazy protocol witness table accessor for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType();
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_5;
        case 3:
          type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          goto LABEL_5;
        case 10:
          type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_InjectAssistancePosition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int *v6;

  result = closure #1 in Proto_Gpsd_InjectAssistancePosition.traverse<A>(visitor:)(v3, a1, a2, a3);
  if (!v4)
  {
    v6 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
    if (*(_BYTE *)(v3 + v6[6]) != 4)
    {
      lazy protocol witness table accessor for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    if (*(_BYTE *)(v3 + v6[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if ((*(_BYTE *)(v3 + v6[8] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in Proto_Gpsd_InjectAssistancePosition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gnss_Position(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 20), (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gnss_Position);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gnss_Position);
}

Swift::Int Proto_Gpsd_InjectAssistancePosition.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_InjectAssistancePosition, &lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_InjectAssistancePosition@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  UnknownStorage.init()();
  v4 = a2 + a1[5];
  v5 = type metadata accessor for Proto_Gnss_Position(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[7];
  *(_BYTE *)(a2 + a1[6]) = 4;
  *(_BYTE *)(a2 + v7) = 2;
  v8 = a2 + a1[8];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_InjectAssistancePosition()
{
  return Proto_Gpsd_InjectAssistancePosition.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_InjectAssistancePosition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectAssistancePosition.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_InjectAssistancePosition()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_InjectAssistancePosition@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistancePosition._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_InjectAssistancePosition()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_InjectAssistancePosition()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
  return Message.hash(into:)();
}

void *Proto_Gpsd_InjectAssistanceTime.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_InjectAssistanceTime.protoMessageName;
}

unint64_t static Proto_Gpsd_InjectAssistanceTime.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t Proto_Gpsd_InjectAssistanceTime._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistanceTime._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_InjectAssistanceTime._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistanceTime._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectAssistanceTime.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C138]);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 28) + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_InjectAssistanceTime.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_InjectAssistanceTime, &lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_InjectAssistanceTime()
{
  return Proto_Gpsd_InjectAssistanceTime.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_InjectAssistanceTime()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_InjectAssistanceTime@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_InjectAssistanceTime._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_InjectAssistanceTime()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_InjectAssistanceTime()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
  return Message.hash(into:)();
}

void *Proto_Gpsd_DeleteGnssData.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_DeleteGnssData.protoMessageName;
}

unint64_t static Proto_Gpsd_DeleteGnssData.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t Proto_Gpsd_DeleteGnssData._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_DeleteGnssData._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_DeleteGnssData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_DeleteGnssData._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_DeleteGnssData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_DeleteGnssData.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t Proto_Gpsd_DeleteGnssData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_DeleteGnssData.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t static Proto_Gpsd_DeleteGnssData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_SetNmeaHandler.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_DeleteGnssData) & 1;
}

Swift::Int Proto_Gpsd_DeleteGnssData.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_DeleteGnssData, &lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_DeleteGnssData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = UnknownStorage.init()();
  v5 = a2 + *(int *)(a1 + 20);
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  return result;
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_DeleteGnssData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_DeleteGnssData@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_DeleteGnssData._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_DeleteGnssData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_DeleteGnssData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetNmeaHandler.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetNmeaHandler.protoMessageName;
}

unint64_t static Proto_Gpsd_SetNmeaHandler.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t Proto_Gpsd_SetNmeaHandler._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetNmeaHandler._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetNmeaHandler._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetNmeaHandler._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetNmeaHandler.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_DeleteGnssData.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t Proto_Gpsd_DeleteGnssData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t result;
  char v7;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v7 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
    }
    v4 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_SetNmeaHandler.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_DeleteGnssData.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t Proto_Gpsd_DeleteGnssData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = a4(0);
  if ((*(_BYTE *)(v4 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v5)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

uint64_t static Proto_Gpsd_SetNmeaHandler.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_SetNmeaHandler.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_SetNmeaHandler) & 1;
}

Swift::Int Proto_Gpsd_SetNmeaHandler.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetNmeaHandler, &lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetNmeaHandler()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetNmeaHandler@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetNmeaHandler._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetNmeaHandler()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetNmeaHandler()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistancePressure.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistancePressure.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistancePressure.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t Proto_Gpsd_SetAssistancePressure._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistancePressure._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistancePressure._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistancePressure._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistancePressure.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gnss_RawPressureSample, &lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t Proto_Gpsd_SetAssistancePressure.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gnss_RawPressureSample, &lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gnss_RawPressureSample, &lazy protocol witness table cache variable for type Proto_Gnss_RawPressureSample and conformance Proto_Gnss_RawPressureSample, (uint64_t)&protocol conformance descriptor for Proto_Gnss_RawPressureSample, type metadata accessor for Proto_Gpsd_SetAssistancePressure) & 1;
}

Swift::Int Proto_Gpsd_SetAssistancePressure.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistancePressure, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistancePressure()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistancePressure@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistancePressure._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistancePressure()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistancePressure()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceAccel.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceAccel.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceAccel.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t Proto_Gpsd_SetAssistanceAccel._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceAccel._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceAccel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceAccel._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceAccel.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t Proto_Gpsd_SetAssistanceAccel.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t static Proto_Gpsd_SetAssistanceAccel.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gpsd_SetAssistanceAccel) & 1;
}

Swift::Int Proto_Gpsd_SetAssistanceAccel.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAccel, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceAccel()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceAccel@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceAccel._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceAccel()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceAccel()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceGyro.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceGyro.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceGyro.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t Proto_Gpsd_SetAssistanceGyro._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceGyro._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceGyro._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceGyro._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  char v11;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v6 || (v11 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(a5, a4, a6);
      dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
    }
    v6 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceGyro.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectSvidBlocklist.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t Proto_Gpsd_InjectSvidBlocklist.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v13)(_QWORD);

  if (!*(_QWORD *)(*(_QWORD *)v7 + 16)
    || (v13 = a7,
        a4(0),
        lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(a5, a4, a6), result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), a7 = v13, !v8))
  {
    a7(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t static Proto_Gpsd_SetAssistanceGyro.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gnss_SensorSample3Axis, &lazy protocol witness table cache variable for type Proto_Gnss_SensorSample3Axis and conformance Proto_Gnss_SensorSample3Axis, (uint64_t)&protocol conformance descriptor for Proto_Gnss_SensorSample3Axis, type metadata accessor for Proto_Gpsd_SetAssistanceGyro) & 1;
}

Swift::Int Proto_Gpsd_SetAssistanceGyro.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceGyro, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetAssistanceGyro@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  return UnknownStorage.init()();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceGyro()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceGyro@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceGyro._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceGyro()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceGyro()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceDem.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceDem.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceDem.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t Proto_Gpsd_SetAssistanceDem._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceDem._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceDem._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceDem._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceDem.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectAssistanceTime.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C100]);
}

uint64_t Proto_Gpsd_InjectAssistanceTime.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t result;
  char v13;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v6 || (v13 & 1) != 0)
      return result;
    switch(result)
    {
      case 3:
        v11 = *(int *)(a4(0) + 28);
LABEL_3:
        a5(v5 + v11, a2, a3);
        break;
      case 2:
        v11 = *(int *)(a4(0) + 24);
        goto LABEL_3;
      case 1:
        a4(0);
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
        break;
    }
    v6 = 0;
  }
}

uint64_t Proto_Gpsd_SetAssistanceDem.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetAssistanceDem.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t static Proto_Gpsd_SetAssistanceDem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_SetAssistanceAlongTrackVelocity.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_SetAssistanceDem) & 1;
}

Swift::Int Proto_Gpsd_SetAssistanceDem.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceDem, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceDem()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceDem@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceDem._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceDem()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceDem()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceMapVector.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceMapVector.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceMapVector.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMapVector._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceMapVector._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMapVector._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 2:
        case 3:
        case 5:
        case 6:
        case 7:
        case 8:
          type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          break;
        case 4:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
          type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[8]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    closure #5 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #6 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #7 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #8 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #9 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #10 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #11 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #12 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    closure #13 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(v0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #5 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 40) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #7 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 44) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #8 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #9 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 52)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #10 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 56)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #11 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 60)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #12 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 64)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #13 in Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 68)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

Swift::Int Proto_Gpsd_SetAssistanceMapVector.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetAssistanceMapVector@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(a2 + v8) = 2;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = a2 + v10;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = a1[12];
  v14 = a2 + a1[11];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = a2 + v13;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a1[14];
  *(_BYTE *)(a2 + a1[13]) = 2;
  *(_BYTE *)(a2 + v16) = 2;
  v17 = a1[16];
  *(_BYTE *)(a2 + a1[15]) = 2;
  *(_BYTE *)(a2 + v17) = 2;
  *(_BYTE *)(a2 + a1[17]) = 2;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetAssistanceMapVector()
{
  return Proto_Gpsd_SetAssistanceMapVector.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetAssistanceMapVector()
{
  return Proto_Gpsd_SetAssistanceMapVector.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceMapVector()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceMapVector@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMapVector._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceMapVector()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceMapVector()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceMotionActivityContext.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceMotionActivityContext.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceMotionActivityContext.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMotionActivityContext._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceMotionActivityContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMotionActivityContext._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 2:
          type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
          lazy protocol witness table accessor for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext();
          goto LABEL_5;
        case 3:
          type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
          lazy protocol witness table accessor for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState();
          goto LABEL_5;
        case 4:
          type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
          lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability();
LABEL_5:
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMotionActivityContext.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + v3[6]) != 10)
    {
      lazy protocol witness table accessor for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    if (*(_BYTE *)(v0 + v3[7]) != 5)
    {
      lazy protocol witness table accessor for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    if (*(_BYTE *)(v0 + v3[8]) != 6)
    {
      lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_SetAssistanceMotionActivityContext.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetAssistanceMotionActivityContext@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 10;
  v7 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 5;
  *(_BYTE *)(a2 + v7) = 6;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return Proto_Gpsd_SetAssistanceMotionActivityContext.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return Proto_Gpsd_SetAssistanceMotionActivityContext.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceMotionActivityContext@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMotionActivityContext._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceMountState.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceMountState.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceMountState.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t Proto_Gpsd_SetAssistanceMountState._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMountState._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceMountState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMountState._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceMountState.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
        lazy protocol witness table accessor for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
      }
      else if (result == 1)
      {
        type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceMountState.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v3 + 24)) != 4)
    {
      lazy protocol witness table accessor for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_SetAssistanceMountState.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceMountState, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetAssistanceMountState@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 24);
  v6 = a2 + *(int *)(a1 + 20);
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 4;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetAssistanceMountState()
{
  return Proto_Gpsd_SetAssistanceMountState.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetAssistanceMountState()
{
  return Proto_Gpsd_SetAssistanceMountState.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceMountState()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceMountState@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceMountState._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceMountState()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceMountState()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceSignalEnvironment.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceSignalEnvironment.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceSignalEnvironment.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceSignalEnvironment._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceSignalEnvironment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceSignalEnvironment._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetAssistanceSignalEnvironment.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (void (*)(void))lazy protocol witness table accessor for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType);
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0);
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 8)
  {
    lazy protocol witness table accessor for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  if (!v1)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

Swift::Int Proto_Gpsd_SetAssistanceSignalEnvironment.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetAssistanceSignalEnvironment@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 8;
  return result;
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return Proto_Gpsd_SetAssistanceSignalEnvironment.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceSignalEnvironment@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceSignalEnvironment._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceSpeedConstraint.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceSpeedConstraint.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceSpeedConstraint.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceSpeedConstraint._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceSpeedConstraint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceSpeedConstraint._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 2:
        case 3:
        case 4:
          type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_SetAssistanceSpeedConstraint.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[8] + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_SetAssistanceSpeedConstraint.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return Proto_Gpsd_SetAssistanceSpeedConstraint.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return Proto_Gpsd_SetAssistanceSpeedConstraint.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceSpeedConstraint@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceSpeedConstraint._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetAssistanceAlongTrackVelocity.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetAssistanceAlongTrackVelocity.protoMessageName;
}

unint64_t static Proto_Gpsd_SetAssistanceAlongTrackVelocity.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceAlongTrackVelocity._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetAssistanceAlongTrackVelocity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceAlongTrackVelocity._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectAssistanceTime.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C100]);
}

uint64_t Proto_Gpsd_SetAssistanceAlongTrackVelocity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetAssistanceDem.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t Proto_Gpsd_SetAssistanceDem.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  result = a4(0);
  v7 = result;
  if ((*(_BYTE *)(v4 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v5)
  {
    if ((*(_BYTE *)(v4 + *(int *)(v7 + 24) + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    if ((*(_BYTE *)(v4 + *(int *)(v7 + 28) + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t static Proto_Gpsd_SetAssistanceAlongTrackVelocity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_SetAssistanceAlongTrackVelocity.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity) & 1;
}

Swift::Int Proto_Gpsd_SetAssistanceAlongTrackVelocity.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, &lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetAssistanceAlongTrackVelocity._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetThermalRiskState.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetThermalRiskState.protoMessageName;
}

unint64_t static Proto_Gpsd_SetThermalRiskState.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t Proto_Gpsd_SetThermalRiskState._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetThermalRiskState._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetThermalRiskState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetThermalRiskState._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetThermalRiskState.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
    }
    else if (result == 1)
    {
      type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_SetThermalRiskState.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_SetThermalRiskState.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetThermalRiskState, &lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetThermalRiskState()
{
  return Proto_Gpsd_SetThermalRiskState.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetThermalRiskState()
{
  return Proto_Gpsd_SetThermalRiskState.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetThermalRiskState()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetThermalRiskState@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetThermalRiskState._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetThermalRiskState()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetThermalRiskState()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetConfigSimulatorMode.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetConfigSimulatorMode.protoMessageName;
}

unint64_t static Proto_Gpsd_SetConfigSimulatorMode.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigSimulatorMode._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetConfigSimulatorMode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigSimulatorMode._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
      dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
    }
    else if (result == 1)
    {
      type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_SetConfigSimulatorMode.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  v3 = result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_SetConfigSimulatorMode.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, &lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_SetConfigSimulatorMode@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 24);
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 2;
  v6 = a2 + v5;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetConfigSimulatorMode()
{
  return Proto_Gpsd_SetConfigSimulatorMode.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetConfigSimulatorMode()
{
  return Proto_Gpsd_SetConfigSimulatorMode.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetConfigSimulatorMode()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetConfigSimulatorMode@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigSimulatorMode._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetConfigSimulatorMode()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetConfigSimulatorMode()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetConfigEnableGnssConstellations.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetConfigEnableGnssConstellations.protoMessageName;
}

unint64_t static Proto_Gpsd_SetConfigEnableGnssConstellations.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigEnableGnssConstellations._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetConfigEnableGnssConstellations._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigEnableGnssConstellations._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigEnableGnssConstellations.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C128]);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigEnableGnssConstellations.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C2F0]);
}

uint64_t static Proto_Gpsd_SetConfigEnableGnssConstellations.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations) & 1;
}

Swift::Int Proto_Gpsd_SetConfigEnableGnssConstellations.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, &lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetConfigEnableGnssConstellations@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigEnableGnssConstellations._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetConfigRfBandEnable.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetConfigRfBandEnable.protoMessageName;
}

unint64_t static Proto_Gpsd_SetConfigRfBandEnable.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigRfBandEnable._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetConfigRfBandEnable._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigRfBandEnable._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2 || result == 1)
    {
      type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_SetConfigRfBandEnable.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  v3 = result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v3 + 24)) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_SetConfigRfBandEnable.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, &lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_SetConfigRfBandEnable()
{
  return Proto_Gpsd_SetConfigRfBandEnable.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_SetConfigRfBandEnable()
{
  return Proto_Gpsd_SetConfigRfBandEnable.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetConfigRfBandEnable()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetConfigRfBandEnable@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigRfBandEnable._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetConfigRfBandEnable()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetConfigRfBandEnable()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
  return Message.hash(into:)();
}

void *Proto_Gpsd_SetConfigDutyCycling.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_SetConfigDutyCycling.protoMessageName;
}

unint64_t static Proto_Gpsd_SetConfigDutyCycling.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t Proto_Gpsd_SetConfigDutyCycling._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigDutyCycling._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_SetConfigDutyCycling._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigDutyCycling._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigDutyCycling.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigDutyCycling.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t static Proto_Gpsd_SetConfigDutyCycling.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_SetConfigDutyCycling.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling) & 1;
}

Swift::Int Proto_Gpsd_SetConfigDutyCycling.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, &lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_SetConfigDutyCycling()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_SetConfigDutyCycling@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_SetConfigDutyCycling._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_SetConfigDutyCycling()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_SetConfigDutyCycling()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
  return Message.hash(into:)();
}

void *Proto_Gpsd_TerminationImminent.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_TerminationImminent.protoMessageName;
}

unint64_t static Proto_Gpsd_TerminationImminent.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t Proto_Gpsd_TerminationImminent._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_TerminationImminent._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_TerminationImminent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_TerminationImminent._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_TerminationImminent.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectRtiFile.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_TerminationImminent, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t Proto_Gpsd_InjectRtiFile.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v12;
  uint64_t v13;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v6 || (v12 & 1) != 0)
      break;
    if (result == 1)
    {
      v13 = a4(0);
      a5(v5 + *(int *)(v13 + 20), a2, a3);
    }
    v6 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_TerminationImminent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_TerminationImminent.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t static Proto_Gpsd_TerminationImminent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_TerminationImminent.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_TerminationImminent) & 1;
}

Swift::Int Proto_Gpsd_TerminationImminent.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_TerminationImminent, &lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_TerminationImminent()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_TerminationImminent@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_TerminationImminent._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_TerminationImminent()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_TerminationImminent()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
  return Message.hash(into:)();
}

void *Proto_Gpsd_ExitMessage.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_ExitMessage.protoMessageName;
}

unint64_t static Proto_Gpsd_ExitMessage.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t Proto_Gpsd_ExitMessage._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_ExitMessage._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_ExitMessage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_ExitMessage._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_ExitMessage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_InjectRtiFile.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_ExitMessage, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t Proto_Gpsd_ExitMessage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_TerminationImminent.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t Proto_Gpsd_TerminationImminent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = a4(0);
  if (*(_QWORD *)(v4 + *(int *)(result + 20) + 8))
    result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  if (!v5)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

uint64_t static Proto_Gpsd_ExitMessage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_TerminationImminent.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_ExitMessage) & 1;
}

Swift::Int Proto_Gpsd_ExitMessage.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_ExitMessage, &lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_ExitMessage@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;

  result = UnknownStorage.init()();
  v5 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_ExitMessage()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_ExitMessage@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_ExitMessage._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_ExitMessage()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_ExitMessage()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
  return Message.hash(into:)();
}

void *Proto_Gpsd_RecoveryStatistics.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_RecoveryStatistics.protoMessageName;
}

unint64_t static Proto_Gpsd_RecoveryStatistics.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t Proto_Gpsd_RecoveryStatistics._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_RecoveryStatistics._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_RecoveryStatistics.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
        type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
        lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
      }
      else if (result == 1)
      {
        type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0);
        lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_RecoveryStatistics.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0),
        lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint), result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v4))
  {
    result = closure #1 in Proto_Gpsd_RecoveryStatistics.traverse<A>(visitor:)(v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t closure #1 in Proto_Gpsd_RecoveryStatistics.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 24), (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

Swift::Int Proto_Gpsd_RecoveryStatistics.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics, &lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_RecoveryStatistics@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = MEMORY[0x24BEE4AF8];
  UnknownStorage.init()();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_RecoveryStatistics()
{
  return Proto_Gpsd_RecoveryStatistics.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_RecoveryStatistics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_RecoveryStatistics.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_RecoveryStatistics()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_RecoveryStatistics@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_RecoveryStatistics()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_RecoveryStatistics()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
  return Message.hash(into:)();
}

uint64_t *Proto_Gpsd_RecoveryStatistics.RecoveryStatus.protoMessageName.unsafeMutableAddressor()
{
  if (one-time initialization token for protoMessageName != -1)
    swift_once();
  return &static Proto_Gpsd_RecoveryStatistics.RecoveryStatus.protoMessageName;
}

uint64_t static Proto_Gpsd_RecoveryStatistics.RecoveryStatus.protoMessageName.getter()
{
  return static CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo.protoMessageName.getter(&one-time initialization token for protoMessageName, &static Proto_Gpsd_RecoveryStatistics.RecoveryStatus.protoMessageName);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics.RecoveryStatus._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_RecoveryStatistics.RecoveryStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics.RecoveryStatus._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        case 2:
          type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryStatus.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v3 = (int *)result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[7]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + v3[8]) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_RecoveryStatistics.RecoveryStatus.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, &lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = UnknownStorage.init()();
  v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  v6 = a2 + v5;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v7) = 2;
  return result;
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Message.protoMessageName.getter in conformance CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(a1, a2, &one-time initialization token for protoMessageName, &static Proto_Gpsd_RecoveryStatistics.RecoveryStatus.protoMessageName);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryStatus.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryStatus.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics.RecoveryStatus._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  return Message.hash(into:)();
}

uint64_t *Proto_Gpsd_RecoveryStatistics.RecoveryPoint.protoMessageName.unsafeMutableAddressor()
{
  if (one-time initialization token for protoMessageName != -1)
    swift_once();
  return &static Proto_Gpsd_RecoveryStatistics.RecoveryPoint.protoMessageName;
}

uint64_t static Proto_Gpsd_RecoveryStatistics.RecoveryPoint.protoMessageName.getter()
{
  return static CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo.protoMessageName.getter(&one-time initialization token for protoMessageName, &static Proto_Gpsd_RecoveryStatistics.RecoveryPoint.protoMessageName);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics.RecoveryPoint._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_RecoveryStatistics.RecoveryPoint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics.RecoveryPoint._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      return result;
    switch(result)
    {
      case 3:
        goto LABEL_2;
      case 2:
        type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0);
        dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
        break;
      case 1:
LABEL_2:
        type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0);
        dispatch thunk of Decoder.decodeSingularStringField(value:)();
        break;
    }
    v0 = 0;
  }
}

uint64_t Proto_Gpsd_RecoveryStatistics.RecoveryPoint.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0);
  v3 = result;
  if (*(_QWORD *)(v0 + *(int *)(result + 20) + 8))
    result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    if (*(_QWORD *)(v0 + *(int *)(v3 + 28) + 8))
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_RecoveryStatistics.RecoveryPoint.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, &lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = (_QWORD *)(a2 + a1[5]);
  *v6 = 0;
  v6[1] = 0;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  return result;
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Message.protoMessageName.getter in conformance CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(a1, a2, &one-time initialization token for protoMessageName, &static Proto_Gpsd_RecoveryStatistics.RecoveryPoint.protoMessageName);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return Proto_Gpsd_RecoveryStatistics.RecoveryPoint.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_RecoveryStatistics.RecoveryPoint._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
  return Message.hash(into:)();
}

void *Proto_Gpsd_LtlInfoRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_LtlInfoRequest.protoMessageName;
}

unint64_t static Proto_Gpsd_LtlInfoRequest.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t Proto_Gpsd_LtlInfoRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfoRequest._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfoRequest._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetAssistanceSignalEnvironment.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_LtlInfoRequest, (void (*)(void))lazy protocol witness table accessor for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType);
}

uint64_t Proto_Gpsd_SetAssistanceSignalEnvironment.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(void))
{
  uint64_t v5;
  uint64_t result;
  char v9;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v5 || (v9 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      a5();
      dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
    }
    v5 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_LtlInfoRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0);
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 5)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  if (!v1)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

Swift::Int Proto_Gpsd_LtlInfoRequest.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LtlInfoRequest, &lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_LtlInfoRequest@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 5;
  return result;
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_LtlInfoRequest()
{
  return Proto_Gpsd_LtlInfoRequest.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LtlInfoRequest()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfoRequest@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfoRequest._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LtlInfoRequest()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfoRequest()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
  return Message.hash(into:)();
}

void *Proto_Gpsd_LtlInfo.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_LtlInfo.protoMessageName;
}

unint64_t static Proto_Gpsd_LtlInfo.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t Proto_Gpsd_LtlInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  MEMORY[0x24BDAC7A8](v8);
  v34 = (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 2;
  *(_DWORD *)(v1 + 20) = 0;
  *(_WORD *)(v1 + 24) = 1281;
  v32[1] = v1 + 25;
  v13 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  v14 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  v16 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  v18 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  v33 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  v20 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  swift_beginAccess();
  LOBYTE(v19) = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v19;
  swift_beginAccess();
  v21 = *(_DWORD *)(a1 + 20);
  LOBYTE(v19) = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  *(_DWORD *)(v1 + 20) = v21;
  *(_BYTE *)(v1 + 24) = v19;
  swift_beginAccess();
  v22 = *(_BYTE *)(a1 + 25);
  swift_beginAccess();
  *(_BYTE *)(v2 + 25) = v22;
  v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v23, (uint64_t)v12, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?((uint64_t)v12, v13, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  swift_endAccess();
  v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess();
  v25 = v34;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v24, v34, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v25, v15, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  swift_endAccess();
  v26 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess();
  v27 = v35;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v26, v35, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v27, v17, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  swift_endAccess();
  v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  swift_beginAccess();
  v29 = v36;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v28, v36, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  swift_release();
  v30 = v33;
  swift_beginAccess();
  outlined assign with take of Proto_Gpsd_Response?(v29, v30, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  swift_endAccess();
  return v2;
}

uint64_t Proto_Gpsd_LtlInfo._StorageClass.__deallocating_deinit()
{
  uint64_t v0;

  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v0+ OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  return swift_deallocClassInstance();
}

uint64_t Proto_Gpsd_LtlInfo.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  unint64_t *v10;
  uint64_t (*v11)(uint64_t);
  void *v12;

  v2 = v1;
  v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
    v4 = swift_allocObject();
    v5 = swift_retain();
    Proto_Gpsd_LtlInfo._StorageClass.init(copying:)(v5);
    *(_QWORD *)(v0 + v3) = v4;
    swift_release();
  }
  swift_retain();
  v6 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v1)
  {
    while ((v7 & 1) == 0)
    {
      switch(v6)
      {
        case 1:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          goto LABEL_15;
        case 2:
          swift_beginAccess();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
          goto LABEL_15;
        case 3:
          swift_beginAccess();
          lazy protocol witness table accessor for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType();
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_15;
        case 4:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
          v10 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams;
          v11 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams;
          v12 = &protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams;
          goto LABEL_14;
        case 5:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
          v10 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams;
          v11 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams;
          v12 = &protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams;
          goto LABEL_14;
        case 6:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
          v10 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData;
          v11 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData;
          v12 = &protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData;
          goto LABEL_14;
        case 7:
          swift_beginAccess();
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
          v10 = (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData;
          v11 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData;
          v12 = &protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData;
LABEL_14:
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(v10, v11, (uint64_t)v12);
          v9 = v2;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
LABEL_15:
          v2 = v9;
          swift_endAccess();
          break;
        default:
          break;
      }
      v6 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t Proto_Gpsd_LtlInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v9;

  v5 = v3;
  v9 = *(_BYTE **)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0) + 20));
  swift_retain();
  swift_beginAccess();
  if (v9[16] != 2)
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (v4)
    return swift_release();
  swift_beginAccess();
  if ((v9[24] & 1) == 0)
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  swift_beginAccess();
  if (v9[25] != 5)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  closure #4 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #5 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #6 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  closure #7 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)((uint64_t)v9, a1, a2, a3);
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t closure #4 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t closure #5 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t closure #6 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t closure #7 in closure #1 in Proto_Gpsd_LtlInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  swift_beginAccess();
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v12, (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t static Proto_Gpsd_LtlInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gpsd_LtlInfo.== infix(_:_:)) & 1;
}

BOOL closure #1 in static Proto_Gpsd_LtlInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  _BOOL8 result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  int v77;
  uint64_t *v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  int v88;
  uint64_t v89;
  uint64_t *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  char v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v4 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0);
  v106 = *(_QWORD *)(v4 - 8);
  v107 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?, Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?));
  MEMORY[0x24BDAC7A8](v105);
  v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v103 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v108 = (uint64_t)&v100 - v12;
  v13 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  v111 = *(_QWORD *)(v13 - 8);
  v112 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v104 = (uint64_t *)((char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?, Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?));
  MEMORY[0x24BDAC7A8](v110);
  v113 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v117 = (uint64_t *)((char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v115 = (uint64_t)&v100 - v19;
  v20 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  v119 = *(_QWORD *)(v20 - 8);
  v120 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v109 = (uint64_t *)((char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlLutParams?, Proto_Gpsd_LtlInfo.LtlLutParams?));
  MEMORY[0x24BDAC7A8](v118);
  v121 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v114 = (uint64_t *)((char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v24);
  v123 = (uint64_t)&v100 - v26;
  v27 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v116 = (uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlInitialParams?, Proto_Gpsd_LtlInfo.LtlInitialParams?));
  MEMORY[0x24BDAC7A8](v30);
  v124 = (uint64_t)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v122 = (uint64_t)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v100 - v35;
  swift_beginAccess();
  v37 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  v38 = *(unsigned __int8 *)(a2 + 16);
  if (v37 == 2)
  {
    if (v38 != 2)
      return 0;
  }
  else if (v38 == 2 || ((((v38 & 1) == 0) ^ v37) & 1) == 0)
  {
    return 0;
  }
  v100 = v6;
  v101 = v8;
  swift_beginAccess();
  v39 = *(_DWORD *)(a1 + 20);
  v40 = a2;
  v102 = a1;
  v41 = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  v42 = *(_BYTE *)(v40 + 24);
  if ((v41 & 1) != 0)
  {
    if (!*(_BYTE *)(v40 + 24))
      return 0;
  }
  else
  {
    if (v39 != *(_DWORD *)(v40 + 20))
      v42 = 1;
    if ((v42 & 1) != 0)
      return 0;
  }
  v43 = v102;
  swift_beginAccess();
  v44 = *(unsigned __int8 *)(v43 + 25);
  v45 = v40;
  swift_beginAccess();
  v46 = *(unsigned __int8 *)(v40 + 25);
  if (v44 == 5)
  {
    if (v46 != 5)
      return 0;
LABEL_17:
    v48 = v102;
    v49 = v102
        + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
    swift_beginAccess();
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v49, (uint64_t)v36, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
    v50 = v40
        + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
    swift_beginAccess();
    v51 = v124;
    v52 = v124 + *(int *)(v30 + 48);
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v36, v124, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
    v53 = v50;
    v54 = v51;
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v53, v52, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v55(v51, 1, v27) == 1)
    {
      swift_retain();
      swift_retain();
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v36, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
      v56 = v55(v52, 1, v27);
      v57 = (uint64_t)v101;
      if (v56 == 1)
      {
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v54, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
        v58 = (uint64_t)v100;
LABEL_24:
        v66 = v48
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
        swift_beginAccess();
        v67 = v123;
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v66, v123, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
        v68 = v45
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
        swift_beginAccess();
        v69 = v121;
        v70 = v121 + *(int *)(v118 + 48);
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v67, v121, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v68, v70, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
        v71 = v120;
        v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
        if (v72(v69, 1, v120) == 1)
        {
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v67, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
          v73 = v72(v70, 1, v71);
          v74 = v102;
          v75 = v117;
          if (v73 == 1)
          {
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v69, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
LABEL_35:
            v80 = v74
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
            swift_beginAccess();
            v81 = v115;
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v80, v115, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
            v82 = v45
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
            swift_beginAccess();
            v83 = v113;
            v84 = v113 + *(int *)(v110 + 48);
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v81, v113, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
            v85 = v83;
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v82, v84, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
            v86 = v112;
            v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
            if (v87(v85, 1, v112) == 1)
            {
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v81, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
              v88 = v87(v84, 1, v86);
              v89 = v102;
              if (v88 == 1)
              {
                outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v85, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
LABEL_42:
                v92 = v89
                    + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
                swift_beginAccess();
                v93 = v108;
                outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v92, v108, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                v94 = v45
                    + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
                swift_beginAccess();
                v95 = v57 + *(int *)(v105 + 48);
                outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v93, v57, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v94, v95, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                v96 = v107;
                v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
                if (v97(v57, 1, v107) == 1)
                {
                  swift_release();
                  swift_release();
                  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v93, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                  if (v97(v95, 1, v96) == 1)
                  {
                    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v57, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                    return 1;
                  }
                  goto LABEL_47;
                }
                v98 = v103;
                outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v57, v103, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                if (v97(v95, 1, v96) == 1)
                {
                  swift_release();
                  swift_release();
                  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v108, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v98, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
LABEL_47:
                  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v57, &demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?, Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?));
                  return 0;
                }
                outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v95, v58, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                v99 = specialized static Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted.== infix(_:_:)(v98, v58, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                swift_release();
                swift_release();
                outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v58, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v108, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v98, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v57, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?);
                return (v99 & 1) != 0;
              }
              goto LABEL_40;
            }
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v85, (uint64_t)v75, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
            if (v87(v84, 1, v86) == 1)
            {
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v115, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v75, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
LABEL_40:
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v85, &demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?, Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?));
              goto LABEL_31;
            }
            v90 = v104;
            outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v84, (uint64_t)v104, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
            v91 = specialized static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.== infix(_:_:)(v75, v90);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v90, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v115, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v75, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v85, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?);
            v89 = v102;
            if ((v91 & 1) != 0)
              goto LABEL_42;
LABEL_31:
            swift_release();
            swift_release();
            return 0;
          }
        }
        else
        {
          v76 = v114;
          outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v69, (uint64_t)v114, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
          v77 = v72(v70, 1, v71);
          v75 = v117;
          if (v77 != 1)
          {
            v78 = v109;
            outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v70, (uint64_t)v109, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
            v79 = specialized static Proto_Gpsd_LtlInfo.LtlLutParams.== infix(_:_:)(v76, v78);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v78, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v123, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v76, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v69, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
            v74 = v102;
            if ((v79 & 1) == 0)
              goto LABEL_31;
            goto LABEL_35;
          }
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v123, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?);
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v76, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
        }
        v61 = &demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlLutParams?, Proto_Gpsd_LtlInfo.LtlLutParams?);
        v62 = v69;
LABEL_30:
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v62, v61);
        goto LABEL_31;
      }
    }
    else
    {
      v59 = v122;
      outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v51, v122, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
      v60 = v55(v52, 1, v27);
      v57 = (uint64_t)v101;
      if (v60 != 1)
      {
        v63 = v59;
        v64 = v116;
        outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v52, v116, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
        swift_retain();
        swift_retain();
        v65 = specialized static Proto_Gpsd_LtlInfo.LtlInitialParams.== infix(_:_:)(v63, v64);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v64, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v36, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v63, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
        v58 = (uint64_t)v100;
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v54, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
        if ((v65 & 1) == 0)
          goto LABEL_31;
        goto LABEL_24;
      }
      swift_retain();
      swift_retain();
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v36, &demangling cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v59, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
    }
    v61 = &demangling cache variable for type metadata for (Proto_Gpsd_LtlInfo.LtlInitialParams?, Proto_Gpsd_LtlInfo.LtlInitialParams?);
    v62 = v54;
    goto LABEL_30;
  }
  result = 0;
  if (v46 != 5 && v44 == v46)
    goto LABEL_17;
  return result;
}

Swift::Int Proto_Gpsd_LtlInfo.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LtlInfo, &lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_LtlInfo@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for Message.init() in conformance CLP_LogEntry_PrivateData_SyncState(a1, &one-time initialization token for defaultInstance, &static Proto_Gpsd_LtlInfo._StorageClass.defaultInstance, a2);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_LtlInfo()
{
  return Proto_Gpsd_LtlInfo.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_LtlInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_LtlInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LtlInfo()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfo@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LtlInfo()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfo()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
  return Message.hash(into:)();
}

uint64_t *Proto_Gpsd_LtlInfo.LtlLutParams.protoMessageName.unsafeMutableAddressor()
{
  if (one-time initialization token for protoMessageName != -1)
    swift_once();
  return &static Proto_Gpsd_LtlInfo.LtlLutParams.protoMessageName;
}

uint64_t static Proto_Gpsd_LtlInfo.LtlLutParams.protoMessageName.getter()
{
  return static CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo.protoMessageName.getter(&one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlLutParams.protoMessageName);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlLutParams._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfo.LtlLutParams._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlLutParams._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
          v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_5;
        case 3:
          v4 = v3;
          dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)();
          goto LABEL_5;
        case 4:
          v4 = v3;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.LtlLutParams.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  v3 = result;
  if ((*((_BYTE *)v0 + *(int *)(result + 28) + 4) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*((_BYTE *)v0 + *(int *)(v3 + 32) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    if (*(_QWORD *)(*v0 + 16))
      dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)();
    if (*(_QWORD *)(v0[1] + 16))
      dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_LtlInfo.LtlLutParams.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, &lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_LtlInfo.LtlLutParams@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  char *v8;

  v4 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v4;
  result = UnknownStorage.init()();
  v6 = *(int *)(a1 + 32);
  v7 = (char *)a2 + *(int *)(a1 + 28);
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = (char *)a2 + v6;
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  return result;
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance Proto_Gpsd_LtlInfo.LtlLutParams(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Message.protoMessageName.getter in conformance CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(a1, a2, &one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlLutParams.protoMessageName);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return Proto_Gpsd_LtlInfo.LtlLutParams.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return Proto_Gpsd_LtlInfo.LtlLutParams.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LtlInfo.LtlLutParams()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfo.LtlLutParams@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlLutParams._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LtlInfo.LtlLutParams()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfo.LtlLutParams()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
  return Message.hash(into:)();
}

uint64_t *Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.protoMessageName.unsafeMutableAddressor()
{
  if (one-time initialization token for protoMessageName != -1)
    swift_once();
  return &static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.protoMessageName;
}

uint64_t static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.protoMessageName.getter()
{
  return static CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo.protoMessageName.getter(&one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.protoMessageName);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3 || result == 2)
    {
      type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
    }
    else if (result == 1)
    {
      dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (result = dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)(), !v1))
  {
    result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
    v3 = result;
    if ((*(_BYTE *)(v0 + *(int *)(result + 24) + 4) & 1) == 0)
      result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    if (!v1)
    {
      if ((*(_BYTE *)(v0 + *(int *)(v3 + 28) + 4) & 1) == 0)
        dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

Swift::Int Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, &lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char *v6;
  char *v7;

  *a2 = MEMORY[0x24BEE4AF8];
  result = UnknownStorage.init()();
  v5 = *(int *)(a1 + 28);
  v6 = (char *)a2 + *(int *)(a1 + 24);
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  return result;
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Message.protoMessageName.getter in conformance CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(a1, a2, &one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.protoMessageName);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  return Message.hash(into:)();
}

uint64_t *Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.protoMessageName.unsafeMutableAddressor()
{
  if (one-time initialization token for protoMessageName != -1)
    swift_once();
  return &static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.protoMessageName;
}

uint64_t static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.protoMessageName.getter()
{
  return static CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo.protoMessageName.getter(&one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.protoMessageName);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigEnableGnssConstellations.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0C0]);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v12;
  uint64_t v13;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v6 || (v12 & 1) != 0)
      break;
    if (result == 2)
    {
      a4(0);
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
    }
    else if (result == 1)
    {
      v13 = ((uint64_t (*)(_QWORD))a4)(0);
      a5(v5 + *(int *)(v13 + 20), a2, a3);
    }
    v6 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigEnableGnssConstellations.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C2A8]);
}

uint64_t Proto_Gpsd_SetConfigEnableGnssConstellations.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;

  result = a4(0);
  v11 = result;
  v12 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v12[1] & 1) == 0)
    result = a5(*v12, 1, a2, a3);
  if (!v6)
  {
    if ((*(_BYTE *)(v5 + *(int *)(v11 + 24) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData) & 1;
}

Swift::Int Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, &lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Message.protoMessageName.getter in conformance CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(a1, a2, &one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData.protoMessageName);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  return Message.hash(into:)();
}

uint64_t *Proto_Gpsd_LtlInfo.LtlInitialParams.protoMessageName.unsafeMutableAddressor()
{
  if (one-time initialization token for protoMessageName != -1)
    swift_once();
  return &static Proto_Gpsd_LtlInfo.LtlInitialParams.protoMessageName;
}

uint64_t static Proto_Gpsd_LtlInfo.LtlInitialParams.protoMessageName.getter()
{
  return static CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo.protoMessageName.getter(&one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlInitialParams.protoMessageName);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlInitialParams._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LtlInfo.LtlInitialParams._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlInitialParams._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 8:
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
          break;
        case 7:
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        case 9:
        case 10:
        case 11:
          type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int *v3;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v3 = (int *)result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 4) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + v3[6] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[7] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + v3[8] + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    closure #5 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    closure #6 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    closure #7 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    closure #8 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    closure #9 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    closure #10 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    closure #11 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(v0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #5 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 40) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #7 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 44)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #8 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #9 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 52) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #10 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 56) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #11 in Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 60) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  return result;
}

Swift::Int Proto_Gpsd_LtlInfo.LtlInitialParams.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, &lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_LtlInfo.LtlInitialParams@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  v14 = a1[12];
  *(_BYTE *)(a2 + a1[11]) = 2;
  v15 = a2 + v14;
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a1[14];
  v17 = a2 + a1[13];
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  v18 = a2 + v16;
  *(_DWORD *)v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  v19 = a2 + a1[15];
  *(_DWORD *)v19 = 0;
  *(_BYTE *)(v19 + 4) = 1;
  return result;
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1, uint64_t a2)
{
  return protocol witness for static Message.protoMessageName.getter in conformance CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(a1, a2, &one-time initialization token for protoMessageName, &static Proto_Gpsd_LtlInfo.LtlInitialParams.protoMessageName);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return Proto_Gpsd_LtlInfo.LtlInitialParams.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return Proto_Gpsd_LtlInfo.LtlInitialParams.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LtlInfo.LtlInitialParams@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LtlInfo.LtlInitialParams._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  return Message.hash(into:)();
}

void *Proto_Gpsd_CntinStatusMessage.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_CntinStatusMessage.protoMessageName;
}

unint64_t static Proto_Gpsd_CntinStatusMessage.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t Proto_Gpsd_CntinStatusMessage._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinStatusMessage._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_CntinStatusMessage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinStatusMessage._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_CntinStatusMessage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetAssistanceSignalEnvironment.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_CntinStatusMessage, (void (*)(void))lazy protocol witness table accessor for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus);
}

uint64_t Proto_Gpsd_CntinStatusMessage.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0);
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 7)
  {
    lazy protocol witness table accessor for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus();
    result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  if (!v1)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

Swift::Int Proto_Gpsd_CntinStatusMessage.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_CntinStatusMessage, &lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_CntinStatusMessage@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 7;
  return result;
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_CntinStatusMessage()
{
  return Proto_Gpsd_CntinStatusMessage.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_CntinStatusMessage()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_CntinStatusMessage@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinStatusMessage._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_CntinStatusMessage()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_CntinStatusMessage()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
  return Message.hash(into:)();
}

void *Proto_Gpsd_CntinClockControl.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_CntinClockControl.protoMessageName;
}

unint64_t static Proto_Gpsd_CntinClockControl.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t Proto_Gpsd_CntinClockControl._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinClockControl._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_CntinClockControl._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinClockControl._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_CntinClockControl.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigDutyCycling.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t result;
  char v7;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v7 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)();
    }
    v4 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_CntinClockControl.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_SetConfigDutyCycling.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t Proto_Gpsd_SetConfigDutyCycling.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = a4(0);
  if (*(_BYTE *)(v4 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v5)
    return UnknownStorage.traverse<A>(visitor:)();
  return result;
}

uint64_t static Proto_Gpsd_CntinClockControl.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return specialized static Proto_Gpsd_SetConfigDutyCycling.== infix(_:_:)(a1, a2, type metadata accessor for Proto_Gpsd_CntinClockControl) & 1;
}

Swift::Int Proto_Gpsd_CntinClockControl.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_CntinClockControl, &lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_CntinClockControl()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_CntinClockControl@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_CntinClockControl._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_CntinClockControl()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_CntinClockControl()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
  return Message.hash(into:)();
}

void *Proto_Gpsd_Exception.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_Exception.protoMessageName;
}

unint64_t static Proto_Gpsd_Exception.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t Proto_Gpsd_Exception._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Exception._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_Exception._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Exception._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_Exception.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3 || result == 2 || result == 1)
    {
      type metadata accessor for Proto_Gpsd_Exception(0);
      dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_Exception.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_Exception(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 4) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 28) + 4) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_Exception.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_Exception, &lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_Exception()
{
  return Proto_Gpsd_Exception.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_Exception()
{
  return Proto_Gpsd_Exception.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_Exception()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_Exception@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_Exception._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_Exception()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_Exception()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
  return Message.hash(into:)();
}

void *Proto_Gpsd_AskBasebandReset.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_AskBasebandReset.protoMessageName;
}

unint64_t static Proto_Gpsd_AskBasebandReset.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t Proto_Gpsd_AskBasebandReset._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_AskBasebandReset._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_AskBasebandReset._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_AskBasebandReset._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_AskBasebandReset.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    v1 = v0;
    if (v0 || (v3 & 1) != 0)
      return result;
    switch(result)
    {
      case 3:
        type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
        dispatch thunk of Decoder.decodeSingularStringField(value:)();
LABEL_3:
        v1 = 0;
        break;
      case 2:
        type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
        dispatch thunk of Decoder.decodeSingularInt64Field(value:)();
        goto LABEL_3;
      case 1:
        type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
        dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
        goto LABEL_3;
    }
    v0 = v1;
  }
}

uint64_t Proto_Gpsd_AskBasebandReset.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v3 = result;
  if ((*(_BYTE *)(v0 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  if (!v1)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v3 + 24) + 8) & 1) == 0)
      dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)();
    if (*(_QWORD *)(v0 + *(int *)(v3 + 28) + 8))
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_AskBasebandReset.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_AskBasebandReset, &lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_AskBasebandReset@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  result = UnknownStorage.init()();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a2 + v5;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  return result;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_AskBasebandReset()
{
  return Proto_Gpsd_AskBasebandReset.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_AskBasebandReset()
{
  return Proto_Gpsd_AskBasebandReset.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_AskBasebandReset()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_AskBasebandReset@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_AskBasebandReset._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_AskBasebandReset()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_AskBasebandReset()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
  return Message.hash(into:)();
}

void *Proto_Gpsd_LogEntry.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_LogEntry.protoMessageName;
}

unint64_t static Proto_Gpsd_LogEntry.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t Proto_Gpsd_LogEntry._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LogEntry._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_LogEntry._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LogEntry._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_LogEntry.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t (*v5)(uint64_t);
  void *v6;
  uint64_t v7;

  result = dispatch thunk of Decoder.nextFieldNumber()();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Proto_Gpsd_LogEntry(0);
          v7 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          goto LABEL_6;
        case 2:
          type metadata accessor for Proto_Gpsd_LogEntry(0);
          v7 = v3;
          dispatch thunk of Decoder.decodeSingularStringField(value:)();
          goto LABEL_6;
        case 5:
          type metadata accessor for Proto_Gpsd_LogEntry(0);
          type metadata accessor for Proto_Gpsd_Request(0);
          v4 = &lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request;
          v5 = type metadata accessor for Proto_Gpsd_Request;
          v6 = &protocol conformance descriptor for Proto_Gpsd_Request;
          goto LABEL_5;
        case 6:
          type metadata accessor for Proto_Gpsd_LogEntry(0);
          type metadata accessor for Proto_Gpsd_Response(0);
          v4 = &lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response;
          v5 = type metadata accessor for Proto_Gpsd_Response;
          v6 = &protocol conformance descriptor for Proto_Gpsd_Response;
          goto LABEL_5;
        case 7:
          type metadata accessor for Proto_Gpsd_LogEntry(0);
          type metadata accessor for Proto_Gpsd_Indication(0);
          v4 = &lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication;
          v5 = type metadata accessor for Proto_Gpsd_Indication;
          v6 = &protocol conformance descriptor for Proto_Gpsd_Indication;
LABEL_5:
          lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(v4, v5, (uint64_t)v6);
          v7 = v3;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
LABEL_6:
          v3 = v7;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t Proto_Gpsd_LogEntry.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v10;

  v5 = v3;
  result = type metadata accessor for Proto_Gpsd_LogEntry(0);
  v10 = result;
  if ((*(_BYTE *)(v5 + *(int *)(result + 20) + 8) & 1) == 0)
    result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
  if (!v4)
  {
    if (*(_QWORD *)(v5 + *(int *)(v10 + 24) + 8))
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    closure #3 in Proto_Gpsd_LogEntry.traverse<A>(visitor:)(v5, a1, a2, a3);
    closure #4 in Proto_Gpsd_LogEntry.traverse<A>(visitor:)(v5, a1, a2, a3);
    closure #5 in Proto_Gpsd_LogEntry.traverse<A>(visitor:)(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #3 in Proto_Gpsd_LogEntry.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_Request(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 28), (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_Request);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_Request);
}

uint64_t closure #4 in Proto_Gpsd_LogEntry.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_Response(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 32), (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_Response);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_Response);
}

uint64_t closure #5 in Proto_Gpsd_LogEntry.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Gpsd_Indication(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a1 + *(int *)(v12 + 36), (uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v7, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Gpsd_Indication);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v11, type metadata accessor for Proto_Gpsd_Indication);
}

Swift::Int Proto_Gpsd_LogEntry.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_LogEntry, &lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
}

uint64_t protocol witness for Message.init() in conformance Proto_Gpsd_LogEntry@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  UnknownStorage.init()();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a2 + a1[7];
  v8 = type metadata accessor for Proto_Gpsd_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = a2 + a1[8];
  v10 = type metadata accessor for Proto_Gpsd_Response(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = a2 + a1[9];
  v12 = type metadata accessor for Proto_Gpsd_Indication(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_LogEntry()
{
  return Proto_Gpsd_LogEntry.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_LogEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Proto_Gpsd_LogEntry.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_LogEntry()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_LogEntry@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_LogEntry._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_LogEntry()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_LogEntry()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
  return Message.hash(into:)();
}

void *Proto_Gpsd_StartContext.protoMessageName.unsafeMutableAddressor()
{
  return &static Proto_Gpsd_StartContext.protoMessageName;
}

unint64_t static Proto_Gpsd_StartContext.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t Proto_Gpsd_StartContext._protobuf_nameMap.unsafeMutableAddressor()
{
  return CLP_LogEntry_AONLoc_Request._protobuf_nameMap.unsafeMutableAddressor(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_StartContext._protobuf_nameMap);
}

uint64_t static Proto_Gpsd_StartContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static CLP_LogEntry_AONLoc_Request._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_StartContext._protobuf_nameMap, a1);
}

uint64_t Proto_Gpsd_StartContext.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3 || result == 2 || result == 1)
    {
      type metadata accessor for Proto_Gpsd_StartContext(0);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)();
    }
    v0 = 0;
  }
  return result;
}

uint64_t Proto_Gpsd_StartContext.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Gpsd_StartContext(0);
  v3 = result;
  if (*(_BYTE *)(v0 + *(int *)(result + 20)) != 2)
    result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v3 + 24)) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    if (*(_BYTE *)(v0 + *(int *)(v3 + 28)) != 2)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int Proto_Gpsd_StartContext.hashValue.getter()
{
  return CLP_LogEntry_AONLoc_Request.hashValue.getter(type metadata accessor for Proto_Gpsd_StartContext, &lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance Proto_Gpsd_StartContext()
{
  return Proto_Gpsd_StartContext.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance Proto_Gpsd_StartContext()
{
  return Proto_Gpsd_StartContext.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance Proto_Gpsd_StartContext()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance Proto_Gpsd_StartContext@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for static _ProtoNameProviding._protobuf_nameMap.getter in conformance CLP_LogEntry_AONLoc_Request(&one-time initialization token for _protobuf_nameMap, (uint64_t)static Proto_Gpsd_StartContext._protobuf_nameMap, a1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Proto_Gpsd_StartContext()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Proto_Gpsd_StartContext()
{
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
  return Message.hash(into:)();
}

uint64_t type metadata accessor for Proto_Gpsd_Request(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Request);
}

uint64_t type metadata accessor for Proto_Gpsd_Request._StorageClass(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Request._StorageClass);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectAssistancePosition(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectAssistanceTime(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistancePressure(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistancePressure);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceAccel(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceGyro(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceDem(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceDem);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceMountState(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectAssistanceFile(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectRtiFile(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_InjectRtiFile);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t type metadata accessor for Proto_Gpsd_DeleteGnssData(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_DeleteGnssData);
}

uint64_t type metadata accessor for Proto_Gpsd_SetPvtmReport(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetPvtmReport);
}

uint64_t type metadata accessor for Proto_Gpsd_SetNmeaHandler(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetNmeaHandler);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t type metadata accessor for Proto_Gpsd_TerminationImminent(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_TerminationImminent);
}

uint64_t type metadata accessor for Proto_Gpsd_ExitMessage(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_ExitMessage);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfo);
}

uint64_t type metadata accessor for Proto_Gpsd_StartContext(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_StartContext);
}

uint64_t type metadata accessor for Proto_Gpsd_CntinStatusMessage(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_CntinStatusMessage);
}

uint64_t type metadata accessor for Proto_Gpsd_SetThermalRiskState(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetThermalRiskState);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t specialized Proto_Gpsd_Request.TypeEnum.init(rawValue:)(unint64_t a1)
{
  if (a1 > 0x4C)
    return 61;
  else
    return byte_235BE1A80[a1];
}

uint64_t type metadata accessor for Proto_Gpsd_Response(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Response);
}

uint64_t type metadata accessor for Proto_Gpsd_Indication(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Indication);
}

uint64_t type metadata accessor for Proto_Gpsd_Indication._StorageClass(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Indication._StorageClass);
}

uint64_t type metadata accessor for Proto_Gpsd_Status(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Status);
}

uint64_t type metadata accessor for Proto_Gpsd_RecoveryStatistics(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_RecoveryStatistics);
}

uint64_t type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfoRequest(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfoRequest);
}

uint64_t type metadata accessor for Proto_Gpsd_CntinClockControl(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_CntinClockControl);
}

uint64_t type metadata accessor for Proto_Gpsd_Exception(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_Exception);
}

uint64_t type metadata accessor for Proto_Gpsd_AskBasebandReset(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_AskBasebandReset);
}

uint64_t specialized Proto_Gpsd_Indication.TypeEnum.init(rawValue:)(unint64_t a1)
{
  if (a1 > 0x1A)
    return 24;
  else
    return byte_235BE1ACD[a1];
}

uint64_t type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfo._StorageClass);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t type metadata accessor for Proto_Gpsd_LogEntry(uint64_t a1)
{
  return type metadata accessor for CLP_LogEntry_AONLoc_Request(a1, (uint64_t *)&type metadata singleton initialization cache for Proto_Gpsd_LogEntry);
}

uint64_t specialized static Proto_Gpsd_SetAssistanceMotionActivityContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  char v28;
  void (*v29)(_BYTE *, uint64_t);
  _BYTE v31[16];

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v31[-v9];
  v11 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0);
  v12 = v11;
  v13 = *(int *)(v11 + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = *(_BYTE *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  v17 = *(unsigned __int8 *)(a2 + v13 + 8);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_23;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_23;
  }
  v18 = *(int *)(v11 + 24);
  v19 = *(unsigned __int8 *)(a1 + v18);
  v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 10)
  {
    if (v20 != 10)
      goto LABEL_23;
  }
  else
  {
    v31[11] = v19;
    if (v20 == 10)
      goto LABEL_23;
    v31[10] = v20;
    lazy protocol witness table accessor for type Proto_Gnss_MotionActivityContext and conformance Proto_Gnss_MotionActivityContext();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_23;
  }
  v21 = *(int *)(v12 + 28);
  v22 = *(unsigned __int8 *)(a1 + v21);
  v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 5)
  {
    if (v23 != 5)
      goto LABEL_23;
  }
  else
  {
    v31[13] = v22;
    if (v23 == 5)
      goto LABEL_23;
    v31[12] = v23;
    lazy protocol witness table accessor for type Proto_Gnss_MovingState and conformance Proto_Gnss_MovingState();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_23;
  }
  v24 = *(int *)(v12 + 32);
  v25 = *(unsigned __int8 *)(a1 + v24);
  v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 6)
  {
    if (v26 == 6)
      goto LABEL_22;
LABEL_23:
    v28 = 0;
    return v28 & 1;
  }
  v31[15] = v25;
  if (v26 == 6)
    goto LABEL_23;
  v31[14] = v26;
  lazy protocol witness table accessor for type Proto_Gnss_Reliability and conformance Proto_Gnss_Reliability();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    goto LABEL_23;
LABEL_22:
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v27(v10, a1, v4);
  v27(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  v29 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v29(v8, v4);
  v29(v10, v4);
  return v28 & 1;
}

uint64_t specialized static Proto_Gpsd_SetAssistanceSignalEnvironment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  int v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[16];

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v18[-v9];
  v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0) + 20);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 == 8)
  {
    if (v13 != 8)
    {
LABEL_7:
      v15 = 0;
      return v15 & 1;
    }
  }
  else
  {
    v18[15] = v12;
    if (v13 == 8)
      goto LABEL_7;
    v18[14] = v13;
    lazy protocol witness table accessor for type Proto_Gnss_SignalEnvironmentType and conformance Proto_Gnss_SignalEnvironmentType();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_7;
  }
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)();
  v16 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t specialized static Proto_Gpsd_SetAssistanceSpeedConstraint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  uint64_t v27;
  double *v28;
  char v29;
  double *v30;
  int v31;
  char v32;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_21;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_21;
  }
  v17 = v11[6];
  v18 = (double *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (double *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_21;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_21;
  }
  v22 = v11[7];
  v23 = (double *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 8);
  v25 = (double *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) == 0)
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_21;
LABEL_19:
    v27 = v11[8];
    v28 = (double *)(a1 + v27);
    v29 = *(_BYTE *)(a1 + v27 + 8);
    v30 = (double *)(a2 + v27);
    v31 = *(unsigned __int8 *)(a2 + v27 + 8);
    if ((v29 & 1) != 0)
    {
      if (!v31)
        goto LABEL_21;
    }
    else
    {
      if (*v28 != *v30)
        LOBYTE(v31) = 1;
      if ((v31 & 1) != 0)
        goto LABEL_21;
    }
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v34(v10, a1, v4);
    v34(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    v35 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35(v8, v4);
    v35(v10, v4);
    return v32 & 1;
  }
  if (v26)
    goto LABEL_19;
LABEL_21:
  v32 = 0;
  return v32 & 1;
}

uint64_t specialized static Proto_Gpsd_SetAssistanceMountState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  char v21;
  void (*v22)(_BYTE *, uint64_t);
  _BYTE v24[16];

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  v11 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0);
  v12 = *(int *)(v11 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_13;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_13;
  }
  v17 = *(int *)(v11 + 24);
  v18 = *(unsigned __int8 *)(a1 + v17);
  v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 4)
  {
    if (v19 != 4)
    {
LABEL_13:
      v21 = 0;
      return v21 & 1;
    }
  }
  else
  {
    v24[15] = v18;
    if (v19 == 4)
      goto LABEL_13;
    v24[14] = v19;
    lazy protocol witness table accessor for type Proto_Gnss_DeviceMountState and conformance Proto_Gnss_DeviceMountState();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_13;
  }
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v20(v10, a1, v4);
  v20(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  v22 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v22(v8, v4);
  v22(v10, v4);
  return v21 & 1;
}

uint64_t specialized static Proto_Gpsd_SetConfigSimulatorMode.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  _DWORD *v16;
  char v17;
  _DWORD *v18;
  int v19;
  char v20;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0);
  v12 = *(int *)(v11 + 20);
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_8;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_8;
  }
  v15 = *(int *)(v11 + 24);
  v16 = (_DWORD *)(a1 + v15);
  v17 = *(_BYTE *)(a1 + v15 + 4);
  v18 = (_DWORD *)(a2 + v15);
  v19 = *(unsigned __int8 *)(a2 + v15 + 4);
  if ((v17 & 1) == 0)
  {
    if (*v16 != *v18)
      LOBYTE(v19) = 1;
    if ((v19 & 1) != 0)
      goto LABEL_8;
LABEL_13:
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v22(v10, a1, v4);
    v22(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v20 = dispatch thunk of static Equatable.== infix(_:_:)();
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v8, v4);
    v23(v10, v4);
    return v20 & 1;
  }
  if (v19)
    goto LABEL_13;
LABEL_8:
  v20 = 0;
  return v20 & 1;
}

uint64_t specialized static Proto_Gpsd_SetAssistanceMapVector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t v22;
  double *v23;
  char v24;
  double *v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  double *v31;
  char v32;
  double *v33;
  int v34;
  uint64_t v35;
  double *v36;
  char v37;
  double *v38;
  int v39;
  uint64_t v40;
  double *v41;
  char v42;
  double *v43;
  int v44;
  uint64_t v45;
  double *v46;
  char v47;
  double *v48;
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char v66;
  void (*v67)(char *, uint64_t);
  uint64_t v69;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v69 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_74;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_74;
  }
  v17 = v11[6];
  v18 = (double *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (double *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_74;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_74;
  }
  v22 = v11[7];
  v23 = (double *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 8);
  v25 = (double *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_74;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_74;
  }
  v27 = v11[8];
  v28 = *(unsigned __int8 *)(a1 + v27);
  v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 2)
  {
    if (v29 != 2)
      goto LABEL_74;
  }
  else if (v29 == 2 || ((((v29 & 1) == 0) ^ v28) & 1) == 0)
  {
    goto LABEL_74;
  }
  v30 = v11[9];
  v31 = (double *)(a1 + v30);
  v32 = *(_BYTE *)(a1 + v30 + 8);
  v33 = (double *)(a2 + v30);
  v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if ((v32 & 1) != 0)
  {
    if (!v34)
      goto LABEL_74;
  }
  else
  {
    if (*v31 != *v33)
      LOBYTE(v34) = 1;
    if ((v34 & 1) != 0)
      goto LABEL_74;
  }
  v35 = v11[10];
  v36 = (double *)(a1 + v35);
  v37 = *(_BYTE *)(a1 + v35 + 8);
  v38 = (double *)(a2 + v35);
  v39 = *(unsigned __int8 *)(a2 + v35 + 8);
  if ((v37 & 1) != 0)
  {
    if (!v39)
      goto LABEL_74;
  }
  else
  {
    if (*v36 != *v38)
      LOBYTE(v39) = 1;
    if ((v39 & 1) != 0)
      goto LABEL_74;
  }
  v40 = v11[11];
  v41 = (double *)(a1 + v40);
  v42 = *(_BYTE *)(a1 + v40 + 8);
  v43 = (double *)(a2 + v40);
  v44 = *(unsigned __int8 *)(a2 + v40 + 8);
  if ((v42 & 1) != 0)
  {
    if (!v44)
      goto LABEL_74;
  }
  else
  {
    if (*v41 != *v43)
      LOBYTE(v44) = 1;
    if ((v44 & 1) != 0)
      goto LABEL_74;
  }
  v45 = v11[12];
  v46 = (double *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 8);
  v48 = (double *)(a2 + v45);
  v49 = *(unsigned __int8 *)(a2 + v45 + 8);
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_74;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_74;
  }
  v50 = v11[13];
  v51 = *(unsigned __int8 *)(a1 + v50);
  v52 = *(unsigned __int8 *)(a2 + v50);
  if (v51 == 2)
  {
    if (v52 != 2)
      goto LABEL_74;
  }
  else if (v52 == 2 || ((((v52 & 1) == 0) ^ v51) & 1) == 0)
  {
    goto LABEL_74;
  }
  v53 = v11[14];
  v54 = *(unsigned __int8 *)(a1 + v53);
  v55 = *(unsigned __int8 *)(a2 + v53);
  if (v54 == 2)
  {
    if (v55 != 2)
      goto LABEL_74;
  }
  else if (v55 == 2 || ((((v55 & 1) == 0) ^ v54) & 1) == 0)
  {
    goto LABEL_74;
  }
  v56 = v11[15];
  v57 = *(unsigned __int8 *)(a1 + v56);
  v58 = *(unsigned __int8 *)(a2 + v56);
  if (v57 == 2)
  {
    if (v58 != 2)
      goto LABEL_74;
  }
  else if (v58 == 2 || ((((v58 & 1) == 0) ^ v57) & 1) == 0)
  {
    goto LABEL_74;
  }
  v59 = v11[16];
  v60 = *(unsigned __int8 *)(a1 + v59);
  v61 = *(unsigned __int8 *)(a2 + v59);
  if (v60 == 2)
  {
    if (v61 != 2)
      goto LABEL_74;
  }
  else if (v61 == 2 || ((((v61 & 1) == 0) ^ v60) & 1) == 0)
  {
    goto LABEL_74;
  }
  v62 = v11[17];
  v63 = *(unsigned __int8 *)(a1 + v62);
  v64 = *(unsigned __int8 *)(a2 + v62);
  if (v63 == 2)
  {
    if (v64 == 2)
      goto LABEL_73;
LABEL_74:
    v66 = 0;
    return v66 & 1;
  }
  if (v64 == 2 || ((((v64 & 1) == 0) ^ v63) & 1) == 0)
    goto LABEL_74;
LABEL_73:
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v65(v10, a1, v4);
  v65(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v66 = dispatch thunk of static Equatable.== infix(_:_:)();
  v67 = *(void (**)(char *, uint64_t))(v5 + 8);
  v67(v8, v4);
  v67(v10, v4);
  return v66 & 1;
}

uint64_t specialized static Proto_Gpsd_SetConfigRfBandEnable.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0);
  v12 = *(int *)(v11 + 20);
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_12;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_12;
  }
  v15 = *(int *)(v11 + 24);
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
    {
LABEL_12:
      v19 = 0;
      return v19 & 1;
    }
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_12;
  }
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v20(v10, v4);
  return v19 & 1;
}

uint64_t specialized static Proto_Gpsd_InjectAssistanceTime.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  _QWORD *v25;
  int v26;
  char v27;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_15;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_15;
  }
  v17 = v11[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) == 0)
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    v22 = v11[7];
    v23 = (_QWORD *)(a1 + v22);
    v24 = *(_BYTE *)(a1 + v22 + 8);
    v25 = (_QWORD *)(a2 + v22);
    v26 = *(unsigned __int8 *)(a2 + v22 + 8);
    if ((v24 & 1) != 0)
    {
      if (!v26)
        goto LABEL_15;
    }
    else
    {
      if (*v23 != *v25)
        LOBYTE(v26) = 1;
      if ((v26 & 1) != 0)
        goto LABEL_15;
    }
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v10, a1, v4);
    v29(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v8, v4);
    v30(v10, v4);
    return v27 & 1;
  }
  if (v21)
    goto LABEL_13;
LABEL_15:
  v27 = 0;
  return v27 & 1;
}

uint64_t specialized static Proto_Gpsd_InjectAssistanceFile.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t);
  void (*v26)(_BYTE *, uint64_t);
  _BYTE v27[4];
  int v28;
  uint64_t v29;

  v4 = type metadata accessor for UnknownStorage();
  v29 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v27[-v8];
  v10 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  if (v13 >> 60 != 15)
  {
    if (v16 >> 60 != 15)
    {
      outlined copy of Data?(v12, v13);
      outlined copy of Data?(v15, v16);
      specialized static Data.== infix(_:_:)(v12, v13);
      v28 = v19;
      outlined consume of Data?(v15, v16);
      outlined consume of Data?(v12, v13);
      if ((v28 & 1) == 0)
        goto LABEL_6;
      goto LABEL_9;
    }
LABEL_5:
    outlined copy of Data?(v12, v13);
    outlined copy of Data?(v15, v16);
    outlined consume of Data?(v12, v13);
    outlined consume of Data?(v15, v16);
    goto LABEL_6;
  }
  if (v16 >> 60 != 15)
    goto LABEL_5;
LABEL_9:
  v20 = *(int *)(v10 + 24);
  v21 = *(unsigned __int8 *)(a1 + v20);
  v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 3)
  {
    if (v22 == 3)
    {
LABEL_17:
      v24 = v29;
      v25 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 16);
      v25(v9, a1, v4);
      v25(v7, a2, v4);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      v26 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
      v26(v7, v4);
      v26(v9, v4);
      return v17 & 1;
    }
  }
  else if (v22 != 3 && v21 == v22)
  {
    goto LABEL_17;
  }
LABEL_6:
  v17 = 0;
  return v17 & 1;
}

uint64_t specialized static Proto_Gpsd_SetThermalRiskState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v26;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0);
  v12 = *(int *)(v11 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) == 0)
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_9;
LABEL_7:
    v17 = *(int *)(v11 + 24);
    v18 = (_DWORD *)(a1 + v17);
    v19 = *(_BYTE *)(a1 + v17 + 4);
    v20 = (_DWORD *)(a2 + v17);
    v21 = *(unsigned __int8 *)(a2 + v17 + 4);
    if ((v19 & 1) != 0)
    {
      if (!v21)
        goto LABEL_9;
    }
    else
    {
      if (*v18 != *v20)
        LOBYTE(v21) = 1;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23(v10, a1, v4);
    v23(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v22 = dispatch thunk of static Equatable.== infix(_:_:)();
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    v24(v10, v4);
    return v22 & 1;
  }
  if (v16)
    goto LABEL_7;
LABEL_9:
  v22 = 0;
  return v22 & 1;
}

uint64_t specialized static Proto_Gpsd_SetAssistancePressure.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v12 = type metadata accessor for UnknownStorage();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - v17;
  if ((specialized static Array<A>.== infix(_:_:)(*a1, *a2, a3, a4, a5) & 1) != 0)
  {
    v19 = a6(0);
    v20 = (char *)a1 + *(int *)(v19 + 20);
    v21 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v21(v18, v20, v12);
    v21(v16, (char *)a2 + *(int *)(v19 + 20), v12);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v22 = dispatch thunk of static Equatable.== infix(_:_:)();
    v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v16, v12);
    v23(v18, v12);
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t specialized static Proto_Gpsd_RecoveryStatistics.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for UnknownStorage();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - v7;
  v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_RecoveryStatistics.RecoveryStatus?, Proto_Gpsd_RecoveryStatistics.RecoveryStatus?));
  MEMORY[0x24BDAC7A8](v43);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v38 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v38 - v21;
  v23 = a1;
  if ((specialized static Array<A>.== infix(_:_:)(*a1, *a2) & 1) == 0)
    goto LABEL_8;
  v38 = v11;
  v39 = v8;
  v24 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0);
  v25 = v23;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v23 + *(int *)(v24 + 24), (uint64_t)v22, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)a2 + *(int *)(v24 + 24), (uint64_t)v20, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v26 = (uint64_t)&v13[*(int *)(v43 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, (uint64_t)v13, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, v26, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v27((uint64_t)v13, 1, v45) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    if (v27(v26, 1, v45) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
LABEL_11:
      v33 = v41;
      v32 = v42;
      v34 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      v35 = v39;
      v34(v39, (char *)v25 + *(int *)(v24 + 20), v42);
      v36 = v40;
      v34(v40, (char *)a2 + *(int *)(v24 + 20), v32);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      v37 = *(void (**)(char *, uint64_t))(v33 + 8);
      v37(v36, v32);
      v37(v35, v32);
      return v28 & 1;
    }
    goto LABEL_7;
  }
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, (uint64_t)v17, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  if (v27(v26, 1, v45) == 1)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v17, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
LABEL_7:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for (Proto_Gpsd_RecoveryStatistics.RecoveryStatus?, Proto_Gpsd_RecoveryStatistics.RecoveryStatus?));
    goto LABEL_8;
  }
  v30 = (uint64_t)v38;
  outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v26, (uint64_t)v38, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  v31 = specialized static Proto_Gpsd_RecoveryStatistics.RecoveryStatus.== infix(_:_:)((uint64_t)v17, v30);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v30, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v17, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
  if ((v31 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v28 = 0;
  return v28 & 1;
}

uint64_t specialized static Proto_Gpsd_RecoveryStatistics.RecoveryStatus.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  _DWORD *v16;
  char v17;
  _DWORD *v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_23;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_23;
  }
  v15 = v11[6];
  v16 = (_DWORD *)(a1 + v15);
  v17 = *(_BYTE *)(a1 + v15 + 4);
  v18 = (_DWORD *)(a2 + v15);
  v19 = *(unsigned __int8 *)(a2 + v15 + 4);
  if ((v17 & 1) != 0)
  {
    if (!v19)
      goto LABEL_23;
  }
  else
  {
    if (*v16 != *v18)
      LOBYTE(v19) = 1;
    if ((v19 & 1) != 0)
      goto LABEL_23;
  }
  v20 = v11[7];
  v21 = *(unsigned __int8 *)(a1 + v20);
  v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 2)
  {
    if (v22 != 2)
      goto LABEL_23;
  }
  else if (v22 == 2 || ((((v22 & 1) == 0) ^ v21) & 1) == 0)
  {
    goto LABEL_23;
  }
  v23 = v11[8];
  v24 = *(unsigned __int8 *)(a1 + v23);
  v25 = *(unsigned __int8 *)(a2 + v23);
  if (v24 == 2)
  {
    if (v25 == 2)
      goto LABEL_22;
LABEL_23:
    v27 = 0;
    return v27 & 1;
  }
  if (v25 == 2 || ((((v25 & 1) == 0) ^ v24) & 1) == 0)
    goto LABEL_23;
LABEL_22:
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26(v10, a1, v4);
  v26(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v8, v4);
  v28(v10, v4);
  return v27 & 1;
}

uint64_t specialized static Proto_Gpsd_RecoveryStatistics.RecoveryPoint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  _DWORD *v20;
  char v21;
  _DWORD *v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_25;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_25;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    v19 = v11[6];
    v20 = (_DWORD *)(a1 + v19);
    v21 = *(_BYTE *)(a1 + v19 + 4);
    v22 = (_DWORD *)(a2 + v19);
    v23 = *(unsigned __int8 *)(a2 + v19 + 4);
    if ((v21 & 1) != 0)
    {
      if (!v23)
        goto LABEL_25;
    }
    else
    {
      if (*v20 != *v22)
        LOBYTE(v23) = 1;
      if ((v23 & 1) != 0)
        goto LABEL_25;
    }
    v24 = v11[7];
    v25 = (_QWORD *)(a1 + v24);
    v26 = *(_QWORD *)(a1 + v24 + 8);
    v27 = (_QWORD *)(a2 + v24);
    v28 = v27[1];
    if (v26)
    {
      if (v28)
      {
        if (*v25 != *v27 || v26 != v28)
        {
          v18 = 0;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
            return v18 & 1;
        }
LABEL_27:
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v31(v10, a1, v4);
        v31(v8, a2, v4);
        lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v18 = dispatch thunk of static Equatable.== infix(_:_:)();
        v32 = *(void (**)(char *, uint64_t))(v5 + 8);
        v32(v8, v4);
        v32(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v28)
    {
      goto LABEL_27;
    }
LABEL_25:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t specialized static Proto_Gpsd_CntinStatusMessage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v19;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0) + 20);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 != 7)
  {
    if (v13 != 7 && v12 == v13)
      goto LABEL_3;
LABEL_8:
    v15 = 0;
    return v15 & 1;
  }
  if (v13 != 7)
    goto LABEL_8;
LABEL_3:
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t specialized static Proto_Gpsd_SetConfigDutyCycling.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  int v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = *(int *)(a3(0) + 20);
  v14 = *(unsigned __int8 *)(a1 + v13);
  v15 = *(unsigned __int8 *)(a2 + v13);
  if (v14 == 2)
  {
    if (v15 != 2)
    {
LABEL_7:
      v17 = 0;
      return v17 & 1;
    }
  }
  else if (v15 == 2 || ((((v15 & 1) == 0) ^ v14) & 1) == 0)
  {
    goto LABEL_7;
  }
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v12, a1, v6);
  v16(v10, a2, v6);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v17 = dispatch thunk of static Equatable.== infix(_:_:)();
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  v18(v12, v6);
  return v17 & 1;
}

uint64_t specialized static Proto_Gpsd_SetAssistanceAlongTrackVelocity.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  double *v20;
  char v21;
  double *v22;
  int v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  char v29;
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - v11;
  v13 = (int *)a3(0);
  v14 = v13[5];
  v15 = (_QWORD *)(a1 + v14);
  v16 = *(_BYTE *)(a1 + v14 + 8);
  v17 = (_QWORD *)(a2 + v14);
  v18 = *(unsigned __int8 *)(a2 + v14 + 8);
  if ((v16 & 1) != 0)
  {
    if (!v18)
      goto LABEL_15;
  }
  else
  {
    if (*v15 != *v17)
      LOBYTE(v18) = 1;
    if ((v18 & 1) != 0)
      goto LABEL_15;
  }
  v19 = v13[6];
  v20 = (double *)(a1 + v19);
  v21 = *(_BYTE *)(a1 + v19 + 8);
  v22 = (double *)(a2 + v19);
  v23 = *(unsigned __int8 *)(a2 + v19 + 8);
  if ((v21 & 1) == 0)
  {
    if (*v20 != *v22)
      LOBYTE(v23) = 1;
    if ((v23 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    v24 = v13[7];
    v25 = (double *)(a1 + v24);
    v26 = *(_BYTE *)(a1 + v24 + 8);
    v27 = (double *)(a2 + v24);
    v28 = *(unsigned __int8 *)(a2 + v24 + 8);
    if ((v26 & 1) != 0)
    {
      if (!v28)
        goto LABEL_15;
    }
    else
    {
      if (*v25 != *v27)
        LOBYTE(v28) = 1;
      if ((v28 & 1) != 0)
        goto LABEL_15;
    }
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v31(v12, a1, v6);
    v31(v10, a2, v6);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v29 = dispatch thunk of static Equatable.== infix(_:_:)();
    v32 = *(void (**)(char *, uint64_t))(v7 + 8);
    v32(v10, v6);
    v32(v12, v6);
    return v29 & 1;
  }
  if (v23)
    goto LABEL_13;
LABEL_15:
  v29 = 0;
  return v29 & 1;
}

uint64_t specialized static Proto_Gpsd_AskBasebandReset.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v28;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0);
  v12 = v11[5];
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_22;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_22;
  }
  v17 = v11[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_22;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_22;
  }
  v22 = v11[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = *(_QWORD *)(a1 + v22 + 8);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  if (!v24)
  {
    if (!v26)
    {
LABEL_24:
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v30(v10, a1, v4);
      v30(v8, a2, v4);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      v31 = *(void (**)(char *, uint64_t))(v5 + 8);
      v31(v8, v4);
      v31(v10, v4);
      return v28 & 1;
    }
LABEL_22:
    v28 = 0;
    return v28 & 1;
  }
  if (!v26)
    goto LABEL_22;
  if (*v23 == *v25 && v24 == v26)
    goto LABEL_24;
  v28 = 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    goto LABEL_24;
  return v28 & 1;
}

uint64_t specialized static Proto_Gpsd_LtlInfoRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v19;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0) + 20);
  v12 = *(unsigned __int8 *)(a1 + v11);
  v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 != 5)
  {
    if (v13 != 5 && v12 == v13)
      goto LABEL_3;
LABEL_8:
    v15 = 0;
    return v15 & 1;
  }
  if (v13 != 5)
    goto LABEL_8;
LABEL_3:
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t specialized static Proto_Gpsd_SetNmeaHandler.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  _QWORD *v16;
  int v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  v13 = *(int *)(a3(0) + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = *(_BYTE *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  v17 = *(unsigned __int8 *)(a2 + v13 + 8);
  if ((v15 & 1) == 0)
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_3;
LABEL_7:
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v19(v12, a1, v6);
    v19(v10, a2, v6);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v18 = dispatch thunk of static Equatable.== infix(_:_:)();
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v10, v6);
    v20(v12, v6);
    return v18 & 1;
  }
  if (v17)
    goto LABEL_7;
LABEL_3:
  v18 = 0;
  return v18 & 1;
}

uint64_t specialized static Proto_Gpsd_SetPvtmReport.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0);
  v12 = v11[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_32;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_32;
  }
  v15 = v11[6];
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
      goto LABEL_32;
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_32;
  }
  v18 = v11[7];
  v19 = *(unsigned __int8 *)(a1 + v18);
  v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2)
      goto LABEL_32;
  }
  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_32;
  }
  v21 = v11[8];
  v22 = *(unsigned __int8 *)(a1 + v21);
  v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 != 2)
      goto LABEL_32;
  }
  else if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
  {
    goto LABEL_32;
  }
  v24 = v11[9];
  v25 = *(unsigned __int8 *)(a1 + v24);
  v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2)
      goto LABEL_32;
  }
  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_32;
  }
  v27 = v11[10];
  v28 = *(unsigned __int8 *)(a1 + v27);
  v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 2)
  {
    if (v29 == 2)
      goto LABEL_31;
LABEL_32:
    v31 = 0;
    return v31 & 1;
  }
  if (v29 == 2 || ((((v29 & 1) == 0) ^ v28) & 1) == 0)
    goto LABEL_32;
LABEL_31:
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v30(v10, a1, v4);
  v30(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v31 = dispatch thunk of static Equatable.== infix(_:_:)();
  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v8, v4);
  v32(v10, v4);
  return v31 & 1;
}

uint64_t specialized static Proto_Gpsd_InjectRtiFile.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  char v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[12];
  int v23;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v22[-v9];
  v11 = *(int *)(type metadata accessor for Proto_Gpsd_InjectRtiFile(0) + 20);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15)
      goto LABEL_7;
    goto LABEL_5;
  }
  if (v16 >> 60 == 15)
  {
LABEL_5:
    outlined copy of Data?(v12, v13);
    outlined copy of Data?(v15, v16);
    outlined consume of Data?(v12, v13);
    outlined consume of Data?(v15, v16);
LABEL_8:
    v19 = 0;
    return v19 & 1;
  }
  outlined copy of Data?(v12, v13);
  outlined copy of Data?(v15, v16);
  specialized static Data.== infix(_:_:)(v12, v13);
  v23 = v17;
  outlined consume of Data?(v15, v16);
  outlined consume of Data?(v12, v13);
  if ((v23 & 1) == 0)
    goto LABEL_8;
LABEL_7:
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  v20 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v20(v10, v4);
  return v19 & 1;
}

uint64_t specialized static Proto_Gpsd_StartContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *started;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  started = (int *)type metadata accessor for Proto_Gpsd_StartContext(0);
  v12 = started[5];
  v13 = *(unsigned __int8 *)(a1 + v12);
  v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_17;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_17;
  }
  v15 = started[6];
  v16 = *(unsigned __int8 *)(a1 + v15);
  v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
      goto LABEL_17;
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_17;
  }
  v18 = started[7];
  v19 = *(unsigned __int8 *)(a1 + v18);
  v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 == 2)
      goto LABEL_16;
LABEL_17:
    v22 = 0;
    return v22 & 1;
  }
  if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
    goto LABEL_17;
LABEL_16:
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v21(v10, a1, v4);
  v21(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)();
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v8, v4);
  v23(v10, v4);
  return v22 & 1;
}

uint64_t specialized static Proto_Gpsd_TerminationImminent.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  v13 = *(int *)(a3(0) + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  if (!v15)
  {
    if (!v17)
    {
LABEL_11:
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v20(v12, a1, v6);
      v20(v10, a2, v6);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v10, v6);
      v21(v12, v6);
      return v19 & 1;
    }
LABEL_10:
    v19 = 0;
    return v19 & 1;
  }
  if (!v17)
    goto LABEL_10;
  if (*v14 == *v16 && v15 == v17)
    goto LABEL_11;
  v19 = 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    goto LABEL_11;
  return v19 & 1;
}

uint64_t specialized static Proto_Gpsd_Exception.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  char v27;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_Exception(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_15;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_15;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) == 0)
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    v22 = v11[7];
    v23 = (_DWORD *)(a1 + v22);
    v24 = *(_BYTE *)(a1 + v22 + 4);
    v25 = (_DWORD *)(a2 + v22);
    v26 = *(unsigned __int8 *)(a2 + v22 + 4);
    if ((v24 & 1) != 0)
    {
      if (!v26)
        goto LABEL_15;
    }
    else
    {
      if (*v23 != *v25)
        LOBYTE(v26) = 1;
      if ((v26 & 1) != 0)
        goto LABEL_15;
    }
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v10, a1, v4);
    v29(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v8, v4);
    v30(v10, v4);
    return v27 & 1;
  }
  if (v21)
    goto LABEL_13;
LABEL_15:
  v27 = 0;
  return v27 & 1;
}

uint64_t specialized static Proto_Gpsd_Response.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _QWORD *v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  char v24;
  void (*v25)(_BYTE *, uint64_t);
  _BYTE v27[16];

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v27[-v9];
  v11 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  v12 = v11[5];
  v13 = *(char *)(a1 + v12);
  v14 = *(char *)(a2 + v12);
  if (v13 == 61)
  {
    if ((_DWORD)v14 != 61)
      goto LABEL_18;
  }
  else if ((_DWORD)v14 == 61 || qword_235BE1AE8[v13] != qword_235BE1AE8[v14])
  {
    goto LABEL_18;
  }
  v15 = v11[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = *(_BYTE *)(a1 + v15 + 8);
  v18 = (_QWORD *)(a2 + v15);
  v19 = *(unsigned __int8 *)(a2 + v15 + 8);
  if ((v17 & 1) != 0)
  {
    if (!v19)
      goto LABEL_18;
  }
  else
  {
    if (*v16 != *v18)
      LOBYTE(v19) = 1;
    if ((v19 & 1) != 0)
      goto LABEL_18;
  }
  v20 = v11[7];
  v21 = *(unsigned __int8 *)(a1 + v20);
  v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 10)
  {
    if (v22 == 10)
      goto LABEL_17;
LABEL_18:
    v24 = 0;
    return v24 & 1;
  }
  v27[15] = v21;
  if (v22 == 10)
    goto LABEL_18;
  v27[14] = v22;
  lazy protocol witness table accessor for type Proto_Gnss_Result and conformance Proto_Gnss_Result();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    goto LABEL_18;
LABEL_17:
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v23(v10, a1, v4);
  v23(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v24 = dispatch thunk of static Equatable.== infix(_:_:)();
  v25 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v25(v8, v4);
  v25(v10, v4);
  return v24 & 1;
}

uint64_t specialized static Proto_Gpsd_LogEntry.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  char v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v111 = type metadata accessor for UnknownStorage();
  v97 = *(_QWORD *)(v111 - 8);
  v4 = MEMORY[0x24BDAC7A8](v111);
  v96 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v95 = (char *)&v93 - v6;
  v7 = type metadata accessor for Proto_Gpsd_Indication(0);
  v100 = *(_QWORD *)(v7 - 8);
  v101 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v94 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_Indication?, Proto_Gpsd_Indication?));
  MEMORY[0x24BDAC7A8](v99);
  v102 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v110 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v108 = (char *)&v93 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v109 = (char *)&v93 - v15;
  v16 = type metadata accessor for Proto_Gpsd_Response(0);
  v105 = *(_QWORD *)(v16 - 8);
  v106 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v98 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_Response?, Proto_Gpsd_Response?));
  MEMORY[0x24BDAC7A8](v104);
  v107 = (uint64_t)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v103 = (uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v112 = (uint64_t)&v93 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v113 = (uint64_t)&v93 - v24;
  v25 = type metadata accessor for Proto_Gpsd_Request(0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gpsd_Request?, Proto_Gpsd_Request?));
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v93 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v93 - v39;
  v41 = type metadata accessor for Proto_Gpsd_LogEntry(0);
  v42 = v41;
  v43 = *(int *)(v41 + 20);
  v114 = a1;
  v115 = a2;
  v44 = (_QWORD *)(a1 + v43);
  v45 = *(_BYTE *)(a1 + v43 + 8);
  v46 = (_QWORD *)(a2 + v43);
  v47 = *(unsigned __int8 *)(a2 + v43 + 8);
  if ((v45 & 1) != 0)
  {
    if (!v47)
      goto LABEL_29;
  }
  else
  {
    if (*v44 != *v46)
      LOBYTE(v47) = 1;
    if ((v47 & 1) != 0)
      goto LABEL_29;
  }
  v48 = *(int *)(v41 + 24);
  v49 = v114;
  v50 = (_QWORD *)(v114 + v48);
  v51 = *(_QWORD *)(v114 + v48 + 8);
  v52 = (_QWORD *)(v115 + v48);
  v53 = v52[1];
  if (!v51)
  {
    if (v53)
      goto LABEL_29;
    goto LABEL_14;
  }
  if (!v53)
    goto LABEL_29;
  if (*v50 == *v52 && v51 == v53
    || (v54 = v41, v55 = _stringCompareWithSmolCheck(_:_:expecting:)(), v42 = v54, v56 = 0, (v55 & 1) != 0))
  {
LABEL_14:
    v57 = v49 + *(int *)(v42 + 28);
    v58 = v42;
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v57, (uint64_t)v40, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
    v93 = v58;
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v115 + *(int *)(v58 + 28), (uint64_t)v38, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
    v59 = (uint64_t)&v31[*(int *)(v29 + 48)];
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v40, (uint64_t)v31, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v38, v59, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
    v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v60((uint64_t)v31, 1, v25) == 1)
    {
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v38, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v40, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
      if (v60(v59, 1, v25) == 1)
      {
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v31, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
        goto LABEL_22;
      }
    }
    else
    {
      outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v31, (uint64_t)v35, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
      if (v60(v59, 1, v25) != 1)
      {
        outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v59, (uint64_t)v28, type metadata accessor for Proto_Gpsd_Request);
        v63 = specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)((uint64_t)v35, (uint64_t)v28, type metadata accessor for Proto_Gpsd_Request, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gpsd_Request.== infix(_:_:));
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v28, type metadata accessor for Proto_Gpsd_Request);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v38, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v40, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v35, type metadata accessor for Proto_Gpsd_Request);
        outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v31, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
        if ((v63 & 1) == 0)
          goto LABEL_29;
LABEL_22:
        v64 = v93;
        v66 = v113;
        v65 = v114;
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v114 + *(int *)(v93 + 32), v113, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
        v67 = v112;
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v115 + *(int *)(v64 + 32), v112, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
        v68 = v107;
        v69 = v107 + *(int *)(v104 + 48);
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v66, v107, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
        outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v67, v69, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
        v70 = v106;
        v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
        if (v71(v68, 1, v106) == 1)
        {
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v67, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v66, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
          v72 = v71(v69, 1, v70);
          v74 = (uint64_t)v110;
          v73 = v111;
          v76 = (uint64_t)v108;
          v75 = (uint64_t)v109;
          if (v72 == 1)
          {
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v68, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
LABEL_32:
            v82 = v93;
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v65 + *(int *)(v93 + 36), v75, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v115 + *(int *)(v82 + 36), v76, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            v31 = v102;
            v83 = (uint64_t)&v102[*(int *)(v99 + 48)];
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v75, (uint64_t)v102, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v76, v83, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            v84 = v101;
            v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
            if (v85((uint64_t)v31, 1, v101) == 1)
            {
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v76, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v75, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
              if (v85(v83, 1, v84) == 1)
              {
                outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v31, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
LABEL_39:
                v88 = v97;
                v89 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
                v90 = v95;
                v89(v95, v114, v73);
                v91 = v96;
                v89(v96, v115, v73);
                lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                v56 = dispatch thunk of static Equatable.== infix(_:_:)();
                v92 = *(void (**)(char *, uint64_t))(v88 + 8);
                v92(v91, v73);
                v92(v90, v73);
                return v56 & 1;
              }
              goto LABEL_37;
            }
            outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v31, v74, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            if (v85(v83, 1, v84) == 1)
            {
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v76, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v75, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
              outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v74, type metadata accessor for Proto_Gpsd_Indication);
LABEL_37:
              v61 = &demangling cache variable for type metadata for (Proto_Gpsd_Indication?, Proto_Gpsd_Indication?);
              goto LABEL_20;
            }
            v86 = v94;
            outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v83, v94, type metadata accessor for Proto_Gpsd_Indication);
            v87 = specialized static CLP_LogEntry_PrivateData_MeasurementReportCallbackContents.== infix(_:_:)(v74, v86, type metadata accessor for Proto_Gpsd_Indication, (uint64_t (*)(uint64_t, uint64_t))closure #1 in static Proto_Gpsd_Indication.== infix(_:_:));
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v86, type metadata accessor for Proto_Gpsd_Indication);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v76, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v75, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v74, type metadata accessor for Proto_Gpsd_Indication);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v31, &demangling cache variable for type metadata for Proto_Gpsd_Indication?);
            if ((v87 & 1) != 0)
              goto LABEL_39;
LABEL_29:
            v56 = 0;
            return v56 & 1;
          }
        }
        else
        {
          v77 = v103;
          outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v68, v103, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
          v78 = v71(v69, 1, v70);
          v74 = (uint64_t)v110;
          v73 = v111;
          v76 = (uint64_t)v108;
          v75 = (uint64_t)v109;
          if (v78 != 1)
          {
            v80 = v98;
            outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v69, v98, type metadata accessor for Proto_Gpsd_Response);
            v81 = specialized static Proto_Gpsd_Response.== infix(_:_:)(v77, v80);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v80, type metadata accessor for Proto_Gpsd_Response);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v112, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v113, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v77, type metadata accessor for Proto_Gpsd_Response);
            outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v68, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
            if ((v81 & 1) == 0)
              goto LABEL_29;
            goto LABEL_32;
          }
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v112, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v113, &demangling cache variable for type metadata for Proto_Gpsd_Response?);
          outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v77, type metadata accessor for Proto_Gpsd_Response);
        }
        v61 = &demangling cache variable for type metadata for (Proto_Gpsd_Response?, Proto_Gpsd_Response?);
        v62 = v68;
        goto LABEL_28;
      }
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v38, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v40, &demangling cache variable for type metadata for Proto_Gpsd_Request?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v35, type metadata accessor for Proto_Gpsd_Request);
    }
    v61 = &demangling cache variable for type metadata for (Proto_Gpsd_Request?, Proto_Gpsd_Request?);
LABEL_20:
    v62 = (uint64_t)v31;
LABEL_28:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v62, v61);
    goto LABEL_29;
  }
  return v56 & 1;
}

uint64_t specialized static Proto_Gpsd_InjectAssistancePosition.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;

  v4 = type metadata accessor for UnknownStorage();
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v55 - v7;
  v8 = type metadata accessor for Proto_Gnss_Position(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Proto_Gnss_Position?, Proto_Gnss_Position?));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v55 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v55 - v21;
  v23 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0);
  v24 = *(int *)(v23 + 20);
  v60 = a1;
  v25 = a1 + v24;
  v26 = (int *)v23;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(v25, (uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v27 = v26[5];
  v61 = a2;
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?(a2 + v27, (uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, (uint64_t)v13, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, v28, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    outlined init with copy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, (uint64_t)v17, &demangling cache variable for type metadata for Proto_Gnss_Position?);
    if (v29(v28, 1, v8) != 1)
    {
      v32 = v28;
      v33 = v59;
      outlined init with take of CLP_LogEntry_AONLoc_Request.ResultOptions(v32, v59, type metadata accessor for Proto_Gnss_Position);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gnss_Position and conformance Proto_Gnss_Position, type metadata accessor for Proto_Gnss_Position, (uint64_t)&protocol conformance descriptor for Proto_Gnss_Position);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions(v33, type metadata accessor for Proto_Gnss_Position);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Position?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Position?);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v17, type metadata accessor for Proto_Gnss_Position);
      outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for Proto_Gnss_Position?);
      if ((v34 & 1) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Position?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Position?);
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v17, type metadata accessor for Proto_Gnss_Position);
LABEL_6:
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for (Proto_Gnss_Position?, Proto_Gnss_Position?));
    goto LABEL_7;
  }
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v20, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v22, &demangling cache variable for type metadata for Proto_Gnss_Position?);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions?((uint64_t)v13, &demangling cache variable for type metadata for Proto_Gnss_Position?);
LABEL_10:
  v35 = v26[6];
  v36 = v60;
  v37 = v61;
  v38 = *(unsigned __int8 *)(v60 + v35);
  v39 = *(unsigned __int8 *)(v61 + v35);
  if (v38 == 4)
  {
    if (v39 != 4)
      goto LABEL_7;
  }
  else
  {
    v63 = v38;
    if (v39 == 4)
      goto LABEL_7;
    v62 = v39;
    lazy protocol witness table accessor for type Proto_Gnss_PositionAssistType and conformance Proto_Gnss_PositionAssistType();
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      goto LABEL_7;
  }
  v40 = v26[7];
  v41 = *(unsigned __int8 *)(v36 + v40);
  v42 = *(unsigned __int8 *)(v37 + v40);
  if (v41 == 2)
  {
    if (v42 != 2)
      goto LABEL_7;
  }
  else if (v42 == 2 || ((((v42 & 1) == 0) ^ v41) & 1) == 0)
  {
    goto LABEL_7;
  }
  v43 = v26[8];
  v44 = (_QWORD *)(v36 + v43);
  v45 = *(_BYTE *)(v36 + v43 + 8);
  v46 = (_QWORD *)(v37 + v43);
  v47 = *(unsigned __int8 *)(v37 + v43 + 8);
  if ((v45 & 1) != 0)
  {
    if (v47)
    {
LABEL_26:
      v48 = v57;
      v49 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
      v50 = v55;
      v51 = v36;
      v52 = v58;
      v49(v55, v51, v58);
      v53 = v56;
      v49(v56, v37, v52);
      lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      v54 = *(void (**)(char *, uint64_t))(v48 + 8);
      v54(v53, v52);
      v54(v50, v52);
      return v30 & 1;
    }
  }
  else
  {
    if (*v44 != *v46)
      LOBYTE(v47) = 1;
    if ((v47 & 1) == 0)
      goto LABEL_26;
  }
LABEL_7:
  v30 = 0;
  return v30 & 1;
}

uint64_t specialized static Proto_Gpsd_LtlInfo.LtlLutParams.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0);
  v12 = v11;
  v13 = *(int *)(v11 + 28);
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_16;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_16;
  }
  v18 = *(int *)(v11 + 32);
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
    {
LABEL_16:
      v25 = 0;
      return v25 & 1;
    }
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_16;
  }
  if (!specialized static Array<A>.== infix(_:_:)(*a1, *a2)
    || !specialized static Array<A>.== infix(_:_:)(a1[1], a2[1]))
  {
    goto LABEL_16;
  }
  v23 = (char *)a1 + *(int *)(v12 + 24);
  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v24(v10, v23, v4);
  v24(v8, (char *)a2 + *(int *)(v12 + 24), v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v8, v4);
  v26(v10, v4);
  return v25 & 1;
}

uint64_t specialized static Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  _DWORD *v19;
  char v20;
  _DWORD *v21;
  int v22;
  char v23;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  if (!specialized static Array<A>.== infix(_:_:)(*a1, *a2))
    goto LABEL_10;
  v11 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0);
  v12 = v11;
  v13 = v11[6];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = *((_BYTE *)a1 + v13 + 4);
  v16 = (_DWORD *)((char *)a2 + v13);
  v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_10;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_10;
  }
  v18 = v11[7];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = *((_BYTE *)a1 + v18 + 4);
  v21 = (_DWORD *)((char *)a2 + v18);
  v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) == 0)
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_10;
LABEL_15:
    v25 = (char *)a1 + v11[5];
    v26 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v26(v10, v25, v4);
    v26(v8, (char *)a2 + v12[5], v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v23 = dispatch thunk of static Equatable.== infix(_:_:)();
    v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v8, v4);
    v27(v10, v4);
    return v23 & 1;
  }
  if (v22)
    goto LABEL_15;
LABEL_10:
  v23 = 0;
  return v23 & 1;
}

uint64_t specialized static Proto_Gpsd_LtlInfo.LtlInitialParams.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _DWORD *v13;
  char v14;
  _DWORD *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  char v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  char v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  _DWORD *v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  char v39;
  _DWORD *v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  int v49;
  uint64_t v50;
  _DWORD *v51;
  char v52;
  _DWORD *v53;
  int v54;
  uint64_t v55;
  _DWORD *v56;
  char v57;
  _DWORD *v58;
  int v59;
  uint64_t v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  int v64;
  char v65;
  void (*v67)(char *, uint64_t, uint64_t);
  void (*v68)(char *, uint64_t);
  uint64_t v69;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v69 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0);
  v12 = v11[5];
  v13 = (_DWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (_DWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_62;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_62;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_62;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_62;
  }
  v22 = v11[7];
  v23 = (_DWORD *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (_DWORD *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_62;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_62;
  }
  v27 = v11[8];
  v28 = (_DWORD *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (_DWORD *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_62;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_62;
  }
  v32 = v11[9];
  v33 = (_DWORD *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (_DWORD *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36)
      goto LABEL_62;
  }
  else
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_62;
  }
  v37 = v11[10];
  v38 = (_DWORD *)(a1 + v37);
  v39 = *(_BYTE *)(a1 + v37 + 4);
  v40 = (_DWORD *)(a2 + v37);
  v41 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      goto LABEL_62;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      goto LABEL_62;
  }
  v42 = v11[11];
  v43 = *(unsigned __int8 *)(a1 + v42);
  v44 = *(unsigned __int8 *)(a2 + v42);
  if (v43 == 2)
  {
    if (v44 != 2)
      goto LABEL_62;
  }
  else if (v44 == 2 || ((((v44 & 1) == 0) ^ v43) & 1) == 0)
  {
    goto LABEL_62;
  }
  v45 = v11[12];
  v46 = (_DWORD *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 4);
  v48 = (_DWORD *)(a2 + v45);
  v49 = *(unsigned __int8 *)(a2 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v49)
      goto LABEL_62;
  }
  else
  {
    if (*v46 != *v48)
      LOBYTE(v49) = 1;
    if ((v49 & 1) != 0)
      goto LABEL_62;
  }
  v50 = v11[13];
  v51 = (_DWORD *)(a1 + v50);
  v52 = *(_BYTE *)(a1 + v50 + 4);
  v53 = (_DWORD *)(a2 + v50);
  v54 = *(unsigned __int8 *)(a2 + v50 + 4);
  if ((v52 & 1) != 0)
  {
    if (!v54)
      goto LABEL_62;
  }
  else
  {
    if (*v51 != *v53)
      LOBYTE(v54) = 1;
    if ((v54 & 1) != 0)
      goto LABEL_62;
  }
  v55 = v11[14];
  v56 = (_DWORD *)(a1 + v55);
  v57 = *(_BYTE *)(a1 + v55 + 4);
  v58 = (_DWORD *)(a2 + v55);
  v59 = *(unsigned __int8 *)(a2 + v55 + 4);
  if ((v57 & 1) == 0)
  {
    if (*v56 != *v58)
      LOBYTE(v59) = 1;
    if ((v59 & 1) != 0)
      goto LABEL_62;
LABEL_60:
    v60 = v11[15];
    v61 = (_DWORD *)(a1 + v60);
    v62 = *(_BYTE *)(a1 + v60 + 4);
    v63 = (_DWORD *)(a2 + v60);
    v64 = *(unsigned __int8 *)(a2 + v60 + 4);
    if ((v62 & 1) != 0)
    {
      if (!v64)
        goto LABEL_62;
    }
    else
    {
      if (*v61 != *v63)
        LOBYTE(v64) = 1;
      if ((v64 & 1) != 0)
        goto LABEL_62;
    }
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v67(v10, a1, v4);
    v67(v8, a2, v4);
    lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v65 = dispatch thunk of static Equatable.== infix(_:_:)();
    v68 = *(void (**)(char *, uint64_t))(v5 + 8);
    v68(v8, v4);
    v68(v10, v4);
    return v65 & 1;
  }
  if (v59)
    goto LABEL_60;
LABEL_62:
  v65 = 0;
  return v65 & 1;
}

uint64_t specialized static Proto_Gpsd_Status.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - v9;
  v11 = (int *)type metadata accessor for Proto_Gpsd_Status(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_29;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_29;
  }
  v17 = v11[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_29;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_29;
  }
  v22 = v11[7];
  v23 = *(unsigned __int8 *)(a1 + v22);
  v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 2)
  {
    if (v24 != 2)
      goto LABEL_29;
  }
  else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
  {
    goto LABEL_29;
  }
  v25 = v11[8];
  v26 = *(unsigned __int8 *)(a1 + v25);
  v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 2)
  {
    if (v27 != 2)
      goto LABEL_29;
  }
  else if (v27 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0)
  {
    goto LABEL_29;
  }
  v28 = v11[9];
  v29 = *(unsigned __int8 *)(a1 + v28);
  v30 = *(unsigned __int8 *)(a2 + v28);
  if (v29 == 2)
  {
    if (v30 == 2)
      goto LABEL_28;
LABEL_29:
    v32 = 0;
    return v32 & 1;
  }
  if (v30 == 2 || ((((v30 & 1) == 0) ^ v29) & 1) == 0)
    goto LABEL_29;
LABEL_28:
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v31(v10, a1, v4);
  v31(v8, a2, v4);
  lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = dispatch thunk of static Equatable.== infix(_:_:)();
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v8, v4);
  v33(v10, v4);
  return v32 & 1;
}

unint64_t lazy protocol witness table accessor for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_SuplInitDecodeResult, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_SuplInitDecodeResult, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_SuplInitDecodeResult, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_SuplInitDecodeResult, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_SuplInitDecodeResult and conformance Proto_Gpsd_SuplInitDecodeResult);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gpsd_SuplInitDecodeResult()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gpsd_SuplInitDecodeResult] and conformance [A], &demangling cache variable for type metadata for [Proto_Gpsd_SuplInitDecodeResult]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CompressionType, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CompressionType, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CompressionType, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CompressionType, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CompressionType and conformance Proto_Gpsd_CompressionType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gpsd_CompressionType()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gpsd_CompressionType] and conformance [A], &demangling cache variable for type metadata for [Proto_Gpsd_CompressionType]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_LtlInfoType, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_LtlInfoType, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_LtlInfoType, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_LtlInfoType, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoType and conformance Proto_Gpsd_LtlInfoType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gpsd_LtlInfoType()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gpsd_LtlInfoType] and conformance [A], &demangling cache variable for type metadata for [Proto_Gpsd_LtlInfoType]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CntinStatus, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CntinStatus, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CntinStatus, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_CntinStatus, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatus and conformance Proto_Gpsd_CntinStatus);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gpsd_CntinStatus()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gpsd_CntinStatus] and conformance [A], &demangling cache variable for type metadata for [Proto_Gpsd_CntinStatus]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Request.TypeEnum, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Request.TypeEnum, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Request.TypeEnum, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Request.TypeEnum, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Request.TypeEnum and conformance Proto_Gpsd_Request.TypeEnum);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gpsd_Request.TypeEnum()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gpsd_Request.TypeEnum] and conformance [A], &demangling cache variable for type metadata for [Proto_Gpsd_Request.TypeEnum]);
}

unint64_t lazy protocol witness table accessor for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Indication.TypeEnum, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Indication.TypeEnum, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Indication.TypeEnum, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum;
  if (!lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum)
  {
    result = MEMORY[0x23B7DBD20](&protocol conformance descriptor for Proto_Gpsd_Indication.TypeEnum, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Proto_Gpsd_Indication.TypeEnum and conformance Proto_Gpsd_Indication.TypeEnum);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Proto_Gpsd_Indication.TypeEnum()
{
  return lazy protocol witness table accessor for type [CLP_LogEntry_AONLoc_Request.TypeEnum] and conformance [A](&lazy protocol witness table cache variable for type [Proto_Gpsd_Indication.TypeEnum] and conformance [A], &demangling cache variable for type metadata for [Proto_Gpsd_Indication.TypeEnum]);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_Request()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_Request()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_Request()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_Request()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Request and conformance Proto_Gpsd_Request, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Request);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_Response()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_Response()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_Response()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_Response()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Response and conformance Proto_Gpsd_Response, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Response);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_Indication()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_Indication()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_Indication()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_Indication()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Indication and conformance Proto_Gpsd_Indication, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Indication);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_Status()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_Status()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_Status()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_Status()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Status and conformance Proto_Gpsd_Status, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Status);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetPvtmReport()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetPvtmReport()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetPvtmReport()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetPvtmReport()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetPvtmReport and conformance Proto_Gpsd_SetPvtmReport, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetPvtmReport);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_InjectAssistanceFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_InjectAssistanceFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_InjectAssistanceFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_InjectAssistanceFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceFile and conformance Proto_Gpsd_InjectAssistanceFile, type metadata accessor for Proto_Gpsd_InjectAssistanceFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_InjectRtiFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_InjectRtiFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_InjectRtiFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_InjectRtiFile()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectRtiFile and conformance Proto_Gpsd_InjectRtiFile, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectRtiFile);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_InjectSvidBlocklist()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_InjectSvidBlocklist()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_InjectSvidBlocklist()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_InjectSvidBlocklist()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectSvidBlocklist and conformance Proto_Gpsd_InjectSvidBlocklist, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_InjectAssistancePosition()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_InjectAssistancePosition()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_InjectAssistancePosition()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_InjectAssistancePosition()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistancePosition and conformance Proto_Gpsd_InjectAssistancePosition, type metadata accessor for Proto_Gpsd_InjectAssistancePosition, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_InjectAssistanceTime()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_InjectAssistanceTime()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_InjectAssistanceTime()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_InjectAssistanceTime()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_InjectAssistanceTime and conformance Proto_Gpsd_InjectAssistanceTime, type metadata accessor for Proto_Gpsd_InjectAssistanceTime, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_DeleteGnssData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_DeleteGnssData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_DeleteGnssData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_DeleteGnssData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_DeleteGnssData and conformance Proto_Gpsd_DeleteGnssData, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_DeleteGnssData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetNmeaHandler()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetNmeaHandler()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetNmeaHandler()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetNmeaHandler()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetNmeaHandler and conformance Proto_Gpsd_SetNmeaHandler, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistancePressure()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistancePressure()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistancePressure()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistancePressure()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistancePressure and conformance Proto_Gpsd_SetAssistancePressure, type metadata accessor for Proto_Gpsd_SetAssistancePressure, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceAccel()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceAccel()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceAccel()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceAccel()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAccel and conformance Proto_Gpsd_SetAssistanceAccel, type metadata accessor for Proto_Gpsd_SetAssistanceAccel, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceGyro()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceGyro()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceGyro()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceGyro()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceGyro and conformance Proto_Gpsd_SetAssistanceGyro, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceDem()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceDem()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceDem()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceDem()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceDem and conformance Proto_Gpsd_SetAssistanceDem, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceMapVector()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceMapVector()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceMapVector()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceMapVector()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMapVector and conformance Proto_Gpsd_SetAssistanceMapVector, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMotionActivityContext and conformance Proto_Gpsd_SetAssistanceMotionActivityContext, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceMountState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceMountState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceMountState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceMountState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceMountState and conformance Proto_Gpsd_SetAssistanceMountState, type metadata accessor for Proto_Gpsd_SetAssistanceMountState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSignalEnvironment and conformance Proto_Gpsd_SetAssistanceSignalEnvironment, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceSpeedConstraint and conformance Proto_Gpsd_SetAssistanceSpeedConstraint, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetAssistanceAlongTrackVelocity and conformance Proto_Gpsd_SetAssistanceAlongTrackVelocity, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetThermalRiskState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetThermalRiskState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetThermalRiskState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetThermalRiskState()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetThermalRiskState and conformance Proto_Gpsd_SetThermalRiskState, type metadata accessor for Proto_Gpsd_SetThermalRiskState, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetConfigSimulatorMode()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetConfigSimulatorMode()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetConfigSimulatorMode()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetConfigSimulatorMode()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigSimulatorMode and conformance Proto_Gpsd_SetConfigSimulatorMode, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigEnableGnssConstellations and conformance Proto_Gpsd_SetConfigEnableGnssConstellations, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetConfigRfBandEnable()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetConfigRfBandEnable()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetConfigRfBandEnable()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetConfigRfBandEnable()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigRfBandEnable and conformance Proto_Gpsd_SetConfigRfBandEnable, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_SetConfigDutyCycling()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_SetConfigDutyCycling()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_SetConfigDutyCycling()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_SetConfigDutyCycling()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_SetConfigDutyCycling and conformance Proto_Gpsd_SetConfigDutyCycling, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_TerminationImminent()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_TerminationImminent()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_TerminationImminent()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_TerminationImminent()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_TerminationImminent and conformance Proto_Gpsd_TerminationImminent, type metadata accessor for Proto_Gpsd_TerminationImminent, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_TerminationImminent);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_ExitMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_ExitMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_ExitMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_ExitMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_ExitMessage and conformance Proto_Gpsd_ExitMessage, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_ExitMessage);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_RecoveryStatistics()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_RecoveryStatistics()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_RecoveryStatistics()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_RecoveryStatistics()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics and conformance Proto_Gpsd_RecoveryStatistics, type metadata accessor for Proto_Gpsd_RecoveryStatistics, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryStatus and conformance Proto_Gpsd_RecoveryStatistics.RecoveryStatus, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_RecoveryStatistics.RecoveryPoint and conformance Proto_Gpsd_RecoveryStatistics.RecoveryPoint, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LtlInfoRequest()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LtlInfoRequest()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LtlInfoRequest()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LtlInfoRequest()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfoRequest and conformance Proto_Gpsd_LtlInfoRequest, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LtlInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LtlInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LtlInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LtlInfo()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo and conformance Proto_Gpsd_LtlInfo, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlLutParams and conformance Proto_Gpsd_LtlInfo.LtlLutParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData and conformance Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData and conformance Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LtlInfo.LtlInitialParams and conformance Proto_Gpsd_LtlInfo.LtlInitialParams, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_CntinStatusMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_CntinStatusMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_CntinStatusMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_CntinStatusMessage()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinStatusMessage and conformance Proto_Gpsd_CntinStatusMessage, type metadata accessor for Proto_Gpsd_CntinStatusMessage, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_CntinClockControl()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_CntinClockControl()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_CntinClockControl()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_CntinClockControl()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_CntinClockControl and conformance Proto_Gpsd_CntinClockControl, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_CntinClockControl);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_Exception()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_Exception()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_Exception()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_Exception()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_Exception and conformance Proto_Gpsd_Exception, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_Exception);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_AskBasebandReset()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_AskBasebandReset()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_AskBasebandReset()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_AskBasebandReset()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_AskBasebandReset and conformance Proto_Gpsd_AskBasebandReset, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_AskBasebandReset);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_LogEntry()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_LogEntry()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_LogEntry()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_LogEntry()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_LogEntry and conformance Proto_Gpsd_LogEntry, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_LogEntry);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in Proto_Gpsd_StartContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
}

uint64_t base witness table accessor for Message in Proto_Gpsd_StartContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
}

uint64_t base witness table accessor for Hashable in Proto_Gpsd_StartContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
}

uint64_t base witness table accessor for Equatable in Proto_Gpsd_StartContext()
{
  return lazy protocol witness table accessor for type CLP_LogEntry_AONLoc_Request and conformance CLP_LogEntry_AONLoc_Request(&lazy protocol witness table cache variable for type Proto_Gpsd_StartContext and conformance Proto_Gpsd_StartContext, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&protocol conformance descriptor for Proto_Gpsd_StartContext);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SuplInitDecodeResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_235BAA398 + 4 * byte_235BDCBA8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_235BAA3CC + 4 * byte_235BDCBA3[v4]))();
}

uint64_t sub_235BAA3CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA3D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235BAA3DCLL);
  return result;
}

uint64_t sub_235BAA3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235BAA3F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_235BAA3F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA3FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_SuplInitDecodeResult()
{
  return &type metadata for Proto_Gpsd_SuplInitDecodeResult;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_CompressionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235BAA464 + 4 * byte_235BDCBB2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235BAA498 + 4 * byte_235BDCBAD[v4]))();
}

uint64_t sub_235BAA498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA4A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235BAA4A8);
  return result;
}

uint64_t sub_235BAA4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235BAA4BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235BAA4C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA4C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_CompressionType()
{
  return &type metadata for Proto_Gpsd_CompressionType;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfoType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_235BAA530 + 4 * byte_235BDCBBC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_235BAA564 + 4 * byte_235BDCBB7[v4]))();
}

uint64_t sub_235BAA564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA56C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235BAA574);
  return result;
}

uint64_t sub_235BAA580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235BAA588);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_235BAA58C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_LtlInfoType()
{
  return &type metadata for Proto_Gpsd_LtlInfoType;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_CntinStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_235BAA5FC + 4 * byte_235BDCBC6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_235BAA630 + 4 * byte_235BDCBC1[v4]))();
}

uint64_t sub_235BAA630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235BAA640);
  return result;
}

uint64_t sub_235BAA64C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235BAA654);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_235BAA658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_CntinStatus()
{
  return &type metadata for Proto_Gpsd_CntinStatus;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Request()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Request()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Request.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC4)
    goto LABEL_17;
  if (a2 + 60 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 60) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 60;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 60;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 60;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3D;
  v8 = v6 - 61;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Request.TypeEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 60 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 60) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC3)
    return ((uint64_t (*)(void))((char *)&loc_235BAA778 + 4 * byte_235BDCBD0[v4]))();
  *a1 = a2 + 60;
  return ((uint64_t (*)(void))((char *)sub_235BAA7AC + 4 * byte_235BDCBCB[v4]))();
}

uint64_t sub_235BAA7AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA7B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235BAA7BCLL);
  return result;
}

uint64_t sub_235BAA7C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235BAA7D0);
  *(_BYTE *)result = a2 + 60;
  return result;
}

uint64_t sub_235BAA7D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA7DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_Request.TypeEnum()
{
  return &type metadata for Proto_Gpsd_Request.TypeEnum;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Response()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAA804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 0xAu)
    v9 = 10;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  v10 = v9 - 10;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 0xAu)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Response()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAA894(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 10;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_Response()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Indication()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Indication()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Indication.TypeEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_235BAA994 + 4 * byte_235BDCBDA[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_235BAA9C8 + 4 * byte_235BDCBD5[v4]))();
}

uint64_t sub_235BAA9C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA9D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235BAA9D8);
  return result;
}

uint64_t sub_235BAA9E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235BAA9ECLL);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_235BAA9F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235BAA9F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_Indication.TypeEnum()
{
  return &type metadata for Proto_Gpsd_Indication.TypeEnum;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_Status(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_Status(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_Status(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_Status(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_Status(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Status()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAAD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Status()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAAE2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_Status()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetPvtmReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetPvtmReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetPvtmReport()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_InjectAssistanceFile(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      outlined copy of Data._Representation(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_InjectAssistanceFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    outlined copy of Data._Representation(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_InjectAssistanceFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      v12 = *v9;
      outlined copy of Data._Representation(v12, v10);
      v13 = *v8;
      v14 = v8[1];
      *v8 = v12;
      v8[1] = v10;
      outlined consume of Data._Representation(v13, v14);
      goto LABEL_8;
    }
    outlined destroy of Data((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v11 = *v9;
  outlined copy of Data._Representation(v11, v10);
  *v8 = v11;
  v8[1] = v10;
LABEL_8:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_InjectAssistanceFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_InjectAssistanceFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      v12 = *v8;
      *v8 = *v9;
      v8[1] = v11;
      outlined consume of Data._Representation(v12, v10);
      goto LABEL_6;
    }
    outlined destroy of Data((uint64_t)v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
LABEL_6:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_InjectAssistanceFile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAB338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 3u)
    v9 = 3;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v10 = v9 - 3;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 3u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_InjectAssistanceFile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAB3C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_InjectAssistanceFile()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_GlonassSlotInfo();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_InjectRtiFile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAB464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_InjectRtiFile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAB4F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_InjectRtiFile()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_InjectSvidBlocklist()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_InjectSvidBlocklist()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *initializeBufferWithCopyOfBuffer for Proto_Gpsd_InjectAssistancePosition(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for Proto_Gnss_Position(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      v16 = v12[5];
      v17 = &v10[v16];
      v18 = &v11[v16];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      v19 = v12[6];
      v20 = &v10[v19];
      v21 = &v11[v19];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      v22 = v12[7];
      v23 = &v10[v22];
      v24 = &v11[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v12[8];
      v26 = &v10[v25];
      v27 = &v11[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      v28 = v12[9];
      v29 = &v10[v28];
      v30 = &v11[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v30[8];
      v31 = v12[10];
      v32 = &v10[v31];
      v33 = &v11[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v34 = v12[11];
      v35 = &v10[v34];
      v36 = &v11[v34];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      v35[8] = v36[8];
      v37 = v12[12];
      v38 = &v10[v37];
      v39 = &v11[v37];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v38[8] = v39[8];
      v40 = v12[13];
      v41 = &v10[v40];
      v42 = &v11[v40];
      *(_DWORD *)v41 = *(_DWORD *)v42;
      v41[4] = v42[4];
      v10[v12[14]] = v11[v12[14]];
      v43 = v12[15];
      v44 = &v10[v43];
      v45 = &v11[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v44[8] = v45[8];
      v10[v12[16]] = v11[v12[16]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    v46 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v46] = a2[v46];
    v47 = a3[8];
    v48 = &a1[v47];
    v49 = &a2[v47];
    *(_QWORD *)v48 = *(_QWORD *)v49;
    v48[8] = v49[8];
  }
  return a1;
}

uint64_t destroy for Proto_Gpsd_InjectAssistancePosition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Proto_Gnss_Position(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  return result;
}

uint64_t initializeWithCopy for Proto_Gpsd_InjectAssistancePosition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Position(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v11[7];
    v21 = &v9[v20];
    v22 = &v10[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v11[8];
    v24 = &v9[v23];
    v25 = &v10[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v11[9];
    v27 = &v9[v26];
    v28 = &v10[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v11[10];
    v30 = &v9[v29];
    v31 = &v10[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v11[11];
    v33 = &v9[v32];
    v34 = &v10[v32];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v35 = v11[12];
    v36 = &v9[v35];
    v37 = &v10[v35];
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    v38 = v11[13];
    v39 = &v9[v38];
    v40 = &v10[v38];
    *(_DWORD *)v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    v9[v11[14]] = v10[v11[14]];
    v41 = v11[15];
    v42 = &v9[v41];
    v43 = &v10[v41];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = v43[8];
    v9[v11[16]] = v10[v11[16]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v44 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  v45 = a3[8];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_InjectAssistancePosition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v87 = a3;
  v9 = a3[5];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = (int *)type metadata accessor for Proto_Gnss_Position(0);
  v86 = *((_QWORD *)v12 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v86 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v54 = v12[5];
      v55 = &v10[v54];
      v56 = &v11[v54];
      v57 = *(_QWORD *)v56;
      v55[8] = v56[8];
      *(_QWORD *)v55 = v57;
      v58 = v12[6];
      v59 = &v10[v58];
      v60 = &v11[v58];
      LOBYTE(v57) = v60[8];
      *(_QWORD *)v59 = *(_QWORD *)v60;
      v59[8] = v57;
      v61 = v12[7];
      v62 = &v10[v61];
      v63 = &v11[v61];
      LOBYTE(v57) = v63[8];
      *(_QWORD *)v62 = *(_QWORD *)v63;
      v62[8] = v57;
      v64 = v12[8];
      v65 = &v10[v64];
      v66 = &v11[v64];
      LOBYTE(v57) = v66[8];
      *(_QWORD *)v65 = *(_QWORD *)v66;
      v65[8] = v57;
      v67 = v12[9];
      v68 = &v10[v67];
      v69 = &v11[v67];
      LOBYTE(v57) = v69[8];
      *(_QWORD *)v68 = *(_QWORD *)v69;
      v68[8] = v57;
      v70 = v12[10];
      v71 = &v10[v70];
      v72 = &v11[v70];
      LOBYTE(v57) = v72[8];
      *(_QWORD *)v71 = *(_QWORD *)v72;
      v71[8] = v57;
      v73 = v12[11];
      v74 = &v10[v73];
      v75 = &v11[v73];
      LOBYTE(v57) = v75[8];
      *(_QWORD *)v74 = *(_QWORD *)v75;
      v74[8] = v57;
      v76 = v12[12];
      v77 = &v10[v76];
      v78 = &v11[v76];
      LOBYTE(v57) = v78[8];
      *(_QWORD *)v77 = *(_QWORD *)v78;
      v77[8] = v57;
      v79 = v12[13];
      v80 = &v10[v79];
      v81 = &v11[v79];
      LOBYTE(v57) = v81[4];
      *(_DWORD *)v80 = *(_DWORD *)v81;
      v80[4] = v57;
      v10[v12[14]] = v11[v12[14]];
      v82 = v12[15];
      v83 = &v10[v82];
      v84 = &v11[v82];
      v85 = *(_QWORD *)v84;
      v83[8] = v84[8];
      *(_QWORD *)v83 = v85;
      v10[v12[16]] = v11[v12[16]];
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, type metadata accessor for Proto_Gnss_Position);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v11, v6);
  v16 = v12[5];
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  v20 = v12[6];
  v21 = &v10[v20];
  v22 = &v11[v20];
  LOBYTE(v19) = v22[8];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v19;
  v23 = v12[7];
  v24 = &v10[v23];
  v25 = &v11[v23];
  LOBYTE(v19) = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v19;
  v26 = v12[8];
  v27 = &v10[v26];
  v28 = &v11[v26];
  LOBYTE(v19) = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v19;
  v29 = v12[9];
  v30 = &v10[v29];
  v31 = &v11[v29];
  LOBYTE(v19) = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v19;
  v32 = v12[10];
  v33 = &v10[v32];
  v34 = &v11[v32];
  LOBYTE(v19) = v34[8];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v19;
  v35 = v12[11];
  v36 = &v10[v35];
  v37 = &v11[v35];
  LOBYTE(v19) = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v19;
  v38 = v12[12];
  v39 = &v10[v38];
  v40 = &v11[v38];
  LOBYTE(v19) = v40[8];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v19;
  v41 = v12[13];
  v42 = &v10[v41];
  v43 = &v11[v41];
  LOBYTE(v19) = v43[4];
  *(_DWORD *)v42 = *(_DWORD *)v43;
  v42[4] = v19;
  v10[v12[14]] = v11[v12[14]];
  v44 = v12[15];
  v45 = &v10[v44];
  v46 = &v11[v44];
  v47 = *(_QWORD *)v46;
  v45[8] = v46[8];
  *(_QWORD *)v45 = v47;
  v10[v12[16]] = v11[v12[16]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v86 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_BYTE *)(a1 + v87[6]) = *(_BYTE *)(a2 + v87[6]);
  *(_BYTE *)(a1 + v87[7]) = *(_BYTE *)(a2 + v87[7]);
  v49 = v87[8];
  v50 = a1 + v49;
  v51 = (uint64_t *)(a2 + v49);
  v52 = *v51;
  *(_BYTE *)(v50 + 8) = *((_BYTE *)v51 + 8);
  *(_QWORD *)v50 = v52;
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_InjectAssistancePosition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Proto_Gnss_Position(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v14 = v11[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v11[7];
    v21 = &v9[v20];
    v22 = &v10[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v11[8];
    v24 = &v9[v23];
    v25 = &v10[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v11[9];
    v27 = &v9[v26];
    v28 = &v10[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v11[10];
    v30 = &v9[v29];
    v31 = &v10[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v11[11];
    v33 = &v9[v32];
    v34 = &v10[v32];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v35 = v11[12];
    v36 = &v9[v35];
    v37 = &v10[v35];
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    v38 = v11[13];
    v39 = &v9[v38];
    v40 = &v10[v38];
    *(_DWORD *)v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    v9[v11[14]] = v10[v11[14]];
    v41 = v11[15];
    v42 = &v9[v41];
    v43 = &v10[v41];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = v43[8];
    v9[v11[16]] = v10[v11[16]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  v44 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  v45 = a3[8];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_InjectAssistancePosition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  uint64_t (*v13)(_BYTE *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int *v83;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v83 = a3;
  v9 = a3[5];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = (int *)type metadata accessor for Proto_Gnss_Position(0);
  v82 = *((_QWORD *)v12 - 1);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v82 + 48);
  v14 = v13(v10, 1, v12);
  v15 = v13(v11, 1, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v52 = v12[5];
      v53 = &v10[v52];
      v54 = &v11[v52];
      *(_QWORD *)v53 = *(_QWORD *)v54;
      v53[8] = v54[8];
      v55 = v12[6];
      v56 = &v10[v55];
      v57 = &v11[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      v58 = v12[7];
      v59 = &v10[v58];
      v60 = &v11[v58];
      *(_QWORD *)v59 = *(_QWORD *)v60;
      v59[8] = v60[8];
      v61 = v12[8];
      v62 = &v10[v61];
      v63 = &v11[v61];
      *(_QWORD *)v62 = *(_QWORD *)v63;
      v62[8] = v63[8];
      v64 = v12[9];
      v65 = &v10[v64];
      v66 = &v11[v64];
      *(_QWORD *)v65 = *(_QWORD *)v66;
      v65[8] = v66[8];
      v67 = v12[10];
      v68 = &v10[v67];
      v69 = &v11[v67];
      *(_QWORD *)v68 = *(_QWORD *)v69;
      v68[8] = v69[8];
      v70 = v12[11];
      v71 = &v10[v70];
      v72 = &v11[v70];
      *(_QWORD *)v71 = *(_QWORD *)v72;
      v71[8] = v72[8];
      v73 = v12[12];
      v74 = &v10[v73];
      v75 = &v11[v73];
      *(_QWORD *)v74 = *(_QWORD *)v75;
      v74[8] = v75[8];
      v76 = v12[13];
      v77 = &v10[v76];
      v78 = &v11[v76];
      *(_DWORD *)v77 = *(_DWORD *)v78;
      v77[4] = v78[4];
      v10[v12[14]] = v11[v12[14]];
      v79 = v12[15];
      v80 = &v10[v79];
      v81 = &v11[v79];
      *(_QWORD *)v80 = *(_QWORD *)v81;
      v80[8] = v81[8];
      v10[v12[16]] = v11[v12[16]];
      goto LABEL_7;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v10, type metadata accessor for Proto_Gnss_Position);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v10, v11, v6);
  v16 = v12[5];
  v17 = &v10[v16];
  v18 = &v11[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = v12[6];
  v20 = &v10[v19];
  v21 = &v11[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = v12[7];
  v23 = &v10[v22];
  v24 = &v11[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = v12[8];
  v26 = &v10[v25];
  v27 = &v11[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = v12[9];
  v29 = &v10[v28];
  v30 = &v11[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = v12[10];
  v32 = &v10[v31];
  v33 = &v11[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  v34 = v12[11];
  v35 = &v10[v34];
  v36 = &v11[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  v37 = v12[12];
  v38 = &v10[v37];
  v39 = &v11[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v39[8];
  v40 = v12[13];
  v41 = &v10[v40];
  v42 = &v11[v40];
  *(_DWORD *)v41 = *(_DWORD *)v42;
  v41[4] = v42[4];
  v10[v12[14]] = v11[v12[14]];
  v43 = v12[15];
  v44 = &v10[v43];
  v45 = &v11[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = v45[8];
  v10[v12[16]] = v11[v12[16]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v82 + 56))(v10, 0, 1, v12);
LABEL_7:
  v47 = v83[7];
  *(_BYTE *)(a1 + v83[6]) = *(_BYTE *)(a2 + v83[6]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  v48 = v83[8];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_InjectAssistancePosition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAC534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;
  int v15;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 2)
    v15 = ((v14 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v15 = -2;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_InjectAssistancePosition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAC608(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gnss_Position?);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

void type metadata completion function for Proto_Gpsd_InjectAssistancePosition()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Position?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Position);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_InjectAssistanceTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_InjectAssistanceTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_InjectAssistanceTime()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_DeleteGnssData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_DeleteGnssData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_DeleteGnssData()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_DeleteGnssData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_DeleteGnssData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_DeleteGnssData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_DeleteGnssData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_DeleteGnssData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetNmeaHandler()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetNmeaHandler()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistancePressure()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistancePressure()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceAccel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceAccel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_InjectSvidBlocklist(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UnknownStorage();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

_QWORD *initializeWithCopy for Proto_Gpsd_InjectSvidBlocklist(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for Proto_Gpsd_InjectSvidBlocklist(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for Proto_Gpsd_InjectSvidBlocklist(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for Proto_Gpsd_InjectSvidBlocklist(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceGyro()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceGyro()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_InjectSvidBlocklist()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceDem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceDem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_SetAssistanceMapVector(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    v18 = a3[9];
    v19 = a3[10];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = (char *)a1 + v19;
    v23 = (char *)a2 + v19;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = a3[11];
    v25 = a3[12];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    v28 = (char *)a1 + v25;
    v29 = (char *)a2 + v25;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_SetAssistanceMapVector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a3[11];
  v24 = a3[12];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_SetAssistanceMapVector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v10;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  *(_BYTE *)(v18 + 8) = *((_BYTE *)v19 + 8);
  *(_QWORD *)v18 = v20;
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  LOBYTE(v20) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = v20;
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  LOBYTE(v20) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = v20;
  v27 = a3[12];
  v28 = a1 + v27;
  v29 = a2 + v27;
  LOBYTE(v20) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v20;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_SetAssistanceMapVector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a3[11];
  v24 = a3[12];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_SetAssistanceMapVector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  v23 = a3[11];
  v24 = a3[12];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceMapVector()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAD41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceMapVector()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAD4C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 2;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_SetAssistanceMapVector()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_SetAssistanceMotionActivityContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_SetAssistanceMotionActivityContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_SetAssistanceMotionActivityContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_SetAssistanceMotionActivityContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_SetAssistanceMotionActivityContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAD8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 5u)
    v9 = 5;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  v10 = v9 - 5;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 5u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAD940(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 5;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_SetAssistanceMotionActivityContext()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_MapMatcherData();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceMountState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAD9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 4u)
    v9 = 4;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v10 = v9 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 4u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceMountState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BADA78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 4;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_SetAssistanceMountState()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_GlonassSlotInfo();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BADB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 8u)
    v9 = 8;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  v10 = v9 - 8;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 8u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BADBA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 8;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_SetAssistanceSignalEnvironment()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetAssistanceSpeedConstraint()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_MapMatcherData();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetAssistanceAlongTrackVelocity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetThermalRiskState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetThermalRiskState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetThermalRiskState()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_GlonassSlotInfo();
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_SetConfigSimulatorMode(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_SetConfigSimulatorMode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_SetConfigSimulatorMode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_SetConfigSimulatorMode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_SetConfigSimulatorMode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetConfigSimulatorMode()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetConfigSimulatorMode()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetConfigSimulatorMode()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_GlonassSlotInfo();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetConfigEnableGnssConstellations()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_GlonassSlotInfo();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetConfigRfBandEnable()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetConfigRfBandEnable()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetConfigRfBandEnable()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_GlonassSlotInfo();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_SetConfigDutyCycling()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SetConfigDutyCycling()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_SetConfigDutyCycling()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_TerminationImminent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_TerminationImminent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_TerminationImminent()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_TerminationImminent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Proto_Gpsd_TerminationImminent(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Gpsd_TerminationImminent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_TerminationImminent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_TerminationImminent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_ExitMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_ExitMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_RecoveryStatistics(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
    v17 = *((_QWORD *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      v14[v16[5]] = v15[v16[5]];
      v19 = v16[6];
      v20 = &v14[v19];
      v21 = &v15[v19];
      v20[4] = v21[4];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v14[v16[7]] = v15[v16[7]];
      v14[v16[8]] = v15[v16[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for Proto_Gpsd_RecoveryStatistics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6, v5);
  return result;
}

_QWORD *initializeWithCopy for Proto_Gpsd_RecoveryStatistics(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v12[v14[5]] = v13[v14[5]];
    v17 = v14[6];
    v18 = &v12[v17];
    v19 = &v13[v17];
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v12[v14[7]] = v13[v14[7]];
    v12[v14[8]] = v13[v14[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithCopy for Proto_Gpsd_RecoveryStatistics(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, int *);
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v11(v13, v14, v9);
      v13[v15[5]] = v14[v15[5]];
      v25 = v15[6];
      v26 = &v13[v25];
      v27 = &v14[v25];
      v28 = v27[4];
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v26[4] = v28;
      v13[v15[7]] = v14[v15[7]];
      v13[v15[8]] = v14[v15[8]];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  v13[v15[5]] = v14[v15[5]];
  v19 = v15[6];
  v20 = &v13[v19];
  v21 = &v14[v19];
  v22 = v21[4];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v22;
  v13[v15[7]] = v14[v15[7]];
  v13[v15[8]] = v14[v15[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_QWORD *initializeWithTake for Proto_Gpsd_RecoveryStatistics(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v12[v14[5]] = v13[v14[5]];
    v17 = v14[6];
    v18 = &v12[v17];
    v19 = &v13[v17];
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v12[v14[7]] = v13[v14[7]];
    v12[v14[8]] = v13[v14[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithTake for Proto_Gpsd_RecoveryStatistics(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, int *);
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v11(v13, v14, v9);
      v13[v15[5]] = v14[v15[5]];
      v24 = v15[6];
      v25 = &v13[v24];
      v26 = &v14[v24];
      v25[4] = v26[4];
      *(_DWORD *)v25 = *(_DWORD *)v26;
      v13[v15[7]] = v14[v15[7]];
      v13[v15[8]] = v14[v15[8]];
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v13, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  v13[v15[5]] = v14[v15[5]];
  v19 = v15[6];
  v20 = &v13[v19];
  v21 = &v14[v19];
  v20[4] = v21[4];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v13[v15[7]] = v14[v15[7]];
  v13[v15[8]] = v14[v15[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_RecoveryStatistics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAEAAC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_RecoveryStatistics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_235BAEB5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void type metadata completion function for Proto_Gpsd_RecoveryStatistics()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_RecoveryStatistics.RecoveryStatus?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
    v11 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_RecoveryStatistics.RecoveryStatus()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_MapMatcherData();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v13[4] = v14[4];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = a3[7];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (int *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 4) = *((_BYTE *)v12 + 4);
  *(_DWORD *)v11 = v13;
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = (_QWORD *)(a1 + v13);
  v17 = (uint64_t *)(a2 + v13);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_53Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_54Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_RecoveryStatistics.RecoveryPoint()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LtlInfoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAF4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 5u)
    v9 = 5;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  v10 = v9 - 5;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 5u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAF534(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 5;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_LtlInfoRequest()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LtlInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_LtlInfo.LtlLutParams(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gpsd_LtlInfo.LtlLutParams(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  return a1;
}

_QWORD *assignWithCopy for Proto_Gpsd_LtlInfo.LtlLutParams(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v17;
  return a1;
}

_OWORD *initializeWithTake for Proto_Gpsd_LtlInfo.LtlLutParams(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

_QWORD *assignWithTake for Proto_Gpsd_LtlInfo.LtlLutParams(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BAF9C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlLutParams()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_235BAFA48(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_LtlInfo.LtlLutParams()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
  }
  return v7;
}

_QWORD *initializeWithCopy for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  return a1;
}

_QWORD *assignWithCopy for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v11[4] = v13;
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[4];
  *(_DWORD *)v15 = *(_DWORD *)v16;
  v15[4] = v17;
  return a1;
}

_QWORD *initializeWithTake for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

_QWORD *assignWithTake for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for Proto_Gpsd_LtlInfo.LtlInitialParams(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v39 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = (char *)a1 + v21;
    v25 = (char *)a2 + v21;
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v26 = a3[11];
    v27 = a3[12];
    v28 = *((_BYTE *)a2 + v26);
    v24[4] = v25[4];
    *((_BYTE *)a1 + v26) = v28;
    v29 = (char *)a1 + v27;
    *(_DWORD *)v29 = *(_DWORD *)((char *)a2 + v27);
    v29[4] = *((_BYTE *)a2 + v27 + 4);
    v30 = a3[13];
    v31 = a3[14];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v34 = (char *)a1 + v31;
    v35 = (char *)a2 + v31;
    *(_DWORD *)v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v36 = a3[15];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    *(_DWORD *)v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
  }
  return a1;
}

uint64_t initializeWithCopy for Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = a3[15];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = (int *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)v27 = v29;
  v30 = a3[13];
  v31 = a1 + v30;
  v32 = a2 + v30;
  LOBYTE(v29) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v29;
  v33 = a3[14];
  v34 = a1 + v33;
  v35 = a2 + v33;
  LOBYTE(v29) = *(_BYTE *)(v35 + 4);
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = v29;
  v36 = a3[15];
  v37 = a1 + v36;
  v38 = a2 + v36;
  LOBYTE(v29) = *(_BYTE *)(v38 + 4);
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = v29;
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = a3[15];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  v34 = a3[15];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB06BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB0760(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 44)) = a2 + 2;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_LtlInfo.LtlInitialParams()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_CntinStatusMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB0870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 7u)
    v9 = 7;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  v10 = v9 - 7;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 7u)
    return v10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_CntinStatusMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB0900(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_CntinStatusMessage()
{
  return type metadata completion function for CLP_LogEntry_PrivateData_DaemonLocation();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_CntinClockControl()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_CntinClockControl()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Exception()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Exception()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_Exception()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_AskBasebandReset(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Proto_Gpsd_AskBasebandReset(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Proto_Gpsd_AskBasebandReset(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_AskBasebandReset(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_AskBasebandReset(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_AskBasebandReset(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_AskBasebandReset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB0D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_AskBasebandReset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB0E0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t type metadata completion function for Proto_Gpsd_AskBasebandReset()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t *initializeBufferWithCopyOfBuffer for Proto_Gpsd_LogEntry(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  void (*v42)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v42 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v42(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Proto_Gpsd_Request(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      v21 = v7;
      v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v21 = v7;
      v42((uint64_t *)v16, (uint64_t *)v17, v7);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
      swift_retain();
      v24(v16, 0, 1, v18);
    }
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
    v29 = *((_QWORD *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v42((uint64_t *)v26, (uint64_t *)v27, v21);
      v26[v28[5]] = v27[v28[5]];
      v31 = v28[6];
      v32 = &v26[v31];
      v33 = &v27[v31];
      v32[8] = v33[8];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v26[v28[7]] = v27[v28[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
    }
    v34 = a3[9];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for Proto_Gpsd_Indication(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v42((uint64_t *)v35, (uint64_t *)v36, v21);
      *(_QWORD *)&v35[*(int *)(v37 + 20)] = *(_QWORD *)&v36[*(int *)(v37 + 20)];
      v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56);
      swift_retain();
      v40(v35, 0, 1, v37);
    }
  }
  return a1;
}

uint64_t destroy for Proto_Gpsd_LogEntry(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Proto_Gpsd_Request(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v5(v6, v4);
    swift_release();
  }
  v8 = a1 + a2[8];
  v9 = type metadata accessor for Proto_Gpsd_Response(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    v5(v8, v4);
  v10 = a1 + a2[9];
  v11 = type metadata accessor for Proto_Gpsd_Indication(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
  {
    v5(v10, v4);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Proto_Gpsd_LogEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  void (*v40)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v40(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for Proto_Gpsd_Request(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    v20 = v6;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v20 = v6;
    v40((uint64_t)v15, (uint64_t)v16, v6);
    *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
    v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
    swift_retain();
    v22(v15, 0, 1, v17);
  }
  v23 = a3[8];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v40((uint64_t)v24, (uint64_t)v25, v20);
    v24[v26[5]] = v25[v26[5]];
    v29 = v26[6];
    v30 = &v24[v29];
    v31 = &v25[v29];
    v30[8] = v31[8];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v24[v26[7]] = v25[v26[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  v32 = a3[9];
  v33 = (char *)(a1 + v32);
  v34 = (char *)(a2 + v32);
  v35 = type metadata accessor for Proto_Gpsd_Indication(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v40((uint64_t)v33, (uint64_t)v34, v20);
    *(_QWORD *)&v33[*(int *)(v35 + 20)] = *(_QWORD *)&v34[*(int *)(v35 + 20)];
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
    swift_retain();
    v38(v33, 0, 1, v35);
  }
  return a1;
}

uint64_t assignWithCopy for Proto_Gpsd_LogEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  int *v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t, int *);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  char v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;

  v6 = type metadata accessor for UnknownStorage();
  v53 = *(_QWORD *)(v6 - 8);
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 24);
  v52(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for Proto_Gpsd_Request(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v15, v16, v6);
      *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
      v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_retain();
      v22(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v15, type metadata accessor for Proto_Gpsd_Request);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v52((uint64_t)v15, (uint64_t)v16, v6);
  *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
  swift_retain();
  swift_release();
LABEL_7:
  v24 = a3[8];
  v25 = (_BYTE *)(a1 + v24);
  v26 = (_BYTE *)(a2 + v24);
  v27 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v53 + 16))(v25, v26, v6);
      v25[v27[5]] = v26[v27[5]];
      v32 = v27[6];
      v33 = &v25[v32];
      v34 = &v26[v32];
      v35 = v34[8];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v35;
      v25[v27[7]] = v26[v27[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v25, type metadata accessor for Proto_Gpsd_Response);
LABEL_12:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  v52((uint64_t)v25, (uint64_t)v26, v6);
  v25[v27[5]] = v26[v27[5]];
  v48 = v27[6];
  v49 = &v25[v48];
  v50 = &v26[v48];
  v51 = v50[8];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v49[8] = v51;
  v25[v27[7]] = v26[v27[7]];
LABEL_13:
  v37 = a3[9];
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  v40 = type metadata accessor for Proto_Gpsd_Indication(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      v52((uint64_t)v38, (uint64_t)v39, v6);
      *(_QWORD *)&v38[*(int *)(v40 + 20)] = *(_QWORD *)&v39[*(int *)(v40 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v38, type metadata accessor for Proto_Gpsd_Indication);
    goto LABEL_18;
  }
  if (v44)
  {
LABEL_18:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v38, v39, v6);
  *(_QWORD *)&v38[*(int *)(v40 + 20)] = *(_QWORD *)&v39[*(int *)(v40 + 20)];
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56);
  swift_retain();
  v45(v38, 0, 1, v40);
  return a1;
}

uint64_t initializeWithTake for Proto_Gpsd_LogEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v12 = *(_OWORD *)(a2 + v9);
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = v12;
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for Proto_Gpsd_Request(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[8];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  v23 = *((_QWORD *)v22 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v20, (uint64_t)v21, v6);
    v20[v22[5]] = v21[v22[5]];
    v25 = v22[6];
    v26 = &v20[v25];
    v27 = &v21[v25];
    v26[8] = v27[8];
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v20[v22[7]] = v21[v22[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  }
  v28 = a3[9];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  v31 = type metadata accessor for Proto_Gpsd_Indication(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v29, (uint64_t)v30, v6);
    *(_QWORD *)&v29[*(int *)(v31 + 20)] = *(_QWORD *)&v30[*(int *)(v31 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t assignWithTake for Proto_Gpsd_LogEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  int *v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t, int *);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;

  v6 = type metadata accessor for UnknownStorage();
  v50 = *(_QWORD *)(v6 - 8);
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 40);
  v49(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for Proto_Gpsd_Request(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v16, v17, v6);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v16, type metadata accessor for Proto_Gpsd_Request);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v49((uint64_t)v16, (uint64_t)v17, v6);
  *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
  swift_release();
LABEL_7:
  v24 = a3[8];
  v25 = (_BYTE *)(a1 + v24);
  v26 = (_BYTE *)(a2 + v24);
  v27 = (int *)type metadata accessor for Proto_Gpsd_Response(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 32))(v25, v26, v6);
      v25[v27[5]] = v26[v27[5]];
      v32 = v27[6];
      v33 = &v25[v32];
      v34 = &v26[v32];
      v33[8] = v34[8];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v25[v27[7]] = v26[v27[7]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v25, type metadata accessor for Proto_Gpsd_Response);
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v49((uint64_t)v25, (uint64_t)v26, v6);
  v25[v27[5]] = v26[v27[5]];
  v46 = v27[6];
  v47 = &v25[v46];
  v48 = &v26[v46];
  v47[8] = v48[8];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v25[v27[7]] = v26[v27[7]];
LABEL_13:
  v36 = a3[9];
  v37 = (char *)(a1 + v36);
  v38 = (char *)(a2 + v36);
  v39 = type metadata accessor for Proto_Gpsd_Indication(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      v49((uint64_t)v37, (uint64_t)v38, v6);
      *(_QWORD *)&v37[*(int *)(v39 + 20)] = *(_QWORD *)&v38[*(int *)(v39 + 20)];
      swift_release();
      return a1;
    }
    outlined destroy of CLP_LogEntry_AONLoc_Request.ResultOptions((uint64_t)v37, type metadata accessor for Proto_Gpsd_Indication);
    goto LABEL_18;
  }
  if (v43)
  {
LABEL_18:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v37, v38, v6);
  *(_QWORD *)&v37[*(int *)(v39 + 20)] = *(_QWORD *)&v38[*(int *)(v39 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_LogEntry()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB1F38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[6] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[7];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[8];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LogEntry()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235BB2050(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for UnknownStorage();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Request?);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Response?);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Proto_Gpsd_Indication?);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[9];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Proto_Gpsd_LogEntry()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_Request?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_Request);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_Response?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_Response);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_Indication?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_Indication);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_StartContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_StartContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for Proto_Gpsd_StartContext()
{
  return type metadata completion function for Proto_Gnss_Emergency_Configuration();
}

uint64_t ObjC metadata update function for Proto_Gpsd_Request._StorageClass()
{
  return type metadata accessor for Proto_Gpsd_Request._StorageClass(0);
}

void type metadata completion function for Proto_Gpsd_Request._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_InjectAssistancePosition?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_InjectAssistanceTime?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistancePressure?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistancePressure);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceAccel?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
        if (v3 <= 0x3F)
        {
          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceGyro?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
          if (v4 <= 0x3F)
          {
            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceDem?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceDem);
            if (v5 <= 0x3F)
            {
              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceMapVector?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
              if (v6 <= 0x3F)
              {
                type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceMotionActivityContext?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
                if (v7 <= 0x3F)
                {
                  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceMountState?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceSignalEnvironment?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceSpeedConstraint?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetAssistanceAlongTrackVelocity?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
                        if (v11 <= 0x3F)
                        {
                          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_InjectAssistanceFile?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
                          if (v12 <= 0x3F)
                          {
                            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_InjectRtiFile?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_InjectRtiFile);
                            if (v13 <= 0x3F)
                            {
                              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_InjectSvidBlocklist?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
                              if (v14 <= 0x3F)
                              {
                                type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_DeleteGnssData?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_DeleteGnssData);
                                if (v15 <= 0x3F)
                                {
                                  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetPvtmReport?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetPvtmReport);
                                  if (v16 <= 0x3F)
                                  {
                                    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetNmeaHandler?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetNmeaHandler);
                                    if (v17 <= 0x3F)
                                    {
                                      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetConfigSimulatorMode?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
                                      if (v18 <= 0x3F)
                                      {
                                        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetConfigEnableGnssConstellations?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
                                        if (v19 <= 0x3F)
                                        {
                                          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetConfigDutyCycling?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
                                          if (v20 <= 0x3F)
                                          {
                                            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_TerminationImminent?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_TerminationImminent);
                                            if (v21 <= 0x3F)
                                            {
                                              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_ExitMessage?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_ExitMessage);
                                              if (v22 <= 0x3F)
                                              {
                                                type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_LtlInfo?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_LtlInfo);
                                                if (v23 <= 0x3F)
                                                {
                                                  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_StartContext?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_StartContext);
                                                  if (v24 <= 0x3F)
                                                  {
                                                    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_CntinStatusMessage?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_CntinStatusMessage);
                                                    if (v25 <= 0x3F)
                                                    {
                                                      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetThermalRiskState?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetThermalRiskState);
                                                      if (v26 <= 0x3F)
                                                      {
                                                        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_SetConfigRfBandEnable?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
                                                        if (v27 <= 0x3F)
                                                        {
                                                          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_EmergConfig?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
                                                          if (v28 <= 0x3F)
                                                          {
                                                            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_PositionRequest?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
                                                            if (v29 <= 0x3F)
                                                            {
                                                              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsReferenceTime?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
                                                              if (v30 <= 0x3F)
                                                              {
                                                                type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_ReferenceLocation?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
                                                                if (v31 <= 0x3F)
                                                                {
                                                                  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsNavigationModel?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
                                                                  if (v32 <= 0x3F)
                                                                  {
                                                                    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_GpsAcqAssistance?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
                                                                    if (v33 <= 0x3F)
                                                                    {
                                                                      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistance?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
                                                                      if (v34 <= 0x3F)
                                                                      {
                                                                        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CplaneContext?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
                                                                        if (v35 <= 0x3F)
                                                                        {
                                                                          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_LocationId?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_LocationId);
                                                                          if (v36 <= 0x3F)
                                                                          {
                                                                            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SuplContext?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SuplContext);
                                                                            if (v37 <= 0x3F)
                                                                            {
                                                                              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementList?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
                                                                              if (v38 <= 0x3F)
                                                                                swift_updateClassMetadata2();
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gpsd_Indication._StorageClass()
{
  return type metadata accessor for Proto_Gpsd_Indication._StorageClass(0);
}

void type metadata completion function for Proto_Gpsd_Indication._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Fix?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Fix);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents?, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_PwrMeasurement?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_PwrMeasurement);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_Status?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_Status);
        if (v3 <= 0x3F)
        {
          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_TimeTransferDataExtend?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
          if (v4 <= 0x3F)
          {
            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_RecoveryStatistics?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_RecoveryStatistics);
            if (v5 <= 0x3F)
            {
              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_LtlInfoRequest?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_LtlInfoRequest);
              if (v6 <= 0x3F)
              {
                type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_DecodedExtendedEphemeris?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
                if (v7 <= 0x3F)
                {
                  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_DecodedRti?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_DecodedRti);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_CntinClockControl?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_CntinClockControl);
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_Exception?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_Exception);
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_AskBasebandReset?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_AskBasebandReset);
                        if (v11 <= 0x3F)
                        {
                          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SummaryReport?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
                          if (v12 <= 0x3F)
                          {
                            type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_PositionReport?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_PositionReport);
                            if (v13 <= 0x3F)
                            {
                              type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReport?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
                              if (v14 <= 0x3F)
                              {
                                type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_AssistanceNeededReport?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
                                if (v15 <= 0x3F)
                                {
                                  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_CellFTAssistanceRequest?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
                                  if (v16 <= 0x3F)
                                  {
                                    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_MeasurementReportWithEstimate?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
                                    if (v17 <= 0x3F)
                                    {
                                      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_SessionStatus?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
                                      if (v18 <= 0x3F)
                                      {
                                        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_Init?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_Init);
                                        if (v19 <= 0x3F)
                                        {
                                          type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gnss_Emergency_WlanMeasurementRequest?, (void (*)(uint64_t))type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
                                          if (v20 <= 0x3F)
                                            swift_updateClassMetadata2();
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t ObjC metadata update function for Proto_Gpsd_LtlInfo._StorageClass()
{
  return type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0);
}

void type metadata completion function for Proto_Gpsd_LtlInfo._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlInitialParams?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlLutParams?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions?(319, &lazy cache variable for type metadata for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData?, (void (*)(uint64_t))type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void one-time initialization function for instance()
{
  uint64_t v0;
  id v1;
  void *v2;
  char deviceSupportsAOP;
  id v4;
  void *v5;
  char deviceSupportsAOP2;
  id v7;
  void *v8;
  char isVirtualDevice;
  id v10;
  void *v11;
  char mobileWifi;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  type metadata accessor for PlatformInfo();
  v0 = swift_allocObject();
  v1 = (id)MobileGestalt_get_current_device();
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  v2 = v1;
  deviceSupportsAOP = MobileGestalt_get_deviceSupportsAOP();

  *(_BYTE *)(v0 + 64) = deviceSupportsAOP;
  v4 = (id)MobileGestalt_get_current_device();
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4;
  deviceSupportsAOP2 = MobileGestalt_get_deviceSupportsAOP2();

  *(_BYTE *)(v0 + 65) = deviceSupportsAOP2;
  v7 = (id)MobileGestalt_get_current_device();
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v7;
  isVirtualDevice = MobileGestalt_get_isVirtualDevice();

  *(_BYTE *)(v0 + 66) = isVirtualDevice;
  *(_BYTE *)(v0 + 67) = 1;
  v10 = (id)MobileGestalt_get_current_device();
  if (!v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v11 = v10;
  mobileWifi = MobileGestalt_get_mobileWifi();

  *(_BYTE *)(v0 + 68) = mobileWifi;
  v13 = (id)MobileGestalt_get_current_device();
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v14 = v13;
  v15 = (id)MobileGestalt_copy_productType_obj();

  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v18 = v17;

  *(_QWORD *)(v0 + 16) = v16;
  *(_QWORD *)(v0 + 24) = v18;
  v19 = (id)MobileGestalt_get_current_device();
  if (!v19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20 = v19;
  v21 = (id)MobileGestalt_copy_hwModelStr_obj();

  if (!v21)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v24 = v23;

  *(_QWORD *)(v0 + 32) = v22;
  *(_QWORD *)(v0 + 40) = v24;
  v25 = (id)MobileGestalt_get_current_device();
  if (!v25)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v26 = v25;
  v27 = (id)MobileGestalt_copy_productVersion_obj();

  if (v27)
  {
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v30 = v29;

    *(_QWORD *)(v0 + 48) = v28;
    *(_QWORD *)(v0 + 56) = v30;
    static PlatformInfo.instance = v0;
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t *PlatformInfo.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1)
    swift_once();
  return &static PlatformInfo.instance;
}

uint64_t static PlatformInfo.instance.getter()
{
  if (one-time initialization token for instance != -1)
    swift_once();
  return swift_retain();
}

uint64_t PlatformInfo.product.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlatformInfo.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlatformInfo.osVer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

id variable initialization expression of PlatformInfo._haveAOP()
{
  return variable initialization expression of PlatformInfo._haveAOP(MEMORY[0x24BED8598]);
}

uint64_t PlatformInfo.hasAOP.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

id variable initialization expression of PlatformInfo._haveAOP2()
{
  return variable initialization expression of PlatformInfo._haveAOP(MEMORY[0x24BED85A0]);
}

uint64_t PlatformInfo.hasAOP2.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

id variable initialization expression of PlatformInfo._virtual()
{
  return variable initialization expression of PlatformInfo._haveAOP(MEMORY[0x24BED8630]);
}

uint64_t PlatformInfo.virtual.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t variable initialization expression of PlatformInfo._isAvailable()
{
  return 1;
}

uint64_t PlatformInfo.isAvailable.getter()
{
  void (*v0)(uint64_t *__return_ptr, unint64_t, unint64_t, _QWORD);
  uint64_t v2;

  v0 = *(void (**)(uint64_t *__return_ptr, unint64_t, unint64_t, _QWORD))(*(_QWORD *)*PersistentConfig.instance.unsafeMutableAddressor()
                                                                                                + 112);
  swift_retain();
  v0(&v2, 0xD000000000000017, 0x8000000235BFCD30, MEMORY[0x24BEE1328]);
  swift_release();
  return (v2 == 2) | (v2 & 1);
}

id variable initialization expression of PlatformInfo._haveMobileWiFi()
{
  return variable initialization expression of PlatformInfo._haveAOP(MEMORY[0x24BED8640]);
}

id variable initialization expression of PlatformInfo._haveAOP(uint64_t (*a1)(void))
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v3 = result;
    v4 = a1();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformInfo.hasMobileWiFi.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 68);
}

Swift::String __swiftcall PlatformInfo.systemVersionDescriptionNoBuild()()
{
  _QWORD *v0;
  Swift::String v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  Swift::String result;
  uint64_t v8;
  void *v9;

  v8 = v0[2];
  v9 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v3 = v0[6];
  v2 = (void *)v0[7];
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v3;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = v8;
  v6 = v9;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

Swift::String __swiftcall PlatformInfo.systemVersionDescriptionNoSpace()()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  uint64_t v4;
  void *v5;
  Swift::String result;
  uint64_t v7;
  void *v8;

  v1 = v0[6];
  v2 = (void *)v0[7];
  v7 = v0[2];
  v8 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  v4 = v7;
  v5 = v8;
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t PlatformInfo.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlatformInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlatformInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlatformInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlatformInfo.hasAOP.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PlatformInfo.hasAOP2.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PlatformInfo.virtual.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PlatformInfo.isAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PlatformInfo.hasMobileWiFi.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PlatformInfo.systemVersionDescriptionNoBuild()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PlatformInfo.systemVersionDescriptionNoSpace()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

void one-time initialization function for kServerDefaults()
{
  strcpy((char *)&static PersistentConfig.kServerDefaults, "ServerDefaults");
  unk_254297877 = -18;
}

uint64_t *PersistentConfig.kServerDefaults.unsafeMutableAddressor()
{
  if (one-time initialization token for kServerDefaults != -1)
    swift_once();
  return &static PersistentConfig.kServerDefaults;
}

uint64_t static PersistentConfig.kServerDefaults.getter()
{
  uint64_t v0;

  if (one-time initialization token for kServerDefaults != -1)
    swift_once();
  v0 = static PersistentConfig.kServerDefaults;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for instance()
{
  uint64_t result;

  type metadata accessor for PersistentConfig();
  result = swift_initStaticObject();
  static PersistentConfig.instance = result;
  return result;
}

uint64_t *PersistentConfig.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1)
    swift_once();
  return &static PersistentConfig.instance;
}

uint64_t static PersistentConfig.instance.getter()
{
  type metadata accessor for PersistentConfig();
  return swift_initStaticObject();
}

Swift::OpaquePointer_optional __swiftcall PersistentConfig.serverDefaultsWithVersion(forKey:)(Swift::String forKey)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  id v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];
  Swift::OpaquePointer_optional result;

  object = forKey._object;
  countAndFlagsBits = forKey._countAndFlagsBits;
  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (one-time initialization token for kServerDefaults != -1)
    swift_once();
  v4 = (void *)MEMORY[0x23B7DB7C8](static PersistentConfig.kServerDefaults, unk_254297870);
  v5 = objc_msgSend(v3, sel_dictionaryForKey_, v4);

  if (!v5)
    goto LABEL_18;
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*PlatformInfo.instance.unsafeMutableAddressor() + 200);
  v9 = swift_retain();
  v10 = v8(v9);
  v12 = v11;
  swift_release();
  if (!*(_QWORD *)(v7 + 16) || (v13 = specialized __RawDictionaryStorage.find<A>(_:)(v10, v12), (v14 & 1) == 0))
  {
    v21 = 0u;
    v22 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  outlined init with copy of Any(*(_QWORD *)(v7 + 56) + 32 * v13, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
  {
LABEL_14:
    outlined destroy of Any?((uint64_t)&v21);
    v18 = specialized _dictionaryUpCast<A, B, C, D>(_:)(v7);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  outlined init with take of Any(&v21, v23);
  outlined init with copy of Any((uint64_t)v23, (uint64_t)&v21);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
  if (!swift_dynamicCast())
  {
LABEL_17:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
LABEL_18:
    v18 = 0;
    goto LABEL_19;
  }
  if (!*(_QWORD *)(v20 + 16))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v15 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v15);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  *(_QWORD *)&v21 = v17;
  if (swift_dynamicCast())
    v18 = v20;
  else
    v18 = 0;
LABEL_19:
  v19 = (void *)v18;
  result.value._rawValue = v19;
  result.is_nil = v6;
  return result;
}

unint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _DictionaryStorage<String, Swift.AnyObject>);
    v2 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = v40;
  v7 = v38;
  result = swift_bridgeObjectRetain();
  v33 = 0;
  v9 = MEMORY[0x24BEE4AD8] + 8;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v17 = v33 + 1;
  if (__OFADD__(v33, 1))
    goto LABEL_35;
  if (v17 >= v31)
    goto LABEL_32;
  v18 = *(_QWORD *)(v32 + 8 * v17);
  v19 = v33 + 1;
  if (!v18)
  {
    v19 = v33 + 2;
    if (v33 + 2 >= v31)
      goto LABEL_32;
    v18 = *(_QWORD *)(v32 + 8 * v19);
    if (!v18)
    {
      v19 = v33 + 3;
      if (v33 + 3 >= v31)
        goto LABEL_32;
      v18 = *(_QWORD *)(v32 + 8 * v19);
      if (!v18)
      {
        v19 = v33 + 4;
        if (v33 + 4 >= v31)
          goto LABEL_32;
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          v20 = v33 + 5;
          if (v33 + 5 < v31)
          {
            v18 = *(_QWORD *)(v32 + 8 * v20);
            if (v18)
            {
              v19 = v33 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v19 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_36;
              if (v19 >= v31)
                break;
              v18 = *(_QWORD *)(v32 + 8 * v19);
              ++v20;
              if (v18)
                goto LABEL_26;
            }
          }
LABEL_32:
          outlined consume of [String : Any].Iterator._Variant();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v33 = v19;
  v34 = (v18 - 1) & v18;
  for (i = __clz(__rbit64(v18)) + (v19 << 6); ; i = __clz(__rbit64(v5)) | (v33 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v23 = *v21;
    v22 = v21[1];
    outlined init with copy of Any(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(_QWORD *)&v39 = v23;
    *((_QWORD *)&v39 + 1) = v22;
    v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    v24 = v39;
    outlined init with take of Any(v7, &v35);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v25 = v36;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v24, *((uint64_t *)&v24 + 1));
    v26 = result;
    if ((v27 & 1) != 0)
    {
      v10 = v1;
      v11 = v9;
      v12 = v7;
      v13 = v6;
      v14 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v14 = v24;
      v15 = v2[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v15 + 8 * v26) = v25;
      v6 = v13;
      v7 = v12;
      v9 = v11;
      v1 = v10;
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v24;
    *(_QWORD *)(v2[7] + 8 * result) = v25;
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall PersistentConfig.inServerDefaults(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  Swift::Bool v9;
  __int128 v11;
  __int128 v12;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (one-time initialization token for kServerDefaults != -1)
    swift_once();
  v4 = (void *)MEMORY[0x23B7DB7C8](static PersistentConfig.kServerDefaults, unk_254297870);
  v5 = objc_msgSend(v3, sel_dictionaryForKey_, v4);

  if (v5)
  {
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(_QWORD *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      v7 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object);
      if ((v8 & 1) != 0)
      {
        outlined init with copy of Any(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = *((_QWORD *)&v12 + 1) != 0;
LABEL_11:
        outlined destroy of Any?((uint64_t)&v11);
        return v9;
      }
      v11 = 0u;
      v12 = 0u;
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }
    swift_bridgeObjectRelease();
    v9 = 0;
    goto LABEL_11;
  }
  return 0;
}

Swift::Bool __swiftcall PersistentConfig.inUserDefaults(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  id v5;
  _OWORD v7[2];

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v4 = (void *)MEMORY[0x23B7DB7C8](countAndFlagsBits, object);
  v5 = objc_msgSend(v3, sel_valueForKey_, v4);

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  outlined destroy of Any?((uint64_t)v7);
  return v5 != 0;
}

Swift::Void __swiftcall PersistentConfig.addSuite(named:)(Swift::String named)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint8_t *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  object = named._object;
  countAndFlagsBits = named._countAndFlagsBits;
  v3 = type metadata accessor for Logger();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  allog.getter((uint64_t)v6);
  swift_bridgeObjectRetain_n();
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v16 = countAndFlagsBits;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, (unint64_t)object, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235928000, v7, v8, "UserDefaults,add,%{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7DBDA4](v11, -1, -1);
    v12 = v10;
    countAndFlagsBits = v16;
    MEMORY[0x23B7DBDA4](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v14 = (void *)MEMORY[0x23B7DB7C8](countAndFlagsBits, object);
  objc_msgSend(v13, sel_addSuiteNamed_, v14);

}

uint64_t key path getter for PersistentConfig.subscript<A>(_:) : <A>PersistentConfigA(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)a1 + 112))(*a2, a2[1], *(_QWORD *)((char *)a2 + a3 - 8));
}

uint64_t key path setter for PersistentConfig.subscript<A>(_:) : <A>PersistentConfigA(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v7 = *(uint64_t *)((char *)a3 + a4 - 8);
  v8 = type metadata accessor for Optional();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - v9;
  v12 = *a3;
  v11 = a3[1];
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v16 - v9, a1);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(**(_QWORD **)a2 + 120);
  swift_bridgeObjectRetain();
  return v14(v10, v12, v11, v7);
}

uint64_t PersistentConfig.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  __int128 v20;
  _OWORD v21[2];

  if (((*(uint64_t (**)(void))(*(_QWORD *)v4 + 96))() & 1) != 0)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v10 = (void *)MEMORY[0x23B7DB7C8](a1, a2);
    v11 = objc_msgSend(v9, sel_valueForKey_, v10);

    if (v11)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      outlined init with take of Any(&v20, v21);
    }
    else
    {
      memset(v21, 0, sizeof(v21));
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
    v17 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v17 ^ 1u, 1, a3);
  }
  else
  {
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 80))(a1, a2);
    if (v12)
    {
      v13 = v12;
      if (*(_QWORD *)(v12 + 16))
      {
        swift_bridgeObjectRetain();
        v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
        if ((v15 & 1) != 0)
        {
          v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
          swift_unknownObjectRetain();
        }
        else
        {
          v16 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = 0;
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)&v21[0] = v16;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Swift.AnyObject?);
      v19 = swift_dynamicCast() ^ 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v19, 1, a3);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
    }
  }
}

uint64_t PersistentConfig.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  specialized PersistentConfig.subscript.setter(a1, a2, a3, a4);
  v5 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

void (*PersistentConfig.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;

  v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[1] = a3;
  v8[2] = a4;
  *v8 = a2;
  v9 = type metadata accessor for Optional();
  v8[3] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[4] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v8[5] = malloc(v11);
  v12 = malloc(v11);
  v8[6] = v12;
  PersistentConfig.subscript.getter(a2, a3, a4, (uint64_t)v12);
  return PersistentConfig.subscript.modify;
}

void PersistentConfig.subscript.modify(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  v5 = (*a1)[3];
  v6 = (*a1)[4];
  v8 = (*a1)[1];
  v7 = (*a1)[2];
  v9 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    swift_bridgeObjectRetain();
    specialized PersistentConfig.subscript.setter((uint64_t)v3, v9, v8, v7);
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    specialized PersistentConfig.subscript.setter((uint64_t)v4, v9, v8, v7);
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v10(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t type metadata accessor for PersistentConfig()
{
  return objc_opt_self();
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;

  Hasher.init(_seed:)();
  String.hash(into:)();
  v4 = Hasher._finalize()();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

void specialized PersistentConfig.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v8 = type metadata accessor for Optional();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = *(_QWORD *)(a4 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, a4) != 1)
  {
    v14 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, a4);
  }
  v15 = (void *)MEMORY[0x23B7DB7C8](a2, a3);
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setObject_forKey_, v14, v15);

  swift_unknownObjectRelease();
}

uint64_t sub_235BB4904()
{
  return 8;
}

_QWORD *sub_235BB4910(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for PersistentConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersistentConfig.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PersistentConfig.subscript.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PersistentConfig.subscript.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t Data.description.getter()
{
  return MEMORY[0x24BDCDBE0]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x24BDCDCA0]();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t ALTimeStamp.cfAbsoluteTimeSec.getter()
{
  return MEMORY[0x24BDFCC38]();
}

uint64_t ALTimeStamp._cfAbsoluteTimeSec.setter()
{
  return MEMORY[0x24BDFCC40]();
}

uint64_t ALTimeStamp.machAbsoluteTimeSec.getter()
{
  return MEMORY[0x24BDFCC48]();
}

uint64_t ALTimeStamp._machAbsoluteTimeSec.setter()
{
  return MEMORY[0x24BDFCC50]();
}

uint64_t ALTimeStamp.machContinuousTimeSec.getter()
{
  return MEMORY[0x24BDFCC58]();
}

uint64_t ALTimeStamp._machContinuousTimeSec.setter()
{
  return MEMORY[0x24BDFCC60]();
}

uint64_t ALTimeStamp.init()()
{
  return MEMORY[0x24BDFCC68]();
}

uint64_t type metadata accessor for ALTimeStamp()
{
  return MEMORY[0x24BDFCC70]();
}

uint64_t ALResultOptions._maxAgeSec.getter()
{
  return MEMORY[0x24BDFCC80]();
}

uint64_t ALResultOptions.intervalSec.getter()
{
  return MEMORY[0x24BDFCC88]();
}

uint64_t ALResultOptions.intervalSec.setter()
{
  return MEMORY[0x24BDFCC90]();
}

uint64_t ALResultOptions._intervalSec.getter()
{
  return MEMORY[0x24BDFCC98]();
}

uint64_t ALResultOptions._intervalSec.setter()
{
  return MEMORY[0x24BDFCCA0]();
}

uint64_t ALResultOptions._maxBatchSize.getter()
{
  return MEMORY[0x24BDFCCA8]();
}

uint64_t ALResultOptions._endCfaTimeSec.getter()
{
  return MEMORY[0x24BDFCCB0]();
}

uint64_t ALResultOptions._startCfaTimeSec.getter()
{
  return MEMORY[0x24BDFCCB8]();
}

uint64_t ALResultOptions.init()()
{
  return MEMORY[0x24BDFCCC0]();
}

uint64_t type metadata accessor for ALResultOptions()
{
  return MEMORY[0x24BDFCCC8]();
}

uint64_t ALBtAdvInfoType7._isLeftBud.getter()
{
  return MEMORY[0x24BDFCCD8]();
}

uint64_t ALBtAdvInfoType7._isLeftBud.setter()
{
  return MEMORY[0x24BDFCCE0]();
}

uint64_t ALBtAdvInfoType7._placement.getter()
{
  return MEMORY[0x24BDFCCE8]();
}

uint64_t ALBtAdvInfoType7._placement.setter()
{
  return MEMORY[0x24BDFCCF0]();
}

uint64_t ALBtAdvInfoType7._isSharedHome.getter()
{
  return MEMORY[0x24BDFCCF8]();
}

uint64_t ALBtAdvInfoType7._isSharedHome.setter()
{
  return MEMORY[0x24BDFCD00]();
}

uint64_t ALBtAdvInfoType7._isSameAccount.getter()
{
  return MEMORY[0x24BDFCD08]();
}

uint64_t ALBtAdvInfoType7._isSameAccount.setter()
{
  return MEMORY[0x24BDFCD10]();
}

uint64_t ALBtAdvInfoType7._isCase.getter()
{
  return MEMORY[0x24BDFCD18]();
}

uint64_t ALBtAdvInfoType7._isCase.setter()
{
  return MEMORY[0x24BDFCD20]();
}

uint64_t type metadata accessor for ALBtAdvInfoType7.Placement()
{
  return MEMORY[0x24BDFCD68]();
}

uint64_t ALBtAdvInfoType7._isFamily.getter()
{
  return MEMORY[0x24BDFCD78]();
}

uint64_t ALBtAdvInfoType7._isFamily.setter()
{
  return MEMORY[0x24BDFCD80]();
}

uint64_t ALBtAdvInfoType7.init()()
{
  return MEMORY[0x24BDFCD88]();
}

uint64_t type metadata accessor for ALBtAdvInfoType7()
{
  return MEMORY[0x24BDFCD90]();
}

uint64_t ALBtNotification._simulated.getter()
{
  return MEMORY[0x24BDFCDA0]();
}

uint64_t ALBtNotification._simulated.setter()
{
  return MEMORY[0x24BDFCDA8]();
}

uint64_t ALBtNotification._timestamp.getter()
{
  return MEMORY[0x24BDFCDB0]();
}

uint64_t ALBtNotification._timestamp.setter()
{
  return MEMORY[0x24BDFCDB8]();
}

uint64_t ALBtNotification._isScreenOn.getter()
{
  return MEMORY[0x24BDFCDC0]();
}

uint64_t ALBtNotification._isScreenOn.setter()
{
  return MEMORY[0x24BDFCDC8]();
}

uint64_t ALBtNotification._advertisements.modify()
{
  return MEMORY[0x24BDFCDD0]();
}

uint64_t ALBtNotification._advertisements.getter()
{
  return MEMORY[0x24BDFCDD8]();
}

uint64_t ALBtNotification._isApOn.getter()
{
  return MEMORY[0x24BDFCDE0]();
}

uint64_t ALBtNotification._isApOn.setter()
{
  return MEMORY[0x24BDFCDE8]();
}

uint64_t ALBtNotification.init()()
{
  return MEMORY[0x24BDFCDF0]();
}

uint64_t type metadata accessor for ALBtNotification()
{
  return MEMORY[0x24BDFCDF8]();
}

uint64_t ALWiFiScanResult._accessPoints.modify()
{
  return MEMORY[0x24BDFCE08]();
}

uint64_t ALWiFiScanResult._accessPoints.getter()
{
  return MEMORY[0x24BDFCE10]();
}

uint64_t ALWiFiScanResult._scanTimestamp.modify()
{
  return MEMORY[0x24BDFCE18]();
}

uint64_t ALWiFiScanResult._scanTimestamp.getter()
{
  return MEMORY[0x24BDFCE20]();
}

uint64_t ALWiFiScanResult._scanTimestamp.setter()
{
  return MEMORY[0x24BDFCE28]();
}

uint64_t ALWiFiScanResult.init()()
{
  return MEMORY[0x24BDFCE30]();
}

uint64_t type metadata accessor for ALWiFiScanResult()
{
  return MEMORY[0x24BDFCE38]();
}

uint64_t ALBtAdvertisement._productID.getter()
{
  return MEMORY[0x24BDFCE48]();
}

uint64_t ALBtAdvertisement._productID.setter()
{
  return MEMORY[0x24BDFCE50]();
}

uint64_t ALBtAdvertisement._type7Info.getter()
{
  return MEMORY[0x24BDFCE58]();
}

uint64_t ALBtAdvertisement._type7Info.setter()
{
  return MEMORY[0x24BDFCE60]();
}

uint64_t ALBtAdvertisement._identifier.getter()
{
  return MEMORY[0x24BDFCE68]();
}

uint64_t ALBtAdvertisement._identifier.setter()
{
  return MEMORY[0x24BDFCE70]();
}

uint64_t ALBtAdvertisement._deviceFlags.getter()
{
  return MEMORY[0x24BDFCE78]();
}

uint64_t ALBtAdvertisement._deviceFlags.setter()
{
  return MEMORY[0x24BDFCE80]();
}

uint64_t ALBtAdvertisement._idsDeviceID.getter()
{
  return MEMORY[0x24BDFCE88]();
}

uint64_t ALBtAdvertisement._idsDeviceID.setter()
{
  return MEMORY[0x24BDFCE90]();
}

uint64_t ALBtAdvertisement._antennaIndex.getter()
{
  return MEMORY[0x24BDFCE98]();
}

uint64_t ALBtAdvertisement._antennaIndex.setter()
{
  return MEMORY[0x24BDFCEA0]();
}

uint64_t ALBtAdvertisement._discoveryFlags.getter()
{
  return MEMORY[0x24BDFCEA8]();
}

uint64_t ALBtAdvertisement._discoveryFlags.setter()
{
  return MEMORY[0x24BDFCEB0]();
}

uint64_t ALBtAdvertisement._machContTimeNs.getter()
{
  return MEMORY[0x24BDFCEB8]();
}

uint64_t ALBtAdvertisement._machContTimeNs.setter()
{
  return MEMORY[0x24BDFCEC0]();
}

uint64_t ALBtAdvertisement._mac.getter()
{
  return MEMORY[0x24BDFCEC8]();
}

uint64_t ALBtAdvertisement._mac.setter()
{
  return MEMORY[0x24BDFCED0]();
}

uint64_t ALBtAdvertisement._type.getter()
{
  return MEMORY[0x24BDFCED8]();
}

uint64_t ALBtAdvertisement._type.setter()
{
  return MEMORY[0x24BDFCEE0]();
}

uint64_t type metadata accessor for ALBtAdvertisement.BtType()
{
  return MEMORY[0x24BDFCF00]();
}

uint64_t ALBtAdvertisement._rssidB.getter()
{
  return MEMORY[0x24BDFCF10]();
}

uint64_t ALBtAdvertisement._rssidB.setter()
{
  return MEMORY[0x24BDFCF18]();
}

uint64_t ALBtAdvertisement._channel.getter()
{
  return MEMORY[0x24BDFCF20]();
}

uint64_t ALBtAdvertisement._channel.setter()
{
  return MEMORY[0x24BDFCF28]();
}

uint64_t ALBtAdvertisement._payload.getter()
{
  return MEMORY[0x24BDFCF30]();
}

uint64_t ALBtAdvertisement._payload.setter()
{
  return MEMORY[0x24BDFCF38]();
}

uint64_t ALBtAdvertisement.init()()
{
  return MEMORY[0x24BDFCF40]();
}

uint64_t type metadata accessor for ALBtAdvertisement()
{
  return MEMORY[0x24BDFCF48]();
}

Swift::String __swiftcall ALBtNotifications.description()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BDFCF58]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t ALBtNotifications.isLastBatch.getter()
{
  return MEMORY[0x24BDFCF60]();
}

uint64_t ALBtNotifications._isLastBatch.setter()
{
  return MEMORY[0x24BDFCF68]();
}

uint64_t ALBtNotifications.init(results:isLastBatch:)()
{
  return MEMORY[0x24BDFCF70]();
}

uint64_t ALBtNotifications.results.getter()
{
  return MEMORY[0x24BDFCF78]();
}

uint64_t ALBtNotifications._results.modify()
{
  return MEMORY[0x24BDFCF80]();
}

uint64_t ALBtNotifications.init()()
{
  return MEMORY[0x24BDFCF88]();
}

uint64_t type metadata accessor for ALBtNotifications()
{
  return MEMORY[0x24BDFCF90]();
}

uint64_t ALWiFiNotification._available.getter()
{
  return MEMORY[0x24BDFCF98]();
}

uint64_t ALWiFiNotification._available.setter()
{
  return MEMORY[0x24BDFCFA0]();
}

uint64_t ALWiFiNotification._isApAwake.getter()
{
  return MEMORY[0x24BDFCFA8]();
}

uint64_t ALWiFiNotification._isApAwake.setter()
{
  return MEMORY[0x24BDFCFB0]();
}

uint64_t ALWiFiNotification._simulated.getter()
{
  return MEMORY[0x24BDFCFB8]();
}

uint64_t ALWiFiNotification._simulated.setter()
{
  return MEMORY[0x24BDFCFC0]();
}

uint64_t ALWiFiNotification._timestamp.getter()
{
  return MEMORY[0x24BDFCFC8]();
}

uint64_t ALWiFiNotification._timestamp.setter()
{
  return MEMORY[0x24BDFCFD0]();
}

uint64_t ALWiFiNotification._scanResult.getter()
{
  return MEMORY[0x24BDFCFD8]();
}

uint64_t ALWiFiNotification._scanResult.setter()
{
  return MEMORY[0x24BDFCFE0]();
}

uint64_t ALWiFiNotification._associatedMac.getter()
{
  return MEMORY[0x24BDFCFE8]();
}

uint64_t ALWiFiNotification._associatedMac.setter()
{
  return MEMORY[0x24BDFCFF0]();
}

uint64_t ALWiFiNotification._type.getter()
{
  return MEMORY[0x24BDFCFF8]();
}

uint64_t ALWiFiNotification._type.setter()
{
  return MEMORY[0x24BDFD000]();
}

uint64_t type metadata accessor for ALWiFiNotification.NotiType()
{
  return MEMORY[0x24BDFD080]();
}

uint64_t ALWiFiNotification.init()()
{
  return MEMORY[0x24BDFD090]();
}

uint64_t type metadata accessor for ALWiFiNotification()
{
  return MEMORY[0x24BDFD098]();
}

uint64_t ALWiFiNotifications.description.getter()
{
  return MEMORY[0x24BDFD0A8]();
}

uint64_t ALWiFiNotifications.isLastBatch.getter()
{
  return MEMORY[0x24BDFD0B0]();
}

uint64_t ALWiFiNotifications._isLastBatch.setter()
{
  return MEMORY[0x24BDFD0B8]();
}

uint64_t ALWiFiNotifications.results.getter()
{
  return MEMORY[0x24BDFD0C0]();
}

uint64_t ALWiFiNotifications.init(_results:_isLastBatch:)()
{
  return MEMORY[0x24BDFD0C8]();
}

uint64_t ALWiFiNotifications._results.modify()
{
  return MEMORY[0x24BDFD0D0]();
}

uint64_t ALWiFiNotifications.init()()
{
  return MEMORY[0x24BDFD0D8]();
}

uint64_t type metadata accessor for ALWiFiNotifications()
{
  return MEMORY[0x24BDFD0E0]();
}

uint64_t ALWiFiScanSingleAccessPoint._frequencyKhz.getter()
{
  return MEMORY[0x24BDFD0E8]();
}

uint64_t ALWiFiScanSingleAccessPoint._frequencyKhz.setter()
{
  return MEMORY[0x24BDFD0F0]();
}

uint64_t type metadata accessor for ALWiFiScanSingleAccessPoint.Band()
{
  return MEMORY[0x24BDFD118]();
}

uint64_t type metadata accessor for ALWiFiScanSingleAccessPoint.Mode()
{
  return MEMORY[0x24BDFD148]();
}

uint64_t ALWiFiScanSingleAccessPoint._mac.getter()
{
  return MEMORY[0x24BDFD158]();
}

uint64_t ALWiFiScanSingleAccessPoint._mac.setter()
{
  return MEMORY[0x24BDFD160]();
}

uint64_t ALWiFiScanSingleAccessPoint._band.getter()
{
  return MEMORY[0x24BDFD168]();
}

uint64_t ALWiFiScanSingleAccessPoint._band.setter()
{
  return MEMORY[0x24BDFD170]();
}

uint64_t ALWiFiScanSingleAccessPoint._mode.getter()
{
  return MEMORY[0x24BDFD178]();
}

uint64_t ALWiFiScanSingleAccessPoint._mode.setter()
{
  return MEMORY[0x24BDFD180]();
}

uint64_t ALWiFiScanSingleAccessPoint._ssid.getter()
{
  return MEMORY[0x24BDFD188]();
}

uint64_t ALWiFiScanSingleAccessPoint._ssid.setter()
{
  return MEMORY[0x24BDFD190]();
}

uint64_t ALWiFiScanSingleAccessPoint._isAph.getter()
{
  return MEMORY[0x24BDFD198]();
}

uint64_t ALWiFiScanSingleAccessPoint._isAph.setter()
{
  return MEMORY[0x24BDFD1A0]();
}

uint64_t ALWiFiScanSingleAccessPoint._ageSec.getter()
{
  return MEMORY[0x24BDFD1A8]();
}

uint64_t ALWiFiScanSingleAccessPoint._ageSec.setter()
{
  return MEMORY[0x24BDFD1B0]();
}

uint64_t ALWiFiScanSingleAccessPoint._rssidB.getter()
{
  return MEMORY[0x24BDFD1B8]();
}

uint64_t ALWiFiScanSingleAccessPoint._rssidB.setter()
{
  return MEMORY[0x24BDFD1C0]();
}

uint64_t ALWiFiScanSingleAccessPoint._channel.getter()
{
  return MEMORY[0x24BDFD1C8]();
}

uint64_t ALWiFiScanSingleAccessPoint._channel.setter()
{
  return MEMORY[0x24BDFD1D0]();
}

uint64_t ALWiFiScanSingleAccessPoint._isMoving.getter()
{
  return MEMORY[0x24BDFD1D8]();
}

uint64_t ALWiFiScanSingleAccessPoint._isMoving.setter()
{
  return MEMORY[0x24BDFD1E0]();
}

uint64_t type metadata accessor for ALWiFiScanSingleAccessPoint()
{
  return MEMORY[0x24BDFD1E8]();
}

uint64_t ALWiFiScanSingleAccessPoint.init(_:)()
{
  return MEMORY[0x24BDFD1F8]();
}

uint64_t Google_Protobuf_DoubleValue.value.setter()
{
  return MEMORY[0x24BE5B9D8]();
}

uint64_t Google_Protobuf_DoubleValue.init()()
{
  return MEMORY[0x24BE5B9E8]();
}

uint64_t type metadata accessor for Google_Protobuf_DoubleValue()
{
  return MEMORY[0x24BE5B9F0]();
}

uint64_t Google_Protobuf_UInt32Value.value.setter()
{
  return MEMORY[0x24BE5BA58]();
}

uint64_t Google_Protobuf_UInt32Value.init()()
{
  return MEMORY[0x24BE5BA68]();
}

uint64_t type metadata accessor for Google_Protobuf_UInt32Value()
{
  return MEMORY[0x24BE5BA70]();
}

uint64_t UnknownStorage.traverse<A>(visitor:)()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t UnknownStorage.init()()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t type metadata accessor for UnknownStorage()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t JSONEncodingOptions.init()()
{
  return MEMORY[0x24BE5BFA8]();
}

uint64_t type metadata accessor for JSONEncodingOptions()
{
  return MEMORY[0x24BE5BFB0]();
}

uint64_t BinaryDecodingOptions.init()()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t type metadata accessor for BinaryDecodingOptions()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t ExtensionFieldValueSet.isInitialized.getter()
{
  return MEMORY[0x24BE5BFD0]();
}

uint64_t ExtensionFieldValueSet.init()()
{
  return MEMORY[0x24BE5BFD8]();
}

uint64_t type metadata accessor for ExtensionFieldValueSet()
{
  return MEMORY[0x24BE5BFE0]();
}

uint64_t _MessageImplementationBase._protobuf_generated_isEqualTo(other:)()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t _MessageImplementationBase.isEqualTo(message:)()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t Enum.hash(into:)()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t dispatch thunk of Decoder.decodeExtensionField(values:messageType:fieldNumber:)()
{
  return MEMORY[0x24BE5C040]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedEnumField<A>(value:)()
{
  return MEMORY[0x24BE5C058]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBoolField(value:)()
{
  return MEMORY[0x24BE5C060]();
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)()
{
  return MEMORY[0x24BE5C070]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)()
{
  return MEMORY[0x24BE5C090]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBytesField(value:)()
{
  return MEMORY[0x24BE5C0A0]();
}

uint64_t dispatch thunk of Decoder.decodeSingularFloatField(value:)()
{
  return MEMORY[0x24BE5C0B0]();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt32Field(value:)()
{
  return MEMORY[0x24BE5C0C0]();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt64Field(value:)()
{
  return MEMORY[0x24BE5C0D0]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedDoubleField(value:)()
{
  return MEMORY[0x24BE5C0E0]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)()
{
  return MEMORY[0x24BE5C0F0]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedUInt64Field(value:)()
{
  return MEMORY[0x24BE5C0F8]();
}

uint64_t dispatch thunk of Decoder.decodeSingularDoubleField(value:)()
{
  return MEMORY[0x24BE5C100]();
}

uint64_t dispatch thunk of Decoder.decodeSingularSInt32Field(value:)()
{
  return MEMORY[0x24BE5C110]();
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt32Field(value:)()
{
  return MEMORY[0x24BE5C128]();
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt64Field(value:)()
{
  return MEMORY[0x24BE5C138]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t dispatch thunk of Decoder.decodeSingularFixed64Field(value:)()
{
  return MEMORY[0x24BE5C150]();
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t Message.jsonUTF8Data(options:)()
{
  return MEMORY[0x24BE5C198]();
}

uint64_t Message.isInitialized.getter()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t Message.init(serializedData:extensions:partial:options:)()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t Message.serializedData(partial:)()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t Message.debugDescription.getter()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t Message.hash(into:)()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t dispatch thunk of Visitor.visitExtensionFields(fields:start:end:)()
{
  return MEMORY[0x24BE5C220]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C268]();
}

uint64_t dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C290]();
}

uint64_t dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2A8]();
}

uint64_t dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2B0]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedDoubleField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2B8]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2C8]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedUInt64Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2D0]();
}

uint64_t dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2E0]();
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2F8]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t dispatch thunk of Visitor.visitSingularFixed64Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C308]();
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t type metadata accessor for _NameMap.NameDescription()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t _NameMap.init(dictionaryLiteral:)()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t type metadata accessor for _NameMap()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return MEMORY[0x24BEE76E8]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x24BEE78D8]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x24BDCF800]();
}

uint64_t static Dictionary._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCF810]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x24BEE0980]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x24BDCF9E0]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t String.init(data:encoding:)()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t static String.Encoding.utf8.getter()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t type metadata accessor for String.Encoding()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t static String._fromUTF8Repairing(_:)()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x24BEE0B20]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
  MEMORY[0x24BEE0BC0](a1._countAndFlagsBits, a1._object);
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t Double.write<A>(to:)()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t static os_log_type_t.default.getter()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t static OS_os_log.default.getter()
{
  return MEMORY[0x24BEE7978]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return MEMORY[0x24BDD04D0]();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return MEMORY[0x24BEE20A8]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x24BEE23A0](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x24BEE23E8]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
  MEMORY[0x24BEE2510](a1);
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE2F40]();
}

{
  return MEMORY[0x24BEE2F48]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t Error.localizedDescription.getter()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x24BEE42E0]();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t MobileGestalt_copy_hwModelStr_obj()
{
  return MEMORY[0x24BED8518]();
}

uint64_t MobileGestalt_copy_productType_obj()
{
  return MEMORY[0x24BED8548]();
}

uint64_t MobileGestalt_copy_productVersion_obj()
{
  return MEMORY[0x24BED8550]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_deviceSupportsAOP()
{
  return MEMORY[0x24BED8598]();
}

uint64_t MobileGestalt_get_deviceSupportsAOP2()
{
  return MEMORY[0x24BED85A0]();
}

uint64_t MobileGestalt_get_isVirtualDevice()
{
  return MEMORY[0x24BED8630]();
}

uint64_t MobileGestalt_get_mobileWifi()
{
  return MEMORY[0x24BED8640]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x24BDAEB48]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

