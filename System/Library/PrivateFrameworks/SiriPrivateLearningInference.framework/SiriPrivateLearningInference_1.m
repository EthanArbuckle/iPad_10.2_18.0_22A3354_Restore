void sub_213E2991C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213E2996C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_213E299D0 + 4 * byte_213EF9938[a2]))(v2 + 8);
}

uint64_t sub_213E299D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 8 && v2 == 0x8000000213F055C0)
    v3 = 1;
  else
    v3 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_213E29A6C(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  char v6;

  v2 = 0x8000000213F05540;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x8000000213F05560;
    else
      v3 = 0x8000000213F05580;
    v4 = 0xD000000000000011;
    v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1)
        v2 = 0x8000000213F05560;
      else
        v2 = 0x8000000213F05580;
      if (v4 != 0xD000000000000011)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xD00000000000001BLL;
    v3 = 0x8000000213F05540;
    v5 = a2;
    if (a2)
      goto LABEL_6;
  }
  if (v4 != 0xD00000000000001BLL)
  {
LABEL_15:
    v6 = sub_213EF3234();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v2)
    goto LABEL_15;
  v6 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_213E29B64(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E61624172657375;
  else
    v3 = 0x65746E4972657375;
  if (v2)
    v4 = 0xEE00646574636172;
  else
    v4 = 0xED000064656E6F64;
  if ((a2 & 1) != 0)
    v5 = 0x6E61624172657375;
  else
    v5 = 0x65746E4972657375;
  if ((a2 & 1) != 0)
    v6 = 0xED000064656E6F64;
  else
    v6 = 0xEE00646574636172;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_213E29C20(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213E29C70(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213E29CEC + 4 * byte_213EF9942[a2]))(0xD000000000000021);
}

uint64_t sub_213E29CEC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000021 && v1 == 0x8000000213F04780)
    v2 = 1;
  else
    v2 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_213E29DA4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213E29E10(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213E29E98 + 4 * byte_213EF994D[a2]))(0x68506E69616D6F64);
}

uint64_t sub_213E29E98(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x68506E69616D6F64 && v1 == 0xEF6C6C6143656E6FLL)
    v2 = 1;
  else
    v2 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_213E29F74(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213E29FC4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213E2A0A8 + 4 * byte_213EF995A[a2]))(0x73736563637573);
}

uint64_t sub_213E2A0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x73736563637573 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_213E2A1C0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C506C61756E616DLL;
  else
    v3 = 0x6769725469726973;
  if (v2)
    v4 = 0xEB00000000726567;
  else
    v4 = 0xEA00000000007961;
  if ((a2 & 1) != 0)
    v5 = 0x6C506C61756E616DLL;
  else
    v5 = 0x6769725469726973;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007961;
  else
    v6 = 0xEB00000000726567;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_213E2A270(uint64_t a1, uint64_t a2)
{
  return sub_213E2A27C(a1, a2, PIMSFatalErrorReason.rawValue.getter);
}

uint64_t sub_213E2A27C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_213E2A314(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213E2A378(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213E2A448 + 4 * byte_213EF996A[a2]))(0x656D7269666E6F63);
}

uint64_t sub_213E2A448(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656D7269666E6F63 && v1 == 0xE900000000000064)
    v2 = 1;
  else
    v2 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_213E2A550(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_213E2A59C(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213E2A5E8 + 4 * byte_213EF9976[a2]))(a3 + 2);
}

uint64_t sub_213E2A5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x8000000213F04880)
    v4 = 1;
  else
    v4 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_213E2A668(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656E696665646E75;
  else
    v3 = 0x6C7070612E6D6F63;
  if (v2)
    v4 = 0xEF636973754D2E65;
  else
    v4 = 0xE900000000000064;
  if ((a2 & 1) != 0)
    v5 = 0x656E696665646E75;
  else
    v5 = 0x6C7070612E6D6F63;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000064;
  else
    v6 = 0xEF636973754D2E65;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_213E2A71C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000007374;
  v3 = 0x6E657645666C6573;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7463617265746E69;
    else
      v5 = 0x6F43656369766564;
    if (v4 == 1)
      v6 = 0xEC000000736E6F69;
    else
      v6 = 0xEE0073746361746ELL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6E657645666C6573;
  v6 = 0xEA00000000007374;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x7463617265746E69;
    else
      v3 = 0x6F43656369766564;
    if (v7 == 1)
      v2 = 0xEC000000736E6F69;
    else
      v2 = 0xEE0073746361746ELL;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_213E2A85C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213E2A8A8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213E2A948 + 4 * byte_213EF9982[a2]))(0xD000000000000011);
}

uint64_t sub_213E2A948(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x8000000213F05320)
    v2 = 1;
  else
    v2 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_213E2AA20(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213E2AA68()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2AADC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213E2AB28()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E2AB80()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2ABFC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213E2AC44()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2ACB8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213E2ACF8()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2ADD4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213E2AE1C()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2AEE8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213E2AF2C()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2AF70(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213E2AFB8()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E2B04C(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B0A4()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E2B130(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B18C()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213E2B1FC()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E2B29C(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B2F4()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E2B380(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B3CC()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E2B4BC(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B510()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E2B5F0(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B644()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E2B6A4(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213E2B6FC()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213E2B7A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlusMediaSuggestion.tags.getter()
{
  type metadata accessor for PlusMediaSuggestion();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PlusMediaSuggestion()
{
  uint64_t result;

  result = qword_253F04B70;
  if (!qword_253F04B70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PlusMediaSuggestion.isCorrection.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 44));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
    if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_213E2BA04()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x213E2B9E0);
}

uint64_t sub_213E2BA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char **v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t result;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unsigned int v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;

  v12 = v11;
  v99 = a5;
  v100 = a8;
  v94 = a7;
  v95 = a9;
  v101 = a6;
  v92 = a4;
  v86 = a2;
  v90 = a1;
  v14 = (int *)type metadata accessor for PlusMediaSuggestion();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v98 = (uint64_t)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v93 = (uint64_t)&v75 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v88 = (char *)&v75 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v91 = (uint64_t)&v75 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v89 = (uint64_t)&v75 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v87 = (char *)&v75 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v75 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v75 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_213EF1D64();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v75 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = (uint64_t)a3[1];
  v80 = *a3;
  v79 = (uint64_t)a3[2];
  v78 = (uint64_t)a3[3];
  v77 = a3[4];
  v76 = a3[5];
  v40 = *((unsigned __int16 *)a3 + 24);
  sub_213DBDD88(v90, (uint64_t)v34);
  sub_213DCA7E4(v12, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
  v96 = v36;
  v97 = v35;
  if (v41 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v38, v31, v35);
    sub_213DCA828((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    sub_213DAFEC4((uint64_t)v34, &qword_253F04828);
  }
  else
  {
    sub_213DCA828((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v34, v35);
  }
  v43 = (uint64_t)v87;
  v42 = (uint64_t)v88;
  v44 = v101;
  v45 = v86;
  sub_213DCA7E4(v12, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if (v45)
  {
    v90 = v45;
  }
  else
  {
    v90 = *(_QWORD *)&v29[v14[5]];
    swift_retain();
  }
  swift_retain();
  sub_213DCA828((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  sub_213DCA7E4(v12, v43, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if (v39)
  {
    LODWORD(v86) = v40 >> 8;
    v46 = (uint64_t)v80;
    v87 = (char *)v39;
    v88 = v80;
    v47 = v79;
    v85 = v79;
    v48 = v78;
    v84 = v78;
    v83 = v77;
    v82 = v76;
    v81 = v40;
    v49 = v94;
  }
  else
  {
    v50 = (char **)(v43 + v14[6]);
    v51 = v50[1];
    v88 = *v50;
    v52 = (uint64_t)v50[2];
    v53 = (uint64_t)v50[3];
    v75 = v38;
    v54 = v42;
    v56 = v50[4];
    v55 = v50[5];
    v81 = *((unsigned __int8 *)v50 + 48);
    LODWORD(v86) = *((unsigned __int8 *)v50 + 49);
    v87 = v51;
    swift_bridgeObjectRetain();
    v84 = v53;
    v85 = v52;
    v82 = v55;
    v83 = v56;
    v44 = v101;
    v42 = v54;
    v39 = 0;
    v38 = v75;
    sub_213DB8518(v52, v53);
    v49 = v94;
    v46 = (uint64_t)v80;
    v47 = v79;
    v48 = v78;
  }
  sub_213E2FE20(v46, v39, v47, v48);
  sub_213DCA828(v43, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v57 = v89;
  sub_213DCA7E4(v12, v89, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if (v92)
  {
    v94 = v92;
  }
  else
  {
    v94 = *(_QWORD *)(v57 + v14[7]);
    swift_bridgeObjectRetain();
  }
  v59 = v99;
  v58 = v100;
  swift_bridgeObjectRetain();
  sub_213DCA828(v57, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v60 = v91;
  sub_213DCA7E4(v12, v91, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if ((v44 & 1) != 0)
    v59 = *(_QWORD *)(v60 + v14[10]);
  sub_213DCA828(v60, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  sub_213DCA7E4(v12, v42, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if (v49)
  {
    v61 = v49;
  }
  else
  {
    v61 = *(_QWORD *)(v42 + v14[11]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_213DCA828(v42, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v62 = v93;
  sub_213DCA7E4(v12, v93, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if ((a10 & 1) != 0)
    v58 = *(_QWORD *)(v62 + v14[8]);
  sub_213DCA828(v62, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v63 = v12;
  v64 = v98;
  sub_213DCA7E4(v63, v98, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if (a11)
  {
    v65 = a11;
  }
  else
  {
    v65 = *(_QWORD *)(v64 + v14[9]);
    swift_bridgeObjectRetain();
  }
  v66 = v97;
  swift_bridgeObjectRetain();
  sub_213DCA828(v64, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v68 = v95;
  v67 = v96;
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v95, v38, v66);
  *(_QWORD *)(v68 + v14[5]) = v90;
  v69 = v68 + v14[6];
  v70 = v87;
  *(_QWORD *)v69 = v88;
  *(_QWORD *)(v69 + 8) = v70;
  v71 = v84;
  *(_QWORD *)(v69 + 16) = v85;
  *(_QWORD *)(v69 + 24) = v71;
  v72 = v82;
  *(_QWORD *)(v69 + 32) = v83;
  *(_QWORD *)(v69 + 40) = v72;
  *(_BYTE *)(v69 + 48) = v81;
  *(_BYTE *)(v69 + 49) = v86;
  swift_retain();
  *(_QWORD *)(v68 + v14[7]) = sub_213E7AEC4(20, v94);
  *(_QWORD *)(v68 + v14[10]) = v59;
  *(_QWORD *)(v68 + v14[11]) = v61;
  *(_QWORD *)(v68 + v14[8]) = v58;
  v73 = sub_213E7AEE0(20, v65);
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v38, v66);
  *(_QWORD *)(v68 + v14[9]) = v73;
  return result;
}

uint64_t PlusMediaSuggestion.surfacedBefore.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 44));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
    if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_213E2C254()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x213E2C230);
}

uint64_t PlusMediaSuggestion.isNominated.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 44));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
    if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_213E2C460()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x213E2C43CLL);
}

uint64_t PlusMediaSuggestion.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s28SiriPrivateLearningInference19PlusMediaSuggestionV6entityAA0F9ReferenceVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  LOWORD(v3) = *((_WORD *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = (_WORD)v3;
  swift_bridgeObjectRetain();
  return sub_213DB8518(v6, v7);
}

uint64_t PlusMediaSuggestion.contributingGroundTruth.getter()
{
  type metadata accessor for PlusMediaSuggestion();
  return swift_bridgeObjectRetain();
}

double PlusMediaSuggestion.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 32));
}

uint64_t PlusMediaSuggestion.scoreHistory.getter()
{
  type metadata accessor for PlusMediaSuggestion();
  return swift_bridgeObjectRetain();
}

double PlusMediaSuggestion.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 40));
}

uint64_t PlusMediaSuggestion.init(id:leftHandKey:rightHandValue:fromThinGroundTruth:timestamp:tags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  __int128 v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a4;
  v30 = a5;
  v28 = a2;
  v31 = a6;
  v10 = (int *)type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213EF1D64();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a3;
  v26 = a3[1];
  v27 = v17;
  v18 = *((_QWORD *)a3 + 4);
  v19 = *((_QWORD *)a3 + 5);
  LOWORD(a3) = *((_WORD *)a3 + 24);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20(v16, a1, v13);
  v20(v12, (uint64_t)v16, v13);
  *(_QWORD *)&v12[v10[5]] = v28;
  v21 = &v12[v10[6]];
  v22 = v26;
  *(_OWORD *)v21 = v27;
  *((_OWORD *)v21 + 1) = v22;
  *((_QWORD *)v21 + 4) = v18;
  *((_QWORD *)v21 + 5) = v19;
  *((_WORD *)v21 + 24) = (_WORD)a3;
  swift_retain();
  *(_QWORD *)&v12[v10[7]] = sub_213E7AEC4(20, v29);
  *(double *)&v12[v10[10]] = a7;
  *(_QWORD *)&v12[v10[11]] = v30;
  *(_QWORD *)&v12[v10[8]] = 0;
  v23 = sub_213E7AEE0(20, MEMORY[0x24BEE4AF8]);
  swift_release();
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v16, v13);
  *(_QWORD *)&v12[v10[9]] = v23;
  sub_213DBB430((uint64_t)v12, v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(a1, v13);
}

uint64_t PlusMediaSuggestion.init(id:leftHandKey:rightHandValue:fromGroundTruth:timestamp:tags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  _BYTE v104[16];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108[8];

  v88 = a5;
  v89 = a6;
  v97 = type metadata accessor for MediaFeedbackGroundTruth();
  v12 = MEMORY[0x24BDAC7A8](v97);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v96 = (char *)&v73 - v15;
  v16 = type metadata accessor for MediaGroundTruth();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v98 = (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v73 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B718);
  MEMORY[0x24BDAC7A8](v21);
  v101 = (uint64_t)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for ThinMediaGroundTruth();
  v23 = *(_QWORD *)(v102 - 8);
  v24 = MEMORY[0x24BDAC7A8](v102);
  v100 = (uint64_t)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v73 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v95 = (uint64_t)&v73 - v29;
  v87 = type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v87);
  v86 = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_213EF1D64();
  v91 = *(_QWORD *)(v92 - 8);
  v31 = MEMORY[0x24BDAC7A8](v92);
  v84 = (char *)&v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v85 = (char *)&v73 - v33;
  v83 = *a3;
  v82 = a3[1];
  v81 = a3[2];
  v80 = a3[3];
  v79 = a3[4];
  v78 = a3[5];
  v77 = *((unsigned __int8 *)a3 + 48);
  v76 = *((unsigned __int8 *)a3 + 49);
  v34 = *(_QWORD *)(a4 + 16);
  if (!v34)
  {
    swift_bridgeObjectRelease();
    v58 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  v74 = a2;
  v75 = a1;
  v35 = a4 + 32;
  v90 = v14 + 49;
  v93 = v98 + 49;
  v73 = a4;
  swift_bridgeObjectRetain();
  v103 = MEMORY[0x24BEE4AF8];
  v94 = v20;
  v99 = v23;
  do
  {
    v36 = (uint64_t)v14;
    sub_213DAFDFC(v35, (uint64_t)v108);
    sub_213DAFDFC((uint64_t)v108, (uint64_t)&v105);
    v37 = v106;
    v38 = v107;
    __swift_project_boxed_opaque_existential_1(&v105, v106);
    (*(void (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
    v39 = v106;
    v40 = v107;
    __swift_project_boxed_opaque_existential_1(&v105, v106);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 40))(v39, v40);
    v42 = v102;
    v43 = (uint64_t *)&v28[*(int *)(v102 + 20)];
    *v43 = v41;
    v43[1] = v44;
    sub_213DAFDFC((uint64_t)&v105, (uint64_t)v104);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
    if (swift_dynamicCast())
    {
      v45 = v98;
      sub_213DBB430((uint64_t)v20, v98, (uint64_t (*)(_QWORD))type metadata accessor for MediaGroundTruth);
      v28[*(int *)(v42 + 24)] = *(_BYTE *)(v45 + *(int *)(v16 + 20));
      v46 = *(_BYTE *)(v93 + *(int *)(v16 + 32));
      sub_213DCA828(v45, (uint64_t (*)(_QWORD))type metadata accessor for MediaGroundTruth);
      v14 = (char *)v36;
LABEL_9:
      v28[*(int *)(v42 + 28)] = v46;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
      v50 = v101;
      sub_213DCA7E4((uint64_t)v28, v101, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      v51 = v99;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v50, 0, 1, v42);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v105);
      sub_213DCA828((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      goto LABEL_11;
    }
    v47 = v16;
    v48 = (uint64_t)v96;
    v49 = v97;
    v14 = (char *)v36;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_213DBB430(v48, v36, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
      v42 = v102;
      v28[*(int *)(v102 + 24)] = *(_BYTE *)(v36 + *(int *)(v49 + 20)) | 0x80;
      v46 = v90[*(int *)(v49 + 28)];
      sub_213DCA828(v36, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
      v16 = v47;
      v20 = v94;
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v105);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v28, v92);
    swift_bridgeObjectRelease();
    v51 = v99;
    v50 = v101;
    v42 = v102;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v101, 1, 1, v102);
    v16 = v47;
    v20 = v94;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v50, 1, v42) == 1)
    {
      sub_213DAFEC4(v50, &qword_254D3B718);
    }
    else
    {
      v52 = v50;
      v53 = v95;
      sub_213DBB430(v52, v95, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      sub_213DBB430(v53, v100, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v54 = v103;
      else
        v54 = sub_213DB6338(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
      v56 = *(_QWORD *)(v54 + 16);
      v55 = *(_QWORD *)(v54 + 24);
      if (v56 >= v55 >> 1)
        v54 = sub_213DB6338(v55 > 1, v56 + 1, 1, v54);
      *(_QWORD *)(v54 + 16) = v56 + 1;
      v57 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      v103 = v54;
      sub_213DBB430(v100, v54 + v57 + *(_QWORD *)(v51 + 72) * v56, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    }
    v35 += 40;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease_n();
  a1 = v75;
  a2 = v74;
  v58 = v103;
LABEL_20:
  v59 = v91;
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
  v61 = v85;
  v62 = v92;
  v60(v85, a1, v92);
  v63 = v84;
  v60(v84, (uint64_t)v61, v62);
  v64 = (uint64_t)v86;
  v60(v86, (uint64_t)v63, v62);
  v65 = (int *)v87;
  *(_QWORD *)(v64 + *(int *)(v87 + 20)) = a2;
  v66 = v64 + v65[6];
  v67 = v82;
  *(_QWORD *)v66 = v83;
  *(_QWORD *)(v66 + 8) = v67;
  v68 = v80;
  *(_QWORD *)(v66 + 16) = v81;
  *(_QWORD *)(v66 + 24) = v68;
  v69 = v78;
  *(_QWORD *)(v66 + 32) = v79;
  *(_QWORD *)(v66 + 40) = v69;
  *(_BYTE *)(v66 + 48) = v77;
  *(_BYTE *)(v66 + 49) = v76;
  swift_retain();
  *(_QWORD *)(v64 + v65[7]) = sub_213E7AEC4(20, v58);
  *(double *)(v64 + v65[10]) = a7;
  *(_QWORD *)(v64 + v65[11]) = v88;
  *(_QWORD *)(v64 + v65[8]) = 0;
  v70 = sub_213E7AEE0(20, MEMORY[0x24BEE4AF8]);
  swift_release();
  v71 = *(void (**)(char *, uint64_t))(v59 + 8);
  v71(v63, v62);
  *(_QWORD *)(v64 + v65[9]) = v70;
  sub_213DBB430(v64, v89, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v71(v61, v62);
  return ((uint64_t (*)(uint64_t, uint64_t))v71)(a1, v62);
}

BOOL PlusMediaSuggestion.hasSameMapping(as:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  BOOL v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int16 v51;
  _QWORD v52[2];
  __int128 v53;
  __int128 v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[10];
  uint64_t v77[10];
  _QWORD v78[10];
  _BYTE v79[8];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v3 = type metadata accessor for PlusMediaSuggestion();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v46 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v47 = (uint64_t)&v31 - v7;
  v8 = *(int *)(v6 + 20);
  v44 = v1;
  v45 = a1;
  v9 = *(_QWORD *)(a1 + v8);
  sub_213E6EFF8(*(_QWORD *)(v1 + v8), v76);
  v10 = v76[0];
  v11 = v76[1];
  v13 = v76[2];
  v12 = v76[3];
  v14 = v76[4];
  v32 = v76[5];
  v33 = v76[6];
  v35 = v76[7];
  v37 = v76[8];
  v39 = v76[9];
  sub_213E6EFF8(v9, v77);
  v15 = v77[0];
  v16 = v77[1];
  v17 = v77[2];
  v34 = v77[3];
  v36 = v77[4];
  v38 = v77[5];
  v40 = v77[6];
  v41 = v77[7];
  v42 = v77[8];
  v43 = v77[9];
  sub_213E033BC((uint64_t)v76, (uint64_t)v79);
  if (v80 != 1)
  {
    sub_213E033BC((uint64_t)v77, (uint64_t)v78);
    if (v78[1] != 1)
    {
      v81 = v10;
      v82 = v11;
      v83 = v13;
      v84 = v12;
      v85 = v14;
      v86 = v32;
      v87 = v33;
      v88 = v35;
      v89 = v37;
      v90 = v39;
      v56 = v15;
      v57 = v16;
      v58 = v17;
      v59 = v34;
      v60 = v36;
      v61 = v38;
      v62 = v40;
      v63 = v41;
      v64 = v42;
      v65 = v43;
      v20 = sub_213E54FC4(&v81, &v56);
      sub_213DC077C(v77);
      sub_213DC077C(v76);
      v18 = v47;
      sub_213DCA7E4(v44, v47, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      v19 = v46;
      sub_213DCA7E4(v45, v46, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      if ((v20 & 1) != 0)
        goto LABEL_7;
LABEL_8:
      sub_213DCA828(v19, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      sub_213DCA828(v18, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      return 0;
    }
LABEL_5:
    v56 = v10;
    v57 = v11;
    v58 = v13;
    v59 = v12;
    v60 = v14;
    v61 = v32;
    v62 = v33;
    v63 = v35;
    v64 = v37;
    v65 = v39;
    v66 = v15;
    v67 = v16;
    v68 = v17;
    v69 = v34;
    v70 = v36;
    v71 = v38;
    v72 = v40;
    v73 = v41;
    v74 = v42;
    v75 = v43;
    sub_213DC0674(&v56);
    v18 = v47;
    sub_213DCA7E4(v44, v47, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    v19 = v46;
    sub_213DCA7E4(v45, v46, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    goto LABEL_8;
  }
  sub_213E033BC((uint64_t)v77, (uint64_t)&v81);
  if (v82 != 1)
    goto LABEL_5;
  v18 = v47;
  sub_213DCA7E4(v44, v47, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v19 = v46;
  sub_213DCA7E4(v45, v46, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
LABEL_7:
  v21 = v18 + *(int *)(v3 + 24);
  v22 = *(_QWORD *)(v21 + 8);
  v23 = *(_WORD *)(v21 + 48);
  v52[0] = *(_QWORD *)v21;
  v52[1] = v22;
  v24 = *(_OWORD *)(v21 + 32);
  v53 = *(_OWORD *)(v21 + 16);
  v54 = v24;
  v55 = v23;
  v25 = v19 + *(int *)(v3 + 24);
  v26 = *(_QWORD *)(v25 + 8);
  v27 = *(_WORD *)(v25 + 48);
  v48[0] = *(_QWORD *)v25;
  v48[1] = v26;
  v28 = *(_OWORD *)(v25 + 32);
  v49 = *(_OWORD *)(v25 + 16);
  v50 = v28;
  v51 = v27;
  v29 = _s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v52, (uint64_t)v48);
  sub_213DCA828(v19, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  sub_213DCA828(v18, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  return v29;
}

uint64_t PlusMediaSuggestion.hasSameContent(as:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  __int128 v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  __int128 v67;
  __int128 v68;
  __int16 v69;
  _QWORD v70[2];
  __int128 v71;
  __int128 v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[10];
  uint64_t v95[10];
  _QWORD v96[10];
  char v97[8];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v3 = type metadata accessor for PlusMediaSuggestion();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v65 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v64 = (uint64_t)&v47 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v60 = (uint64_t)&v47 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v61 = (uint64_t)&v47 - v11;
  v62 = v1;
  v48 = v10;
  v12 = *(int *)(v10 + 20);
  v13 = *(_QWORD *)(v1 + v12);
  v63 = a1;
  v14 = *(_QWORD *)(a1 + v12);
  sub_213E6EFF8(v13, v94);
  v16 = v94[0];
  v15 = v94[1];
  v18 = v94[2];
  v17 = v94[3];
  v20 = v94[4];
  v19 = v94[5];
  v49 = v94[6];
  v51 = v94[7];
  v53 = v94[8];
  v55 = v94[9];
  sub_213E6EFF8(v14, v95);
  v22 = v95[0];
  v21 = v95[1];
  v23 = v95[2];
  v50 = v95[3];
  v52 = v95[4];
  v54 = v95[5];
  v56 = v95[6];
  v57 = v95[7];
  v58 = v95[8];
  v59 = v95[9];
  sub_213E033BC((uint64_t)v94, (uint64_t)v97);
  if (v98 == 1)
  {
    sub_213E033BC((uint64_t)v95, (uint64_t)&v99);
    if (v100 == 1)
    {
      v25 = v61;
      v24 = v62;
      sub_213DCA7E4(v62, v61, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      v26 = v63;
      v27 = v60;
      sub_213DCA7E4(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  sub_213E033BC((uint64_t)v95, (uint64_t)v96);
  if (v96[1] == 1)
  {
LABEL_5:
    v74 = v16;
    v75 = v15;
    v76 = v18;
    v77 = v17;
    v78 = v20;
    v79 = v19;
    v80 = v49;
    v81 = v51;
    v82 = v53;
    v83 = v55;
    v84 = v22;
    v85 = v21;
    v86 = v23;
    v87 = v50;
    v88 = v52;
    v89 = v54;
    v90 = v56;
    v91 = v57;
    v92 = v58;
    v93 = v59;
    sub_213DC0674(&v74);
    v25 = v61;
    v24 = v62;
    sub_213DCA7E4(v62, v61, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    v26 = v63;
    v27 = v60;
    sub_213DCA7E4(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
LABEL_6:
    sub_213DCA828(v27, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    sub_213DCA828(v25, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    v28 = v24;
    v29 = v64;
    sub_213DCA7E4(v28, v64, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    v30 = v26;
    v31 = v65;
    sub_213DCA7E4(v30, v65, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
LABEL_10:
    v45 = 0;
    goto LABEL_11;
  }
  v99 = v16;
  v100 = v15;
  v101 = v18;
  v102 = v17;
  v103 = v20;
  v104 = v19;
  v105 = v49;
  v106 = v51;
  v107 = v53;
  v108 = v55;
  v74 = v22;
  v75 = v21;
  v76 = v23;
  v77 = v50;
  v78 = v52;
  v79 = v54;
  v80 = v56;
  v81 = v57;
  v82 = v58;
  v83 = v59;
  v32 = sub_213E54FC4(&v99, &v74);
  sub_213DC077C(v95);
  sub_213DC077C(v94);
  v25 = v61;
  v24 = v62;
  sub_213DCA7E4(v62, v61, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v26 = v63;
  v27 = v60;
  sub_213DCA7E4(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if ((v32 & 1) == 0)
    goto LABEL_6;
LABEL_8:
  v33 = v48;
  v34 = v25 + *(int *)(v48 + 24);
  v35 = *(_QWORD *)(v34 + 8);
  v36 = *(_WORD *)(v34 + 48);
  v70[0] = *(_QWORD *)v34;
  v70[1] = v35;
  v37 = *(_OWORD *)(v34 + 32);
  v71 = *(_OWORD *)(v34 + 16);
  v72 = v37;
  v73 = v36;
  v38 = v27 + *(int *)(v48 + 24);
  v39 = *(_QWORD *)(v38 + 8);
  v40 = *(_WORD *)(v38 + 48);
  v66[0] = *(_QWORD *)v38;
  v66[1] = v39;
  v41 = *(_OWORD *)(v38 + 32);
  v67 = *(_OWORD *)(v38 + 16);
  v68 = v41;
  v69 = v40;
  v42 = _s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v70, (uint64_t)v66);
  sub_213DCA828(v27, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  sub_213DCA828(v25, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v43 = v24;
  v29 = v64;
  sub_213DCA7E4(v43, v64, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  v44 = v26;
  v31 = v65;
  sub_213DCA7E4(v44, v65, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  if (!v42)
    goto LABEL_10;
  v45 = sub_213E292F8(*(_QWORD *)(v29 + *(int *)(v33 + 28)), *(_QWORD *)(v31 + *(int *)(v33 + 28)));
LABEL_11:
  sub_213DCA828(v29, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  sub_213DCA828(v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  return v45 & 1;
}

uint64_t sub_213E2D784(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E2D7AC
                                                            + 4 * byte_213EF99FA[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_213E2D7AC()
{
  return 0x646E61487466656CLL;
}

uint64_t sub_213E2D7CC()
{
  return 0x6E61487468676972;
}

unint64_t sub_213E2D7F0()
{
  return 0xD000000000000017;
}

uint64_t sub_213E2D80C()
{
  return 0x65726F6373;
}

uint64_t sub_213E2D820()
{
  return 0x73694865726F6373;
}

uint64_t sub_213E2D840()
{
  return 0x6D617473656D6974;
}

uint64_t sub_213E2D85C()
{
  return 1936154996;
}

uint64_t sub_213E2D86C()
{
  unsigned __int8 *v0;

  return sub_213E2D784(*v0);
}

uint64_t sub_213E2D874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E2FAB0(a1, a2);
  *a3 = result;
  return result;
}

void sub_213E2D898(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_213E2D8A4()
{
  sub_213E2ED14();
  return sub_213EF3354();
}

uint64_t sub_213E2D8CC()
{
  sub_213E2ED14();
  return sub_213EF3360();
}

uint64_t PlusMediaSuggestion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  __int16 v12;
  __int128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int16 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CFD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E2ED14();
  sub_213EF3348();
  LOBYTE(v16) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for PlusMediaSuggestion();
    v16 = *(_QWORD *)(v3 + v9[5]);
    v21 = 1;
    sub_213EF1ED8();
    sub_213DB0DB4(&qword_254D3A9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    v10 = (uint64_t *)(v3 + v9[6]);
    v11 = v10[1];
    v12 = *((_WORD *)v10 + 24);
    v16 = *v10;
    v17 = v11;
    v13 = *((_OWORD *)v10 + 2);
    v18 = *((_OWORD *)v10 + 1);
    v19 = v13;
    v20 = v12;
    v21 = 2;
    sub_213DBE3D0();
    sub_213EF31BC();
    v16 = *(_QWORD *)(v3 + v9[7]);
    v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CFE8);
    sub_213E2EE80(&qword_254D3CFF0, (unint64_t *)&qword_254D3CFF8, (uint64_t)&protocol conformance descriptor for ThinMediaGroundTruth, MEMORY[0x24BEE12A0]);
    sub_213EF31BC();
    LOBYTE(v16) = 4;
    sub_213EF31A4();
    v16 = *(_QWORD *)(v3 + v9[9]);
    v21 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D000);
    sub_213E2ED58(&qword_254D3D008, &qword_254D3D010, (uint64_t)&protocol conformance descriptor for ScoreStep<A>, MEMORY[0x24BEE12A0]);
    sub_213EF31BC();
    LOBYTE(v16) = 6;
    sub_213EF31A4();
    v16 = *(_QWORD *)(v3 + v9[11]);
    v21 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D020);
    sub_213E2EDD4(&qword_254D3D028, (uint64_t (*)(void))sub_213E2EE3C, MEMORY[0x24BEE1700]);
    sub_213EF31BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PlusMediaSuggestion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int16 v35;
  char v36;

  v25 = a2;
  v4 = sub_213EF1D64();
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D038);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v30);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_213E2ED14();
  v27 = v9;
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  v13 = v7;
  LOBYTE(v31) = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_213EF3144();
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v11, v6, v4);
  sub_213EF1ED8();
  v36 = 1;
  sub_213DB0DB4(&qword_254D3A9F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  v14 = (int *)v30;
  *(_QWORD *)&v11[*(int *)(v30 + 20)] = v31;
  v36 = 2;
  sub_213DBE47C();
  sub_213EF3144();
  v15 = (uint64_t)v29;
  v16 = v32;
  v17 = v35;
  v18 = &v11[v14[6]];
  *(_QWORD *)v18 = v31;
  *((_QWORD *)v18 + 1) = v16;
  v19 = v34;
  *((_OWORD *)v18 + 1) = v33;
  *((_OWORD *)v18 + 2) = v19;
  *((_WORD *)v18 + 24) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CFE8);
  v36 = 3;
  sub_213E2EE80(&qword_254D3D040, &qword_254D3D048, (uint64_t)&protocol conformance descriptor for ThinMediaGroundTruth, MEMORY[0x24BEE12D0]);
  sub_213EF3144();
  *(_QWORD *)&v11[v14[7]] = v31;
  LOBYTE(v31) = 4;
  sub_213EF312C();
  *(_QWORD *)&v11[v14[8]] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D000);
  v36 = 5;
  sub_213E2ED58(&qword_254D3D050, &qword_254D3D058, (uint64_t)&protocol conformance descriptor for ScoreStep<A>, MEMORY[0x24BEE12D0]);
  sub_213EF3144();
  *(_QWORD *)&v11[v14[9]] = v31;
  LOBYTE(v31) = 6;
  sub_213EF312C();
  *(_QWORD *)&v11[v14[10]] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D020);
  v36 = 7;
  sub_213E2EDD4(&qword_254D3D060, (uint64_t (*)(void))sub_213E2EF48, MEMORY[0x24BEE1720]);
  v22 = v26;
  sub_213EF3144();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v22);
  *(_QWORD *)&v11[*(int *)(v30 + 44)] = v31;
  sub_213DCA7E4((uint64_t)v11, v25, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  __swift_destroy_boxed_opaque_existential_1Tm(v15);
  return sub_213DCA828((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
}

uint64_t sub_213E2E270@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PlusMediaSuggestion.init(from:)(a1, a2);
}

uint64_t sub_213E2E284(_QWORD *a1)
{
  return PlusMediaSuggestion.encode(to:)(a1);
}

uint64_t MediaReference.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t MediaReference.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF28BC();
  return sub_213EF3330();
}

uint64_t sub_213E2E324()
{
  sub_213EF32F4();
  sub_213EF28BC();
  return sub_213EF3330();
}

uint64_t sub_213E2E36C()
{
  return sub_213EF28BC();
}

uint64_t sub_213E2E374()
{
  sub_213EF32F4();
  sub_213EF28BC();
  return sub_213EF3330();
}

uint64_t _s28SiriPrivateLearningInference19PlusMediaSuggestionV11leftHandKey0A8Ontology017UsoEntity_common_F4ItemCvg_0()
{
  type metadata accessor for PlusMediaSuggestion();
  return swift_retain();
}

uint64_t PlusMediaSuggestion.init(query:entity:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a3;
  v4 = (int *)type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1CF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213EF1D64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - v16;
  v18 = *a2;
  v32 = a2[1];
  v33 = v18;
  v19 = *((_QWORD *)a2 + 4);
  v30 = *((_QWORD *)a2 + 5);
  v31 = v19;
  LOWORD(a2) = *((_WORD *)a2 + 24);
  sub_213EF1D58();
  sub_213EF1CEC();
  sub_213EF1CD4();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v22(v15, v17, v11);
  v22(v6, v15, v11);
  *(_QWORD *)&v6[v4[5]] = v34;
  v23 = &v6[v4[6]];
  v24 = v32;
  *(_OWORD *)v23 = v33;
  *((_OWORD *)v23 + 1) = v24;
  v25 = v30;
  *((_QWORD *)v23 + 4) = v31;
  *((_QWORD *)v23 + 5) = v25;
  *((_WORD *)v23 + 24) = (_WORD)a2;
  swift_retain();
  v26 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v6[v4[7]] = sub_213E7AEC4(20, MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v6[v4[10]] = v21;
  *(_QWORD *)&v6[v4[11]] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v6[v4[8]] = 0;
  v27 = sub_213E7AEE0(20, v26);
  swift_release();
  v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v15, v11);
  *(_QWORD *)&v6[v4[9]] = v27;
  sub_213DBB430((uint64_t)v6, v35, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  return ((uint64_t (*)(char *, uint64_t))v28)(v17, v11);
}

uint64_t PlusMediaSuggestion.updateScore(with:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD v19[3];
  __int16 v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v11 = *((_BYTE *)a1 + 24);
  v12 = *((_BYTE *)a1 + 25);
  v13 = *(_QWORD **)(v2 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 36));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_213DB634C(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_213DB634C((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[4 * v15];
  v16[4] = v9;
  v16[5] = v8;
  v16[6] = v10;
  *((_BYTE *)v16 + 56) = v11;
  *((_BYTE *)v16 + 57) = v12;
  v17 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_213E2BA18((uint64_t)v7, 0, (char **)v19, 0, 0, 1, 0, v8, a2, 0, (uint64_t)v13);
  swift_bridgeObjectRelease();
  return sub_213DAFEC4((uint64_t)v7, &qword_253F04828);
}

uint64_t PlusMediaSuggestion.isLibrary.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 44));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
    if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_213E2E9AC()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x213E2E988);
}

uint64_t sub_213E2E9BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 20));
  return swift_retain();
}

uint64_t sub_213E2E9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  LOWORD(v3) = *((_WORD *)v3 + 24);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_WORD *)(a2 + 48) = (_WORD)v3;
  swift_bridgeObjectRetain();
  return sub_213DB8518(v6, v7);
}

double sub_213E2EA28(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_213E2EA34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E2EA40@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  return PlusMediaSuggestion.init(query:entity:)(*a1, a2, a3);
}

uint64_t _s28SiriPrivateLearningInference19PlusMediaSuggestionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  __int128 v22;
  char v23;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  __int128 v39;
  __int128 v40;
  __int16 v41;
  _QWORD v42[2];
  __int128 v43;
  __int128 v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[10];
  uint64_t v67[10];
  _BYTE v68[8];
  uint64_t v69;
  _BYTE v70[8];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  if ((sub_213EF1D28() & 1) == 0)
    goto LABEL_14;
  v25 = (int *)type metadata accessor for PlusMediaSuggestion();
  v4 = v25[5];
  v5 = *(_QWORD *)(a2 + v4);
  sub_213E6EFF8(*(_QWORD *)(a1 + v4), v66);
  v7 = v66[0];
  v6 = v66[1];
  v9 = v66[2];
  v8 = v66[3];
  v10 = v66[4];
  v26 = v66[5];
  v27 = v66[6];
  v29 = v66[7];
  v31 = v66[8];
  v33 = v66[9];
  sub_213E6EFF8(v5, v67);
  v12 = v67[0];
  v11 = v67[1];
  v13 = v67[2];
  v28 = v67[3];
  v30 = v67[4];
  v32 = v67[5];
  v34 = v67[6];
  v35 = v67[7];
  v36 = v67[8];
  v37 = v67[9];
  sub_213E033BC((uint64_t)v66, (uint64_t)v70);
  if (v71 == 1)
  {
    sub_213E033BC((uint64_t)v67, (uint64_t)&v72);
    if (v73 == 1)
      goto LABEL_8;
    goto LABEL_6;
  }
  sub_213E033BC((uint64_t)v67, (uint64_t)v68);
  if (v69 == 1)
  {
LABEL_6:
    v46 = v7;
    v47 = v6;
    v48 = v9;
    v49 = v8;
    v50 = v10;
    v51 = v26;
    v52 = v27;
    v53 = v29;
    v54 = v31;
    v55 = v33;
    v56 = v12;
    v57 = v11;
    v58 = v13;
    v59 = v28;
    v60 = v30;
    v61 = v32;
    v62 = v34;
    v63 = v35;
    v64 = v36;
    v65 = v37;
    sub_213DC0674(&v46);
LABEL_14:
    v23 = 0;
    return v23 & 1;
  }
  v72 = v7;
  v73 = v6;
  v74 = v9;
  v75 = v8;
  v76 = v10;
  v77 = v26;
  v78 = v27;
  v79 = v29;
  v80 = v31;
  v81 = v33;
  v46 = v12;
  v47 = v11;
  v48 = v13;
  v49 = v28;
  v50 = v30;
  v51 = v32;
  v52 = v34;
  v53 = v35;
  v54 = v36;
  v55 = v37;
  v14 = sub_213E54FC4(&v72, &v46);
  sub_213DC077C(v67);
  sub_213DC077C(v66);
  if ((v14 & 1) == 0)
    goto LABEL_14;
LABEL_8:
  v15 = a1 + v25[6];
  v16 = *(_QWORD *)(v15 + 8);
  v17 = *(_WORD *)(v15 + 48);
  v42[0] = *(_QWORD *)v15;
  v42[1] = v16;
  v18 = *(_OWORD *)(v15 + 32);
  v43 = *(_OWORD *)(v15 + 16);
  v44 = v18;
  v45 = v17;
  v19 = a2 + v25[6];
  v20 = *(_QWORD *)(v19 + 8);
  v21 = *(_WORD *)(v19 + 48);
  v38[0] = *(_QWORD *)v19;
  v38[1] = v20;
  v22 = *(_OWORD *)(v19 + 32);
  v39 = *(_OWORD *)(v19 + 16);
  v40 = v22;
  v41 = v21;
  if (!_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v42, (uint64_t)v38)
    || (sub_213E292F8(*(_QWORD *)(a1 + v25[7]), *(_QWORD *)(a2 + v25[7])) & 1) == 0
    || *(double *)(a1 + v25[8]) != *(double *)(a2 + v25[8])
    || (sub_213E294D0(*(_QWORD *)(a1 + v25[9]), *(_QWORD *)(a2 + v25[9])) & 1) == 0
    || *(double *)(a1 + v25[10]) != *(double *)(a2 + v25[10]))
  {
    goto LABEL_14;
  }
  v23 = sub_213E77120(*(_QWORD *)(a1 + v25[11]), *(_QWORD *)(a2 + v25[11]));
  return v23 & 1;
}

unint64_t sub_213E2ED14()
{
  unint64_t result;

  result = qword_254D3CFE0;
  if (!qword_254D3CFE0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9C64, &type metadata for PlusMediaSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFE0);
  }
  return result;
}

uint64_t sub_213E2ED58(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3D000);
    v10 = sub_213E2EF04(a2, a3);
    result = MEMORY[0x2199C52D4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213E2EDD4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3D020);
    v8 = a2();
    result = MEMORY[0x2199C52D4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213E2EE3C()
{
  unint64_t result;

  result = qword_254D3D030;
  if (!qword_254D3D030)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaSuggestionTag, &type metadata for MediaSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3D030);
  }
  return result;
}

uint64_t sub_213E2EE80(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3CFE8);
    v10 = sub_213DB0DB4(a2, (uint64_t (*)(uint64_t))type metadata accessor for ThinMediaGroundTruth, a3);
    result = MEMORY[0x2199C52D4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213E2EF04(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3D018);
    result = MEMORY[0x2199C52D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213E2EF48()
{
  unint64_t result;

  result = qword_254D3D068;
  if (!qword_254D3D068)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaSuggestionTag, &type metadata for MediaSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3D068);
  }
  return result;
}

unint64_t sub_213E2EF8C(uint64_t a1)
{
  unint64_t result;

  result = sub_213DDF80C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_213E2EFB4()
{
  unint64_t result;

  result = qword_254D3D070;
  if (!qword_254D3D070)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReference, &type metadata for MediaReference);
    atomic_store(result, (unint64_t *)&qword_254D3D070);
  }
  return result;
}

unint64_t sub_213E2EFFC()
{
  unint64_t result;

  result = qword_254D3D078;
  if (!qword_254D3D078)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReference, &type metadata for MediaReference);
    atomic_store(result, (unint64_t *)&qword_254D3D078);
  }
  return result;
}

uint64_t sub_213E2F040()
{
  return sub_213DB0DB4(&qword_254D3B278, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], (uint64_t)&protocol conformance descriptor for UsoEntity_common_MediaItem);
}

uint64_t sub_213E2F074(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(&qword_254D3D100, (uint64_t (*)(uint64_t))type metadata accessor for PlusMediaSuggestion, (uint64_t)&protocol conformance descriptor for PlusMediaSuggestion);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlusMediaSuggestion(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(uint64_t *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *(uint64_t *)((char *)a2 + v8 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      v13 = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_OWORD *)v9 + 2) = v13;
    }
    else
    {
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v12;
      v15 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
    v16 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    v17 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlusMediaSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlusMediaSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  v11 = *(_QWORD *)(a2 + v7 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    v12 = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
    *(_OWORD *)(v8 + 32) = v12;
  }
  else
  {
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    v13 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(v8 + 48) = *(_WORD *)(v9 + 48);
  v14 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlusMediaSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_OWORD *)(v8 + 16);
  v11 = (_OWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v9 + 24);
  if (*(_QWORD *)(v8 + 24) == 1)
  {
    if (v12 == 1)
    {
      v13 = *(_OWORD *)(v9 + 32);
      *v10 = *v11;
      *(_OWORD *)(v8 + 32) = v13;
    }
    else
    {
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v12 == 1)
  {
    sub_213DBEEB0(v8 + 16);
    v14 = *(_OWORD *)(v9 + 32);
    *v10 = *v11;
    *(_OWORD *)(v8 + 32) = v14;
  }
  else
  {
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_BYTE *)(v8 + 49) = *(_BYTE *)(v9 + 49);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlusMediaSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_WORD *)(v8 + 48) = *(_WORD *)(v9 + 48);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for PlusMediaSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 24) != 1)
  {
    v11 = *(_QWORD *)(v9 + 24);
    if (v11 != 1)
    {
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_213DBEEB0(v8 + 16);
  }
  v12 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v8 + 32) = v12;
LABEL_6:
  *(_WORD *)(v8 + 48) = *(_WORD *)(v9 + 48);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v14 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_bridgeObjectRelease();
  v15 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlusMediaSuggestion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E2F76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PlusMediaSuggestion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E2F7F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_213E2F86C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlusMediaSuggestion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_213E2F958 + 4 * byte_213EF9A0F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_213E2F98C + 4 * byte_213EF9A0A[v4]))();
}

uint64_t sub_213E2F98C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E2F994(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E2F99CLL);
  return result;
}

uint64_t sub_213E2F9A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E2F9B0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_213E2F9B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E2F9BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlusMediaSuggestion.CodingKeys()
{
  return &type metadata for PlusMediaSuggestion.CodingKeys;
}

unint64_t sub_213E2F9DC()
{
  unint64_t result;

  result = qword_254D3D108;
  if (!qword_254D3D108)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9C3C, &type metadata for PlusMediaSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D108);
  }
  return result;
}

unint64_t sub_213E2FA24()
{
  unint64_t result;

  result = qword_254D3D110;
  if (!qword_254D3D110)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9BAC, &type metadata for PlusMediaSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D110);
  }
  return result;
}

unint64_t sub_213E2FA6C()
{
  unint64_t result;

  result = qword_254D3D118;
  if (!qword_254D3D118)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9BD4, &type metadata for PlusMediaSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D118);
  }
  return result;
}

uint64_t sub_213E2FAB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E61487466656CLL && a2 == 0xEB0000000079654BLL || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E61487468676972 && a2 == 0xEE0065756C615664 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000213F07440 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73694865726F6373 && a2 == 0xEC00000079726F74 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_213E2FE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_213DB8518(a3, a4);
  }
  return result;
}

uint64_t sub_213E2FE70(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_213DCD0C8(v7 > 1, v8 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *InferenceDataCompliance.__allocating_init()()
{
  _QWORD *v0;

  v0 = (_QWORD *)swift_allocObject();
  v0[3] = sub_213DCB55C(MEMORY[0x24BEE4AF8]);
  v0[4] = 50;
  v0[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  return v0;
}

_QWORD *InferenceDataCompliance.init()()
{
  _QWORD *v0;

  v0[3] = sub_213DCB55C(MEMORY[0x24BEE4AF8]);
  v0[4] = 50;
  v0[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  return v0;
}

id sub_213E2FFE8()
{
  uint64_t v0;
  void *v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF8CA0;
  v2 = (void *)*MEMORY[0x24BDBA2E0];
  v3 = v0;
  *(_QWORD *)(v0 + 32) = *MEMORY[0x24BDBA2E0];
  sub_213EF2A54();
  qword_254D3D120 = v3;
  return v2;
}

uint64_t sub_213E30054(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  int64_t v41;
  uint64_t v42;

  v2 = v1;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  v6 = sub_213E2FE70(v5);
  swift_bridgeObjectRelease();
  v7 = sub_213DDDEB8(v6);
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
LABEL_36:
    swift_once();
  v8 = sub_213EF2724();
  __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v9 = sub_213EF270C();
  v10 = sub_213EF2C94();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 134217984;
    v42 = *(_QWORD *)(v7 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v9, v10, "Evaluating %ld PICS contact references for non existent contact ids.", v11, 0xCu);
    MEMORY[0x2199C53C4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v12 = 0;
  v13 = v7 + 56;
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 56);
  v41 = (unint64_t)(v14 + 63) >> 6;
  v38 = v7;
  v39 = v7 + 56;
  while (v16)
  {
    v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v18 = v17 | (v12 << 6);
LABEL_21:
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    v24 = *v22;
    v23 = v22[1];
    swift_bridgeObjectRetain();
    if ((sub_213E31C2C(v24, v23) & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v25 = sub_213EF270C();
      v26 = sub_213EF2C94();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = v2;
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v42 = v29;
        *(_DWORD *)v28 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v28 + 4) = sub_213DB0570(v24, v23, &v42);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213DAB000, v25, v26, "PICS referenced contactId %s has been deleted. Deleting all PICS referencing this contact.", (uint8_t *)v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v29, -1, -1);
        v30 = v28;
        v2 = v27;
        v7 = v38;
        MEMORY[0x2199C53C4](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v31 = a1[3];
      v32 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v31);
      v33 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 72))(v24, v23, v31, v32);
      swift_bridgeObjectRelease();
      v34 = sub_213EF270C();
      v35 = sub_213EF2C94();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        *(_DWORD *)v36 = 134217984;
        *(_QWORD *)(v36 + 4) = v33;
        _os_log_impl(&dword_213DAB000, v34, v35, "%ld PICS deleted due to expired contact references", (uint8_t *)v36, 0xCu);
        MEMORY[0x2199C53C4](v36, -1, -1);
      }

      v13 = v39;
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v12 >= v41)
    return swift_release();
  v20 = *(_QWORD *)(v13 + 8 * v12);
  if (v20)
  {
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_21;
  }
  v21 = v12 + 1;
  if (v12 + 1 >= v41)
    return swift_release();
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
    goto LABEL_19;
  v21 = v12 + 2;
  if (v12 + 2 >= v41)
    return swift_release();
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
LABEL_19:
    v12 = v21;
    goto LABEL_20;
  }
  v21 = v12 + 3;
  if (v12 + 3 < v41)
  {
    v20 = *(_QWORD *)(v13 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v12 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_35;
        if (v12 >= v41)
          return swift_release();
        v20 = *(_QWORD *)(v13 + 8 * v12);
        ++v21;
        if (v20)
          goto LABEL_20;
      }
    }
    goto LABEL_19;
  }
  return swift_release();
}

uint64_t sub_213E30518(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t result;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;

  v3 = sub_213EF1D64();
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v82 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v83 = (char *)v79 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v84 = (char *)v79 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v85 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (char *)v79 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v87 = (char *)v79 - v14;
  KeyPath = swift_getKeyPath();
  v90 = (char *)MEMORY[0x24BEE4AF8];
  v16 = type metadata accessor for PhoneCallGroundTruth();
  v17 = 0;
  do
  {
    v18 = (void *)MEMORY[0x2199C4E6C]();
    v19 = a1[3];
    v20 = a1[4];
    v21 = __swift_project_boxed_opaque_existential_1(a1, v19);
    v22 = sub_213DB0DB4((unint64_t *)&qword_253F04BD0, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&protocol conformance descriptor for PhoneCallGroundTruth);
    v23 = v19;
    v24 = v21;
    v25 = InferredGroundTruthStore.readTypedGroundTruth<A>(_:limit:offset:)(v16, 50, v17, v23, v16, v20, v22);
    if (__OFADD__(v17, 50))
    {
      __break(1u);
      goto LABEL_33;
    }
    v26 = v25;
    v1 = *(_QWORD *)(v25 + 16);
    v27 = v89;
    swift_retain();
    swift_retain();
    v28 = sub_213E32710(v26, v27, KeyPath, (uint64_t (*)(_QWORD))type metadata accessor for PhoneCallGroundTruth);
    swift_release();
    swift_release();
    sub_213DB4C88(v28);
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v18);
    v17 += 50;
  }
  while (v1);
  v29 = *((_QWORD *)v90 + 2);
  v79[1] = v90;
  if (v29)
  {
    v30 = v80;
    v31 = &v90[(*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80)];
    v32 = *(_QWORD *)(v80 + 72);
    v33 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    swift_bridgeObjectRetain_n();
    v1 = v81;
    v34 = v87;
    while (1)
    {
      v33(v34, v31, v1);
      v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
      v88(v34, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v1) == 1)
        break;
      v35 = v34;
      v36 = (uint64_t)v84;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v84, v35, v1);
      sub_213E32150(v36, a1);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v36, v1);
      v31 += v32;
      --v29;
      v34 = v87;
      if (!v29)
        goto LABEL_10;
    }
  }
  else
  {
    v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
    swift_bridgeObjectRetain_n();
    v1 = v81;
    v34 = v87;
LABEL_10:
    v88(v34, 1, 1, v1);
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
  v37 = swift_getKeyPath();
  v90 = (char *)MEMORY[0x24BEE4AF8];
  v38 = type metadata accessor for MessagesGroundTruth();
  v21 = 0;
  while (1)
  {
    v39 = (void *)MEMORY[0x2199C4E6C]();
    v40 = a1[3];
    v41 = a1[4];
    v42 = __swift_project_boxed_opaque_existential_1(a1, v40);
    v43 = sub_213DB0DB4((unint64_t *)&qword_253F04B48, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&protocol conformance descriptor for MessagesGroundTruth);
    v44 = v40;
    v24 = v42;
    v45 = InferredGroundTruthStore.readTypedGroundTruth<A>(_:limit:offset:)(v38, 50, (uint64_t)v21, v44, v38, v41, v43);
    if (__OFADD__(v21, 50))
      break;
    v46 = v45;
    v1 = *(_QWORD *)(v45 + 16);
    v47 = v89;
    swift_retain();
    swift_retain();
    v48 = sub_213E32710(v46, v47, v37, (uint64_t (*)(_QWORD))type metadata accessor for MessagesGroundTruth);
    swift_release();
    swift_release();
    sub_213DB4C88(v48);
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v39);
    v21 = (_QWORD *)((char *)v21 + 50);
    if (!v1)
    {
      v49 = *((_QWORD *)v90 + 2);
      v87 = v90;
      if (v49)
      {
        v50 = v80;
        v51 = &v90[(*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80)];
        v52 = *(_QWORD *)(v80 + 72);
        v53 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
        swift_bridgeObjectRetain_n();
        v1 = v81;
        v54 = v86;
        while (1)
        {
          v53(v54, v51, v1);
          v88(v54, 0, 1, v1);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v54, 1, v1) == 1)
            break;
          v55 = v54;
          v56 = (uint64_t)v83;
          (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v83, v55, v1);
          sub_213E32150(v56, a1);
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v56, v1);
          v51 += v52;
          --v49;
          v54 = v86;
          if (!v49)
            goto LABEL_20;
        }
      }
      else
      {
        swift_bridgeObjectRetain_n();
        v1 = v81;
        v54 = v86;
LABEL_20:
        v88(v54, 1, 1, v1);
      }
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_bridgeObjectRelease();
      v57 = swift_getKeyPath();
      v90 = (char *)MEMORY[0x24BEE4AF8];
      v58 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
      v59 = 0;
      while (1)
      {
        v21 = (_QWORD *)MEMORY[0x2199C4E6C]();
        v60 = a1[3];
        v61 = a1[4];
        v62 = __swift_project_boxed_opaque_existential_1(a1, v60);
        v63 = sub_213DB0DB4(&qword_253F04D10, (uint64_t (*)(uint64_t))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t)&protocol conformance descriptor for ContactSuggestionOutcomeGroundTruth);
        v64 = v60;
        v24 = v62;
        v65 = InferredGroundTruthStore.readTypedGroundTruth<A>(_:limit:offset:)(v58, 50, v59, v64, v58, v61, v63);
        if (__OFADD__(v59, 50))
          goto LABEL_34;
        v66 = v65;
        v1 = *(_QWORD *)(v65 + 16);
        v67 = v89;
        swift_retain();
        swift_retain();
        v68 = sub_213E32710(v66, v67, v57, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionOutcomeGroundTruth);
        swift_release();
        swift_release();
        sub_213DB4C88(v68);
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v21);
        v59 += 50;
        if (!v1)
        {
          v69 = *((_QWORD *)v90 + 2);
          v87 = v90;
          if (v69)
          {
            v70 = v80;
            v71 = &v90[(*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80)];
            v72 = *(_QWORD *)(v80 + 72);
            v73 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
            swift_bridgeObjectRetain_n();
            v74 = v81;
            v75 = v85;
            while (1)
            {
              v73(v75, v71, v74);
              v88(v75, 0, 1, v74);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v75, 1, v74) == 1)
                break;
              v76 = v75;
              v77 = (uint64_t)v82;
              (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v82, v76, v74);
              sub_213E32150(v77, a1);
              (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v77, v74);
              v71 += v72;
              --v69;
              v75 = v85;
              if (!v69)
                goto LABEL_30;
            }
          }
          else
          {
            swift_bridgeObjectRetain_n();
            v74 = v81;
            v75 = v85;
LABEL_30:
            v88(v75, 1, 1, v74);
          }
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_bridgeObjectRelease();
          return sub_213E30CEC(a1);
        }
      }
    }
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  ((void (*)(_QWORD *, uint64_t))v21[1])(v24, v1);
  swift_bridgeObjectRelease();
  __break(1u);
  ((void (*)(_QWORD *, uint64_t))v21[1])(v24, v1);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_213E30CEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;

  v2 = v1;
  v4 = sub_213EF1D64();
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BEE4AF8];
  v9 = type metadata accessor for ContactPromptGroundTruth();
  v10 = 0;
  do
  {
    v11 = (void *)MEMORY[0x2199C4E6C]();
    v12 = a1[3];
    v13 = a1[4];
    v14 = __swift_project_boxed_opaque_existential_1(a1, v12);
    v15 = sub_213DB0DB4((unint64_t *)&qword_253F04CB0, (uint64_t (*)(uint64_t))type metadata accessor for ContactPromptGroundTruth, (uint64_t)&protocol conformance descriptor for ContactPromptGroundTruth);
    v16 = InferredGroundTruthStore.readTypedGroundTruth<A>(_:limit:offset:)(v9, 50, v10, v12, v9, v13, v15);
    if (__OFADD__(v10, 50))
    {
      __break(1u);
      ((void (*)(uint64_t, uint64_t))v14[1])(v10, v4);
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    v17 = *(_QWORD *)(v16 + 16);
    sub_213E30F80(v16, v2, &v29, a1);
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v11);
    v10 += 50;
  }
  while (v17);
  v18 = *(_QWORD *)(v29 + 16);
  v25 = v29;
  if (v18)
  {
    v19 = v26;
    v20 = v29 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v27 = *(_QWORD *)(v26 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    swift_bridgeObjectRetain_n();
    v22 = (uint64_t)v28;
    while (1)
    {
      v21(v8, v20, v4);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      v23(v8, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v4) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v22, v8, v4);
      sub_213E32150(v22, a1);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v4);
      v20 += v27;
      if (!--v18)
        goto LABEL_10;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    swift_bridgeObjectRetain_n();
LABEL_10:
    v23(v8, 1, 1, v4);
  }
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E30F80(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD v101[2];
  unint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  __int128 v113;
  unint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  unint64_t v125;
  int *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134[5];

  v105 = a4;
  v114 = a3;
  v122 = a2;
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v124 = (char *)v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v112 = (char *)v101 - v9;
  v126 = (int *)type metadata accessor for ContactPromptGroundTruth();
  v10 = MEMORY[0x24BDAC7A8](v126);
  v12 = (char *)v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v104 = (uint64_t)v101 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v111 = (uint64_t)v101 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v120 = (uint64_t)v101 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v101 - v21;
  v121 = *(_QWORD *)(a1 + 16);
  if (v121)
  {
    v119 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v118 = *(_QWORD *)(v20 + 72);
    v103 = v134;
    v101[1] = a1;
    swift_bridgeObjectRetain();
    v23 = 0;
    v128 = 0;
    *(_QWORD *)&v24 = 136315138;
    v113 = v24;
    v110 = MEMORY[0x24BEE4AD8] + 8;
    v132 = 0x8000000213F06630;
    v102 = (unint64_t)&unk_213F046D0;
    v116 = v5;
    v115 = v6;
    v117 = v12;
    v123 = v22;
    v125 = (unint64_t)"$__lazy_storage_$_meCardId";
    while (1)
    {
      v127 = v23;
      sub_213E32A28(v119 + v118 * v23, (uint64_t)v22);
      v30 = v126;
      v31 = *(_QWORD *)&v22[v126[7]];
      swift_retain();
      v32 = swift_bridgeObjectRetain();
      v33 = v128;
      v34 = sub_213E3254C(v32);
      swift_bridgeObjectRelease();
      swift_release();
      v35 = (uint64_t *)&v22[v30[8]];
      v37 = *v35;
      v36 = v35[1];
      v38 = v35[3];
      v129 = v35[2];
      v130 = v37;
      v131 = v38;
      if (v36)
      {
        if (v37 == 0xD000000000000013 && v36 == (v125 | 0x8000000000000000) || (sub_213EF3234() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v62 = sub_213E31C2C(v37, v36);
          if (v33)
          {

            v33 = 0;
          }
          else if ((v62 & 1) == 0)
          {
            swift_bridgeObjectRetain();
            sub_213DB1874(v37, v36);
            v36 = v125 | 0x8000000000000000;
            v130 = 0xD000000000000013;
          }
        }
      }
      v39 = *(_QWORD *)(v34 + 16);
      if (v39 != *(_QWORD *)(v31 + 16))
        break;
      if (v39)
        v40 = v34 == v31;
      else
        v40 = 1;
      if (!v40)
      {
        v52 = (uint64_t *)(v31 + 56);
        v53 = (uint64_t *)(v34 + 56);
        while (1)
        {
          v55 = *(v53 - 1);
          v54 = *v53;
          v57 = *(v52 - 1);
          v56 = *v52;
          v58 = *(v53 - 3) == *(v52 - 3) && *(v53 - 2) == *(v52 - 2);
          if (!v58 && (sub_213EF3234() & 1) == 0)
            break;
          if (v54)
          {
            if (!v56)
              break;
            v59 = v55 == v57 && v54 == v56;
            if (!v59 && (sub_213EF3234() & 1) == 0)
              break;
          }
          else if (v56)
          {
            break;
          }
          v52 += 4;
          v53 += 4;
          if (!--v39)
            goto LABEL_17;
        }
        v128 = v33;
        v5 = v116;
        v6 = v115;
        v47 = (uint64_t)v117;
        v22 = v123;
        goto LABEL_46;
      }
LABEL_17:
      v128 = v33;
      v22 = v123;
      v41 = v120;
      sub_213E32A28((uint64_t)v123, v120);
      v42 = (uint64_t *)(v41 + v126[8]);
      v43 = *v42;
      v44 = v42[1];
      v46 = v42[2];
      v45 = v42[3];
      v47 = (uint64_t)v117;
      if (v36)
      {
        if (!v44)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_213E32A6C(v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_54:
          sub_213DB1874(v130, v36);
          v63 = v43;
          v64 = v44;
LABEL_59:
          sub_213DB1874(v63, v64);
          v5 = v116;
          v6 = v115;
          v61 = *(_QWORD *)(v34 + 16);
          if (v61)
          {
LABEL_60:
            v66 = (_QWORD *)(v34 + 40);
            while (*(v66 - 1) == 0xD000000000000013 && *v66 == v132 || (sub_213EF3234() & 1) != 0)
            {
              v66 += 4;
              if (!--v61)
                goto LABEL_66;
            }
            (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v112, v22, v5);
            v79 = v126[12];
            v80 = *(_QWORD *)&v22[v79 + 8];
            if (v80)
            {
              v107 = *(_QWORD *)&v22[v79];
              v106 = v80;
            }
            else
            {
              v107 = 0xD000000000000023;
              v106 = v102 | 0x8000000000000000;
            }
            v81 = v126;
            v82 = (uint64_t)v123;
            v83 = v123[v126[5]];
            v84 = *(_QWORD *)&v123[v126[6]];
            v85 = v126[10];
            v108 = v123[v126[9]];
            v86 = *(_QWORD *)&v123[v85];
            v109 = v123[v126[11]];
            v87 = v111;
            v88 = (unint64_t *)(v111 + v79);
            (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v111, v112, v116);
            v89 = v106;
            *v88 = v107;
            v88[1] = v89;
            *(_BYTE *)(v87 + v81[5]) = v83;
            *(_QWORD *)(v87 + v81[6]) = v84;
            *(_QWORD *)(v87 + v81[7]) = v34;
            v90 = (_QWORD *)(v87 + v81[8]);
            *v90 = v130;
            v90[1] = v36;
            v91 = v131;
            v90[2] = v129;
            v90[3] = v91;
            *(_BYTE *)(v87 + v81[9]) = v108;
            *(_QWORD *)(v87 + v81[10]) = v86;
            *(_BYTE *)(v87 + v81[11]) = v109;
            v92 = qword_253F04A88;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            if (v92 != -1)
              swift_once();
            v93 = sub_213EF2724();
            __swift_project_value_buffer(v93, (uint64_t)qword_253F08A00);
            v94 = v104;
            sub_213E32A28(v82, v104);
            v95 = sub_213EF270C();
            v96 = sub_213EF2C94();
            if (os_log_type_enabled(v95, v96))
            {
              v97 = (uint8_t *)swift_slowAlloc();
              v98 = swift_slowAlloc();
              v134[0] = v98;
              *(_DWORD *)v97 = v113;
              v99 = sub_213EF1D10();
              v133 = sub_213DB0570(v99, v100, v134);
              v22 = v123;
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              sub_213E32A6C(v94);
              _os_log_impl(&dword_213DAB000, v95, v96, "Redacting contact prompt ground truth with id=%s", v97, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v98, -1, -1);
              MEMORY[0x2199C53C4](v97, -1, -1);
            }
            else
            {
              v22 = (char *)v82;
              sub_213E32A6C(v94);
            }

            v5 = v116;
            v6 = v115;
            v25 = v105[3];
            v26 = v105[4];
            __swift_project_boxed_opaque_existential_1(v105, v25);
            v134[3] = (uint64_t)v126;
            v134[4] = sub_213DB0DB4((unint64_t *)&qword_253F04CB0, (uint64_t (*)(uint64_t))type metadata accessor for ContactPromptGroundTruth, (uint64_t)&protocol conformance descriptor for ContactPromptGroundTruth);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v134);
            v28 = v111;
            sub_213E32A28(v111, (uint64_t)boxed_opaque_existential_1);
            InferredGroundTruthStore.updateTypedGroundTruth(groundTruth:)((uint64_t)v134, v25, v26);
            sub_213E32A6C(v28);
            sub_213E32A6C((uint64_t)v22);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v134);
            v29 = v127;
            goto LABEL_5;
          }
LABEL_66:
          swift_bridgeObjectRelease();
          sub_213DB1874(v130, v36);
          if (qword_253F04A88 != -1)
            swift_once();
          v67 = sub_213EF2724();
          __swift_project_value_buffer(v67, (uint64_t)qword_253F08A00);
          sub_213E32A28((uint64_t)v22, v47);
          v68 = sub_213EF270C();
          v69 = sub_213EF2C94();
          if (os_log_type_enabled(v68, v69))
          {
            v70 = swift_slowAlloc();
            v71 = swift_slowAlloc();
            v134[0] = v71;
            *(_DWORD *)v70 = v113;
            v72 = sub_213EF1D10();
            *(_QWORD *)(v70 + 4) = sub_213DB0570(v72, v73, v134);
            swift_bridgeObjectRelease();
            sub_213E32A6C(v47);
            _os_log_impl(&dword_213DAB000, v68, v69, "Marking contact prompt ground truth id=%s for deletion due to all contacts being redacted", (uint8_t *)v70, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2199C53C4](v71, -1, -1);
            MEMORY[0x2199C53C4](v70, -1, -1);
          }
          else
          {
            sub_213E32A6C(v47);
          }

          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v124, v22, v5);
          v74 = v114;
          v75 = *v114;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v74 = v75;
          v29 = v127;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v75 = sub_213DB5B04(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
            *v114 = v75;
          }
          v78 = *(_QWORD *)(v75 + 16);
          v77 = *(_QWORD *)(v75 + 24);
          if (v78 >= v77 >> 1)
          {
            v75 = sub_213DB5B04(v77 > 1, v78 + 1, 1, v75);
            *v114 = v75;
          }
          *(_QWORD *)(v75 + 16) = v78 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v75+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v78, v124, v5);
          sub_213E32A6C((uint64_t)v22);
          goto LABEL_5;
        }
        v48 = v129;
        v49 = v130 == v43 && v36 == v44;
        if (!v49 && (sub_213EF3234() & 1) == 0)
        {
LABEL_58:
          v65 = v130;
          sub_213E05FBC(v130, v36);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_213E32A6C(v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v63 = v65;
          v64 = v36;
          goto LABEL_59;
        }
        if (v131)
        {
          if (!v45 || (v48 != v46 || v131 != v45) && (sub_213EF3234() & 1) == 0)
            goto LABEL_58;
        }
        else if (v45)
        {
          goto LABEL_58;
        }
        v50 = v130;
        sub_213E05FBC(v130, v36);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213E32A6C(v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v36;
        v6 = v115;
        v29 = v127;
      }
      else
      {
        sub_213E05FBC(v43, v44);
        sub_213E32A6C(v41);
        if (v44)
          goto LABEL_54;
        v51 = 0;
        v6 = v115;
        v29 = v127;
        v50 = v130;
      }
      sub_213DB1874(v50, v51);
      sub_213E32A6C((uint64_t)v22);
      swift_bridgeObjectRelease();
      sub_213DB1874(v50, v36);
      v5 = v116;
LABEL_5:
      v23 = v29 + 1;
      if (v23 == v121)
        return swift_bridgeObjectRelease();
    }
    v128 = v33;
    v47 = (uint64_t)v117;
    v22 = v123;
LABEL_46:
    v60 = v120;
    sub_213E32A28((uint64_t)v22, v120);
    sub_213E32A6C(v60);
    v61 = *(_QWORD *)(v34 + 16);
    if (v61)
      goto LABEL_60;
    goto LABEL_66;
  }
  return result;
}

uint64_t sub_213E31C2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  id v17;
  void *v18;
  id v19;
  void *v20;
  char v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36[7];

  v3 = v2;
  v36[6] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_213DFA220(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = *(void **)(v3 + 16);
  v12 = (void *)sub_213EF2844();
  if (qword_254D39FF8 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CA78);
  v13 = (void *)sub_213EF2A30();
  v36[0] = 0;
  v14 = objc_msgSend(v11, sel_unifiedContactWithIdentifier_keysToFetch_error_, v12, v13, v36);

  if (v14)
  {
    v15 = v36[0];

    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = *v6;
    *v6 = 0x8000000000000000;
    v10 = 1;
    sub_213E249A4(1, a1, a2, isUniquelyReferenced_nonNull_native);
    *v6 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    v17 = v36[0];
    v18 = (void *)sub_213EF1BA8();

    swift_willThrow();
    v36[0] = v18;
    v19 = v18;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
    type metadata accessor for CNError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = v33;
      sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
      sub_213EF1B78();
      if (v36[0] == (id)200)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v21 = swift_isUniquelyReferenced_nonNull_native();
        v35 = *v6;
        *v6 = 0x8000000000000000;
        sub_213E249A4(0, a1, a2, v21);
        *v6 = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        v10 = 0;
        return v10 & 1;
      }

    }
    if (qword_253F04A88 != -1)
      swift_once();
    v22 = sub_213EF2724();
    __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain();
    v23 = v18;
    swift_bridgeObjectRetain();
    v24 = v18;
    v25 = sub_213EF270C();
    v26 = sub_213EF2CA0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = (void *)swift_slowAlloc();
      v36[0] = v28;
      *(_DWORD *)v27 = 136315394;
      swift_bridgeObjectRetain();
      sub_213DB0570(a1, a2, (uint64_t *)v36);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      v29 = v18;
      v30 = sub_213EF288C();
      sub_213DB0570(v30, v31, (uint64_t *)v36);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213DAB000, v25, v26, "Error checking for existence of contactId=%s. error=%s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v28, -1, -1);
      MEMORY[0x2199C53C4](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    swift_willThrow();
  }
  return v10 & 1;
}

void sub_213E32150(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, _QWORD *);
  _QWORD *v22;
  uint8_t *v23;
  void (*v24)(char *, _QWORD *);
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v33[2];
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, _QWORD *);
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a2;
  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - v9;
  if (qword_253F04A88 != -1)
    swift_once();
  v37 = v8;
  v11 = sub_213EF2724();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v34(v10, a1, v4);
  v36 = v12;
  v13 = sub_213EF270C();
  v14 = sub_213EF2C94();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v33[0] = a1;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v33[1] = v2;
    v18 = v17;
    v40 = v17;
    *(_DWORD *)v16 = 136315138;
    v35 = (void (*)(char *, _QWORD *))(v16 + 4);
    v19 = sub_213EF1D10();
    v39 = sub_213DB0570(v19, v20, &v40);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v21 = *(void (**)(char *, _QWORD *))(v5 + 8);
    v22 = (_QWORD *)v4;
    v35 = v21;
    v21(v10, (_QWORD *)v4);
    _os_log_impl(&dword_213DAB000, v13, v14, "Deleting ground truth with id=%s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v18, -1, -1);
    v23 = v16;
    a1 = v33[0];
    MEMORY[0x2199C53C4](v23, -1, -1);
  }
  else
  {
    v24 = *(void (**)(char *, _QWORD *))(v5 + 8);
    v22 = (_QWORD *)v4;
    v35 = v24;
    v24(v10, (_QWORD *)v4);
  }

  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  if ((sub_213EF252C() & 1) == 0)
  {
    v25 = v37;
    v34(v37, a1, (uint64_t)v22);
    v26 = sub_213EF270C();
    v27 = sub_213EF2CA0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v38 = v22;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc();
      v40 = v30;
      *(_DWORD *)v29 = 136315138;
      v31 = sub_213EF1D10();
      v39 = sub_213DB0570(v31, v32, &v40);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v35(v25, v38);
      _os_log_impl(&dword_213DAB000, v26, v27, "Failed to delete ground truth id=%s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v30, -1, -1);
      MEMORY[0x2199C53C4](v29, -1, -1);
    }
    else
    {
      v35(v25, v22);
    }

  }
}

uint64_t InferenceDataCompliance.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InferenceDataCompliance.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E3254C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  void *v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_213DCD5E0(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      if (v6 == 0xD000000000000013 && v5 == 0x8000000213F06630 || (v9 = *(v4 - 1), (sub_213EF3234() & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = sub_213E31C2C(v6, v5);
        if (v15)
        {

          v15 = 0;
        }
        else
        {
          v15 = 0;
          if ((v10 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v5 = 0x8000000213F06630;
            v6 = 0xD000000000000013;
          }
        }
        v7 = v9;
      }
      v12 = *(_QWORD *)(v16 + 16);
      v11 = *(_QWORD *)(v16 + 24);
      if (v12 >= v11 >> 1)
        sub_213DCD5E0(v11 > 1, v12 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = (_QWORD *)(v16 + 32 * v12);
      v13[4] = v6;
      v13[5] = v5;
      v13[6] = v7;
      v13[7] = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_213E32710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  void *v4;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v6 = v4;
  v36 = a3;
  v33 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213EF1D64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v30 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v29 = (char *)&v28 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v17 = *(_QWORD *)(a4(0) - 8);
    v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v32 = *(_QWORD *)(v17 + 72);
    v28 = a1;
    swift_bridgeObjectRetain();
    v31 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      swift_getAtKeyPath();
      v19 = sub_213E31C2C(v34, v35);
      if (v6)
        break;
      v20 = v19;
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_6;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v22 = v29;
        v21(v29, v10, v11);
        v21(v30, v22, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v23 = v31;
        else
          v23 = sub_213DB5B04(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
          v23 = sub_213DB5B04(v24 > 1, v25 + 1, 1, v23);
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v26 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        v31 = v23;
        v21((char *)(v23 + v26 + *(_QWORD *)(v12 + 72) * v25), v30, v11);
        goto LABEL_8;
      }
LABEL_7:
      sub_213E0EC38((uint64_t)v10);
LABEL_8:
      v18 += v32;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        return v31;
      }
    }

    swift_bridgeObjectRelease();
    v6 = 0;
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_7;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for InferenceDataCompliance()
{
  return objc_opt_self();
}

uint64_t method lookup function for InferenceDataCompliance()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferenceDataCompliance.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of InferenceDataCompliance.deleteExpiredContactSuggestions(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of InferenceDataCompliance.deleteExpiredContactGroundTruthReferences(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_213E32A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContactPromptGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E32A6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContactPromptGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E32AA8()
{
  uint64_t result;

  type metadata accessor for QuickSongStopGroundTruthGenerator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D208);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3D128 = 91;
  unk_254D3D130 = 0xE100000000000000;
  return result;
}

uint64_t QuickSongStopGroundTruthGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t QuickSongStopGroundTruthGenerator.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E32B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47[40];
  _QWORD v48[5];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MediaPlayClassification();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v46 = (uint64_t)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v41 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v41 - v16;
  result = MEMORY[0x24BDAC7A8](v15);
  v45 = (uint64_t)v41 - v19;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = MEMORY[0x24BEE4AF8];
  v42 = v2;
  v43 = a1;
  if (v20)
  {
    v22 = a2 + 32;
    v41[1] = a2;
    swift_bridgeObjectRetain();
    v23 = MEMORY[0x24BEE4AF8];
    v44 = v17;
    do
    {
      sub_213DAFDFC(v22, (uint64_t)v48);
      sub_213DAFDFC((uint64_t)v48, (uint64_t)v47);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v24 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v24 ^ 1u, 1, v8);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_213DAFEC4((uint64_t)v7, &qword_254D3B568);
      }
      else
      {
        v25 = v45;
        sub_213DBB430((uint64_t)v7, v45, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        sub_213DBB430(v25, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_213DB5ADC(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
        v27 = *(_QWORD *)(v23 + 16);
        v26 = *(_QWORD *)(v23 + 24);
        if (v27 >= v26 >> 1)
          v23 = sub_213DB5ADC(v26 > 1, v27 + 1, 1, v23);
        *(_QWORD *)(v23 + 16) = v27 + 1;
        v28 = v23
            + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
            + *(_QWORD *)(v9 + 72) * v27;
        v17 = v44;
        sub_213DBB430((uint64_t)v44, v28, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
      }
      v22 += 40;
      --v20;
    }
    while (v20);
    result = swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
  v48[0] = v21;
  v29 = *(_QWORD *)(v23 + 16);
  if (v29)
  {
    v30 = 0;
    while (v30 < *(_QWORD *)(v23 + 16))
    {
      v31 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v32 = *(_QWORD *)(v9 + 72);
      sub_213DE49C0(v23 + v31 + v32 * v30, (uint64_t)v14);
      v33 = sub_213E37098();
      if (v33 == 2 || (v33 & 1) != 0)
      {
        result = sub_213DE4A04((uint64_t)v14);
      }
      else
      {
        sub_213DBB430((uint64_t)v14, v46, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        v34 = v48[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_213DCD1A0(0, *(_QWORD *)(v34 + 16) + 1, 1);
          v34 = v48[0];
        }
        v36 = *(_QWORD *)(v34 + 16);
        v35 = *(_QWORD *)(v34 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_213DCD1A0(v35 > 1, v36 + 1, 1);
          v34 = v48[0];
        }
        *(_QWORD *)(v34 + 16) = v36 + 1;
        result = sub_213DBB430(v46, v34 + v31 + v36 * v32, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
      }
      if (v29 == ++v30)
        goto LABEL_25;
    }
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    v37 = v48[0];
    v38 = v42;
    swift_retain();
    v39 = v43;
    swift_bridgeObjectRetain();
    v40 = sub_213E338A4(v37, v38, v39);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v40;
  }
  return result;
}

uint64_t sub_213E32F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  os_log_type_t v30;
  const char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  os_log_type_t v39;
  const char *v40;
  uint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  int *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _UNKNOWN **v78;
  uint64_t v79;
  unsigned __int16 v80;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213E37098();
  if (v13 == 2 || (v13 & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v32 = sub_213EF2724();
    __swift_project_value_buffer(v32, (uint64_t)qword_253F08A00);
    v33 = sub_213EF270C();
    v34 = sub_213EF2CA0();
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_41;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v74 = v36;
    *(_DWORD *)v35 = 136315138;
    if (qword_254D3A000 != -1)
      swift_once();
    v37 = qword_254D3D128;
    v38 = unk_254D3D130;
    swift_bridgeObjectRetain();
    v71 = sub_213DB0570(v37, v38, &v74);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v39 = v34;
    v40 = "%s buildGroundTruth was passed non-quickStop MediaPlayClassification. This should never occur";
    goto LABEL_40;
  }
  if (*(_BYTE *)(a2 + 8) != 1)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v41 = sub_213EF2724();
    __swift_project_value_buffer(v41, (uint64_t)qword_253F08A00);
    v33 = sub_213EF270C();
    v42 = sub_213EF2C94();
    if (!os_log_type_enabled(v33, v42))
      goto LABEL_41;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v74 = v36;
    *(_DWORD *)v35 = 136315138;
    if (qword_254D3A000 != -1)
      swift_once();
    v43 = qword_254D3D128;
    v44 = unk_254D3D130;
    swift_bridgeObjectRetain();
    v71 = sub_213DB0570(v43, v44, &v74);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v39 = v42;
    v40 = "%s Quick Song Stop was not a Siri initiated play, skipping ground truth generation";
    goto LABEL_40;
  }
  v14 = sub_213E53034(a1);
  if (!v14)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v50 = sub_213EF2724();
    __swift_project_value_buffer(v50, (uint64_t)qword_253F08A00);
    v33 = sub_213EF270C();
    v51 = sub_213EF2CA0();
    if (!os_log_type_enabled(v33, v51))
      goto LABEL_41;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v74 = v36;
    *(_DWORD *)v35 = 136315138;
    if (qword_254D3A000 != -1)
      swift_once();
    v52 = qword_254D3D128;
    v53 = unk_254D3D130;
    swift_bridgeObjectRetain();
    v71 = sub_213DB0570(v52, v53, &v74);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v39 = v51;
    v40 = "%s Could not extract USO query from session, skipping ground truth generation";
LABEL_40:
    _os_log_impl(&dword_213DAB000, v33, v39, v40, v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v36, -1, -1);
    MEMORY[0x2199C53C4](v35, -1, -1);
LABEL_41:

    goto LABEL_42;
  }
  v69 = v14;
  v70 = a3;
  Array<A>.findEvent(eventId:)(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a1, &v71);
  v15 = v72;
  if (!v72
    || (v68 = v73, v16 = v71, extractMediaReference(event:)((uint64_t)&v74), sub_213DC7B60(v16, v15), (v17 = v75) == 0))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v45 = sub_213EF2724();
    __swift_project_value_buffer(v45, (uint64_t)qword_253F08A00);
    v23 = sub_213EF270C();
    v46 = sub_213EF2CA0();
    v47 = os_log_type_enabled(v23, v46);
    a3 = v70;
    if (!v47)
      goto LABEL_33;
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v74 = v27;
    *(_DWORD *)v26 = 136315138;
    if (qword_254D3A000 != -1)
      swift_once();
    v48 = qword_254D3D128;
    v49 = unk_254D3D130;
    swift_bridgeObjectRetain();
    v71 = sub_213DB0570(v48, v49, &v74);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v30 = v46;
    v31 = "%s Could not extract referenced entity from session, skipping ground truth generation";
    goto LABEL_32;
  }
  v66 = v74;
  v67 = v76;
  v18 = v78;
  v68 = v77;
  v19 = v79;
  v20 = v80;
  v77 = type metadata accessor for MediaPlayClassification();
  v78 = &protocol witness table for MediaPlayClassification;
  v21 = __swift_allocate_boxed_opaque_existential_1(&v74);
  sub_213DE49C0(a2, (uint64_t)v21);
  Array<A>.getOriginalRequestID(for:)((uint64_t)&v74, a1, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_213DB854C(v66, v17, v67, v68);
    sub_213DAFEC4((uint64_t)v8, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v22 = sub_213EF2724();
    __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
    v23 = sub_213EF270C();
    v24 = sub_213EF2CA0();
    v25 = os_log_type_enabled(v23, v24);
    a3 = v70;
    if (!v25)
      goto LABEL_33;
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v74 = v27;
    *(_DWORD *)v26 = 136315138;
    if (qword_254D3A000 != -1)
      swift_once();
    v28 = qword_254D3D128;
    v29 = unk_254D3D130;
    swift_bridgeObjectRetain();
    v71 = sub_213DB0570(v28, v29, &v74);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v30 = v24;
    v31 = "%s Could not extract original request ID from session, skipping ground truth generation";
LABEL_32:
    _os_log_impl(&dword_213DAB000, v23, v30, v31, v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v27, -1, -1);
    MEMORY[0x2199C53C4](v26, -1, -1);
LABEL_33:

    swift_release();
LABEL_42:
    v54 = type metadata accessor for MediaFeedbackGroundTruth();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(a3, 1, 1, v54);
  }
  v65 = v20 >> 8;
  v56 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v56(v12, v8, v9);
  v57 = v70;
  sub_213EF1D58();
  v58 = type metadata accessor for MediaFeedbackGroundTruth();
  v64 = v19;
  v59 = (int *)v58;
  v60 = (char *)(v57 + *(int *)(v58 + 32));
  v56(v60, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v60, 0, 1, v9);
  *(_BYTE *)(v57 + v59[5]) = 0;
  *(_QWORD *)(v57 + v59[6]) = v69;
  v61 = v57 + v59[7];
  *(_QWORD *)v61 = v66;
  *(_QWORD *)(v61 + 8) = v17;
  v62 = v68;
  *(_QWORD *)(v61 + 16) = v67;
  *(_QWORD *)(v61 + 24) = v62;
  v63 = v64;
  *(_QWORD *)(v61 + 32) = v18;
  *(_QWORD *)(v61 + 40) = v63;
  *(_BYTE *)(v61 + 48) = v20;
  *(_BYTE *)(v61 + 49) = v65;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v59 - 1) + 56))(v57, 0, 1, v59);
}

uint64_t QuickSongStopGroundTruthGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t QuickSongStopGroundTruthGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E33884(uint64_t a1, uint64_t a2)
{
  return sub_213E32B40(a1, a2);
}

unint64_t sub_213E338A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B710);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MediaFeedbackGroundTruth();
  v8 = *(_QWORD *)(v23 - 8);
  v9 = MEMORY[0x24BDAC7A8](v23);
  v22 = (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v21[1] = v3;
  v14 = *(_QWORD *)(type metadata accessor for MediaPlayClassification() - 8);
  v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v21[0] = a1;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x24BEE4AF8];
  do
  {
    sub_213E32F64(v24, v15, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v23) == 1)
    {
      sub_213DAFEC4((uint64_t)v7, &qword_254D3B710);
    }
    else
    {
      sub_213DBB430((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
      sub_213DBB430((uint64_t)v12, v22, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_213DB65CC(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
        v17 = sub_213DB65CC(v18 > 1, v19 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v19 + 1;
      sub_213DBB430(v22, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

unint64_t sub_213E33AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3D138;
  if (!qword_254D3D138)
  {
    v1 = type metadata accessor for MediaFeedbackGroundTruth();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaFeedbackGroundTruth, v1);
    atomic_store(result, (unint64_t *)&qword_254D3D138);
  }
  return result;
}

uint64_t type metadata accessor for QuickSongStopGroundTruthGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for QuickSongStopGroundTruthGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QuickSongStopGroundTruthGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of QuickSongStopGroundTruthGenerator.generate(session:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213E33B7C(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallConnectionDuration);
}

uint64_t sub_213E33B88(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallConnectionDuration);
}

uint64_t sub_213E33BA0(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallDuration);
}

uint64_t sub_213E33BAC(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallDuration);
}

uint64_t sub_213E33BC4(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallTotalDuration);
}

uint64_t sub_213E33BD0(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallTotalDuration);
}

uint64_t PhoneCallEventFeature.CallAnswered.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t PhoneCallEventFeature.CallAnswered.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t sub_213E33CAC()
{
  type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E33CF4()
{
  type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E33D48(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallStartTimestamp);
}

uint64_t sub_213E33D54(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallStartTimestamp);
}

uint64_t PhoneCallEventFeature.CallEndTimestamp.init(value:)()
{
  return sub_213EF23C4();
}

uint64_t sub_213E33D90(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallEndTimestamp);
}

uint64_t sub_213E33D9C(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallEndTimestamp);
}

uint64_t PhoneCallEventFeature.AudioCallRoute.init(value:)()
{
  return sub_213EF23C4();
}

uint64_t PhoneCallEventFeature.AudioCallRoute.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E33DF8(uint64_t a1)
{
  return sub_213E3402C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.AudioCallRoute);
}

uint64_t sub_213E33E04(uint64_t a1)
{
  return sub_213E34080(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.AudioCallRoute);
}

uint64_t _s28SiriPrivateLearningInference21PhoneCallEventFeatureV05AudioF5RouteC5valueAEs5Int32V_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t _s28SiriPrivateLearningInference21PhoneCallEventFeatureV05AudioF5RouteC5valueAESgs5Int32VSg_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t _s28SiriPrivateLearningInference21PhoneCallEventFeatureV05AudioF5RouteC5valueAESgs5Int32VSg_tcfc_0()
{
  return sub_213EF23B8();
}

ValueMetadata *type metadata accessor for PhoneCallEventFeature()
{
  return &type metadata for PhoneCallEventFeature;
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallConnectionDuration(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D210);
}

uint64_t sub_213E33EFC()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33F08()
{
  return type metadata accessor for PhoneCallEventFeature.CallConnectionDuration(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallDuration(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D260);
}

uint64_t sub_213E33F24()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33F30()
{
  return type metadata accessor for PhoneCallEventFeature.CallDuration(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallTotalDuration(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D2B0);
}

uint64_t sub_213E33F4C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33F58()
{
  return type metadata accessor for PhoneCallEventFeature.CallTotalDuration(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallAnswered(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D300);
}

uint64_t sub_213E33F74()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33F80()
{
  return type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallStartTimestamp(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D350);
}

uint64_t sub_213E33F9C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33FA8()
{
  return type metadata accessor for PhoneCallEventFeature.CallStartTimestamp(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallEndTimestamp(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D3A0);
}

uint64_t sub_213E33FC4()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33FD0()
{
  return type metadata accessor for PhoneCallEventFeature.CallEndTimestamp(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.AudioCallRoute(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D3F0);
}

uint64_t sub_213E33FEC()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E33FF8()
{
  return type metadata accessor for PhoneCallEventFeature.AudioCallRoute(0);
}

uint64_t type metadata accessor for PhoneCallEventFeature.CallCapability(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3D440);
}

uint64_t sub_213E34014()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E34020(uint64_t a1)
{
  return sub_213E3402C(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallCapability);
}

uint64_t sub_213E3402C(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E34074(uint64_t a1)
{
  return sub_213E34080(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallCapability);
}

uint64_t sub_213E34080(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E340D8()
{
  return type metadata accessor for PhoneCallEventFeature.CallCapability(0);
}

uint64_t dispatch thunk of SuggestionTag.isDomainTag()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t CommonBiomeEventFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CommonBiomeEventFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E3414C()
{
  return 0;
}

uint64_t CommonBiomeEventFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CommonBiomeEventFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E34170(void **a1)
{
  return sub_213E34178(*a1);
}

uint64_t sub_213E34178(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t started;
  uint64_t v26;
  _QWORD v28[2];

  v2 = sub_213EF1CF8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v28 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v28 - v10;
  if (objc_msgSend(a1, sel_error) != 1
    || !objc_msgSend(a1, sel_eventBody))
  {
    return MEMORY[0x24BEE4AF8];
  }
  objc_msgSend(a1, sel_timestamp);
  sub_213EF1C5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_213EF9F30;
  v28[0] = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D548);
  v13 = sub_213EF288C();
  v15 = v14;
  v16 = type metadata accessor for CommonFeature.EventType(0);
  swift_allocObject();
  v28[0] = v13;
  v28[1] = v15;
  v17 = sub_213EF23C4();
  *(_QWORD *)(v12 + 56) = v16;
  *(_QWORD *)(v12 + 64) = sub_213DB196C(&qword_254D3D550, 255, type metadata accessor for CommonFeature.EventType, MEMORY[0x24BEA4F80]);
  *(_QWORD *)(v12 + 32) = v17;
  v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v18(v9, v11, v2);
  v19 = type metadata accessor for CommonFeature.OrderingTimestamp(0);
  swift_allocObject();
  v18(v6, v9, v2);
  v20 = sub_213EF23C4();
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v9, v2);
  *(_QWORD *)(v12 + 96) = v19;
  v22 = MEMORY[0x24BEA4F80];
  *(_QWORD *)(v12 + 104) = sub_213DB196C(&qword_254D3D558, 255, type metadata accessor for CommonFeature.OrderingTimestamp, MEMORY[0x24BEA4F80]);
  *(_QWORD *)(v12 + 72) = v20;
  v18(v9, v11, v2);
  sub_213EF1CD4();
  v24 = v23;
  started = type metadata accessor for CommonFeature.StartTimestamp(0);
  swift_allocObject();
  v28[0] = v24;
  v26 = sub_213EF23C4();
  v21(v9, v2);
  *(_QWORD *)(v12 + 136) = started;
  *(_QWORD *)(v12 + 144) = sub_213DB196C((unint64_t *)&unk_254D3D560, 255, type metadata accessor for CommonFeature.StartTimestamp, v22);
  *(_QWORD *)(v12 + 112) = v26;
  swift_unknownObjectRelease();
  v21(v11, v2);
  return v12;
}

uint64_t sub_213E34464(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_254D3D490, a2, (uint64_t (*)(uint64_t))type metadata accessor for CommonBiomeEventFeatureExtractor, (uint64_t)&protocol conformance descriptor for CommonBiomeEventFeatureExtractor);
}

uint64_t type metadata accessor for CommonBiomeEventFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for CommonBiomeEventFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CommonBiomeEventFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CommonBiomeEventFeatureExtractor.eventType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of CommonBiomeEventFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_213E344DC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D570);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D54E20 = 91;
  *(_QWORD *)algn_254D54E28 = 0xE100000000000000;
  return result;
}

uint64_t sub_213E34560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  int v15;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EntityPromptClassification();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  sub_213DF0F28(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_213E34CA4((uint64_t)v6);
    v14 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 28));
  }
  else
  {
    sub_213DC79FC((uint64_t)v6, (uint64_t)v13);
    v15 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 28));
    sub_213DC79FC((uint64_t)v13, (uint64_t)v11);
    if (v15 == 1)
      v14 = v11[80] ^ 1;
    else
      v14 = 0;
    sub_213DCA828((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
  }
  return v14 & 1;
}

uint64_t sub_213E346C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v30 - v8;
  if ((sub_213E34560(a1, a2) & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v10 = sub_213EF2724();
    __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
    sub_213DF0EB4(a1, (uint64_t)v9);
    v11 = sub_213EF270C();
    v12 = sub_213EF2C94();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v31 = v14;
      *(_DWORD *)v13 = 136315394;
      if (qword_254D3A008 != -1)
        swift_once();
      v15 = qword_254D54E20;
      v16 = *(_QWORD *)algn_254D54E28;
      swift_bridgeObjectRetain();
      v30 = sub_213DB0570(v15, v16, &v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v17 = sub_213EF1D10();
      v30 = sub_213DB0570(v17, v18, &v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v9, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      _os_log_impl(&dword_213DAB000, v11, v12, "%s Suggestion (%s) marked as redundant", (uint8_t *)v13, 0x16u);
      v19 = 2;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v14, -1, -1);
      MEMORY[0x2199C53C4](v13, -1, -1);

    }
    else
    {
      sub_213DCA828((uint64_t)v9, type metadata accessor for PlusContactSuggestionRuntimeSummary);

      return 2;
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v20 = sub_213EF2724();
    __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
    sub_213DF0EB4(a1, (uint64_t)v7);
    v21 = sub_213EF270C();
    v22 = sub_213EF2C94();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v31 = v24;
      *(_DWORD *)v23 = 136315394;
      if (qword_254D3A008 != -1)
        swift_once();
      v25 = qword_254D54E20;
      v26 = *(_QWORD *)algn_254D54E28;
      swift_bridgeObjectRetain();
      v30 = sub_213DB0570(v25, v26, &v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v27 = sub_213EF1D10();
      v30 = sub_213DB0570(v27, v28, &v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v7, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      _os_log_impl(&dword_213DAB000, v21, v22, "%s Suggestion (%s) marked as not redundant ", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v24, -1, -1);
      MEMORY[0x2199C53C4](v23, -1, -1);
    }
    else
    {
      sub_213DCA828((uint64_t)v7, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    }

    return 1;
  }
  return v19;
}

void *sub_213E34B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95778]), sel_init);
  if (v5)
  {
    v6 = v5;
    v7 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v8 = (void *)sub_213EF1D1C();
    v9 = objc_msgSend(v7, sel_initWithNSUUID_, v8);

    objc_msgSend(v6, sel_setSuggestionId_, v9);
    objc_msgSend(v6, sel_setContactSuggestionOutcome_, a2);
    objc_msgSend(v6, sel_setContactSuggestionRedundancyState_, a3);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v10 = sub_213EF2724();
    __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
    v11 = sub_213EF270C();
    v12 = sub_213EF2CA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_213DAB000, v11, v12, "Failed to create SELF template for PLUSSchemaPLUSContactSuggestionOutcomeReported", v13, 2u);
      MEMORY[0x2199C53C4](v13, -1, -1);
    }

    return 0;
  }
  return v6;
}

uint64_t sub_213E34CA4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E34CE4(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v30[2];
  unsigned int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v32 = *(_QWORD *)(v10 + 72);
    v30[1] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_213DF0EB4(v15, (uint64_t)v12);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
      v16 = type metadata accessor for EntityPromptClassification();
      v17 = (uint64_t)v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v33, 1, 1, v16);
      v18 = sub_213E346C0((uint64_t)v12, v17);
      sub_213E34CA4(v17);
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95778]), sel_init);
      if (v19)
      {
        v20 = v19;
        v21 = v6;
        v22 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v23 = (void *)sub_213EF1D1C();
        v24 = objc_msgSend(v22, sel_initWithNSUUID_, v23);

        objc_msgSend(v20, sel_setSuggestionId_, v24);
        v6 = v21;
        objc_msgSend(v20, sel_setContactSuggestionOutcome_, v31);
        objc_msgSend(v20, sel_setContactSuggestionRedundancyState_, v18);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v5);
        v25 = sub_213DCA828((uint64_t)v12, type metadata accessor for PlusContactSuggestionRuntimeSummary);
        MEMORY[0x2199C44C4](v25);
        if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      else
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v26 = sub_213EF2724();
        __swift_project_value_buffer(v26, (uint64_t)qword_253F08A00);
        v27 = sub_213EF270C();
        v28 = sub_213EF2CA0();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v29 = 0;
          _os_log_impl(&dword_213DAB000, v27, v28, "Failed to create SELF template for PLUSSchemaPLUSContactSuggestionOutcomeReported", v29, 2u);
          MEMORY[0x2199C53C4](v29, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_213DCA828((uint64_t)v12, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      }
      v15 += v32;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    return v34;
  }
  return result;
}

ValueMetadata *type metadata accessor for PLUSOutcomeReportedLogUtils()
{
  return &type metadata for PLUSOutcomeReportedLogUtils;
}

uint64_t sub_213E35074(uint64_t a1, uint64_t a2)
{
  return sub_213E362E8(a1, a2, &qword_254D3D5C8);
}

uint64_t static TypedGroundTruth.type.getter()
{
  swift_getMetatypeMetadata();
  return sub_213EF288C();
}

uint64_t sub_213E350AC(uint64_t a1, uint64_t a2)
{
  return sub_213E36324(a1, a2, &qword_254D3D5C8);
}

uint64_t sub_213E350BC(uint64_t a1, uint64_t a2)
{
  return sub_213E36030(a1, a2, &qword_254D3AA30, (uint64_t (*)(uint64_t))type metadata accessor for MediaGroundTruth, (uint64_t)&protocol conformance descriptor for MediaGroundTruth);
}

uint64_t TypedGroundTruth.data.getter()
{
  uint64_t v0;

  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  v0 = sub_213EF1A28();
  swift_release();
  return v0;
}

uint64_t sub_213E35178@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_213E3610C(a1, &qword_254D3AA28, (uint64_t (*)(uint64_t))type metadata accessor for MediaGroundTruth, (uint64_t)&protocol conformance descriptor for MediaGroundTruth, a2);
}

uint64_t static TypedGroundTruth.fromData(data:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  sub_213EF19F8();
  swift_allocObject();
  sub_213EF19EC();
  sub_213EF19E0();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 0, 1, a1);
}

uint64_t InferredGroundTruthStore.readTypedGroundTruth<A>(_:limit:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(a7 + 32))(a5, a7);
  type metadata accessor for AnyGroundTruth();
  sub_213DB0DB4(&qword_253F04A90, (uint64_t (*)(uint64_t))type metadata accessor for AnyGroundTruth, (uint64_t)&protocol conformance descriptor for AnyGroundTruth);
  sub_213EF2520();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E40);
  sub_213E3641C();
  v7 = sub_213EF29B8();
  swift_bridgeObjectRelease();
  return v7;
}

void InferredGroundTruthStore.updateTypedGroundTruth(groundTruth:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213E35CB4(a1, a2, a3, MEMORY[0x24BEA5120], "Failed to serialise TypedGroundTruth. Unable to update in the store");
}

uint64_t sub_213E35390@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return static TypedGroundTruth.fromData(data:)(a1, a2);
}

uint64_t AnyGroundTruth.init(payload:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = type metadata accessor for AnyGroundTruth();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
  if (v11 >> 60 == 15)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  }
  else
  {
    v13 = v10;
    v14 = v11;
    v15 = (uint64_t *)&v7[*(int *)(v4 + 20)];
    *v15 = v10;
    v15[1] = v11;
    v16 = a1[3];
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    v26 = a2;
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 40);
    sub_213E0879C(v13, v14);
    v19 = v18(v16, v17);
    v20 = (uint64_t *)&v7[*(int *)(v4 + 24)];
    *v20 = v19;
    v20[1] = v21;
    v22 = a1[3];
    v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    sub_213E36528(v13, v14);
    v24 = v26;
    sub_213E364A8((uint64_t)v7, v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v24, 0, 1, v4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
}

uint64_t AnyGroundTruth.unwrapped<A>(as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v14;

  v4 = v3;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v10 = v9;
  v11 = type metadata accessor for AnyGroundTruth();
  v12 = (_QWORD *)(v4 + *(int *)(v11 + 24));
  if (v8 == *v12 && v10 == v12[1])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a3, 1, 1, a1);
  }
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a2 + 56))(*(_QWORD *)(v4 + *(int *)(v11 + 20)), *(_QWORD *)(v4 + *(int *)(v11 + 20) + 8), a1, a2);
}

uint64_t AnyGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AnyGroundTruth.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for AnyGroundTruth() + 20);
  v2 = *(_QWORD *)v1;
  sub_213E0879C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t AnyGroundTruth.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AnyGroundTruth() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_213E356F0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64616F6C796170;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_213E35738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E36CB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E3575C()
{
  sub_213E3653C();
  return sub_213EF3354();
}

uint64_t sub_213E35784()
{
  sub_213E3653C();
  return sub_213EF3360();
}

uint64_t AnyGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D580);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E3653C();
  sub_213EF3348();
  LOBYTE(v11) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for AnyGroundTruth() + 20));
    v10[15] = 1;
    sub_213E08FD0();
    sub_213EF31BC();
    LOBYTE(v11) = 2;
    sub_213EF318C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AnyGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  v20 = a2;
  v21 = sub_213EF1D64();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D590);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyGroundTruth();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E3653C();
  v24 = v7;
  v11 = v25;
  sub_213EF333C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v12 = v5;
  v13 = (uint64_t)v10;
  LOBYTE(v26) = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v21;
  sub_213EF3144();
  v25 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v22, v14);
  v27 = 1;
  sub_213E08758();
  sub_213EF3144();
  *(_OWORD *)&v10[*(int *)(v8 + 20)] = v26;
  LOBYTE(v26) = 2;
  v15 = sub_213EF3114();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v23);
  v18 = (uint64_t *)(v13 + *(int *)(v8 + 24));
  *v18 = v15;
  v18[1] = v17;
  sub_213E36580(v13, v20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_213E364EC(v13);
}

uint64_t sub_213E35C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_213E35C48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 20));
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_213E0879C(v4, v5);
}

uint64_t sub_213E35C5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213E35C70(_QWORD *a1)
{
  return AnyGroundTruth.encode(to:)(a1);
}

uint64_t InferredGroundTruthStore.readTypedGroundTruth<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return InferredGroundTruthStore.readTypedGroundTruth<A>(_:limit:offset:)(a1, -1, 0, a2, a3, a4, a5);
}

void InferredGroundTruthStore.writeTypedGroundTruth(groundTruth:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213E35CB4(a1, a2, a3, MEMORY[0x24BEA5110], "Failed to serialise TypedGroundTruth. Skipping writing to disk");
}

void sub_213E35CB4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, uint64_t, uint64_t, uint64_t), const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v23[5];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D578);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AnyGroundTruth();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DAFDFC(a1, (uint64_t)v23);
  AnyGroundTruth.init(payload:)(v23, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_213E36468((uint64_t)v12);
    if (qword_253F04A88 != -1)
      swift_once();
    v17 = sub_213EF2724();
    __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
    v18 = sub_213EF270C();
    v19 = sub_213EF2CA0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213DAB000, v18, v19, a5, v20, 2u);
      MEMORY[0x2199C53C4](v20, -1, -1);
    }

  }
  else
  {
    sub_213E364A8((uint64_t)v12, (uint64_t)v16);
    v21 = sub_213DB0DB4(&qword_253F04A90, (uint64_t (*)(uint64_t))type metadata accessor for AnyGroundTruth, (uint64_t)&protocol conformance descriptor for AnyGroundTruth);
    a4(v16, v13, v21, a2, a3);
    sub_213E364EC((uint64_t)v16);
  }
}

Swift::Void __swiftcall InferredGroundTruthStore.writeTypedGroundTruth(groundTruths:)(Swift::OpaquePointer groundTruths)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t);
  char *v8;

  v5 = sub_213E35F40(v3, v1, v2);
  v6 = *((_QWORD *)groundTruths._rawValue + 2);
  if (v6)
  {
    v7 = v5;
    v8 = (char *)groundTruths._rawValue + 32;
    swift_bridgeObjectRetain();
    do
    {
      v7((uint64_t)v8);
      v8 += 40;
      --v6;
    }
    while (v6);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void (*sub_213E35F40(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_213E36E3C;
}

uint64_t sub_213E35FFC(uint64_t a1, uint64_t a2)
{
  return sub_213E362E8(a1, a2, &qword_254D3D5C0);
}

uint64_t sub_213E36008(uint64_t a1, uint64_t a2)
{
  return sub_213E36324(a1, a2, &qword_254D3D5C0);
}

uint64_t sub_213E36014(uint64_t a1, uint64_t a2)
{
  return sub_213E36030(a1, a2, &qword_254D3D5B8, (uint64_t (*)(uint64_t))type metadata accessor for MediaFeedbackGroundTruth, (uint64_t)&protocol conformance descriptor for MediaFeedbackGroundTruth);
}

uint64_t sub_213E36030(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v8;

  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213DB0DB4(a3, a4, a5);
  v8 = sub_213EF1A28();
  swift_release();
  return v8;
}

uint64_t sub_213E360F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_213E3610C(a1, &qword_254D3D5B0, (uint64_t (*)(uint64_t))type metadata accessor for MediaFeedbackGroundTruth, (uint64_t)&protocol conformance descriptor for MediaFeedbackGroundTruth, a2);
}

uint64_t sub_213E3610C@<X0>(uint64_t a1@<X2>, unint64_t *a2@<X4>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  sub_213EF19F8();
  swift_allocObject();
  sub_213EF19EC();
  sub_213DB0DB4(a2, a3, a4);
  sub_213EF19E0();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a5, 0, 1, a1);
}

uint64_t sub_213E361EC(uint64_t a1, uint64_t a2)
{
  return sub_213E362E8(a1, a2, &qword_253F04D28);
}

uint64_t sub_213E361F8(uint64_t a1, uint64_t a2)
{
  return sub_213E36324(a1, a2, &qword_253F04D28);
}

uint64_t sub_213E36204(uint64_t a1, uint64_t a2)
{
  return sub_213E36030(a1, a2, &qword_253F04CF8, (uint64_t (*)(uint64_t))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t)&protocol conformance descriptor for ContactSuggestionOutcomeGroundTruth);
}

uint64_t sub_213E36220@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_213E3610C(a1, (unint64_t *)&unk_253F04D00, (uint64_t (*)(uint64_t))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t)&protocol conformance descriptor for ContactSuggestionOutcomeGroundTruth, a2);
}

uint64_t sub_213E3623C(uint64_t a1, uint64_t a2)
{
  return sub_213E362E8(a1, a2, &qword_253F04B60);
}

uint64_t sub_213E36248(uint64_t a1, uint64_t a2)
{
  return sub_213E36324(a1, a2, &qword_253F04B60);
}

uint64_t sub_213E36254(uint64_t a1, uint64_t a2)
{
  return sub_213E36030(a1, a2, &qword_253F04B38, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&protocol conformance descriptor for MessagesGroundTruth);
}

uint64_t sub_213E36270@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_213E3610C(a1, &qword_253F04B40, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&protocol conformance descriptor for MessagesGroundTruth, a2);
}

uint64_t sub_213E3628C(uint64_t a1, uint64_t a2)
{
  return sub_213E362E8(a1, a2, &qword_253F04BE8);
}

uint64_t sub_213E36298(uint64_t a1, uint64_t a2)
{
  return sub_213E36324(a1, a2, &qword_253F04BE8);
}

uint64_t sub_213E362A4(uint64_t a1, uint64_t a2)
{
  return sub_213E36030(a1, a2, &qword_253F04BB8, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&protocol conformance descriptor for PhoneCallGroundTruth);
}

uint64_t sub_213E362C0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_213E3610C(a1, (unint64_t *)&unk_253F04BC0, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&protocol conformance descriptor for PhoneCallGroundTruth, a2);
}

uint64_t sub_213E362DC(uint64_t a1, uint64_t a2)
{
  return sub_213E362E8(a1, a2, &qword_253F04CC8);
}

uint64_t sub_213E362E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_213EF288C();
}

uint64_t sub_213E36318(uint64_t a1, uint64_t a2)
{
  return sub_213E36324(a1, a2, &qword_253F04CC8);
}

uint64_t sub_213E36324(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_213EF288C();
}

uint64_t sub_213E36354(uint64_t a1, uint64_t a2)
{
  return sub_213E36030(a1, a2, &qword_253F04CA0, (uint64_t (*)(uint64_t))type metadata accessor for ContactPromptGroundTruth, (uint64_t)&protocol conformance descriptor for ContactPromptGroundTruth);
}

uint64_t sub_213E36370@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_213E3610C(a1, &qword_253F04CA8, (uint64_t (*)(uint64_t))type metadata accessor for ContactPromptGroundTruth, (uint64_t)&protocol conformance descriptor for ContactPromptGroundTruth, a2);
}

uint64_t _s28SiriPrivateLearningInference16TypedGroundTruthPAAE4typeSSvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for AnyGroundTruth()
{
  uint64_t result;

  result = qword_253F04AA8;
  if (!qword_253F04AA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E363EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return AnyGroundTruth.unwrapped<A>(as:)(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_213E3641C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F04E48;
  if (!qword_253F04E48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F04E40);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_253F04E48);
  }
  return result;
}

uint64_t sub_213E36468(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D578);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E364A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnyGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E364EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnyGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E36528(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_213DF8A28(a1, a2);
  return a1;
}

unint64_t sub_213E3653C()
{
  unint64_t result;

  result = qword_254D3D588;
  if (!qword_254D3D588)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA264, &type metadata for AnyGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D588);
  }
  return result;
}

uint64_t sub_213E36580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnyGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E365C4()
{
  return sub_213DB0DB4(&qword_253F04AA0, (uint64_t (*)(uint64_t))type metadata accessor for AnyGroundTruth, (uint64_t)&protocol conformance descriptor for AnyGroundTruth);
}

uint64_t sub_213E365F0()
{
  return sub_213DB0DB4(&qword_253F04A98, (uint64_t (*)(uint64_t))type metadata accessor for AnyGroundTruth, (uint64_t)&protocol conformance descriptor for AnyGroundTruth);
}

uint64_t dispatch thunk of TypedGroundTruth.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static TypedGroundTruth.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TypedGroundTruth.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TypedGroundTruth.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static TypedGroundTruth.fromData(data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t *initializeBufferWithCopyOfBuffer for AnyGroundTruth(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_213E0879C(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AnyGroundTruth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_213DF8A28(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnyGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_213E0879C(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnyGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_213E0879C(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_213DF8A28(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AnyGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for AnyGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_213DF8A28(v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E36990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E36A1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_213E36A98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E36B60 + 4 * byte_213EFA055[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E36B94 + 4 * asc_213EFA050[v4]))();
}

uint64_t sub_213E36B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E36B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E36BA4);
  return result;
}

uint64_t sub_213E36BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E36BB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E36BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E36BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyGroundTruth.CodingKeys()
{
  return &type metadata for AnyGroundTruth.CodingKeys;
}

unint64_t sub_213E36BE4()
{
  unint64_t result;

  result = qword_254D3D598;
  if (!qword_254D3D598)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA23C, &type metadata for AnyGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D598);
  }
  return result;
}

unint64_t sub_213E36C2C()
{
  unint64_t result;

  result = qword_254D3D5A0;
  if (!qword_254D3D5A0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA1AC, &type metadata for AnyGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D5A0);
  }
  return result;
}

unint64_t sub_213E36C74()
{
  unint64_t result;

  result = qword_254D3D5A8;
  if (!qword_254D3D5A8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA1D4, &type metadata for AnyGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D5A8);
  }
  return result;
}

uint64_t sub_213E36CB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_213E36DE4()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

void sub_213E36E3C(uint64_t a1)
{
  uint64_t v1;

  InferredGroundTruthStore.writeTypedGroundTruth(groundTruth:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t static EntityUtteranceComparison.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24))
    return (*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32) ^ 1) & 1;
  else
    return 0;
}

uint64_t EntityUtteranceComparison.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EntityUtteranceComparison.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityUtteranceComparison()
{
  return objc_opt_self();
}

uint64_t sub_213E36EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t MediaPlayClassification.init(totalPlayLength:siriStarted:playMediaEventId:nowPlayingEventId:playMediaTurn:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  int *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, uint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t result;

  *(double *)a7 = a8;
  *(_BYTE *)(a7 + 8) = a1;
  *(_QWORD *)(a7 + 16) = a2;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  v12 = (int *)type metadata accessor for MediaPlayClassification();
  v13 = a7 + v12[8];
  v14 = sub_213EF1D64();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16);
  v16(v13, a6, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_213EF53E0;
  v16(v18 + v17, v13, v14);
  *(_QWORD *)(a7 + v12[9]) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_213EF44B0;
  *(_QWORD *)(v19 + 32) = a2;
  *(_QWORD *)(v19 + 40) = a3;
  *(_QWORD *)(v19 + 48) = a4;
  *(_QWORD *)(v19 + 56) = a5;
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = v20(a6, v14);
  *(_QWORD *)(a7 + v12[10]) = v19;
  return result;
}

uint64_t type metadata accessor for MediaPlayClassification()
{
  uint64_t result;

  result = qword_254D3D6F8;
  if (!qword_254D3D6F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E37098()
{
  double *v0;
  double v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  os_log_type_t v9;
  const char *v10;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = *v0;
  if (*v0 == 0.0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v2 = sub_213EF2724();
    __swift_project_value_buffer(v2, (uint64_t)qword_253F08A00);
    v3 = sub_213EF270C();
    v4 = sub_213EF2CA0();
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_9;
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v17 = v6;
    *(_DWORD *)v5 = 136315138;
    if (qword_254D3A010 != -1)
      swift_once();
    v7 = qword_254D3D690;
    v8 = *(_QWORD *)algn_254D3D698;
    swift_bridgeObjectRetain();
    sub_213DB0570(v7, v8, &v17);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v9 = v4;
    v10 = "%s Encountered totalPlayLength of 0.0";
LABEL_8:
    _os_log_impl(&dword_213DAB000, v3, v9, v10, v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v6, -1, -1);
    MEMORY[0x2199C53C4](v5, -1, -1);
LABEL_9:

    return 2;
  }
  if (*v0 >= 0.0 && v1 < 30.0)
    return 0;
  if (v1 < 30.0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v13 = sub_213EF2724();
    __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
    v3 = sub_213EF270C();
    v14 = sub_213EF2CA0();
    if (!os_log_type_enabled(v3, v14))
      goto LABEL_9;
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v17 = v6;
    *(_DWORD *)v5 = 136315138;
    if (qword_254D3A010 != -1)
      swift_once();
    v15 = qword_254D3D690;
    v16 = *(_QWORD *)algn_254D3D698;
    swift_bridgeObjectRetain();
    sub_213DB0570(v15, v16, &v17);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v9 = v14;
    v10 = "%s Encountered unhandled totalPlayLength";
    goto LABEL_8;
  }
  return 1;
}

uint64_t sub_213E37384()
{
  uint64_t result;

  type metadata accessor for MediaPlayClassification();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D748);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3D690 = 91;
  *(_QWORD *)algn_254D3D698 = 0xE100000000000000;
  return result;
}

uint64_t MediaPlayClassification.referencedTurns.getter()
{
  type metadata accessor for MediaPlayClassification();
  return swift_bridgeObjectRetain();
}

uint64_t MediaPlayClassification.referencedEvents.getter()
{
  type metadata accessor for MediaPlayClassification();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E37448()
{
  return swift_bridgeObjectRetain();
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaPlayClassification(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    v9 = a3[8];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v12 = sub_213EF1D64();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MediaPlayClassification(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaPlayClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v11 = sub_213EF1D64();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaPlayClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MediaPlayClassification(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for MediaPlayClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaPlayClassification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E378C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213EF1D64();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MediaPlayClassification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E3794C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_213EF1D64();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213E379C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static InferenceLogUtils.loggerTag<A>(_:)()
{
  swift_getMetatypeMetadata();
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  return 91;
}

uint64_t sub_213E37AC8()
{
  uint64_t v0;

  v0 = sub_213EF2724();
  __swift_allocate_value_buffer(v0, qword_253F08A00);
  __swift_project_value_buffer(v0, (uint64_t)qword_253F08A00);
  return sub_213EF2718();
}

uint64_t sub_213E37B40()
{
  uint64_t result;

  sub_213EF2124();
  result = sub_213EF2118();
  qword_253F04BA0 = result;
  return result;
}

uint64_t coreAnalyticsLogger.getter()
{
  if (qword_253F04BB0 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for InferenceLogUtils()
{
  return &type metadata for InferenceLogUtils;
}

uint64_t makeNowPlayingFeatureExtractor()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for NowPlayingFeatureExtractor();
  swift_allocObject();
  v3 = sub_213EF25EC();
  a1[3] = v2;
  result = sub_213DB0DB4(&qword_254D3D750, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingFeatureExtractor, MEMORY[0x24BEA5268]);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_213E37C34()
{
  swift_allocObject();
  return sub_213EF25EC();
}

uint64_t type metadata accessor for NowPlayingFeatureExtractor()
{
  uint64_t result;

  result = qword_254D3D768;
  if (!qword_254D3D768)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E37CA0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E37CDC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  double v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t i;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81[2];
  double v82;
  unint64_t v83;
  uint64_t v84[3];
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v85 = xmmword_213EFA400;
  sub_213E386A0(a1);
  v2 = type metadata accessor for CommonFeature.UniqueIdentifier(0);
  swift_allocObject();
  v3 = sub_213EF23C4();
  v87 = v2;
  v4 = MEMORY[0x24BEA4F80];
  v88 = sub_213DB0DB4(&qword_254D3D7B8, type metadata accessor for CommonFeature.UniqueIdentifier, MEMORY[0x24BEA4F80]);
  v86 = v3;
  v5 = objc_msgSend(a1, sel_bundleID);
  *(double *)&v6 = COERCE_DOUBLE(sub_213EF2850());
  v8 = v7;

  v9 = type metadata accessor for CommonFeature.BundleID(0);
  swift_allocObject();
  v82 = *(double *)&v6;
  v83 = v8;
  v10 = sub_213EF23C4();
  v90 = v9;
  v91 = sub_213DB0DB4(&qword_254D3D7C0, type metadata accessor for CommonFeature.BundleID, v4);
  v89 = v10;
  v11 = objc_msgSend(a1, sel_playbackState);
  if ((unint64_t)v11 >= 6)
    v12 = 0;
  else
    v12 = (char)v11;
  v13 = type metadata accessor for NowPlayingFeatures.PlaybackState(0);
  swift_allocObject();
  LOBYTE(v82) = v12;
  v14 = sub_213EF23C4();
  v93 = v13;
  v94 = sub_213DB0DB4(&qword_254D3D7C8, type metadata accessor for NowPlayingFeatures.PlaybackState, v4);
  v92 = v14;
  v15 = objc_msgSend(a1, sel_title);
  *(double *)&v16 = COERCE_DOUBLE(sub_213EF2850());
  v18 = v17;

  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v19)
  {
    swift_bridgeObjectRelease();
    *(double *)&v16 = 0.0;
    v18 = 0;
  }
  v20 = type metadata accessor for NowPlayingFeatures.Title(0);
  swift_allocObject();
  v82 = *(double *)&v16;
  v83 = v18;
  v21 = sub_213EF23B8();
  v22 = v21;
  if (v21)
  {
    v21 = sub_213DB0DB4(&qword_254D3D800, type metadata accessor for NowPlayingFeatures.Title, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v20 = 0;
    v96 = 0;
    v97 = 0;
  }
  v95 = v22;
  v98 = v20;
  v99 = v21;
  v23 = objc_msgSend(a1, sel_artist);
  *(double *)&v24 = COERCE_DOUBLE(sub_213EF2850());
  v26 = v25;

  v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0)
    v27 = v24 & 0xFFFFFFFFFFFFLL;
  if (!v27)
  {
    swift_bridgeObjectRelease();
    *(double *)&v24 = 0.0;
    v26 = 0;
  }
  v28 = type metadata accessor for NowPlayingFeatures.Artist(0);
  swift_allocObject();
  v82 = *(double *)&v24;
  v83 = v26;
  v29 = sub_213EF23B8();
  v30 = v29;
  if (v29)
  {
    v29 = sub_213DB0DB4(&qword_254D3D7F8, type metadata accessor for NowPlayingFeatures.Artist, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v28 = 0;
    v101 = 0;
    v102 = 0;
  }
  v100 = v30;
  v103 = v28;
  v104 = v29;
  v31 = objc_msgSend(a1, sel_album);
  *(double *)&v32 = COERCE_DOUBLE(sub_213EF2850());
  v34 = v33;

  v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0)
    v35 = v32 & 0xFFFFFFFFFFFFLL;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    *(double *)&v32 = 0.0;
    v34 = 0;
  }
  v36 = type metadata accessor for NowPlayingFeatures.Album(0);
  swift_allocObject();
  v82 = *(double *)&v32;
  v83 = v34;
  v37 = sub_213EF23B8();
  v38 = v37;
  if (v37)
  {
    v37 = sub_213DB0DB4(&qword_254D3D7F0, type metadata accessor for NowPlayingFeatures.Album, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v36 = 0;
    v106 = 0;
    v107 = 0;
  }
  v105 = v38;
  v108 = v36;
  v109 = v37;
  v39 = objc_msgSend(a1, sel_genre);
  *(double *)&v40 = COERCE_DOUBLE(sub_213EF2850());
  v42 = v41;

  v43 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0)
    v43 = v40 & 0xFFFFFFFFFFFFLL;
  if (!v43)
  {
    swift_bridgeObjectRelease();
    *(double *)&v40 = 0.0;
    v42 = 0;
  }
  v44 = type metadata accessor for NowPlayingFeatures.Genre(0);
  swift_allocObject();
  v82 = *(double *)&v40;
  v83 = v42;
  v45 = sub_213EF23B8();
  v46 = v45;
  if (v45)
  {
    v45 = sub_213DB0DB4(&qword_254D3D7E8, type metadata accessor for NowPlayingFeatures.Genre, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v44 = 0;
    v111 = 0;
    v112 = 0;
  }
  v110 = v46;
  v113 = v44;
  v114 = v45;
  v47 = objc_msgSend(a1, sel_mediaType);
  v48 = sub_213EF2850();
  v50 = v49;

  sub_213E3848C(v48, v50, &v82);
  v51 = v82;
  v52 = v83;
  v53 = type metadata accessor for NowPlayingFeatures.MediaType(0);
  swift_allocObject();
  *(double *)v81 = v51;
  *((_QWORD *)&v81[0] + 1) = v52;
  v54 = sub_213EF23C4();
  v116 = v53;
  v55 = MEMORY[0x24BEA4F80];
  v117 = sub_213DB0DB4(&qword_254D3D7D0, type metadata accessor for NowPlayingFeatures.MediaType, MEMORY[0x24BEA4F80]);
  v115 = v54;
  v56 = (double)objc_msgSend(a1, sel_duration);
  v57 = type metadata accessor for NowPlayingFeatures.Duration(0);
  swift_allocObject();
  v82 = v56;
  v58 = sub_213EF23C4();
  v119 = v57;
  v120 = sub_213DB0DB4(&qword_254D3D7D8, type metadata accessor for NowPlayingFeatures.Duration, v55);
  v118 = v58;
  v59 = objc_msgSend(a1, sel_iTunesStoreIdentifier);
  *(double *)&v60 = COERCE_DOUBLE(sub_213EF2850());
  v62 = v61;

  v63 = HIBYTE(v62) & 0xF;
  if ((v62 & 0x2000000000000000) == 0)
    v63 = v60 & 0xFFFFFFFFFFFFLL;
  if (!v63)
  {
    swift_bridgeObjectRelease();
    *(double *)&v60 = 0.0;
    v62 = 0;
  }
  v64 = type metadata accessor for NowPlayingFeatures.ITunesStoreIdentifier(0);
  swift_allocObject();
  v82 = *(double *)&v60;
  v83 = v62;
  v65 = sub_213EF23B8();
  v66 = v65;
  if (v65)
  {
    v65 = sub_213DB0DB4(&qword_254D3D7E0, type metadata accessor for NowPlayingFeatures.ITunesStoreIdentifier, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v64 = 0;
    v123 = 0;
    v122 = 0;
  }
  v121 = v66;
  v124 = v64;
  v125 = v65;
  v84[0] = MEMORY[0x24BEE4AF8];
  for (i = 4; i != 54; i += 5)
  {
    sub_213DAFE40((uint64_t)&v84[i + 1], (uint64_t)&v82);
    sub_213DB8444((uint64_t)&v82, (uint64_t)&v78);
    if (v79)
    {
      sub_213DB0BF0(&v78, (uint64_t)v81);
      sub_213DB0BF0(v81, (uint64_t)&v78);
      v68 = (_QWORD *)v84[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v68 = sub_213DB59A4(0, v68[2] + 1, 1, v68);
        v84[0] = (uint64_t)v68;
      }
      v70 = v68[2];
      v69 = v68[3];
      if (v70 >= v69 >> 1)
        v84[0] = (uint64_t)sub_213DB59A4((_QWORD *)(v69 > 1), v70 + 1, 1, v68);
      v71 = v79;
      v72 = v80;
      v73 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
      MEMORY[0x24BDAC7A8](v73);
      v75 = (char *)&v78 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v76 + 16))(v75);
      sub_213DB7D98(v70, (uint64_t)v75, v84, v71, v72);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
    }
    else
    {
      sub_213DB848C((uint64_t)&v78);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06970);
  swift_arrayDestroy();
  return v84[0];
}

uint64_t sub_213E3848C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    v11 = 0;
    goto LABEL_14;
  }
  v6 = a1;
  result = *MEMORY[0x24BE65748];
  if (!*MEMORY[0x24BE65748])
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (sub_213EF2850() == v6 && v8 == a2)
  {
    v11 = 1;
    goto LABEL_13;
  }
  v10 = sub_213EF3234();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = 1;
    goto LABEL_14;
  }
  result = *MEMORY[0x24BE65750];
  if (!*MEMORY[0x24BE65750])
    goto LABEL_37;
  if (sub_213EF2850() == v6 && v12 == a2)
  {
    v11 = 2;
    goto LABEL_13;
  }
  v14 = sub_213EF3234();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    v11 = 2;
    goto LABEL_14;
  }
  result = *MEMORY[0x24BE65738];
  if (!*MEMORY[0x24BE65738])
    goto LABEL_38;
  if (sub_213EF2850() == v6 && v15 == a2)
  {
    v11 = 3;
    goto LABEL_13;
  }
  v16 = sub_213EF3234();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v11 = 3;
    goto LABEL_14;
  }
  result = *MEMORY[0x24BE65740];
  if (*MEMORY[0x24BE65740])
  {
    if (sub_213EF2850() != v6 || v17 != a2)
    {
      v18 = sub_213EF3234();
      result = swift_bridgeObjectRelease();
      v11 = a2;
      if ((v18 & 1) == 0)
        goto LABEL_15;
      v11 = 4;
LABEL_14:
      result = swift_bridgeObjectRelease();
      v6 = 0;
LABEL_15:
      *a3 = v6;
      a3[1] = v11;
      return result;
    }
    v11 = 4;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_213E3867C()
{
  sub_213EF25F8();
  return swift_deallocClassInstance();
}

uint64_t sub_213E38698()
{
  return type metadata accessor for NowPlayingFeatureExtractor();
}

uint64_t sub_213E386A0(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v2 = objc_msgSend(a1, sel_uniqueID);
  v3 = sub_213EF2850();
  v5 = v4;

  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = objc_msgSend(a1, sel_uniqueID);
    v8 = sub_213EF2850();

  }
  else
  {
    sub_213EF2EB0();
    sub_213EF2904();
    v9 = objc_msgSend(a1, sel_title);
    sub_213EF2850();

    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    objc_msgSend(a1, sel_absoluteTimestamp);
    sub_213EF2B8C();
    return 0;
  }
  return v8;
}

BOOL static MediaFeedbackGroundTruthSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MediaFeedbackGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MediaFeedbackGroundTruth.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaFeedbackGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for MediaFeedbackGroundTruth()
{
  uint64_t result;

  result = qword_253F06B80;
  if (!qword_253F06B80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MediaFeedbackGroundTruth.usoQuery.getter()
{
  type metadata accessor for MediaFeedbackGroundTruth();
  return swift_retain();
}

uint64_t MediaFeedbackGroundTruth.mediaReference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaFeedbackGroundTruth() + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  LOWORD(v3) = *((_WORD *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = (_WORD)v3;
  swift_bridgeObjectRetain();
  return sub_213DB8518(v6, v7);
}

uint64_t sub_213E38958()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E3897C + 4 * byte_213EFA470[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_213E3897C()
{
  return 0x656372756F73;
}

uint64_t sub_213E38990()
{
  return 0x79726575516F7375;
}

uint64_t sub_213E389A8()
{
  return 0x666552616964656DLL;
}

unint64_t sub_213E389CC()
{
  return 0xD000000000000011;
}

uint64_t sub_213E389E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E3B368(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E38A0C()
{
  sub_213E3A0FC();
  return sub_213EF3354();
}

uint64_t sub_213E38A34()
{
  sub_213E3A0FC();
  return sub_213EF3360();
}

uint64_t MediaFeedbackGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  __int16 v12;
  __int128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int16 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E3A0FC();
  sub_213EF3348();
  LOBYTE(v16) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for MediaFeedbackGroundTruth();
    LOBYTE(v16) = *(_BYTE *)(v3 + v9[5]);
    v21 = 1;
    sub_213DBDA60();
    sub_213EF31BC();
    v16 = *(_QWORD *)(v3 + v9[6]);
    v21 = 2;
    sub_213EF1ED8();
    sub_213DB0DB4(&qword_254D3A9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    v10 = (uint64_t *)(v3 + v9[7]);
    v11 = v10[1];
    v12 = *((_WORD *)v10 + 24);
    v16 = *v10;
    v17 = v11;
    v13 = *((_OWORD *)v10 + 2);
    v18 = *((_OWORD *)v10 + 1);
    v19 = v13;
    v20 = v12;
    v21 = 3;
    sub_213DBE3D0();
    sub_213EF31BC();
    LOBYTE(v16) = 4;
    sub_213EF3180();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MediaFeedbackGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;
  char v40;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_213EF1D64();
  v5 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D818);
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MediaFeedbackGroundTruth();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E3A0FC();
  v31 = v9;
  v13 = (uint64_t)v34;
  sub_213EF333C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v14 = v7;
  v34 = a1;
  v15 = (uint64_t)v12;
  LOBYTE(v35) = 0;
  v16 = sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v32;
  v19 = v30;
  v18 = v31;
  sub_213EF3144();
  v27[1] = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v33, v19);
  v40 = 1;
  sub_213DBDB2C();
  sub_213EF3144();
  v20 = v10;
  *(_BYTE *)(v15 + v10[5]) = v35;
  sub_213EF1ED8();
  v40 = 2;
  sub_213DB0DB4(&qword_254D3A9F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  *(_QWORD *)(v15 + v10[6]) = v35;
  v40 = 3;
  sub_213DBE47C();
  sub_213EF3144();
  v21 = v36;
  v22 = v39;
  v23 = v15 + v10[7];
  *(_QWORD *)v23 = v35;
  *(_QWORD *)(v23 + 8) = v21;
  v24 = v38;
  *(_OWORD *)(v23 + 16) = v37;
  *(_OWORD *)(v23 + 32) = v24;
  *(_WORD *)(v23 + 48) = v22;
  LOBYTE(v35) = 4;
  v25 = (uint64_t)v29;
  sub_213EF3108();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v17);
  sub_213DC0630(v25, v15 + v20[8], &qword_253F04828);
  sub_213E3A140(v15, v28);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  return sub_213E3A184(v15);
}

uint64_t sub_213E39138@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaFeedbackGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213E3914C(_QWORD *a1)
{
  return MediaFeedbackGroundTruth.encode(to:)(a1);
}

uint64_t MediaFeedbackGroundTruthSource.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t sub_213E39188()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6673736563637573;
  if (*v0 != 1)
    v1 = 0xD00000000000001DLL;
  if (*v0)
    return v1;
  else
    return 0x6F74536B63697571;
}

uint64_t sub_213E391F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E3B584(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E3921C()
{
  sub_213E3A1C0();
  return sub_213EF3354();
}

uint64_t sub_213E39244()
{
  sub_213E3A1C0();
  return sub_213EF3360();
}

uint64_t sub_213E3926C()
{
  sub_213E3A204();
  return sub_213EF3354();
}

uint64_t sub_213E39294()
{
  sub_213E3A204();
  return sub_213EF3360();
}

uint64_t sub_213E392BC()
{
  sub_213E3A28C();
  return sub_213EF3354();
}

uint64_t sub_213E392E4()
{
  sub_213E3A28C();
  return sub_213EF3360();
}

uint64_t sub_213E3930C()
{
  sub_213E3A248();
  return sub_213EF3354();
}

uint64_t sub_213E39334()
{
  sub_213E3A248();
  return sub_213EF3360();
}

uint64_t MediaFeedbackGroundTruthSource.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D820);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D828);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D830);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D838);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E3A1C0();
  sub_213EF3348();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_213E3A248();
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_213E3A204();
      v16 = v21;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_213E3A28C();
    sub_213EF3168();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t MediaFeedbackGroundTruthSource.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t MediaFeedbackGroundTruthSource.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D860);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D868);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D870);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D878);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E3A1C0();
  v13 = v41;
  sub_213EF333C();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_213EF3150();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_213EF2F34();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v25 = &type metadata for MediaFeedbackGroundTruthSource;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_213E3A248();
      v20 = v9;
      sub_213EF30E4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_213E3A204();
      v28 = v15;
      sub_213EF30E4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_213E3A28C();
    sub_213EF30E4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1Tm(v26);
}

uint64_t sub_213E39A48@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MediaFeedbackGroundTruthSource.init(from:)(a1, a2);
}

uint64_t sub_213E39A5C(_QWORD *a1)
{
  return MediaFeedbackGroundTruthSource.encode(to:)(a1);
}

uint64_t MediaFeedbackGroundTruth.with(source:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v16;
  char v17;

  v17 = *a1;
  v4 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
  v5 = (int *)type metadata accessor for MediaFeedbackGroundTruth();
  v6 = v5[7];
  v7 = *(_QWORD *)(v2 + v5[6]);
  v9 = *(_QWORD *)(v2 + v6);
  v8 = *(_QWORD *)(v2 + v6 + 8);
  v10 = *(_QWORD *)(v2 + v6 + 16);
  v11 = *(_QWORD *)(v2 + v6 + 24);
  v12 = *(_QWORD *)(v2 + v6 + 32);
  v13 = *(_QWORD *)(v2 + v6 + 40);
  v16 = *(_WORD *)(v2 + v6 + 48);
  sub_213DBDD88(v2 + v5[8], a2 + v5[8]);
  *(_BYTE *)(a2 + v5[5]) = v17;
  *(_QWORD *)(a2 + v5[6]) = v7;
  v14 = a2 + v5[7];
  *(_QWORD *)v14 = v9;
  *(_QWORD *)(v14 + 8) = v8;
  *(_QWORD *)(v14 + 16) = v10;
  *(_QWORD *)(v14 + 24) = v11;
  *(_QWORD *)(v14 + 32) = v12;
  *(_QWORD *)(v14 + 40) = v13;
  *(_WORD *)(v14 + 48) = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_213DB8518(v10, v11);
}

uint64_t _s28SiriPrivateLearningInference24MediaFeedbackGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _QWORD v74[2];
  __int128 v75;
  __int128 v76;
  __int16 v77;
  _QWORD v78[2];
  __int128 v79;
  __int128 v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[10];
  uint64_t v103[10];
  _QWORD v104[10];
  char v105[8];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v73 = sub_213EF1D64();
  v4 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v51 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v51 - v17;
  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v69 = v16;
  v70 = v18;
  v67 = v6;
  v68 = v13;
  v71 = v4;
  v72 = v9;
  v19 = type metadata accessor for MediaFeedbackGroundTruth();
  if (*(unsigned __int8 *)(a1 + *(int *)(v19 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v19 + 20)))
    return 0;
  v20 = v19;
  v21 = a1;
  v22 = *(int *)(v19 + 24);
  v23 = *(_QWORD *)(a1 + v22);
  v24 = *(_QWORD *)(a2 + v22);
  sub_213E6EFF8(v23, v102);
  v52 = v102[0];
  v53 = v102[1];
  v54 = v102[2];
  v55 = v102[3];
  v56 = v102[4];
  v58 = v102[5];
  v60 = v102[6];
  v62 = v102[7];
  v64 = v102[8];
  v66 = v102[9];
  sub_213E6EFF8(v24, v103);
  v25 = v103[0];
  v57 = v103[1];
  v59 = v103[2];
  v61 = v103[3];
  v63 = v103[4];
  v65 = v103[5];
  v26 = v103[6];
  v27 = v103[7];
  v28 = v103[8];
  v29 = v103[9];
  sub_213DC0630((uint64_t)v102, (uint64_t)v105, &qword_254D3AB00);
  if (v106 != 1)
  {
    sub_213DC0630((uint64_t)v103, (uint64_t)v104, &qword_254D3AB00);
    if (v104[1] != 1)
    {
      v107 = v52;
      v108 = v53;
      v109 = v54;
      v110 = v55;
      v111 = v56;
      v112 = v58;
      v113 = v60;
      v114 = v62;
      v115 = v64;
      v116 = v66;
      v82 = v25;
      v83 = v57;
      v84 = v59;
      v85 = v61;
      v86 = v63;
      v87 = v65;
      v88 = v26;
      v89 = v27;
      v90 = v28;
      v91 = v29;
      v30 = sub_213E54FC4(&v107, &v82);
      sub_213DC077C(v103);
      sub_213DC077C(v102);
      if ((v30 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
LABEL_7:
    v82 = v52;
    v83 = v53;
    v84 = v54;
    v85 = v55;
    v86 = v56;
    v87 = v58;
    v88 = v60;
    v89 = v62;
    v90 = v64;
    v91 = v66;
    v92 = v25;
    v93 = v57;
    v94 = v59;
    v95 = v61;
    v96 = v63;
    v97 = v65;
    v98 = v26;
    v99 = v27;
    v100 = v28;
    v101 = v29;
    sub_213DC0674(&v82);
    return 0;
  }
  sub_213DC0630((uint64_t)v103, (uint64_t)&v107, &qword_254D3AB00);
  if (v108 != 1)
    goto LABEL_7;
LABEL_9:
  v31 = v21 + *(int *)(v20 + 28);
  v32 = *(_QWORD *)(v31 + 8);
  v33 = *(_WORD *)(v31 + 48);
  v78[0] = *(_QWORD *)v31;
  v78[1] = v32;
  v34 = *(_OWORD *)(v31 + 32);
  v79 = *(_OWORD *)(v31 + 16);
  v80 = v34;
  v81 = v33;
  v35 = a2 + *(int *)(v20 + 28);
  v36 = *(_QWORD *)(v35 + 8);
  v37 = *(_WORD *)(v35 + 48);
  v74[0] = *(_QWORD *)v35;
  v74[1] = v36;
  v38 = *(_OWORD *)(v35 + 32);
  v75 = *(_OWORD *)(v35 + 16);
  v76 = v38;
  v77 = v37;
  if (_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v78, (uint64_t)v74))
  {
    v39 = (uint64_t)v70;
    sub_213DBDD88(v21 + *(int *)(v20 + 32), (uint64_t)v70);
    v40 = (uint64_t)v69;
    sub_213DBDD88(a2 + *(int *)(v20 + 32), (uint64_t)v69);
    v41 = (uint64_t)v72;
    v42 = (uint64_t)&v72[*(int *)(v7 + 48)];
    sub_213DBDD88(v39, (uint64_t)v72);
    sub_213DBDD88(v40, v42);
    v43 = v71;
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
    v45 = v73;
    if (v44(v41, 1, v73) == 1)
    {
      sub_213DAFEC4(v40, &qword_253F04828);
      sub_213DAFEC4(v39, &qword_253F04828);
      if (v44(v42, 1, v45) == 1)
      {
        sub_213DAFEC4((uint64_t)v72, &qword_253F04828);
        return 1;
      }
      goto LABEL_15;
    }
    v47 = (uint64_t)v68;
    sub_213DBDD88(v41, (uint64_t)v68);
    if (v44(v42, 1, v45) == 1)
    {
      sub_213DAFEC4(v40, &qword_253F04828);
      sub_213DAFEC4(v39, &qword_253F04828);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v47, v45);
LABEL_15:
      sub_213DAFEC4((uint64_t)v72, &qword_253F04838);
      return 0;
    }
    v48 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v67, v42, v45);
    sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v49 = sub_213EF2838();
    v50 = *(void (**)(char *, uint64_t))(v43 + 8);
    v50(v48, v45);
    sub_213DAFEC4(v40, &qword_253F04828);
    sub_213DAFEC4(v39, &qword_253F04828);
    v50((char *)v47, v45);
    sub_213DAFEC4(v41, &qword_253F04828);
    if ((v49 & 1) != 0)
      return 1;
  }
  return 0;
}

unint64_t sub_213E3A0FC()
{
  unint64_t result;

  result = qword_254D3D810;
  if (!qword_254D3D810)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFAAB8, &type metadata for MediaFeedbackGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D810);
  }
  return result;
}

uint64_t sub_213E3A140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaFeedbackGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E3A184(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaFeedbackGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213E3A1C0()
{
  unint64_t result;

  result = qword_254D3D840;
  if (!qword_254D3D840)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFAA68, &type metadata for MediaFeedbackGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D840);
  }
  return result;
}

unint64_t sub_213E3A204()
{
  unint64_t result;

  result = qword_254D3D848;
  if (!qword_254D3D848)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFAA18, &type metadata for MediaFeedbackGroundTruthSource.ExtendedPlayWithInAppFollowupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D848);
  }
  return result;
}

unint64_t sub_213E3A248()
{
  unint64_t result;

  result = qword_254D3D850;
  if (!qword_254D3D850)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA9C8, &type metadata for MediaFeedbackGroundTruthSource.SuccessfulPlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D850);
  }
  return result;
}

unint64_t sub_213E3A28C()
{
  unint64_t result;

  result = qword_254D3D858;
  if (!qword_254D3D858)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA978, &type metadata for MediaFeedbackGroundTruthSource.QuickStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D858);
  }
  return result;
}

uint64_t sub_213E3A2D0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213DB0DB4(&qword_254D3D5B0, (uint64_t (*)(uint64_t))type metadata accessor for MediaFeedbackGroundTruth, (uint64_t)&protocol conformance descriptor for MediaFeedbackGroundTruth);
  result = sub_213DB0DB4(&qword_254D3D5B8, (uint64_t (*)(uint64_t))type metadata accessor for MediaFeedbackGroundTruth, (uint64_t)&protocol conformance descriptor for MediaFeedbackGroundTruth);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_213E3A330()
{
  unint64_t result;

  result = qword_254D3D880;
  if (!qword_254D3D880)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaFeedbackGroundTruthSource, &type metadata for MediaFeedbackGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3D880);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for MediaFeedbackGroundTruth(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
    v11 = a3[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = *(_QWORD *)&a2[v11 + 8];
    *(_QWORD *)v12 = *(_QWORD *)&a2[v11];
    *((_QWORD *)v12 + 1) = v14;
    v15 = *(_QWORD *)&a2[v11 + 24];
    swift_retain();
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      v16 = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
      *((_OWORD *)v12 + 2) = v16;
    }
    else
    {
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 3) = v15;
      v18 = *((_QWORD *)v13 + 5);
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 5) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_WORD *)v12 + 24) = *((_WORD *)v13 + 24);
    v19 = a3[8];
    v20 = &a1[v19];
    v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v9(v20, v21, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for MediaFeedbackGroundTruth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(a1, v4);
  swift_release();
  v6 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = a1 + *(int *)(a2 + 32);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v4);
  return result;
}

char *initializeWithCopy for MediaFeedbackGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a2[v10 + 8];
  *(_QWORD *)v11 = *(_QWORD *)&a2[v10];
  *((_QWORD *)v11 + 1) = v13;
  v14 = *(_QWORD *)&a2[v10 + 24];
  swift_retain();
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    v15 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v15;
  }
  else
  {
    *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
    *((_QWORD *)v11 + 3) = v14;
    v16 = *((_QWORD *)v12 + 5);
    *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
    *((_QWORD *)v11 + 5) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, v6))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for MediaFeedbackGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  void (*v24)(void *, const void *, uint64_t);

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v24 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v24(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_retain();
  swift_release();
  v8 = a3[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)&a2[v8];
  *((_QWORD *)v9 + 1) = *(_QWORD *)&a2[v8 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v9 + 16;
  v12 = v10 + 16;
  v13 = *((_QWORD *)v10 + 3);
  if (*((_QWORD *)v9 + 3) == 1)
  {
    if (v13 == 1)
    {
      v14 = *((_OWORD *)v10 + 2);
      *v11 = *v12;
      *((_OWORD *)v9 + 2) = v14;
    }
    else
    {
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_213DBEEB0((uint64_t)(v9 + 16));
    v15 = *((_OWORD *)v10 + 2);
    *v11 = *v12;
    *((_OWORD *)v9 + 2) = v15;
  }
  else
  {
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v9[48] = v10[48];
  v9[49] = v10[49];
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v20 = v19(&a1[v16], 1, v6);
  v21 = v19(v18, 1, v6);
  if (!v20)
  {
    if (!v21)
    {
      v24(v17, v18, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    goto LABEL_13;
  }
  if (v21)
  {
LABEL_13:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  return a1;
}

char *initializeWithTake for MediaFeedbackGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = a3[8];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_WORD *)v12 + 24) = *((_WORD *)v13 + 24);
  v15 = &a1[v11];
  v16 = &a2[v11];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for MediaFeedbackGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t (*v20)(const void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_release();
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a2[v10 + 8];
  *(_QWORD *)v11 = *(_QWORD *)&a2[v10];
  *((_QWORD *)v11 + 1) = v13;
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v11 + 3) == 1)
    goto LABEL_4;
  v14 = *((_QWORD *)v12 + 3);
  if (v14 == 1)
  {
    sub_213DBEEB0((uint64_t)(v11 + 16));
LABEL_4:
    v15 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v15;
    goto LABEL_6;
  }
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  *((_QWORD *)v11 + 3) = v14;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v12 + 5);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *((_QWORD *)v11 + 5) = v16;
  swift_bridgeObjectRelease();
LABEL_6:
  *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v21 = v20(&a1[v17], 1, v6);
  v22 = v20(v19, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      v8(v18, v19, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
    goto LABEL_11;
  }
  if (v22)
  {
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaFeedbackGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E3AC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaFeedbackGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E3ACE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_213E3AD88()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DBF3D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for MediaFeedbackGroundTruthSource()
{
  return &type metadata for MediaFeedbackGroundTruthSource;
}

uint64_t _s28SiriPrivateLearningInference30MediaFeedbackGroundTruthSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E3AE8C + 4 * byte_213EFA47A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E3AEC0 + 4 * byte_213EFA475[v4]))();
}

uint64_t sub_213E3AEC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E3AEC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E3AED0);
  return result;
}

uint64_t sub_213E3AEDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E3AEE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E3AEE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E3AEF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaFeedbackGroundTruthSource.CodingKeys()
{
  return &type metadata for MediaFeedbackGroundTruthSource.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaFeedbackGroundTruthSource.QuickStopCodingKeys()
{
  return &type metadata for MediaFeedbackGroundTruthSource.QuickStopCodingKeys;
}

ValueMetadata *type metadata accessor for MediaFeedbackGroundTruthSource.SuccessfulPlayCodingKeys()
{
  return &type metadata for MediaFeedbackGroundTruthSource.SuccessfulPlayCodingKeys;
}

ValueMetadata *type metadata accessor for MediaFeedbackGroundTruthSource.ExtendedPlayWithInAppFollowupCodingKeys()
{
  return &type metadata for MediaFeedbackGroundTruthSource.ExtendedPlayWithInAppFollowupCodingKeys;
}

uint64_t storeEnumTagSinglePayload for MediaFeedbackGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213E3AF88 + 4 * byte_213EFA484[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213E3AFBC + 4 * byte_213EFA47F[v4]))();
}

uint64_t sub_213E3AFBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E3AFC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E3AFCCLL);
  return result;
}

uint64_t sub_213E3AFD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E3AFE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213E3AFE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E3AFEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaFeedbackGroundTruth.CodingKeys()
{
  return &type metadata for MediaFeedbackGroundTruth.CodingKeys;
}

unint64_t sub_213E3B00C()
{
  unint64_t result;

  result = qword_254D3D888;
  if (!qword_254D3D888)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA7A8, &type metadata for MediaFeedbackGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D888);
  }
  return result;
}

unint64_t sub_213E3B054()
{
  unint64_t result;

  result = qword_254D3D890;
  if (!qword_254D3D890)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA950, &type metadata for MediaFeedbackGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D890);
  }
  return result;
}

unint64_t sub_213E3B09C()
{
  unint64_t result;

  result = qword_254D3D898;
  if (!qword_254D3D898)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA870, &type metadata for MediaFeedbackGroundTruthSource.QuickStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D898);
  }
  return result;
}

unint64_t sub_213E3B0E4()
{
  unint64_t result;

  result = qword_254D3D8A0;
  if (!qword_254D3D8A0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA898, &type metadata for MediaFeedbackGroundTruthSource.QuickStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8A0);
  }
  return result;
}

unint64_t sub_213E3B12C()
{
  unint64_t result;

  result = qword_254D3D8A8;
  if (!qword_254D3D8A8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA820, &type metadata for MediaFeedbackGroundTruthSource.SuccessfulPlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8A8);
  }
  return result;
}

unint64_t sub_213E3B174()
{
  unint64_t result;

  result = qword_254D3D8B0;
  if (!qword_254D3D8B0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA848, &type metadata for MediaFeedbackGroundTruthSource.SuccessfulPlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8B0);
  }
  return result;
}

unint64_t sub_213E3B1BC()
{
  unint64_t result;

  result = qword_254D3D8B8;
  if (!qword_254D3D8B8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA7D0, &type metadata for MediaFeedbackGroundTruthSource.ExtendedPlayWithInAppFollowupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8B8);
  }
  return result;
}

unint64_t sub_213E3B204()
{
  unint64_t result;

  result = qword_254D3D8C0;
  if (!qword_254D3D8C0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA7F8, &type metadata for MediaFeedbackGroundTruthSource.ExtendedPlayWithInAppFollowupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8C0);
  }
  return result;
}

unint64_t sub_213E3B24C()
{
  unint64_t result;

  result = qword_254D3D8C8;
  if (!qword_254D3D8C8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA8C0, &type metadata for MediaFeedbackGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8C8);
  }
  return result;
}

unint64_t sub_213E3B294()
{
  unint64_t result;

  result = qword_254D3D8D0;
  if (!qword_254D3D8D0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA8E8, &type metadata for MediaFeedbackGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8D0);
  }
  return result;
}

unint64_t sub_213E3B2DC()
{
  unint64_t result;

  result = qword_254D3D8D8;
  if (!qword_254D3D8D8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA718, &type metadata for MediaFeedbackGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8D8);
  }
  return result;
}

unint64_t sub_213E3B324()
{
  unint64_t result;

  result = qword_254D3D8E0;
  if (!qword_254D3D8E0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFA740, &type metadata for MediaFeedbackGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3D8E0);
  }
  return result;
}

uint64_t sub_213E3B368(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726575516F7375 && a2 == 0xE800000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666552616964656DLL && a2 == 0xEE0065636E657265 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000213F05D40)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_213E3B584(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F74536B63697571 && a2 == 0xE900000000000070;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6673736563637573 && a2 == 0xEE0079616C506C75 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000213F078E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t NowPlayingEventStreamProcessor.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v11 - v6;
  v8 = swift_allocObject();
  sub_213DCA7E4(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  sub_213DCA7E4((uint64_t)v7, (uint64_t)v5, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory);
  v9 = sub_213E3C9DC((uint64_t)v5, v8);
  sub_213DCA828((uint64_t)v7, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory);
  sub_213DCA828(a1, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  return v9;
}

uint64_t NowPlayingEventStreamProcessor.init(context:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  sub_213DCA7E4(a1, (uint64_t)&v11 - v7, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  sub_213DCA7E4((uint64_t)v8, (uint64_t)v6, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory);
  v9 = sub_213E3C9DC((uint64_t)v6, v1);
  sub_213DCA828((uint64_t)v8, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory);
  sub_213DCA828(a1, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  return v9;
}

uint64_t type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory(uint64_t a1)
{
  return sub_213DDE1A0(a1, qword_254D3DB10);
}

uint64_t NowPlayingEventStreamProcessor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return v0;
}

uint64_t NowPlayingEventStreamProcessor.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_213E3B934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = type metadata accessor for EventStreamContext();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DCA7E4(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  type metadata accessor for NowPlayingStreamStateMachine(0);
  v6 = swift_allocObject();
  v7 = v6
     + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(_QWORD *)(v7 + 32) = 0;
  v8 = v6
     + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit;
  *(_QWORD *)(v8 + 32) = 0;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_BYTE *)(v6
           + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState) = 3;
  *(_QWORD *)(v6
            + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = 0;
  v9 = v6
     + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_context;
  *(_QWORD *)(v6
            + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_lastPlayTimestamp) = 0;
  result = sub_213DBB430((uint64_t)v5, v9, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  *a1 = v6;
  return result;
}

uint64_t sub_213E3BA38()
{
  uint64_t result;

  type metadata accessor for NowPlayingStreamStateMachine(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DBB8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3D8E8 = 91;
  unk_254D3D8F0 = 0xE100000000000000;
  return result;
}

uint64_t sub_213E3BABC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  if (v5 == 0xD000000000000011 && v6 == 0x8000000213F048C0 || (sub_213EF3234() & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = sub_213DAF1EC(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0
      || (v11 = swift_bridgeObjectRetain(),
          sub_213DAF9E4(v11, &v31),
          swift_bridgeObjectRelease(),
          v12 = v31,
          v31 == 6))
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v13 = sub_213EF2724();
      __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v14 = sub_213EF270C();
      v15 = sub_213EF2CA0();
      if (os_log_type_enabled(v14, v15))
      {
        v30 = v3;
        v16 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v36 = v29;
        *(_DWORD *)v16 = 136315394;
        if (qword_254D3A018 != -1)
          swift_once();
        v18 = qword_254D3D8E8;
        v17 = unk_254D3D8F0;
        swift_bridgeObjectRetain();
        v31 = sub_213DB0570(v18, v17, &v36);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2080;
        v31 = v30;
        v32 = v2;
        v33 = v4;
        v34 = v5;
        v35 = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_213EF288C();
        v31 = sub_213DB0570(v19, v20, &v36);
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v14, v15, "%s timestamp or PlaybackState missing: %s", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v29, -1, -1);
        MEMORY[0x2199C53C4](v16, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x24BEE4AF8];
    }
    v31 = v3;
    v32 = v2;
    v33 = v4;
    v34 = v5;
    v35 = v6;
    LOBYTE(v36) = v12;
    sub_213E3BF00(&v31, (unsigned __int8 *)&v36, *(double *)&v8);
    v22 = (uint64_t *)(v1
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit);
    v23 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit
                    + 8);
    if (!v23)
      return MEMORY[0x24BEE4AF8];
    v25 = v22[3];
    v24 = v22[4];
    v26 = v22[2];
    v27 = *v22;
    *(_OWORD *)v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    v22[4] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213DC7B60(v27, v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7C0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_213EF53E0;
    *(_QWORD *)(v21 + 32) = v27;
    *(_QWORD *)(v21 + 40) = v23;
    *(_QWORD *)(v21 + 48) = v26;
    *(_QWORD *)(v21 + 56) = v25;
    *(_QWORD *)(v21 + 64) = v24;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7C0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_213EF53E0;
    *(_QWORD *)(v21 + 32) = v3;
    *(_QWORD *)(v21 + 40) = v2;
    *(_QWORD *)(v21 + 48) = v4;
    *(_QWORD *)(v21 + 56) = v5;
    *(_QWORD *)(v21 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v21;
}

uint64_t sub_213E3BF00(uint64_t *a1, unsigned __int8 *a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  double v12;
  uint64_t result;
  char v14;
  uint64_t v15[5];
  char v16;

  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v9 = a1[4];
  v10 = *a2;
  v11 = OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState;
  if (*(_BYTE *)(v3
                + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState) == 1)
  {
    v12 = a3
        - *(double *)(v3
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_lastPlayTimestamp)
        + *(double *)(v3
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength);
    *(double *)(v3
              + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = v12;
    LOBYTE(v15[0]) = 0x405030100uLL >> (8 * v10);
    sub_213E3C1D0((char *)v15, v12);
  }
  v15[0] = v6;
  v15[1] = v5;
  v15[2] = v8;
  v15[3] = v7;
  v15[4] = v9;
  if (v10 == 1)
  {
    result = sub_213E3C3F8(v15, &v16, a3);
  }
  else
  {
    v14 = v10;
    result = sub_213E3C584((uint64_t)v15, &v14, &v16);
  }
  *(_BYTE *)(v3 + v11) = v16;
  return result;
}

uint64_t sub_213E3C000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[15];
  char v23;

  v1 = v0;
  v2 = sub_213EF1CF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for EventStreamContext();
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState;
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState) == 1)
  {
    sub_213DCA7E4(v1+ OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_context, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
    sub_213EF1A70();
    v10 = sub_213EF1AA0();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    sub_213EF1CD4();
    v12 = v11;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    v13 = v12
        - *(double *)(v1
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_lastPlayTimestamp)
        + *(double *)(v1
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength);
    *(double *)(v1
              + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = v13;
    v23 = 2;
    sub_213E3C1D0(&v23, v13);
  }
  *(_BYTE *)(v1 + v9) = 3;
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent);
  v16 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent);
  v15 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                  + 8);
  v17 = v14[2];
  v18 = v14[3];
  v19 = v14[4];
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7C0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_213EF53E0;
    *(_QWORD *)(v20 + 32) = v16;
    *(_QWORD *)(v20 + 40) = v15;
    *(_QWORD *)(v20 + 48) = v17;
    *(_QWORD *)(v20 + 56) = v18;
    *(_QWORD *)(v20 + 64) = v19;
  }
  else
  {
    v20 = MEMORY[0x24BEE4AF8];
  }
  sub_213DC7B24(v16, v15);
  return v20;
}

uint64_t sub_213E3C1D0(char *a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  _QWORD v20[6];

  v3 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent);
  v4 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent);
  v5 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                 + 8);
  if (v5)
  {
    v19 = *a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_213EF44B0;
    v8 = type metadata accessor for NowPlayingFeatures.TotalPlayLength(0);
    swift_allocObject();
    *(double *)v20 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_213EF23C4();
    *(_QWORD *)(inited + 56) = v8;
    *(_QWORD *)(inited + 64) = sub_213DB0DB4(&qword_254D3DBA8, type metadata accessor for NowPlayingFeatures.TotalPlayLength, MEMORY[0x24BEA4F80]);
    *(_QWORD *)(inited + 32) = v9;
    v10 = type metadata accessor for NowPlayingFeatures.EndReason(0);
    swift_allocObject();
    LOBYTE(v20[0]) = v19;
    v11 = sub_213EF23C4();
    *(_QWORD *)(inited + 96) = v10;
    *(_QWORD *)(inited + 104) = sub_213DB0DB4(&qword_254D3DBB0, type metadata accessor for NowPlayingFeatures.EndReason, MEMORY[0x24BEA4F80]);
    *(_QWORD *)(inited + 72) = v11;
    CoreDuetEvent.with(eventId:removedFeatures:newFeatures:eventType:)(0, 0, MEMORY[0x24BEE4AF8], inited, 0, 0, v20);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    swift_arrayDestroy();
    sub_213DC7B60(v4, v5);
    v13 = v20[0];
    v12 = v20[1];
    v14 = v20[2];
    v15 = v20[3];
    v16 = v20[4];
    v4 = *v3;
    v17 = v3[1];
  }
  else
  {
    v17 = 0;
    v12 = 0;
    v13 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent);
    v14 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                    + 16);
    v15 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                    + 24);
    v16 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                    + 32);
  }
  *v3 = v13;
  v3[1] = v12;
  v3[2] = v14;
  v3[3] = v15;
  v3[4] = v16;
  return sub_213DC7B60(v4, v17);
}

uint64_t sub_213E3C3F8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v7 = *a1;
  v6 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v10 = a1[4];
  v28 = *a1;
  v29 = v6;
  *(_QWORD *)&v30 = v9;
  *((_QWORD *)&v30 + 1) = v8;
  v31 = v10;
  result = sub_213DEEEC8();
  if ((result & 1) != 0)
  {
    *(double *)(v3
              + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_lastPlayTimestamp) = a3;
    v12 = v3
        + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent;
    v13 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                    + 8);
    if (!v13)
      goto LABEL_4;
    v14 = *(_QWORD *)(v12 + 32);
    v15 = *(_OWORD *)(v12 + 16);
    v28 = *(_QWORD *)v12;
    v29 = v13;
    v30 = v15;
    v31 = v14;
    v27[0] = v7;
    v27[1] = v6;
    v27[2] = v9;
    v27[3] = v8;
    v27[4] = v10;
    result = sub_213DEF128((uint64_t)&v28, (uint64_t)v27);
    if ((result & 1) == 0)
    {
LABEL_4:
      *(_QWORD *)(v3
                + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = 0;
      v16 = *(_QWORD *)v12;
      v17 = *(_QWORD *)(v12 + 8);
      v18 = *(_QWORD *)(v12 + 16);
      v19 = *(_QWORD *)(v12 + 24);
      v20 = *(_QWORD *)(v12 + 32);
      v21 = (_QWORD *)(v3
                     + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit);
      v22 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit);
      v25 = v21[1];
      *v21 = *(_QWORD *)v12;
      v21[1] = v17;
      v21[2] = v18;
      v21[3] = v19;
      v21[4] = v20;
      sub_213DC7B24(v16, v17);
      sub_213DC7B60(v22, v25);
      v23 = *(_QWORD *)v12;
      v26 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)v12 = v7;
      *(_QWORD *)(v12 + 8) = v6;
      *(_QWORD *)(v12 + 16) = v9;
      *(_QWORD *)(v12 + 24) = v8;
      *(_QWORD *)(v12 + 32) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_213DC7B60(v23, v26);
    }
    v24 = 1;
  }
  else
  {
    *(_QWORD *)(v3
              + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = 0;
    v24 = 3;
  }
  *a2 = v24;
  return result;
}

uint64_t sub_213E3C584@<X0>(uint64_t result@<X0>, char *a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];
  __int128 v43;
  uint64_t v44;

  v5 = *a2;
  v6 = OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState;
  if (*(_BYTE *)(v3
                + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState) == 1)
  {
    v7 = v3;
    v8 = v3
       + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent;
    v9 = *(_QWORD *)(v3
                   + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent
                   + 8);
    if (!v9)
      goto LABEL_4;
    v10 = *(_QWORD *)result;
    v11 = *(_OWORD *)(result + 8);
    v12 = *(_QWORD *)(result + 24);
    v13 = *(_QWORD *)(result + 32);
    v14 = *(_QWORD *)(v8 + 32);
    v15 = *(_OWORD *)(v8 + 16);
    v42[0] = *(_QWORD *)v8;
    v42[1] = v9;
    v43 = v15;
    v44 = v14;
    v38 = v10;
    v39 = v11;
    v40 = v12;
    v41 = v13;
    result = sub_213DEF128((uint64_t)v42, (uint64_t)&v38);
    if ((result & 1) == 0)
    {
LABEL_4:
      if (qword_253F04A88 != -1)
        swift_once();
      v16 = sub_213EF2724();
      __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
      swift_retain_n();
      v17 = sub_213EF270C();
      v18 = sub_213EF2CAC();
      if (os_log_type_enabled(v17, v18))
      {
        v37 = v18;
        v19 = swift_slowAlloc();
        v36 = swift_slowAlloc();
        v42[0] = v36;
        *(_DWORD *)v19 = 136315650;
        if (qword_254D3A018 != -1)
          swift_once();
        v20 = qword_254D3D8E8;
        v21 = unk_254D3D8F0;
        swift_bridgeObjectRetain();
        v38 = sub_213DB0570(v20, v21, v42);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        LOBYTE(v38) = *(_BYTE *)(v7 + v6);
        v22 = sub_213EF288C();
        v38 = sub_213DB0570(v22, v23, v42);
        sub_213EF2D9C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 22) = 2080;
        LOBYTE(v38) = v5;
        v24 = sub_213EF288C();
        v38 = sub_213DB0570(v24, v25, v42);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v17, v37, "%s Unexpected track change during state transition %s -> %s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v36, -1, -1);
        MEMORY[0x2199C53C4](v19, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v26 = *(_QWORD *)v8;
      v27 = *(_QWORD *)(v8 + 8);
      v28 = *(_QWORD *)(v8 + 16);
      v29 = *(_QWORD *)(v8 + 24);
      v30 = *(_QWORD *)(v8 + 32);
      v31 = (_QWORD *)(v7
                     + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit);
      v32 = *(_QWORD *)(v7
                      + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit);
      v33 = *(_QWORD *)(v7
                      + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit
                      + 8);
      *v31 = *(_QWORD *)v8;
      v31[1] = v27;
      v31[2] = v28;
      v31[3] = v29;
      v31[4] = v30;
      sub_213DC7B24(v26, v27);
      sub_213DC7B60(v32, v33);
      v34 = *(_QWORD *)v8;
      v35 = *(_QWORD *)(v8 + 8);
      *(_OWORD *)v8 = 0u;
      *(_OWORD *)(v8 + 16) = 0u;
      *(_QWORD *)(v8 + 32) = 0;
      result = sub_213DC7B60(v34, v35);
      *(_QWORD *)(v7
                + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = 0;
      v5 = 3;
    }
  }
  *a3 = v5;
  return result;
}

uint64_t sub_213E3C8F4()
{
  uint64_t v0;

  sub_213DCA828(v0+ OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_context, (uint64_t (*)(_QWORD))type metadata accessor for EventStreamContext);
  sub_213DC7B60(*(_QWORD *)(v0+ OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent), *(_QWORD *)(v0+ OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent+ 8));
  sub_213DC7B60(*(_QWORD *)(v0+ OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit), *(_QWORD *)(v0+ OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit+ 8));
  return swift_deallocClassInstance();
}

uint64_t sub_213E3C964(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_213E3BABC(a1);
  return sub_213DB26D0(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v2);
}

uint64_t sub_213E3C9A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_213E3C000();
  return sub_213DB26D0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

uint64_t sub_213E3C9DC(uint64_t a1, uint64_t a2)
{
  uint64_t *boxed_opaque_existential_1;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory(0);
  v8 = sub_213DB0DB4(&qword_254D3DBC0, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory, (uint64_t)&unk_213EFABF8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v6);
  sub_213DBB430(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DBC8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  *(_QWORD *)(a2 + 16) = 91;
  *(_QWORD *)(a2 + 24) = 0xE100000000000000;
  sub_213DB0BF0(&v6, a2 + 32);
  return a2;
}

uint64_t type metadata accessor for NowPlayingEventStreamProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for NowPlayingEventStreamProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingEventStreamProcessor.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_213E3CAF0()
{
  return type metadata accessor for NowPlayingStreamStateMachine(0);
}

uint64_t type metadata accessor for NowPlayingStreamStateMachine(uint64_t a1)
{
  return sub_213DDE1A0(a1, qword_254D3DA08);
}

uint64_t sub_213E3CB0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1AA0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EventStreamContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1AA0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for EventStreamContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213EF1AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for EventStreamContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for EventStreamContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for EventStreamContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for EventStreamContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_213E3CD1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E3CD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventStreamContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_213E3CD64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E3CD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventStreamContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_213E3CDB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1AA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213E3CE18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_213E3CE28(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(&qword_254D3DB68, type metadata accessor for NowPlayingEventAsyncStreamProcessorFactory, (uint64_t)&unk_213EFABDC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_213E3CE64()
{
  return &off_254D3DB80;
}

uint64_t SendMessageEventCoalescer.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t SendMessageEventCoalescer.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_213E3CEA0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v21 = *a2;
  v25 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v23 = a2[4];
  if (v7 == 0xD000000000000013 && v8 == 0x8000000213F04880 || (sub_213EF3234() & 1) != 0)
  {
    v22 = v5;
    v11 = swift_bridgeObjectRetain();
    v12 = sub_213DAF1F8(v11);
    result = swift_bridgeObjectRelease();
    if (v12 == 2)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v14 = sub_213EF2724();
      __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
      v15 = sub_213EF270C();
      v16 = sub_213EF2CA0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_213DAB000, v15, v16, "Unexpected INSendMessageIntent without DonatedBySiri", v17, 2u);
        MEMORY[0x2199C53C4](v17, -1, -1);
      }

    }
    else
    {
      v18 = v25;
      if (v25)
      {
        if (v10 == 0xD000000000000013 && v23 == 0x8000000213F04880
          || (result = sub_213EF3234(), v18 = 0, (result & 1) != 0))
        {
          v19 = swift_bridgeObjectRetain();
          v20 = sub_213DAF1F8(v19);
          result = swift_bridgeObjectRelease();
          v18 = v20 & 1;
        }
      }
      if ((*(_BYTE *)(v24 + 16) & 1) != 0)
      {
        *(_BYTE *)(v24 + 16) = 0;
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        *(_QWORD *)(a3 + 32) = 0;
        return result;
      }
      if ((v12 & 1) != 0)
      {
        *(_BYTE *)(v24 + 16) = 1;
      }
      else if (v18)
      {
        *(_BYTE *)(v24 + 16) = 1;
        *(_QWORD *)a3 = v21;
        *(_QWORD *)(a3 + 8) = v25;
        *(_QWORD *)(a3 + 16) = v9;
        *(_QWORD *)(a3 + 24) = v10;
        *(_QWORD *)(a3 + 32) = v23;
        return sub_213DC7B24(v21, v25);
      }
    }
    *(_QWORD *)a3 = v22;
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v6;
    *(_QWORD *)(a3 + 24) = v7;
    *(_QWORD *)(a3 + 32) = v8;
  }
  else
  {
    *(_QWORD *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v6;
    *(_QWORD *)(a3 + 24) = v7;
    *(_QWORD *)(a3 + 32) = v8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SendMessageEventCoalescer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SendMessageEventCoalescer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SendMessageEventCoalescer()
{
  return objc_opt_self();
}

uint64_t method lookup function for SendMessageEventCoalescer()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for SendMessageEventCoalescer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E3D1F0 + 4 * byte_213EFAC35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E3D224 + 4 * byte_213EFAC30[v4]))();
}

uint64_t sub_213E3D224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E3D22C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E3D234);
  return result;
}

uint64_t sub_213E3D240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E3D248);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E3D24C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E3D254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SendMessageEventCoalescer.State()
{
  return &type metadata for SendMessageEventCoalescer.State;
}

unint64_t sub_213E3D274()
{
  unint64_t result;

  result = qword_254D3DBD0;
  if (!qword_254D3DBD0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFACE8, &type metadata for SendMessageEventCoalescer.State);
    atomic_store(result, (unint64_t *)&qword_254D3DBD0);
  }
  return result;
}

uint64_t sub_213E3D2B8@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_BYTE *);
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _BYTE v90[40];
  __int128 v91;
  uint64_t v92;
  _OWORD v93[2];
  uint64_t v94;
  uint64_t v95;

  v69 = a2;
  v68 = a1;
  v64 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCA0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v83 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)&v64 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v88 = (uint64_t)&v64 - v9;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  v10 = *(_QWORD *)(v65 - 8);
  v11 = MEMORY[0x24BDAC7A8](v65);
  v71 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v64 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v82 = (char *)&v64 - v16;
  v84 = type metadata accessor for MediaPlayClassification();
  v17 = *(_QWORD *)(v84 - 8);
  v18 = MEMORY[0x24BDAC7A8](v84);
  v79 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v81 = (char *)&v64 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v67 = (uint64_t)&v64 - v22;
  v23 = *v3;
  v77 = (void (*)(_BYTE *))v3[1];
  v24 = v3[2];
  v74 = (uint64_t (*)(uint64_t))v3[3];
  v25 = v3[4];
  v70 = (void (*)(uint64_t))v3[5];
  v95 = v23;
  v26 = v3[6];
  v80 = (uint64_t (*)(uint64_t))v3[7];
  v27 = v3[8];
  v28 = *(_QWORD *)(v23 + 16);
  sub_213E406B0((uint64_t)&v95);
  v73 = v23 + 32;
  v29 = v10;
  v30 = v65;
  v78 = v24;
  v31 = v28;
  swift_retain();
  v76 = v25;
  v32 = (uint64_t)v15;
  v33 = (uint64_t)v66;
  swift_retain();
  v72 = v26;
  v34 = v17;
  swift_retain();
  v86 = v27;
  result = swift_retain();
  v36 = 0;
  v87 = v31;
  v75 = v32;
  v37 = v31 == 0;
  if (v31)
    goto LABEL_6;
LABEL_5:
  v94 = 0;
  v39 = v31;
  memset(v93, 0, sizeof(v93));
  while (1)
  {
    v89 = v39;
    sub_213DC0630((uint64_t)v93, (uint64_t)&v91, &qword_253F06998);
    if (v92)
    {
      sub_213DB0BF0(&v91, (uint64_t)v90);
      v77(v90);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v90);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v40(v33, 0, 1, v30);
    }
    else
    {
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v40(v33, 1, 1, v30);
    }
    v41 = v34;
    v42 = v29;
    v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    v44 = v30;
    if (v43(v33, 1, v30) == 1)
    {
      sub_213DAFEC4(v33, &qword_254D3DCA0);
      v45 = 1;
    }
    else
    {
      v46 = v33;
      v47 = v33;
      v48 = v75;
      sub_213DC0630(v47, v75, &qword_254D3B568);
      if ((v74(v48) & 1) == 0)
      {
        result = sub_213DAFEC4(v48, &qword_254D3B568);
        v29 = v42;
        v33 = v46;
        v34 = v41;
        v31 = v87;
        v36 = v89;
        v37 = v89 >= v87;
        if (v89 == v87)
          goto LABEL_5;
        goto LABEL_6;
      }
      sub_213DC0630(v48, v88, &qword_254D3B568);
      v45 = 0;
      v33 = v46;
    }
    v49 = v88;
    v40(v88, v45, 1, v30);
    v50 = v83;
    sub_213DC0630(v49, v83, &qword_254D3DCA0);
    if (v43(v50, 1, v30) == 1)
    {
      v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v52 = (uint64_t)v82;
      v53 = v84;
      v51(v82, 1, 1, v84);
      v34 = v41;
    }
    else
    {
      v54 = v71;
      sub_213DC0630(v50, v71, &qword_254D3B568);
      v55 = v82;
      v70(v54);
      v52 = (uint64_t)v55;
      sub_213DAFEC4(v54, &qword_254D3B568);
      v34 = v41;
      v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v53 = v84;
      v51((char *)v52, 0, 1, v84);
    }
    v56 = (uint64_t)v81;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v52, 1, v53) == 1)
    {
      sub_213DAFEC4(v52, &qword_254D3B568);
      sub_213E1E2EC((uint64_t)&v95);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v62 = 1;
      v63 = v64;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v51)(v63, v62, 1, v53);
    }
    sub_213DBB430(v52, v56, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    if ((v80(v56) & 1) != 0)
    {
      v57 = v56;
      v58 = v67;
      sub_213DBB430(v57, v67, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
      v59 = v79;
      sub_213DBB430(v58, v79, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
      v60 = v85;
      v61 = v68(v59);
      v85 = v60;
      if (v60)
      {
        sub_213DCA828(v79, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        sub_213E1E2EC((uint64_t)&v95);
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
      if ((v61 & 1) != 0)
      {
        sub_213E1E2EC((uint64_t)&v95);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v63 = v64;
        sub_213DBB430(v79, v64, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        v62 = 0;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v51)(v63, v62, 1, v53);
      }
      v38 = v79;
    }
    else
    {
      v38 = v56;
    }
    v29 = v42;
    v30 = v44;
    v31 = v87;
    v36 = v89;
    result = sub_213DCA828(v38, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    v37 = v36 >= v31;
    if (v36 == v31)
      goto LABEL_5;
LABEL_6:
    if (v37)
      break;
    sub_213DAFDFC(v73 + 40 * v36, (uint64_t)v93);
    v39 = v36 + 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E3D9C4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_213EF1D10();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_213DCD0C8(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_213E3DACC()
{
  uint64_t result;

  type metadata accessor for MediaSuggestionOutcomeExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DC98);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3DBD8 = 91;
  unk_254D3DBE0 = 0xE100000000000000;
  return result;
}

uint64_t MediaSuggestionOutcomeExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MediaSuggestionOutcomeExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E3DB64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[5];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t (*v44)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;

  v30 = a2;
  v36 = type metadata accessor for FeaturisedTurn(0);
  v3 = *(_QWORD *)(v36 - 8);
  v4 = MEMORY[0x24BDAC7A8](v36);
  v33 = (uint64_t)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - v6;
  v8 = MEMORY[0x24BEE4AF8];
  v40 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v35 = v9;
  if (v9)
  {
    v10 = 0;
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v12 = *(_QWORD *)(v3 + 72);
    v29[1] = a1;
    v32 = v11;
    v34 = a1 + v11;
    while (1)
    {
      sub_213DCA7E4(v34 + v12 * v10, (uint64_t)v7, type metadata accessor for FeaturisedTurn);
      v13 = *(_QWORD *)&v7[*(int *)(v36 + 24)];
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = v13 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_213DAFDFC(v15, (uint64_t)&v38);
          sub_213DAFDFC((uint64_t)&v38, (uint64_t)v37);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          type metadata accessor for PlusRuntimeGenericSuggestions(0);
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
          v15 += 40;
          if (!--v14)
          {
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v38, (uint64_t)&v41);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        v43 = 0;
        v41 = 0u;
        v42 = 0u;
      }
      sub_213DCC3D8((uint64_t)&v41, (uint64_t)&v38, &qword_253F06970);
      if (v39)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for PlusRuntimeGenericSuggestions(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          sub_213DAFEC4((uint64_t)&v41, &qword_253F06970);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_213DBB430((uint64_t)v7, v33, type metadata accessor for FeaturisedTurn);
          v16 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_213DCD09C(0, *(_QWORD *)(v16 + 16) + 1, 1);
            v16 = v40;
          }
          v18 = *(_QWORD *)(v16 + 16);
          v17 = *(_QWORD *)(v16 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_213DCD09C(v17 > 1, v18 + 1, 1);
            v16 = v40;
          }
          *(_QWORD *)(v16 + 16) = v18 + 1;
          sub_213DBB430(v33, v16 + v32 + v18 * v12, type metadata accessor for FeaturisedTurn);
          goto LABEL_5;
        }
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v38, &qword_253F06970);
      }
      sub_213DAFEC4((uint64_t)&v41, &qword_253F06970);
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v7, type metadata accessor for FeaturisedTurn);
LABEL_5:
      if (++v10 == v35)
      {
        v8 = v40;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
    swift_once();
  v19 = sub_213EF2724();
  __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
  swift_retain();
  v20 = sub_213EF270C();
  v21 = sub_213EF2C94();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_QWORD *)&v41 = v23;
    *(_DWORD *)v22 = 136315394;
    if (qword_254D3A020 != -1)
      swift_once();
    v24 = qword_254D3DBD8;
    v25 = unk_254D3DBE0;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v38 = sub_213DB0570(v24, v25, (uint64_t *)&v41);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    *(_QWORD *)&v38 = *(_QWORD *)(v8 + 16);
    sub_213EF2D9C();
    swift_release();
    _os_log_impl(&dword_213DAB000, v20, v21, "%s Found %ld turns with PIMS suggestions reported.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v23, -1, -1);
    MEMORY[0x2199C53C4](v22, -1, -1);

  }
  else
  {

    swift_release();
  }
  *(_QWORD *)&v41 = v30;
  *((_QWORD *)&v41 + 1) = sub_213E3E110;
  *(_QWORD *)&v42 = 0;
  *((_QWORD *)&v42 + 1) = sub_213E3FAA8;
  v43 = 0;
  v44 = sub_213E3FBB4;
  v45 = 0;
  v46 = sub_213E3E194;
  v47 = 0;
  swift_bridgeObjectRetain();
  v26 = v31;
  swift_retain();
  v27 = sub_213E403D0(v8, (uint64_t *)&v41, v26);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v27;
}

uint64_t sub_213E3E110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int v4;
  _BYTE v6[40];

  sub_213DAFDFC(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  v3 = type metadata accessor for MediaPlayClassification();
  v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, v4 ^ 1u, 1, v3);
}

uint64_t sub_213E3E194(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_213E3E19C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  unint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char v127[8];
  char v128[8];
  char v129[16];
  uint64_t v130;
  uint64_t v131[2];

  v115 = a2;
  v3 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v3);
  v111 = (uint64_t)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v112);
  v114 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v110 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v116 = (char *)&v108 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v108 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v124 = (char *)&v108 - v17;
  v18 = sub_213EF1D64();
  v121 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v113 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v109 = (char *)&v108 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v119 = (char *)&v108 - v23;
  v118 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  v24 = *(_QWORD *)(v118 - 8);
  v25 = MEMORY[0x24BDAC7A8](v118);
  v126 = (uint64_t)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v108 - v27;
  v120 = a1;
  v29 = swift_bridgeObjectRetain();
  v30 = sub_213DAFB88(v29);
  swift_bridgeObjectRelease();
  v31 = MEMORY[0x24BEE4AF8];
  if (!v30)
    v30 = MEMORY[0x24BEE4AF8];
  v131[0] = MEMORY[0x24BEE4AF8];
  v125 = *(_QWORD *)(v30 + 16);
  if (v125)
  {
    v117 = v18;
    v32 = 0;
    v122 = v8;
    v123 = v16;
    v33 = v124;
    while (v32 < *(_QWORD *)(v30 + 16))
    {
      v34 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v35 = *(_QWORD *)(v24 + 72);
      sub_213DCA7E4(v30 + v34 + v35 * v32, (uint64_t)v28, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      if (*v28 == 3)
      {
        sub_213DBB430((uint64_t)v28, v126, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
        v36 = v131[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_213DCD5FC(0, *(_QWORD *)(v36 + 16) + 1, 1);
          v36 = v131[0];
        }
        v38 = *(_QWORD *)(v36 + 16);
        v37 = *(_QWORD *)(v36 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_213DCD5FC(v37 > 1, v38 + 1, 1);
          v36 = v131[0];
        }
        *(_QWORD *)(v36 + 16) = v38 + 1;
        sub_213DBB430(v126, v36 + v34 + v38 * v35, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
        v8 = v122;
        v16 = v123;
        v33 = v124;
      }
      else
      {
        sub_213DCA828((uint64_t)v28, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      }
      if (v125 == ++v32)
      {
        v31 = v131[0];
        v18 = v117;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_64;
  }
  v33 = v124;
LABEL_16:
  swift_bridgeObjectRelease();
  v40 = v120;
  v39 = (_QWORD *)v121;
  if (*(_QWORD *)(v31 + 16))
  {
    v41 = v31
        + *(int *)(v118 + 28)
        + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v42 = *(void (**)(char *, unint64_t, uint64_t))(v121 + 16);
    v42(v33, v41, v18);
    v43 = (uint64_t)v33;
    v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v39[7];
    v44(v43, 0, 1, v18);
    v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v39[6];
    if (v45(v43, 1, v18) != 1)
    {
      v126 = v39[4];
      ((void (*)(char *, uint64_t, uint64_t))v126)(v119, v43, v18);
      if (!isSiriPlayMedia(_:)())
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v58 = sub_213EF2724();
        __swift_project_value_buffer(v58, (uint64_t)qword_253F08A00);
        v59 = v113;
        v42(v113, (unint64_t)v119, v18);
        v60 = sub_213EF270C();
        v61 = sub_213EF2C94();
        if (os_log_type_enabled(v60, v61))
        {
          v62 = swift_slowAlloc();
          v63 = swift_slowAlloc();
          v131[0] = v63;
          *(_DWORD *)v62 = 136315394;
          if (qword_254D3A020 != -1)
            swift_once();
          v64 = qword_254D3DBD8;
          v65 = unk_254D3DBE0;
          swift_bridgeObjectRetain();
          v130 = sub_213DB0570(v64, v65, v131);
          sub_213EF2D9C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v62 + 12) = 2080;
          sub_213DE8A88((unint64_t *)&qword_253F06938, MEMORY[0x24BDCEAB8]);
          v66 = sub_213EF31F8();
          v130 = sub_213DB0570(v66, v67, v131);
          sub_213EF2D9C();
          swift_bridgeObjectRelease();
          v68 = *(void (**)(char *, uint64_t))(v121 + 8);
          v68(v59, v18);
          _os_log_impl(&dword_213DAB000, v60, v61, "%s Turn with PLUS ID %s does not have a play media task type. Marking all suggestion outcomes as unknown.", (uint8_t *)v62, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v63, -1, -1);
          MEMORY[0x2199C53C4](v62, -1, -1);
        }
        else
        {
          v68 = (void (*)(char *, uint64_t))v39[1];
          v68(v59, v18);
        }

        v73 = sub_213E3FC6C(v31, 2u, 0);
        v74 = swift_release();
        MEMORY[0x24BDAC7A8](v74);
        v75 = v119;
        *(&v108 - 2) = (uint64_t)v119;
        v56 = sub_213EC2714((void (*)(id *))sub_213E3FDD8, (uint64_t)(&v108 - 4), v73, (uint64_t)v129);
        swift_bridgeObjectRelease();
        v68(v75, v18);
        return v56;
      }
      v42(v16, v40, v18);
      v44((uint64_t)v16, 0, 1, v18);
      sub_213DCC3D8(v115, (uint64_t)v8, &qword_254D3B568);
      v46 = type metadata accessor for MediaPlayClassification();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v8, 1, v46) == 1)
      {
        sub_213DAFEC4((uint64_t)v8, &qword_254D3B568);
        v47 = 1;
        v48 = (uint64_t)v116;
      }
      else
      {
        v69 = &v8[*(int *)(v46 + 32)];
        v70 = (uint64_t)v8;
        v48 = (uint64_t)v116;
        v42(v116, (unint64_t)v69, v18);
        sub_213DCA828(v70, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        v47 = 0;
      }
      v44(v48, v47, 1, v18);
      v71 = v114;
      v72 = v114 + *(int *)(v112 + 48);
      sub_213DCC3D8((uint64_t)v16, v114, &qword_253F04828);
      sub_213DCC3D8(v48, v72, &qword_253F04828);
      if (v45(v71, 1, v18) == 1)
      {
        sub_213DAFEC4(v48, &qword_253F04828);
        sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
        if (v45(v72, 1, v18) == 1)
        {
          sub_213DAFEC4(v71, &qword_253F04828);
LABEL_45:
          v79 = sub_213E3FDF4(v31, v115);
          v80 = (uint64_t *)sub_213E3D9C4(v31);
          swift_release();
          if (qword_253F04A88 != -1)
            swift_once();
          v81 = sub_213EF2724();
          __swift_project_value_buffer(v81, (uint64_t)qword_253F08A00);
          v82 = v40;
          v83 = v111;
          sub_213DCA7E4(v82, v111, type metadata accessor for FeaturisedTurn);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v84 = sub_213EF270C();
          v85 = sub_213EF2C94();
          if (os_log_type_enabled(v84, v85))
          {
            v126 = 0;
            v117 = v18;
            v86 = swift_slowAlloc();
            v87 = swift_slowAlloc();
            v131[0] = v87;
            *(_DWORD *)v86 = 136315906;
            if (qword_254D3A020 != -1)
              swift_once();
            v88 = qword_254D3DBD8;
            v89 = unk_254D3DBE0;
            swift_bridgeObjectRetain();
            v130 = sub_213DB0570(v88, v89, v131);
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            *(_WORD *)(v86 + 12) = 2048;
            v125 = v87;
            if (v79 >> 62)
            {
              swift_bridgeObjectRetain();
              v90 = sub_213EF306C();
              swift_bridgeObjectRelease();
            }
            else
            {
              v90 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            v130 = v90;
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            *(_WORD *)(v86 + 22) = 2048;
            v91 = v80[2];
            swift_bridgeObjectRelease();
            v130 = v91;
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            *(_WORD *)(v86 + 32) = 2080;
            sub_213DE8A88((unint64_t *)&qword_253F06938, MEMORY[0x24BDCEAB8]);
            v92 = v111;
            v18 = v117;
            v93 = sub_213EF31F8();
            v130 = sub_213DB0570(v93, v94, v131);
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            sub_213DCA828(v92, type metadata accessor for FeaturisedTurn);
            _os_log_impl(&dword_213DAB000, v84, v85, "%s Generated outcomes for %ld/%ld suggestions in Turn id=%s", (uint8_t *)v86, 0x2Au);
            v95 = v125;
            swift_arrayDestroy();
            MEMORY[0x2199C53C4](v95, -1, -1);
            MEMORY[0x2199C53C4](v86, -1, -1);

            v39 = (_QWORD *)v121;
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            sub_213DCA828(v83, type metadata accessor for FeaturisedTurn);

          }
          sub_213E3F240(v79, v80);
          v106 = swift_bridgeObjectRelease();
          MEMORY[0x24BDAC7A8](v106);
          v107 = v119;
          *(&v108 - 2) = (uint64_t)v119;
          v56 = sub_213EC2714((void (*)(id *))sub_213E406D8, (uint64_t)(&v108 - 4), v79, (uint64_t)v127);
          ((void (*)(char *, uint64_t))v39[1])(v107, v18);
          swift_bridgeObjectRelease();
          return v56;
        }
      }
      else
      {
        v76 = v110;
        sub_213DCC3D8(v71, v110, &qword_253F04828);
        if (v45(v72, 1, v18) != 1)
        {
          v77 = v109;
          ((void (*)(char *, uint64_t, uint64_t))v126)(v109, v72, v18);
          sub_213DE8A88((unint64_t *)&qword_253F06930, MEMORY[0x24BDCEA98]);
          LODWORD(v126) = sub_213EF2838();
          v78 = (void (*)(char *, uint64_t))v39[1];
          v78(v77, v18);
          sub_213DAFEC4((uint64_t)v116, &qword_253F04828);
          sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
          v78((char *)v76, v18);
          sub_213DAFEC4(v71, &qword_253F04828);
          if ((v126 & 1) != 0)
            goto LABEL_45;
LABEL_53:
          if (qword_253F04A88 != -1)
            swift_once();
          v96 = sub_213EF2724();
          __swift_project_value_buffer(v96, (uint64_t)qword_253F08A00);
          v97 = sub_213EF270C();
          v98 = sub_213EF2CA0();
          if (os_log_type_enabled(v97, v98))
          {
            v99 = (uint8_t *)swift_slowAlloc();
            v100 = swift_slowAlloc();
            v131[0] = v100;
            *(_DWORD *)v99 = 136315138;
            if (qword_254D3A020 != -1)
              swift_once();
            v101 = qword_254D3DBD8;
            v102 = unk_254D3DBE0;
            swift_bridgeObjectRetain();
            v130 = sub_213DB0570(v101, v102, v131);
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_213DAB000, v97, v98, "%s Suggestion was made on a turn that did not have a playback event. Marking as inconclusive", v99, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2199C53C4](v100, -1, -1);
            MEMORY[0x2199C53C4](v99, -1, -1);

            v39 = (_QWORD *)v121;
          }
          else
          {

          }
          v103 = sub_213E3FC6C(v31, 0xFu, 2u);
          v104 = swift_release();
          MEMORY[0x24BDAC7A8](v104);
          v105 = v119;
          *(&v108 - 2) = (uint64_t)v119;
          v56 = sub_213EC2714((void (*)(id *))sub_213E406D8, (uint64_t)(&v108 - 4), v103, (uint64_t)v128);
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v39[1])(v105, v18);
          return v56;
        }
        sub_213DAFEC4((uint64_t)v116, &qword_253F04828);
        sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
        ((void (*)(uint64_t, uint64_t))v39[1])(v76, v18);
      }
      sub_213DAFEC4(v71, &qword_253F04838);
      goto LABEL_53;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v33, 1, 1, v18);
    v43 = (uint64_t)v33;
  }
  swift_release();
  sub_213DAFEC4(v43, &qword_253F04828);
  if (qword_253F04A88 != -1)
LABEL_64:
    swift_once();
  v49 = sub_213EF2724();
  __swift_project_value_buffer(v49, (uint64_t)qword_253F08A00);
  v50 = sub_213EF270C();
  v51 = sub_213EF2CA0();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = swift_slowAlloc();
    v131[0] = v53;
    *(_DWORD *)v52 = 136315138;
    if (qword_254D3A020 != -1)
      swift_once();
    v54 = qword_254D3DBD8;
    v55 = unk_254D3DBE0;
    swift_bridgeObjectRetain();
    v130 = sub_213DB0570(v54, v55, v131);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v50, v51, "%s Missing PLUS Id for turn with PICS suggestions. SELF logs cannot be emitted for these suggestions.", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v53, -1, -1);
    MEMORY[0x2199C53C4](v52, -1, -1);
  }

  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_213E3F240(unint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  int v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  char v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __CFString *v58;
  __CFString *v59;
  uint64_t v60;
  __CFString *v61;
  __CFString *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t *i;
  __int128 v72;
  uint64_t *v73;
  uint64_t v74;
  __int128 v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_26;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = a2; v7; i = a2)
  {
    v8 = 0;
    v9 = (uint64_t *)MEMORY[0x24BEE4B00];
    v76 = a1 & 0xC000000000000001;
LABEL_4:
    v10 = v8;
    while (1)
    {
      v11 = v76 ? (id)MEMORY[0x2199C49B0](v10, a1) : *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v8 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = (uint64_t *)objc_msgSend(v11, sel_suggestionLinkId);
      if (v13)
      {
        a2 = v13;
        v14 = v9;
        sub_213EF2C7C();

        v15 = sub_213EF1D64();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) != 1)
        {
          v17 = sub_213EF1D10();
          *(_QWORD *)&v75 = v18;
          (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
          v19 = objc_msgSend(v12, sel_suggestionOutcome);
          a2 = v14;
          v20 = v75;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v79 = a2;
          v74 = v17;
          v23 = sub_213DFA220(v17, v20);
          v24 = a2[2];
          v25 = (v22 & 1) == 0;
          v26 = v24 + v25;
          if (__OFADD__(v24, v25))
          {
            __break(1u);
            goto LABEL_49;
          }
          if (a2[3] < v26)
          {
            LODWORD(v73) = v22;
            sub_213DFE394(v26, isUniquelyReferenced_nonNull_native);
            a2 = v79;
            v27 = sub_213DFA220(v74, v20);
            v28 = v22 & 1;
            LOBYTE(v22) = (_BYTE)v73;
            if ((v73 & 1) == v28)
            {
              v23 = v27;
              goto LABEL_18;
            }
LABEL_50:
            result = sub_213EF3288();
            __break(1u);
            return result;
          }
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
LABEL_18:
            v29 = v19;
            v9 = v79;
            if ((v22 & 1) != 0)
              goto LABEL_19;
LABEL_21:
            v9[(v23 >> 6) + 8] |= 1 << v23;
            v32 = (_QWORD *)(v9[6] + 16 * v23);
            *v32 = v74;
            v32[1] = v20;
            *(_DWORD *)(v9[7] + 4 * v23) = v29;
            v33 = v9[2];
            v34 = __OFADD__(v33, 1);
            v35 = v33 + 1;
            if (!v34)
            {
              v9[2] = v35;
              swift_bridgeObjectRetain();
              goto LABEL_23;
            }
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          v29 = v19;
          a2 = (uint64_t *)&v79;
          v30 = v22;
          sub_213E018D4();
          v31 = v30;
          v9 = v79;
          if ((v31 & 1) == 0)
            goto LABEL_21;
LABEL_19:
          *(_DWORD *)(v9[7] + 4 * v23) = v29;
LABEL_23:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v8 == v7)
          {
LABEL_24:
            swift_bridgeObjectRelease();
            a2 = i;
            goto LABEL_28;
          }
          goto LABEL_4;
        }
        sub_213DAFEC4((uint64_t)v6, &qword_253F04828);
        v9 = v14;
      }

      ++v10;
      if (v8 == v7)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    v7 = sub_213EF306C();
  }
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)MEMORY[0x24BEE4B00];
LABEL_28:
  v36 = a2[2];
  v37 = v77;
  if (!v36)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v38 = (unint64_t *)(a2 + 5);
  v39 = (_QWORD *)&unk_253F04000;
  *(_QWORD *)&v40 = 136315394;
  v75 = v40;
  v74 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v40 = 136315650;
  v72 = v40;
  v73 = v9;
  do
  {
    v46 = *(v38 - 1);
    v47 = *v38;
    v48 = v9[2];
    swift_bridgeObjectRetain();
    if (v48)
    {
      swift_bridgeObjectRetain();
      v49 = sub_213DFA220(v46, v47);
      if ((v50 & 1) != 0)
      {
        v76 = *(unsigned int *)(v9[7] + 4 * v49);
        swift_bridgeObjectRelease();
        if (v39[337] != -1)
          swift_once();
        v51 = sub_213EF2724();
        __swift_project_value_buffer(v51, (uint64_t)qword_253F08A00);
        swift_retain_n();
        swift_bridgeObjectRetain();
        v52 = sub_213EF270C();
        v53 = sub_213EF2C94();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = swift_slowAlloc();
          v55 = swift_slowAlloc();
          v78 = v37;
          v79 = (uint64_t *)v55;
          *(_DWORD *)v54 = v72;
          type metadata accessor for MediaSuggestionOutcomeExtractor();
          swift_retain();
          v56 = sub_213EF288C();
          *(_QWORD *)(v54 + 4) = sub_213DB0570(v56, v57, (uint64_t *)&v79);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v54 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v54 + 14) = sub_213DB0570(v46, v47, (uint64_t *)&v79);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v54 + 22) = 2080;
          v58 = CFSTR("PLUSSUGGESTIONOUTCOME_UNKNOWN");
          v59 = CFSTR("PLUSSUGGESTIONOUTCOME_UNKNOWN");
          if (v76 <= 0xF)
          {
            v60 = (int)v76;
            v59 = off_24D104E00[v60];
            v58 = off_24D104E80[v60];
          }
          v61 = v59;
          v62 = v58;
          v63 = sub_213EF2850();
          v65 = v64;

          *(_QWORD *)(v54 + 24) = sub_213DB0570(v63, v65, (uint64_t *)&v79);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213DAB000, v52, v53, "[%s] Suggestion Id=%s, Outcome=%s", (uint8_t *)v54, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v55, -1, -1);
          MEMORY[0x2199C53C4](v54, -1, -1);

          v37 = v77;
          v9 = v73;
          v39 = (_QWORD *)&unk_253F04000;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          v9 = v73;
        }
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
    }
    if (v39[337] != -1)
      swift_once();
    v66 = sub_213EF2724();
    __swift_project_value_buffer(v66, (uint64_t)qword_253F08A00);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v67 = sub_213EF270C();
    v68 = sub_213EF2CA0();
    if (os_log_type_enabled(v67, v68))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      *(_DWORD *)v41 = v75;
      v78 = v77;
      v79 = (uint64_t *)v42;
      type metadata accessor for MediaSuggestionOutcomeExtractor();
      swift_retain();
      v43 = sub_213EF288C();
      *(_QWORD *)(v41 + 4) = sub_213DB0570(v43, v44, (uint64_t *)&v79);
      swift_release_n();
      v39 = &unk_253F04000;
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v41 + 14) = sub_213DB0570(v46, v47, (uint64_t *)&v79);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v67, v68, "[%s] Missing outcome for Suggestion Id=%s. SELF messages will not be emitted.", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      v45 = v42;
      v37 = v77;
      MEMORY[0x2199C53C4](v45, -1, -1);
      MEMORY[0x2199C53C4](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
LABEL_31:
    v38 += 2;
    --v36;
  }
  while (v36);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_213E3F9DC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3A738) + 48);
  v7 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a2, v7);
  *(_QWORD *)(a3 + v6) = v5;
  return v5;
}

uint64_t MediaSuggestionOutcomeExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MediaSuggestionOutcomeExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaSuggestionOutcomeExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaSuggestionOutcomeExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaSuggestionOutcomeExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL sub_213E3FA9C(uint64_t a1)
{
  return sub_213E3FAB4(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

BOOL sub_213E3FAA8(uint64_t a1)
{
  return sub_213E3FAB4(a1, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
}

BOOL sub_213E3FAB4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a1, 1, v3) != 1;
}

uint64_t sub_213E3FAF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DCC3D8(a1, (uint64_t)v6, &qword_253F04828);
  v7 = sub_213EF1D64();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  __break(1u);
  return result;
}

uint64_t sub_213E3FBB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DCC3D8(a1, (uint64_t)v6, &qword_254D3B568);
  v7 = type metadata accessor for MediaPlayClassification();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result != 1)
    return sub_213DBB430((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  __break(1u);
  return result;
}

uint64_t sub_213E3FC6C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[2];
  unsigned int v17;
  uint64_t v18;

  v17 = a3;
  v5 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    v16[1] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_213DCA7E4(v11, (uint64_t)v8, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      v13 = sub_213ED5D70(v17);
      v14 = sub_213ED60E8((uint64_t)&v8[*(int *)(v5 + 20)], (uint64_t)&v8[*(int *)(v5 + 24)], a2, (uint64_t)v13);

      v15 = sub_213DCA828((uint64_t)v8, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      if (v14)
      {
        MEMORY[0x2199C44C4](v15);
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

id sub_213E3FDD8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213E3F9DC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_213E3FDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MediaPlayClassification();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  v17 = MEMORY[0x24BEE4AF8];
  v54 = MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v18)
  {
    v46 = a2;
    v47 = v6;
    v48 = v9;
    v49 = a1;
    v19 = *(_QWORD *)(v11 + 72);
    v52 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v20 = a1 + v52;
    do
    {
      sub_213DCA7E4(v20, (uint64_t)v16, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      if (v16[*(int *)(v10 + 32)] == 2)
      {
        sub_213DBB430((uint64_t)v16, (uint64_t)v14, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD5FC(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v54;
        v22 = *(_QWORD *)(v54 + 16);
        v21 = *(_QWORD *)(v54 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_213DCD5FC(v21 > 1, v22 + 1, 1);
          v17 = v54;
        }
        *(_QWORD *)(v17 + 16) = v22 + 1;
        sub_213DBB430((uint64_t)v14, v17 + v52 + v22 * v19, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      }
      else
      {
        sub_213DCA828((uint64_t)v16, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      }
      v20 += v19;
      --v18;
    }
    while (v18);
    v17 = v54;
    v9 = v48;
    a1 = v49;
    a2 = v46;
    v6 = v47;
  }
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v17 + 16);
  swift_release();
  if (v23 != 1)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v33 = sub_213EF2724();
    __swift_project_value_buffer(v33, (uint64_t)qword_253F08A00);
    v34 = sub_213EF270C();
    v35 = sub_213EF2C94();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v54 = v37;
      *(_DWORD *)v36 = 136315138;
      if (qword_254D3A020 != -1)
        swift_once();
      v38 = qword_254D3DBD8;
      v39 = unk_254D3DBE0;
      swift_bridgeObjectRetain();
      v53 = sub_213DB0570(v38, v39, &v54);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v34, v35, "%s Either found zero surfaced suggestions, or multiple surfaced suggestions. Marking all suggestions as unknown outcomes.", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v37, -1, -1);
      MEMORY[0x2199C53C4](v36, -1, -1);
    }

    v31 = a1;
    v32 = 0;
    return sub_213E3FC6C(v31, 2u, v32);
  }
  sub_213DCC3D8(a2, (uint64_t)v6, &qword_254D3B568);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v6, 1, v51) == 1)
  {
    sub_213DAFEC4((uint64_t)v6, &qword_254D3B568);
    if (qword_253F04A88 != -1)
      swift_once();
    v24 = sub_213EF2724();
    __swift_project_value_buffer(v24, (uint64_t)qword_253F08A00);
    v25 = sub_213EF270C();
    v26 = sub_213EF2C94();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v54 = v28;
      *(_DWORD *)v27 = 136315138;
      if (qword_254D3A020 != -1)
        swift_once();
      v29 = qword_254D3DBD8;
      v30 = unk_254D3DBE0;
      swift_bridgeObjectRetain();
      v53 = sub_213DB0570(v29, v30, &v54);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v25, v26, "%s PIMS surfaced a suggestion but no MediaPlayClassification was generated. Marking all suggestions as unknown.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v28, -1, -1);
      MEMORY[0x2199C53C4](v27, -1, -1);
    }

    v31 = a1;
    v32 = 2;
    return sub_213E3FC6C(v31, 2u, v32);
  }
  sub_213DBB430((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  if (v9[8] == 1)
  {
    if ((sub_213E37098() & 1) != 0)
    {
      v41 = a1;
      v42 = 13;
      v43 = 1;
    }
    else
    {
      v41 = a1;
      v42 = 14;
      v43 = 3;
    }
  }
  else
  {
    v41 = a1;
    v42 = 12;
    v43 = 2;
  }
  v40 = sub_213E3FC6C(v41, v42, v43);
  sub_213DCA828((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  return v40;
}

uint64_t sub_213E403D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  int isUniquelyReferenced_nonNull_native;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  char v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a2;
  v41 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  v8 = *(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8);
  v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v10 = *(_QWORD *)(v8 + 72);
  v38 = a1;
  v39 = v10;
  v11 = swift_bridgeObjectRetain();
  v12 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    MEMORY[0x24BDAC7A8](v11);
    v37 = v9;
    sub_213E3D2B8((uint64_t (*)(uint64_t))sub_213E0541C, (uint64_t)v35, (uint64_t)v6);
    v13 = sub_213E3E19C(v9, (uint64_t)v6);
    sub_213DAFEC4((uint64_t)v6, &qword_254D3B568);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = *(_QWORD *)(v12 + 16);
    v16 = v15 + v14;
    if (__OFADD__(v15, v14))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v16 <= *(_QWORD *)(v12 + 24) >> 1)
    {
      if (*(_QWORD *)(v13 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v15 <= v16)
        v18 = v15 + v14;
      else
        v18 = v15;
      v12 = sub_213DB6DE8(isUniquelyReferenced_nonNull_native, v18, 1, v12);
      if (*(_QWORD *)(v13 + 16))
      {
LABEL_14:
        v19 = *(_QWORD *)(v12 + 16);
        v20 = (*(_QWORD *)(v12 + 24) >> 1) - v19;
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A738);
        if (v20 < v14)
          goto LABEL_28;
        v22 = *(_QWORD *)(v21 - 8);
        v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        v24 = *(_QWORD *)(v22 + 72);
        v25 = v12 + v23 + v24 * v19;
        v26 = v13 + v23;
        v27 = v24 * v14;
        v28 = v25 + v27;
        v29 = v26 + v27;
        if (v26 < v28 && v25 < v29)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v31 = *(_QWORD *)(v12 + 16);
          v32 = __OFADD__(v31, v14);
          v33 = v31 + v14;
          if (v32)
            goto LABEL_29;
          *(_QWORD *)(v12 + 16) = v33;
        }
        goto LABEL_4;
      }
    }
    if (v14)
      goto LABEL_27;
LABEL_4:
    v11 = swift_bridgeObjectRelease();
    v9 += v39;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  v42 = *v40;
  sub_213E1E2EC((uint64_t)&v42);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v37) = 0;
  v36 = 1092;
  v35[0] = 2;
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213E406B0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

id sub_213E406D8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213E3FDD8(a1, a2);
}

uint64_t sub_213E406EC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DE30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3DCA8 = 91;
  unk_254D3DCB0 = 0xE100000000000000;
  return result;
}

uint64_t FeaturisedNowPlayingEventStream.init(eventReader:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213DB0BF0(a1, a2);
}

uint64_t FeaturisedNowPlayingEventStream.events(since:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCC0);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCC8);
  v3[9] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCD0);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v3[12] = *(_QWORD *)(v6 + 64);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  type metadata accessor for EventStreamContext();
  v3[16] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCD8);
  v3[17] = v7;
  v3[18] = *(_QWORD *)(v7 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213E408B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 32), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 24));
  sub_213E40D1C();
  sub_213EF2328();
  v1 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 48);
  v25 = *(_QWORD *)(v0 + 40);
  v4 = *(char **)(v0 + 24);
  v22 = *(_QWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCE8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_213EF44B0;
  v6 = type metadata accessor for CommonBiomeEventFeatureExtractor();
  v7 = swift_allocObject();
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = sub_213DB0DB4(&qword_254D3DCF0, (uint64_t (*)(uint64_t))type metadata accessor for CommonBiomeEventFeatureExtractor, (uint64_t)&protocol conformance descriptor for CommonBiomeEventFeatureExtractor);
  *(_QWORD *)(v5 + 32) = v7;
  v8 = type metadata accessor for NowPlayingFeatureExtractor();
  swift_allocObject();
  v9 = sub_213EF25EC();
  *(_QWORD *)(v5 + 96) = v8;
  *(_QWORD *)(v5 + 104) = sub_213DB0DB4(&qword_254D3D750, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingFeatureExtractor, MEMORY[0x24BEA5268]);
  *(_QWORD *)(v5 + 72) = v9;
  sub_213E40D58(v4, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v27, v1, v26);
  *(_QWORD *)(swift_allocObject() + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD08);
  sub_213DCA20C(&qword_254D3DD10, &qword_254D3DCD8, MEMORY[0x24BEA4E90]);
  sub_213EF300C();
  sub_213DCA20C(&qword_254D3DD20, &qword_254D3DCC8, MEMORY[0x24BEE6F08]);
  sub_213EF31EC();
  sub_213E416C0(v17, v3 + *(int *)(v18 + 52));
  sub_213DCC3D8(v3, v19, &qword_254D3DCD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD28);
  v10 = swift_allocBox();
  v12 = v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_213DCC3D8(v19, v20, &qword_254D3DCD0);
  v14 = (*(unsigned __int8 *)(v21 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v10;
  sub_213E41B24(v20, v15 + v14);
  sub_213EF2B74();
  sub_213DAFEC4(v19, &qword_254D3DCD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v22, v25);
  sub_213DAFEC4(v3, &qword_254D3DCD0);
  sub_213E41BF0(v17);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_213E40D1C()
{
  unint64_t result;

  result = qword_254D3DCE0;
  if (!qword_254D3DCE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3DCE0);
  }
  return result;
}

uint64_t sub_213E40D58@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  NSObject *v26;
  _BOOL4 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a2;
  v3 = sub_213EF1AA0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_213EF1CF8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v45 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v54 = (char *)&v45 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v45 - v20;
  v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v55 = a1;
  v22((char *)&v45 - v20, a1, v6);
  sub_213EF1CEC();
  v23 = sub_213EF1C98();
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v19, v6);
  if ((v23 & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v25 = sub_213EF2724();
    __swift_project_value_buffer(v25, (uint64_t)qword_253F08A00);
    v22(v16, v55, v6);
    v26 = sub_213EF270C();
    v51 = sub_213EF2CA0();
    v27 = os_log_type_enabled(v26, (os_log_type_t)v51);
    v52 = v22;
    if (v27)
    {
      v46 = v7;
      v48 = v26;
      v49 = v4;
      v50 = v3;
      v28 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v60 = v47;
      *(_DWORD *)v28 = 136315650;
      if (qword_254D3A028 != -1)
        swift_once();
      v30 = qword_254D3DCA8;
      v29 = unk_254D3DCB0;
      swift_bridgeObjectRetain();
      v59 = sub_213DB0570(v30, v29, &v60);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      sub_213DB0DB4(&qword_254D3DE28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v31 = sub_213EF31F8();
      v59 = sub_213DB0570(v31, v32, &v60);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v24(v16, v6);
      *(_WORD *)(v28 + 22) = 2080;
      sub_213EF1CEC();
      v33 = sub_213EF31F8();
      v35 = v34;
      v24(v19, v6);
      v59 = sub_213DB0570(v33, v35, &v60);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v36 = v48;
      _os_log_impl(&dword_213DAB000, v48, (os_log_type_t)v51, "%s Start date (%s) is greater than now (%s), setting start date to now", (uint8_t *)v28, 0x20u);
      v37 = v47;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v37, -1, -1);
      MEMORY[0x2199C53C4](v28, -1, -1);

      v4 = v49;
      v3 = v50;
      v7 = v46;
    }
    else
    {
      v24(v16, v6);

    }
    v38 = v53;
    sub_213EF1CEC();
    sub_213DB0DB4((unint64_t *)&qword_254D3BAA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v39 = v55;
    if ((sub_213EF282C() & 1) != 0)
    {
      v40 = v54;
      v41 = v54;
      v42 = v38;
    }
    else
    {
      v40 = v54;
      v41 = v54;
      v42 = v39;
    }
    v52(v41, v42, v6);
    v24(v38, v6);
    v24(v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v40, v6);
    v22 = v52;
  }
  v22(v19, v21, v6);
  sub_213EF1CEC();
  v43 = v57;
  sub_213EF1A7C();
  v24(v21, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v58, v43, v3);
}

uint64_t sub_213E4126C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;

  v3[8] = a1;
  v3[9] = a3;
  v3[10] = *a2;
  return swift_task_switch();
}

uint64_t sub_213E4128C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = (void *)MEMORY[0x2199C4E6C]();
  v3 = MEMORY[0x24BEE4AF8];
  v10 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 72) + 32;
    swift_bridgeObjectRetain();
    do
    {
      v6 = *(_QWORD *)(v0 + 80);
      sub_213DAFDFC(v5, v0 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      *(_QWORD *)(v0 + 56) = v6;
      v7 = sub_213EF2334();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      sub_213DB43C8(v7);
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v10;
  }
  v8 = *(_QWORD **)(v0 + 64);
  objc_autoreleasePoolPop(v2);
  *v8 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E41380()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213E413A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213E4141C;
  v7[8] = a1;
  v7[9] = v6;
  v7[10] = *a2;
  return swift_task_switch();
}

uint64_t sub_213E4141C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

double sub_213E41464@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DynamicType;
  unint64_t v18;
  unint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26[2];
  uint64_t v27;
  uint64_t v28;

  v4 = swift_bridgeObjectRetain();
  v5 = sub_213DAF448(v4);
  if (!v6)
    goto LABEL_17;
  v7 = v5;
  v8 = v6;
  v9 = sub_213DAF454(a1);
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v11 = v9;
  v12 = v10;
  v28 = MEMORY[0x24BEE4B08];
  v13 = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v14)
  {
    v21 = v11;
    v22 = v7;
    v23 = v8;
    v15 = MEMORY[0x24BEE4AF8];
    v16 = a1 + 32;
    do
    {
      sub_213DAFDFC(v16, (uint64_t)v26);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      *(_QWORD *)&v24 = swift_allocObject();
      sub_213DAFDFC((uint64_t)v26, v24 + 16);
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      DynamicType = swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
      if ((sub_213DD5E5C((uint64_t *)&v24, DynamicType) & 1) != 0)
      {
        sub_213DB0BF0(v26, (uint64_t)&v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD234(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v27;
        v19 = *(_QWORD *)(v27 + 16);
        v18 = *(_QWORD *)(v27 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_213DCD234(v18 > 1, v19 + 1, 1);
          v15 = v27;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        sub_213DB0BF0(&v24, v15 + 40 * v19 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      }
      v16 += 40;
      --v14;
    }
    while (v14);
    v13 = v27;
    v7 = v22;
    v8 = v23;
    v11 = v21;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_213E41684(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_213E41464(*a2, a1);
  return sub_213E42DF8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_213E416C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventStreamContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E41704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213E4141C;
  return FeaturisedNowPlayingEventStream.events(since:)(a1, a2);
}

uint64_t sub_213E41764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a1;
  v3[12] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD28);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_213E417E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t (*v12)(_QWORD);

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  swift_beginAccess();
  sub_213DCC3D8(v1, v2, &qword_254D3DD28);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD30);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v1) = v5(v2, 1, v3);
  sub_213DAFEC4(v2, &qword_254D3DD28);
  if ((_DWORD)v1 == 1)
  {
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(uint64_t **)(v0 + 104);
    sub_213E42768(v7);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v7, 0, 1, v3);
    swift_beginAccess();
    sub_213E42940((uint64_t)v7, v6, &qword_254D3DD28);
  }
  v8 = *(_QWORD *)(v0 + 120);
  swift_beginAccess();
  if (v5(v8, 1, v3))
  {
    v9 = *(_QWORD *)(v0 + 88);
    swift_endAccess();
    *(_QWORD *)(v9 + 32) = 0;
    *(_OWORD *)v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = (uint64_t (*)(_QWORD))((char *)&dword_254D3DE00 + dword_254D3DE00);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v11;
    *v11 = v0;
    v11[1] = sub_213E419A4;
    return v12(*(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_213E419A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213E41A2C()
{
  uint64_t v0;

  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E41A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCD0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 52);
  v7 = sub_213EF1AA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_213E41B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E41B6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCD0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_213E4141C;
  return sub_213E41764(a1, v5, v6);
}

uint64_t sub_213E41BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EventStreamContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FeaturisedNowPlayingEventStream(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t initializeWithCopy for FeaturisedNowPlayingEventStream(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for FeaturisedNowPlayingEventStream(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for FeaturisedNowPlayingEventStream(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeaturisedNowPlayingEventStream(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeaturisedNowPlayingEventStream(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeaturisedNowPlayingEventStream()
{
  return &type metadata for FeaturisedNowPlayingEventStream;
}

uint64_t sub_213E41D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a1;
  v3[12] = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD78);
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD80);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_213E41E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  sub_213DCC3D8(v1, v2, &qword_254D3DD80);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD88);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v1) = v5(v2, 1, v3);
  sub_213DAFEC4(v2, &qword_254D3DD80);
  if ((_DWORD)v1 == 1)
  {
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    sub_213DCA20C(&qword_254D3DD90, &qword_254D3DD78, MEMORY[0x24BEE6F58]);
    sub_213EF2B44();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v7, 0, 1, v3);
    swift_beginAccess();
    sub_213E42940(v7, v6, &qword_254D3DD80);
  }
  v8 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  if (v5(v8, 1, v3))
  {
    v9 = *(_QWORD *)(v0 + 88);
    swift_endAccess();
    *(_QWORD *)(v9 + 32) = 0;
    *(_OWORD *)v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_213DCA20C(&qword_254D3DD98, &qword_254D3DD88, MEMORY[0x24BEE6F40]);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_213E42044;
    return sub_213EF2B20();
  }
}

uint64_t sub_213E42044()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213E420D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a1;
  v3[12] = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDD8);
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDE0);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_213E42180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  sub_213DCC3D8(v1, v2, &qword_254D3DDE0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDE8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v1) = v5(v2, 1, v3);
  sub_213DAFEC4(v2, &qword_254D3DDE0);
  if ((_DWORD)v1 == 1)
  {
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    sub_213DCA20C(&qword_254D3DDF0, &qword_254D3DDD8, MEMORY[0x24BEA4E90]);
    sub_213EF2B44();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v7, 0, 1, v3);
    swift_beginAccess();
    sub_213E42940(v7, v6, &qword_254D3DDE0);
  }
  v8 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  if (v5(v8, 1, v3))
  {
    v9 = *(_QWORD *)(v0 + 88);
    swift_endAccess();
    *(_QWORD *)(v9 + 32) = 0;
    *(_OWORD *)v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_213DCA20C(&qword_254D3DDF8, &qword_254D3DDE8, MEMORY[0x24BEA4E70]);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_213E423A8;
    return sub_213EF2B20();
  }
}

uint64_t sub_213E423A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213E4243C()
{
  uint64_t v0;

  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E42498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a1;
  v3[12] = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDA8);
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDB0);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_213E42540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  sub_213DCC3D8(v1, v2, &qword_254D3DDB0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDB8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v1) = v5(v2, 1, v3);
  sub_213DAFEC4(v2, &qword_254D3DDB0);
  if ((_DWORD)v1 == 1)
  {
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    sub_213DCA20C(&qword_254D3DDC0, &qword_254D3DDA8, MEMORY[0x24BEE7090]);
    sub_213EF2B44();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v7, 0, 1, v3);
    swift_beginAccess();
    sub_213E42940(v7, v6, &qword_254D3DDB0);
  }
  v8 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  if (v5(v8, 1, v3))
  {
    v9 = *(_QWORD *)(v0 + 88);
    swift_endAccess();
    *(_QWORD *)(v9 + 32) = 0;
    *(_OWORD *)v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_213DCA20C(&qword_254D3DDC8, &qword_254D3DDB8, MEMORY[0x24BEE7070]);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_213E42044;
    return sub_213EF2B20();
  }
}

uint64_t sub_213E42768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventStreamContext();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCD0);
  sub_213E416C0(v1 + *(int *)(v10 + 52), (uint64_t)v9);
  type metadata accessor for NowPlayingStreamStateMachine(0);
  v11 = swift_allocObject();
  v12 = v11
      + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentEvent;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_QWORD *)(v12 + 32) = 0;
  v13 = v11
      + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_eventToEmit;
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_BYTE *)(v11
           + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_currentPlayState) = 3;
  *(_QWORD *)(v11
            + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_playLength) = 0;
  v14 = v11
      + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_context;
  *(_QWORD *)(v11
            + OBJC_IVAR____TtC28SiriPrivateLearningInferenceP33_9D5FDEA6C0F78966509CB6B1160C3BEF28NowPlayingStreamStateMachine_lastPlayTimestamp) = 0;
  sub_213E42DB4((uint64_t)v9, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD30);
  sub_213DCA20C(&qword_254D3DE18, &qword_254D3DD40, MEMORY[0x24BEE7030]);
  sub_213EF2B44();
  v16 = *(int *)(v15 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DE20);
  swift_allocObject();
  result = sub_213EF26A0();
  *(uint64_t *)((char *)a1 + v16) = result;
  *((_BYTE *)a1 + *(int *)(v15 + 60)) = 0;
  *a1 = v11;
  return result;
}

uint64_t sub_213E42940(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_213E42984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = v1;
  return swift_task_switch();
}

uint64_t sub_213E4299C()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = (_DWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD30);
  *(_DWORD *)(v0 + 208) = v1[14];
  if ((sub_213EF2688() & 1) == 0)
  {
    sub_213EF2664();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 184);
  v3 = (int)v1[15];
  *(_DWORD *)(v0 + 212) = v3;
  if ((*(_BYTE *)(v2 + v3) & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v4 + 32) = 0;
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_DWORD *)(v0 + 216) = v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DE08);
  sub_213DCA20C(&qword_254D3DE10, &qword_254D3DE08, MEMORY[0x24BEE7008]);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v6;
  *v6 = v0;
  v6[1] = sub_213E42ABC;
  return sub_213EF2B20();
}

uint64_t sub_213E42ABC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E42B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + 64);
  if (!v1)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 184) + *(int *)(v0 + 212)) = 1;
    v13 = sub_213E3C000();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 64);
      do
      {
        v16 = *(v15 - 4);
        v17 = *(v15 - 3);
        v19 = *(v15 - 2);
        v18 = *(v15 - 1);
        v20 = *v15;
        v15 += 5;
        *(_QWORD *)(v0 + 96) = v16;
        *(_QWORD *)(v0 + 104) = v17;
        *(_QWORD *)(v0 + 112) = v19;
        *(_QWORD *)(v0 + 120) = v18;
        *(_QWORD *)(v0 + 128) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_213EF2670();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 24) = v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 48) = v2;
  v4 = sub_213E3BABC((uint64_t *)(v0 + 16));
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = (uint64_t *)(v4 + 64);
    do
    {
      v7 = *(v6 - 4);
      v8 = *(v6 - 3);
      v10 = *(v6 - 2);
      v9 = *(v6 - 1);
      v11 = *v6;
      v6 += 5;
      *(_QWORD *)(v0 + 136) = v7;
      *(_QWORD *)(v0 + 144) = v8;
      *(_QWORD *)(v0 + 152) = v10;
      *(_QWORD *)(v0 + 160) = v9;
      *(_QWORD *)(v0 + 168) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213EF2670();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((sub_213EF2688() & 1) == 0)
  {
LABEL_12:
    sub_213EF2664();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 184) + *(int *)(v0 + 212)) & 1) != 0)
  {
    v12 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v12 + 32) = 0;
    *(_OWORD *)v12 = 0u;
    *(_OWORD *)(v12 + 16) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DE08);
  sub_213DCA20C(&qword_254D3DE10, &qword_254D3DE08, MEMORY[0x24BEE7008]);
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v22;
  *v22 = v0;
  v22[1] = sub_213E42ABC;
  return sub_213EF2B20();
}

uint64_t sub_213E42DA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E42DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventStreamContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E42DF8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_213E42E00()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t PartialRepetitionMetadata.__allocating_init(session:successClassification:comparisons:firstTurn:secondTurn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a2, v11);
  v14 = sub_213E431C4(a1, v13, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return v14;
}

uint64_t PartialRepetitionMetadata.init(session:successClassification:comparisons:firstTurn:secondTurn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a2, v11);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_213E430EC(a1, (uint64_t)v15, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return v17;
}

uint64_t PartialRepetitionMetadata.deinit()
{
  uint64_t v0;

  sub_213DCA828(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_session, type metadata accessor for FeaturisedSession);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_successClassification);
  swift_bridgeObjectRelease();
  sub_213DCA828(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_firstTurn, type metadata accessor for FeaturisedTurn);
  sub_213DCA828(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_secondTurn, type metadata accessor for FeaturisedTurn);
  return v0;
}

uint64_t PartialRepetitionMetadata.__deallocating_deinit()
{
  uint64_t v0;

  sub_213DCA828(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_session, type metadata accessor for FeaturisedSession);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_successClassification);
  swift_bridgeObjectRelease();
  sub_213DCA828(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_firstTurn, type metadata accessor for FeaturisedTurn);
  sub_213DCA828(v0 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_secondTurn, type metadata accessor for FeaturisedTurn);
  return swift_deallocClassInstance();
}

char *PartialRepetitionDefinition.generator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char **a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *result;

  v6 = type metadata accessor for PartialRepetitionInferenceGroundTruthGenerator(0, a1, a2, a3);
  result = sub_213EA70B0(v4, v7, v8, v9);
  a4[3] = (char *)v6;
  a4[4] = (char *)&protocol witness table for PartialRepetitionInferenceGroundTruthGenerator<A>;
  *a4 = result;
  return result;
}

uint64_t sub_213E430EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v15;
  uint64_t *boxed_opaque_existential_1;

  v15 = (uint64_t *)(a6 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_successClassification);
  v15[3] = a7;
  v15[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a2, a7);
  sub_213DBB430(a1, a6 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_session, type metadata accessor for FeaturisedSession);
  *(_QWORD *)(a6 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_comparisons) = a3;
  sub_213DBB430(a4, a6 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_firstTurn, type metadata accessor for FeaturisedTurn);
  sub_213DBB430(a5, a6 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_secondTurn, type metadata accessor for FeaturisedTurn);
  return a6;
}

uint64_t sub_213E431C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PartialRepetitionMetadata();
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, a7);
  return sub_213E430EC(a1, (uint64_t)v17, a3, a4, a5, v18, a7, a8);
}

uint64_t dispatch thunk of PartialRepetitionDefinition.successClassifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.supportingClassifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.turnComparators.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.maximumTimeBetweenRestatements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.identifySuccessClassification(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.isInitiatingSiriTurn(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.isInitiatingEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 120))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.extractReferencedEntity(session:successClassification:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.extractReferencedEntity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.extractUsoEntity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.dropIgnorableTurns(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.isValidSession(session:classifications:isComposite:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 160))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.getSessionStitcher()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of PartialRepetitionDefinition.preProcessSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t sub_213E43310()
{
  return type metadata accessor for PartialRepetitionMetadata();
}

uint64_t type metadata accessor for PartialRepetitionMetadata()
{
  uint64_t result;

  result = qword_254D3DE60;
  if (!qword_254D3DE60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E43354()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FeaturisedSession(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeaturisedTurn(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PartialRepetitionMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PartialRepetitionMetadata.__allocating_init(session:successClassification:comparisons:firstTurn:secondTurn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t static ContactCollection.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_254D3DF10;
}

uint64_t static ContactCollection.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_254D3DF10 = a1;
  return result;
}

uint64_t (*static ContactCollection.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ContactCollection.contacts.getter()
{
  return swift_bridgeObjectRetain();
}

id ContactCollection.__allocating_init(contacts:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC28SiriPrivateLearningInference17ContactCollection_contacts] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ContactCollection.init(contacts:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningInference17ContactCollection_contacts] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ContactCollection();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for ContactCollection()
{
  return objc_opt_self();
}

void sub_213E4360C(void *a1)
{
  void *v2;
  id v3;

  sub_213DB9CDC(0, &qword_254D3DF20);
  v2 = (void *)sub_213EF2A30();
  v3 = (id)sub_213EF2844();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

}

id ContactCollection.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ContactCollection.init(coder:)(a1);
}

id ContactCollection.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  objc_class *v5;
  char *v6;
  id v7;
  objc_super v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DF28);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_213EF44B0;
  *(_QWORD *)(v3 + 32) = sub_213DB9CDC(0, &qword_254D3DF30);
  *(_QWORD *)(v3 + 40) = sub_213DB9CDC(0, &qword_254D3DF20);
  v4 = v1;
  sub_213EF2D48();
  swift_bridgeObjectRelease();
  if (!v12)
  {

    sub_213E43920((uint64_t)v11);
LABEL_6:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DF40);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_6;
  }

  v5 = (objc_class *)type metadata accessor for ContactCollection();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC28SiriPrivateLearningInference17ContactCollection_contacts] = v10;
  v9.receiver = v6;
  v9.super_class = v5;
  v7 = objc_msgSendSuper2(&v9, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

uint64_t sub_213E43920(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DF38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id ContactCollection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ContactCollection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ContactCollection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContactCollection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ContactCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactCollection.__allocating_init(contacts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ContactCollection.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ContactCollection.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_213E43A74(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_213E4473C(a1, a2, a3, &qword_253F06B10, (uint64_t (*)(_QWORD))type metadata accessor for PhoneCallGroundTruth, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_213DB5784);
}

unint64_t sub_213E43AA0(void (*a1)(__int128 *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void (*v24)(__int128 *);

  v24 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069A0);
  v7 = *(_QWORD *)(v20 - 8);
  v8 = MEMORY[0x24BDAC7A8](v20);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  swift_retain();
  sub_213EF2FDC();
  swift_release();
  sub_213EF30C0();
  v13 = v22;
  if ((_QWORD)v22)
  {
    v14 = v23;
    v15 = MEMORY[0x24BEE4AF8];
    v19 = a2;
    while (1)
    {
      v21 = v13;
      v22 = v13;
      v23 = v14;
      v24(&v22);
      if (v2)
        break;
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v20) == 1)
      {
        sub_213DAFEC4((uint64_t)v6, &qword_253F069A8);
      }
      else
      {
        sub_213E46314((uint64_t)v6, (uint64_t)v12);
        sub_213E46314((uint64_t)v12, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_213DB5B18(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
          v15 = sub_213DB5B18(v16 > 1, v17 + 1, 1, v15);
        *(_QWORD *)(v15 + 16) = v17 + 1;
        sub_213E46314((uint64_t)v10, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17);
      }
      sub_213EF30C0();
      v13 = v22;
      v14 = v23;
      if (!(_QWORD)v22)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
LABEL_13:
    swift_release();
  }
  return v15;
}

_QWORD *sub_213E43D14(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  _QWORD *v20;
  __int128 v23;
  _QWORD v24[2];
  __int128 v25;
  uint64_t v26;
  _QWORD v27[7];

  v4 = v3;
  v27[6] = a2;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 64);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v10 = *(v7 - 1);
    v11 = *v7;
    v12 = *(v7 - 3);
    v13 = *(v7 - 2);
    v27[0] = *(v7 - 4);
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v10;
    v27[4] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(v24, v27);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((_QWORD)v25)
    {
      v23 = v25;
      v14 = v24[0];
      v15 = v24[1];
      v16 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_213DB5FAC(0, v8[2] + 1, 1, v8);
      v18 = v8[2];
      v17 = v8[3];
      v19 = v23;
      if (v18 >= v17 >> 1)
      {
        v20 = sub_213DB5FAC((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
        v19 = v23;
        v8 = v20;
      }
      v8[2] = v18 + 1;
      v9 = &v8[5 * v18];
      *((_BYTE *)v9 + 32) = v14 & 1;
      v9[5] = v15;
      *((_OWORD *)v9 + 3) = v19;
      v9[8] = v16;
    }
    v7 += 5;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

_QWORD *sub_213E43EE0(void (*a1)(_OWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = a3 + 32;
  v17 = a3;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    a1(v15, v6);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    if ((_QWORD)v16)
    {
      v12 = v15[0];
      v13 = v15[1];
      v14 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_213DB60CC(0, v7[2] + 1, 1, v7);
      v9 = v7[2];
      v8 = v7[3];
      if (v9 >= v8 >> 1)
        v7 = sub_213DB60CC((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
      v7[2] = v9 + 1;
      v10 = &v7[6 * v9];
      v10[3] = v13;
      v10[4] = v14;
      v10[2] = v12;
    }
    else
    {
      sub_213DAFEC4((uint64_t)v15, &qword_253F06FC8);
    }
    v6 += 40;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_213E44048(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_213E445D8(a1, a2, a3, type metadata accessor for PlusContactSuggestionRuntimeSummary);
}

uint64_t sub_213E44064(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x24BEE4AF8];
  v13 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF68) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v11 = a1(&v12, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x2199C44C4](v11);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_213E441A0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_213E441F8(a1, a2, a3, &qword_253F06DA0, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary, (uint64_t)sub_213DB6BA8);
}

uint64_t sub_213E441CC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_213E441F8(a1, a2, a3, qword_253F06ED8, type metadata accessor for PlusGenericSuggestionRuntimeSummary, (uint64_t)sub_213DB6BBC);
}

uint64_t sub_213E441F8(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v37[2];
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(_QWORD);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  void (*v48)(char *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a1;
  v49 = a2;
  v39 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a5(0);
  v51 = *(_QWORD *)(v46 - 8);
  v12 = MEMORY[0x24BDAC7A8](v46);
  v45 = (uint64_t)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v38 = (uint64_t)v37 - v14;
  v50 = sub_213EF1D64();
  v15 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a3 + 16);
  if (v21)
  {
    v37[0] = a6;
    v37[1] = a3;
    v22 = *(unsigned __int8 *)(v15 + 80);
    v44 = a5;
    v23 = a3 + ((v22 + 32) & ~v22);
    v42 = *(_QWORD *)(v15 + 72);
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    v52 = MEMORY[0x24BEE4AF8];
    v24 = (uint64_t)v40;
    v25 = v50;
    v43 = v17;
    while (1)
    {
      v47(v20, v23, v25);
      v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v41(v20, 0, 1, v25);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v25) == 1)
        break;
      v26 = v20;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v25);
      v27 = v24;
      v48(v17);
      if (v6)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v52;
      }
      v28 = v25;
      v29 = v15;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v28);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v24, 1, v46) == 1)
      {
        sub_213DAFEC4(v24, v39);
        v20 = v26;
        v25 = v50;
      }
      else
      {
        v30 = v38;
        v31 = v44;
        sub_213DBB430(v27, v38, v44);
        sub_213DBB430(v30, v45, v31);
        v20 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v52 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v37[0])(0, *(_QWORD *)(v52 + 16) + 1, 1);
        v15 = v29;
        v33 = *(_QWORD *)(v52 + 16);
        v32 = *(_QWORD *)(v52 + 24);
        v25 = v50;
        if (v33 >= v32 >> 1)
          v52 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v37[0])(v32 > 1, v33 + 1, 1, v52);
        v34 = v52;
        *(_QWORD *)(v52 + 16) = v33 + 1;
        sub_213DBB430(v45, v34+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v33, v44);
        v24 = (uint64_t)v40;
      }
      v17 = v43;
      v23 += v42;
      if (!--v21)
      {
        v41(v20, 1, 1, v25);
        break;
      }
    }
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    swift_bridgeObjectRetain();
    v52 = MEMORY[0x24BEE4AF8];
    v35(v20, 1, 1, v50);
  }
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_213E445D8(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  v14 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v9 = *(_QWORD *)(a4(0) - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v12 = a1(&v13, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13)
      {
        MEMORY[0x2199C44C4](v12);
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_213E44710(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_213E4473C(a1, a2, a3, &qword_253F06AF8, (uint64_t (*)(_QWORD))type metadata accessor for MessagesGroundTruth, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_213DB6DFC);
}

uint64_t sub_213E4473C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t (*v25)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);

  v32 = a1;
  v29 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a5(0);
  v13 = *(_QWORD *)(v31 - 8);
  v14 = MEMORY[0x24BDAC7A8](v31);
  v30 = (uint64_t)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v28 = (uint64_t)&v24 - v16;
  v17 = *(_QWORD *)(a3 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  v25 = a6;
  v26 = a3;
  v18 = a3 + 32;
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v27 = a5;
  do
  {
    v32(v18);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v31) == 1)
    {
      sub_213DAFEC4((uint64_t)v12, v29);
    }
    else
    {
      v20 = v28;
      sub_213DBB430((uint64_t)v12, v28, a5);
      sub_213DBB430(v20, v30, a5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = v25(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = v25(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      a5 = v27;
      sub_213DBB430(v30, v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, v27);
    }
    v18 += 88;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_213E44988(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *);
  uint64_t v25;

  v24 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B98);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SessionGroundTruths();
  v8 = *(_QWORD *)(v23 - 8);
  v9 = MEMORY[0x24BDAC7A8](v23);
  v22 = (uint64_t)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v21 = (uint64_t)&v19 - v11;
  v12 = *(_QWORD *)(a3 + 16);
  if (!v12)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = MEMORY[0x24BEE4AF8];
  v20 = a3;
  do
  {
    v25 = *(_QWORD *)(a3 + 8 * v13 + 32);
    swift_bridgeObjectRetain();
    v24(&v25);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v23) == 1)
    {
      sub_213DAFEC4((uint64_t)v7, &qword_253F04B98);
    }
    else
    {
      v15 = v21;
      sub_213DBB430((uint64_t)v7, v21, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
      sub_213DBB430(v15, v22, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_213DB7290(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      if (v17 >= v16 >> 1)
        v14 = sub_213DB7290(v16 > 1, v17 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v17 + 1;
      sub_213DBB430(v22, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
      a3 = v20;
    }
    ++v13;
  }
  while (v12 != v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t PLUSContactSuggesterRuntimeLogHelper.__allocating_init(logTarget:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_213E4617C(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t PLUSContactSuggesterRuntimeLogHelper.init(logTarget:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_213E460FC((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

void sub_213E44CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  id v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95738]), sel_init);
  if (!v4)
    goto LABEL_6;
  v19 = v4;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95750]), sel_init);
  if (!v5)
  {

LABEL_6:
    if (qword_253F04A88 != -1)
      swift_once();
    v12 = sub_213EF2724();
    __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
    v19 = sub_213EF270C();
    v13 = sub_213EF2CA0();
    if (os_log_type_enabled(v19, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_213DAB000, v19, v13, "Failed to create SELF message templates", v14, 2u);
      MEMORY[0x2199C53C4](v14, -1, -1);
    }
    goto LABEL_10;
  }
  v6 = v5;
  sub_213EF1D94();
  sub_213EF1E84();
  v7 = sub_213E904C4();
  v9 = v8;
  swift_release();
  swift_release();
  if (!v7)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v15 = sub_213EF2724();
    __swift_project_value_buffer(v15, (uint64_t)qword_253F08A00);
    v16 = sub_213EF270C();
    v17 = sub_213EF2CA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_213DAB000, v16, v17, "Failed to convert USOPerson entity to SELF message", v18, 2u);
      MEMORY[0x2199C53C4](v18, -1, -1);

    }
    else
    {

    }
LABEL_10:
    v11 = v19;
    goto LABEL_11;
  }
  objc_msgSend(v6, sel_setUsoPersonQuery_, v7);
  swift_bridgeObjectRetain();
  v10 = sub_213E90950();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setDomain_, v10);
  -[NSObject setStartedOrChanged:](v19, sel_setStartedOrChanged_, v6);
  sub_213E0E214((uint64_t)v19, a3);
  sub_213E0E668((uint64_t)v9);

  v11 = v7;
LABEL_11:

}

void sub_213E44FA8(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v19[4];
  NSObject *v20;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95738]), sel_init);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95748]), sel_init);
    if (v6)
    {
      v7 = v6;
      MEMORY[0x24BDAC7A8](v6);
      v19[2] = a2;
      v8 = sub_213E445D8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_213E4621C, (uint64_t)v19, a1, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      if (v8 >> 62)
        v9 = sub_213EF306C();
      else
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      v10 = *(_QWORD *)(a1 + 16);
      if (v9 != v10)
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v11 = sub_213EF2724();
        __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
        v12 = sub_213EF270C();
        v13 = sub_213EF2CA0();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v14 = 0;
          _os_log_impl(&dword_213DAB000, v12, v13, "Failed to convert all of the matching suggestions to SELF messages. Emitting a partial result.", v14, 2u);
          MEMORY[0x2199C53C4](v14, -1, -1);
        }

      }
      sub_213E4624C();
      v15 = (void *)sub_213EF2A30();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setResults_, v15);

      objc_msgSend(v7, sel_setHasMatchingResults_, v10 != 0);
      objc_msgSend(v5, sel_setEnded_, v7);
      sub_213E0E214((uint64_t)v5, a2);

      return;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v16 = sub_213EF2724();
  __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
  v20 = sub_213EF270C();
  v17 = sub_213EF2CA0();
  if (os_log_type_enabled(v20, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_213DAB000, v20, v17, "Failed to create SELF message templates", v18, 2u);
    MEMORY[0x2199C53C4](v18, -1, -1);
  }

}

void sub_213E452A0(uint64_t a1)
{
  id v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95738]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95740]), sel_init);
    if (v4)
    {
      oslog = v4;
      -[NSObject setReason:](v4, sel_setReason_, 3);
      objc_msgSend(v3, sel_setFailed_, oslog);
      sub_213E0E214((uint64_t)v3, a1);

      goto LABEL_9;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v5 = sub_213EF2724();
  __swift_project_value_buffer(v5, (uint64_t)qword_253F08A00);
  oslog = sub_213EF270C();
  v6 = sub_213EF2CA0();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_213DAB000, oslog, v6, "Failed to create SELF message templates", v7, 2u);
    MEMORY[0x2199C53C4](v7, -1, -1);
  }
LABEL_9:

}

void sub_213E453F4(char a1, char a2, uint64_t a3)
{
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95758]), sel_init);
  if (v6)
  {
    v10 = v6;
    -[NSObject setIsForcePromptUsed:](v6, sel_setIsForcePromptUsed_, a2 & 1);
    -[NSObject setIsPlusContactSuggesterEnabled:](v10, sel_setIsPlusContactSuggesterEnabled_, a1 & 1);
    sub_213E0E220((uint64_t)v10, a3);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v7 = sub_213EF2724();
    __swift_project_value_buffer(v7, (uint64_t)qword_253F08A00);
    v10 = sub_213EF270C();
    v8 = sub_213EF2CA0();
    if (os_log_type_enabled(v10, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_213DAB000, v10, v8, "Failed to create SELF message templates", v9, 2u);
      MEMORY[0x2199C53C4](v9, -1, -1);
    }
  }

}

void sub_213E4552C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  void (*v27)(char *);
  void (*v28)(char *, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  int v44;
  int v45;
  NSObject *v46;

  v44 = a2;
  v45 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v42 - v10;
  v12 = sub_213EF1D64();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v42 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v42 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v42 - v23;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95760]), sel_init);
  if (v25)
  {
    v43 = v25;
    v26 = a4;
    v27 = *(void (**)(char *))(v13 + 16);
    v42 = v26;
    v27(v22);
    ((void (*)(char *, uint64_t, uint64_t))v27)(v19, a1, v12);
    ((void (*)(char *, char *, uint64_t))v27)(v16, v22, v12);
    sub_213EF1D10();
    sub_213EA372C((uint64_t)v16, (uint64_t)v9);
    v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v19, v12);
    v28(v22, v12);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v29(v9, 1, v12))
    {
      sub_213DAFEC4((uint64_t)v9, &qword_253F04828);
      v30 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v9, v12);
      v30 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v30, 1, v12);
    if (v29(v11, 1, v12) == 1)
    {
      sub_213DAFEC4((uint64_t)v11, &qword_253F04828);
      if (qword_253F04A88 != -1)
        swift_once();
      v34 = sub_213EF2724();
      __swift_project_value_buffer(v34, (uint64_t)qword_253F08A00);
      v35 = sub_213EF270C();
      v36 = sub_213EF2C94();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_213DAB000, v35, v36, "Failed to create a combined UUID for the suggestionId and plusId", v37, 2u);
        MEMORY[0x2199C53C4](v37, -1, -1);
      }

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v24, v11, v12);
      v38 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v39 = (void *)sub_213EF1D1C();
      v40 = objc_msgSend(v38, sel_initWithNSUUID_, v39);

      v41 = v43;
      objc_msgSend(v43, sel_setSuggestionId_, v40);

      objc_msgSend(v41, sel_setIsDuplicateSuggestion_, v44 & 1);
      objc_msgSend(v41, sel_setIsSuggestionPresentInModelOutput_, v45 & 1);
      sub_213E0E22C((uint64_t)v41, v42);

      v28(v24, v12);
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v31 = sub_213EF2724();
    __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
    v46 = sub_213EF270C();
    v32 = sub_213EF2CA0();
    if (os_log_type_enabled(v46, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_213DAB000, v46, v32, "Failed to create SELF message templates", v33, 2u);
      MEMORY[0x2199C53C4](v33, -1, -1);
    }

  }
}

void static PLUSContactSuggesterRuntimeLogHelper.derivePlusLoggingId(requestId:)()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_213EF1D1C();
  v2 = objc_msgSend(v0, sel_derivedIdentifierForComponent_fromSourceIdentifier_, 19, v1);

  sub_213EF1D34();
}

uint64_t sub_213E45A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_213EF1D1C();
  v10 = objc_msgSend(v8, sel_derivedIdentifierForComponent_fromSourceIdentifier_, 19, v9);

  sub_213EF1D34();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_init);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B68]), sel_init);
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B68]), sel_init);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v15, sel_setComponent_, 19);
        v17 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v31 = v2;
        v18 = a1;
        v19 = v17;
        v20 = (void *)sub_213EF1D1C();
        v21 = objc_msgSend(v19, sel_initWithNSUUID_, v20);

        objc_msgSend(v16, sel_setUuid_, v21);
        -[NSObject setComponent:](v14, sel_setComponent_, 1);
        v22 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v23 = (void *)sub_213EF1D1C();
        v24 = v22;
        a1 = v18;
        v25 = objc_msgSend(v24, sel_initWithNSUUID_, v23);

        -[NSObject setUuid:](v14, sel_setUuid_, v25);
        -[NSObject setSource:](v12, sel_setSource_, v16);
        -[NSObject setTarget:](v12, sel_setTarget_, v14);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v31 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v31 + 16) + 40));
        sub_213EF2400();

        goto LABEL_12;
      }

    }
    else
    {
      v14 = v12;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v26 = sub_213EF2724();
  __swift_project_value_buffer(v26, (uint64_t)qword_253F08A00);
  v14 = sub_213EF270C();
  v27 = sub_213EF2CA0();
  if (os_log_type_enabled(v14, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_213DAB000, v14, v27, "Failed to create RequestLink SELF message templates. Skipping Emission.", v28, 2u);
    MEMORY[0x2199C53C4](v28, -1, -1);
  }
LABEL_12:

  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
}

uint64_t PLUSContactSuggesterRuntimeLogHelper.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PLUSContactSuggesterRuntimeLogHelper.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_213E45DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  __int128 v3;

  sub_213EF24CC();
  type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
  v0 = swift_allocObject();
  type metadata accessor for SELFEventLogEmitters();
  v1 = swift_allocObject();
  result = sub_213DB0BF0(&v3, v1 + 16);
  *(_QWORD *)(v0 + 16) = v1;
  qword_254D3DF70 = v0;
  return result;
}

void static PLUSContactSuggesterRuntimeLogHelpers.logPlusContactSuggesterQuery(queryPerson:plusId:)(uint64_t a1, uint64_t a2)
{
  if (qword_254D3A030 != -1)
    swift_once();
  sub_213E44CE4(a1, 0, a2);
}

void static PLUSContactSuggesterRuntimeLogHelpers.logPlusContactSuggesterResult(matchingSuggestions:plusId:)(uint64_t a1, uint64_t a2)
{
  if (qword_254D3A030 != -1)
    swift_once();
  sub_213E44FA8(a1, a2);
}

void static PLUSContactSuggesterRuntimeLogHelpers.logPlusContactSuggesterFailure(plusId:)(uint64_t a1)
{
  if (qword_254D3A030 != -1)
    swift_once();
  sub_213E452A0(a1);
}

void static PLUSContactSuggesterRuntimeLogHelpers.logPlusContactSuggesterRequestMetadata(isPlusSuggesterEnabled:isForcePromptUsed:plusId:)(char a1, char a2, uint64_t a3)
{
  if (qword_254D3A030 != -1)
    swift_once();
  sub_213E453F4(a1 & 1, a2 & 1, a3);
}

void static PLUSContactSuggesterRuntimeLogHelpers.logPlusContactSuggesterSuggestionMetadata(suggestionId:isDuplicateSuggestion:isSuggestionPresentInModelOutput:plusId:)(uint64_t a1, char a2, char a3, uint64_t a4)
{
  if (qword_254D3A030 != -1)
    swift_once();
  sub_213E4552C(a1, a2 & 1, a3 & 1, a4);
}

void static PLUSContactSuggesterRuntimeLogHelpers.derivePlusLoggingId(requestId:)()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_213EF1D1C();
  v2 = objc_msgSend(v0, sel_derivedIdentifierForComponent_fromSourceIdentifier_, 19, v1);

  sub_213EF1D34();
}

uint64_t static PLUSContactSuggesterRuntimeLogHelpers.logPlusRequestLink(requestId:)@<X0>(uint64_t a1@<X8>)
{
  if (qword_254D3A030 != -1)
    swift_once();
  return sub_213E45A34(a1);
}

uint64_t sub_213E460FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = a3;
  v12 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  type metadata accessor for SELFEventLogEmitters();
  v8 = swift_allocObject();
  sub_213DB0BF0(&v10, v8 + 16);
  *(_QWORD *)(a2 + 16) = v8;
  return a2;
}

uint64_t sub_213E4617C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_213E460FC((uint64_t)v9, v10, a3, a4);
}

NSObject *sub_213E4621C@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v2;
  NSObject *result;

  result = sub_213E90A0C(a1, *(_QWORD *)(v2 + 16));
  *a2 = result;
  return result;
}

unint64_t sub_213E4624C()
{
  unint64_t result;

  result = qword_254D3C8E8;
  if (!qword_254D3C8E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3C8E8);
  }
  return result;
}

uint64_t type metadata accessor for PLUSContactSuggesterRuntimeLogHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for PLUSContactSuggesterRuntimeLogHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.__allocating_init(logTarget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.logPlusContactSuggesterQuery(queryPerson:suggestionTags:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.logPlusContactSuggesterResult(matchingSuggestions:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.logPlusContactSuggesterFailure(plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.logPlusContactSuggesterRequestMetadata(isPlusSuggesterEnabled:isForcePromptUsed:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.logPlusContactSuggesterSuggestionMetadata(suggestionId:isDuplicateSuggestion:isSuggestionPresentInModelOutput:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PLUSContactSuggesterRuntimeLogHelper.logPlusRequestLink(requestId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

ValueMetadata *type metadata accessor for PLUSContactSuggesterRuntimeLogHelpers()
{
  return &type metadata for PLUSContactSuggesterRuntimeLogHelpers;
}

uint64_t sub_213E46314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CoreAnalyticsLogHelper.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CoreAnalyticsLogHelper.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreAnalyticsLogHelper.__allocating_init(logLevel:)(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v2 = sub_213EF213C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEA4BF8], v2);
  v7 = sub_213EF2130();
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  if ((v7 & 1) != 0)
  {
    if (qword_253F04BB0 != -1)
      swift_once();
    sub_213EF2100();
  }
  v8(a1, v2);
  return v6;
}

uint64_t CoreAnalyticsLogHelper.init(logLevel:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v2 = v1;
  v4 = sub_213EF213C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEA4BF8], v4);
  v8 = sub_213EF2130();
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_253F04BB0 != -1)
      swift_once();
    sub_213EF2100();
  }
  v9(a1, v4);
  return v2;
}

uint64_t sub_213E46564()
{
  _QWORD v1[2];
  char v2;
  ValueMetadata *v3;
  unint64_t v4;

  if (qword_253F04BB0 != -1)
    swift_once();
  v3 = &type metadata for PIMSProcessingState;
  v4 = sub_213E465F8();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x8000000213F07FB0;
  v2 = 0;
  sub_213EF210C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
}

unint64_t sub_213E465F8()
{
  unint64_t result;

  result = qword_253F04B68;
  if (!qword_253F04B68)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PIMSProcessingState, &type metadata for PIMSProcessingState);
    atomic_store(result, (unint64_t *)&qword_253F04B68);
  }
  return result;
}

uint64_t sub_213E4663C()
{
  _QWORD v1[2];
  char v2;
  ValueMetadata *v3;
  unint64_t v4;

  if (qword_253F04BB0 != -1)
    swift_once();
  v3 = &type metadata for PIMSProcessingState;
  v4 = sub_213E465F8();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x8000000213F07FB0;
  v2 = 5;
  sub_213EF210C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
}

uint64_t sub_213E466D4()
{
  _QWORD v1[2];
  char v2;
  ValueMetadata *v3;
  unint64_t v4;

  if (qword_253F04BB0 != -1)
    swift_once();
  v3 = &type metadata for PIMSProcessingState;
  v4 = sub_213E465F8();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x8000000213F07FB0;
  v2 = 2;
  sub_213EF210C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
}

uint64_t sub_213E4676C()
{
  _QWORD v1[2];
  char v2;
  ValueMetadata *v3;
  unint64_t v4;

  if (qword_253F04BB0 != -1)
    swift_once();
  v3 = &type metadata for PIMSProcessingState;
  v4 = sub_213E465F8();
  v1[0] = 0xD000000000000013;
  v1[1] = 0x8000000213F07FB0;
  v2 = 3;
  sub_213EF210C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
}

uint64_t CoreAnalyticsLogHelper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreAnalyticsLogHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreAnalyticsLogHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreAnalyticsLogHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreAnalyticsLogHelper.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CoreAnalyticsLogHelper.__allocating_init(logLevel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CoreAnalyticsLogHelper.logInferencePluginRun()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CoreAnalyticsLogHelper.logMediaSuggestionGenerationTrigger()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CoreAnalyticsLogHelper.logMediaGroundTruthGenerationTrigger()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CoreAnalyticsLogHelper.logGroundTruthState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t MessagesInAppFollowupGroundTruthGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MessagesInAppFollowupGroundTruthGenerator.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E468A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  int *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];

  v48 = a6;
  v50 = a3;
  v49 = a1;
  v11 = sub_213EF1D64();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a4[1];
  v47 = *a4;
  v46 = a4[2];
  v45 = a4[3];
  v16 = *a5;
  v17 = a5[1];
  v18 = a5[2];
  v19 = a5[3];
  sub_213DAFDFC(a2, (uint64_t)v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A450);
  if (swift_dynamicCast())
  {
    v44 = a7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v43 = v16;
    v41 = v17;
    v42 = v18;
    sub_213DB14FC(v16, v17, v48, v53);
    v20 = v53[0];
    v21 = v53[1];
    v22 = v53[2];
    v23 = v53[3];
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v49, v11);
    if (v15)
    {
      v24 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213DB1874(v20, v21);
      v20 = v47;
      v22 = v46;
      v23 = v24;
    }
    else
    {
      v15 = v21;
    }
    v34 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
    v35 = v44;
    v34(v44, v14, v11);
    v36 = (int *)type metadata accessor for MessagesGroundTruth();
    *(_BYTE *)(v35 + v36[5]) = 0;
    *(_QWORD *)(v35 + v36[6]) = v50;
    v37 = (uint64_t *)(v35 + v36[7]);
    *v37 = v20;
    v37[1] = v15;
    v37[2] = v22;
    v37[3] = v23;
    v38 = (uint64_t *)(v35 + v36[8]);
    v39 = v41;
    *v38 = v43;
    v38[1] = v39;
    v38[2] = v42;
    v38[3] = v19;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v36 - 1) + 56))(v35, 0, 1, v36);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v25 = sub_213EF2724();
    __swift_project_value_buffer(v25, (uint64_t)qword_253F08A00);
    sub_213DB1804(a2, (uint64_t)v53);
    v26 = sub_213EF270C();
    v27 = sub_213EF2CA0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v52 = v29;
      *(_DWORD *)v28 = 136315138;
      sub_213DB1804((uint64_t)v53, (uint64_t)&v51);
      v30 = sub_213EF288C();
      v51 = sub_213DB0570(v30, v31, &v52);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DB1840((uint64_t)v53);
      _os_log_impl(&dword_213DAB000, v26, v27, "Failed to derive ground truth type from followup event for classification=%s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v29, -1, -1);
      MEMORY[0x2199C53C4](v28, -1, -1);
    }
    else
    {
      sub_213DB1840((uint64_t)v53);
    }

    v32 = type metadata accessor for MessagesGroundTruth();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a7, 1, 1, v32);
  }
}

uint64_t MessagesInAppFollowupGroundTruthGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MessagesInAppFollowupGroundTruthGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E46CE0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_213DB196C(&qword_254D3E048, a2, (uint64_t (*)(uint64_t))type metadata accessor for MessagesInAppFollowupGroundTruthGenerator, (uint64_t)&protocol conformance descriptor for MessagesInAppFollowupGroundTruthGenerator);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MessagesInAppFollowupGroundTruthGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessagesInAppFollowupGroundTruthGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesInAppFollowupGroundTruthGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MessagesInAppFollowupGroundTruthGenerator.buildGroundTruth(id:followup:contactUSOPerson:originalContactReference:correctedContactReference:abandonedPrompts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

SiriPrivateLearningInference::MediaReferenceSourceApp_optional __swiftcall MediaReferenceSourceApp.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SiriPrivateLearningInference::MediaReferenceSourceApp_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t MediaReferenceSourceApp.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E696665646E75;
  else
    return 0x6C7070612E6D6F63;
}

unint64_t sub_213E46E0C()
{
  unint64_t result;

  result = qword_254D3E070;
  if (!qword_254D3E070)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReferenceSourceApp, &type metadata for MediaReferenceSourceApp);
    atomic_store(result, (unint64_t *)&qword_254D3E070);
  }
  return result;
}

uint64_t sub_213E46E50()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213E46EE0()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E46F4C()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

SiriPrivateLearningInference::MediaReferenceSourceApp_optional sub_213E46FD8(Swift::String *a1)
{
  return MediaReferenceSourceApp.init(rawValue:)(*a1);
}

void sub_213E46FE4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C7070612E6D6F63;
  if (*v1)
    v2 = 0x656E696665646E75;
  v3 = 0xEF636973754D2E65;
  if (*v1)
    v3 = 0xE900000000000064;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_213E47034()
{
  sub_213E471B4();
  return sub_213EF2A18();
}

uint64_t sub_213E47090()
{
  sub_213E471B4();
  return sub_213EF2A0C();
}

uint64_t sub_213E470DC(char *a1, char *a2)
{
  return sub_213E2A668(*a1, *a2);
}

uint64_t storeEnumTagSinglePayload for MediaReferenceSourceApp(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E47134 + 4 * byte_213EFB095[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E47168 + 4 * byte_213EFB090[v4]))();
}

uint64_t sub_213E47168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E47170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E47178);
  return result;
}

uint64_t sub_213E47184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E4718CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E47190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E47198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaReferenceSourceApp()
{
  return &type metadata for MediaReferenceSourceApp;
}

unint64_t sub_213E471B4()
{
  unint64_t result;

  result = qword_254D3E078;
  if (!qword_254D3E078)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReferenceSourceApp, &type metadata for MediaReferenceSourceApp);
    atomic_store(result, (unint64_t *)&qword_254D3E078);
  }
  return result;
}

uint64_t sub_213E471F8@<X0>(char *a1@<X8>)
{
  return Turn.getTimestamp()(a1);
}

uint64_t Turn.getTimestamp()@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213EF1CF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Turn.deviceDynamicContextEvent.getter();
  if (v9
    && (v10 = v9,
        v11 = objc_msgSend(v9, sel_deviceDynamicContext),
        v10,
        v11))
  {
    objc_msgSend(v11, sel_timeIntervalSince1970);

    sub_213EF1CC8();
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  else
  {
    sub_213EF261C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_213DC3ED8((uint64_t)v4);
      if (qword_253F04A88 != -1)
        swift_once();
      v13 = sub_213EF2724();
      __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
      v14 = sub_213EF270C();
      v15 = sub_213EF2C94();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213DAB000, v14, v15, "Could not extract a timestamp from the device context", v16, 2u);
        MEMORY[0x2199C53C4](v16, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, 1, 1, v5);
    }
    else
    {
      v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v17(v8, v4, v5);
      v17(a1, v8, v5);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
  }
}

void *Turn.deviceDynamicContextEvent.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v0 = sub_213EF2628();
  v1 = v0;
  if (v0 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_213EF306C())
  {
    v3 = 4;
    while (1)
    {
      v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2199C49B0](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = (void *)sub_213EF2700();

      if (v7)
      {
        v8 = objc_msgSend(v7, sel_deviceDynamicContext);

        if (v8)
          goto LABEL_16;

      }
      ++v3;
      if (v6 == v2)
        goto LABEL_15;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_15:
  v7 = 0;
LABEL_16:
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t dispatch thunk of SessionReviewer.reviewSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of InferenceGroundTruthGenerator.reviewedSessionGroundTruth()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t PICSStoreCoreData.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  v4 = swift_allocObject();
  v5 = sub_213E4B790(a1, a2, 0);
  swift_bridgeObjectRelease();
  if (v5)
  {
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

id sub_213E47628()
{
  id result;

  result = sub_213E47644();
  qword_253F04AD8 = (uint64_t)result;
  return result;
}

id sub_213E47644()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F047F8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_213EF1C2C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  type metadata accessor for PICSStoreCoreData();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)sub_213EF2844();
  v13 = (void *)sub_213EF2844();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_213EF1BF0();

    v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      v16 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
      v17 = (void *)sub_213EF1BD8();
      v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      if (v18)
        return v18;
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_213DAFEC4((uint64_t)v2, &qword_253F047F8);
LABEL_7:
  if (qword_253F04A88 != -1)
    swift_once();
  v19 = sub_213EF2724();
  __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
  v20 = sub_213EF270C();
  v21 = sub_213EF2CA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_213DAB000, v20, v21, "PICSStoreCoreData: Error loading data base model from bundle", v22, 2u);
    MEMORY[0x2199C53C4](v22, -1, -1);
  }

  return 0;
}

uint64_t PICSStoreCoreData.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v3 = sub_213E4B790(a1, a2, 0);
  swift_bridgeObjectRelease();
  if (v3)
  {
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = objc_msgSend(v3, sel_newBackgroundContext);
  }
  else
  {
    type metadata accessor for PICSStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t sub_213E479B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  void (*v13)(char *, uint64_t);
  id v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  id v21;
  void *v22;
  unsigned __int8 v23;
  id v24;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32[3];

  v32[2] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_213EF2358();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_213EF1C2C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v31 = a1;
  v11((char *)&v27 - v9, a1, v4);
  v12 = (void *)objc_opt_self();
  do
  {
    sub_213EF1BE4();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v10, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
    v14 = objc_msgSend(v12, sel_defaultManager);
    sub_213EF1C08();
    v15 = (void *)sub_213EF2844();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  }
  while (!v16);
  v18 = v28;
  v17 = v29;
  v19 = v30;
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v28, *MEMORY[0x24BEA4EC8], v30);
  v20 = sub_213EF21F0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v19);
  if ((v20 & 1) != 0)
  {
    v21 = objc_msgSend(v12, sel_defaultManager);
    v22 = (void *)sub_213EF1BD8();
    v32[0] = 0;
    v23 = objc_msgSend(v21, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v22, 1, 0, v32);

    if ((v23 & 1) != 0)
    {
      v24 = v32[0];
      return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
    }
    v26 = v32[0];
    sub_213EF1BA8();

  }
  else
  {
    v32[0] = 0;
    v32[1] = (id)0xE000000000000000;
    sub_213EF2EB0();
    sub_213EF2904();
    sub_213EF1C08();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF21E4();
    sub_213DB0DB4(&qword_254D3E0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA4CD8], MEMORY[0x24BEA4CE0]);
    swift_allocError();
    sub_213EF21D8();
  }
  swift_willThrow();
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
}

void sub_213E47D04(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  if (a2)
  {
    swift_beginAccess();
    *(_BYTE *)(a3 + 16) = 0;
    if (qword_253F04A88 != -1)
      swift_once();
    v6 = sub_213EF2724();
    __swift_project_value_buffer(v6, (uint64_t)qword_253F08A00);
    v7 = a2;
    v8 = a1;
    v9 = a2;
    v10 = v8;
    v11 = sub_213EF270C();
    v12 = sub_213EF2CA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v13 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(qword_254D3E0A8);
      v16 = sub_213EF2D60();
      sub_213DB0570(v16, v17, &v19);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      v18 = v10;
      sub_213EF2D9C();
      *v14 = v10;

      _os_log_impl(&dword_213DAB000, v11, v12, "PICSStoreCoreData: Unable to load persistent stores: %s : %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E90);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v15, -1, -1);
      MEMORY[0x2199C53C4](v13, -1, -1);

    }
    else
    {

    }
  }
}

id sub_213E47F70()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id sub_213E47F78()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 24);
  v17[0] = 0;
  v2 = objc_msgSend(v1, sel_save_, v17);
  if ((_DWORD)v2)
  {
    v3 = v17[0];
  }
  else
  {
    v4 = v17[0];
    v5 = (void *)sub_213EF1BA8();

    swift_willThrow();
    if (qword_253F04A88 != -1)
      swift_once();
    v6 = sub_213EF2724();
    __swift_project_value_buffer(v6, (uint64_t)qword_253F08A00);
    v7 = v5;
    v8 = v5;
    v9 = sub_213EF270C();
    v10 = sub_213EF2CA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (void *)swift_slowAlloc();
      v17[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
      v14 = sub_213EF288C();
      sub_213DB0570(v14, v15, (uint64_t *)v17);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213DAB000, v9, v10, "PICSStoreCoreData: Unresolved error in saveChanges error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v12, -1, -1);
      MEMORY[0x2199C53C4](v11, -1, -1);

    }
    else
    {

    }
  }
  return v2;
}

uint64_t sub_213E481CC()
{
  return sub_213E4AB28();
}

id sub_213E481D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  id v6;
  id result;

  type metadata accessor for PlusContactSuggestionCoreDataRecord();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a1 + 24));
  LOBYTE(a2) = sub_213E48268(a2, v6);

  if ((a2 & 1) != 0)
    result = sub_213E47F78();
  else
    result = 0;
  *a3 = result & 1;
  return result;
}

BOOL sub_213E48268(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int *v47;

  v3 = v2;
  v6 = sub_213E4C080();
  v8 = v7 >> 60;
  if (v7 >> 60 != 15)
  {
    v9 = v6;
    v10 = v7;
    v11 = (void *)sub_213EF1D1C();
    objc_msgSend(a2, sel_setId_, v11);

    v12 = type metadata accessor for PlusContactSuggestion();
    sub_213EF2448();
    objc_msgSend(a2, sel_setTimestamp_);
    v47 = (int *)v12;
    sub_213EF1E24();
    if (v13)
    {
      v14 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(a2, sel_setFullName_, v14);

    v15 = (void *)sub_213EF1E18();
    v46 = v8;
    if (v15)
    {
      sub_213EF1ECC();
      v17 = v16;
      swift_release();
      if (v17)
      {
        v15 = (void *)sub_213EF2844();
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = 0;
      }
    }
    objc_msgSend(a2, sel_setHandleLabel_, v15);

    v44 = v10;
    v45 = v9;
    v18 = (void *)sub_213EF1C44();
    objc_msgSend(a2, sel_setUsoPersonQuery_, v18);

    v19 = *(_QWORD *)(a1 + v47[6] + 24);
    v20 = *(void **)(v3 + 24);
    type metadata accessor for PlusContactReferenceCoreDataRecord();
    v21 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_bridgeObjectRetain();
    v22 = v20;
    swift_bridgeObjectRetain();
    v23 = objc_msgSend(v21, sel_initWithContext_, v22);
    v24 = (void *)sub_213EF2844();
    objc_msgSend(v23, sel_setContactId_, v24);

    if (v19)
      v25 = (void *)sub_213EF2844();
    else
      v25 = 0;
    objc_msgSend(v23, sel_setContactLabel_, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    objc_msgSend(a2, sel_setInferredContactReference_, v23);
    v26 = objc_msgSend(a2, sel_inferredContactReference);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, sel_setContactSuggestion_, a2);

    }
    swift_retain();
    v28 = swift_bridgeObjectRetain();
    v29 = sub_213E4B49C(v28, v3);
    swift_bridgeObjectRelease();
    swift_release();
    sub_213EC60B4(v29);
    swift_bridgeObjectRelease();
    v30 = objc_allocWithZone(MEMORY[0x24BDBCF00]);
    v31 = (void *)sub_213EF2A30();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v30, sel_initWithArray_, v31);

    objc_msgSend(a2, sel_setContributingGroundTruth_, v32);
    swift_retain();
    v33 = swift_bridgeObjectRetain();
    v34 = sub_213E4B5AC(v33, v3);
    swift_bridgeObjectRelease();
    swift_release();
    sub_213EC60C0(v34);
    swift_bridgeObjectRelease();
    v35 = objc_allocWithZone(MEMORY[0x24BDBCF00]);
    v36 = (void *)sub_213EF2A30();
    swift_bridgeObjectRelease();
    v37 = objc_msgSend(v35, sel_initWithArray_, v36);

    objc_msgSend(a2, sel_setTags_, v37);
    objc_msgSend(a2, sel_setScore_, *(double *)(a1 + v47[10]));
    v38 = sub_213ED09EC(*(_QWORD *)(a1 + v47[11]));
    if (v39 >> 60 == 15)
    {
      v40 = 0;
    }
    else
    {
      v41 = v38;
      v42 = v39;
      v40 = (void *)sub_213EF1C44();
      sub_213E36528(v41, v42);
    }
    v8 = v46;
    objc_msgSend(a2, sel_setScoreHistory_, v40);
    sub_213E36528(v45, v44);

  }
  return v8 < 0xF;
}

uint64_t sub_213E486EC()
{
  return sub_213E4AB28();
}

uint64_t sub_213E486F8()
{
  return sub_213E4AB28();
}

void sub_213E48704(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  BOOL v10;
  unsigned __int8 v11;

  sub_213E4A158();
  if (v6)
  {
    v7 = v6;
    type metadata accessor for PlusContactSuggestionCoreDataRecord();
    v8 = *(void **)(a1 + 24);
    v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v8);
    v10 = sub_213E48268(a2, v9);

    if (v10)
    {
      objc_msgSend(v8, sel_deleteObject_, v7);
      v11 = sub_213E47F78();
    }
    else
    {
      v11 = 0;
    }

  }
  else
  {
    v11 = 0;
  }
  *a3 = v11 & 1;
}

uint64_t sub_213E487D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t result;
  _QWORD v6[6];

  v1 = *(void **)(v0 + 24);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_213E4BDEC;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_213E4BE00;
  v6[5] = v2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_213E488EC;
  v6[3] = &block_descriptor;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_213E488EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_213E4890C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  id v34[2];

  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v2 = (void *)sub_213EF2844();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_213EF2844();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v3);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v6);
  v9 = *(void **)(v0 + 24);
  v34[0] = 0;
  v10 = objc_msgSend(v9, sel_executeRequest_error_, v7, v34);
  v11 = v34[0];
  if (v10
    && (v12 = v10,
        v13 = v34[0],
        v12,
        v34[0] = 0,
        v14 = objc_msgSend(v9, sel_executeRequest_error_, v8, v34),
        v11 = v34[0],
        v14))
  {
    v15 = v14;
    v16 = v34[0];

    if ((sub_213E47F78() & 1) == 0)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v17 = sub_213EF2724();
      __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
      v18 = sub_213EF270C();
      v19 = sub_213EF2CA0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213DAB000, v18, v19, "PICSStoreCoreData: Cannot reset store, failed to save", v20, 2u);
        MEMORY[0x2199C53C4](v20, -1, -1);

        return;
      }

    }
  }
  else
  {
    v21 = v11;
    v22 = (void *)sub_213EF1BA8();

    swift_willThrow();
    if (qword_253F04A88 != -1)
      swift_once();
    v23 = sub_213EF2724();
    __swift_project_value_buffer(v23, (uint64_t)qword_253F08A00);
    v24 = v22;
    v25 = v22;
    v26 = sub_213EF270C();
    v27 = sub_213EF2CA0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v33 = v3;
      v29 = (void *)swift_slowAlloc();
      v34[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
      v31 = sub_213EF288C();
      sub_213DB0570(v31, v32, (uint64_t *)v34);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213DAB000, v26, v27, "PICSStoreCoreData: Cannot reset store, error=%s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v29, -1, -1);
      MEMORY[0x2199C53C4](v28, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_213E48D80()
{
  return sub_213E49324(&qword_253F06FC0);
}

uint64_t sub_213E48D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlusContactSuggestion();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - v9;
  v11 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v12 = (void *)sub_213EF2844();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_213EF8CA0;
  v15 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v16 = (void *)sub_213EF2844();
  v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 0);

  *(_QWORD *)(v14 + 32) = v17;
  v38 = v14;
  sub_213EF2A54();
  sub_213DB9CDC(0, &qword_253F04E70);
  v18 = (void *)sub_213EF2A30();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v18);

  v19 = *(void **)(v1 + 24);
  type metadata accessor for PlusContactSuggestionCoreDataRecord();
  v20 = v19;
  v21 = sub_213EF2D3C();
  v22 = (uint64_t)v10;
  v23 = (uint64_t)v35;

  if (!(v21 >> 62))
  {
    v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_18:

    swift_bridgeObjectRelease();
    v27 = MEMORY[0x24BEE4AF8];
LABEL_19:
    swift_bridgeObjectRelease();
    return v27;
  }
  swift_bridgeObjectRetain();
  result = sub_213EF306C();
  v24 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v24 >= 1)
  {
    v34 = v13;
    v36 = v22;
    v26 = 0;
    v27 = MEMORY[0x24BEE4AF8];
    v37 = v5;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
        v28 = (id)MEMORY[0x2199C49B0](v26, v21);
      else
        v28 = *(id *)(v21 + 8 * v26 + 32);
      v29 = v28;
      sub_213E5F8F4((uint64_t)v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_213DAFEC4((uint64_t)v4, &qword_253F06B28);
      }
      else
      {
        v30 = v36;
        sub_213DF8B18((uint64_t)v4, v36);
        sub_213DF8B18(v30, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_213DB6968(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v32 = *(_QWORD *)(v27 + 16);
        v31 = *(_QWORD *)(v27 + 24);
        if (v32 >= v31 >> 1)
          v27 = sub_213DB6968(v31 > 1, v32 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v32 + 1;
        sub_213DF8B18(v23, v27+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v32);
        v5 = v37;
      }
      ++v26;
    }
    while (v24 != v26);

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E49310()
{
  return sub_213E49324(&qword_253F04E50);
}

uint64_t sub_213E49324(uint64_t *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v5;

  v3 = *(id *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_213EF2D30();

  return v5;
}

uint64_t sub_213E4938C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;

  v1 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v2 = (void *)sub_213EF2844();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  v4 = *(void **)(v0 + 24);
  type metadata accessor for PlusContactReferenceCoreDataRecord();
  v5 = v4;
  v6 = sub_213EF2D3C();

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v30 = v3;
    if (v7)
      goto LABEL_3;
LABEL_24:
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_25:

    swift_bridgeObjectRelease_n();
    return (uint64_t)v10;
  }
  swift_bridgeObjectRetain();
  result = sub_213EF306C();
  v7 = result;
  v30 = v3;
  if (!result)
    goto LABEL_24;
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x2199C49B0](v9, v6);
      else
        v11 = *(id *)(v6 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_contactId);
      if (v13)
      {
        v14 = v13;
        v15 = sub_213EF2850();
        v17 = v16;

        v18 = objc_msgSend(v12, sel_contactLabel);
        if (v18)
        {
          v19 = v18;
          v20 = sub_213EF2850();
          v22 = v21;

        }
        else
        {

          v20 = 0;
          v22 = 0;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_213DB6CDC(0, v10[2] + 1, 1, v10);
        v28 = v10[2];
        v27 = v10[3];
        if (v28 >= v27 >> 1)
          v10 = sub_213DB6CDC((_QWORD *)(v27 > 1), v28 + 1, 1, v10);
        v10[2] = v28 + 1;
        v29 = &v10[4 * v28];
        v29[4] = v15;
        v29[5] = v17;
        v29[6] = v20;
        v29[7] = v22;
      }
      else
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v23 = sub_213EF2724();
        __swift_project_value_buffer(v23, (uint64_t)qword_253F08A00);
        v24 = sub_213EF270C();
        v25 = sub_213EF2C94();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_213DAB000, v24, v25, "Contact reference missing mandatory contact id.", v26, 2u);
          MEMORY[0x2199C53C4](v26, -1, -1);
        }

      }
      ++v9;
    }
    while (v7 != v9);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E4983C()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FC0);
  sub_213EF2D30();

  return v3;
}

uint64_t sub_213E498A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  id v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for PlusContactSuggestion();
  v7 = *(_QWORD *)(v59 - 8);
  v8 = MEMORY[0x24BDAC7A8](v59);
  v58 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v53 - v10;
  v12 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v13 = (void *)sub_213EF2844();
  v14 = objc_msgSend(v12, sel_initWithEntityName_, v13);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_213EF8CA0;
  v16 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v17 = (void *)sub_213EF2844();
  v18 = objc_msgSend(v16, sel_initWithKey_ascending_, v17, 0);

  *(_QWORD *)(v15 + 32) = v18;
  v61 = v15;
  sub_213EF2A54();
  sub_213DB9CDC(0, &qword_253F04E70);
  v19 = (void *)sub_213EF2A30();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSortDescriptors_, v19);

  v57 = a1;
  v20 = sub_213E6FB5C();
  if (!v21)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v30 = sub_213EF2724();
    __swift_project_value_buffer(v30, (uint64_t)qword_253F08A00);
    v31 = sub_213EF270C();
    v32 = sub_213EF2C94();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_213DAB000, v31, v32, "PICSStoreCoreData: Unable to extract name from USO query. Skipping search.", v33, 2u);
      MEMORY[0x2199C53C4](v33, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  v22 = v21;
  v55 = v20;
  if (qword_253F04A88 != -1)
    swift_once();
  v54 = v2;
  v23 = sub_213EF2724();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  v53 = v24;
  v25 = sub_213EF270C();
  v26 = sub_213EF2C94();
  v27 = os_log_type_enabled(v25, v26);
  v56 = v14;
  if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v61 = v29;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain();
    v60 = sub_213DB0570(v55, v22, &v61);
    v14 = v56;
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213DAB000, v25, v26, "PICSStoreCoreData: Searching for PICS with fullName==%s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v29, -1, -1);
    MEMORY[0x2199C53C4](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (sub_213EF1E18() && (v34 = sub_213EF1ECC(), v36 = v35, swift_release(), v36))
  {
    sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_213EF44B0;
    v38 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v37 + 56) = MEMORY[0x24BEE0D00];
    v39 = sub_213E07AFC();
    *(_QWORD *)(v37 + 32) = v55;
    *(_QWORD *)(v37 + 40) = v22;
    *(_QWORD *)(v37 + 96) = v38;
    *(_QWORD *)(v37 + 104) = v39;
    *(_QWORD *)(v37 + 64) = v39;
    *(_QWORD *)(v37 + 72) = v34;
    *(_QWORD *)(v37 + 80) = v36;
    v14 = v56;
  }
  else
  {
    sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_213EF53E0;
    *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v40 + 64) = sub_213E07AFC();
    *(_QWORD *)(v40 + 32) = v55;
    *(_QWORD *)(v40 + 40) = v22;
  }
  v41 = (void *)sub_213EF2C58();
  objc_msgSend(v14, sel_setPredicate_, v41);

  v42 = *(void **)(v54 + 24);
  type metadata accessor for PlusContactSuggestionCoreDataRecord();
  v43 = v42;
  v44 = sub_213EF2D3C();

  if (!(v44 >> 62))
  {
    v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v45)
      goto LABEL_18;
LABEL_32:
    v52 = MEMORY[0x24BEE4AF8];
LABEL_33:

    swift_bridgeObjectRelease_n();
    return v52;
  }
  swift_bridgeObjectRetain();
  result = sub_213EF306C();
  v45 = result;
  if (!result)
    goto LABEL_32;
LABEL_18:
  if (v45 >= 1)
  {
    v47 = 0;
    v52 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((v44 & 0xC000000000000001) != 0)
        v48 = (id)MEMORY[0x2199C49B0](v47, v44);
      else
        v48 = *(id *)(v44 + 8 * v47 + 32);
      v49 = v48;
      sub_213E5F8F4((uint64_t)v6);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v59) == 1)
      {
        sub_213DAFEC4((uint64_t)v6, &qword_253F06B28);
      }
      else
      {
        sub_213DF8B18((uint64_t)v6, (uint64_t)v11);
        sub_213DF8B18((uint64_t)v11, v58);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v52 = sub_213DB6968(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
        v51 = *(_QWORD *)(v52 + 16);
        v50 = *(_QWORD *)(v52 + 24);
        if (v51 >= v50 >> 1)
          v52 = sub_213DB6968(v50 > 1, v51 + 1, 1, v52);
        *(_QWORD *)(v52 + 16) = v51 + 1;
        sub_213DF8B18(v58, v52+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v51);
      }
      ++v47;
    }
    while (v45 != v47);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

void sub_213E4A158()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v3 = (void *)sub_213EF2844();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_213EF53E0;
  v6 = sub_213EF1D1C();
  *(_QWORD *)(v5 + 56) = sub_213DB9CDC(0, &qword_254D3E088);
  *(_QWORD *)(v5 + 64) = sub_213E4C028();
  *(_QWORD *)(v5 + 32) = v6;
  v7 = (void *)sub_213EF2C58();
  objc_msgSend(v4, sel_setPredicate_, v7);

  v8 = *(void **)(v1 + 24);
  type metadata accessor for PlusContactSuggestionCoreDataRecord();
  v9 = v8;
  v10 = sub_213EF2D3C();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (!v12)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRelease();

    return;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    MEMORY[0x2199C49B0](0, v10);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_213E4A504()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  sub_213EF2D30();

}

void sub_213E4A56C(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;

  sub_213E4A158();
  if (v2)
  {
    v3 = v2;
    sub_213E5F8F4(a1);

  }
  else
  {
    v4 = type metadata accessor for PlusContactSuggestion();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t sub_213E4A5DC()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(v0 + 24);
  sub_213EF2D30();

  return v3;
}

uint64_t sub_213E4A640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;

  v3 = v2;
  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_213EF2844();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_213E07AFC();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_213EF2C58();
  objc_msgSend(v8, sel_setPredicate_, v10);

  v11 = *(void **)(v3 + 24);
  type metadata accessor for PlusContactReferenceCoreDataRecord();
  v12 = v11;
  v13 = sub_213EF2D3C();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_213EF306C();
    if (!v14)
      goto LABEL_10;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v14)
      goto LABEL_10;
  }
  if (v14 < 1)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_14;
  }
  for (i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v16 = (id)MEMORY[0x2199C49B0](i, v13);
    else
      v16 = *(id *)(v13 + 8 * i + 32);
    v17 = v16;
    objc_msgSend(v12, sel_deleteObject_, v16);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  if ((sub_213E47F78() & 1) != 0)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_213EF306C();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v18 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);

      swift_bridgeObjectRelease();
    }
    return v18;
  }
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
    goto LABEL_20;
LABEL_14:
  v19 = sub_213EF2724();
  __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
  v20 = sub_213EF270C();
  v21 = sub_213EF2CA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_213DAB000, v20, v21, "Failed to save changes after deleting records.", v22, 2u);
    MEMORY[0x2199C53C4](v22, -1, -1);
  }

  return 0;
}

uint64_t sub_213E4AB1C()
{
  return sub_213E4AB28();
}

uint64_t sub_213E4AB28()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(v0 + 24);
  sub_213EF2D30();

  return v3;
}

void sub_213E4AB88(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  void *v4;
  void *v5;
  unsigned __int8 v6;

  sub_213E4A158();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(*(id *)(a1 + 24), sel_deleteObject_, v4);
    v6 = sub_213E47F78();

  }
  else
  {
    v6 = 0;
  }
  *a2 = v6 & 1;
}

uint64_t sub_213E4ABF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  _QWORD v12[6];

  v3 = v2;
  v6 = *(void **)(v3 + 24);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_213E4BF24;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_213E4C7FC;
  v12[5] = v8;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_213E488EC;
  v12[3] = &block_descriptor_10;
  v9 = _Block_copy(v12);
  v10 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWait_, v9);

  _Block_release(v9);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_213E4AD50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v2 = sub_213EF1CF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)sub_213E4C454();
  if (!v6)
  {
    type metadata accessor for PlusContactSuggestionStoreUpdateRecord();
    v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(a1 + 24));
  }
  v7 = v6;
  v8 = (void *)sub_213EF2844();
  objc_msgSend(v7, sel_setSource_, v8);

  sub_213EF1CEC();
  v9 = (void *)sub_213EF1C8C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v7, sel_setTimestamp_, v9);

  if ((sub_213E47F78() & 1) == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v10 = sub_213EF2724();
    __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
    v11 = sub_213EF270C();
    v12 = sub_213EF2CA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_213DAB000, v11, v12, "Failed to persist store update record to CoreData", v13, 2u);
      MEMORY[0x2199C53C4](v13, -1, -1);
    }

  }
}

void sub_213E4AF10()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E080);
  sub_213EF2D30();

}

void sub_213E4AF78(uint64_t *a1@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = sub_213E4C454();
  if (v2)
  {
    v3 = (void *)v2;
    sub_213E60E1C(a1);

  }
  else
  {
    v4 = type metadata accessor for ContactSuggestionStoreUpdate();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t PICSStoreCoreData.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PICSStoreCoreData.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_213E4B034()
{
  return sub_213E4B24C();
}

uint64_t sub_213E4B040()
{
  return sub_213E4B24C();
}

uint64_t sub_213E4B04C()
{
  return sub_213E4B24C();
}

uint64_t sub_213E4B058()
{
  return sub_213E487D0();
}

uint64_t sub_213E4B078(uint64_t a1, uint64_t a2)
{
  return sub_213E4B0A0(a1, a2, &qword_253F06FC0);
}

uint64_t sub_213E4B08C(uint64_t a1, uint64_t a2)
{
  return sub_213E4B0A0(a1, a2, &qword_253F04E50);
}

uint64_t sub_213E4B0A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  id v5;
  uint64_t v7;

  v5 = *(id *)(*(_QWORD *)v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_213EF2D30();

  return v7;
}

uint64_t sub_213E4B10C()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FC0);
  sub_213EF2D30();

  return v3;
}

void sub_213E4B178()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  sub_213EF2D30();

}

uint64_t sub_213E4B1E4()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  sub_213EF2D30();

  return v3;
}

uint64_t sub_213E4B24C()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  sub_213EF2D30();

  return v3;
}

uint64_t sub_213E4B2B0(uint64_t a1, uint64_t a2)
{
  return sub_213E4ABF8(a1, a2);
}

void sub_213E4B2D0()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E080);
  sub_213EF2D30();

}

uint64_t PICSStoreCoreDataWithMigrations.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  v4 = swift_allocObject();
  v5 = sub_213E4B790(a1, a2, 1);
  swift_bridgeObjectRelease();
  if (v5)
  {
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
  }
  else
  {
    type metadata accessor for PICSStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

uint64_t PICSStoreCoreDataWithMigrations.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v3 = sub_213E4B790(a1, a2, 1);
  swift_bridgeObjectRelease();
  if (v3)
  {
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = objc_msgSend(v3, sel_newBackgroundContext);
  }
  else
  {
    type metadata accessor for PICSStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t PICSStoreCoreDataWithMigrations.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PICSStoreCoreDataWithMigrations.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_213E4B49C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;

  result = MEMORY[0x24BEE4AF8];
  v12 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for ThinContactGroundTruth() - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(void **)(a2 + 24);
    v9 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v10 = v8;
      v11 = sub_213E5EF70((uint64_t)v10);

      if (v11)
      {
        MEMORY[0x2199C44C4]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v7 += v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_213E4B5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v11 - 1) & v11)
  {
    v13 = *(id *)(a2 + 24);
    sub_213E5F2F4();

    MEMORY[0x2199C44C4]();
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_213EF2A78();
    sub_213EF2AB4();
    result = sub_213EF2A54();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v7)
      goto LABEL_25;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_25;
      v11 = *(_QWORD *)(v3 + 8 * v9);
      if (!v11)
      {
        v9 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_25;
        v11 = *(_QWORD *)(v3 + 8 * v9);
        if (!v11)
        {
          v9 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_25;
          v11 = *(_QWORD *)(v3 + 8 * v9);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    ;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_25:
    swift_release();
    return v14;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v7)
      goto LABEL_25;
    v11 = *(_QWORD *)(v3 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_213E4B790(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  _BYTE *v26;
  void *v27;
  _QWORD v29[5];
  id v30;
  _QWORD aBlock[6];

  v5 = sub_213EF1C2C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29[4] = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v29 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v29 - v12;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB740]), sel_init);
  objc_msgSend(v14, sel_setShouldInferMappingModelAutomatically_, 0);
  objc_msgSend(v14, sel_setShouldMigrateStoreAutomatically_, a3 & 1);
  if (qword_253F04AE8 != -1)
    swift_once();
  v15 = (id)qword_253F04AD8;
  if (qword_253F04AD8)
  {
    v16 = objc_allocWithZone(MEMORY[0x24BDBB700]);
    v17 = v15;
    v18 = (void *)sub_213EF2844();
    v30 = v17;
    v15 = objc_msgSend(v16, sel_initWithName_managedObjectModel_, v18, v17);

    if (a2)
    {
      sub_213EF1BCC();
      sub_213EF1BE4();
      sub_213E479B4((uint64_t)v11);
      v19 = *(void (**)(char *, uint64_t))(v6 + 8);
      v20 = v5;
      v19(v11, v5);
      v21 = (void *)sub_213EF1BD8();
      objc_msgSend(v14, sel_setURL_, v21);

      v19(v13, v20);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_213EF8CA0;
    *(_QWORD *)(v22 + 32) = v14;
    aBlock[0] = v22;
    sub_213EF2A54();
    sub_213DB9CDC(0, &qword_253F04E80);
    v23 = v14;
    v24 = (void *)sub_213EF2A30();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setPersistentStoreDescriptions_, v24);

    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = 1;
    v26 = (_BYTE *)(v25 + 16);
    aBlock[4] = sub_213E4C7B8;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_213ED0978;
    aBlock[3] = &block_descriptor_26;
    v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_loadPersistentStoresWithCompletionHandler_, v27);

    _Block_release(v27);
    swift_beginAccess();
    LOBYTE(v23) = *v26;
    swift_release();
    if ((v23 & 1) == 0)
    {

      return 0;
    }
  }
  else
  {

  }
  return v15;
}

uint64_t type metadata accessor for PICSStoreCoreData()
{
  return objc_opt_self();
}

id sub_213E4BDA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_213E481D8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_213E4BDBC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_213E4AB88(*(_QWORD *)(v1 + 16), a1);
}

void sub_213E4BDD4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_213E48704(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_213E4BDF0()
{
  return swift_deallocObject();
}

uint64_t sub_213E4BE00()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_213E4BE38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_213E48D94();
  *a1 = result;
  return result;
}

uint64_t sub_213E4BE64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_213E4938C();
  *a1 = result;
  return result;
}

uint64_t sub_213E4BE90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_213E498A4(*(_QWORD *)(v1 + 24));
  *a1 = result;
  return result;
}

void sub_213E4BECC(uint64_t a1@<X8>)
{
  sub_213E4A56C(a1);
}

uint64_t sub_213E4BEE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_213E4C414(a1);
}

uint64_t sub_213E4BEF8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_213E4BF24()
{
  uint64_t v0;

  sub_213E4AD50(*(_QWORD *)(v0 + 16));
}

uint64_t sub_213E4BF30()
{
  return swift_deallocObject();
}

void sub_213E4BF40(uint64_t *a1@<X8>)
{
  sub_213E4AF78(a1);
}

uint64_t method lookup function for PICSStoreCoreData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PICSStoreCoreData.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PICSStoreCoreData.getPersistentContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PICSStoreCoreData.insert(pics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PICSStoreCoreData.delete(pics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PICSStoreCoreData.update(pics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PICSStoreCoreData.resetStore()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PICSStoreCoreData.readAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of PICSStoreCoreData.readAllContactReferences()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of PICSStoreCoreData.find(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of PICSStoreCoreData.find(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of PICSStoreCoreData.delete(contactId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of PICSStoreCoreData.delete(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of PICSStoreCoreData.recordStoreUpdate(source:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of PICSStoreCoreData.mostRecentStoreUpdate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t type metadata accessor for PICSStoreCoreDataWithMigrations()
{
  return objc_opt_self();
}

unint64_t sub_213E4C028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3E090;
  if (!qword_254D3E090)
  {
    v1 = sub_213DB9CDC(255, &qword_254D3E088);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_254D3E090);
  }
  return result;
}

uint64_t sub_213E4C080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_213EF1A10();
  MEMORY[0x24BDAC7A8](v1);
  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213EF1A04();
  sub_213EF1A1C();
  sub_213EF1E30();
  sub_213DB0DB4(&qword_254D3BBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F778]);
  swift_retain();
  v2 = sub_213EF1A28();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_213E4C414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_213E4A640(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  *a1 = result;
  return result;
}

uint64_t sub_213E4C454()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_213EF2844();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  v22[0] = 0;
  v3 = objc_msgSend(v2, sel_execute_, v22);
  v4 = v22[0];
  if (v3)
  {
    v5 = v3;
    type metadata accessor for PlusContactSuggestionStoreUpdateRecord();
    v6 = sub_213EF2A3C();
    v7 = v4;

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_213EF306C();
      swift_bridgeObjectRelease();
      if (!v8)
        goto LABEL_8;
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v8)
      {
LABEL_8:
        swift_bridgeObjectRelease();

        return v8;
      }
    }
    if ((v6 & 0xC000000000000001) != 0)
    {
      v9 = (id)MEMORY[0x2199C49B0](0, v6);
      goto LABEL_7;
    }
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = *(id *)(v6 + 32);
LABEL_7:
      v8 = (uint64_t)v9;
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_19;
  }
  v10 = v22[0];
  v5 = (void *)sub_213EF1BA8();

  swift_willThrow();
  if (qword_253F04A88 != -1)
LABEL_19:
    swift_once();
  v11 = sub_213EF2724();
  __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
  v12 = v5;
  v13 = v5;
  v14 = sub_213EF270C();
  v15 = sub_213EF2CA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = (void *)swift_slowAlloc();
    v22[0] = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
    v19 = sub_213EF288C();
    sub_213DB0570(v19, v20, (uint64_t *)v22);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213DAB000, v14, v15, "Failed to load store update record. error=%s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v17, -1, -1);
    MEMORY[0x2199C53C4](v16, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t sub_213E4C7A8()
{
  return swift_deallocObject();
}

void sub_213E4C7B8(void *a1, void *a2)
{
  uint64_t v2;

  sub_213E47D04(a1, a2, v2);
}

uint64_t sub_213E4C7C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_213E4BE90(a1);
}

uint64_t sub_213E4C7D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_213E4BE64(a1);
}

uint64_t sub_213E4C7E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_213E4BE38(a1);
}

void sub_213E4C810(_BYTE *a1@<X8>)
{
  sub_213E4BDBC(a1);
}

void sub_213E4C824(uint64_t a1@<X8>)
{
  sub_213E4BECC(a1);
}

void sub_213E4C838(_BYTE *a1@<X8>)
{
  sub_213E4BDD4(a1);
}

id sub_213E4C84C@<X0>(_BYTE *a1@<X8>)
{
  return sub_213E4BDA4(a1);
}

uint64_t sub_213E4C860()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for FrontrunnerNominationFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FrontrunnerNominationFilter);
}

uint64_t sub_213E4C874(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_213E4C87C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double (*v44)(uint64_t, uint64_t);
  char *v45;
  double v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a3;
  v7 = sub_213EF2D6C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v51 - v13;
  v57 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v51 - v17;
  v19 = sub_213EF1B30();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v51 - v21;
  v23 = MEMORY[0x2199C4560](a1, a2);
  if (v23 < 2)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  else
  {
    v51 = v16;
    v52 = v11;
    v54 = v8;
    v55 = v7;
    v56 = v18;
    v53 = a1;
    v61 = a1;
    MEMORY[0x24BDAC7A8](v23);
    v24 = (char *)v59;
    *(&v51 - 2) = (char *)a2;
    *(&v51 - 1) = v24;
    swift_getKeyPath();
    sub_213EF1B3C();
    v25 = sub_213EF2AE4();
    MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v25);
    MEMORY[0x2199C52D4](MEMORY[0x24BDCC6C8], v19);
    v26 = sub_213EF2994();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v60 = v26;
    MEMORY[0x2199C52D4](MEMORY[0x24BEE12B0], v25);
    sub_213EF2814();
    v28 = v61;
    v27 = v62;
    v30 = v63;
    v29 = v64;
    v31 = sub_213EF2DFC();
    MEMORY[0x2199C52D4](MEMORY[0x24BEE2170], v31);
    v32 = v58;
    sub_213EF2808();
    v33 = v57;
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    if (v34(v32, 1, a2) == 1)
    {
      v35 = v32;
LABEL_7:
      v41 = v54;
      v40 = v55;
      v36 = v53;
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v40);
      swift_bridgeObjectRetain();
      return v36;
    }
    v37 = v32;
    v38 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v38(v56, v37, a2);
    v61 = v28;
    v62 = v27;
    v63 = v30;
    v64 = v29;
    MEMORY[0x2199C52D4](MEMORY[0x24BEE2190], v31);
    v39 = v33;
    v35 = v52;
    sub_213EF2C40();
    if (v34(v35, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v56, a2);
      goto LABEL_7;
    }
    v42 = v51;
    v38(v51, v35, a2);
    v43 = v59;
    v44 = *(double (**)(uint64_t, uint64_t))(v59 + 96);
    v45 = v56;
    v46 = v44(a2, v59);
    if (v46 - v44(a2, v43) >= a4)
    {
      sub_213DBB2DC(a2, a2);
      swift_allocObject();
      v48 = sub_213EF2A60();
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v49, v45, a2);
      v36 = sub_213DB9D78(v48);
    }
    else
    {
      v36 = sub_213EF2A90();
    }
    swift_unknownObjectRelease();
    v47 = *(void (**)(char *, uint64_t))(v39 + 8);
    v47(v42, a2);
    v47(v45, a2);
  }
  return v36;
}

uint64_t sub_213E4CCD0(uint64_t a1, uint64_t a2)
{
  double *v2;

  return sub_213E4C87C(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *v2);
}

void sub_213E4CCE0(uint64_t a1@<X1>, uint64_t a2@<X2>, double *a3@<X8>)
{
  *a3 = (*(double (**)(_QWORD))(*(_QWORD *)(a2 + a1 - 8) + 96))(*(_QWORD *)(a2 + a1 - 16));
}

uint64_t sub_213E4CD18()
{
  return 16;
}

__n128 sub_213E4CD24(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_213E4CD30()
{
  uint64_t result;

  type metadata accessor for KVSuggestionDonator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B28);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F04B10 = 91;
  *(_QWORD *)algn_253F04B18 = 0xE100000000000000;
  return result;
}

uint64_t KVSuggestionDonator.__allocating_init(donationCandidates:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t KVSuggestionDonator.init(donationCandidates:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_213E4CDEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 112) = v1;
  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 120) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213E4CE60;
  *(_WORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 24) = v2 + 16;
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_213E4CE60()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  v2 = (_QWORD *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *__swift_project_boxed_opaque_existential_1(v2 + 2, v2[5]);
  v6 = (char *)&dword_254D3E160 + dword_254D3E160;
  v5 = (_QWORD *)swift_task_alloc();
  v2[17] = v5;
  *v5 = v2;
  v5[1] = sub_213E4CF1C;
  return ((uint64_t (*)(uint64_t, _QWORD))v6)(v4, v2[14]);
}

uint64_t sub_213E4CF1C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E4CF70()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E4CFA0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;

  if (qword_253F04A88 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = sub_213EF2724();
  __swift_project_value_buffer(v2, (uint64_t)qword_253F08A00);
  v3 = v1;
  v4 = v1;
  v5 = sub_213EF270C();
  v6 = sub_213EF2CA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v7 = 136315394;
    if (qword_253F04B20 != -1)
      swift_once();
    v9 = *(void **)(v0 + 128);
    v11 = qword_253F04B10;
    v10 = *(_QWORD *)algn_253F04B18;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_213DB0570(v11, v10, &v18);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 104) = v13;
    sub_213EF2D9C();
    *v8 = v13;

    _os_log_impl(&dword_213DAB000, v5, v6, "%s Error encountered during the stream init %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E90);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v17, -1, -1);
    MEMORY[0x2199C53C4](v7, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 128);

  }
  if (qword_253F04BB0 != -1)
    swift_once();
  v15 = *(void **)(v0 + 128);
  *(_QWORD *)(v0 + 80) = &type metadata for PIMSFatalError;
  *(_QWORD *)(v0 + 88) = sub_213E4D6F0();
  strcpy((char *)(v0 + 56), "PIMSFatalError");
  *(_BYTE *)(v0 + 71) = -18;
  *(_BYTE *)(v0 + 72) = 11;
  sub_213EF210C();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E4D2A4(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v3;

  *(_WORD *)(v3 + 72) = a2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a3;
  return swift_task_switch();
}

uint64_t sub_213E4D2C0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  __int16 v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 32);
  sub_213E4E600();
  v2 = sub_213E4D550(v1);
  *(_QWORD *)(v0 + 40) = v2;
  v3 = v2;
  v4 = *(_WORD *)(v0 + 72);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_WORD *)(v5 + 24) = v4;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E68);
  *v6 = v0;
  v6[1] = sub_213E4D3E4;
  return sub_213EF3264();
}

uint64_t sub_213E4D3E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E4D450()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t (*v6)(void);
  void *v7;

  v1 = (void *)v0[2];
  if (v1 && (objc_opt_self(), (v2 = swift_dynamicCastObjCClass()) != 0))
  {
    v3 = v2;
    v4 = (void *)v0[5];
    v5 = (uint64_t *)v0[3];
    v5[3] = (uint64_t)&type metadata for SuggestionDonationStream;
    v5[4] = (uint64_t)&off_24D108F38;

    *v5 = v3;
    v6 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v7 = (void *)v0[5];
    sub_213E4E648();
    swift_allocError();
    swift_willThrow();

    v6 = (uint64_t (*)(void))v0[1];
  }
  return v6();
}

uint64_t sub_213E4D518()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_213E4D550(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_213EF2844();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_donatorWithItemType_originAppId_error_, a1, v2, v7);

  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_213EF1BA8();

    swift_willThrow();
  }
  return v3;
}

uint64_t KVSuggestionDonator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KVSuggestionDonator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E4D67C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

unint64_t sub_213E4D6F0()
{
  unint64_t result;

  result = qword_253F04AC8;
  if (!qword_253F04AC8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PIMSFatalError, &type metadata for PIMSFatalError);
    atomic_store(result, (unint64_t *)&qword_253F04AC8);
  }
  return result;
}

uint64_t sub_213E4D734(void *a1, uint64_t a2)
{
  _QWORD *v2;
  id v3;

  v2[12] = a2;
  v2[5] = &type metadata for SuggestionDonationStream;
  v2[6] = &off_24D108F38;
  v2[2] = a1;
  v3 = a1;
  return swift_task_switch();
}

uint64_t sub_213E4D788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0[12] + 16);
  v13 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_213DAFDFC(v3, (uint64_t)(v0 + 7));
      v4 = v0[10];
      v5 = v0[11];
      __swift_project_boxed_opaque_existential_1(v0 + 7, v4);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      v7 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
      if (v6)
      {
        MEMORY[0x2199C44C4](v7);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    v8 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v0[13] = v8;
  swift_bridgeObjectRelease();
  v9 = (void *)*__swift_project_boxed_opaque_existential_1(v0 + 2, (uint64_t)&type metadata for SuggestionDonationStream);
  v10 = (_QWORD *)swift_task_alloc();
  v0[14] = v10;
  *v10 = v0;
  v10[1] = sub_213E4D91C;
  v10[20] = v8;
  v10[18] = &type metadata for SuggestionDonationStream;
  v10[19] = &off_24D108F38;
  v10[15] = v9;
  v11 = v9;
  return swift_task_switch();
}

uint64_t sub_213E4D91C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t type metadata accessor for KVSuggestionDonator()
{
  return objc_opt_self();
}

uint64_t method lookup function for KVSuggestionDonator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KVSuggestionDonator.__allocating_init(donationCandidates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of KVSuggestionDonator.donateSuggestions(type:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 120) + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213E4141C;
  return v6(a1);
}

uint64_t sub_213E4DA10(uint64_t a1, void *a2)
{
  _QWORD *v2;
  id v3;

  v2[20] = a1;
  v2[18] = &type metadata for SuggestionDonationStream;
  v2[19] = &off_24D108F38;
  v2[15] = a2;
  v3 = a2;
  return swift_task_switch();
}

uint64_t sub_213E4DA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void **p_weak_ivar_lyt;
  id v18;
  id v19;
  void *v20;
  void *v21;
  unsigned int v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45[2];

  v45[1] = *MEMORY[0x24BDAC8D0];
  v2 = v0 + 80;
  if (qword_253F04A88 != -1)
    swift_once();
  v3 = sub_213EF2724();
  *(_QWORD *)(v0 + 168) = __swift_project_value_buffer(v3, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  v4 = sub_213EF270C();
  v5 = sub_213EF2C94();
  v6 = &unk_213EF4000;
  if (!os_log_type_enabled(v4, v5))
  {
    v9 = *(_QWORD *)(v0 + 160);

    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v7 = (_QWORD *)(v0 + 80);
  v8 = swift_slowAlloc();
  v1 = swift_slowAlloc();
  v45[0] = v1;
  *(_DWORD *)v8 = 136315394;
  if (qword_253F04B20 != -1)
    goto LABEL_33;
  while (1)
  {
    v9 = *(_QWORD *)(v0 + 160);
    v10 = qword_253F04B10;
    v11 = *(_QWORD *)algn_253F04B18;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_213DB0570(v10, v11, v45);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_213EF306C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = v12;
    v2 = (uint64_t)v7;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v4, v5, "%s Registering all %ld suggestions in the full dataset.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v1, -1, -1);
    MEMORY[0x2199C53C4](v8, -1, -1);

    v6 = (_QWORD *)&unk_213EF4000;
LABEL_9:
    v7 = (_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 160);
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v4 = *(NSObject **)(v0 + 160);
      else
        v4 = (v9 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      v8 = sub_213EF306C();
      if (!v8)
        goto LABEL_31;
    }
    else
    {
      v8 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v8)
        goto LABEL_31;
    }
    if (v8 >= 1)
      break;
    __break(1u);
LABEL_33:
    swift_once();
  }
  v14 = 0;
  v15 = v9 & 0xC000000000000001;
  v43 = *(_QWORD *)(v0 + 160) + 32;
  v16 = v6;
  p_weak_ivar_lyt = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
  v39 = v16[136];
  v42 = v2;
  v40 = v9 & 0xC000000000000001;
  v41 = v8;
  do
  {
    if (v15)
      v19 = (id)MEMORY[0x2199C49B0](v14, *(_QWORD *)(v0 + 160));
    else
      v19 = *(id *)(v43 + 8 * v14);
    v20 = v19;
    v21 = (void *)*__swift_project_boxed_opaque_existential_1(v7, *(_QWORD *)(v0 + 144));
    *(_QWORD *)(v0 + 80) = 0;
    v22 = objc_msgSend(v21, (SEL)p_weak_ivar_lyt[285], v20, v2);
    v23 = *(void **)(v0 + 80);
    if (v22)
    {
      v18 = v23;

    }
    else
    {
      v24 = v23;
      v25 = sub_213EF1BA8();

      v44 = (id)v25;
      swift_willThrow();
      v26 = v20;
      v27 = sub_213EF270C();
      v28 = sub_213EF2CA0();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v45[0] = v30;
        *(_DWORD *)v29 = v39;
        if (qword_253F04B20 != -1)
          swift_once();
        v32 = qword_253F04B10;
        v31 = *(_QWORD *)algn_253F04B18;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v29 + 4) = sub_213DB0570(v32, v31, v45);
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2080;
        v33 = objc_msgSend(v26, sel_itemId);
        v34 = sub_213EF2850();
        v36 = v35;

        *(_QWORD *)(v29 + 14) = sub_213DB0570(v34, v36, v45);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v27, v28, "%s Problem occured when registering item with id: %s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v30, -1, -1);
        MEMORY[0x2199C53C4](v29, -1, -1);

        v7 = (_QWORD *)(v0 + 120);
        v2 = v42;
        v15 = v40;
        v8 = v41;
        p_weak_ivar_lyt = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
      }
      else
      {

      }
      if (qword_253F04BB0 != -1)
        swift_once();
      *(_QWORD *)(v0 + 104) = &type metadata for PIMSFatalError;
      *(_QWORD *)(v0 + 112) = sub_213E4D6F0();
      strcpy((char *)(v0 + 80), "PIMSFatalError");
      *(_BYTE *)(v0 + 95) = -18;
      *(_BYTE *)(v0 + 96) = 9;
      sub_213EF210C();

      __swift_destroy_boxed_opaque_existential_1Tm(v2);
    }
    ++v14;
  }
  while (v8 != v14);
LABEL_31:
  swift_bridgeObjectRelease();
  v37 = (void *)*__swift_project_boxed_opaque_existential_1(v7, *(_QWORD *)(v0 + 144));
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_213E4E0C0;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_213E4D67C;
  *(_QWORD *)(v0 + 104) = &block_descriptor_0;
  objc_msgSend(v37, sel_finish_, v2);
  return swift_continuation_await();
}

uint64_t sub_213E4E0C0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_213E4E164()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8[2];

  v8[1] = *MEMORY[0x24BDAC8D0];
  v1 = sub_213EF270C();
  v2 = sub_213EF2C94();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8[0] = v4;
    *(_DWORD *)v3 = 136315138;
    if (qword_253F04B20 != -1)
      swift_once();
    v5 = qword_253F04B10;
    v6 = *(_QWORD *)algn_253F04B18;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_213DB0570(v5, v6, v8);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v1, v2, "%s Finished vocabulary import", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v4, -1, -1);
    MEMORY[0x2199C53C4](v3, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E4E308()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 176);
  swift_willThrow();
  v2 = v1;
  v3 = v1;
  v4 = sub_213EF270C();
  v5 = sub_213EF2CA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17[0] = v16;
    *(_DWORD *)v6 = 136315394;
    if (qword_253F04B20 != -1)
      swift_once();
    v8 = *(void **)(v0 + 176);
    v10 = qword_253F04B10;
    v9 = *(_QWORD *)algn_253F04B18;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_213DB0570(v10, v9, v17);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2112;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v12;
    sub_213EF2D9C();
    *v7 = v12;

    _os_log_impl(&dword_213DAB000, v4, v5, "%s Error encountered during finishing stream of vocabulary import: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E90);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v16, -1, -1);
    MEMORY[0x2199C53C4](v6, -1, -1);
  }
  else
  {
    v13 = *(void **)(v0 + 176);

  }
  if (qword_253F04BB0 != -1)
    swift_once();
  v14 = *(void **)(v0 + 176);
  *(_QWORD *)(v0 + 104) = &type metadata for PIMSFatalError;
  *(_QWORD *)(v0 + 112) = sub_213E4D6F0();
  strcpy((char *)(v0 + 80), "PIMSFatalError");
  *(_BYTE *)(v0 + 95) = -18;
  *(_BYTE *)(v0 + 96) = 10;
  sub_213EF210C();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_213E4E600()
{
  unint64_t result;

  result = qword_253F04E98;
  if (!qword_253F04E98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253F04E98);
  }
  return result;
}

void sub_213E4E63C(uint64_t a1)
{
  uint64_t v1;

  sub_213EBD74C(a1, *(void **)(v1 + 16), *(_WORD *)(v1 + 24));
}

unint64_t sub_213E4E648()
{
  unint64_t result;

  result = qword_254D3E178;
  if (!qword_254D3E178)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF8BB0, &type metadata for SuggestionDonationError);
    atomic_store(result, (unint64_t *)&qword_254D3E178);
  }
  return result;
}

uint64_t sub_213E4E68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EC8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF53E0;
  v1 = type metadata accessor for MediaPlayClassifier();
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  *(_QWORD *)(v2 + 16) = 91;
  *(_QWORD *)(v2 + 24) = 0xE100000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = &protocol witness table for MediaPlayClassifier;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t SuccessfulPlayMediaDefinition.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SuccessfulPlayMediaDefinition.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E4E780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _BYTE v16[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for MediaPlayClassification();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_213DAFDFC(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if ((v11 & 1) != 0)
  {
    v12(v6, 0, 1, v7);
    sub_213DE4A40((uint64_t)v6, (uint64_t)v10);
    if ((sub_213E37098() & 1) != 0 && v10[8] == 1)
    {
      sub_213DE4A40((uint64_t)v10, a2);
      v13 = 0;
    }
    else
    {
      sub_213DE4A04((uint64_t)v10);
      v13 = 1;
    }
  }
  else
  {
    v13 = 1;
    v12(v6, 1, 1, v7);
    sub_213E4E8F0((uint64_t)v6);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(a2, v13, 1, v7);
}

uint64_t sub_213E4E8F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E4E930(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) == 0xD000000000000011 && *(_QWORD *)(a1 + 32) == 0x8000000213F048A0)
    return 1;
  else
    return sub_213EF3234();
}

double sub_213E4E984@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;

  Array<A>.findEvent(eventId:)(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a1, &v7);
  v4 = v8;
  if (v8)
  {
    v5 = v7;
    extractMediaReference(event:)(a3);
    sub_213DC7B60(v5, v4);
  }
  else
  {
    *(_WORD *)(a3 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_213E4EA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_1;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  char *v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75[40];
  uint64_t v76[6];

  v6 = v5;
  v71 = a2;
  v72 = a5;
  v69 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v57 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v57 - v18;
  v20 = type metadata accessor for MediaPlayClassification();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v74 = (uint64_t)v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v57 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v73 = (uint64_t)v57 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v59 = (uint64_t)v57 - v29;
  v62 = *a3;
  v63 = a3[1];
  v30 = a3[2];
  v66 = a3[3];
  v67 = v30;
  v31 = a3[4];
  v64 = a3[5];
  v65 = v31;
  v61 = *((unsigned __int8 *)a3 + 48);
  v60 = *((unsigned __int8 *)a3 + 49);
  v68 = a4;
  v32 = *(_QWORD *)(a4 + 24);
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v58 = v19;
    v34 = v32 + 32;
    v57[1] = v32;
    swift_bridgeObjectRetain();
    v57[2] = v6;
    swift_retain();
    v35 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v34, (uint64_t)v76);
      sub_213DAFDFC((uint64_t)v76, (uint64_t)v75);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v36 = swift_dynamicCast();
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
      if (v36)
      {
        v37(v14, 0, 1, v20);
        sub_213DE4A40((uint64_t)v14, (uint64_t)v26);
        if ((sub_213E37098() & 1) != 0 && v26[8] == 1)
        {
          sub_213DE4A40((uint64_t)v26, (uint64_t)v17);
          v38 = 0;
        }
        else
        {
          sub_213DE4A04((uint64_t)v26);
          v38 = 1;
        }
      }
      else
      {
        v38 = 1;
        v37(v14, 1, 1, v20);
        sub_213E4E8F0((uint64_t)v14);
      }
      v37(v17, v38, 1, v20);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
      {
        sub_213E4E8F0((uint64_t)v17);
      }
      else
      {
        v39 = v73;
        sub_213DE4A40((uint64_t)v17, v73);
        sub_213DE4A40(v39, v74);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_213DB5ADC(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
        v41 = *(_QWORD *)(v35 + 16);
        v40 = *(_QWORD *)(v35 + 24);
        if (v41 >= v40 >> 1)
          v35 = sub_213DB5ADC(v40 > 1, v41 + 1, 1, v35);
        *(_QWORD *)(v35 + 16) = v41 + 1;
        sub_213DE4A40(v74, v35+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v41);
      }
      v34 += 40;
      --v33;
    }
    while (v33);
    swift_release();
    swift_bridgeObjectRelease();
    v19 = v58;
    if (*(_QWORD *)(v35 + 16))
      goto LABEL_18;
  }
  else
  {
    v35 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_18:
      sub_213DE49C0(v35 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), (uint64_t)v19);
      v42 = 0;
      goto LABEL_21;
    }
  }
  v42 = 1;
LABEL_21:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, v42, 1, v20);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_213E4E8F0((uint64_t)v19);
    v43 = type metadata accessor for MediaFeedbackGroundTruth();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v72, 1, 1, v43);
  }
  else
  {
    v45 = v59;
    sub_213DE4A40((uint64_t)v19, v59);
    v46 = *(_QWORD *)(v68 + 16);
    v76[3] = v20;
    v76[4] = (uint64_t)&protocol witness table for MediaPlayClassification;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
    sub_213DE49C0(v45, (uint64_t)boxed_opaque_existential_1);
    v48 = v70;
    Array<A>.getOriginalRequestID(for:)((uint64_t)v76, v46, v70);
    sub_213DE4A04(v45);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
    v49 = sub_213EF1D64();
    v50 = v72;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v72, v69, v49);
    v51 = (int *)type metadata accessor for MediaFeedbackGroundTruth();
    *(_BYTE *)(v50 + v51[5]) = 1;
    *(_QWORD *)(v50 + v51[6]) = v71;
    v52 = v50 + v51[7];
    v53 = v63;
    *(_QWORD *)v52 = v62;
    *(_QWORD *)(v52 + 8) = v53;
    v55 = v66;
    v54 = v67;
    *(_QWORD *)(v52 + 16) = v67;
    *(_QWORD *)(v52 + 24) = v55;
    v56 = v64;
    *(_QWORD *)(v52 + 32) = v65;
    *(_QWORD *)(v52 + 40) = v56;
    *(_BYTE *)(v52 + 48) = v61;
    *(_BYTE *)(v52 + 49) = v60;
    sub_213DE7F6C((uint64_t)v48, v50 + v51[8]);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v51 - 1) + 56))(v50, 0, 1, v51);
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_213DB8518(v54, v55);
  }
}

uint64_t SuccessfulPlayMediaDefinition.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SuccessfulPlayMediaDefinition.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E4F020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213E4E780(a1, a2);
}

uint64_t sub_213E4F034@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_213E53034(a1);
  *a2 = result;
  return result;
}

uint64_t sub_213E4F058@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return sub_213E4EA34(a1, *a2, a3, a4, a5);
}

_UNKNOWN **sub_213E4F07C()
{
  return &protocol witness table for MediaPlayClassification;
}

uint64_t type metadata accessor for SuccessfulPlayMediaDefinition()
{
  return objc_opt_self();
}

uint64_t method lookup function for SuccessfulPlayMediaDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.successClassifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.identifySuccessClassification(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.isInitiatingEvent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.extractReferencedEntity(session:successClassification:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.extractUsoEntityFromSessionSlice(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SuccessfulPlayMediaDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t PlayMediaFeature.PrimaryMediaItem.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t PlayMediaFeature.PrimaryMediaItemMetadata.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23B8();
}

{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t PlayMediaFeature.EventOrigin.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t PlayMediaItemMetadata.init(ampConfidenceLevel:ampConfidenceScore:isLibraryContent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_BYTE *)(a5 + 17) = a4;
  return result;
}

uint64_t MediaItem.init(id:mediaType:title:artist:isMpc:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return result;
}

uint64_t PlayMediaFeature.PrimaryMediaItem.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t PlayMediaFeature.PrimaryMediaItemMetadata.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t PlayMediaFeature.PrimaryMediaItemMetadata.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t PlayMediaFeature.PrimaryMediaItemType.init(value:)()
{
  return sub_213EF23C4();
}

uint64_t sub_213E4F438(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.PrimaryMediaItemType);
}

uint64_t sub_213E4F444(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.PrimaryMediaItemType);
}

uint64_t PlayMediaFeature.EventOrigin.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t sub_213E4F534(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers);
}

uint64_t sub_213E4F540(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers);
}

uint64_t sub_213E4F550(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.AlternateMediaItems);
}

uint64_t sub_213E4F55C(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.AlternateMediaItems);
}

uint64_t sub_213E4F56C(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata);
}

uint64_t sub_213E4F578(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata);
}

uint64_t sub_213E4F58C(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.PlaybackQueueLocation);
}

uint64_t sub_213E4F598(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.PlaybackQueueLocation);
}

uint64_t PlayMediaFeature.NowPlayingEvent.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t PlayMediaFeature.NowPlayingEvent.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t MediaItem.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaItem.mediaType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MediaItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaItem.artist.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaItem.isMpc.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PlayMediaItemMetadata.ampConfidenceLevel.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PlayMediaItemMetadata.ampConfidenceScore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t PlayMediaItemMetadata.isLibraryContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

SiriPrivateLearningInference::PlayMediaEventOrigin_optional __swiftcall PlayMediaEventOrigin.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SiriPrivateLearningInference::PlayMediaEventOrigin_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t PlayMediaEventOrigin.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C506C61756E616DLL;
  else
    return 0x6769725469726973;
}

uint64_t sub_213E4F81C(char *a1, char *a2)
{
  return sub_213E2A1C0(*a1, *a2);
}

uint64_t sub_213E4F828()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213E4F8B4()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E4F91C()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

SiriPrivateLearningInference::PlayMediaEventOrigin_optional sub_213E4F9A4(Swift::String *a1)
{
  return PlayMediaEventOrigin.init(rawValue:)(*a1);
}

void sub_213E4F9B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6769725469726973;
  if (*v1)
    v2 = 0x6C506C61756E616DLL;
  v3 = 0xEB00000000726567;
  if (*v1)
    v3 = 0xEA00000000007961;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t _s28SiriPrivateLearningInference21PlayMediaItemMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  char v3;
  int v4;
  _BOOL4 v5;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(unsigned __int8 *)(a1 + 17);
  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(unsigned __int8 *)(a2 + 17);
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
LABEL_8:
    if (v2 == 2)
    {
      if (v4 != 2)
        return 0;
    }
    else
    {
      v5 = (v2 & 1) == 0;
      if (v4 == 2 || ((v5 ^ v4) & 1) == 0)
        return 0;
    }
    return 1;
  }
  if (*(_BYTE *)(a2 + 16))
    goto LABEL_8;
  return 0;
}

uint64_t _s28SiriPrivateLearningInference9MediaItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  int v16;
  int v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v16 = *(unsigned __int8 *)(a2 + 56);
  v17 = *(unsigned __int8 *)(a1 + 56);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v8)
      return 0;
  }
  else
  {
    v12 = sub_213EF3234();
    result = 0;
    if ((v12 & 1) == 0 || v2 != v8)
      return result;
  }
  if (v3 == v7 && v4 == v10 || (v14 = sub_213EF3234(), result = 0, (v14 & 1) != 0))
  {
    if (v6)
    {
      if (v11)
      {
        if (v5 != v9 || v6 != v11)
        {
          v15 = sub_213EF3234();
          result = 0;
          if ((v15 & 1) == 0)
            return result;
        }
        return v17 ^ v16 ^ 1u;
      }
    }
    else if (!v11)
    {
      return v17 ^ v16 ^ 1u;
    }
    return 0;
  }
  return result;
}

unint64_t sub_213E4FBB4()
{
  unint64_t result;

  result = qword_254D3E2B0;
  if (!qword_254D3E2B0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PlayMediaEventOrigin, &type metadata for PlayMediaEventOrigin);
    atomic_store(result, (unint64_t *)&qword_254D3E2B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayMediaFeature()
{
  return &type metadata for PlayMediaFeature;
}

uint64_t type metadata accessor for PlayMediaFeature.PrimaryMediaItem(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E2B8);
}

uint64_t sub_213E4FC1C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FC28()
{
  return type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
}

uint64_t type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E308);
}

uint64_t sub_213E4FC44()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FC50()
{
  return type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
}

uint64_t type metadata accessor for PlayMediaFeature.PrimaryMediaItemType(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E358);
}

uint64_t sub_213E4FC6C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FC78()
{
  return type metadata accessor for PlayMediaFeature.PrimaryMediaItemType(0);
}

uint64_t type metadata accessor for PlayMediaFeature.EventOrigin(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E3A8);
}

uint64_t sub_213E4FC94()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FCA0()
{
  return type metadata accessor for PlayMediaFeature.EventOrigin(0);
}

uint64_t type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E3F8);
}

uint64_t sub_213E4FCBC()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FCC8()
{
  return type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers(0);
}

uint64_t type metadata accessor for PlayMediaFeature.AlternateMediaItems(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E448);
}

uint64_t sub_213E4FCE4()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FCF0()
{
  return type metadata accessor for PlayMediaFeature.AlternateMediaItems(0);
}

uint64_t type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E498);
}

uint64_t sub_213E4FD0C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FD18()
{
  return type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata(0);
}

uint64_t type metadata accessor for PlayMediaFeature.PlaybackQueueLocation(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E4E8);
}

uint64_t sub_213E4FD34()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FD40()
{
  return type metadata accessor for PlayMediaFeature.PlaybackQueueLocation(0);
}

uint64_t type metadata accessor for PlayMediaFeature.NowPlayingEvent(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3E538);
}

uint64_t sub_213E4FD5C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E4FD68()
{
  return type metadata accessor for PlayMediaFeature.NowPlayingEvent(0);
}

uint64_t destroy for MediaItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaItem()
{
  return &type metadata for MediaItem;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PlayMediaItemMetadata(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayMediaItemMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayMediaItemMetadata()
{
  return &type metadata for PlayMediaItemMetadata;
}

uint64_t storeEnumTagSinglePayload for PlayMediaEventOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E500DC + 4 * byte_213EFB475[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E50110 + 4 * byte_213EFB470[v4]))();
}

uint64_t sub_213E50110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E50118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E50120);
  return result;
}

uint64_t sub_213E5012C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E50134);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E50138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E50140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayMediaEventOrigin()
{
  return &type metadata for PlayMediaEventOrigin;
}

uint64_t USOTaskSummaryFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t USOTaskSummaryFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t USOTaskSummaryFeature.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t USOTaskSummaryFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t USOTaskSummaryFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E50234()
{
  return sub_213E50394();
}

uint64_t USOTaskSummaryFeature.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t USOTaskSummaryFeature.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E502F4()
{
  type metadata accessor for USOTaskSummaryFeature();
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E50344()
{
  type metadata accessor for USOTaskSummaryFeature();
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E50394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v0 = sub_213EF20E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06960);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06958);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_213EF21B4())
  {
    v11 = sub_213EF20F4();
    if (*(_QWORD *)(v11 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
      v12 = 0;
    }
    else
    {
      v12 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v12, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_213EF53E0;
      sub_213EF1DA0();
      v18 = sub_213EF20DC();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v21 = type metadata accessor for USOTaskSummaryFeature();
      swift_allocObject();
      v24[0] = v18;
      v24[1] = v20;
      v22 = sub_213EF23C4();
      *(_QWORD *)(v17 + 56) = v21;
      *(_QWORD *)(v17 + 64) = sub_213DB196C(&qword_254D3E5A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for USOTaskSummaryFeature, MEMORY[0x24BEA4F80]);
      *(_QWORD *)(v17 + 32) = v22;
      swift_release();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return v17;
    }
    sub_213E507A8((uint64_t)v6);
    if (qword_253F04A88 != -1)
      swift_once();
    v13 = sub_213EF2724();
    __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
    v14 = sub_213EF270C();
    v15 = sub_213EF2CA0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_213DAB000, v14, v15, "Missing the top level task in the SELF graph", v16, 2u);
      MEMORY[0x2199C53C4](v16, -1, -1);
    }

    swift_release();
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_213E506BC(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_253F06D88, a2, (uint64_t (*)(uint64_t))type metadata accessor for USOTaskSummaryFeatureExtractor, (uint64_t)&protocol conformance descriptor for USOTaskSummaryFeatureExtractor);
}

uint64_t type metadata accessor for USOTaskSummaryFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for USOTaskSummaryFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of USOTaskSummaryFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of USOTaskSummaryFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for USOTaskSummaryFeature()
{
  uint64_t result;

  result = qword_253F06B68;
  if (!qword_253F06B68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E50764()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E507A0()
{
  return type metadata accessor for USOTaskSummaryFeature();
}

uint64_t sub_213E507A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06960);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PhoneCallFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PhoneCallFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallUSOFeature.RecipientNames.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E50848()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t inited;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v13;

  v0 = sub_213EF1E24();
  if (v1)
    v2 = v0 & 0xFFFFFFFFFFFFLL;
  else
    v2 = 0;
  if (v1)
    v3 = v1;
  else
    v3 = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v2;
  if (v4)
    return 0;
  if (!sub_213EF1E0C())
    return 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EFB7F0;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  *(_QWORD *)(inited + 40) = swift_getKeyPath();
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  *(_QWORD *)(inited + 56) = swift_getKeyPath();
  *(_QWORD *)(inited + 64) = swift_getKeyPath();
  *(_QWORD *)(inited + 72) = swift_getKeyPath();
  sub_213EF2A54();
  swift_retain();
  v7 = 0;
  do
  {
    if ((inited & 0xC000000000000001) != 0)
      MEMORY[0x2199C49B0](v7, inited);
    else
      swift_retain();
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    swift_release();
    if (v13)
      v8 = v13;
    else
      v8 = 0xE000000000000000;
    if (v13)
      v9 = inited & 0xFFFFFFFFFFFFLL;
    else
      v9 = 0;
    swift_bridgeObjectRelease();
    if ((v8 & 0x2000000000000000) != 0)
      v10 = HIBYTE(v8) & 0xF;
    else
      v10 = v9;
    v5 = v10 == 0;
    if (v10)
      v11 = 1;
    else
      v11 = v7 == 5;
    ++v7;
  }
  while (!v11);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v5;
}

uint64_t PhoneCallFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_213E50A44()
{
  return sub_213E51048();
}

uint64_t PhoneCallUSOFeature.RecipientNames.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t PhoneCallUSOFeature.RecipientNames.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E50AF8()
{
  type metadata accessor for PhoneCallUSOFeature.RecipientNames();
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E50B40()
{
  type metadata accessor for PhoneCallUSOFeature.RecipientNames();
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E50B88()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v0 = sub_213EF1DE8();
  v1 = MEMORY[0x24BEE4AF8];
  if (!v0)
    return v1;
  v2 = v0;
  v22 = MEMORY[0x24BEE4AF8];
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_213EF306C();
    if (v3)
      goto LABEL_4;
  }
  else
  {
    v3 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_4:
      result = sub_213EF1E30();
      if (v3 >= 1)
      {
        v5 = 0;
        v6 = v2 & 0xC000000000000001;
        while (1)
        {
          if (v6)
            MEMORY[0x2199C49B0](v5, v2);
          else
            swift_retain();
          sub_213EF1DAC();
          if (v20)
          {
            sub_213EF1D94();
            swift_release();
          }
          sub_213EF1E9C();
          swift_release();
          if (v21)
            break;
          sub_213EF1DAC();
          if (v20)
          {
            sub_213EF1DF4();
            if (v8)
            {
              sub_213EF1F80();
              swift_allocObject();
              v9 = sub_213EF1F74();
              sub_213EF1F68();
              swift_bridgeObjectRelease();
              if (sub_213EF1DE8())
              {
                sub_213EF1ECC();
                v11 = v10;
                swift_release();
                if (v11)
                {
                  sub_213EF20A0();
                  swift_allocObject();
                  sub_213EF2094();
                  sub_213EF2034();
                  swift_bridgeObjectRelease();
                  swift_retain();
                  sub_213EF1F5C();
                  swift_release_n();
                }
              }
              MEMORY[0x2199C3918](v9);
              sub_213EF1E9C();
              swift_release();
              swift_release();
              swift_release();
              v7 = swift_release();
              v6 = v2 & 0xC000000000000001;
              if (!v19)
                goto LABEL_7;
              goto LABEL_15;
            }
            swift_release();
          }
          swift_release();
LABEL_7:
          if (v3 == ++v5)
          {
            swift_bridgeObjectRelease();
            v12 = v22;
            v1 = MEMORY[0x24BEE4AF8];
            goto LABEL_29;
          }
        }
        v7 = swift_release();
LABEL_15:
        MEMORY[0x2199C44C4](v7);
        if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x24BEE4AF8];
LABEL_29:
  result = swift_bridgeObjectRelease();
  v23 = v1;
  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_31;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  v13 = sub_213EF306C();
  result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    return v1;
  }
LABEL_31:
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        MEMORY[0x2199C49B0](i, v12);
      else
        swift_retain();
      if ((sub_213E50848() & 1) != 0)
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v15 = sub_213EF2724();
        __swift_project_value_buffer(v15, (uint64_t)qword_253F08A00);
        v16 = sub_213EF270C();
        v17 = sub_213EF2CA0();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v18 = 0;
          _os_log_impl(&dword_213DAB000, v16, v17, "Dropping Recipient: every name field is nil or empty", v18, 2u);
          MEMORY[0x2199C53C4](v18, -1, -1);
        }
        swift_release();

      }
      else
      {
        sub_213EF2F58();
        sub_213EF2F88();
        sub_213EF2F94();
        sub_213EF2F64();
      }
    }
    swift_bridgeObjectRelease();
    return v23;
  }
LABEL_49:
  __break(1u);
  return result;
}

_QWORD *sub_213E51048()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _BYTE v44[32];

  v4 = sub_213EF21B4();
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v6 = v4;
    v7 = MEMORY[0x2199C3864]();
    if (v7 >> 62)
    {
      if (sub_213EF306C())
      {
LABEL_4:
        if ((v7 & 0xC000000000000001) != 0)
        {
          v0 = MEMORY[0x2199C49B0](0, v7);
        }
        else
        {
          if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_35;
          }
          v0 = *(_QWORD *)(v7 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        sub_213EF1E6C();
        swift_release();
        sub_213E5163C((uint64_t)v44, (uint64_t)&v40);
        if (v41)
        {
          sub_213EF1F44();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v1 = v43;
            swift_retain();
            sub_213EF1E3C();
            swift_release();
            v2 = v40;
            if ((_QWORD)v40)
            {
              v3 = sub_213E50B88();
              if (!(v3 >> 62))
              {
                v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v8)
                  goto LABEL_12;
                goto LABEL_42;
              }
LABEL_35:
              swift_bridgeObjectRetain();
              v24 = sub_213EF306C();
              swift_bridgeObjectRelease();
              if (v24)
              {
                swift_bridgeObjectRetain();
                v8 = sub_213EF306C();
                swift_bridgeObjectRelease();
                if (!v8)
                {
                  v35 = v2;
                  v36 = v1;
                  v37 = v0;
                  v38 = v6;
                  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
                  goto LABEL_38;
                }
LABEL_12:
                v35 = v2;
                v36 = v1;
                v37 = v0;
                v38 = v6;
                v39 = v5;
                v9 = &v39;
                v10 = (_QWORD *)sub_213DCD0C8(0, v8 & ~(v8 >> 63), 0);
                if (v8 < 0)
                {
                  __break(1u);
                  goto LABEL_44;
                }
                v12 = 0;
                v13 = v39;
                v14 = v3 & 0xC000000000000001;
                v15 = v3;
                do
                {
                  if (v14)
                    MEMORY[0x2199C49B0](v12, v3);
                  else
                    swift_retain();
                  v16 = sub_213EF1E24();
                  v18 = v17;
                  swift_release();
                  if (v18)
                    v19 = v16;
                  else
                    v19 = 0;
                  if (!v18)
                    v18 = 0xE000000000000000;
                  v39 = v13;
                  v21 = v13[2];
                  v20 = v13[3];
                  if (v21 >= v20 >> 1)
                  {
                    sub_213DCD0C8(v20 > 1, v21 + 1, 1);
                    v13 = v39;
                  }
                  ++v12;
                  v13[2] = v21 + 1;
                  v22 = &v13[2 * v21];
                  v22[4] = v19;
                  v22[5] = v18;
                  v3 = v15;
                }
                while (v8 != v12);
LABEL_38:
                v5 = (_QWORD *)type metadata accessor for PhoneCallUSOFeature.RecipientNames();
                swift_allocObject();
                v39 = v13;
                v25 = sub_213EF23C4();
                v41 = v5;
                v9 = (_QWORD *)sub_213DB196C(&qword_254D3E5F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallUSOFeature.RecipientNames, MEMORY[0x24BEA4F80]);
                v42 = (uint64_t)v9;
                *(_QWORD *)&v40 = v25;
                v10 = sub_213DB59A4(0, 1, 1, MEMORY[0x24BEE4AF8]);
                v43 = v10;
                v8 = v10[2];
                v11 = v10[3];
                if (v8 < v11 >> 1)
                {
LABEL_39:
                  v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, (uint64_t)v5);
                  MEMORY[0x24BDAC7A8](v26);
                  v28 = (char *)&v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
                  (*(void (**)(char *))(v29 + 16))(v28);
                  sub_213DB7D98(v8, (uint64_t)v28, (uint64_t *)&v43, (uint64_t)v5, (uint64_t)v9);
                  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v40);
                  v5 = v43;
                  v30 = type metadata accessor for UsoPersonRecipients();
                  swift_allocObject();
                  *(_QWORD *)&v40 = v3;
                  v31 = sub_213EF23C4();
                  v33 = v5[2];
                  v32 = v5[3];
                  if (v33 >= v32 >> 1)
                    v5 = sub_213DB59A4((_QWORD *)(v32 > 1), v33 + 1, 1, v5);
                  v41 = (_QWORD *)v30;
                  v42 = sub_213DB196C(&qword_254D3E600, 255, (uint64_t (*)(uint64_t))type metadata accessor for UsoPersonRecipients, MEMORY[0x24BEA4F80]);
                  *(_QWORD *)&v40 = v31;
                  v5[2] = v33 + 1;
                  sub_213DB0BF0(&v40, (uint64_t)&v5[5 * v33 + 4]);
                  swift_release();
                  swift_release();
                  swift_release();
                  goto LABEL_29;
                }
LABEL_44:
                v43 = sub_213DB59A4((_QWORD *)(v11 > 1), v8 + 1, 1, v10);
                goto LABEL_39;
              }
LABEL_42:
              sub_213E43920((uint64_t)v44);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              return v5;
            }
            swift_release();
          }
        }
        else
        {
          sub_213E43920((uint64_t)&v40);
        }
        swift_release();
LABEL_29:
        swift_release();
        sub_213E43920((uint64_t)v44);
        return v5;
      }
    }
    else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_213E51540(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_253F06C40, a2, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallFeatureExtractor, (uint64_t)&protocol conformance descriptor for PhoneCallFeatureExtractor);
}

uint64_t type metadata accessor for PhoneCallFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for PhoneCallFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoneCallFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PhoneCallFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for PhoneCallUSOFeature()
{
  return &type metadata for PhoneCallUSOFeature;
}

uint64_t type metadata accessor for PhoneCallUSOFeature.RecipientNames()
{
  uint64_t result;

  result = qword_254D3E5A8;
  if (!qword_254D3E5A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E515F8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E51634()
{
  return type metadata accessor for PhoneCallUSOFeature.RecipientNames();
}

uint64_t sub_213E5163C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DF38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E51684@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213EF1DF4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E516AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213EF1EFC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E516D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213EF1E24();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E516FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213EF1F08();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E51724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213EF1F2C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E5174C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213EF1EF0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void DisabledSELFEventLogTarget.emitMessage(_:isolatedStreamId:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_253F04A88 != -1)
    swift_once();
  v0 = sub_213EF2724();
  __swift_project_value_buffer(v0, (uint64_t)qword_253F08A00);
  oslog = sub_213EF270C();
  v1 = sub_213EF2C94();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_213DAB000, oslog, v1, "Omitting SELF logging call as UsageLoggingDisabled flag present", v2, 2u);
    MEMORY[0x2199C53C4](v2, -1, -1);
  }

}

void sub_213E51844()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_253F04A88 != -1)
    swift_once();
  v0 = sub_213EF2724();
  __swift_project_value_buffer(v0, (uint64_t)qword_253F08A00);
  oslog = sub_213EF270C();
  v1 = sub_213EF2C94();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_213DAB000, oslog, v1, "Omitting SELF logging call as UsageLoggingDisabled flag present", v2, 2u);
    MEMORY[0x2199C53C4](v2, -1, -1);
  }

}

uint64_t dispatch thunk of SELFEventLogTarget.emitMessage(_:isolatedStreamId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for DisabledSELFEventLogTarget()
{
  return &type metadata for DisabledSELFEventLogTarget;
}

uint64_t sub_213E51928(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_213E51930(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

BOOL sub_213E51938()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEE7C(v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v1 != 0;
}

uint64_t sub_213E51990()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E608);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF53E0;
  v1 = type metadata accessor for ReformulationSpecializationClassifier();
  swift_allocObject();
  v2 = ReformulationSpecializationClassifier.init()();
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = &protocol witness table for ReformulationSpecializationClassifier;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t PlayMediaReformulationDefinition.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PlayMediaReformulationDefinition.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E51A28()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E610);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_213EF1E18();
  if (!v3)
    return 0;
  v4 = v3;
  v48 = MEMORY[0x24BEE4AF8];
  if (!(v3 >> 62))
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
LABEL_18:
    swift_bridgeObjectRelease();
    if (v8 >> 62)
      goto LABEL_47;
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v10)
    {
      v44 = v8 & 0xC000000000000001;
      v9 = (_QWORD *)MEMORY[0x24BEE4B00];
      v11 = 4;
      v42 = (_QWORD *)v8;
      v43 = v2;
      v41 = v10;
      while (1)
      {
        v13 = v11 - 4;
        if (!v44)
          break;
        MEMORY[0x2199C49B0](v11 - 4, v8);
        v14 = v11 - 3;
        if (__OFADD__(v13, 1))
          goto LABEL_44;
LABEL_28:
        v15 = sub_213EF1EB4();
        v45 = v11;
        v46 = v14;
        if (!v15)
          goto LABEL_31;
        sub_213EF1F8C();
        swift_release();
        v16 = sub_213EF1FA4();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v2, 1, v16) == 1)
        {
          sub_213E51FC0((uint64_t)v2);
LABEL_31:
          v18 = 0;
          v19 = 0xE000000000000000;
          goto LABEL_33;
        }
        v18 = sub_213EF1F98();
        v20 = *(void (**)(char *, uint64_t))(v17 + 8);
        v19 = v21;
        v20(v2, v16);
LABEL_33:
        v22 = sub_213EF1ECC();
        v2 = v23;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48 = (unint64_t)v9;
        v25 = v18;
        v26 = v19;
        v8 = (unint64_t)v9;
        v28 = sub_213DFA220(v18, v19);
        v29 = v9[2];
        v30 = (v27 & 1) == 0;
        v31 = v29 + v30;
        if (__OFADD__(v29, v30))
          goto LABEL_45;
        v32 = v27;
        if (v9[3] >= v31)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v9 = (_QWORD *)v48;
            if ((v27 & 1) != 0)
              goto LABEL_21;
          }
          else
          {
            v8 = (unint64_t)&v48;
            sub_213E01040();
            v9 = (_QWORD *)v48;
            if ((v32 & 1) != 0)
              goto LABEL_21;
          }
        }
        else
        {
          sub_213DFCF30(v31, isUniquelyReferenced_nonNull_native);
          v8 = v48;
          v33 = sub_213DFA220(v25, v26);
          if ((v32 & 1) != (v34 & 1))
            goto LABEL_52;
          v28 = v33;
          v9 = (_QWORD *)v48;
          if ((v32 & 1) != 0)
          {
LABEL_21:
            v12 = (uint64_t *)(v9[7] + 16 * v28);
            swift_bridgeObjectRelease();
            *v12 = v22;
            v12[1] = (uint64_t)v2;
            goto LABEL_22;
          }
        }
        v9[(v28 >> 6) + 8] |= 1 << v28;
        v35 = (uint64_t *)(v9[6] + 16 * v28);
        *v35 = v25;
        v35[1] = v26;
        v36 = (uint64_t *)(v9[7] + 16 * v28);
        *v36 = v22;
        v36[1] = (uint64_t)v2;
        v37 = v9[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_46;
        v9[2] = v39;
        swift_bridgeObjectRetain();
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v45 + 1;
        v8 = (unint64_t)v42;
        v2 = v43;
        if (v46 == v41)
          goto LABEL_49;
      }
      swift_retain();
      v14 = v11 - 3;
      if (!__OFADD__(v13, 1))
        goto LABEL_28;
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      swift_bridgeObjectRetain_n();
      v10 = sub_213EF306C();
      swift_bridgeObjectRelease();
    }
    v9 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_49:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v9;
  }
  swift_bridgeObjectRetain();
  v5 = sub_213EF306C();
  if (!v5)
    goto LABEL_17;
LABEL_4:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        MEMORY[0x2199C49B0](i, v4);
      else
        swift_retain();
      sub_213EF1DAC();
      v7 = swift_release();
      if (v47)
      {
        MEMORY[0x2199C44C4](v7);
        if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
    }
    swift_bridgeObjectRelease();
    v8 = v48;
    goto LABEL_18;
  }
  __break(1u);
LABEL_52:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E51E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];
  char v5;
  ValueMetadata *v6;
  unint64_t v7;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEE7C(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v2 = sub_213E51A28();
    swift_release();
    return v2;
  }
  else
  {
    if (qword_253F04BB0 != -1)
      swift_once();
    v6 = &type metadata for PIMSConstraintMismatch;
    v7 = sub_213DE48B4();
    v4[0] = 0xD000000000000016;
    v4[1] = 0x8000000213F06090;
    v5 = 17;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    return 0;
  }
}

uint64_t type metadata accessor for PlayMediaReformulationDefinition()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlayMediaReformulationDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlayMediaReformulationDefinition.turnMeetsFeatureFilterCriteria(turn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of PlayMediaReformulationDefinition.getClassifiers()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PlayMediaReformulationDefinition.collectSlots(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_213E51FC0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E610);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t extractContactReference(event:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_213DAE9B4(v2);
  result = swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_6;
  if (!v3[2])
  {
    result = swift_bridgeObjectRelease();
LABEL_6:
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  v5 = v3[6];
  v6 = v3[7];
  v7 = v3[8];
  v8 = v3[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRetain();
    v9 = v8;
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v9 = 0;
  }
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

SiriPrivateLearningInference::ContactReference __swiftcall ContactReference.init(contactId:contactLabel:)(Swift::String contactId, Swift::String_optional contactLabel)
{
  Swift::String_optional *v2;
  SiriPrivateLearningInference::ContactReference result;

  v2->value = contactId;
  v2[1] = contactLabel;
  result.contactLabel = contactLabel;
  result.contactId = contactId;
  return result;
}

SiriPrivateLearningInference::ContactReference __swiftcall ContactReference.withNoLabel()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  SiriPrivateLearningInference::ContactReference result;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v0[2] = 0;
  v0[3] = 0;
  v3 = swift_bridgeObjectRetain();
  result.contactLabel.value._object = v6;
  result.contactLabel.value._countAndFlagsBits = v5;
  result.contactId._object = v4;
  result.contactId._countAndFlagsBits = v3;
  return result;
}

uint64_t ContactReference.contactId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactReference.contactLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t ContactReference.description.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
  }
  else
  {
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_213EF2904();
    swift_bridgeObjectRelease();
  }
  sub_213EF2904();
  return 0xD000000000000015;
}

uint64_t sub_213E5228C()
{
  _BYTE *v0;

  if (*v0)
    return 0x4C746361746E6F63;
  else
    return 0x49746361746E6F63;
}

uint64_t sub_213E522D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E528E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E522F8()
{
  sub_213E526E8();
  return sub_213EF3354();
}

uint64_t sub_213E52320()
{
  sub_213E526E8();
  return sub_213EF3360();
}

uint64_t ContactReference.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E618);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E526E8();
  sub_213EF3348();
  v12 = 0;
  sub_213EF318C();
  if (!v2)
  {
    v11 = 1;
    sub_213EF3174();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t ContactReference.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E628);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E526E8();
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = 0;
  v9 = sub_213EF3114();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_213EF30FC();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E5261C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ContactReference.init(from:)(a1, a2);
}

uint64_t sub_213E52630(_QWORD *a1)
{
  return ContactReference.encode(to:)(a1);
}

uint64_t _s28SiriPrivateLearningInference16ContactReferenceV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_213EF3234(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_213EF3234() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_213E526E8()
{
  unint64_t result;

  result = qword_254D3E620;
  if (!qword_254D3E620)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFBCD4, &type metadata for ContactReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E620);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactReference()
{
  return &type metadata for ContactReference;
}

uint64_t storeEnumTagSinglePayload for ContactReference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E52788 + 4 * byte_213EFBB25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E527BC + 4 * byte_213EFBB20[v4]))();
}

uint64_t sub_213E527BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E527C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E527CCLL);
  return result;
}

uint64_t sub_213E527D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E527E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E527E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E527EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactReference.CodingKeys()
{
  return &type metadata for ContactReference.CodingKeys;
}

unint64_t sub_213E5280C()
{
  unint64_t result;

  result = qword_254D3E630;
  if (!qword_254D3E630)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFBCAC, &type metadata for ContactReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E630);
  }
  return result;
}

unint64_t sub_213E52854()
{
  unint64_t result;

  result = qword_254D3E638;
  if (!qword_254D3E638)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFBC1C, &type metadata for ContactReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E638);
  }
  return result;
}

unint64_t sub_213E5289C()
{
  unint64_t result;

  result = qword_254D3E640;
  if (!qword_254D3E640)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFBC44, &type metadata for ContactReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E640);
  }
  return result;
}

uint64_t sub_213E528E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746361746E6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C746361746E6F63 && a2 == 0xEC0000006C656261)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213E529F4()
{
  uint64_t v0;
  _BYTE v2[88];

  sub_213DB1804(v0, (uint64_t)v2);
  return sub_213EF288C();
}

uint64_t Classification.classificationType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_213EF288C();
}

uint64_t dispatch thunk of Classification.classificationType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_213E52AA4()
{
  return sub_213E52ABC();
}

uint64_t sub_213E52AB0()
{
  return sub_213E52ABC();
}

uint64_t sub_213E52ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](v0);
  sub_213DCA7E4(v1, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  return sub_213EF288C();
}

uint64_t sub_213E52B20()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_213EF288C();
}

uint64_t sub_213E52B84()
{
  return sub_213E52ABC();
}

uint64_t dispatch thunk of Classification.referencedTurns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Classification.referencedEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_213E52BA4()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_213EF288C();
}

uint64_t sub_213E52C08()
{
  return sub_213E52ABC();
}

uint64_t sub_213E52C18()
{
  return sub_213E52ABC();
}

uint64_t sub_213E52C24()
{
  return sub_213E52ABC();
}

uint64_t sub_213E52C30()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_213EF288C();
}

uint64_t static UsoEntity_common_MediaItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[10];
  uint64_t v46[10];
  _BYTE v47[8];
  uint64_t v48;
  _BYTE v49[8];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_213E6EFF8(a1, v45);
  v4 = v45[0];
  v3 = v45[1];
  v6 = v45[2];
  v5 = v45[3];
  v8 = v45[4];
  v7 = v45[5];
  v9 = v45[6];
  v16 = v45[7];
  v18 = v45[8];
  v20 = v45[9];
  sub_213E6EFF8(a2, v46);
  v11 = v46[0];
  v10 = v46[1];
  v12 = v46[2];
  v15 = v46[3];
  v17 = v46[4];
  v19 = v46[5];
  v21 = v46[6];
  v22 = v46[7];
  v23 = v46[8];
  v24 = v46[9];
  sub_213E033BC((uint64_t)v45, (uint64_t)v49);
  if (v50 != 1)
  {
    sub_213E033BC((uint64_t)v46, (uint64_t)v47);
    if (v48 != 1)
    {
      v51 = v4;
      v52 = v3;
      v53 = v6;
      v54 = v5;
      v55 = v8;
      v56 = v7;
      v57 = v9;
      v58 = v16;
      v59 = v18;
      v60 = v20;
      v25 = v11;
      v26 = v10;
      v27 = v12;
      v28 = v15;
      v29 = v17;
      v30 = v19;
      v31 = v21;
      v32 = v22;
      v33 = v23;
      v34 = v24;
      v13 = sub_213E54FC4(&v51, &v25);
      sub_213DC077C(v46);
      sub_213DC077C(v45);
      return v13 & 1;
    }
    goto LABEL_5;
  }
  sub_213E033BC((uint64_t)v46, (uint64_t)&v51);
  if (v52 != 1)
  {
LABEL_5:
    v25 = v4;
    v26 = v3;
    v27 = v6;
    v28 = v5;
    v29 = v8;
    v30 = v7;
    v31 = v9;
    v32 = v16;
    v33 = v18;
    v34 = v20;
    v35 = v11;
    v36 = v10;
    v37 = v12;
    v38 = v15;
    v39 = v17;
    v40 = v19;
    v41 = v21;
    v42 = v22;
    v43 = v23;
    v44 = v24;
    sub_213DC0674(&v25);
    v13 = 0;
    return v13 & 1;
  }
  v13 = 1;
  return v13 & 1;
}

uint64_t sub_213E52E68()
{
  sub_213EF2EB0();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_213E53034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  unint64_t v34;

  v28 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    goto LABEL_20;
  v7 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v8 = *(_QWORD *)(v2 + 72);
  v27[1] = a1;
  swift_bridgeObjectRetain();
  for (i = 0; i != v6; ++i)
  {
    sub_213DAFDB8(v7 + v8 * i, (uint64_t)v4);
    v10 = *(_QWORD *)&v4[*(int *)(v28 + 24)];
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(v12, (uint64_t)&v30);
        sub_213DAFDFC((uint64_t)&v30, (uint64_t)v29);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
        v12 += 40;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v30, (uint64_t)v32);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_12:
      v33 = 0;
      memset(v32, 0, sizeof(v32));
    }
    sub_213DAFE40((uint64_t)v32, (uint64_t)&v30);
    if (!v31)
    {
      sub_213DB848C((uint64_t)&v30);
LABEL_4:
      sub_213DB848C((uint64_t)v32);
      swift_bridgeObjectRelease();
      sub_213DAFE88((uint64_t)v4);
      continue;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_4;
    swift_retain();
    sub_213EF23D0();
    swift_release_n();
    sub_213DB848C((uint64_t)v32);
    swift_bridgeObjectRelease();
    v13 = sub_213DAFE88((uint64_t)v4);
    MEMORY[0x2199C44C4](v13);
    if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_213EF2A78();
    sub_213EF2AB4();
    sub_213EF2A54();
  }
  swift_bridgeObjectRelease();
  v5 = v34;
LABEL_20:
  v14 = swift_bridgeObjectRetain();
  v15 = sub_213DDDD08(v14);
  swift_bridgeObjectRelease();
  if ((v15 & 0xC000000000000001) != 0)
    v16 = sub_213EF2E38();
  else
    v16 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRelease();
  if (v16 != 1)
    goto LABEL_32;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_213EF306C();
    if (!result)
      goto LABEL_31;
LABEL_26:
    if ((v5 & 0xC000000000000001) != 0)
    {
      v19 = MEMORY[0x2199C49B0](0, v5);
    }
    else
    {
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v19 = *(_QWORD *)(v5 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease_n();
    return v19;
  }
  v17 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v17)
    goto LABEL_26;
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_32:
  if (qword_253F04A88 != -1)
    swift_once();
  v20 = sub_213EF2724();
  __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v21 = sub_213EF270C();
  v22 = sub_213EF2CA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 134217984;
    v24 = swift_bridgeObjectRetain();
    v25 = sub_213DDDD08(v24);
    swift_bridgeObjectRelease();
    if ((v25 & 0xC000000000000001) != 0)
      v26 = sub_213EF2E38();
    else
      v26 = *(_QWORD *)(v25 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v32[0] = v26;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v21, v22, "Expected 1 USO media item, found %ld", v23, 0xCu);
    MEMORY[0x2199C53C4](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t MediaReference.mediaId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaReference.storefront.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_213DB8518(v2, v3);
}

void MediaReference.sourceApp.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

void MediaReference.entityLocality.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

void __swiftcall MediaReference.init(mediaId:)(SiriPrivateLearningInference::MediaReference *__return_ptr retstr, Swift::String mediaId)
{
  retstr->mediaId = mediaId;
  retstr->storefront.value.countryCode = (Swift::String_optional)xmmword_213EF7580;
  retstr->storefront.value.storefrontId.value._countAndFlagsBits = 0;
  retstr->storefront.value.storefrontId.value._object = 0;
  *(_WORD *)&retstr->sourceApp.value = 770;
}

void __swiftcall MediaReference.init(mediaId:storefront:sourceApp:entityLocality:)(SiriPrivateLearningInference::MediaReference *__return_ptr retstr, Swift::String mediaId, SiriPrivateLearningInference::Storefront_optional storefront, SiriPrivateLearningInference::MediaReferenceSourceApp_optional sourceApp, SiriPrivateLearningInference::PimsLocality_optional entityLocality)
{
  SiriPrivateLearningInference::MediaReferenceSourceApp v5;
  SiriPrivateLearningInference::PimsLocality v6;
  Swift::String_optional v7;

  v5 = *(_BYTE *)storefront.value.countryCode.value._object;
  v6 = *(_BYTE *)storefront.value.storefrontId.value._countAndFlagsBits;
  retstr->mediaId = mediaId;
  v7 = *(Swift::String_optional *)(storefront.value.countryCode.value._countAndFlagsBits + 16);
  retstr->storefront.value.countryCode = *(Swift::String_optional *)storefront.value.countryCode.value._countAndFlagsBits;
  retstr->storefront.value.storefrontId = v7;
  retstr->sourceApp.value = v5;
  retstr->entityLocality.value = v6;
}

void __swiftcall MediaReference.init(mediaId:entityLocality:)(SiriPrivateLearningInference::MediaReference *__return_ptr retstr, Swift::String mediaId, SiriPrivateLearningInference::PimsLocality_optional entityLocality)
{
  SiriPrivateLearningInference::PimsLocality v3;

  v3 = *(_BYTE *)entityLocality.value;
  retstr->mediaId = mediaId;
  retstr->storefront.value.countryCode = (Swift::String_optional)xmmword_213EF7580;
  retstr->storefront.value.storefrontId.value._countAndFlagsBits = 0;
  retstr->storefront.value.storefrontId.value._object = 0;
  retstr->sourceApp.value = SiriPrivateLearningInference_MediaReferenceSourceApp_unknownDefault;
  retstr->entityLocality.value = v3;
}

uint64_t sub_213E535A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E535D8 + 4 * byte_213EFBD70[*v0]))(0x6449616964656DLL, 0xE700000000000000);
}

uint64_t sub_213E535D8()
{
  return 0x6F726665726F7473;
}

uint64_t sub_213E535F4()
{
  return 0x7041656372756F73;
}

uint64_t sub_213E53610()
{
  return 0x6F4C797469746E65;
}

uint64_t sub_213E53634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E55F3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E53658()
{
  sub_213E55370();
  return sub_213EF3354();
}

uint64_t sub_213E53680()
{
  sub_213E55370();
  return sub_213EF3360();
}

uint64_t MediaReference.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E648);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v1 + 24);
  v22 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v19 = *(_QWORD *)(v1 + 40);
  v20 = v9;
  v27 = *(unsigned __int8 *)(v1 + 48);
  v18 = *(unsigned __int8 *)(v1 + 49);
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_213E55370();
  sub_213EF3348();
  LOBYTE(v23) = 0;
  sub_213EF318C();
  if (!v2)
  {
    v14 = v27;
    v15 = v18;
    v23 = v22;
    v24 = v21;
    v25 = v20;
    v26 = v19;
    v28 = 1;
    sub_213E553B4();
    sub_213EF3180();
    LOBYTE(v23) = v14;
    v28 = 2;
    sub_213E553F8();
    sub_213EF3180();
    LOBYTE(v23) = v15;
    v28 = 3;
    sub_213DEBE1C();
    sub_213EF3180();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t MediaReference.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E668);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E55370();
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  LOBYTE(v24) = 0;
  v9 = sub_213EF3114();
  v11 = v10;
  v23 = v9;
  v29 = 1;
  sub_213E5543C();
  swift_bridgeObjectRetain();
  sub_213EF3108();
  v29 = 2;
  v21 = v24;
  v22 = v25;
  v19 = v27;
  v20 = v26;
  sub_213DB8518(v24, v25);
  sub_213E55480();
  sub_213EF3108();
  v28 = v24;
  v29 = 3;
  sub_213DEBEA4();
  sub_213EF3108();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v24;
  swift_bridgeObjectRetain();
  v15 = v21;
  v14 = v22;
  v17 = v19;
  v16 = v20;
  sub_213DB8518(v21, v22);
  sub_213DB859C(v15, v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v17;
  *(_BYTE *)(a2 + 48) = v28;
  *(_BYTE *)(a2 + 49) = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_213DB859C(v15, v14);
}

uint64_t sub_213E53B9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaReference.init(from:)(a1, a2);
}

uint64_t sub_213E53BB0(_QWORD *a1)
{
  return MediaReference.encode(to:)(a1);
}

uint64_t Storefront.countryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Storefront.storefrontId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_213E53C24()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F726665726F7473;
  else
    return 0x437972746E756F63;
}

uint64_t sub_213E53C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E56130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E53C94()
{
  sub_213E554C4();
  return sub_213EF3354();
}

uint64_t sub_213E53CBC()
{
  sub_213E554C4();
  return sub_213EF3360();
}

uint64_t Storefront.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E680);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E554C4();
  sub_213EF3348();
  v12 = 0;
  sub_213EF3174();
  if (!v2)
  {
    v11 = 1;
    sub_213EF3174();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t Storefront.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E690);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E554C4();
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = 0;
  v9 = sub_213EF30FC();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_213EF30FC();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E53FB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Storefront.init(from:)(a1, a2);
}

uint64_t sub_213E53FCC(_QWORD *a1)
{
  return Storefront.encode(to:)(a1);
}

void extractMediaReference(event:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  __int16 v10;
  __int128 v11;
  uint64_t v12;

  v2 = swift_bridgeObjectRetain();
  sub_213DAEB60(v2, &v11);
  swift_bridgeObjectRelease();
  v3 = *((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v4 = v11;
    swift_bridgeObjectRetain();
    sub_213DB8408(v4, v3);
    v5 = swift_bridgeObjectRetain();
    sub_213DAECF0(v5, (uint64_t)&v11);
    swift_bridgeObjectRelease();
    if ((v12 & 0xFF00) == 0x300)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v6 = sub_213EF2724();
      __swift_project_value_buffer(v6, (uint64_t)qword_253F08A00);
      v7 = sub_213EF270C();
      v8 = sub_213EF2CA0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_213DAB000, v7, v8, "Missing event feature - PrimaryMediaItemMetadata - detected while extracting the media reference", v9, 2u);
        MEMORY[0x2199C53C4](v9, -1, -1);
      }

      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v3;
      *(_OWORD *)(a1 + 16) = xmmword_213EF7580;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = 0;
      v10 = 770;
    }
    else
    {
      v10 = v12 & 0x100 | 2;
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v3;
      *(_OWORD *)(a1 + 16) = xmmword_213EF7580;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = 0;
    }
    *(_WORD *)(a1 + 48) = v10;
  }
  else
  {
    *(_WORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

Swift::String_optional __swiftcall UsoEntity_common_MediaItem.convertUSOMediaItemToString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  v0 = sub_213EF2880();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_213EF1A10();
  MEMORY[0x24BDAC7A8](v1);
  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213EF1A04();
  sub_213EF1A1C();
  sub_213EF1ED8();
  sub_213E5552C(&qword_254D3A9C0, MEMORY[0x24BE9F778]);
  v2 = sub_213EF1A28();
  v4 = v3;
  sub_213EF2874();
  v5 = sub_213EF2868();
  v7 = v6;
  sub_213DF8A28(v2, v4);
  swift_release();
  v8 = v5;
  v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

uint64_t *UsoEntity_common_MediaItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12[10];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_213E6EFF8(v0, v12);
  v1 = v12[0];
  v2 = v12[1];
  v3 = v12[2];
  v4 = v12[3];
  v5 = v12[4];
  v6 = v12[5];
  v7 = v12[6];
  v8 = v12[7];
  v9 = v12[8];
  v11 = v12[9];
  sub_213E033BC((uint64_t)v12, (uint64_t)v13);
  if (v14 == 1)
    return (uint64_t *)sub_213EF330C();
  v15 = v1;
  v16 = v2;
  v17 = v3;
  v18 = v4;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v11;
  sub_213EF330C();
  sub_213E54A84();
  return sub_213DC077C(v12);
}

uint64_t UsoEntity_common_MediaItem.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[10];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_213EF32F4();
  sub_213E6EFF8(v0, v12);
  v1 = v12[0];
  v2 = v12[1];
  v3 = v12[2];
  v4 = v12[3];
  v5 = v12[4];
  v6 = v12[5];
  v7 = v12[6];
  v8 = v12[7];
  v9 = v12[8];
  v10 = v12[9];
  sub_213E033BC((uint64_t)v12, (uint64_t)v13);
  if (v14 == 1)
  {
    sub_213EF330C();
  }
  else
  {
    v15 = v1;
    v16 = v2;
    v17 = v3;
    v18 = v4;
    v19 = v5;
    v20 = v6;
    v21 = v7;
    v22 = v8;
    v23 = v9;
    v24 = v10;
    sub_213EF330C();
    sub_213E54A84();
    sub_213DC077C(v12);
  }
  return sub_213EF3330();
}

uint64_t sub_213E5464C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[10];
  _BYTE v14[8];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *v0;
  sub_213EF32F4();
  sub_213E6EFF8(v1, v13);
  v2 = v13[0];
  v3 = v13[1];
  v4 = v13[2];
  v5 = v13[3];
  v6 = v13[4];
  v7 = v13[5];
  v8 = v13[6];
  v9 = v13[7];
  v10 = v13[8];
  v11 = v13[9];
  sub_213E033BC((uint64_t)v13, (uint64_t)v14);
  if (v15 == 1)
  {
    sub_213EF330C();
  }
  else
  {
    v16 = v2;
    v17 = v3;
    v18 = v4;
    v19 = v5;
    v20 = v6;
    v21 = v7;
    v22 = v8;
    v23 = v9;
    v24 = v10;
    v25 = v11;
    sub_213EF330C();
    sub_213E54A84();
    sub_213DC077C(v13);
  }
  return sub_213EF3330();
}

uint64_t *sub_213E54720()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[10];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_213E6EFF8(*v0, v12);
  v1 = v12[0];
  v2 = v12[1];
  v3 = v12[2];
  v4 = v12[3];
  v5 = v12[4];
  v6 = v12[5];
  v7 = v12[6];
  v8 = v12[7];
  v10 = v12[8];
  v9 = v12[9];
  sub_213E033BC((uint64_t)v12, (uint64_t)v13);
  if (v14 == 1)
    return (uint64_t *)sub_213EF330C();
  v15 = v1;
  v16 = v2;
  v17 = v3;
  v18 = v4;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v23 = v10;
  v24 = v9;
  sub_213EF330C();
  sub_213E54A84();
  return sub_213DC077C(v12);
}

uint64_t sub_213E547E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[10];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_213EF32F4();
  sub_213E6EFF8(*v0, v12);
  v1 = v12[0];
  v2 = v12[1];
  v3 = v12[2];
  v4 = v12[3];
  v5 = v12[4];
  v6 = v12[5];
  v7 = v12[6];
  v8 = v12[7];
  v9 = v12[8];
  v10 = v12[9];
  sub_213E033BC((uint64_t)v12, (uint64_t)v13);
  if (v14 == 1)
  {
    sub_213EF330C();
  }
  else
  {
    v15 = v1;
    v16 = v2;
    v17 = v3;
    v18 = v4;
    v19 = v5;
    v20 = v6;
    v21 = v7;
    v22 = v8;
    v23 = v9;
    v24 = v10;
    sub_213EF330C();
    sub_213E54A84();
    sub_213DC077C(v12);
  }
  return sub_213EF3330();
}

uint64_t sub_213E548B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[10];
  uint64_t v46[10];
  _BYTE v47[8];
  uint64_t v48;
  _BYTE v49[8];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = *a2;
  sub_213E6EFF8(*a1, v45);
  v4 = v45[0];
  v3 = v45[1];
  v6 = v45[2];
  v5 = v45[3];
  v8 = v45[4];
  v7 = v45[5];
  v9 = v45[6];
  v16 = v45[7];
  v18 = v45[8];
  v20 = v45[9];
  sub_213E6EFF8(v2, v46);
  v11 = v46[0];
  v10 = v46[1];
  v12 = v46[2];
  v15 = v46[3];
  v17 = v46[4];
  v19 = v46[5];
  v21 = v46[6];
  v22 = v46[7];
  v23 = v46[8];
  v24 = v46[9];
  sub_213E033BC((uint64_t)v45, (uint64_t)v49);
  if (v50 != 1)
  {
    sub_213E033BC((uint64_t)v46, (uint64_t)v47);
    if (v48 != 1)
    {
      v51 = v4;
      v52 = v3;
      v53 = v6;
      v54 = v5;
      v55 = v8;
      v56 = v7;
      v57 = v9;
      v58 = v16;
      v59 = v18;
      v60 = v20;
      v25 = v11;
      v26 = v10;
      v27 = v12;
      v28 = v15;
      v29 = v17;
      v30 = v19;
      v31 = v21;
      v32 = v22;
      v33 = v23;
      v34 = v24;
      v13 = sub_213E54FC4(&v51, &v25);
      sub_213DC077C(v46);
      sub_213DC077C(v45);
      return v13 & 1;
    }
    goto LABEL_5;
  }
  sub_213E033BC((uint64_t)v46, (uint64_t)&v51);
  if (v52 != 1)
  {
LABEL_5:
    v25 = v4;
    v26 = v3;
    v27 = v6;
    v28 = v5;
    v29 = v8;
    v30 = v7;
    v31 = v9;
    v32 = v16;
    v33 = v18;
    v34 = v20;
    v35 = v11;
    v36 = v10;
    v37 = v12;
    v38 = v15;
    v39 = v17;
    v40 = v19;
    v41 = v21;
    v42 = v22;
    v43 = v23;
    v44 = v24;
    sub_213DC0674(&v25);
    v13 = 0;
    return v13 & 1;
  }
  v13 = 1;
  return v13 & 1;
}

uint64_t sub_213E54A84()
{
  _QWORD *v0;

  if (v0[1])
  {
    sub_213EF330C();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
    if (v0[3])
      goto LABEL_3;
  }
  else
  {
    sub_213EF330C();
    if (v0[3])
    {
LABEL_3:
      sub_213EF330C();
      swift_bridgeObjectRetain();
      sub_213EF28BC();
      swift_bridgeObjectRelease();
      if (v0[5])
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  sub_213EF330C();
  if (v0[5])
  {
LABEL_4:
    sub_213EF330C();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
    if (v0[7])
      goto LABEL_5;
LABEL_10:
    sub_213EF330C();
    if (v0[9])
      goto LABEL_6;
    return sub_213EF330C();
  }
LABEL_9:
  sub_213EF330C();
  if (!v0[7])
    goto LABEL_10;
LABEL_5:
  sub_213EF330C();
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  if (v0[9])
  {
LABEL_6:
    sub_213EF330C();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    return swift_bridgeObjectRelease();
  }
  return sub_213EF330C();
}

uint64_t sub_213E54C04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E6E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E567F8();
  sub_213EF3348();
  v8[15] = 0;
  sub_213EF3174();
  if (!v1)
  {
    v8[14] = 1;
    sub_213EF3174();
    v8[13] = 2;
    sub_213EF3174();
    v8[12] = 3;
    sub_213EF3174();
    v8[11] = 4;
    sub_213EF3174();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_213E54D90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E54DBC + 4 * byte_213EFBD74[*v0]))(0x797469746E65, 0xE600000000000000);
}

uint64_t sub_213E54DBC()
{
  return 0x6C746954676E6F73;
}

uint64_t sub_213E54E08()
{
  return 0x6E6F6973726576;
}

uint64_t sub_213E54E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E56250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E54E44()
{
  sub_213E567F8();
  return sub_213EF3354();
}

uint64_t sub_213E54E6C()
{
  sub_213E567F8();
  return sub_213EF3360();
}

__n128 sub_213E54E94@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_213E56488(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_213E54EDC(_QWORD *a1)
{
  return sub_213E54C04(a1);
}

uint64_t sub_213E54EF0(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_213E54FC4(v8, v9) & 1;
}

uint64_t sub_213E54F4C()
{
  sub_213EF32F4();
  sub_213E54A84();
  return sub_213EF3330();
}

uint64_t sub_213E54F8C()
{
  sub_213EF32F4();
  sub_213E54A84();
  return sub_213EF3330();
}

uint64_t sub_213E54FC4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_213EF3234(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[3];
    v10 = a2[3];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[2] != a2[2] || v9 != v10)
      {
        v11 = sub_213EF3234();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v12 = a1[5];
    v13 = a2[5];
    if (v12)
    {
      if (!v13)
        return 0;
      if (a1[4] != a2[4] || v12 != v13)
      {
        v14 = sub_213EF3234();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v15 = a1[7];
    v16 = a2[7];
    if (v15)
    {
      if (!v16)
        return 0;
      if (a1[6] != a2[6] || v15 != v16)
      {
        v17 = sub_213EF3234();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    v18 = a1[9];
    v19 = a2[9];
    if (v18)
    {
      if (v19 && (a1[8] == a2[8] && v18 == v19 || (sub_213EF3234() & 1) != 0))
        return 1;
    }
    else if (!v19)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  char v20;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = sub_213EF3234();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
      goto LABEL_6;
    goto LABEL_28;
  }
  if (v7 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_28:
    sub_213DB8518(v8, v7);
    sub_213DB859C(v2, v4);
    sub_213DB859C(v8, v7);
    return 0;
  }
  if (v4)
  {
    if (!v7)
      return 0;
    if (v2 != v8 || v4 != v7)
    {
      v18 = sub_213EF3234();
      result = 0;
      if ((v18 & 1) == 0)
        return result;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v5)
  {
    if (v9)
    {
      if (v3 != v10 || v5 != v9)
      {
        v19 = sub_213EF3234();
        result = 0;
        if ((v19 & 1) == 0)
          return result;
      }
      goto LABEL_6;
    }
    return 0;
  }
  if (v9)
    return 0;
LABEL_6:
  result = v11 == 2 && v6 == 2;
  if (v6 != 2 && v11 != 2)
  {
    if ((v6 & 1) != 0)
      v14 = 0x656E696665646E75;
    else
      v14 = 0x6C7070612E6D6F63;
    if ((v6 & 1) != 0)
      v15 = 0xE900000000000064;
    else
      v15 = 0xEF636973754D2E65;
    if ((v11 & 1) != 0)
      v16 = 0x656E696665646E75;
    else
      v16 = 0x6C7070612E6D6F63;
    if ((v11 & 1) != 0)
      v17 = 0xE900000000000064;
    else
      v17 = 0xEF636973754D2E65;
    if (v14 == v16 && v15 == v17)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      v20 = sub_213EF3234();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20 & 1;
    }
  }
  return result;
}

unint64_t sub_213E55370()
{
  unint64_t result;

  result = qword_254D3E650;
  if (!qword_254D3E650)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC21C, &type metadata for MediaReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E650);
  }
  return result;
}

unint64_t sub_213E553B4()
{
  unint64_t result;

  result = qword_254D3E658;
  if (!qword_254D3E658)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for Storefront, &type metadata for Storefront);
    atomic_store(result, (unint64_t *)&qword_254D3E658);
  }
  return result;
}

unint64_t sub_213E553F8()
{
  unint64_t result;

  result = qword_254D3E660;
  if (!qword_254D3E660)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReferenceSourceApp, &type metadata for MediaReferenceSourceApp);
    atomic_store(result, (unint64_t *)&qword_254D3E660);
  }
  return result;
}

unint64_t sub_213E5543C()
{
  unint64_t result;

  result = qword_254D3E670;
  if (!qword_254D3E670)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for Storefront, &type metadata for Storefront);
    atomic_store(result, (unint64_t *)&qword_254D3E670);
  }
  return result;
}

unint64_t sub_213E55480()
{
  unint64_t result;

  result = qword_254D3E678;
  if (!qword_254D3E678)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReferenceSourceApp, &type metadata for MediaReferenceSourceApp);
    atomic_store(result, (unint64_t *)&qword_254D3E678);
  }
  return result;
}

unint64_t sub_213E554C4()
{
  unint64_t result;

  result = qword_254D3E688;
  if (!qword_254D3E688)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC1CC, &type metadata for Storefront.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E688);
  }
  return result;
}

uint64_t sub_213E55508()
{
  return sub_213E5552C(&qword_254D3E698, (uint64_t)&protocol conformance descriptor for UsoEntity_common_MediaItem);
}

uint64_t sub_213E5552C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_213EF1ED8();
    result = MEMORY[0x2199C52D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MediaReference(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MediaReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for MediaReference(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_213DBEEB0(a1 + 16);
    v8 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_213DBEEB0(a1 + 16);
  }
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
LABEL_6:
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaReference(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaReference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaReference()
{
  return &type metadata for MediaReference;
}

ValueMetadata *type metadata accessor for Storefront()
{
  return &type metadata for Storefront;
}

ValueMetadata *type metadata accessor for MediaConstants()
{
  return &type metadata for MediaConstants;
}

uint64_t storeEnumTagSinglePayload for Storefront.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E5590C + 4 * byte_213EFBD7E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E55940 + 4 * byte_213EFBD79[v4]))();
}

uint64_t sub_213E55940(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E55948(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E55950);
  return result;
}

uint64_t sub_213E5595C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E55964);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E55968(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E55970(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Storefront.CodingKeys()
{
  return &type metadata for Storefront.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MediaReference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213E559D8 + 4 * byte_213EFBD88[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213E55A0C + 4 * byte_213EFBD83[v4]))();
}

uint64_t sub_213E55A0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E55A14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E55A1CLL);
  return result;
}

uint64_t sub_213E55A28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E55A30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213E55A34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E55A3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaReference.CodingKeys()
{
  return &type metadata for MediaReference.CodingKeys;
}

uint64_t destroy for U2MediaItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for U2MediaItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for U2MediaItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for U2MediaItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for U2MediaItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for U2MediaItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for U2MediaItem()
{
  return &type metadata for U2MediaItem;
}

unint64_t sub_213E55D48()
{
  unint64_t result;

  result = qword_254D3E6A0;
  if (!qword_254D3E6A0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFBFE4, &type metadata for U2MediaItem);
    atomic_store(result, (unint64_t *)&qword_254D3E6A0);
  }
  return result;
}

unint64_t sub_213E55D90()
{
  unint64_t result;

  result = qword_254D3E6A8;
  if (!qword_254D3E6A8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC0EC, &type metadata for MediaReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6A8);
  }
  return result;
}

unint64_t sub_213E55DD8()
{
  unint64_t result;

  result = qword_254D3E6B0;
  if (!qword_254D3E6B0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC1A4, &type metadata for Storefront.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6B0);
  }
  return result;
}

unint64_t sub_213E55E20()
{
  unint64_t result;

  result = qword_254D3E6B8;
  if (!qword_254D3E6B8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC114, &type metadata for Storefront.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6B8);
  }
  return result;
}

unint64_t sub_213E55E68()
{
  unint64_t result;

  result = qword_254D3E6C0;
  if (!qword_254D3E6C0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC13C, &type metadata for Storefront.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6C0);
  }
  return result;
}

unint64_t sub_213E55EB0()
{
  unint64_t result;

  result = qword_254D3E6C8;
  if (!qword_254D3E6C8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC05C, &type metadata for MediaReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6C8);
  }
  return result;
}

unint64_t sub_213E55EF8()
{
  unint64_t result;

  result = qword_254D3E6D0;
  if (!qword_254D3E6D0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC084, &type metadata for MediaReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6D0);
  }
  return result;
}

uint64_t sub_213E55F3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F726665726F7473 && a2 == 0xEA0000000000746ELL || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7041656372756F73 && a2 == 0xE900000000000070 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F4C797469746E65 && a2 == 0xEE007974696C6163)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_213E56130(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F726665726F7473 && a2 == 0xEC0000006449746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213E56250(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797469746E65 && a2 == 0xE600000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C746954676E6F73 && a2 == 0xE900000000000065 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_213E56488@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E6D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E567F8();
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v39 = 0;
  v9 = sub_213EF30FC();
  v11 = v10;
  v33 = v9;
  v38 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_213EF30FC();
  v34 = v13;
  v30 = v12;
  v37 = 2;
  swift_bridgeObjectRetain();
  v32 = 0;
  v29 = sub_213EF30FC();
  v36 = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_213EF30FC();
  v31 = v15;
  v28 = v16;
  v35 = 4;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_213EF30FC();
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23 = v19;
  v22(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v31;
  swift_bridgeObjectRelease();
  v25 = v34;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v33;
  a2[1] = v11;
  a2[2] = v30;
  a2[3] = v25;
  a2[4] = v29;
  a2[5] = v24;
  a2[6] = v28;
  a2[7] = v18;
  a2[8] = v23;
  a2[9] = v21;
  return result;
}

unint64_t sub_213E567F8()
{
  unint64_t result;

  result = qword_254D3E6E0;
  if (!qword_254D3E6E0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC324, &type metadata for U2MediaItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for U2MediaItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213E56888 + 4 * byte_213EFBD92[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213E568BC + 4 * byte_213EFBD8D[v4]))();
}

uint64_t sub_213E568BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E568C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E568CCLL);
  return result;
}

uint64_t sub_213E568D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E568E0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213E568E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E568EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for U2MediaItem.CodingKeys()
{
  return &type metadata for U2MediaItem.CodingKeys;
}

unint64_t sub_213E5690C()
{
  unint64_t result;

  result = qword_254D3E6F0;
  if (!qword_254D3E6F0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC2FC, &type metadata for U2MediaItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6F0);
  }
  return result;
}

unint64_t sub_213E56954()
{
  unint64_t result;

  result = qword_254D3E6F8;
  if (!qword_254D3E6F8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC26C, &type metadata for U2MediaItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E6F8);
  }
  return result;
}

unint64_t sub_213E5699C()
{
  unint64_t result;

  result = qword_254D3E700;
  if (!qword_254D3E700)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC294, &type metadata for U2MediaItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E700);
  }
  return result;
}

uint64_t INStartCallIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  sub_213E56B24();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v1 + 32) = sub_213DB9CDC(0, &qword_253F04E78);
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t INStartCallIntentFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t v1;

  sub_213E56B24();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v1 + 32) = sub_213DB9CDC(0, &qword_253F04E78);
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t INStartCallIntentFeatureExtractor.intentTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t INStartCallIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t INStartCallIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E56B18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E56B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E88);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_253F04EF0;
  else
    v2 = (uint64_t *)&unk_253F04ED8;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_213E56B70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  double v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  double v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;

  v2 = sub_213EF1CF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_donationMetadata);
  if (v6)
  {
    v7 = v6;
    objc_opt_self();
    v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      v9 = (void *)v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_213EF7D70;
      v65 = v3;
      objc_msgSend(v9, sel_callDuration);
      v12 = v11 > 0.0;
      v13 = type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
      v64 = v2;
      swift_allocObject();
      LOBYTE(v66) = v12;
      v14 = sub_213EF23C4();
      *(_QWORD *)(v10 + 56) = v13;
      v15 = MEMORY[0x24BEA4F80];
      *(_QWORD *)(v10 + 64) = sub_213DB196C(&qword_254D3E718, 255, type metadata accessor for PhoneCallEventFeature.CallAnswered, MEMORY[0x24BEA4F80]);
      *(_QWORD *)(v10 + 32) = v14;
      objc_msgSend(v9, sel_callDuration);
      v17 = v16;
      v18 = type metadata accessor for PhoneCallEventFeature.CallDuration(0);
      swift_allocObject();
      v66 = v17;
      v19 = sub_213EF23C4();
      *(_QWORD *)(v10 + 96) = v18;
      *(_QWORD *)(v10 + 104) = sub_213DB196C(&qword_254D3E720, 255, type metadata accessor for PhoneCallEventFeature.CallDuration, v15);
      *(_QWORD *)(v10 + 72) = v19;
      objc_msgSend(v9, sel_timeToEstablish);
      v21 = v20;
      v22 = type metadata accessor for PhoneCallEventFeature.CallConnectionDuration(0);
      swift_allocObject();
      v66 = v21;
      v23 = sub_213EF23C4();
      *(_QWORD *)(v10 + 136) = v22;
      *(_QWORD *)(v10 + 144) = sub_213DB196C(&qword_254D3E738, 255, type metadata accessor for PhoneCallEventFeature.CallConnectionDuration, v15);
      *(_QWORD *)(v10 + 112) = v23;
      sub_213EF1A94();
      v25 = v24;
      v26 = type metadata accessor for PhoneCallEventFeature.CallTotalDuration(0);
      swift_allocObject();
      v66 = v25;
      v27 = sub_213EF23C4();
      *(_QWORD *)(v10 + 176) = v26;
      *(_QWORD *)(v10 + 184) = sub_213DB196C(&qword_254D3E740, 255, type metadata accessor for PhoneCallEventFeature.CallTotalDuration, v15);
      *(_QWORD *)(v10 + 152) = v27;
      sub_213EF1A88();
      sub_213EF1CD4();
      v29 = v28;
      v30 = v64;
      v31 = *(void (**)(char *, uint64_t))(v65 + 8);
      v31(v5, v64);
      objc_msgSend(v9, sel_timeToEstablish);
      v33 = v29 + v32;
      v34 = type metadata accessor for PhoneCallEventFeature.CallStartTimestamp(0);
      swift_allocObject();
      v66 = v33;
      v35 = sub_213EF23C4();
      *(_QWORD *)(v10 + 216) = v34;
      *(_QWORD *)(v10 + 224) = sub_213DB196C(&qword_254D3E728, 255, type metadata accessor for PhoneCallEventFeature.CallStartTimestamp, v15);
      *(_QWORD *)(v10 + 192) = v35;
      sub_213EF1A70();
      sub_213EF1CD4();
      v37 = v36;
      v31(v5, v30);
      v38 = type metadata accessor for PhoneCallEventFeature.CallEndTimestamp(0);
      swift_allocObject();
      v66 = v37;
      v39 = sub_213EF23C4();
      *(_QWORD *)(v10 + 256) = v38;
      *(_QWORD *)(v10 + 264) = sub_213DB196C(&qword_254D3E730, 255, type metadata accessor for PhoneCallEventFeature.CallEndTimestamp, v15);
      *(_QWORD *)(v10 + 232) = v39;

      return v10;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v40 = sub_213EF2724();
  __swift_project_value_buffer(v40, (uint64_t)qword_253F08A00);
  v41 = sub_213EF270C();
  v42 = sub_213EF2CA0();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_213DAB000, v41, v42, "#extractCallDurationData: Metadata missing from start call intent. Using legacy duration calculations.", v43, 2u);
    MEMORY[0x2199C53C4](v43, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_213EF5FF0;
  sub_213EF1A94();
  v45 = v44 > 0.0;
  v46 = type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
  swift_allocObject();
  LOBYTE(v66) = v45;
  v47 = sub_213EF23C4();
  *(_QWORD *)(v10 + 56) = v46;
  v48 = MEMORY[0x24BEA4F80];
  *(_QWORD *)(v10 + 64) = sub_213DB196C(&qword_254D3E718, 255, type metadata accessor for PhoneCallEventFeature.CallAnswered, MEMORY[0x24BEA4F80]);
  *(_QWORD *)(v10 + 32) = v47;
  sub_213EF1A94();
  v50 = v49;
  v51 = type metadata accessor for PhoneCallEventFeature.CallDuration(0);
  swift_allocObject();
  v66 = v50;
  v52 = sub_213EF23C4();
  *(_QWORD *)(v10 + 96) = v51;
  *(_QWORD *)(v10 + 104) = sub_213DB196C(&qword_254D3E720, 255, type metadata accessor for PhoneCallEventFeature.CallDuration, v48);
  *(_QWORD *)(v10 + 72) = v52;
  sub_213EF1A88();
  sub_213EF1CD4();
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t))(v3 + 8);
  v55(v5, v2);
  v56 = type metadata accessor for PhoneCallEventFeature.CallStartTimestamp(0);
  swift_allocObject();
  v66 = v54;
  v57 = sub_213EF23C4();
  *(_QWORD *)(v10 + 136) = v56;
  *(_QWORD *)(v10 + 144) = sub_213DB196C(&qword_254D3E728, 255, type metadata accessor for PhoneCallEventFeature.CallStartTimestamp, v48);
  *(_QWORD *)(v10 + 112) = v57;
  sub_213EF1A70();
  sub_213EF1CD4();
  v59 = v58;
  v55(v5, v2);
  v60 = type metadata accessor for PhoneCallEventFeature.CallEndTimestamp(0);
  swift_allocObject();
  v66 = v59;
  v61 = sub_213EF23C4();
  *(_QWORD *)(v10 + 176) = v60;
  *(_QWORD *)(v10 + 184) = sub_213DB196C(&qword_254D3E730, 255, type metadata accessor for PhoneCallEventFeature.CallEndTimestamp, v48);
  *(_QWORD *)(v10 + 152) = v61;
  return v10;
}

char *sub_213E571E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  void *v55;
  uint64_t v56;
  char *v57;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA98);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_213EF1AA0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - v8;
  v10 = (void *)sub_213EF2220();
  v11 = objc_msgSend(v10, sel_intent);
  objc_opt_self();
  v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12 || (v13 = v12, (v14 = objc_msgSend(v12, sel_contacts)) == 0))
  {

LABEL_32:
    return (char *)MEMORY[0x24BEE4AF8];
  }
  v15 = v14;
  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C6B8);
  v16 = sub_213EF2A3C();

  if (!(v16 >> 62))
  {
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_31:

    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  v49 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (!v49)
    goto LABEL_31;
LABEL_5:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)MEMORY[0x2199C49B0](0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    v17 = *(id *)(v16 + 32);
  }
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v10, sel_dateInterval);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_18;
  }
  v20 = v19;
  sub_213EF1A64();

  v21 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v21(v2, v7, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_18:

    sub_213E578EC((uint64_t)v2);
    goto LABEL_32;
  }
  v53 = v18;
  v21(v9, v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
  v2 = (char *)swift_allocObject();
  *((_OWORD *)v2 + 1) = xmmword_213EF9F30;
  v22 = type metadata accessor for CommonFeature.EventType(0);
  swift_allocObject();
  *(_QWORD *)&v54 = 0xD000000000000011;
  *((_QWORD *)&v54 + 1) = 0x8000000213F04860;
  v16 = sub_213EF23C4();
  *((_QWORD *)v2 + 7) = v22;
  *((_QWORD *)v2 + 8) = sub_213DB196C(&qword_254D3D550, 255, type metadata accessor for CommonFeature.EventType, MEMORY[0x24BEA4F80]);
  *((_QWORD *)v2 + 4) = v16;
  v23 = (uint64_t)objc_msgSend(v13, sel_audioRoute);
  if (v23 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v16 = v23;
  if (v23 > 0x7FFFFFFF)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v24 = type metadata accessor for PhoneCallEventFeature.AudioCallRoute(0);
  swift_allocObject();
  LODWORD(v54) = v16;
  v16 = sub_213EF23C4();
  *((_QWORD *)v2 + 12) = v24;
  *((_QWORD *)v2 + 13) = sub_213DB196C(&qword_254D3E708, 255, type metadata accessor for PhoneCallEventFeature.AudioCallRoute, MEMORY[0x24BEA4F80]);
  *((_QWORD *)v2 + 9) = v16;
  v25 = (uint64_t)objc_msgSend(v13, sel_callCapability);
  if (v25 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v16 = v25;
  if (v25 <= 0x7FFFFFFF)
  {
    v26 = type metadata accessor for PhoneCallEventFeature.CallCapability(0);
    swift_allocObject();
    LODWORD(v54) = v16;
    v27 = sub_213EF23C4();
    *((_QWORD *)v2 + 17) = v26;
    *((_QWORD *)v2 + 18) = sub_213DB196C(&qword_254D3E710, 255, type metadata accessor for PhoneCallEventFeature.CallCapability, MEMORY[0x24BEA4F80]);
    *((_QWORD *)v2 + 14) = v27;
    v57 = v2;
    v28 = sub_213E56B70(v13);
    sub_213DB43C8(v28);
    v29 = v53;
    v30 = objc_msgSend(v53, sel_displayName);
    v31 = sub_213EF2850();
    v51 = v32;
    v52 = v31;

    v33 = objc_msgSend(v29, sel_contactIdentifier);
    if (v33)
    {
      v34 = v33;
      v35 = sub_213EF2850();
      v37 = v36;

    }
    else
    {
      v35 = 0;
      v37 = 0;
    }
    v38 = objc_msgSend(v29, sel_personHandle);
    v39 = v38;
    if (v38)
    {
      v50 = v35;
      v40 = objc_msgSend(v38, sel_label);

      v41 = v37;
      if (v40)
      {
        v42 = sub_213EF2850();
        v39 = v43;

      }
      else
      {
        v42 = 0;
        v39 = 0;
      }
      v35 = v50;
    }
    else
    {
      v41 = v37;
      v42 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B038);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_213EF53E0;
    v45 = v51;
    *(_QWORD *)(v44 + 32) = v52;
    *(_QWORD *)(v44 + 40) = v45;
    *(_QWORD *)(v44 + 48) = v35;
    *(_QWORD *)(v44 + 56) = v41;
    *(_QWORD *)(v44 + 64) = v42;
    *(_QWORD *)(v44 + 72) = v39;
    v13 = (void *)type metadata accessor for CommonContactFeature.RecipientContactReferences();
    swift_allocObject();
    *(_QWORD *)&v54 = v44;
    v2 = (char *)sub_213EF23C4();
    v16 = (unint64_t)v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_27;
    goto LABEL_39;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  v16 = (unint64_t)sub_213DB59A4(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
LABEL_27:
  v47 = *(_QWORD *)(v16 + 16);
  v46 = *(_QWORD *)(v16 + 24);
  if (v47 >= v46 >> 1)
    v16 = (unint64_t)sub_213DB59A4((_QWORD *)(v46 > 1), v47 + 1, 1, (_QWORD *)v16);
  v55 = v13;
  v56 = sub_213DB196C(&qword_254D3C6C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CommonContactFeature.RecipientContactReferences, MEMORY[0x24BEA4F80]);
  *(_QWORD *)&v54 = v2;
  *(_QWORD *)(v16 + 16) = v47 + 1;
  sub_213DB0BF0(&v54, v16 + 40 * v47 + 32);

  v57 = (char *)v16;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v57;
}

uint64_t sub_213E57880(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_253F04CF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for INStartCallIntentFeatureExtractor, (uint64_t)&protocol conformance descriptor for INStartCallIntentFeatureExtractor);
}

uint64_t type metadata accessor for INStartCallIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for INStartCallIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INStartCallIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of INStartCallIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_213E578EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E57930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id sub_213E57954(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;

  v2 = type metadata accessor for ThinMediaGroundTruth();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_213EF1A10();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for ThinMediaGroundTruthCoreDataRecord();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  v5 = (void *)sub_213EF1D1C();
  objc_msgSend(v4, sel_setId_, v5);

  v6 = (void *)sub_213EF2844();
  objc_msgSend(v4, sel_setGroundTruthType_, v6);

  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213EF1A04();
  sub_213EF1A1C();
  sub_213DEBDD8();
  v7 = sub_213EF1A28();
  v9 = v8;
  v10 = (void *)sub_213EF1C44();
  objc_msgSend(v4, sel_setGroundTruthSource_, v10);

  sub_213DF8A28(v7, v9);
  swift_release();
  return v4;
}

uint64_t sub_213E57CCC@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  void *v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char *v56;
  int *v57;
  uint8_t **v58;
  char *v60;
  uint64_t v61;
  uint8_t *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v63 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v61 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v61 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v61 - v14;
  *(_QWORD *)&v17 = MEMORY[0x24BDAC7A8](v16).n128_u64[0];
  v19 = (char *)&v61 - v18;
  v20 = objc_msgSend(v1, sel_id, v17);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  v21 = v20;
  sub_213EF1D34();

  v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v22(v4, v15, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_213DAFEC4((uint64_t)v4, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v33 = sub_213EF2724();
    __swift_project_value_buffer(v33, (uint64_t)qword_253F08A00);
    v34 = sub_213EF270C();
    v35 = sub_213EF2CA0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_213DAB000, v34, v35, "PIMSStoreCoreData: Failed to retrieve ID when reading ThinMediaGroundTruth.", v36, 2u);
      MEMORY[0x2199C53C4](v36, -1, -1);
    }

    v37 = type metadata accessor for ThinMediaGroundTruth();
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
    v39 = v63;
    return v38((uint64_t)v39, 1, 1, v37);
  }
  v22(v19, v4, v5);
  v23 = objc_msgSend(v1, sel_groundTruthType);
  if (v23)
  {
    v24 = v23;
    v25 = sub_213EF2850();
    v27 = v26;

    v28 = objc_msgSend(v1, sel_groundTruthSource);
    if (v28)
    {
      v29 = v28;
      v62 = (uint8_t *)v25;
      v30 = sub_213EF1C50();
      v32 = v31;

      sub_213EF19F8();
      swift_allocObject();
      sub_213EF19EC();
      sub_213DEBE60();
      sub_213EF19E0();
      sub_213DF8A28(v30, v32);
      swift_release();
      v55 = v65;
      v56 = v63;
      v22(v63, v19, v5);
      v57 = (int *)type metadata accessor for ThinMediaGroundTruth();
      v58 = (uint8_t **)&v56[v57[5]];
      *v58 = v62;
      v58[1] = v27;
      v56[v57[6]] = v55;
      v56[v57[7]] = 0;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v57 - 1) + 56))(v56, 0, 1, v57);
    }
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v48 = sub_213EF2724();
    __swift_project_value_buffer(v48, (uint64_t)qword_253F08A00);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v19, v5);
    v49 = sub_213EF270C();
    v50 = sub_213EF2CA0();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v65 = v52;
      *(_DWORD *)v51 = 136315138;
      v62 = v51 + 4;
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v53 = sub_213EF31F8();
      v64 = sub_213DB0570(v53, v54, &v65);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v47 = *(void (**)(char *, uint64_t))(v6 + 8);
      v47(v12, v5);
      _os_log_impl(&dword_213DAB000, v49, v50, "PIMSStoreCoreData: Failed to retrieve source data when reading ThinMediaGroundTruth with ID: %s.", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v52, -1, -1);
      MEMORY[0x2199C53C4](v51, -1, -1);

    }
    else
    {

      v47 = *(void (**)(char *, uint64_t))(v6 + 8);
      v47(v12, v5);
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v40 = sub_213EF2724();
    __swift_project_value_buffer(v40, (uint64_t)qword_253F08A00);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v19, v5);
    v41 = sub_213EF270C();
    v42 = sub_213EF2CA0();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v65 = v44;
      *(_DWORD *)v43 = 136315138;
      v62 = v43 + 4;
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v45 = sub_213EF31F8();
      v64 = sub_213DB0570(v45, v46, &v65);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v47 = *(void (**)(char *, uint64_t))(v6 + 8);
      v47(v9, v5);
      _os_log_impl(&dword_213DAB000, v41, v42, "PIMSStoreCoreData: Failed to retrieve type when reading ThinMediaGroundTruth with ID: %s.", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v44, -1, -1);
      MEMORY[0x2199C53C4](v43, -1, -1);

    }
    else
    {

      v47 = *(void (**)(char *, uint64_t))(v6 + 8);
      v47(v9, v5);
    }
  }
  v47(v19, v5);
  v60 = v63;
  v37 = type metadata accessor for ThinMediaGroundTruth();
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v39 = v60;
  return v38((uint64_t)v39, 1, 1, v37);
}

id sub_213E585BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(unsigned __int8 *)(v1 + 48);
  type metadata accessor for PlusMediaReferenceCoreDataRecord();
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  v9 = (void *)sub_213EF2844();
  objc_msgSend(v8, sel_setMediaId_, v9);

  v10 = 0;
  if (v7 != 2)
  {
    LOBYTE(v13) = v7 & 1;
    v10 = sub_213E58700((uint64_t)a1);
  }
  objc_msgSend(v8, sel_setSourceApp_, v10, v13);

  if (v4 == 1)
  {
    v11 = 0;
  }
  else
  {
    v14 = v3;
    v15 = v4;
    v16 = v5;
    v17 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_213E58BAC(a1);
    sub_213DB859C(v3, v4);
  }
  objc_msgSend(v8, sel_setStorefront_, v11, v14, v15, v16, v17);

  return v8;
}

id sub_213E58700(uint64_t a1)
{
  unsigned __int8 *v1;
  int v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *v1;
  v4 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v5 = (void *)sub_213EF2844();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_213EF44B0;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  v9 = sub_213E07AFC();
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = 1701667182;
  *(_QWORD *)(v7 + 40) = 0xE400000000000000;
  if (v3)
    v10 = 0x656E696665646E75;
  else
    v10 = 0x6C7070612E6D6F63;
  if (v3)
    v11 = 0xE900000000000064;
  else
    v11 = 0xEF636973754D2E65;
  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = v11;
  v12 = (void *)sub_213EF2C58();
  objc_msgSend(v6, sel_setPredicate_, v12);

  v36[0] = 0;
  v13 = objc_msgSend(v6, sel_execute_, v36);
  v14 = v36[0];
  if (!v13)
  {
    v20 = v36[0];
    v15 = (void *)sub_213EF1BA8();

    swift_willThrow();
    if (qword_253F04A88 == -1)
      goto LABEL_15;
    goto LABEL_24;
  }
  v15 = v13;
  type metadata accessor for PlusMediaReferenceSourceAppCoreDataRecord();
  v16 = sub_213EF2A3C();
  v17 = v14;

  if (!(v16 >> 62))
  {
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    type metadata accessor for PlusMediaReferenceSourceAppCoreDataRecord();
    v19 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
    v33 = (void *)sub_213EF2844();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setName_, v33);

    return v19;
  }
  swift_bridgeObjectRetain();
  v32 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (!v32)
    goto LABEL_19;
LABEL_10:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x2199C49B0](0, v16);
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_24:
    swift_once();
LABEL_15:
    v21 = sub_213EF2724();
    __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
    v22 = v15;
    v23 = v15;
    v24 = sub_213EF270C();
    v25 = sub_213EF2CA0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v35 = a1;
      v27 = (void *)swift_slowAlloc();
      v36[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
      v29 = sub_213EF288C();
      sub_213DB0570(v29, v30, (uint64_t *)v36);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213DAB000, v24, v25, "Error searching for existing suggestion tag error=%s", v26, 0xCu);
      swift_arrayDestroy();
      v31 = v27;
      a1 = v35;
      MEMORY[0x2199C53C4](v31, -1, -1);
      MEMORY[0x2199C53C4](v26, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v18 = *(id *)(v16 + 32);
LABEL_13:
  v19 = v18;

  swift_bridgeObjectRelease();
  return v19;
}

id sub_213E58BAC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint8_t *v40;
  void *v41;
  id v42[2];

  v42[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v8 = (void *)sub_213EF2844();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_213EF5FF0;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_213E07AFC();
  *(_QWORD *)(v10 + 32) = 0x437972746E756F63;
  *(_QWORD *)(v10 + 40) = 0xEB0000000065646FLL;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  if (v4)
    v13 = v3;
  else
    v13 = 0;
  v14 = 0xE000000000000000;
  if (v4)
    v15 = v4;
  else
    v15 = 0xE000000000000000;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = v13;
  *(_QWORD *)(v10 + 80) = v15;
  *(_QWORD *)(v10 + 136) = v11;
  *(_QWORD *)(v10 + 144) = v12;
  strcpy((char *)(v10 + 112), "storefrontId");
  *(_BYTE *)(v10 + 125) = 0;
  *(_WORD *)(v10 + 126) = -5120;
  *(_QWORD *)(v10 + 176) = v11;
  *(_QWORD *)(v10 + 184) = v12;
  if (v6)
    v16 = v5;
  else
    v16 = 0;
  if (v6)
    v14 = v6;
  *(_QWORD *)(v10 + 152) = v16;
  *(_QWORD *)(v10 + 160) = v14;
  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = (void *)sub_213EF2C58();
  objc_msgSend(v9, sel_setPredicate_, v17);

  v42[0] = 0;
  v18 = objc_msgSend(v9, sel_execute_, v42);
  v19 = v42[0];
  if (!v18)
  {
    v41 = a1;
    v25 = v42[0];
    a1 = (void *)sub_213EF1BA8();

    swift_willThrow();
    if (qword_253F04A88 == -1)
    {
LABEL_20:
      v26 = sub_213EF2724();
      __swift_project_value_buffer(v26, (uint64_t)qword_253F08A00);
      v27 = a1;
      v28 = a1;
      v29 = sub_213EF270C();
      v30 = sub_213EF2CA0();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = (void *)swift_slowAlloc();
        v42[0] = v32;
        *(_DWORD *)v31 = 136315138;
        v40 = v31 + 4;
        v33 = a1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
        v34 = sub_213EF288C();
        sub_213DB0570(v34, v35, (uint64_t *)v42);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_213DAB000, v29, v30, "Error searching for existing suggestion tag error=%s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v32, -1, -1);
        MEMORY[0x2199C53C4](v31, -1, -1);

      }
      else
      {

      }
      a1 = v41;
      goto LABEL_26;
    }
LABEL_36:
    swift_once();
    goto LABEL_20;
  }
  v20 = v18;
  type metadata accessor for PlusStorefrontCoreDataRecord();
  v21 = sub_213EF2A3C();
  v22 = v19;

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_15;
  }
  else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    if ((v21 & 0xC000000000000001) != 0)
    {
      v23 = (id)MEMORY[0x2199C49B0](0, v21);
      goto LABEL_18;
    }
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = *(id *)(v21 + 32);
LABEL_18:
      v24 = v23;

      swift_bridgeObjectRelease();
      return v24;
    }
    __break(1u);
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  type metadata accessor for PlusStorefrontCoreDataRecord();
  v24 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  if (v4)
    v37 = (void *)sub_213EF2844();
  else
    v37 = 0;
  objc_msgSend(v24, sel_setCountryCode_, v37, v40);

  if (v6)
    v38 = (void *)sub_213EF2844();
  else
    v38 = 0;
  objc_msgSend(v24, sel_setStorefrontId_, v38);

  return v24;
}

void sub_213E590D4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *v0;
  v2 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v3 = (void *)sub_213EF2844();
  objc_msgSend(v2, sel_initWithEntityName_, v3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF44B0;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_213E07AFC();
  *(_QWORD *)(v4 + 32) = 1701667182;
  *(_QWORD *)(v4 + 40) = 0xE400000000000000;
  __asm { BR              X9 }
}

id sub_213E591FC()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  id v27[14];

  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  v1[12] = v4;
  v1[13] = v2;
  v1[9] = 0x656D7269666E6F63;
  v1[10] = 0xE900000000000064;
  v5 = (void *)sub_213EF2C58();
  objc_msgSend(v0, sel_setPredicate_, v5);

  v27[0] = 0;
  v6 = objc_msgSend(v0, sel_execute_, v27);
  v7 = v27[0];
  if (!v6)
  {
    v13 = v27[0];
    v8 = (void *)sub_213EF1BA8();

    swift_willThrow();
    if (qword_253F04A88 == -1)
      goto LABEL_9;
    goto LABEL_17;
  }
  v8 = v6;
  type metadata accessor for PlusMediaSuggestionTagCoreDataRecord();
  v9 = sub_213EF2A3C();
  v10 = v7;

  if (!(v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v24 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_13;
LABEL_4:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x2199C49B0](0, v9);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_9:
    v14 = sub_213EF2724();
    __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
    v15 = v8;
    v16 = v8;
    v17 = sub_213EF270C();
    v18 = sub_213EF2CA0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (void *)swift_slowAlloc();
      v27[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
      v22 = sub_213EF288C();
      sub_213DB0570(v22, v23, (uint64_t *)v27);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213DAB000, v17, v18, "Error searching for existing suggestion tag error=%s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v20, -1, -1);
      MEMORY[0x2199C53C4](v19, -1, -1);

    }
    else
    {

    }
LABEL_14:
    type metadata accessor for PlusMediaSuggestionTagCoreDataRecord();
    objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v26);
    __asm { BR              X10 }
  }
  v11 = *(id *)(v9 + 32);
LABEL_7:
  v12 = v11;

  swift_bridgeObjectRelease();
  return v12;
}

void sub_213E59754(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  unsigned __int8 v30;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_mediaId);
  if (v4)
  {
    v5 = v4;
    v6 = sub_213EF2850();
    v8 = v7;

    v9 = objc_msgSend(v2, sel_storefront);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_countryCode);
      if (v11)
      {
        v12 = v11;
        v13 = sub_213EF2850();
        v15 = v14;

      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      v22 = objc_msgSend(v10, sel_storefrontId);
      if (v22)
      {
        v23 = v22;
        v20 = sub_213EF2850();
        v21 = v24;

      }
      else
      {

        v20 = 0;
        v21 = 0;
      }
    }
    else
    {
      v13 = 0;
      v20 = 0;
      v21 = 0;
      v15 = 1;
    }
    v25 = objc_msgSend(v2, sel_sourceApp);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_name);
      if (v27)
      {
        v28 = v27;
        sub_213EF2850();

        v29 = sub_213EF30D8();
        swift_bridgeObjectRelease();
        if (v29 == 1)
          v30 = 1;
        else
          v30 = 2;
        if (!v29)
          v30 = 0;
        goto LABEL_25;
      }

    }
    v30 = 2;
LABEL_25:
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v20;
    *(_QWORD *)(a1 + 40) = v21;
    *(_WORD *)(a1 + 48) = v30 | 0x300;
    return;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v16 = sub_213EF2724();
  __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
  v17 = sub_213EF270C();
  v18 = sub_213EF2C94();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_213DAB000, v17, v18, "Media reference missing mandatory media id.", v19, 2u);
    MEMORY[0x2199C53C4](v19, -1, -1);
  }

  *(_WORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
}

uint64_t sub_213E59A14@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  void *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  char *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  os_log_type_t v72;
  uint8_t *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(char *, uint64_t);
  void (*v79)(char *, uint64_t);
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  void *v88;
  Swift::String v89;
  char v90;
  unint64_t v91;
  unint64_t v92;
  char *v93;
  void (**v94)(char *, uint64_t);
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t i;
  id v100;
  void *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  NSObject *v109;
  os_log_type_t v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  void (*v117)(char *, uint64_t);
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  char *v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE v180[32];
  uint64_t v181;
  __int128 v182;
  unint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int16 v189;

  v2 = v1;
  v176 = type metadata accessor for PlusMediaSuggestion();
  v175 = *(_QWORD *)(v176 - 8);
  MEMORY[0x24BDAC7A8](v176);
  v166 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B718);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ThinMediaGroundTruth();
  v179 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v177 = (uint64_t)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v174 = (uint64_t)&v153 - v10;
  v11 = sub_213EF1BB4();
  v171 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v170 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v153 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_213EF1D64();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v169 = (char *)&v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v153 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v167 = (char *)&v153 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v153 - v28;
  *(_QWORD *)&v31 = MEMORY[0x24BDAC7A8](v30).n128_u64[0];
  v172 = (char *)&v153 - v32;
  v173 = v2;
  v33 = objc_msgSend(v2, sel_id, v31);
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_19;
  }
  v34 = v33;
  sub_213EF1D34();

  v35 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v35(v18, v29, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  v165 = v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_19:
    sub_213DAFEC4((uint64_t)v18, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v54 = sub_213EF2724();
    __swift_project_value_buffer(v54, (uint64_t)qword_253F08A00);
    v55 = sub_213EF270C();
    v56 = sub_213EF2C94();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_213DAB000, v55, v56, "PIMSStoreCoreData: Missing UUID for pics data record. Returning Nil.", v57, 2u);
      MEMORY[0x2199C53C4](v57, -1, -1);
    }

    goto LABEL_24;
  }
  v36 = v172;
  v35(v172, v18, v19);
  v37 = v173;
  v38 = objc_msgSend(v173, sel_leftHandKey);
  v39 = a1;
  v164 = a1;
  if (!v38)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v68 = sub_213EF2724();
    __swift_project_value_buffer(v68, (uint64_t)qword_253F08A00);
    v69 = v165;
    (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v24, v36, v19);
    v70 = sub_213EF270C();
    v71 = v19;
    v72 = sub_213EF2C94();
    if (os_log_type_enabled(v70, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = v36;
      v75 = swift_slowAlloc();
      *(_QWORD *)&v184 = v75;
      *(_DWORD *)v73 = 136315138;
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v76 = sub_213EF31F8();
      *(_QWORD *)&v182 = sub_213DB0570(v76, v77, (uint64_t *)&v184);
      v39 = v164;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v78 = *(void (**)(char *, uint64_t))(v165 + 8);
      v78(v24, v71);
      _os_log_impl(&dword_213DAB000, v70, v72, "PIMSStoreCoreData: Empty uso data for %s", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v75, -1, -1);
      MEMORY[0x2199C53C4](v73, -1, -1);

      v78(v74, v71);
    }
    else
    {

      v79 = *(void (**)(char *, uint64_t))(v69 + 8);
      v79(v24, v71);
      v79(v36, v71);
    }
    v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56);
    v59 = v39;
    return v58(v59, 1, 1, v176);
  }
  v40 = v38;
  v163 = sub_213EF1C50();
  v42 = v41;

  v43 = objc_msgSend(v37, sel_inferredMediaReference);
  if (!v43 || (v44 = v43, sub_213E59754((uint64_t)&v184), v44, !*((_QWORD *)&v184 + 1)))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v61 = sub_213EF2724();
    __swift_project_value_buffer(v61, (uint64_t)qword_253F08A00);
    v62 = sub_213EF270C();
    v63 = sub_213EF2C94();
    v64 = os_log_type_enabled(v62, v63);
    v65 = v165;
    v66 = v163;
    if (v64)
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_213DAB000, v62, v63, "PIMSStoreCoreData: Empty inferred media reference for media suggestion", v67, 2u);
      MEMORY[0x2199C53C4](v67, -1, -1);
    }
    sub_213DF8A28(v66, v42);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v19);
LABEL_24:
    v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56);
    v59 = a1;
    return v58(v59, 1, 1, v176);
  }
  v159 = *((_QWORD *)&v184 + 1);
  v154 = v184;
  v155 = v185;
  v156 = v186;
  v45 = v188;
  v157 = v187;
  v160 = v189;
  v46 = v173;
  v47 = objc_msgSend(v173, sel_contributingGroundTruth);
  if (!v47)
  {
    sub_213DB9CDC(0, &qword_254D3E748);
    v48 = MEMORY[0x2199C4704](MEMORY[0x24BEE4AF8]);
    v46 = v173;
    v47 = (id)v48;
  }
  v162 = v42;
  v49 = objc_msgSend(v46, sel_tags);
  v50 = MEMORY[0x24BEE4AF8];
  v161 = v19;
  v51 = v170;
  v158 = v45;
  if (!v49)
  {
    v168 = 0;
    goto LABEL_57;
  }
  v153 = v47;
  v183 = MEMORY[0x24BEE4AF8];
  v52 = v49;
  sub_213EF2C70();

  sub_213DB0DB4(&qword_254D3E750, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_213EF2D90();
  while (v186)
  {
    sub_213E5B300(&v184, &v182);
    sub_213DB0CCC((uint64_t)&v182, (uint64_t)v180);
    type metadata accessor for PlusMediaSuggestionTagCoreDataRecord();
    if ((swift_dynamicCast() & 1) == 0)
      v181 = 0;
    v53 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v182);
    v19 = v181;
    if (v181)
    {
      MEMORY[0x2199C44C4](v53);
      if (*(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
    sub_213EF2D90();
  }
  (*(void (**)(char *, uint64_t))(v171 + 8))(v15, v11);
  v80 = v183;

  if (v80 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_213EF306C();
    v81 = result;
    if (result)
      goto LABEL_39;
  }
  else
  {
    v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v81)
    {
LABEL_39:
      if (v81 < 1)
      {
        __break(1u);
        return result;
      }
      v82 = 0;
      v168 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        if ((v80 & 0xC000000000000001) != 0)
          v83 = (id)MEMORY[0x2199C49B0](v82, v80);
        else
          v83 = *(id *)(v80 + 8 * v82 + 32);
        v84 = v83;
        v85 = objc_msgSend(v83, sel_name);
        if (v85)
        {
          v86 = v85;
          v19 = sub_213EF2850();
          v88 = v87;

          v89._countAndFlagsBits = v19;
          v89._object = v88;
          v39 = v164;
          MediaSuggestionTag.init(rawValue:)(v89);

          v90 = v184;
          if (v184 != 8)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v168 = sub_213DB6F10(0, *((_QWORD *)v168 + 2) + 1, 1, v168);
            v92 = *((_QWORD *)v168 + 2);
            v91 = *((_QWORD *)v168 + 3);
            v19 = v92 + 1;
            if (v92 >= v91 >> 1)
              v168 = sub_213DB6F10((char *)(v91 > 1), v92 + 1, 1, v168);
            v93 = v168;
            *((_QWORD *)v168 + 2) = v19;
            v93[v92 + 32] = v90;
          }
        }
        else
        {

        }
        ++v82;
      }
      while (v81 != v82);
      goto LABEL_56;
    }
  }
  v168 = (char *)MEMORY[0x24BEE4AF8];
LABEL_56:
  swift_bridgeObjectRelease_n();
  v51 = v170;
  v47 = v153;
  v50 = MEMORY[0x24BEE4AF8];
LABEL_57:
  v183 = v50;
  v94 = (void (**)(char *, uint64_t))v47;
  sub_213EF2C70();

  sub_213DB0DB4(&qword_254D3E750, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_213EF2D90();
  while (v186)
  {
    sub_213E5B300(&v184, &v182);
    sub_213DB0CCC((uint64_t)&v182, (uint64_t)v180);
    type metadata accessor for ThinMediaGroundTruthCoreDataRecord();
    if ((swift_dynamicCast() & 1) == 0)
      v181 = 0;
    v95 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v182);
    v19 = v181;
    if (v181)
    {
      MEMORY[0x2199C44C4](v95);
      if (*(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
    sub_213EF2D90();
  }
  (*(void (**)(char *, uint64_t))(v171 + 8))(v51, v11);
  v96 = v183;
  if (v183 >> 62)
  {
    swift_bridgeObjectRetain();
    v97 = sub_213EF306C();
  }
  else
  {
    v97 = *(_QWORD *)((v183 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v98 = MEMORY[0x24BEE4AF8];
  v170 = (char *)v94;
  if (v97)
  {
    if (v97 < 1)
    {
      __break(1u);
      swift_once();
      v105 = sub_213EF2724();
      __swift_project_value_buffer(v105, (uint64_t)qword_253F08A00);
      v106 = v169;
      ((void (*)(char *, uint64_t, uint64_t))v94[2])(v169, v19, v98);
      v107 = v7;
      v108 = v7;
      v109 = sub_213EF270C();
      v110 = sub_213EF2CA0();
      v111 = os_log_type_enabled(v109, v110);
      v112 = v176;
      if (v111)
      {
        v113 = swift_slowAlloc();
        v114 = swift_slowAlloc();
        *(_QWORD *)&v184 = v114;
        *(_DWORD *)v113 = 136315394;
        sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v115 = sub_213EF31F8();
        *(_QWORD *)&v182 = sub_213DB0570(v115, v116, (uint64_t *)&v184);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v117 = v94[1];
        v117(v106, v98);
        *(_WORD *)(v113 + 12) = 2080;
        *(_QWORD *)&v182 = v7;
        v118 = v7;
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
        v119 = sub_213EF288C();
        *(_QWORD *)&v182 = sub_213DB0570(v119, v120, (uint64_t *)&v184);
        v112 = v176;
        sub_213EF2D9C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_213DAB000, v109, v110, "PIMSStoreCoreData: Cannot construct PIMS for id = %s, error=%s", (uint8_t *)v113, 0x16u);
        swift_arrayDestroy();
        v121 = v114;
        v39 = v164;
        MEMORY[0x2199C53C4](v121, -1, -1);
        MEMORY[0x2199C53C4](v113, -1, -1);

        sub_213DF8A28(v163, v162);
        v117(v172, v98);
      }
      else
      {

        sub_213DF8A28(v163, v96);
        v152 = v94[1];
        v152(v106, v98);

        v152((char *)v19, v98);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56))(v39, 1, 1, v112);
    }
    for (i = 0; i != v97; ++i)
    {
      if ((v96 & 0xC000000000000001) != 0)
        v100 = (id)MEMORY[0x2199C49B0](i, v96);
      else
        v100 = *(id *)(v96 + 8 * i + 32);
      v101 = v100;
      sub_213E57CCC(v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48))(v7, 1, v178) == 1)
      {
        sub_213DAFEC4((uint64_t)v7, &qword_254D3B718);
      }
      else
      {
        v102 = v174;
        sub_213DBB430((uint64_t)v7, v174, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
        sub_213DBB430(v102, v177, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v98 = sub_213DB6338(0, *(_QWORD *)(v98 + 16) + 1, 1, v98);
        v104 = *(_QWORD *)(v98 + 16);
        v103 = *(_QWORD *)(v98 + 24);
        if (v104 >= v103 >> 1)
          v98 = sub_213DB6338(v103 > 1, v104 + 1, 1, v98);
        *(_QWORD *)(v98 + 16) = v104 + 1;
        sub_213DBB430(v177, v98+ ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))+ *(_QWORD *)(v179 + 72) * v104, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  sub_213EF19F8();
  swift_allocObject();
  sub_213EF19EC();
  sub_213EF1ED8();
  sub_213DB0DB4(&qword_254D3A9F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F780]);
  sub_213EF19E0();
  swift_release();
  v122 = v184;
  v123 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
  v124 = v167;
  v125 = v161;
  v123(v167, v172, v161);
  v126 = v173;
  objc_msgSend(v173, sel_timestamp);
  v128 = v127;
  v129 = MEMORY[0x24BEE4AF8];
  if (v168)
    v130 = v168;
  else
    v130 = (char *)MEMORY[0x24BEE4AF8];
  v179 = sub_213DDF67C((uint64_t)v130);
  swift_bridgeObjectRelease();
  objc_msgSend(v126, sel_score);
  v132 = v131;
  v133 = objc_msgSend(v126, sel_scoreHistory);
  if (v133)
  {
    v134 = v133;
    v135 = sub_213EF1C50();
    v137 = v136;

    v138 = sub_213E5AE7C(v135, v137, &qword_254D3D000, &qword_254D3D050, &qword_254D3D058, &qword_254D3D018);
    v139 = v135;
    v125 = v161;
    sub_213DF8A28(v139, v137);
    if (v138)
      v129 = v138;
  }
  v140 = (uint64_t)v166;
  v141 = v160;
  v142 = v160 >> 8;
  v123(v166, v124, v125);
  v143 = v125;
  v144 = (int *)v176;
  *(_QWORD *)(v140 + *(int *)(v176 + 20)) = v122;
  v145 = v140 + v144[6];
  v146 = v159;
  *(_QWORD *)v145 = v154;
  *(_QWORD *)(v145 + 8) = v146;
  v147 = v156;
  *(_QWORD *)(v145 + 16) = v155;
  *(_QWORD *)(v145 + 24) = v147;
  v148 = v158;
  *(_QWORD *)(v145 + 32) = v157;
  *(_QWORD *)(v145 + 40) = v148;
  *(_BYTE *)(v145 + 48) = v141;
  *(_BYTE *)(v145 + 49) = v142;
  swift_retain();
  *(_QWORD *)(v140 + v144[7]) = sub_213E7AEC4(20, v98);
  *(_QWORD *)(v140 + v144[10]) = v128;
  *(_QWORD *)(v140 + v144[11]) = v179;
  *(_QWORD *)(v140 + v144[8]) = v132;
  v149 = sub_213E7AEE0(20, v129);
  swift_release();
  v150 = *(void (**)(char *, uint64_t))(v165 + 8);
  v150(v124, v143);
  *(_QWORD *)(v140 + v144[9]) = v149;
  v151 = v164;
  sub_213DBB430(v140, v164, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);

  sub_213DF8A28(v163, v162);
  v150(v172, v143);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v175 + 56))(v151, 0, 1, v144);
}

uint64_t sub_213E5AE58(uint64_t a1, uint64_t a2)
{
  return sub_213E5AE7C(a1, a2, &qword_254D3E758, &qword_254D3E760, &qword_254D3E768, &qword_254D3E770);
}

uint64_t sub_213E5AE7C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, unint64_t *a5, uint64_t *a6)
{
  uint64_t v11;

  sub_213EF19F8();
  swift_allocObject();
  sub_213EF19EC();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_213E5B34C(a4, a3, a5, a6);
  sub_213EF19E0();
  swift_release();
  return v11;
}

uint64_t sub_213E5B0E8@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1CF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12 = MEMORY[0x24BDAC7A8](v11).n128_u64[0];
  v14 = (char *)&v26 - v13;
  v15 = objc_msgSend(v2, sel_source, v12);
  if (v15)
  {
    v16 = v15;
    v17 = sub_213EF2850();
    v19 = v18;

    v20 = objc_msgSend(v2, sel_timestamp);
    if (v20)
    {
      v21 = v20;
      sub_213EF1CE0();

      v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v22(v6, v10, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v22(v14, v6, v7);
        v23 = type metadata accessor for SuggestionStoreUpdate();
        v22((char *)a1 + *(int *)(v23 + 20), v14, v7);
        *a1 = v17;
        a1[1] = v19;
        return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 0, 1, v23);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    sub_213DAFEC4((uint64_t)v6, &qword_253F04800);
  }
  v25 = type metadata accessor for SuggestionStoreUpdate();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
}

_OWORD *sub_213E5B300(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_213E5B310(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ThinMediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E5B34C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_213E5B3BC(a3, a4);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12D0], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213E5B3BC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ScoreStep<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213E5B3FC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DE30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3E778 = 91;
  unk_254D3E780 = 0xE100000000000000;
  return result;
}

uint64_t PlayMediaIntentWithAttachedNowPlayingEventStreamDefinition.init(streamRegistry:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t PlayMediaIntentWithAttachedNowPlayingEventStreamDefinition.events(since:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[14] = a1;
  v3[15] = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDD8);
  v3[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[17] = v5;
  v3[18] = *(_QWORD *)(v5 + 64);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCC0);
  v3[21] = v6;
  v3[22] = *(_QWORD *)(v6 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E790);
  v3[25] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDA8);
  v3[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[27] = v8;
  v3[28] = *(_QWORD *)(v8 + 64);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v9 = swift_task_alloc();
  v10 = *v2;
  v3[31] = v9;
  v3[32] = v10;
  return swift_task_switch();
}

uint64_t sub_213E5B5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  sub_213E5E688(0, 1uLL, v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_213DB0BF0((__int128 *)(v0 + 56), v0 + 16);
    v1 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    v25 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v3;
    *v3 = v0;
    v3[1] = sub_213E5B988;
    return v25(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 120), v1, v2);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v5 = sub_213EF2724();
    __swift_project_value_buffer(v5, (uint64_t)qword_253F08A00);
    v6 = sub_213EF270C();
    v7 = sub_213EF2CA0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v27 = v9;
      *(_DWORD *)v8 = 136315138;
      if (qword_254D3A038 != -1)
        swift_once();
      v10 = qword_254D3E778;
      v11 = unk_254D3E780;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 104) = sub_213DB0570(v10, v11, &v27);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v6, v7, "%s Could not resolve playMediaIntentStream", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v9, -1, -1);
      MEMORY[0x2199C53C4](v8, -1, -1);
    }

    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 96) = MEMORY[0x24BEE4AF8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEB8);
    sub_213DCA20C(&qword_254D3E798, &qword_254D3AEB8, MEMORY[0x24BEE12C8]);
    sub_213EF231C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDE0);
    v17 = swift_allocBox();
    v19 = v18;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v16);
    v21 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v17;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v22 + v21, v14, v16);
    sub_213EF2B74();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v12, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_213E5B988()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E5B9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 176);
  sub_213DCA20C(&qword_254D3E7B8, &qword_254D3E790, (uint64_t)&protocol conformance descriptor for AsyncEventStream<A>);
  swift_retain();
  sub_213EF321C();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDB0);
  v7 = swift_allocBox();
  v9 = v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v6(v3, v2, v5);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v7;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v12 + v11, v3, v5);
  sub_213EF2B74();
  v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v15, v18);
  v13(v1, v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5BBFC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5BC94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *a2;
  v6 = a2[3];
  v7 = a2[4];
  *(_QWORD *)(v3 + 56) = a3;
  *(_QWORD *)(v3 + 16) = v5;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v3 + 40) = v6;
  *(_QWORD *)(v3 + 48) = v7;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 64) = v8;
  *v8 = v3;
  v8[1] = sub_213E5BD14;
  return sub_213E5BD8C(a1, (uint64_t *)(v3 + 16));
}

uint64_t sub_213E5BD14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213E5BD80()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5BD8C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 304) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  *(_QWORD *)(v3 + 312) = swift_task_alloc();
  *(_QWORD *)(v3 + 320) = swift_task_alloc();
  v5 = sub_213EF1CF8();
  *(_QWORD *)(v3 + 328) = v5;
  *(_QWORD *)(v3 + 336) = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a2;
  *(_QWORD *)(v3 + 344) = v6;
  *(_QWORD *)(v3 + 352) = v7;
  *(_OWORD *)(v3 + 360) = *(_OWORD *)(a2 + 1);
  v8 = a2[4];
  *(_QWORD *)(v3 + 376) = a2[3];
  *(_QWORD *)(v3 + 384) = v8;
  *(_QWORD *)(v3 + 392) = *v2;
  return swift_task_switch();
}

uint64_t sub_213E5BE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  NSObject *log;
  __int128 v56;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = swift_bridgeObjectRetain();
  sub_213DAF008(v4, v3);
  swift_bridgeObjectRelease();
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v5(v3, 1, v1) == 1)
  {
    v6 = swift_bridgeObjectRetain();
    sub_213DAF1EC(v6);
    v8 = v7;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      sub_213EF1CC8();
      v9 = 0;
    }
    v13 = *(_QWORD *)(v0 + 312);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 336) + 56))(*(_QWORD *)(v0 + 320), v9, 1, *(_QWORD *)(v0 + 328));
    sub_213DAFEC4(v13, &qword_253F04800);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 328);
    v11 = *(_QWORD *)(v0 + 336);
    v12 = *(_QWORD *)(v0 + 320);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 32))(v12, *(_QWORD *)(v0 + 312), v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  }
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  if (v5(v15, 1, v14) == 1)
  {
    sub_213DAFEC4(v15, &qword_253F04800);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 32))(*(_QWORD *)(v0 + 344), v15, v14);
    v16 = swift_bridgeObjectRetain();
    sub_213DAEB60(v16, &v56);
    swift_bridgeObjectRelease();
    v17 = *((_QWORD *)&v56 + 1);
    if (*((_QWORD *)&v56 + 1))
    {
      v18 = v56;
      *(_QWORD *)(v0 + 248) = 47;
      *(_QWORD *)(v0 + 256) = 0xE100000000000000;
      v19 = swift_task_alloc();
      *(_QWORD *)(v19 + 16) = v0 + 248;
      swift_bridgeObjectRetain_n();
      v20 = sub_213DE3B38(0x7FFFFFFFFFFFFFFFLL, 1, sub_213E5ED8C, v19, v18, v17);
      swift_bridgeObjectRelease();
      sub_213DB8408(v18, v17);
      swift_task_dealloc();
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = *(_QWORD *)(v0 + 392);
        v23 = (uint64_t *)(v20 + 32 * v21);
        v24 = *v23;
        v25 = v23[1];
        v26 = v23[2];
        v27 = v23[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 296) = v22;
        v28 = MEMORY[0x2199C4344](v24, v25, v26, v27);
        v30 = v29;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 400) = v30;
        v31 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 408) = v31;
        *v31 = v0;
        v31[1] = sub_213E5C420;
        return sub_213E5C97C(v0 + 168, *(_QWORD *)(v0 + 344), v28, v30);
      }
      v34 = *(_QWORD *)(v0 + 336);
      v33 = *(_QWORD *)(v0 + 344);
      v35 = *(_QWORD *)(v0 + 328);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
    }
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v36 = sub_213EF2724();
  __swift_project_value_buffer(v36, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v37 = sub_213EF270C();
  v38 = sub_213EF2CA0();
  if (os_log_type_enabled(v37, v38))
  {
    log = v37;
    v39 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    *(_QWORD *)&v56 = v54;
    *(_DWORD *)v39 = 136315394;
    if (qword_254D3A038 != -1)
      swift_once();
    v40 = *(_QWORD *)(v0 + 376);
    v41 = *(_QWORD *)(v0 + 384);
    v43 = *(_QWORD *)(v0 + 360);
    v42 = *(_QWORD *)(v0 + 368);
    v44 = *(_QWORD *)(v0 + 352);
    v46 = qword_254D3E778;
    v45 = unk_254D3E780;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 272) = sub_213DB0570(v46, v45, (uint64_t *)&v56);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    *(_QWORD *)(v0 + 128) = v44;
    *(_QWORD *)(v0 + 136) = v43;
    *(_QWORD *)(v0 + 144) = v42;
    *(_QWORD *)(v0 + 152) = v40;
    *(_QWORD *)(v0 + 160) = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = sub_213EF288C();
    *(_QWORD *)(v0 + 288) = sub_213DB0570(v47, v48, (uint64_t *)&v56);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v37 = log;
    _os_log_impl(&dword_213DAB000, log, v38, "%s playMediaIntent required fields missing (%s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v54, -1, -1);
    MEMORY[0x2199C53C4](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v49 = *(_QWORD *)(v0 + 376);
  v50 = *(_QWORD *)(v0 + 384);
  v51 = *(_QWORD *)(v0 + 360);
  v52 = *(_QWORD *)(v0 + 368);
  v53 = *(_QWORD **)(v0 + 304);
  *v53 = *(_QWORD *)(v0 + 352);
  v53[1] = v51;
  v53[2] = v52;
  v53[3] = v49;
  v53[4] = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5C420()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213E5C494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 176);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 376);
    v2 = *(_QWORD *)(v0 + 384);
    v4 = *(_QWORD *)(v0 + 336);
    v37 = *(_QWORD *)(v0 + 328);
    v39 = *(_QWORD *)(v0 + 344);
    v5 = *(_QWORD **)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 200);
    v35 = *(_OWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 168);
    v40 = *(_QWORD *)(v0 + 352);
    v41 = *(_OWORD *)(v0 + 360);
    v42 = v3;
    v43 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
    v9 = type metadata accessor for PlayMediaFeature.NowPlayingEvent(0);
    swift_allocObject();
    *(_QWORD *)(v0 + 88) = v7;
    *(_QWORD *)(v0 + 96) = v1;
    *(_OWORD *)(v0 + 104) = v35;
    *(_QWORD *)(v0 + 120) = v6;
    v10 = sub_213EF23C4();
    *(_QWORD *)(inited + 56) = v9;
    *(_QWORD *)(inited + 64) = sub_213DB0DB4(&qword_254D3E7F8, type metadata accessor for PlayMediaFeature.NowPlayingEvent, MEMORY[0x24BEA4F80]);
    *(_QWORD *)(inited + 32) = v10;
    CoreDuetEvent.with(eventId:removedFeatures:newFeatures:eventType:)(0, 0, MEMORY[0x24BEE4AF8], inited, 0, 0, v5);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    swift_arrayDestroy();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v39, v37);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v11 = sub_213EF2724();
    __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v12 = sub_213EF270C();
    v13 = sub_213EF2CA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v14 = 136315394;
      if (qword_254D3A038 != -1)
        swift_once();
      v15 = *(_QWORD *)(v0 + 384);
      v32 = *(_QWORD *)(v0 + 376);
      v17 = *(_QWORD *)(v0 + 360);
      v16 = *(_QWORD *)(v0 + 368);
      v18 = *(_QWORD *)(v0 + 352);
      v33 = *(_QWORD *)(v0 + 336);
      v34 = *(_QWORD *)(v0 + 328);
      v36 = *(_QWORD *)(v0 + 344);
      v20 = qword_254D3E778;
      v19 = unk_254D3E780;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 264) = sub_213DB0570(v20, v19, &v40);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      *(_QWORD *)(v0 + 208) = v18;
      *(_QWORD *)(v0 + 216) = v17;
      *(_QWORD *)(v0 + 224) = v16;
      *(_QWORD *)(v0 + 232) = v32;
      *(_QWORD *)(v0 + 240) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_213EF288C();
      *(_QWORD *)(v0 + 280) = sub_213DB0570(v21, v22, &v40);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v12, v13, "%s could not find associated now playing event for %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v38, -1, -1);
      MEMORY[0x2199C53C4](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v34);
    }
    else
    {
      v24 = *(_QWORD *)(v0 + 336);
      v23 = *(_QWORD *)(v0 + 344);
      v25 = *(_QWORD *)(v0 + 328);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v26 = *(_QWORD *)(v0 + 376);
    v27 = *(_QWORD *)(v0 + 384);
    v28 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 368);
    v30 = *(_QWORD **)(v0 + 304);
    *v30 = *(_QWORD *)(v0 + 352);
    v30[1] = v28;
    v30[2] = v29;
    v30[3] = v26;
    v30[4] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5C918()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5C97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5[63] = a3;
  v5[64] = a4;
  v5[61] = a1;
  v5[62] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v5[65] = swift_task_alloc();
  v5[66] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E790);
  v5[67] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E800);
  v5[68] = swift_task_alloc();
  v6 = sub_213EF1CF8();
  v5[69] = v6;
  v5[70] = *(_QWORD *)(v6 - 8);
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v5[75] = swift_task_alloc();
  v5[76] = swift_task_alloc();
  v5[77] = *v4;
  return swift_task_switch();
}

uint64_t sub_213E5CAA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v41;

  sub_213E5E688(0, 0, v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    v1 = (_QWORD *)(v0 + 16);
    sub_213DB0BF0((__int128 *)(v0 + 56), v0 + 16);
    sub_213EF1CB0();
    sub_213EF1CB0();
    sub_213EF1CB0();
    if (qword_253F04A88 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 608);
    v3 = *(_QWORD *)(v0 + 600);
    v4 = *(_QWORD *)(v0 + 584);
    v5 = *(_QWORD *)(v0 + 576);
    v6 = *(_QWORD *)(v0 + 560);
    v7 = *(_QWORD *)(v0 + 552);
    v8 = sub_213EF2724();
    *(_QWORD *)(v0 + 624) = __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v9(v4, v2, v7);
    v9(v5, v3, v7);
    v10 = sub_213EF270C();
    v11 = sub_213EF2C94();
    if (os_log_type_enabled(v10, v11))
    {
      v38 = v11;
      v12 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v41 = v39;
      *(_DWORD *)v12 = 136315650;
      if (qword_254D3A038 != -1)
        swift_once();
      v13 = *(_QWORD *)(v0 + 584);
      v36 = *(_QWORD *)(v0 + 560);
      v37 = *(_QWORD *)(v0 + 576);
      v14 = *(_QWORD *)(v0 + 552);
      v15 = qword_254D3E778;
      v16 = unk_254D3E780;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 464) = sub_213DB0570(v15, v16, &v41);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      sub_213DB0DB4(&qword_254D3DE28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v17 = sub_213EF31F8();
      *(_QWORD *)(v0 + 472) = sub_213DB0570(v17, v18, &v41);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v19 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v19(v13, v14);
      *(_WORD *)(v12 + 22) = 2080;
      v20 = sub_213EF31F8();
      *(_QWORD *)(v0 + 480) = sub_213DB0570(v20, v21, &v41);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v19(v37, v14);
      _os_log_impl(&dword_213DAB000, v10, v38, "%s Searching for the related now playing event between %s and %s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v39, -1, -1);
      MEMORY[0x2199C53C4](v12, -1, -1);

      v1 = (_QWORD *)(v0 + 16);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 576);
      v32 = *(_QWORD *)(v0 + 552);
      v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 560) + 8);
      v19(*(_QWORD *)(v0 + 584), v32);
      v19(v31, v32);

    }
    *(_QWORD *)(v0 + 632) = v19;
    v33 = *(_QWORD *)(v0 + 40);
    v34 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v1, v33);
    v40 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v34 + 16) + *(_QWORD *)(v34 + 16));
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 640) = v35;
    *v35 = v0;
    v35[1] = sub_213E5D0A4;
    return v40(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 608), v33, v34);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v22 = sub_213EF2724();
    __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
    v23 = sub_213EF270C();
    v24 = sub_213EF2CA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v41 = v26;
      *(_DWORD *)v25 = 136315138;
      if (qword_254D3A038 != -1)
        swift_once();
      v27 = qword_254D3E778;
      v28 = unk_254D3E780;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 448) = sub_213DB0570(v27, v28, &v41);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v23, v24, "%s failed to resolve nowPlayingStream", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v26, -1, -1);
      MEMORY[0x2199C53C4](v25, -1, -1);
    }

    v29 = *(_QWORD *)(v0 + 488);
    *(_QWORD *)(v29 + 32) = 0;
    *(_OWORD *)v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_213E5D0A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 648) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E5D108()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 536);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCC0);
  sub_213EF2B50();
  sub_213DAFEC4(v1, &qword_254D3E790);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 656) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E808);
  *v2 = v0;
  v2[1] = sub_213E5D1A8;
  return sub_213EF2B5C();
}

uint64_t sub_213E5D1A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[85] = v0;
  }
  else
  {
    v3 = v2[79];
    v2[84] = v3;
    v2[83] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_213E5D218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  void (*v42)(os_log_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  void (*v74)(os_log_t, uint64_t);
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  uint64_t v97;
  os_log_type_t log;
  os_log_t loga;
  os_log_t v100;
  NSObject *v101;
  os_log_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  NSObject *v108;
  NSObject *v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  NSObject *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  unint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  uint64_t v122;

  v1 = *(_QWORD *)(v0 + 144);
  if (!v1)
  {
    sub_213DAFEC4(*(_QWORD *)(v0 + 544), &qword_254D3E800);
    if (qword_253F04BB0 != -1)
      swift_once();
    *(_QWORD *)(v0 + 240) = &type metadata for PIMSConstraintMismatch;
    *(_QWORD *)(v0 + 248) = sub_213DE48B4();
    *(_QWORD *)(v0 + 216) = 0xD000000000000016;
    *(_QWORD *)(v0 + 224) = 0x8000000213F06090;
    *(_BYTE *)(v0 + 232) = 19;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
    v13 = sub_213EF270C();
    v14 = sub_213EF2CA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v122 = v16;
      *(_DWORD *)v15 = 136315138;
      if (qword_254D3A038 != -1)
        swift_once();
      v17 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
      v113 = *(_QWORD *)(v0 + 600);
      v118 = *(_QWORD *)(v0 + 608);
      v103 = *(_QWORD *)(v0 + 592);
      v18 = *(_QWORD *)(v0 + 552);
      v19 = qword_254D3E778;
      v20 = unk_254D3E780;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 384) = sub_213DB0570(v19, v20, &v122);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v13, v14, "%s Didn't find any relevant now playing events", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v16, -1, -1);
      MEMORY[0x2199C53C4](v15, -1, -1);

      v17(v103, v18);
      v17(v113, v18);
      v17(v118, v18);
    }
    else
    {
      v24 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
      v25 = *(_QWORD *)(v0 + 608);
      v26 = *(_QWORD *)(v0 + 600);
      v27 = *(_QWORD *)(v0 + 592);
      v28 = *(_QWORD *)(v0 + 552);

      v24(v27, v28);
      v24(v26, v28);
      v24(v25, v28);
    }
    goto LABEL_25;
  }
  v112 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 152);
  v117 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 560);
  v5 = *(_QWORD *)(v0 + 552);
  v6 = *(_QWORD *)(v0 + 520);
  v7 = swift_bridgeObjectRetain();
  sub_213DAF008(v7, v6);
  swift_bridgeObjectRelease();
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v8(v6, 1, v5) == 1)
  {
    v9 = swift_bridgeObjectRetain();
    sub_213DAF1EC(v9);
    v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      v12 = 1;
    }
    else
    {
      sub_213EF1CC8();
      v12 = 0;
    }
    v29 = *(_QWORD *)(v0 + 520);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 560) + 56))(*(_QWORD *)(v0 + 528), v12, 1, *(_QWORD *)(v0 + 552));
    sub_213DAFEC4(v29, &qword_253F04800);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 560);
    v22 = *(_QWORD *)(v0 + 552);
    v23 = *(_QWORD *)(v0 + 528);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 32))(v23, *(_QWORD *)(v0 + 520), v22);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v22);
  }
  v30 = *(_QWORD *)(v0 + 552);
  v31 = *(_QWORD *)(v0 + 528);
  if (v8(v31, 1, v30) == 1)
  {
    sub_213DAFEC4(v31, &qword_253F04800);
    v32 = *(_QWORD *)(v0 + 672);
    v33 = *(_QWORD *)(v0 + 664);
    goto LABEL_28;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 560) + 32))(*(_QWORD *)(v0 + 568), v31, v30);
  v34 = swift_bridgeObjectRetain();
  v35 = sub_213DAF5EC(v34);
  v37 = v36;
  swift_bridgeObjectRelease();
  if (v37)
  {
    sub_213DB0DB4((unint64_t *)&qword_254D3BAA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    if ((sub_213EF282C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_213DC7B60(v112, v1);
      if (qword_253F04BB0 != -1)
        swift_once();
      *(_QWORD *)(v0 + 120) = &type metadata for PIMSConstraintMismatch;
      *(_QWORD *)(v0 + 128) = sub_213DE48B4();
      *(_QWORD *)(v0 + 96) = 0xD000000000000016;
      *(_QWORD *)(v0 + 104) = 0x8000000213F06090;
      *(_BYTE *)(v0 + 112) = 18;
      sub_213EF210C();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
      v38 = sub_213EF270C();
      v39 = sub_213EF2CA0();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v122 = v41;
        *(_DWORD *)v40 = 136315138;
        if (qword_254D3A038 != -1)
          swift_once();
        v42 = *(void (**)(os_log_t, uint64_t))(v0 + 664);
        v114 = *(NSObject **)(v0 + 600);
        v119 = *(NSObject **)(v0 + 608);
        v100 = *(os_log_t *)(v0 + 568);
        v43 = *(_QWORD *)(v0 + 552);
        v104 = *(_QWORD *)(v0 + 544);
        v109 = *(NSObject **)(v0 + 592);
        v45 = qword_254D3E778;
        v44 = unk_254D3E780;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 456) = sub_213DB0570(v45, v44, &v122);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v38, v39, "%s Could not find associated NowPlayingEvent in time window", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v41, -1, -1);
        MEMORY[0x2199C53C4](v40, -1, -1);

        v42(v100, v43);
        sub_213DAFEC4(v104, &qword_254D3E800);
        v42(v109, v43);
        v42(v114, v43);
        v42(v119, v43);
        goto LABEL_25;
      }
    }
    else
    {
      if (v35 == *(_QWORD *)(v0 + 504) && v37 == *(_QWORD *)(v0 + 512) || (sub_213EF3234() & 1) != 0)
      {
        v56 = *(void (**)(uint64_t, uint64_t))(v0 + 664);
        v106 = *(_QWORD *)(v0 + 600);
        v110 = *(_QWORD *)(v0 + 608);
        v57 = *(_QWORD *)(v0 + 592);
        v58 = *(_QWORD *)(v0 + 568);
        v59 = *(_QWORD *)(v0 + 552);
        v60 = *(_QWORD *)(v0 + 544);
        v61 = *(uint64_t **)(v0 + 488);
        swift_bridgeObjectRelease();
        v56(v58, v59);
        sub_213DAFEC4(v60, &qword_254D3E800);
        v56(v57, v59);
        v56(v106, v59);
        v56(v110, v59);
        *v61 = v112;
        v61[1] = v1;
        v61[2] = v2;
        v61[3] = v117;
        v61[4] = v3;
        goto LABEL_26;
      }
      v107 = v37;
      sub_213DC7B60(v112, v1);
      if (qword_253F04BB0 != -1)
        swift_once();
      *(_QWORD *)(v0 + 320) = &type metadata for PIMSConstraintMismatch;
      v62 = sub_213DE48B4();
      *(_QWORD *)(v0 + 328) = v62;
      v120 = v62;
      *(_QWORD *)(v0 + 296) = 0xD000000000000016;
      *(_QWORD *)(v0 + 304) = 0x8000000213F06090;
      *(_BYTE *)(v0 + 312) = 20;
      sub_213EF210C();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 296);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v63 = sub_213EF270C();
      v64 = sub_213EF2CA0();
      v65 = (uint64_t *)(v0 + 392);
      if (os_log_type_enabled(v63, v64))
      {
        log = v64;
        v101 = v63;
        v66 = swift_slowAlloc();
        v97 = swift_slowAlloc();
        *(_QWORD *)(v0 + 416) = v97;
        *(_DWORD *)v66 = 136315650;
        if (qword_254D3A038 != -1)
          swift_once();
        v67 = *(_QWORD *)(v0 + 504);
        v68 = *(_QWORD *)(v0 + 512);
        v70 = qword_254D3E778;
        v69 = unk_254D3E780;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 424) = sub_213DB0570(v70, v69, (uint64_t *)(v0 + 416));
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 432) = sub_213DB0570(v67, v68, (uint64_t *)(v0 + 416));
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v66 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 440) = sub_213DB0570(v35, v107, (uint64_t *)(v0 + 416));
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213DAB000, v101, log, "%s Mismatched ids (Expected media id = %s now playing id = %s)", (uint8_t *)v66, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v97, -1, -1);
        MEMORY[0x2199C53C4](v66, -1, -1);

        v65 = (uint64_t *)(v0 + 392);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

      }
      if ((sub_213EF1C98() & 1) == 0)
      {
        *(_QWORD *)(v0 + 280) = &type metadata for PIMSConstraintMismatch;
        *(_QWORD *)(v0 + 288) = v120;
        *(_QWORD *)(v0 + 256) = 0xD000000000000016;
        *(_QWORD *)(v0 + 264) = 0x8000000213F06090;
        *(_BYTE *)(v0 + 272) = 22;
        sub_213EF210C();
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 256);
        v85 = sub_213EF270C();
        v86 = sub_213EF2C94();
        if (os_log_type_enabled(v85, v86))
        {
          v87 = swift_slowAlloc();
          v88 = swift_slowAlloc();
          *v65 = v88;
          *(_DWORD *)v87 = 136315138;
          if (qword_254D3A038 != -1)
            swift_once();
          v116 = *(_QWORD *)(v0 + 568);
          v121 = *(void (**)(uint64_t, uint64_t))(v0 + 664);
          v89 = *(_QWORD *)(v0 + 552);
          v90 = qword_254D3E778;
          v91 = unk_254D3E780;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v87 + 4) = sub_213DB0570(v90, v91, v65);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213DAB000, v85, v86, "%s Ignoring early now play event with non matching media id", (uint8_t *)v87, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v88, -1, -1);
          MEMORY[0x2199C53C4](v87, -1, -1);

          v121(v116, v89);
          v33 = *(_QWORD *)(v0 + 664);
          v32 = v33;
        }
        else
        {
          v92 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
          v93 = *(_QWORD *)(v0 + 568);
          v94 = *(_QWORD *)(v0 + 552);

          v92(v93, v94);
          v32 = *(_QWORD *)(v0 + 672);
          v33 = *(_QWORD *)(v0 + 664);
        }
        goto LABEL_33;
      }
      *(_QWORD *)(v0 + 200) = &type metadata for PIMSConstraintMismatch;
      *(_QWORD *)(v0 + 208) = v120;
      *(_QWORD *)(v0 + 176) = 0xD000000000000016;
      *(_QWORD *)(v0 + 184) = 0x8000000213F06090;
      *(_BYTE *)(v0 + 192) = 21;
      sub_213EF210C();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
      v38 = sub_213EF270C();
      v71 = sub_213EF2CA0();
      if (os_log_type_enabled(v38, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        v73 = swift_slowAlloc();
        v122 = v73;
        *(_DWORD *)v72 = 136315138;
        if (qword_254D3A038 != -1)
          swift_once();
        v74 = *(void (**)(os_log_t, uint64_t))(v0 + 664);
        v111 = *(NSObject **)(v0 + 600);
        v115 = *(NSObject **)(v0 + 608);
        loga = *(os_log_t *)(v0 + 568);
        v75 = *(_QWORD *)(v0 + 552);
        v102 = *(os_log_t *)(v0 + 544);
        v108 = *(NSObject **)(v0 + 592);
        v77 = qword_254D3E778;
        v76 = unk_254D3E780;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 408) = sub_213DB0570(v77, v76, &v122);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v38, v71, "%s Unexpected now playing media id after limit", v72, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v73, -1, -1);
        MEMORY[0x2199C53C4](v72, -1, -1);

        v74(loga, v75);
        sub_213DAFEC4((uint64_t)v102, &qword_254D3E800);
        v74(v108, v75);
        v74(v111, v75);
        v74(v115, v75);
        goto LABEL_25;
      }
    }
    v78 = *(void (**)(uint64_t, uint64_t))(v0 + 664);
    v79 = *(_QWORD *)(v0 + 608);
    v80 = *(_QWORD *)(v0 + 600);
    v81 = *(_QWORD *)(v0 + 592);
    v82 = *(_QWORD *)(v0 + 568);
    v83 = *(_QWORD *)(v0 + 552);
    v84 = *(_QWORD *)(v0 + 544);

    v78(v82, v83);
    sub_213DAFEC4(v84, &qword_254D3E800);
    v78(v81, v83);
    v78(v80, v83);
    v78(v79, v83);
LABEL_25:
    v46 = *(_QWORD *)(v0 + 488);
    *(_QWORD *)(v46 + 32) = 0;
    *(_OWORD *)v46 = 0u;
    *(_OWORD *)(v46 + 16) = 0u;
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 632))(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 552));
  v33 = *(_QWORD *)(v0 + 632);
  v32 = v33;
LABEL_28:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = sub_213EF270C();
  v49 = sub_213EF2CA0();
  if (os_log_type_enabled(v48, v49))
  {
    v96 = v49;
    v105 = v33;
    v50 = swift_slowAlloc();
    v95 = swift_slowAlloc();
    *(_QWORD *)(v0 + 376) = v95;
    *(_DWORD *)v50 = 136315394;
    if (qword_254D3A038 != -1)
      swift_once();
    v51 = qword_254D3E778;
    v52 = unk_254D3E780;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v50 + 4) = sub_213DB0570(v51, v52, (uint64_t *)(v0 + 376));
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    *(_QWORD *)(v0 + 336) = v112;
    *(_QWORD *)(v0 + 344) = v1;
    *(_QWORD *)(v0 + 352) = v2;
    *(_QWORD *)(v0 + 360) = v117;
    *(_QWORD *)(v0 + 368) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = sub_213EF288C();
    *(_QWORD *)(v50 + 14) = sub_213DB0570(v53, v54, (uint64_t *)(v0 + 376));
    swift_bridgeObjectRelease();
    sub_213DC7B60(v112, v1);
    sub_213DC7B60(v112, v1);
    _os_log_impl(&dword_213DAB000, v48, v96, "%s NowPlayingEvent required properties missing: %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v95, -1, -1);
    MEMORY[0x2199C53C4](v50, -1, -1);

    v33 = v105;
  }
  else
  {
    sub_213DC7B60(v112, v1);
    sub_213DC7B60(v112, v1);

  }
LABEL_33:
  *(_QWORD *)(v0 + 696) = v32;
  *(_QWORD *)(v0 + 688) = v33;
  v55 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 704) = v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E808);
  *v55 = v0;
  v55[1] = sub_213E5E4A8;
  return sub_213EF2B5C();
}

uint64_t sub_213E5E324()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 680);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_213E5E384()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 592);
  v5 = *(_QWORD *)(v0 + 552);
  sub_213DAFEC4(*(_QWORD *)(v0 + 544), &qword_254D3E800);
  v1(v4, v5);
  v1(v3, v5);
  v1(v2, v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5E4A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 680) = v0;
  else
    *(_OWORD *)(v2 + 664) = *(_OWORD *)(v2 + 688);
  return swift_task_switch();
}

uint64_t sub_213E5E518()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 552);
  v1(*(_QWORD *)(v0 + 592), v4);
  v1(v3, v4);
  v1(v2, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E5E628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213E4141C;
  return PlayMediaIntentWithAttachedNowPlayingEventStreamDefinition.events(since:)(a1, a2);
}

double sub_213E5E688@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  double result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27[2];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[6];

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v7 + 16))
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
LABEL_9:
    sub_213DAFEC4((uint64_t)&v28, &qword_254D3E810);
    if (qword_253F04A88 != -1)
      swift_once();
    v11 = sub_213EF2724();
    __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
    sub_213E03404(a1, a2);
    sub_213E03404(a1, a2);
    v12 = sub_213EF270C();
    v13 = sub_213EF2C94();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_QWORD *)&v28 = v15;
      *(_DWORD *)v14 = 136315138;
      v31[0] = a1;
      v31[1] = a2;
      sub_213E03404(a1, a2);
      v16 = sub_213EF288C();
      v31[0] = sub_213DB0570(v16, v17, (uint64_t *)&v28);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DC497C(a1, a2);
      sub_213DC497C(a1, a2);
      _os_log_impl(&dword_213DAB000, v12, v13, "No stream  registered for identifier %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v15, -1, -1);
      MEMORY[0x2199C53C4](v14, -1, -1);
    }
    else
    {
      sub_213DC497C(a1, a2);
      sub_213DC497C(a1, a2);
    }

    goto LABEL_21;
  }
  sub_213E03404(a1, a2);
  swift_bridgeObjectRetain();
  v8 = sub_213DFA734(a1, a2);
  if ((v9 & 1) != 0)
  {
    sub_213DAFDFC(*(_QWORD *)(v7 + 56) + 40 * v8, (uint64_t)&v28);
  }
  else
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_213DC497C(a1, a2);
  if (!*((_QWORD *)&v29 + 1))
    goto LABEL_9;
  sub_213DB0BF0(&v28, (uint64_t)v31);
  sub_213DAFDFC((uint64_t)v31, (uint64_t)&v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E818);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E820);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    sub_213DB0BF0(v27, a3);
    return result;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v18 = sub_213EF2724();
  __swift_project_value_buffer(v18, (uint64_t)qword_253F08A00);
  sub_213E03404(a1, a2);
  sub_213E03404(a1, a2);
  v19 = sub_213EF270C();
  v20 = sub_213EF2CA0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_QWORD *)&v27[0] = v22;
    *(_DWORD *)v21 = 136315394;
    *(_QWORD *)&v28 = a1;
    *((_QWORD *)&v28 + 1) = a2;
    sub_213E03404(a1, a2);
    v23 = sub_213EF288C();
    *(_QWORD *)&v28 = sub_213DB0570(v23, v24, (uint64_t *)v27);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DC497C(a1, a2);
    sub_213DC497C(a1, a2);
    *(_WORD *)(v21 + 12) = 2080;
    *(_QWORD *)&v28 = &type metadata for CoreDuetEvent;
    __swift_instantiateConcreteTypeFromMangledName(qword_254D3E828);
    v25 = sub_213EF288C();
    *(_QWORD *)&v28 = sub_213DB0570(v25, v26, (uint64_t *)v27);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v19, v20, "Attempted to retrieve stream %s with incorrect event type of %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v22, -1, -1);
    MEMORY[0x2199C53C4](v21, -1, -1);

  }
  else
  {

    sub_213DC497C(a1, a2);
    sub_213DC497C(a1, a2);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
LABEL_21:
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_213E5EB88()
{
  return objectdestroyTm_0(&qword_254D3DDD8);
}

uint64_t sub_213E5EB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDD8) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_213E5EDA8;
  return sub_213E420D8(a1, v5, v6);
}

uint64_t sub_213E5EC18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_213E4141C;
  return sub_213E5BC94(a1, a2, v2);
}

uint64_t sub_213E5EC7C()
{
  return objectdestroyTm_0(&qword_254D3DDA8);
}

uint64_t objectdestroyTm_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_213E5ECF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3DDA8) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_213E5EDA8;
  return sub_213E42498(a1, v5, v6);
}

ValueMetadata *type metadata accessor for PlayMediaIntentWithAttachedNowPlayingEventStreamDefinition()
{
  return &type metadata for PlayMediaIntentWithAttachedNowPlayingEventStreamDefinition;
}

uint64_t sub_213E5ED8C(_QWORD *a1)
{
  uint64_t v1;

  return sub_213DE412C(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_213E5EDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = sub_213EF2AE4();
  swift_bridgeObjectRetain();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12F0], v2);
  v3 = sub_213EF2F4C();
  if (MEMORY[0x2199C4560](v3, v1) != 1)
  {
    swift_bridgeObjectRelease();
    return sub_213EF2A90();
  }
  return v3;
}

uint64_t sub_213E5EE60(uint64_t a1, uint64_t a2)
{
  char v2;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a2 + 96) + 24))(*(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 96));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = sub_213EF2BF8();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t type metadata accessor for UniqueTagNominationFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UniqueTagNominationFilter);
}

uint64_t sub_213E5EF34()
{
  return sub_213E5EDAC();
}

uint64_t sub_213E5EF54(uint64_t a1)
{
  uint64_t v1;

  return sub_213E5EE60(a1, v1) & 1;
}

id sub_213E5EF70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;

  v2 = type metadata accessor for ThinContactGroundTruth();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_213EF1A10();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for ThinContactGroundTruthCoreDataRecord();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  v5 = (void *)sub_213EF1D1C();
  objc_msgSend(v4, sel_setId_, v5);

  v6 = (void *)sub_213EF2844();
  objc_msgSend(v4, sel_setGroundTruthType_, v6);

  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213EF1A04();
  sub_213EF1A1C();
  sub_213E6196C();
  v7 = sub_213EF1A28();
  v9 = v8;
  v10 = (void *)sub_213EF1C44();
  objc_msgSend(v4, sel_setGroundTruthSource_, v10);

  sub_213DF8A28(v7, v9);
  swift_release();
  return v4;
}

void sub_213E5F2F4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *v0;
  v2 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v3 = (void *)sub_213EF2844();
  objc_msgSend(v2, sel_initWithEntityName_, v3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF44B0;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_213E07AFC();
  *(_QWORD *)(v4 + 32) = 1701667182;
  *(_QWORD *)(v4 + 40) = 0xE400000000000000;
  __asm { BR              X9 }
}

id sub_213E5F420()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28[14];

  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  v1[12] = v3;
  v1[13] = v2;
  v1[9] = 0x68506E69616D6F64;
  v1[10] = 0xEF6C6C6143656E6FLL;
  v6 = (void *)sub_213EF2C58();
  objc_msgSend(v0, sel_setPredicate_, v6);

  v28[0] = 0;
  v7 = objc_msgSend(v0, sel_execute_, v28);
  v8 = v28[0];
  if (!v7)
  {
    v27 = v5;
    v14 = v28[0];
    v9 = (void *)sub_213EF1BA8();

    swift_willThrow();
    if (qword_253F04A88 == -1)
    {
LABEL_9:
      v15 = sub_213EF2724();
      __swift_project_value_buffer(v15, (uint64_t)qword_253F08A00);
      v16 = v9;
      v17 = v9;
      v18 = sub_213EF270C();
      v19 = sub_213EF2CA0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = (void *)swift_slowAlloc();
        v28[0] = v21;
        *(_DWORD *)v20 = 136315138;
        v22 = v9;
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
        v23 = sub_213EF288C();
        sub_213DB0570(v23, v24, (uint64_t *)v28);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_213DAB000, v18, v19, "Error searching for existing suggestion tag error=%s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v21, -1, -1);
        MEMORY[0x2199C53C4](v20, -1, -1);

      }
      else
      {

      }
      v5 = v27;
LABEL_15:
      type metadata accessor for PlusContactSuggestionTagCoreDataRecord();
      objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v5);
      __asm { BR              X10 }
    }
LABEL_18:
    swift_once();
    goto LABEL_9;
  }
  v9 = v7;
  type metadata accessor for PlusContactSuggestionTagCoreDataRecord();
  v10 = sub_213EF2A3C();
  v11 = v8;

  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v25 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_14;
LABEL_4:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x2199C49B0](0, v10);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_18;
  }
  v12 = *(id *)(v10 + 32);
LABEL_7:
  v13 = v12;

  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_213E5F8F4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  void *v35;
  void (*v36)(char *, char *, uint64_t);
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(char *, uint64_t);
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  unint64_t v89;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v91;
  unint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t i;
  id v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void (*v119)(char *, char *);
  void (*v120)(char *, char *);
  char *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  void *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  void (*v151)(char *, char *);
  _QWORD v152[3];
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  id v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE v174[32];
  uint64_t v175;
  __int128 v176;
  unint64_t v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;

  v2 = v1;
  v169 = a1;
  v170 = type metadata accessor for PlusContactSuggestion();
  v3 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v160 = (char *)v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E8D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ThinContactGroundTruth();
  v9 = *(_QWORD *)(v8 - 8);
  v172 = v8;
  v173 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v171 = (uint64_t)v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v168 = (uint64_t)v152 - v12;
  v13 = sub_213EF1BB4();
  v165 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v164 = (char *)v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v152 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_213EF1D64();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v162 = (char *)v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v152 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v163 = (char *)v152 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v152 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v167 = (char *)v152 - v33;
  v166 = v2;
  v34 = objc_msgSend(v2, sel_id);
  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    goto LABEL_19;
  }
  v35 = v34;
  sub_213EF1D34();

  v36 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v36(v20, v32, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  v158 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
LABEL_19:
    sub_213DAFEC4((uint64_t)v20, &qword_253F04828);
    v54 = v169;
    if (qword_253F04A88 != -1)
      swift_once();
    v55 = sub_213EF2724();
    __swift_project_value_buffer(v55, (uint64_t)qword_253F08A00);
    v56 = sub_213EF270C();
    v57 = sub_213EF2C94();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_213DAB000, v56, v57, "PICSStoreCoreData: Missing UUID for pics data record. Returning Nil.", v58, 2u);
      MEMORY[0x2199C53C4](v58, -1, -1);
    }

    v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    goto LABEL_24;
  }
  v157 = v21;
  v36(v167, v20, v21);
  v37 = v166;
  v38 = objc_msgSend(v166, sel_usoPersonQuery);
  v39 = v3;
  v159 = v3;
  if (!v38)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v70 = sub_213EF2724();
    __swift_project_value_buffer(v70, (uint64_t)qword_253F08A00);
    v71 = v158;
    v72 = v167;
    v73 = v157;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v27, v167, v157);
    v74 = sub_213EF270C();
    v75 = sub_213EF2C94();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_QWORD *)&v178 = v77;
      *(_DWORD *)v76 = 136315138;
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v78 = sub_213EF31F8();
      *(_QWORD *)&v176 = sub_213DB0570(v78, v79, (uint64_t *)&v178);
      v39 = v159;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v80 = *(void (**)(char *, uint64_t))(v71 + 8);
      v80(v27, v73);
      _os_log_impl(&dword_213DAB000, v74, v75, "PICSStoreCoreData: Empty uso data for %s", v76, 0xCu);
      swift_arrayDestroy();
      v54 = v169;
      MEMORY[0x2199C53C4](v77, -1, -1);
      MEMORY[0x2199C53C4](v76, -1, -1);

      v80(v167, v73);
    }
    else
    {

      v81 = *(void (**)(char *, uint64_t))(v71 + 8);
      v81(v27, v73);
      v81(v72, v73);
      v54 = v169;
    }
    v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
LABEL_24:
    v60 = v54;
    return v59(v60, 1, 1, v170);
  }
  v40 = v38;
  v156 = sub_213EF1C50();
  v42 = v41;

  v43 = objc_msgSend(v37, sel_inferredContactReference);
  if (!v43 || (v44 = v43, sub_213E60CC0((uint64_t *)&v178), v44, !*((_QWORD *)&v178 + 1)))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v62 = sub_213EF2724();
    __swift_project_value_buffer(v62, (uint64_t)qword_253F08A00);
    v63 = sub_213EF270C();
    v64 = sub_213EF2C94();
    v65 = os_log_type_enabled(v63, v64);
    v66 = v157;
    v67 = v167;
    v68 = v158;
    if (v65)
    {
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_213DAB000, v63, v64, "PICSStoreCoreData: Empty inferred contact reference for contact suggestion", v69, 2u);
      MEMORY[0x2199C53C4](v69, -1, -1);
    }
    sub_213DF8A28(v156, v42);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v66);
    v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v60 = v169;
    return v59(v60, 1, 1, v170);
  }
  v154 = *((_QWORD *)&v178 + 1);
  v45 = v178;
  v46 = v180;
  v152[1] = v179;
  v47 = v166;
  v48 = objc_msgSend(v166, sel_contributingGroundTruth);
  if (!v48)
  {
    sub_213DB9CDC(0, &qword_254D3E748);
    v49 = MEMORY[0x2199C4704](MEMORY[0x24BEE4AF8]);
    v47 = v166;
    v48 = (id)v49;
  }
  v50 = objc_msgSend(v47, sel_tags);
  v51 = MEMORY[0x24BEE4AF8];
  v155 = v42;
  v153 = v45;
  v152[2] = v46;
  if (!v50)
  {
    v161 = 0;
    v94 = v164;
    goto LABEL_58;
  }
  v152[0] = v48;
  v177 = MEMORY[0x24BEE4AF8];
  v52 = v50;
  sub_213EF2C70();

  sub_213DB0DB4(&qword_254D3E750, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_213EF2D90();
  while (v180)
  {
    sub_213E5B300(&v178, &v176);
    sub_213DB0CCC((uint64_t)&v176, (uint64_t)v174);
    type metadata accessor for PlusContactSuggestionTagCoreDataRecord();
    if ((swift_dynamicCast() & 1) == 0)
      v175 = 0;
    v53 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v176);
    if (v175)
    {
      MEMORY[0x2199C44C4](v53);
      if (*(_QWORD *)((v177 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v177 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
    sub_213EF2D90();
  }
  (*(void (**)(char *, uint64_t))(v165 + 8))(v17, v13);
  v82 = v177;

  if (v82 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_213EF306C();
    v83 = result;
    if (result)
      goto LABEL_39;
  }
  else
  {
    v83 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v83)
    {
LABEL_39:
      if (v83 < 1)
      {
        __break(1u);
        return result;
      }
      v84 = 0;
      v161 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        if ((v82 & 0xC000000000000001) != 0)
          v85 = (id)MEMORY[0x2199C49B0](v84, v82);
        else
          v85 = *(id *)(v82 + 8 * v84 + 32);
        v86 = v85;
        v87 = objc_msgSend(v85, sel_name);
        if (v87)
        {
          v88 = v87;
          sub_213EF2850();

          v89 = sub_213EF30D8();
          swift_bridgeObjectRelease();
          if (v89 >= 5)
          {
            v39 = v159;
          }
          else
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v39 = v159;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v161 = sub_213DB6E10(0, *((_QWORD *)v161 + 2) + 1, 1, v161);
            v92 = *((_QWORD *)v161 + 2);
            v91 = *((_QWORD *)v161 + 3);
            if (v92 >= v91 >> 1)
              v161 = sub_213DB6E10((char *)(v91 > 1), v92 + 1, 1, v161);
            v93 = v161;
            *((_QWORD *)v161 + 2) = v92 + 1;
            v93[v92 + 32] = v89;
          }
        }
        else
        {

        }
        ++v84;
      }
      while (v83 != v84);
      goto LABEL_57;
    }
  }
  v161 = (char *)MEMORY[0x24BEE4AF8];
LABEL_57:
  swift_bridgeObjectRelease_n();
  v94 = v164;
  v48 = (id)v152[0];
  v51 = MEMORY[0x24BEE4AF8];
LABEL_58:
  v177 = v51;
  v95 = (char *)v48;
  sub_213EF2C70();

  sub_213DB0DB4(&qword_254D3E750, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_213EF2D90();
  while (v180)
  {
    sub_213E5B300(&v178, &v176);
    sub_213DB0CCC((uint64_t)&v176, (uint64_t)v174);
    type metadata accessor for ThinContactGroundTruthCoreDataRecord();
    if ((swift_dynamicCast() & 1) == 0)
      v175 = 0;
    v96 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v176);
    if (v175)
    {
      MEMORY[0x2199C44C4](v96);
      if (*(_QWORD *)((v177 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v177 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
    sub_213EF2D90();
  }
  (*(void (**)(char *, uint64_t))(v165 + 8))(v94, v13);
  v97 = v177;
  if (v177 >> 62)
  {
    swift_bridgeObjectRetain();
    v98 = sub_213EF306C();
  }
  else
  {
    v98 = *(_QWORD *)((v177 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v99 = MEMORY[0x24BEE4AF8];
  v164 = v95;
  if (v98)
  {
    if (v98 < 1)
    {
      __break(1u);
      swift_once();
      v106 = sub_213EF2724();
      __swift_project_value_buffer(v106, (uint64_t)qword_253F08A00);
      v107 = v162;
      v108 = v167;
      (*(void (**)(char *, char *, char *))(v98 + 16))(v162, v167, v95);
      v109 = v7;
      v110 = v7;
      v111 = sub_213EF270C();
      v112 = sub_213EF2CA0();
      v113 = os_log_type_enabled(v111, v112);
      v114 = v170;
      if (v113)
      {
        v115 = swift_slowAlloc();
        v116 = swift_slowAlloc();
        *(_QWORD *)&v178 = v116;
        *(_DWORD *)v115 = 136315394;
        sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v117 = sub_213EF31F8();
        *(_QWORD *)&v176 = sub_213DB0570(v117, v118, (uint64_t *)&v178);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v119 = *(void (**)(char *, char *))(v98 + 8);
        v119(v107, v95);
        v120 = v119;
        *(_WORD *)(v115 + 12) = 2080;
        *(_QWORD *)&v176 = v7;
        v121 = v7;
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
        v122 = sub_213EF288C();
        *(_QWORD *)&v176 = sub_213DB0570(v122, v123, (uint64_t *)&v178);
        v114 = v170;
        sub_213EF2D9C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_213DAB000, v111, v112, "PICSStoreCoreData: Cannot construct PICS for id = %s, error=%s", (uint8_t *)v115, 0x16u);
        swift_arrayDestroy();
        v124 = v116;
        v39 = v159;
        MEMORY[0x2199C53C4](v124, -1, -1);
        MEMORY[0x2199C53C4](v115, -1, -1);

        sub_213DF8A28(v156, v155);
        v120(v167, v95);
      }
      else
      {

        sub_213DF8A28(v156, v155);
        v151 = *(void (**)(char *, char *))(v98 + 8);
        v151(v107, v95);

        v151(v108, v95);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v169, 1, 1, v114);
    }
    for (i = 0; i != v98; ++i)
    {
      if ((v97 & 0xC000000000000001) != 0)
        v101 = (id)MEMORY[0x2199C49B0](i, v97);
      else
        v101 = *(id *)(v97 + 8 * i + 32);
      v102 = v101;
      sub_213E61034(v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v7, 1, v172) == 1)
      {
        sub_213DAFEC4((uint64_t)v7, &qword_254D3E8D0);
      }
      else
      {
        v103 = v168;
        sub_213DBB430((uint64_t)v7, v168, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
        sub_213DBB430(v103, v171, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v99 = sub_213DB646C(0, *(_QWORD *)(v99 + 16) + 1, 1, v99);
        v105 = *(_QWORD *)(v99 + 16);
        v104 = *(_QWORD *)(v99 + 24);
        if (v105 >= v104 >> 1)
          v99 = sub_213DB646C(v104 > 1, v105 + 1, 1, v99);
        *(_QWORD *)(v99 + 16) = v105 + 1;
        sub_213DBB430(v171, v99+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(_QWORD *)(v173 + 72) * v105, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  sub_213EF19F8();
  swift_allocObject();
  sub_213EF19EC();
  sub_213EF1E30();
  sub_213DB0DB4(&qword_254D3E8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F780]);
  sub_213EF19E0();
  swift_release();
  v125 = v178;
  v126 = v158;
  v127 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  v128 = v157;
  v127(v163, v167, v157);
  v129 = v166;
  objc_msgSend(v166, sel_timestamp);
  v131 = v130;
  v132 = MEMORY[0x24BEE4AF8];
  if (v161)
    v133 = v161;
  else
    v133 = (char *)MEMORY[0x24BEE4AF8];
  v173 = sub_213DDF660((uint64_t)v133);
  swift_bridgeObjectRelease();
  objc_msgSend(v129, sel_score);
  v135 = v134;
  v136 = objc_msgSend(v129, sel_scoreHistory);
  if (v136)
  {
    v137 = v136;
    v138 = sub_213EF1C50();
    v140 = v139;

    v141 = sub_213E5AE58(v138, v140);
    sub_213DF8A28(v138, v140);
    if (v141)
      v132 = v141;
  }
  v142 = (uint64_t)v160;
  v143 = v163;
  v127(v160, v163, v128);
  v144 = (int *)v170;
  *(_QWORD *)(v142 + *(int *)(v170 + 20)) = v125;
  swift_retain();
  v145 = v154;
  swift_bridgeObjectRetain();
  v146 = v153;
  sub_213DB1874(v153, v145);
  v147 = (uint64_t *)(v142 + v144[6]);
  *v147 = v146;
  v147[1] = v145;
  v147[2] = 0;
  v147[3] = 0;
  *(_QWORD *)(v142 + v144[7]) = sub_213E7B1FC(50, v99);
  *(_QWORD *)(v142 + v144[8]) = v131;
  *(_QWORD *)(v142 + v144[9]) = v173;
  *(_QWORD *)(v142 + v144[10]) = v135;
  v148 = sub_213E7B500(50, v132);
  swift_release();
  v149 = *(void (**)(char *, uint64_t))(v126 + 8);
  v149(v143, v128);
  *(_QWORD *)(v142 + v144[11]) = v148;
  v150 = v169;
  sub_213DBB430(v142, v169, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);

  sub_213DF8A28(v156, v155);
  v149(v167, v128);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v159 + 56))(v150, 0, 1, v144);
}

void sub_213E60CC0(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_contactId);
  if (v4)
  {
    v5 = v4;
    v6 = sub_213EF2850();
    v8 = v7;

    v9 = objc_msgSend(v2, sel_contactLabel);
    if (v9)
    {
      v10 = v9;
      v11 = sub_213EF2850();
      v13 = v12;

    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    *a1 = v6;
    a1[1] = v8;
    a1[2] = v11;
    a1[3] = v13;
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v14 = sub_213EF2724();
    __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
    v15 = sub_213EF270C();
    v16 = sub_213EF2C94();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_213DAB000, v15, v16, "Contact reference missing mandatory contact id.", v17, 2u);
      MEMORY[0x2199C53C4](v17, -1, -1);
    }

    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
}

uint64_t sub_213E60E1C@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1CF8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v14 = objc_msgSend(v2, sel_source);
  if (v14)
  {
    v15 = v14;
    v16 = sub_213EF2850();
    v18 = v17;

    v19 = objc_msgSend(v2, sel_timestamp);
    if (v19)
    {
      v20 = v19;
      sub_213EF1CE0();

      v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v21(v6, v11, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v21(v13, v6, v7);
        v22 = type metadata accessor for ContactSuggestionStoreUpdate();
        v21((char *)a1 + *(int *)(v22 + 20), v13, v7);
        *a1 = v16;
        a1[1] = v18;
        return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 0, 1, v22);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    sub_213DAFEC4((uint64_t)v6, &qword_253F04800);
  }
  v24 = type metadata accessor for ContactSuggestionStoreUpdate();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
}

uint64_t sub_213E61034@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  void *v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __int16 v54;
  char *v55;
  uint64_t v56;
  uint8_t **v57;
  char *v58;
  char *v60;
  uint64_t v61;
  uint8_t *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v63 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v61 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v61 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v61 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v61 - v17;
  v19 = objc_msgSend(v1, sel_id);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  v20 = v19;
  sub_213EF1D34();

  v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v21(v4, v16, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_213DAFEC4((uint64_t)v4, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v32 = sub_213EF2724();
    __swift_project_value_buffer(v32, (uint64_t)qword_253F08A00);
    v33 = sub_213EF270C();
    v34 = sub_213EF2CA0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_213DAB000, v33, v34, "PICSStoreCoreData: Failed to retrieve ID when reading ThinContactGroundTruth.", v35, 2u);
      MEMORY[0x2199C53C4](v35, -1, -1);
    }

    v36 = type metadata accessor for ThinContactGroundTruth();
    v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
    v38 = v63;
    return v37((uint64_t)v38, 1, 1, v36);
  }
  v21(v18, v4, v5);
  v22 = objc_msgSend(v1, sel_groundTruthType);
  if (v22)
  {
    v23 = v22;
    v24 = sub_213EF2850();
    v26 = v25;

    v27 = objc_msgSend(v1, sel_groundTruthSource);
    if (v27)
    {
      v28 = v27;
      v62 = (uint8_t *)v24;
      v29 = sub_213EF1C50();
      v31 = v30;

      sub_213EF19F8();
      swift_allocObject();
      sub_213EF19EC();
      sub_213E61928();
      sub_213EF19E0();
      sub_213DF8A28(v29, v31);
      swift_release();
      v54 = v65;
      LOBYTE(v28) = BYTE2(v65);
      v55 = v63;
      v21(v63, v18, v5);
      v56 = type metadata accessor for ThinContactGroundTruth();
      v57 = (uint8_t **)&v55[*(int *)(v56 + 20)];
      *v57 = v62;
      v57[1] = v26;
      v58 = &v55[*(int *)(v56 + 24)];
      *(_WORD *)v58 = v54;
      v58[2] = (char)v28;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 0, 1, v56);
    }
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v47 = sub_213EF2724();
    __swift_project_value_buffer(v47, (uint64_t)qword_253F08A00);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v18, v5);
    v48 = sub_213EF270C();
    v49 = sub_213EF2CA0();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v65 = v51;
      *(_DWORD *)v50 = 136315138;
      v62 = v50 + 4;
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v52 = sub_213EF31F8();
      v64 = sub_213DB0570(v52, v53, &v65);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v46 = *(void (**)(char *, uint64_t))(v6 + 8);
      v46(v13, v5);
      _os_log_impl(&dword_213DAB000, v48, v49, "PICSStoreCoreData: Failed to retrieve source data when reading ThinContactGroundTruth with ID: %s.", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v51, -1, -1);
      MEMORY[0x2199C53C4](v50, -1, -1);

    }
    else
    {

      v46 = *(void (**)(char *, uint64_t))(v6 + 8);
      v46(v13, v5);
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v39 = sub_213EF2724();
    __swift_project_value_buffer(v39, (uint64_t)qword_253F08A00);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v18, v5);
    v40 = sub_213EF270C();
    v41 = sub_213EF2CA0();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v65 = v43;
      *(_DWORD *)v42 = 136315138;
      v62 = v42 + 4;
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v44 = sub_213EF31F8();
      v64 = sub_213DB0570(v44, v45, &v65);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v46 = *(void (**)(char *, uint64_t))(v6 + 8);
      v46(v10, v5);
      _os_log_impl(&dword_213DAB000, v40, v41, "PICSStoreCoreData: Failed to retrieve type when reading ThinContactGroundTruth with ID: %s.", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v43, -1, -1);
      MEMORY[0x2199C53C4](v42, -1, -1);

    }
    else
    {

      v46 = *(void (**)(char *, uint64_t))(v6 + 8);
      v46(v10, v5);
    }
  }
  v46(v18, v5);
  v60 = v63;
  v36 = type metadata accessor for ThinContactGroundTruth();
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v38 = v60;
  return v37((uint64_t)v38, 1, 1, v36);
}

unint64_t sub_213E61928()
{
  unint64_t result;

  result = qword_254D3E8E0;
  if (!qword_254D3E8E0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for GroundTruthSource, &type metadata for GroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3E8E0);
  }
  return result;
}

unint64_t sub_213E6196C()
{
  unint64_t result;

  result = qword_254D3E8E8;
  if (!qword_254D3E8E8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for GroundTruthSource, &type metadata for GroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3E8E8);
  }
  return result;
}

uint64_t sub_213E619B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThinContactGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E619F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ThinContactGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ContactSuggestionOutcomeGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ContactSuggestionOutcomeGroundTruth.contactQuery.getter()
{
  type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  return swift_retain();
}

uint64_t type metadata accessor for ContactSuggestionOutcomeGroundTruth()
{
  uint64_t result;

  result = qword_253F04D18;
  if (!qword_253F04D18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ContactSuggestionOutcomeGroundTruth.suggestionIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContactSuggestionOutcomeGroundTruth() + 24);
  v4 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContactSuggestionOutcomeGroundTruth.contactReference.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ContactSuggestionOutcomeGroundTruth() + 28));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ContactSuggestionOutcomeGroundTruth.outcome.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ContactSuggestionOutcomeGroundTruth.domain.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t sub_213E61BB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E61BDC + 4 * byte_213EFC5B0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_213E61BDC()
{
  return 0x51746361746E6F63;
}

unint64_t sub_213E61BFC()
{
  return 0xD000000000000014;
}

unint64_t sub_213E61C1C()
{
  return 0xD000000000000010;
}

uint64_t sub_213E61C38()
{
  return 0x656D6F6374756FLL;
}

uint64_t sub_213E61C50()
{
  return 0x6E69616D6F64;
}

uint64_t sub_213E61C64()
{
  unsigned __int8 *v0;

  return sub_213E61BB4(*v0);
}

uint64_t sub_213E61C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E63068(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E61C90()
{
  sub_213E6266C();
  return sub_213EF3354();
}

uint64_t sub_213E61CB8()
{
  sub_213E6266C();
  return sub_213EF3360();
}

uint64_t ContactSuggestionOutcomeGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E8F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E6266C();
  sub_213EF3348();
  LOBYTE(v13[0]) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ContactSuggestionOutcomeGroundTruth();
    v13[0] = *(_QWORD *)(v3 + v9[5]);
    v15 = 1;
    sub_213EF1E30();
    sub_213DB0DB4(&qword_254D3BBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    LOBYTE(v13[0]) = 2;
    sub_213EF31BC();
    v10 = v3 + v9[7];
    v11 = *(_QWORD *)(v10 + 8);
    v13[0] = *(_QWORD *)v10;
    v13[1] = v11;
    v14 = *(_OWORD *)(v10 + 16);
    v15 = 3;
    sub_213E626B0();
    sub_213EF31BC();
    LOWORD(v13[0]) = *(_WORD *)(v3 + v9[8]);
    v15 = 4;
    sub_213E27724();
    sub_213EF31BC();
    LOBYTE(v13[0]) = *(_BYTE *)(v3 + v9[9]);
    v15 = 5;
    sub_213E626F4();
    sub_213EF31BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ContactSuggestionOutcomeGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  char v37;

  v27 = a2;
  v3 = sub_213EF1D64();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (void (*)(uint64_t, char *, uint64_t))((char *)&v24 - v7);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E910);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E6266C();
  v32 = v10;
  v14 = (uint64_t)v33;
  sub_213EF333C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v25 = v6;
  v26 = v8;
  v33 = a1;
  v15 = v28;
  v16 = (uint64_t)v13;
  LOBYTE(v34) = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v30;
  v18 = v29;
  sub_213EF3144();
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v19(v16, (char *)v31, v18);
  sub_213EF1E30();
  v37 = 1;
  sub_213DB0DB4(&qword_254D3E8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  v31 = v19;
  *(_QWORD *)(v16 + v11[5]) = v34;
  LOBYTE(v34) = 2;
  v20 = v25;
  sub_213EF3144();
  v31(v16 + v11[6], v20, v18);
  v37 = 3;
  sub_213E62738();
  sub_213EF3144();
  v21 = v35;
  v22 = v16 + v11[7];
  *(_QWORD *)v22 = v34;
  *(_QWORD *)(v22 + 8) = v21;
  *(_OWORD *)(v22 + 16) = v36;
  v37 = 4;
  sub_213E27900();
  sub_213EF3144();
  *(_WORD *)(v16 + v11[8]) = v34;
  v37 = 5;
  sub_213E6277C();
  sub_213EF3144();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v17);
  *(_BYTE *)(v16 + v11[9]) = v34;
  sub_213E627C0(v16, v27);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  return sub_213E62804(v16);
}

uint64_t sub_213E6244C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ContactSuggestionOutcomeGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213E62460(_QWORD *a1)
{
  return ContactSuggestionOutcomeGroundTruth.encode(to:)(a1);
}

BOOL _s28SiriPrivateLearningInference35ContactSuggestionOutcomeGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 result;
  char v16;
  uint64_t v17;
  __int16 v18;
  _WORD v19[36];

  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v5 = sub_213EF3330();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  if (v5 != sub_213EF3330() || (sub_213EF1D28() & 1) == 0)
    return 0;
  v6 = v4[7];
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v10 = *(_QWORD *)(a1 + v6 + 16);
  v9 = *(_QWORD *)(a1 + v6 + 24);
  v11 = (_QWORD *)(a2 + v6);
  v13 = v11[2];
  v12 = v11[3];
  if (v7 != *v11 || v8 != v11[1])
  {
    v14 = sub_213EF3234();
    result = 0;
    if ((v14 & 1) == 0)
      return result;
  }
  if (!v9)
  {
    if (!v12)
      goto LABEL_20;
    return 0;
  }
  if (!v12)
    return 0;
  if (v10 == v13 && v9 == v12 || (v16 = sub_213EF3234(), result = 0, (v16 & 1) != 0))
  {
LABEL_20:
    v17 = v4[8];
    v19[0] = *(_WORD *)(a1 + v17);
    v18 = *(_WORD *)(a2 + v17);
    if (_s28SiriPrivateLearningInference17SuggestionOutcomeO2eeoiySbAC_ACtFZ_0(v19, &v18))
      return *(unsigned __int8 *)(a1 + v4[9]) == *(unsigned __int8 *)(a2 + v4[9]);
    return 0;
  }
  return result;
}

unint64_t sub_213E6266C()
{
  unint64_t result;

  result = qword_254D3E8F8;
  if (!qword_254D3E8F8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC7E4, &type metadata for ContactSuggestionOutcomeGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E8F8);
  }
  return result;
}

unint64_t sub_213E626B0()
{
  unint64_t result;

  result = qword_254D3E900;
  if (!qword_254D3E900)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactReference, &type metadata for ContactReference);
    atomic_store(result, (unint64_t *)&qword_254D3E900);
  }
  return result;
}

unint64_t sub_213E626F4()
{
  unint64_t result;

  result = qword_254D3E908;
  if (!qword_254D3E908)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionDomain, &type metadata for ContactSuggestionDomain);
    atomic_store(result, (unint64_t *)&qword_254D3E908);
  }
  return result;
}

unint64_t sub_213E62738()
{
  unint64_t result;

  result = qword_254D3E918;
  if (!qword_254D3E918)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactReference, &type metadata for ContactReference);
    atomic_store(result, (unint64_t *)&qword_254D3E918);
  }
  return result;
}

unint64_t sub_213E6277C()
{
  unint64_t result;

  result = qword_254D3E920;
  if (!qword_254D3E920)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionDomain, &type metadata for ContactSuggestionDomain);
    atomic_store(result, (unint64_t *)&qword_254D3E920);
  }
  return result;
}

uint64_t sub_213E627C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E62804(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E62840(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213DB0DB4((unint64_t *)&unk_253F04D00, (uint64_t (*)(uint64_t))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t)&protocol conformance descriptor for ContactSuggestionOutcomeGroundTruth);
  result = sub_213DB0DB4(&qword_253F04CF8, (uint64_t (*)(uint64_t))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t)&protocol conformance descriptor for ContactSuggestionOutcomeGroundTruth);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for ContactSuggestionOutcomeGroundTruth(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    v10 = &a1[v9];
    v11 = &a2[v9];
    swift_retain();
    v8(v10, v11, v7);
    v12 = a3[7];
    v13 = a3[8];
    v14 = &a1[v12];
    v15 = &a2[v12];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    *(_WORD *)&a1[v13] = *(_WORD *)&a2[v13];
    a1[a3[9]] = a2[a3[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContactSuggestionOutcomeGroundTruth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_213EF1D64();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_release();
  v5(a1 + *(int *)(a2 + 24), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactSuggestionOutcomeGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  swift_retain();
  v7(v9, v10, v6);
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  *(_WORD *)(a1 + v12) = *(_WORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactSuggestionOutcomeGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9[2] = *(_QWORD *)(v10 + 16);
  v9[3] = *(_QWORD *)(v10 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for ContactSuggestionOutcomeGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v9 = a3[7];
  v10 = a3[8];
  v11 = (_OWORD *)(a1 + v9);
  v12 = (_OWORD *)(a2 + v9);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  *(_WORD *)(a1 + v10) = *(_WORD *)(a2 + v10);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ContactSuggestionOutcomeGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v10 + 24);
  v9[2] = *(_QWORD *)(v10 + 16);
  v9[3] = v12;
  swift_bridgeObjectRelease();
  v13 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactSuggestionOutcomeGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E62D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactSuggestionOutcomeGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E62DB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_213E62E30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContactSuggestionOutcomeGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_213E62F10 + 4 * byte_213EFC5BB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_213E62F44 + 4 * byte_213EFC5B6[v4]))();
}

uint64_t sub_213E62F44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E62F4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E62F54);
  return result;
}

uint64_t sub_213E62F60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E62F68);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_213E62F6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E62F74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactSuggestionOutcomeGroundTruth.CodingKeys()
{
  return &type metadata for ContactSuggestionOutcomeGroundTruth.CodingKeys;
}

unint64_t sub_213E62F94()
{
  unint64_t result;

  result = qword_254D3E928;
  if (!qword_254D3E928)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC7BC, &type metadata for ContactSuggestionOutcomeGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E928);
  }
  return result;
}

unint64_t sub_213E62FDC()
{
  unint64_t result;

  result = qword_254D3E930;
  if (!qword_254D3E930)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC72C, &type metadata for ContactSuggestionOutcomeGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E930);
  }
  return result;
}

unint64_t sub_213E63024()
{
  unint64_t result;

  result = qword_254D3E938;
  if (!qword_254D3E938)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFC754, &type metadata for ContactSuggestionOutcomeGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3E938);
  }
  return result;
}

uint64_t sub_213E63068(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x51746361746E6F63 && a2 == 0xEC00000079726575 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000213F08960 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000213F08980 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_213E632D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_213E632D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

double sub_213E632E0()
{
  return 60.0;
}

uint64_t sub_213E632EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213E632F8(a1, a2, a3, (uint64_t)&off_254D3CD40);
}

uint64_t sub_213E632F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[16];
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57[5];
  uint64_t *v58;
  _BYTE v59[40];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;

  v5 = v4;
  v51 = a1;
  v9 = type metadata accessor for RuleResult();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(uint64_t **)(a3 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a3;
  v52 = a4;
  v55 = a4;
  v56 = v5;
  v16 = sub_213E43EE0((void (*)(_OWORD *__return_ptr, uint64_t))sub_213E63E44, (uint64_t)v53, a2);
  v17 = v16;
  v18 = v16[2];
  if (v18)
  {
    v50 = v13;
    v19 = v5;
    sub_213DCC3D8((uint64_t)(v16 + 4), (uint64_t)&v60, &qword_254D3A6A8);
    if (v18 != 1)
    {
      v31 = (uint64_t)(v17 + 10);
      v5 = 1;
      v13 = &qword_254D3A6A8;
      while (v5 < v17[2])
      {
        sub_213DCC3D8(v31, (uint64_t)&v63, &qword_254D3A6A8);
        if (*(double *)&v60 >= *(double *)&v63)
        {
          sub_213DAFEC4((uint64_t)&v63, &qword_254D3A6A8);
        }
        else
        {
          sub_213DAFEC4((uint64_t)&v60, &qword_254D3A6A8);
          v60 = v63;
          v61 = v64;
          v62 = v65;
        }
        ++v5;
        v31 += 48;
        if (v18 == v5)
          goto LABEL_3;
      }
      __break(1u);
LABEL_28:
      swift_once();
      goto LABEL_7;
    }
LABEL_3:
    v63 = v60;
    v64 = v61;
    v65 = v62;
    swift_bridgeObjectRelease();
    v5 = v19;
    v13 = v50;
  }
  else
  {
    v63 = 0u;
    v64 = 0u;
    v65 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_213DCC3D8((uint64_t)&v63, (uint64_t)&v60, &qword_253F06FC8);
  if (!(_QWORD)v62)
  {
    sub_213DAFEC4((uint64_t)&v60, &qword_253F06FC8);
LABEL_25:
    sub_213DAFEC4((uint64_t)&v63, &qword_253F06FC8);
    return MEMORY[0x24BEE4AF8];
  }
  sub_213DB0BF0((__int128 *)((char *)&v60 + 8), (uint64_t)v59);
  if (qword_253F04A88 != -1)
    goto LABEL_28;
LABEL_7:
  v20 = sub_213EF2724();
  __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
  ((void (*)(char *, unint64_t, uint64_t))v13[2])(v15, v5, a3);
  sub_213DAFDFC((uint64_t)v59, (uint64_t)&v60);
  v21 = sub_213EF270C();
  v22 = sub_213EF2C94();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    LODWORD(v49) = v23;
    v25 = v24;
    v50 = (uint64_t *)swift_slowAlloc();
    v58 = v50;
    *(_DWORD *)v25 = 136315394;
    v57[0] = swift_getDynamicType();
    swift_getMetatypeMetadata();
    v26 = sub_213EF288C();
    v57[0] = sub_213DB0570(v26, v27, (uint64_t *)&v58);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v13[1])(v15, a3);
    *(_WORD *)(v25 + 12) = 2080;
    sub_213DAFDFC((uint64_t)&v60, (uint64_t)v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A450);
    v28 = sub_213EF288C();
    v57[0] = sub_213DB0570(v28, v29, (uint64_t *)&v58);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v60);
    _os_log_impl(&dword_213DAB000, v21, (os_log_type_t)v49, "[%s] Searching for an in app followup for classification %s", (uint8_t *)v25, 0x16u);
    v30 = (uint64_t)v50;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v30, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v13[1])(v15, a3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v60);
  }

  v32 = v52;
  sub_213E63AE8(v51, a3, v52, &v60);
  v33 = *((_QWORD *)&v60 + 1);
  v34 = v62;
  v50 = (uint64_t *)v60;
  v49 = *((_QWORD *)&v61 + 1);
  v51 = v61;
  v35 = sub_213E63E60((uint64_t *)&v60, a3, v32);
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = v35 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    v40 = *(_QWORD *)(v38 + 72);
    while (1)
    {
      v41 = v39 + *(int *)(v37 + 48);
      swift_storeEnumTagMultiPayload();
      sub_213E81FE0(v41, (uint64_t)v12);
      LOBYTE(v41) = v42;
      sub_213E640D8((uint64_t)v12);
      if ((v41 & 1) == 0)
        break;
      v39 += v40;
      if (!--v36)
        goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    sub_213DC7B60((uint64_t)v50, v33);
    goto LABEL_24;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if (!v33)
  {
LABEL_24:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
    goto LABEL_25;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A650);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_213EF53E0;
  sub_213DAFDFC((uint64_t)v59, (uint64_t)&v60);
  *(_QWORD *)(v43 + 56) = &type metadata for InAppFollowupClassification;
  *(_QWORD *)(v43 + 64) = &protocol witness table for InAppFollowupClassification;
  v44 = swift_allocObject();
  v45 = v44 + 16;
  *(_QWORD *)(v43 + 32) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v45;
  v47 = (uint64_t)v50;
  InAppFollowupClassification.init(priorEvent:followupEventId:followupEventType:)(&v60, (uint64_t)v50, v33, v49, v34, v46);
  sub_213DC7B60(v47, v33);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
  sub_213DAFEC4((uint64_t)&v63, &qword_253F06FC8);
  return v43;
}

double sub_213E63974@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *boxed_opaque_existential_1;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double result;
  __int128 v17[2];
  uint64_t v18;
  uint64_t v19[5];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  sub_213DAFDFC(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A450);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_213DB0BF0(v17, (uint64_t)v20);
    v7 = v21;
    v8 = v22;
    v9 = __swift_project_boxed_opaque_existential_1(v20, v21);
    v19[3] = v7;
    v19[4] = *(_QWORD *)(v8 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_1, v9, v7);
    v11 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a3 + 24))(v19, a2, a3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    if ((v11 & 1) != 0)
    {
      v12 = v21;
      v13 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
      if ((v15 & 1) == 0)
      {
        *(_QWORD *)a4 = v14;
        sub_213DAFDFC((uint64_t)v20, a4 + 8);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        return result;
      }
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  else
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_213DAFEC4((uint64_t)v17, &qword_254D3E948);
  }
  result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  return result;
}

uint64_t sub_213E63AE8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[5];

  v5 = *(_QWORD *)(result + 16);
  if (v5
    && (v8 = result,
        v9 = v5 - 1,
        result = type metadata accessor for FeaturisedTurn(0),
        v10 = *(_QWORD *)(v8
                        + ((*(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80))
                        + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v9
                        + *(int *)(result + 28)),
        (v11 = *(_QWORD *)(v10 + 16)) != 0))
  {
    v18 = a4;
    swift_bridgeObjectRetain_n();
    v12 = (uint64_t *)(v10 + 64);
    while (1)
    {
      v13 = *(v12 - 1);
      v14 = *v12;
      v15 = *(v12 - 3);
      v16 = *(v12 - 2);
      v17 = *(v12 - 4);
      v20[0] = v17;
      v20[1] = v15;
      v20[2] = v16;
      v20[3] = v13;
      v20[4] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_213E63DA0(v20, v19, a2, a3))
        break;
      v12 += 5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v11)
      {
        result = swift_bridgeObjectRelease_n();
        a4 = v18;
        goto LABEL_7;
      }
    }
    result = swift_bridgeObjectRelease_n();
    *v18 = v17;
    v18[1] = v15;
    v18[2] = v16;
    v18[3] = v13;
    v18[4] = v14;
  }
  else
  {
LABEL_7:
    a4[4] = 0;
    *(_OWORD *)a4 = 0u;
    *((_OWORD *)a4 + 1) = 0u;
  }
  return result;
}

uint64_t sub_213E63C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  char v16;

  v8 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = *(_QWORD *)(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD08);
  sub_213E64158();
  sub_213DE4B50(AssociatedTypeWitness, (uint64_t)&v15);
  if ((v16 & 1) != 0)
  {
    *a4 = sub_213EF23AC();
    a4[1] = v12;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
    swift_storeEnumTagMultiPayload();
    return sub_213E07238((uint64_t)v10, (uint64_t)a4);
  }
}

BOOL sub_213E63DA0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[5];

  v4 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v11[0] = *a1;
  v11[1] = v4;
  v11[2] = v6;
  v11[3] = v5;
  v11[4] = v7;
  if (((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a4 + 32))(v11, a3, a4) & 1) == 0)
    return 0;
  v8 = swift_bridgeObjectRetain();
  v9 = sub_213DAF1F8(v8);
  swift_bridgeObjectRelease();
  return v9 != 2 && (v9 & 1) == 0;
}

uint64_t sub_213E63E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213E632F8(a1, a2, a3, (uint64_t)&off_254D3FA30);
}

double sub_213E63E44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213E63974(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_213E63E60(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a3;
  v28 = a2;
  v35 = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v26 = a1[2];
  v27 = v7;
  v9 = a1[3];
  v24 = a1[4];
  v25 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07018);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213EF53E0;
  v14 = (_QWORD *)(v13 + v12);
  v15 = v13 + v12 + *(int *)(v10 + 48);
  *v14 = 0xD000000000000013;
  v14[1] = 0x8000000213F089A0;
  if (v8)
  {
    v23 = xmmword_213EF53E0;
    swift_storeEnumTagMultiPayload();
    sub_213E07238((uint64_t)v6, v15);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v23;
    v17 = (uint64_t *)(v16 + v12);
    v18 = (uint64_t *)((char *)v17 + *(int *)(v10 + 48));
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_213EF2EB0();
    sub_213EF2904();
    v19 = v29;
    v20 = v28;
    (*(void (**)(uint64_t, uint64_t))(v29 + 40))(v28, v29);
    sub_213EF2B8C();
    v21 = v31;
    *v17 = v30;
    v17[1] = v21;
    v30 = v27;
    v31 = v8;
    v32 = v26;
    v33 = v25;
    v34 = v24;
    sub_213E63C40((uint64_t)&v30, v20, v19, v18);
    v30 = v13;
    sub_213DB4548(v16);
    return v30;
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_213E07238((uint64_t)v6, v15);
  }
  return v13;
}

uint64_t sub_213E640D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RuleResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213E64114()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_213E64158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3E940;
  if (!qword_254D3E940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3DD08);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3E940);
  }
  return result;
}

double PhoneCallAbandonmentClassification.dismissalTimestamp.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t PhoneCallAbandonmentClassification.usoQuery.getter()
{
  return swift_retain();
}

uint64_t PhoneCallAbandonmentClassification.endTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PhoneCallAbandonmentClassification.referencedTurns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallAbandonmentClassification.referencedTurns.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PhoneCallAbandonmentClassification.referencedTurns.modify())()
{
  return nullsub_1;
}

uint64_t PhoneCallAbandonmentClassification.referencedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallAbandonmentClassification.referencedEvents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*PhoneCallAbandonmentClassification.referencedEvents.modify())()
{
  return nullsub_1;
}

uint64_t sub_213E64240()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E64248()
{
  return swift_retain();
}

uint64_t destroy for PhoneCallAbandonmentClassification()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PhoneCallAbandonmentClassification(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PhoneCallAbandonmentClassification(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PhoneCallAbandonmentClassification(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneCallAbandonmentClassification(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallAbandonmentClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallAbandonmentClassification()
{
  return &type metadata for PhoneCallAbandonmentClassification;
}

uint64_t AMPSongMetadata.Attributes.song.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AMPSongMetadata.Attributes.artistName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AMPSongMetadata.Attributes.albumName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AMPSongMetadata.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AMPSongMetadata.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall AMPSongMetadata.init(id:artistName:song:albumName:)(SiriPrivateLearningInference::AMPSongMetadata *__return_ptr retstr, Swift::String id, Swift::String_optional artistName, Swift::String_optional song, Swift::String_optional albumName)
{
  retstr->id = id;
  retstr->attributes.song = song;
  retstr->attributes.artistName = artistName;
  retstr->attributes.albumName = albumName;
}

uint64_t AMPSongMetadata.title.getter()
{
  sub_213EF2EB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  return 34;
}

uint64_t AMPSongMetadata.description.getter()
{
  sub_213EF2EB0();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  swift_bridgeObjectRetain();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t *AMPMetadataHelper.__allocating_init(mediaClient:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_213E654A4(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t *AMPMetadataHelper.init(mediaClient:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_213E652B0((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

uint64_t sub_213E6494C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_213E64964()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(_QWORD *@<X8>);
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  _QWORD *v56;

  v1 = *(_QWORD *)(v0 + 16);
  v54 = *(_QWORD *)(v1 + 16);
  if (v54)
  {
    v2 = (_QWORD *)sub_213DCB80C(MEMORY[0x24BEE4AF8]);
    v53 = v1 + 32;
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    while (1)
    {
      v5 = (uint64_t *)(v53 + 16 * v4);
      v6 = *v5;
      v7 = v5[1];
      v8 = (v7 & 0x2000000000000000) != 0 ? HIBYTE(v7) & 0xF : v6 & 0xFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain();
      if (v8)
      {
        v9 = 4 * v8;
        while (1)
        {
          v10 = sub_213EF28E0();
          if (sub_213EF2964() == 47 && v11 == 0xE100000000000000)
            break;
          v13 = sub_213EF3234();
          result = swift_bridgeObjectRelease();
          if ((v13 & 1) != 0)
            goto LABEL_16;
          if (v10 < 0x4000)
            goto LABEL_14;
        }
        result = swift_bridgeObjectRelease();
LABEL_16:
        if (v9 < v10 >> 14)
          goto LABEL_43;
        swift_bridgeObjectRetain();
        sub_213EF2988();
        v18 = v17;
        swift_bridgeObjectRelease();
        result = sub_213EF2D78();
        if ((v19 & 1) != 0)
          result = v18;
        if (v18 >> 14 < (unint64_t)result >> 14)
          goto LABEL_44;
        v20 = sub_213EF2D84();
        v22 = v21;
        v24 = v23;
        v26 = v25;
        swift_bridgeObjectRelease();
        v15 = MEMORY[0x2199C4344](v20, v22, v24, v26);
        v16 = v27;
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_14:
        swift_bridgeObjectRetain();
        v15 = v6;
        v16 = v7;
      }
      sub_213E65550((uint64_t)v3);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = sub_213DFA220(v15, v16);
      v31 = v2[2];
      v32 = (v29 & 1) == 0;
      result = v31 + v32;
      if (__OFADD__(v31, v32))
        break;
      v33 = v29;
      if (v2[3] >= result)
      {
        if (!isUniquelyReferenced_nonNull_native)
          sub_213E01E28();
      }
      else
      {
        sub_213DFED00(result, isUniquelyReferenced_nonNull_native);
        v34 = sub_213DFA220(v15, v16);
        if ((v33 & 1) != (v35 & 1))
          return sub_213EF3288();
        v30 = v34;
      }
      v56[4] = v2;
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
        v2[(v30 >> 6) + 8] |= 1 << v30;
        v36 = (uint64_t *)(v2[6] + 16 * v30);
        *v36 = v15;
        v36[1] = v16;
        *(_QWORD *)(v2[7] + 8 * v30) = MEMORY[0x24BEE4AF8];
        v37 = v2[2];
        v38 = v37 + 1;
        v39 = __OFADD__(v37, 1);
        result = swift_bridgeObjectRetain();
        if (v39)
          goto LABEL_42;
        v2[2] = v38;
      }
      v40 = v2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v41 = *(_QWORD **)(v40 + 8 * v30);
      v42 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v40 + 8 * v30) = v41;
      if ((v42 & 1) == 0)
      {
        v41 = sub_213DB553C(0, v41[2] + 1, 1, v41);
        *(_QWORD *)(v40 + 8 * v30) = v41;
      }
      v44 = v41[2];
      v43 = v41[3];
      if (v44 >= v43 >> 1)
      {
        v41 = sub_213DB553C((_QWORD *)(v43 > 1), v44 + 1, 1, v41);
        *(_QWORD *)(v40 + 8 * v30) = v41;
      }
      ++v4;
      v41[2] = v44 + 1;
      v45 = &v41[2 * v44];
      v45[4] = v6;
      v45[5] = v7;
      swift_bridgeObjectRelease();
      v3 = sub_213E65260;
      if (v4 == v54)
      {
        v46 = (_QWORD *)v56[3];
        swift_bridgeObjectRelease();
        v47 = v46[5];
        v48 = v46[6];
        __swift_project_boxed_opaque_existential_1(v46 + 2, v47);
        v49 = swift_bridgeObjectRetain();
        v50 = sub_213DF9E94(v49);
        v56[5] = v50;
        swift_bridgeObjectRelease();
        v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v48 + 8) + *(_QWORD *)(v48 + 8));
        v51 = (_QWORD *)swift_task_alloc();
        v56[6] = v51;
        *v51 = v56;
        v51[1] = sub_213E64E10;
        return v55(v50, v47, v48);
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
  else
  {
    v52 = sub_213DCB924(MEMORY[0x24BEE4AF8]);
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v52);
  }
  return result;
}

uint64_t sub_213E64E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_213E64E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  char v27;
  char v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 56);
  v3 = (_QWORD *)sub_213DCB924(MEMORY[0x24BEE4AF8]);
  v4 = *(_QWORD *)(v2 + 16);
  result = *(_QWORD *)(v1 + 56);
  if (!v4)
    goto LABEL_27;
  v6 = 0;
  v39 = v1;
  v7 = *(_QWORD *)(v1 + 32);
  v37 = *(_QWORD *)(v2 + 16);
  v38 = result + 32;
  v34 = v7;
  v35 = v2;
  while (1)
  {
    if (v6 >= *(_QWORD *)(v2 + 16))
      goto LABEL_30;
    if (!*(_QWORD *)(v7 + 16))
      goto LABEL_5;
    v8 = v2;
    v9 = (uint64_t *)(v38 + (v6 << 6));
    v11 = *v9;
    v10 = v9[1];
    v12 = v9[3];
    v13 = v9[5];
    v41 = v9[4];
    v42 = v9[2];
    v40 = v9[6];
    v46 = v9[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    v44 = v12;
    swift_bridgeObjectRetain();
    v45 = v13;
    swift_bridgeObjectRetain();
    v43 = v11;
    v14 = sub_213DFA220(v11, v10);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v39 + 32) + 56) + 8 * v14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
        break;
    }
    swift_bridgeObjectRelease();
    v2 = v8;
    v4 = v37;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
LABEL_5:
    if (++v6 == v4)
    {
      v1 = v39;
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(_QWORD *))(v1 + 8))(v3);
    }
  }
  v36 = v6;
  v18 = (uint64_t *)(v16 + 40);
  while (1)
  {
    v20 = *(v18 - 1);
    v21 = *v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = sub_213DFA220(v20, v21);
    v25 = v3[2];
    v26 = (v23 & 1) == 0;
    result = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v27 = v23;
    if (v3[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        result = (uint64_t)sub_213E01C14();
        if ((v27 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_213DFE968(result, isUniquelyReferenced_nonNull_native);
      result = sub_213DFA220(v20, v21);
      if ((v27 & 1) != (v28 & 1))
        return sub_213EF3288();
      v24 = result;
      if ((v27 & 1) != 0)
      {
LABEL_11:
        v19 = (uint64_t *)(v3[7] + (v24 << 6));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v19 = v43;
        v19[1] = v10;
        v19[2] = v42;
        v19[3] = v44;
        v19[4] = v41;
        v19[5] = v45;
        v19[6] = v40;
        v19[7] = v46;
        goto LABEL_12;
      }
    }
    v3[(v24 >> 6) + 8] |= 1 << v24;
    v29 = (uint64_t *)(v3[6] + 16 * v24);
    *v29 = v20;
    v29[1] = v21;
    v30 = (uint64_t *)(v3[7] + (v24 << 6));
    *v30 = v43;
    v30[1] = v10;
    v30[2] = v42;
    v30[3] = v44;
    v30[4] = v41;
    v30[5] = v45;
    v30[6] = v40;
    v30[7] = v46;
    v31 = v3[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_29;
    v3[2] = v33;
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 += 2;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      v7 = v34;
      v2 = v35;
      v6 = v36;
      v4 = v37;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_213E65224()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213E65260(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t AMPMetadataHelper.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t AMPMetadataHelper.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t *sub_213E652B0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;

  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  return a2;
}

uint64_t _s28SiriPrivateLearningInference15AMPSongMetadataV10AttributesV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_213EF3234(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11)
        return 0;
      if (v4 != v9 || v6 != v11)
      {
        v15 = sub_213EF3234();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_213EF3234() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s28SiriPrivateLearningInference15AMPSongMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v9;
  char v10;
  char v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  _OWORD v20[3];

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_6;
  v17 = *(_OWORD *)(a1 + 32);
  v18 = *(_OWORD *)(a1 + 16);
  v15 = *(_OWORD *)(a2 + 16);
  v16 = *(_OWORD *)(a1 + 48);
  v13 = *(_OWORD *)(a2 + 48);
  v14 = *(_OWORD *)(a2 + 32);
  v9 = sub_213EF3234();
  v7 = v13;
  v6 = v14;
  v5 = v15;
  v4 = v16;
  v3 = v17;
  v2 = v18;
  v10 = v9;
  v11 = 0;
  if ((v10 & 1) != 0)
  {
LABEL_6:
    v20[0] = v2;
    v20[1] = v3;
    v20[2] = v4;
    v19[0] = v5;
    v19[1] = v6;
    v19[2] = v7;
    v11 = _s28SiriPrivateLearningInference15AMPSongMetadataV10AttributesV2eeoiySbAE_AEtFZ_0(v20, v19);
  }
  return v11 & 1;
}

uint64_t *sub_213E654A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AMPMetadataHelper();
  v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  return v10;
}

uint64_t sub_213E65550(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t destroy for AMPSongMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AMPSongMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AMPSongMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for AMPSongMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AMPSongMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AMPSongMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AMPSongMetadata()
{
  return &type metadata for AMPSongMetadata;
}

uint64_t destroy for AMPSongMetadata.Attributes()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AMPSongMetadata.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AMPSongMetadata.Attributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for AMPSongMetadata.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AMPSongMetadata.Attributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AMPSongMetadata.Attributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AMPSongMetadata.Attributes()
{
  return &type metadata for AMPSongMetadata.Attributes;
}

uint64_t dispatch thunk of SongMetadataClient.searchSongs(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213E65B6C;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for AMPMetadataHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for AMPMetadataHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AMPMetadataHelper.__allocating_init(mediaClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AMPMetadataHelper.getSongMetadata(identifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213E65B1C;
  return v6(a1);
}

uint64_t sub_213E65B1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

SiriPrivateLearningInference::MessagesGroundTruthSource_optional __swiftcall MessagesGroundTruthSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::MessagesGroundTruthSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static MessagesGroundTruthSource.allCases.getter()
{
  return &unk_24D100970;
}

unint64_t MessagesGroundTruthSource.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_213E65C30()
{
  return sub_213ED6774();
}

uint64_t sub_213E65C38()
{
  return sub_213E2AB80();
}

uint64_t sub_213E65C40()
{
  return sub_213E2B1FC();
}

SiriPrivateLearningInference::MessagesGroundTruthSource_optional sub_213E65C48(Swift::String *a1)
{
  return MessagesGroundTruthSource.init(rawValue:)(*a1);
}

unint64_t sub_213E65C54@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = MessagesGroundTruthSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E65C78()
{
  sub_213E676D8();
  return sub_213EF2A18();
}

uint64_t sub_213E65CD4()
{
  sub_213E676D8();
  return sub_213EF2A0C();
}

uint64_t sub_213E65D20(char *a1, unsigned __int8 *a2)
{
  return sub_213E29A6C(*a1, *a2);
}

void sub_213E65D2C(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D100998;
}

uint64_t MessagesGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MessagesGroundTruth.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MessagesGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for MessagesGroundTruth()
{
  uint64_t result;

  result = qword_253F04B50;
  if (!qword_253F04B50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MessagesGroundTruth.contactUSOPerson.getter()
{
  type metadata accessor for MessagesGroundTruth();
  return swift_retain();
}

uint64_t MessagesGroundTruth.originalContactReference.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessagesGroundTruth() + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_213E05FBC(v4, v5);
}

uint64_t MessagesGroundTruth.correctedContactReference.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MessagesGroundTruth() + 32));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E65E84(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E65EAC + 4 * byte_213EFCA60[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_213E65EAC()
{
  return 0x656372756F73;
}

unint64_t sub_213E65EC0()
{
  return 0xD000000000000010;
}

unint64_t sub_213E65EDC()
{
  return 0xD000000000000018;
}

uint64_t sub_213E65F18()
{
  unsigned __int8 *v0;

  return sub_213E65E84(*v0);
}

uint64_t sub_213E65F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E674F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E65F44()
{
  sub_213E669B0();
  return sub_213EF3354();
}

uint64_t sub_213E65F6C()
{
  sub_213E669B0();
  return sub_213EF3360();
}

uint64_t MessagesGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EA18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E669B0();
  sub_213EF3348();
  LOBYTE(v15) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for MessagesGroundTruth();
    LOBYTE(v15) = *(_BYTE *)(v3 + v9[5]);
    v17 = 1;
    sub_213E27834();
    sub_213EF31BC();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + v9[6]);
    v17 = 2;
    sub_213EF1E30();
    sub_213DB0DB4(&qword_254D3BBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    v10 = (__int128 *)(v3 + v9[7]);
    v11 = v10[1];
    v15 = *v10;
    v16 = v11;
    v17 = 3;
    sub_213E626B0();
    sub_213EF3180();
    v12 = v3 + v9[8];
    v13 = *(_QWORD *)(v12 + 8);
    *(_QWORD *)&v15 = *(_QWORD *)v12;
    *((_QWORD *)&v15 + 1) = v13;
    v16 = *(_OWORD *)(v12 + 16);
    v17 = 4;
    sub_213EF31BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MessagesGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v20 = a2;
  v21 = sub_213EF1D64();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EA28);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for MessagesGroundTruth();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E669B0();
  v24 = v7;
  v11 = (uint64_t)v25;
  sub_213EF333C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v25 = a1;
  v12 = (uint64_t)v10;
  LOBYTE(v26) = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v22;
  v14 = v21;
  sub_213EF3144();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v23, v14);
  v28 = 1;
  sub_213E27988();
  sub_213EF3144();
  *(_BYTE *)(v12 + v8[5]) = v26;
  sub_213EF1E30();
  v28 = 2;
  sub_213DB0DB4(&qword_254D3E8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  *(_QWORD *)(v12 + v8[6]) = v26;
  v28 = 3;
  sub_213E62738();
  sub_213EF3108();
  v15 = (_OWORD *)(v12 + v8[7]);
  v16 = v27;
  *v15 = v26;
  v15[1] = v16;
  v28 = 4;
  sub_213EF3144();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v13);
  v17 = *((_QWORD *)&v26 + 1);
  v18 = v12 + v8[8];
  *(_QWORD *)v18 = v26;
  *(_QWORD *)(v18 + 8) = v17;
  *(_OWORD *)(v18 + 16) = v27;
  sub_213E669F4(v12, v20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  return sub_213E66A38(v12);
}

uint64_t sub_213E66614@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MessagesGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213E66628(_QWORD *a1)
{
  return MessagesGroundTruth.encode(to:)(a1);
}

uint64_t _s28SiriPrivateLearningInference19MessagesGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for MessagesGroundTruth();
  v5 = v4[5];
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = *(unsigned __int8 *)(a2 + v5);
  v8 = 0x8000000213F05540;
  v9 = 0x8000000213F05560;
  if (v6 != 1)
    v9 = 0x8000000213F05580;
  if (v6)
    v10 = 0xD000000000000011;
  else
    v10 = 0xD00000000000001BLL;
  if (v6)
    v11 = v9;
  else
    v11 = 0x8000000213F05540;
  if (v7)
  {
    if (v7 == 1)
      v8 = 0x8000000213F05560;
    else
      v8 = 0x8000000213F05580;
    if (v10 != 0xD000000000000011)
      goto LABEL_19;
  }
  else if (v10 != 0xD00000000000001BLL)
  {
    goto LABEL_19;
  }
  if (v11 == v8)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
LABEL_19:
  v12 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v12 & 1) == 0)
    return result;
LABEL_20:
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v14 = sub_213EF3330();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  if (v14 != sub_213EF3330())
    return 0;
  v15 = v4[7];
  v16 = *(_QWORD *)(a1 + v15);
  v17 = *(_QWORD *)(a1 + v15 + 8);
  v18 = *(_QWORD *)(a1 + v15 + 24);
  v35 = *(_QWORD *)(a1 + v15 + 16);
  v19 = (uint64_t *)(a2 + v15);
  v21 = *v19;
  v20 = v19[1];
  v23 = v19[2];
  v22 = v19[3];
  if (!v17)
  {
    if (!v20)
      goto LABEL_45;
    goto LABEL_41;
  }
  if (!v20)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_41:
    sub_213E05FBC(v21, v20);
    sub_213DB1874(v16, v17);
    sub_213DB1874(v21, v20);
    return 0;
  }
  if (v16 != v21 || v17 != v20)
  {
    v24 = sub_213EF3234();
    result = 0;
    if ((v24 & 1) == 0)
      return result;
  }
  if (!v18)
  {
    if (!v22)
      goto LABEL_45;
    return 0;
  }
  if (!v22)
    return 0;
  if (v35 == v23 && v18 == v22 || (v25 = sub_213EF3234(), result = 0, (v25 & 1) != 0))
  {
LABEL_45:
    v26 = v4[8];
    v27 = a1 + v26;
    v28 = *(_QWORD *)(a1 + v26);
    v29 = *(_QWORD *)(a1 + v26 + 8);
    v31 = *(_QWORD *)(a1 + v26 + 16);
    v30 = *(_QWORD *)(v27 + 24);
    v32 = (_QWORD *)(a2 + v26);
    v34 = v32[2];
    v33 = v32[3];
    if (v28 == *v32 && v29 == v32[1] || (sub_213EF3234() & 1) != 0)
    {
      if (v30)
      {
        if (v33 && (v31 == v34 && v30 == v33 || (sub_213EF3234() & 1) != 0))
          return 1;
      }
      else if (!v33)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_213E669B0()
{
  unint64_t result;

  result = qword_254D3EA20;
  if (!qword_254D3EA20)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFCDE4, &type metadata for MessagesGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3EA20);
  }
  return result;
}

uint64_t sub_213E669F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessagesGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E66A38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessagesGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213E66A78()
{
  unint64_t result;

  result = qword_254D3EA30;
  if (!qword_254D3EA30)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MessagesGroundTruthSource, &type metadata for MessagesGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3EA30);
  }
  return result;
}

unint64_t sub_213E66AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3EA38;
  if (!qword_254D3EA38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3EA40);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3EA38);
  }
  return result;
}

uint64_t sub_213E66B0C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213DB0DB4(&qword_253F04B40, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&protocol conformance descriptor for MessagesGroundTruth);
  result = sub_213DB0DB4(&qword_253F04B38, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&protocol conformance descriptor for MessagesGroundTruth);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for MessagesGroundTruthSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E66BB4 + 4 * byte_213EFCA6A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E66BE8 + 4 * byte_213EFCA65[v4]))();
}

uint64_t sub_213E66BE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E66BF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E66BF8);
  return result;
}

uint64_t sub_213E66C04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E66C0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E66C10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E66C18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagesGroundTruthSource()
{
  return &type metadata for MessagesGroundTruthSource;
}

_QWORD *initializeBufferWithCopyOfBuffer for MessagesGroundTruth(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = *(_QWORD *)((char *)a2 + v9 + 8);
    swift_retain();
    if (v12)
    {
      *v10 = *v11;
      v10[1] = v12;
      v13 = v11[2];
      v14 = v11[3];
      v10[2] = v13;
      v10[3] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v16;
    }
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v19[3];
    v18[2] = v19[2];
    v18[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagesGroundTruth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 8);
  swift_retain();
  if (v11)
  {
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[2];
    v13 = v10[3];
    v9[2] = v12;
    v9[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
  }
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v17[3];
  v16[2] = v17[2];
  v16[3] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      v8[3] = v9[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_213E67008((uint64_t)v8);
      v12 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v12;
    }
  }
  else if (v11)
  {
    *v8 = *v9;
    v8[1] = v9[1];
    v8[2] = v9[2];
    v8[3] = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v13;
  }
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = a2 + v14;
  *v15 = *(_QWORD *)(a2 + v14);
  v15[1] = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = *(_QWORD *)(v16 + 16);
  v15[3] = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213E67008(uint64_t a1)
{
  destroy for Storefront();
  return a1;
}

uint64_t initializeWithTake for MessagesGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_OWORD *)(a1 + v9);
  v14 = (_OWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t assignWithTake for MessagesGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  if (!*(_QWORD *)(a1 + v8 + 8))
    goto LABEL_5;
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11)
  {
    sub_213E67008(v9);
LABEL_5:
    v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v13;
    goto LABEL_6;
  }
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E671BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E67244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_213E672BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MessagesGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213E6739C + 4 * byte_213EFCA74[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213E673D0 + 4 * byte_213EFCA6F[v4]))();
}

uint64_t sub_213E673D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E673D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E673E0);
  return result;
}

uint64_t sub_213E673EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E673F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213E673F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E67400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagesGroundTruth.CodingKeys()
{
  return &type metadata for MessagesGroundTruth.CodingKeys;
}

unint64_t sub_213E67420()
{
  unint64_t result;

  result = qword_254D3EA48;
  if (!qword_254D3EA48)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFCDBC, &type metadata for MessagesGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3EA48);
  }
  return result;
}

unint64_t sub_213E67468()
{
  unint64_t result;

  result = qword_254D3EA50;
  if (!qword_254D3EA50)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFCD2C, &type metadata for MessagesGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3EA50);
  }
  return result;
}

unint64_t sub_213E674B0()
{
  unint64_t result;

  result = qword_254D3EA58;
  if (!qword_254D3EA58)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFCD54, &type metadata for MessagesGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3EA58);
  }
  return result;
}

uint64_t sub_213E674F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000213F08A50 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000213F08A70 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000213F08A90)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_213E676D8()
{
  unint64_t result;

  result = qword_254D3EA60;
  if (!qword_254D3EA60)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MessagesGroundTruthSource, &type metadata for MessagesGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3EA60);
  }
  return result;
}

uint64_t static UsoMediaUtils.createUsoMediaWithName(entityName:)()
{
  uint64_t v0;
  uint64_t v2;

  sub_213EF204C();
  swift_allocObject();
  v0 = sub_213EF2040();
  sub_213EF2034();
  MEMORY[0x2199C3918](v0);
  sub_213EF1ED8();
  sub_213EF1E9C();
  swift_release();
  swift_release();
  return v2;
}

uint64_t static UsoMediaUtils.createUsoMediaWithNameAndDuration(entityName:duration:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD v6[2];

  v0 = sub_213EF1E90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EF1FC8();
  swift_allocObject();
  sub_213EF1FBC();
  sub_213EF1FB0();
  sub_213EF201C();
  swift_allocObject();
  sub_213EF2010();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEA0860], v0);
  sub_213EF2004();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_213EF20D0();
  swift_allocObject();
  sub_213EF20C4();
  swift_retain();
  sub_213EF20AC();
  swift_release();
  swift_retain();
  sub_213EF1F68();
  swift_release();
  sub_213EF1FF8();
  swift_allocObject();
  sub_213EF1FEC();
  swift_retain();
  sub_213EF1FE0();
  swift_release();
  sub_213EF204C();
  swift_allocObject();
  v4 = sub_213EF2040();
  sub_213EF2034();
  swift_retain();
  sub_213EF2028();
  swift_release();
  MEMORY[0x2199C3918](v4);
  sub_213EF1ED8();
  sub_213EF1E9C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v6[1];
}

ValueMetadata *type metadata accessor for UsoMediaUtils()
{
  return &type metadata for UsoMediaUtils;
}

uint64_t sub_213E67A04()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;

  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v0 = sub_213EF2EE0();
  swift_getObjectType();
  result = sub_213EF2EE0();
  if (v0 == result)
  {
    v2 = sub_213EF2EEC();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if ((v2 & 1) != 0)
    {
      return 0;
    }
    else
    {
      swift_unknownObjectRetain();
      sub_213EF324C();
      swift_unknownObjectRelease();
      sub_213EF303C();
      swift_unknownObjectRelease();
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator.init(asyncSequence:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v20 - v12;
  v15 = type metadata accessor for InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator(0, a2, a3, v14);
  v16 = a4 + *(int *)(v15 + 36);
  v17 = sub_213EF2184();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_BYTE *)(a4 + *(int *)(v15 + 40)) = 0;
  v18 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21, a2);
  sub_213EF2B44();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v13, AssociatedTypeWitness);
}

uint64_t type metadata accessor for InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator);
}

uint64_t InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04858);
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v3[11] = swift_task_alloc();
  v5 = sub_213EF1D64();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v6 = sub_213EF2184();
  v3[21] = v6;
  v3[22] = *(_QWORD *)(v6 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04848);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213E67E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(int *)(*(_QWORD *)(v0 + 48) + 40);
  *(_DWORD *)(v0 + 360) = v2;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 56))(*(_QWORD *)(v0 + 40), 1, 1, *(_QWORD *)(v0 + 64));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  if ((sub_213EF2B38() & 1) != 0)
  {
    *(_BYTE *)(v1 + v2) = 1;
    sub_213EF2B14();
    sub_213DB0DB4(qword_254D3EA70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    sub_213EF276C();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  *(_QWORD *)(v0 + 256) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 264) = swift_getAssociatedConformanceWitness();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v5;
  *v5 = v0;
  v5[1] = sub_213E6816C;
  return sub_213EF2B20();
}

uint64_t sub_213E6816C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E681D0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 48);
  if (v2(*(_QWORD *)(v0 + 248), 1, v1) == 1)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 56) + *(int *)(v0 + 360)) = 1;
    v1 = *(_QWORD *)(v0 + 168);
  }
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(int *)(*(_QWORD *)(v0 + 48) + 36);
  *(_DWORD *)(v0 + 364) = v5;
  v6 = v4 + v5;
  sub_213DCC3D8(v4 + v5, v3, &qword_253F04848);
  if (v2(v3, 1, v1) == 1)
  {
    sub_213DAFEC4(*(_QWORD *)(v0 + 240), &qword_253F04848);
    goto LABEL_26;
  }
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 32);
  *(_QWORD *)(v0 + 288) = v12;
  v12(v10, v7, v11);
  sub_213DCC3D8(v8, v9, &qword_253F04848);
  v13 = v2(v9, 1, v11);
  v14 = *(_QWORD *)(v0 + 232);
  if (v13 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 168));
    sub_213DAFEC4(v14, &qword_253F04848);
    goto LABEL_26;
  }
  v12(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 168));
  sub_213EF2178();
  v15 = sub_213E67A04();
  swift_release();
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 104);
  v85 = v6;
  if (v15)
  {
    sub_213EF2634();
    swift_release();
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v20 = v16;
    v21 = 0;
  }
  else
  {
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = 1;
  }
  v88 = v19;
  v19(v20, v21, 1, v17);
  sub_213EF2178();
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v22 = sub_213EF2EE0();
  swift_getObjectType();
  if (v22 != sub_213EF2EE0())
  {
    __break(1u);
LABEL_37:
    swift_once();
LABEL_23:
    v49 = sub_213EF2724();
    __swift_project_value_buffer(v49, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v50 = sub_213EF270C();
    v51 = sub_213EF2C94();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = *(_QWORD *)(v0 + 120);
      v84 = *(_QWORD *)(v0 + 104);
      v86 = *(_QWORD *)(v0 + 96);
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v90 = v54;
      *(_DWORD *)v53 = 136315138;
      sub_213EF2634();
      v55 = sub_213EF1D10();
      v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v52, v86);
      *(_QWORD *)(v0 + 32) = sub_213DB0570(v55, v57, &v90);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v50, v51, "[CombinedSessionAsyncSequence] Turns with the same id: %s detected, merging related conversations", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v54, -1, -1);
      MEMORY[0x2199C53C4](v53, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *(_QWORD *)(v0 + 304) = sub_213EF2178();
    *(_QWORD *)(v0 + 312) = sub_213EF2178();
    sub_213EF2634();
    v87 = sub_213EF2628();
    swift_getObjectType();
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v76 = sub_213EF2EE0();
    swift_getObjectType();
    if (v76 == sub_213EF2EE0())
    {
      v77 = sub_213EF2EEC();
      swift_unknownObjectRelease();
      if ((v77 & 1) != 0)
      {
        swift_release();
        swift_unknownObjectRelease();
        v78 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        sub_213EF303C();
        swift_release();
        swift_unknownObjectRelease();
        v78 = sub_213EF2628();
        swift_release();
      }
      v90 = v87;
      sub_213DB4ED0(v78);
      sub_213EF261C();
      sub_213EF264C();
      swift_allocObject();
      *(_QWORD *)(v0 + 320) = sub_213EF2640();
      swift_retain();
      sub_213EF3030();
      swift_release();
      v79 = sub_213EF2FE8();
      swift_release();
      v90 = v79;
      swift_retain();
      v80 = swift_retain();
      MEMORY[0x2199C44C4](v80);
      if (*(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_35;
    }
    else
    {
      __break(1u);
    }
    sub_213EF2A78();
LABEL_35:
    sub_213EF2AB4();
    sub_213EF2A54();
    v81 = v90;
    swift_release();
    swift_retain();
    sub_213EF2FD0();
    swift_release();
    v82 = sub_213EF2FE8();
    swift_release();
    v90 = v81;
    sub_213DB4C9C(v82);
    sub_213EF2190();
    v83 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v83;
    *v83 = v0;
    v83[1] = sub_213E68D14;
    return sub_213EF2B20();
  }
  v23 = sub_213EF2EEC();
  swift_unknownObjectRelease();
  v24 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 96);
  if ((v23 & 1) != 0)
  {
    swift_release();
    swift_unknownObjectRelease();
    v26 = 1;
  }
  else
  {
    sub_213EF303C();
    swift_release();
    swift_unknownObjectRelease();
    sub_213EF2634();
    swift_release();
    v26 = 0;
  }
  v88(v24, v26, 1, v25);
  v27 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 96);
  v30 = *(_QWORD *)(v0 + 104);
  v31 = v28 + *(int *)(*(_QWORD *)(v0 + 128) + 48);
  sub_213DCC3D8(*(_QWORD *)(v0 + 160), v28, &qword_253F04828);
  sub_213DCC3D8(v27, v31, &qword_253F04828);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v32(v28, 1, v29) != 1)
  {
    v35 = *(_QWORD *)(v0 + 96);
    sub_213DCC3D8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), &qword_253F04828);
    v36 = v32(v31, 1, v35);
    v38 = *(_QWORD *)(v0 + 152);
    v37 = *(_QWORD *)(v0 + 160);
    v39 = *(_QWORD *)(v0 + 144);
    if (v36 != 1)
    {
      v42 = *(_QWORD *)(v0 + 136);
      v43 = *(_QWORD *)(v0 + 120);
      v44 = *(_QWORD *)(v0 + 96);
      v45 = *(_QWORD *)(v0 + 104);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v31, v44);
      sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v46 = sub_213EF2838();
      v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      v47(v43, v44);
      sub_213DAFEC4(v38, &qword_253F04828);
      sub_213DAFEC4(v37, &qword_253F04828);
      v47(v39, v44);
      sub_213DAFEC4(v42, &qword_253F04828);
      v6 = v85;
      if ((v46 & 1) == 0)
        goto LABEL_25;
      goto LABEL_21;
    }
    v40 = *(_QWORD *)(v0 + 96);
    v41 = *(_QWORD *)(v0 + 104);
    sub_213DAFEC4(*(_QWORD *)(v0 + 152), &qword_253F04828);
    sub_213DAFEC4(v37, &qword_253F04828);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
LABEL_19:
    sub_213DAFEC4(*(_QWORD *)(v0 + 136), &qword_253F04838);
    v6 = v85;
    goto LABEL_25;
  }
  v33 = *(_QWORD *)(v0 + 160);
  v34 = *(_QWORD *)(v0 + 96);
  sub_213DAFEC4(*(_QWORD *)(v0 + 152), &qword_253F04828);
  sub_213DAFEC4(v33, &qword_253F04828);
  if (v32(v31, 1, v34) != 1)
    goto LABEL_19;
  sub_213DAFEC4(*(_QWORD *)(v0 + 136), &qword_253F04828);
  v6 = v85;
LABEL_21:
  sub_213EF2178();
  v48 = sub_213E67A04();
  *(_QWORD *)(v0 + 296) = v48;
  swift_release();
  if (v48)
  {
    if (qword_253F04A88 == -1)
      goto LABEL_23;
    goto LABEL_37;
  }
LABEL_25:
  v58 = *(_QWORD *)(v0 + 208);
  v59 = *(_QWORD *)(v0 + 168);
  v60 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8);
  v60(*(_QWORD *)(v0 + 200), v59);
  v60(v58, v59);
LABEL_26:
  v61 = *(_QWORD *)(v0 + 216);
  v62 = *(_QWORD *)(v0 + 168);
  sub_213DCC3D8(v6, v61, &qword_253F04848);
  v63 = v2(v61, 1, v62);
  v64 = *(_QWORD *)(v0 + 248);
  if (v63 == 1)
  {
    sub_213DAFEC4(*(_QWORD *)(v0 + 216), &qword_253F04848);
    sub_213E694B4(v64, v6);
    v65 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v65;
    *v65 = v0;
    v65[1] = sub_213E68F6C;
    return InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator.next()(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    v67 = *(_QWORD *)(v0 + 184);
    v68 = *(_QWORD *)(v0 + 168);
    v69 = *(_QWORD *)(v0 + 80);
    v89 = *(_QWORD *)(v0 + 72);
    v70 = v6;
    v71 = *(_QWORD *)(v0 + 64);
    v72 = *(_QWORD *)(v0 + 40);
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 32);
    v73(v67, *(_QWORD *)(v0 + 216), v68);
    v74 = v69 + *(int *)(v71 + 48);
    v73(v69, v67, v68);
    sub_213DCC3D8(v64, v74, &qword_253F04848);
    sub_213E694FC(v64, v70);
    v75 = v72 + *(int *)(v71 + 48);
    v73(v72, v69, v68);
    sub_213E69544(v74, v75);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v72, 0, 1, v71);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_213E68D14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E68D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v1 = *(int *)(v0 + 364);
  v2 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 288);
  v5 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = v5 + v1;
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v2, v4);
  v8(v11, v4);
  sub_213DAFEC4(v12, &qword_253F04848);
  sub_213E694B4(v14, v7);
  v9 = v6 + *(int *)(v13 + 48);
  v17(v6, v15, v4);
  sub_213E69544(v14, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v6, 0, 1, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E68F6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E68FD0()
{
  uint64_t v0;

  sub_213DAFEC4(*(_QWORD *)(v0 + 248), &qword_253F04848);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E690F0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E69208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(v3, v5);
  v7(v2, v5);
  sub_213DAFEC4(v1, &qword_253F04848);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E6938C()
{
  uint64_t v0;

  sub_213DAFEC4(*(_QWORD *)(v0 + 248), &qword_253F04848);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E694B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E694FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E69544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E6958C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213E4141C;
  return InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator.next()(a1, a2);
}

uint64_t sub_213E695EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_213E69684;
  return sub_213EF2B2C();
}

uint64_t sub_213E69684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t InferenceCombinedSessionAsyncSequence.init(asyncSequence:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t InferenceCombinedSessionAsyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  return InferenceCombinedSessionAsyncSequence.InferenceCombinedSessionAsyncSequenceIterator.init(asyncSequence:)((uint64_t)v6, v4, *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_213E6977C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  InferenceCombinedSessionAsyncSequence.makeAsyncIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t AsyncSequence<>.windowSquished()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_213E6982C()
{
  return MEMORY[0x24BEE3F20];
}

void sub_213E69838()
{
  JUMPOUT(0x2199C52D4);
}

uint64_t sub_213E69848()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_213E698B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_213E69924(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_213E69934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_213E69964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_213E69994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_213E699C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_213E699F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_213E69AA4 + 4 * byte_213EFCE70[(v7 - 1)]))();
}

void sub_213E69AF4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for InferenceCombinedSessionAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InferenceCombinedSessionAsyncSequence);
}

void sub_213E69CB0()
{
  unint64_t v0;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  if (v0 <= 0x3F)
  {
    sub_213E6A8C0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_213E69D50(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_213EF2184();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  v12 = (v6 + v10) & ~v10;
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  v14 = v13 + v12 + 1;
  v15 = *(_DWORD *)(v5 + 80) | v9;
  v16 = (*(_BYTE *)(v5 + 80) | v9);
  v17 = v15 & 0x100000;
  if (v16 > 7 || v17 != 0 || v14 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    v21 = v7;
    v22 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v23 = (const void *)(((unint64_t)a2 + v11) & v22);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v23, 1, v21))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v22), v23, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v22, v23, v21);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v11) & v22, 0, 1, v21);
    }
    *(_BYTE *)(v13 + (((unint64_t)a1 + v11) & v22)) = *((_BYTE *)v23 + v13);
  }
  return a1;
}

uint64_t sub_213E69EB4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_213EF2184();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_213E69F64(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_213EF2184();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  *((_BYTE *)v11 + v16) = *((_BYTE *)v12 + v16);
  return a1;
}

uint64_t sub_213E6A074(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_213EF2184();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  *((_BYTE *)v11 + v17) = *((_BYTE *)v12 + v17);
  return a1;
}

uint64_t sub_213E6A1D0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_213EF2184();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  *((_BYTE *)v11 + v16) = *((_BYTE *)v12 + v16);
  return a1;
}

uint64_t sub_213E6A2E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_213EF2184();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  *((_BYTE *)v11 + v17) = *((_BYTE *)v12 + v17);
  return a1;
}

uint64_t sub_213E6A43C(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(sub_213EF2184() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (v10 <= 0xFE)
    v10 = 254;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  if (a2 > v10)
  {
    v14 = v11 + (v13 & ~v12) + 1;
    v15 = 8 * v14;
    if (v14 > 3)
      goto LABEL_14;
    v17 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v17 >= 2)
    {
LABEL_14:
      v16 = *(unsigned __int8 *)(a1 + v14);
      if (!*(_BYTE *)(a1 + v14))
        goto LABEL_30;
LABEL_21:
      v18 = (v16 - 1) << v15;
      if (v14 > 3)
        v18 = 0;
      if ((_DWORD)v11 + (v13 & ~(_DWORD)v12) != -1)
      {
        if (v14 <= 3)
          v19 = v11 + (v13 & ~(_DWORD)v12) + 1;
        else
          v19 = 4;
        __asm { BR              X12 }
      }
      v24 = v10 + v18;
      return (v24 + 1);
    }
  }
LABEL_30:
  if ((_DWORD)v6 == v10)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
  v21 = (v13 + a1) & ~v12;
  if (v9 != v10)
  {
    v23 = *(unsigned __int8 *)(v21 + v11);
    if (v23 < 2)
      return 0;
    v24 = (v23 + 2147483646) & 0x7FFFFFFF;
    return (v24 + 1);
  }
  if (v8 < 2)
    return 0;
  v22 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v21);
  if (v22 >= 2)
    return v22 - 1;
  else
    return 0;
}

void sub_213E6A648(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0;
  v9 = *(_QWORD *)(sub_213EF2184() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (v12 <= 0xFE)
    v13 = 254;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v9 + 80);
  v16 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v16;
  v15 = *(_QWORD *)(v6 + 64) + v14;
  v17 = v16 + (v15 & ~(_DWORD)v14) + 1;
  if (a3 > v13)
  {
    if (v17 > 3)
    {
      v8 = 1u;
      if (v13 >= a2)
LABEL_27:
        __asm { BR              X16 }
LABEL_20:
      v19 = ~v13 + a2;
      if (v17 < 4)
      {
        if ((_DWORD)v16 + (v15 & ~(_DWORD)v14) != -1)
        {
          v20 = v19 & ~(-1 << (8 * v17));
          bzero(a1, v16 + (v15 & ~v14) + 1);
          if (v17 == 3)
          {
            *(_WORD *)a1 = v20;
            a1[2] = BYTE2(v20);
          }
          else if (v17 == 2)
          {
            *(_WORD *)a1 = v20;
          }
          else
          {
            *a1 = v20;
          }
        }
      }
      else
      {
        bzero(a1, v16 + (v15 & ~v14) + 1);
        *(_DWORD *)a1 = v19;
      }
      __asm { BR              X10 }
    }
    v18 = ((a3 - v13 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v18))
    {
      v8 = 4u;
      if (v13 >= a2)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v18 >= 0x100)
      v8 = 2;
    else
      v8 = v18 > 1;
  }
  if (v13 >= a2)
    goto LABEL_27;
  goto LABEL_20;
}

void sub_213E6A890()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_213E6A898()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_213E6A8C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F04850)
  {
    sub_213EF2184();
    v0 = sub_213EF2D6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F04850);
  }
}

uint64_t sub_213E6A914(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v4 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v17 = v1;
    v21 = MEMORY[0x24BEE4AF8];
    sub_213DCD540(0, v7, 0);
    v8 = v21;
    v9 = (int *)type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary();
    v10 = *((_QWORD *)v9 - 1);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v20 = *(_QWORD *)(v10 + 72);
    v12 = sub_213EF1D64();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v19 = v12;
    do
    {
      v18(v6, v11, v19);
      sub_213DCC3D8(v11 + v9[5], (uint64_t)&v6[v3[5]], &qword_253F04828);
      v13 = *(_BYTE *)(v11 + v9[7]);
      v6[v3[6]] = *(_BYTE *)(v11 + v9[6]);
      v6[v3[7]] = v13;
      v21 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_213DCD540(v14 > 1, v15 + 1, 1);
        v8 = v21;
      }
      *(_QWORD *)(v8 + 16) = v15 + 1;
      sub_213DBB430((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      v11 += v20;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_213E6AAC8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_213EF1D10();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_213DCD0C8(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_213E6ABC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = *v2;
    if (*v2)
    {
      v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_213DB553C(0, v3[2] + 1, 1, v3);
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
        v3 = sub_213DB553C((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
      v3[2] = v8 + 1;
      v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_213E6ACC4()
{
  uint64_t result;

  type metadata accessor for MessagesSuggestionOutcomeExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06E78);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06E58 = 91;
  unk_253F06E60 = 0xE100000000000000;
  return result;
}

uint64_t MessagesSuggestionOutcomeExtractor.__allocating_init(picsStore:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_213DB0BF0(a1, v2 + 16);
  return v2;
}

uint64_t MessagesSuggestionOutcomeExtractor.init(picsStore:)(__int128 *a1)
{
  uint64_t v1;

  sub_213DB0BF0(a1, v1 + 16);
  return v1;
}

uint64_t sub_213E6ADA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  unint64_t v48;
  const char *v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _QWORD v95[3];
  __int128 v96;
  uint64_t v97;
  _OWORD v98[2];
  uint64_t v99;
  uint64_t v100;

  v84 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v83 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v82 = (uint64_t *)((char *)&v79 - v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EntityPromptClassification();
  v88 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v91 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v87 = (uint64_t)&v79 - v13;
  v14 = type metadata accessor for FeaturisedTurn(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v80 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v89 = (uint64_t)&v79 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v79 - v20;
  v22 = MEMORY[0x24BEE4AF8];
  v100 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v85 = a1;
  v93 = v14;
  v81 = v15;
  v92 = v23;
  if (v23)
  {
    v24 = 0;
    v25 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v94 = *(_QWORD *)(v15 + 72);
    v86 = v25;
    v90 = a1 + v25;
    v26 = &qword_253F06970;
    while (1)
    {
      v27 = v26;
      sub_213DCA7E4(v90 + v94 * v24, (uint64_t)v21, type metadata accessor for FeaturisedTurn);
      v28 = *(_QWORD *)&v21[*(int *)(v14 + 24)];
      v29 = *(_QWORD *)(v28 + 16);
      if (v29)
      {
        v30 = v28 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_213DAFDFC(v30, (uint64_t)&v96);
          sub_213DAFDFC((uint64_t)&v96, (uint64_t)v95);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          type metadata accessor for PlusRuntimeContactSuggestions(0);
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v96);
          v30 += 40;
          if (!--v29)
          {
            swift_bridgeObjectRelease();
            v14 = v93;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v96, (uint64_t)v98);
        v14 = v93;
        v26 = v27;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        v26 = v27;
        v99 = 0;
        memset(v98, 0, sizeof(v98));
      }
      sub_213DCC3D8((uint64_t)v98, (uint64_t)&v96, v26);
      if (v97)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for PlusRuntimeContactSuggestions(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          sub_213DAFEC4((uint64_t)v98, v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_213DBB430((uint64_t)v21, v89, type metadata accessor for FeaturisedTurn);
          v31 = v100;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_213DCD09C(0, *(_QWORD *)(v31 + 16) + 1, 1);
            v31 = v100;
          }
          v33 = *(_QWORD *)(v31 + 16);
          v32 = *(_QWORD *)(v31 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_213DCD09C(v32 > 1, v33 + 1, 1);
            v31 = v100;
          }
          *(_QWORD *)(v31 + 16) = v33 + 1;
          sub_213DBB430(v89, v31 + v86 + v33 * v94, type metadata accessor for FeaturisedTurn);
          v26 = v27;
          goto LABEL_5;
        }
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v96, v26);
      }
      sub_213DAFEC4((uint64_t)v98, v26);
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v21, type metadata accessor for FeaturisedTurn);
LABEL_5:
      if (++v24 == v92)
      {
        v89 = v100;
        goto LABEL_23;
      }
    }
  }
  v89 = v22;
LABEL_23:
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v84 + 16);
  v35 = v88;
  if (v34)
  {
    v36 = v84 + 32;
    swift_bridgeObjectRetain();
    v94 = MEMORY[0x24BEE4AF8];
    v37 = v36;
    v90 = v34;
    do
    {
      sub_213DAFDFC(v37, (uint64_t)v98);
      sub_213DAFDFC((uint64_t)v98, (uint64_t)&v96);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v38 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v9, v38 ^ 1u, 1, v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v9, 1, v10) == 1)
      {
        sub_213DAFEC4((uint64_t)v9, &qword_253F06C68);
      }
      else
      {
        v39 = v87;
        sub_213DBB430((uint64_t)v9, v87, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DBB430(v39, v91, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v40 = v94;
        else
          v40 = sub_213DB5648(0, *(_QWORD *)(v94 + 16) + 1, 1, v94);
        v42 = *(_QWORD *)(v40 + 16);
        v41 = *(_QWORD *)(v40 + 24);
        if (v42 >= v41 >> 1)
          v40 = sub_213DB5648(v41 > 1, v42 + 1, 1, v40);
        *(_QWORD *)(v40 + 16) = v42 + 1;
        v35 = v88;
        v43 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
        v94 = v40;
        sub_213DBB430(v91, v40 + v43 + *(_QWORD *)(v88 + 72) * v42, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        v14 = v93;
      }
      v37 += 40;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v44 = 1;
    v35 = v90;
    while (1)
    {
      sub_213DAFDFC(v36, (uint64_t)v98);
      sub_213DAFDFC((uint64_t)v98, (uint64_t)&v96);
      if (swift_dynamicCast())
      {
        v45 = v95[0];
        v35 = v95[2];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
        if ((v45 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          LODWORD(v93) = 1;
          goto LABEL_46;
        }
        v35 = v90;
        if (v90 == v44)
          goto LABEL_43;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v98);
        if (v35 == v44)
          goto LABEL_43;
      }
      v36 += 40;
      if (__OFADD__(v44++, 1))
      {
        __break(1u);
LABEL_43:
        swift_bridgeObjectRelease();
        LODWORD(v93) = 0;
        goto LABEL_46;
      }
    }
  }
  LODWORD(v93) = 0;
  v94 = MEMORY[0x24BEE4AF8];
LABEL_46:
  v47 = 0xD000000000000013;
  swift_bridgeObjectRetain_n();
  v48 = 0;
  v49 = "INStartCallIntent";
  v50 = 0x8000000213F04880;
  while (1)
  {
    if (v48 == v92)
    {
      v55 = 1;
      v48 = v92;
      v56 = (uint64_t)v83;
      v57 = v82;
      v58 = v81;
    }
    else
    {
      v56 = (uint64_t)v83;
      v57 = v82;
      if (v48 >= v92)
      {
        __break(1u);
        goto LABEL_79;
      }
      v58 = v81;
      sub_213DCA7E4(v85+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v81 + 72) * v48, (uint64_t)v82, type metadata accessor for FeaturisedTurn);
      v55 = 0;
      ++v48;
    }
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v57, v55, 1, v14);
    sub_213E6D464((uint64_t)v57, v56);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v14) == 1)
      break;
    v59 = v56;
    v60 = v80;
    v35 = (uint64_t)type metadata accessor for FeaturisedTurn;
    sub_213DBB430(v59, v80, type metadata accessor for FeaturisedTurn);
    v61 = *(_QWORD *)(v60 + *(int *)(v14 + 28));
    swift_bridgeObjectRetain();
    sub_213DCA828(v60, type metadata accessor for FeaturisedTurn);
    swift_bridgeObjectRelease();
    v62 = v61;
    if (v61)
    {
      v51 = (_QWORD *)(v61 + 64);
      v52 = -1;
      while (1)
      {
        ++v52;
        v53 = *(_QWORD *)(v62 + 16);
        if (v52 == v53)
          break;
        if (v52 >= v53)
        {
          __break(1u);
          goto LABEL_77;
        }
        v35 = *(v51 - 3);
        v54 = *(v51 - 2);
        if (*(v51 - 1) != 0xD000000000000013 || *v51 != 0x8000000213F04880)
        {
          v51 += 5;
          if ((sub_213EF3234() & 1) == 0)
            continue;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v63 = sub_213DAE9B4(v54);
        swift_bridgeObjectRelease();
        if (!v63)
          goto LABEL_64;
        v14 = (uint64_t)sub_213E6ABC4(v63);
        v92 = 0;
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_64:
  v14 = 0;
  v92 = 0;
LABEL_65:
  v47 = v89;
  if (qword_253F04A88 != -1)
LABEL_77:
    swift_once();
  v64 = sub_213EF2724();
  __swift_project_value_buffer(v64, (uint64_t)qword_253F08A00);
  swift_retain();
  v35 = sub_213EF270C();
  LOBYTE(v49) = sub_213EF2C94();
  v65 = &unk_213EF4000;
  v66 = &unk_253F06000;
  v57 = &qword_253F06E58;
  if (os_log_type_enabled((os_log_t)v35, (os_log_type_t)v49))
  {
    v48 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    *(_QWORD *)&v98[0] = v50;
    *(_DWORD *)v48 = 136315394;
    if (qword_253F06E70 == -1)
    {
LABEL_68:
      v68 = *v57;
      v67 = v57[1];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v96 = sub_213DB0570(v68, v67, (uint64_t *)v98);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2048;
      *(_QWORD *)&v96 = *(_QWORD *)(v89 + 16);
      v47 = v89;
      sub_213EF2D9C();
      swift_release();
      _os_log_impl(&dword_213DAB000, (os_log_t)v35, (os_log_type_t)v49, "%s Found %ld turns with PICS suggestions reported.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v50, -1, -1);
      MEMORY[0x2199C53C4](v48, -1, -1);

      v66 = (_QWORD *)&unk_253F06000;
      v65 = (_QWORD *)&unk_213EF4000;
      goto LABEL_70;
    }
LABEL_79:
    swift_once();
    goto LABEL_68;
  }

  swift_release();
LABEL_70:
  v69 = v94;
  swift_bridgeObjectRetain();
  v70 = sub_213EF270C();
  v71 = sub_213EF2C94();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    *(_QWORD *)&v98[0] = v73;
    *(_DWORD *)v72 = v65[136];
    if (v66[462] != -1)
      swift_once();
    v74 = *v57;
    v75 = v57[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v96 = sub_213DB0570(v74, v75, (uint64_t *)v98);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v72 + 12) = 2048;
    v69 = v94;
    *(_QWORD *)&v96 = *(_QWORD *)(v94 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v70, v71, "%s Found %ld entity prompts in the session.", (uint8_t *)v72, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v73, -1, -1);
    MEMORY[0x2199C53C4](v72, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v76 = v79;
  swift_retain();
  v77 = sub_213E6E578(v47, v76, v69, (_QWORD *)v14, v93);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v77;
}

uint64_t sub_213E6BB00(uint64_t a1, uint64_t a2, _QWORD *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  char *v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  NSObject *v105;
  os_log_type_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[2];
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  int v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160[8];
  char v161[8];
  uint64_t v162;
  uint64_t v163;

  v143 = a4;
  v149 = a3;
  v145 = a2;
  v5 = type metadata accessor for FeaturisedTurn(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v144 = (char *)v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v151 = (uint64_t)v135 - v8;
  v147 = type metadata accessor for EntityPromptClassification();
  v140 = *(_QWORD *)(v147 - 8);
  v9 = MEMORY[0x24BDAC7A8](v147);
  v159 = (unint64_t)v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v150 = (uint64_t)v135 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v153 = (_QWORD *)((char *)v135 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v138 = (uint64_t)v135 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v139 = (uint64_t)v135 - v17;
  v157 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v141 = *(_QWORD *)(v157 - 8);
  v18 = MEMORY[0x24BDAC7A8](v157);
  v20 = (char *)v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v156 = (uint64_t)v135 - v21;
  v22 = type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary();
  v23 = *(_QWORD *)(v22 - 8);
  v154 = (int *)v22;
  v155 = v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v142 = (char *)v135 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v135 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_213EF1D64();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)v135 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)v135 - v36;
  FeaturisedTurn.getPlusId()((uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_213DAFEC4((uint64_t)v30, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v38 = sub_213EF2724();
    __swift_project_value_buffer(v38, (uint64_t)qword_253F08A00);
    v39 = sub_213EF270C();
    v40 = sub_213EF2CA0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v163 = v42;
      *(_DWORD *)v41 = 136315138;
      if (qword_253F06E70 != -1)
        swift_once();
      v43 = qword_253F06E58;
      v44 = unk_253F06E60;
      swift_bridgeObjectRetain();
      v162 = sub_213DB0570(v43, v44, &v163);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v39, v40, "%s Missing PLUS Id for turn with PICS suggestions. SELF logs cannot be emitted for these suggestions.", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v42, -1, -1);
      MEMORY[0x2199C53C4](v41, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  v158 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v37, v30, v31);
  v45 = *(int *)(v5 + 24);
  v148 = a1;
  v46 = swift_bridgeObjectRetain();
  v47 = sub_213DAFB94(v46);
  swift_bridgeObjectRelease();
  if (v47 != 2 && (v47 & 1) == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v48 = sub_213EF2724();
    __swift_project_value_buffer(v48, (uint64_t)qword_253F08A00);
    v49 = sub_213EF270C();
    v50 = sub_213EF2C94();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = v37;
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v163 = v53;
      *(_DWORD *)v52 = 136315138;
      if (qword_253F06E70 != -1)
        swift_once();
      v54 = qword_253F06E58;
      v55 = unk_253F06E60;
      swift_bridgeObjectRetain();
      v162 = sub_213DB0570(v54, v55, &v163);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v49, v50, "%s Runtime suggestions is not enabled for the turn, no outcomes will be extracted", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v53, -1, -1);
      MEMORY[0x2199C53C4](v52, -1, -1);

      v37 = v51;
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v158 + 8))(v37, v31);
    return MEMORY[0x24BEE4AF8];
  }
  v135[1] = v45;
  v136 = v35;
  v56 = swift_bridgeObjectRetain();
  v57 = sub_213DAF658(v56);
  swift_bridgeObjectRelease();
  if (!v57)
    v57 = MEMORY[0x24BEE4AF8];
  v58 = v149;
  v137 = v37;
  if (v149)
  {
    v59 = v146;
    swift_retain();
    swift_bridgeObjectRetain();
    v157 = sub_213E6D4AC(v57, v59, v58);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v60 = v158;
    v61 = v159;
  }
  else
  {
    v152 = v31;
    v64 = *(_QWORD *)(v57 + 16);
    v60 = v158;
    v61 = v159;
    if (v64)
    {
      v163 = MEMORY[0x24BEE4AF8];
      sub_213DCD6E4(0, v64, 0);
      v65 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
      v135[0] = v57;
      v66 = v57 + v65;
      v149 = *(_QWORD **)(v141 + 72);
      v67 = (uint64_t)v142;
      do
      {
        v68 = v156;
        sub_213DCA7E4(v66, v156, type metadata accessor for PlusContactSuggestionRuntimeSummary);
        sub_213DCA7E4(v68, (uint64_t)v20, type metadata accessor for PlusContactSuggestionRuntimeSummary);
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v26, v20, v152);
        v69 = v157;
        v70 = v154;
        sub_213DCC3D8((uint64_t)&v20[*(int *)(v157 + 20)], (uint64_t)&v26[v154[5]], &qword_253F04828);
        v26[v70[6]] = v20[*(int *)(v69 + 24)];
        LOBYTE(v69) = v20[*(int *)(v69 + 28)];
        sub_213DCA828((uint64_t)v20, type metadata accessor for PlusContactSuggestionRuntimeSummary);
        v26[v70[7]] = v69;
        v26[v70[8]] = 2;
        sub_213DBB430((uint64_t)v26, v67, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
        sub_213DCA828(v68, type metadata accessor for PlusContactSuggestionRuntimeSummary);
        v71 = v163;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_213DCD6E4(0, *(_QWORD *)(v71 + 16) + 1, 1);
          v71 = v163;
        }
        v73 = *(_QWORD *)(v71 + 16);
        v72 = *(_QWORD *)(v71 + 24);
        if (v73 >= v72 >> 1)
        {
          sub_213DCD6E4(v72 > 1, v73 + 1, 1);
          v71 = v163;
        }
        *(_QWORD *)(v71 + 16) = v73 + 1;
        sub_213DBB430(v67, v71+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(_QWORD *)(v155 + 72) * v73, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
        v66 += (uint64_t)v149;
        --v64;
        v60 = v158;
        v61 = v159;
      }
      while (v64);
      v157 = v71;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v157 = MEMORY[0x24BEE4AF8];
    }
    v31 = v152;
  }
  v74 = swift_bridgeObjectRetain();
  v75 = (_QWORD *)sub_213DAE9A8(v74);
  swift_bridgeObjectRelease();
  v76 = v153;
  if (v75
    && (v159 = (unint64_t)"all.StartCallIntent",
        v77 = sub_213E76530(0xD000000000000029, 0x8000000213F04700, v75),
        swift_bridgeObjectRelease(),
        (v77 & 1) != 0))
  {
    v156 = 0;
    v78 = *(_QWORD *)(v145 + 16);
    v152 = v31;
    if (v78)
    {
      v79 = v145 + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
      v80 = *(_QWORD *)(v140 + 72);
      swift_bridgeObjectRetain();
      v81 = v159 | 0x8000000000000000;
      while (1)
      {
        sub_213DCA7E4(v79, (uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if (*v76 == 0xD000000000000029 && v76[1] == v81)
        {
          v84 = v150;
          sub_213DCA7E4((uint64_t)v76, v150, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        }
        else
        {
          v85 = sub_213EF3234();
          v84 = v150;
          sub_213DCA7E4((uint64_t)v76, v150, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          if ((v85 & 1) == 0)
          {
            sub_213DCA828(v84, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            sub_213DCA7E4((uint64_t)v76, v61, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            v82 = v61;
            v83 = v151;
            sub_213DCA7E4(v148, v151, type metadata accessor for FeaturisedTurn);
            goto LABEL_40;
          }
        }
        if (*(_QWORD *)(v84 + 16) == 0x6E65697069636572 && *(_QWORD *)(v84 + 24) == 0xE900000000000074)
        {
          sub_213DCA828(v84, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          sub_213DCA7E4((uint64_t)v76, v61, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          v82 = v61;
          v83 = v151;
          sub_213DCA7E4(v148, v151, type metadata accessor for FeaturisedTurn);
LABEL_50:
          v87 = sub_213EF1D28();
          sub_213DCA828(v83, type metadata accessor for FeaturisedTurn);
          sub_213DCA828(v82, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          v61 = v82;
          if ((v87 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v88 = v138;
            sub_213DBB430((uint64_t)v153, v138, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            v89 = v139;
            v90 = sub_213DBB430(v88, v139, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            MEMORY[0x24BDAC7A8](v90);
            v135[-2] = v146;
            v135[-1] = v89;
            v91 = v157;
            swift_bridgeObjectRetain();
            v92 = sub_213EB5D64((uint64_t (*)(char *))sub_213E6E83C, (uint64_t)&v135[-4], v91);
            v94 = v93;
            swift_bridgeObjectRelease();
            v95 = v156;
            v96 = sub_213E6A914(v94);
            v156 = v95;
            swift_bridgeObjectRelease();
            v97 = sub_213EB5218(v96, v89);
            swift_bridgeObjectRelease();
            v98 = sub_213E6DFFC(v92, v143 & 1);
            swift_bridgeObjectRelease();
            v163 = v97;
            sub_213DB4EDC(v98);
            v99 = v91;
            v100 = v163;
            sub_213DCA828(v89, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            v31 = v152;
            v101 = v137;
            goto LABEL_62;
          }
          goto LABEL_41;
        }
        v86 = sub_213EF3234();
        sub_213DCA828(v84, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DCA7E4((uint64_t)v76, v61, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        v82 = v61;
        v83 = v151;
        sub_213DCA7E4(v148, v151, type metadata accessor for FeaturisedTurn);
        if ((v86 & 1) != 0)
          goto LABEL_50;
LABEL_40:
        sub_213DCA828(v83, type metadata accessor for FeaturisedTurn);
        sub_213DCA828(v82, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        v61 = v82;
LABEL_41:
        v76 = v153;
        sub_213DCA828((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        v79 += v80;
        if (!--v78)
        {
          swift_bridgeObjectRelease();
          v31 = v152;
          break;
        }
      }
    }
    v101 = v137;
    v99 = v157;
    v100 = sub_213E6DFFC(v157, v143 & 1);
LABEL_62:
    v119 = (uint64_t)v144;
    v120 = v156;
    v121 = (uint64_t *)sub_213E6AAC8(v99);
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v122 = sub_213EF2724();
    __swift_project_value_buffer(v122, (uint64_t)qword_253F08A00);
    sub_213DCA7E4(v148, v119, type metadata accessor for FeaturisedTurn);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v123 = sub_213EF270C();
    v124 = sub_213EF2C94();
    if (os_log_type_enabled(v123, v124))
    {
      v125 = swift_slowAlloc();
      v157 = swift_slowAlloc();
      v163 = v157;
      *(_DWORD *)v125 = 136315906;
      if (qword_253F06E70 != -1)
        swift_once();
      v126 = qword_253F06E58;
      v127 = unk_253F06E60;
      swift_bridgeObjectRetain();
      v162 = sub_213DB0570(v126, v127, &v163);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v125 + 12) = 2048;
      v159 = v120;
      if (v100 >> 62)
      {
        swift_bridgeObjectRetain();
        v128 = sub_213EF306C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v128 = *(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v162 = v128;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v125 + 22) = 2048;
      v129 = v121[2];
      swift_bridgeObjectRelease();
      v162 = v129;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v125 + 32) = 2080;
      sub_213E0B898();
      v130 = (uint64_t)v144;
      v31 = v152;
      v131 = sub_213EF31F8();
      v162 = sub_213DB0570(v131, v132, &v163);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DCA828(v130, type metadata accessor for FeaturisedTurn);
      _os_log_impl(&dword_213DAB000, v123, v124, "%s Generated outcomes for %ld/%ld suggestions in Turn id=%s", (uint8_t *)v125, 0x2Au);
      v133 = v157;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v133, -1, -1);
      MEMORY[0x2199C53C4](v125, -1, -1);

      v101 = v137;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_213DCA828(v119, type metadata accessor for FeaturisedTurn);

    }
    sub_213EB4A98(v100, v121);
    v134 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v134);
    v135[-2] = v101;
    v62 = sub_213EC2738((void (*)(id *))sub_213E6EFE4, (uint64_t)&v135[-4], v100, (uint64_t)v160);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v101, v31);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v102 = sub_213EF2724();
    __swift_project_value_buffer(v102, (uint64_t)qword_253F08A00);
    v103 = v136;
    v104 = v137;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v136, v137, v31);
    v105 = sub_213EF270C();
    v106 = sub_213EF2C94();
    if (os_log_type_enabled(v105, v106))
    {
      v156 = 0;
      v107 = v104;
      v108 = swift_slowAlloc();
      v109 = swift_slowAlloc();
      v163 = v109;
      *(_DWORD *)v108 = 136315394;
      if (qword_253F06E70 != -1)
        swift_once();
      v110 = qword_253F06E58;
      v111 = unk_253F06E60;
      swift_bridgeObjectRetain();
      v162 = sub_213DB0570(v110, v111, &v163);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2080;
      sub_213E0B898();
      v112 = v136;
      v113 = sub_213EF31F8();
      v162 = sub_213DB0570(v113, v114, &v163);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v115 = *(void (**)(char *, uint64_t))(v158 + 8);
      v115(v112, v31);
      _os_log_impl(&dword_213DAB000, v105, v106, "%s Turn with PLUS ID %s does not have a messages task type. Marking all suggestion outcomes as unknown.", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v109, -1, -1);
      MEMORY[0x2199C53C4](v108, -1, -1);

      v104 = v107;
    }
    else
    {
      v115 = *(void (**)(char *, uint64_t))(v60 + 8);
      v115(v103, v31);

    }
    v116 = sub_213E6A914(v157);
    swift_bridgeObjectRelease();
    v117 = sub_213E34CE4(v116, 0);
    v118 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v118);
    v135[-2] = v104;
    v62 = sub_213EC2738((void (*)(id *))sub_213E6E820, (uint64_t)&v135[-4], v117, (uint64_t)v161);
    swift_bridgeObjectRelease();
    v115(v104, v31);
  }
  return v62;
}

uint64_t sub_213E6CE08(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v46 = a3;
  v50 = a2;
  v4 = (int *)type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary();
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PlusContactSuggestion();
  v48 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v45 = (uint64_t)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a1, v9);
  v20 = (uint64_t)&v14[v12[5]];
  sub_213DCC3D8(a1 + v4[5], v20, &qword_253F04828);
  v21 = v4[7];
  v22 = *(_BYTE *)(a1 + v4[6]);
  v47 = a1;
  LOBYTE(v21) = *(_BYTE *)(a1 + v21);
  v14[v12[6]] = v22;
  v14[v12[7]] = v21;
  sub_213DCC3D8(v20, (uint64_t)v8, &qword_253F04828);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v23 = v50;
    sub_213DAFEC4((uint64_t)v8, &qword_253F04828);
    v24 = v48;
    v25 = v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v17, 1, 1, v49);
  }
  else
  {
    v26 = v44;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v44, v8, v9);
    v27 = v50[5];
    v28 = v50[6];
    v23 = v50;
    __swift_project_boxed_opaque_existential_1(v50 + 2, v27);
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 64))(v26, v27, v28);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
    v24 = v48;
    v25 = v49;
  }
  sub_213DCA828((uint64_t)v14, type metadata accessor for PlusContactSuggestionRuntimeSummary);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v25);
  v30 = (uint64_t)v51;
  if (v29 == 1)
  {
    sub_213DAFEC4((uint64_t)v17, &qword_253F06B28);
    v31 = (uint64_t)v23;
  }
  else
  {
    v32 = v45;
    sub_213DBB430((uint64_t)v17, v45, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    v33 = sub_213E76530(*(_QWORD *)(v32 + *(int *)(v25 + 24)), *(_QWORD *)(v32 + *(int *)(v25 + 24) + 8), *(_QWORD **)(v46 + 32));
    sub_213DCA828(v32, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    v31 = (uint64_t)v23;
    if ((v33 & 1) != 0)
      return 1;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v35 = sub_213EF2724();
  __swift_project_value_buffer(v35, (uint64_t)qword_253F08A00);
  sub_213DCA7E4(v47, v30, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
  swift_retain_n();
  v36 = sub_213EF270C();
  v37 = sub_213EF2CA0();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v52 = v31;
    v53 = v39;
    *(_DWORD *)v38 = 136315394;
    type metadata accessor for MessagesSuggestionOutcomeExtractor();
    swift_retain();
    v40 = sub_213EF288C();
    v52 = sub_213DB0570(v40, v41, &v53);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v42 = sub_213EF1D10();
    v52 = sub_213DB0570(v42, v43, &v53);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DCA828(v30, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
    _os_log_impl(&dword_213DAB000, v36, v37, "[%s] Suggestion was not in the prompt entities. Falling back to non-prompt resolution. suggestionId=%s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v39, -1, -1);
    MEMORY[0x2199C53C4](v38, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_213DCA828(v30, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
  }

  return 0;
}

id sub_213E6D344@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253F06920) + 48);
  v7 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a2, v7);
  *(_QWORD *)(a3 + v6) = v5;
  return v5;
}

uint64_t MessagesSuggestionOutcomeExtractor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t MessagesSuggestionOutcomeExtractor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_213E6D3F8@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  type metadata accessor for MessagesSuggestionOutcomeExtractor();
  v4 = swift_allocObject();
  result = sub_213DB0BF0(a1, v4 + 16);
  *a2 = v4;
  return result;
}

uint64_t sub_213E6D444(uint64_t a1, uint64_t a2)
{
  return sub_213E6ADA0(a1, a2);
}

uint64_t sub_213E6D464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E6D4AC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t result;
  int *v44;
  char v45;
  int64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  int *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v70 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for PlusContactSuggestion();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v59 = (uint64_t)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213EF1D64();
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v63 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v14 = *((_QWORD *)v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary();
  v67 = *(_QWORD *)(v17 - 8);
  v68 = (int *)v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = MEMORY[0x24BEE4AF8];
  if (!v20)
    return v21;
  v53[1] = v3;
  v73 = MEMORY[0x24BEE4AF8];
  sub_213DCD6E4(0, v20, 0);
  v22 = 0;
  v66 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v57 = v13;
  v58 = (_QWORD *)(v70 + 16);
  v23 = *(_QWORD *)(v14 + 72);
  v64 = v20;
  v65 = v23;
  v53[0] = a3 + 7;
  v55 = a3;
  v24 = v70;
  while (1)
  {
    v25 = v66 + v65 * v22;
    sub_213DCA7E4(v25, (uint64_t)v16, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    v26 = v25 + v13[5];
    v27 = v69;
    sub_213DCC3D8(v26, v69, &qword_253F04828);
    v28 = v71;
    v29 = v72;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v27, 1, v72) != 1)
      break;
    sub_213DAFEC4(v27, &qword_253F04828);
    v30 = 2;
LABEL_18:
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v19, v16, v29);
    v44 = v68;
    sub_213DCC3D8((uint64_t)&v16[v13[5]], (uint64_t)&v19[v68[5]], &qword_253F04828);
    v19[v44[6]] = v16[v13[6]];
    v45 = v16[v13[7]];
    sub_213DCA828((uint64_t)v16, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    v19[v44[7]] = v45;
    v19[v44[8]] = v30;
    v21 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_213DCD6E4(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v21 = v73;
    }
    v46 = v64;
    v48 = *(_QWORD *)(v21 + 16);
    v47 = *(_QWORD *)(v21 + 24);
    if (v48 >= v47 >> 1)
    {
      sub_213DCD6E4(v47 > 1, v48 + 1, 1);
      v21 = v73;
    }
    ++v22;
    *(_QWORD *)(v21 + 16) = v48 + 1;
    sub_213DBB430((uint64_t)v19, v21+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v48, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
    v24 = v70;
    if (v22 == v46)
      return v21;
  }
  v31 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v63, v27, v29);
  v33 = *(_QWORD *)(v24 + 40);
  v32 = *(_QWORD *)(v24 + 48);
  __swift_project_boxed_opaque_existential_1(v58, v33);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 64);
  v35 = v32;
  v36 = (uint64_t)v61;
  v34(v31, v33, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v36, 1, v62) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v29);
    sub_213DAFEC4(v36, &qword_253F06B28);
    v30 = 2;
    v13 = v57;
    goto LABEL_18;
  }
  v37 = v36;
  v38 = v59;
  sub_213DBB430(v37, v59, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v39 = v55[2];
  if (!v39)
  {
    v30 = 0;
LABEL_16:
    v13 = v57;
    goto LABEL_17;
  }
  v40 = (uint64_t *)(v38 + *(int *)(v62 + 24));
  v41 = *v40;
  if (v55[4] == *v40 && v55[5] == v40[1])
  {
    v30 = 1;
    goto LABEL_16;
  }
  v56 = v40[1];
  result = sub_213EF3234();
  v13 = v57;
  if ((result & 1) != 0)
  {
LABEL_13:
    v30 = 1;
LABEL_17:
    sub_213DCA828(v59, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    v28 = v71;
    v29 = v72;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v72);
    goto LABEL_18;
  }
  if (v39 == 1)
  {
    v30 = 0;
    goto LABEL_17;
  }
  v54 = v41;
  v49 = (_QWORD *)v53[0];
  v50 = 1;
  while (1)
  {
    v51 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (*(v49 - 1) == v54 && *v49 == v56)
      goto LABEL_13;
    result = sub_213EF3234();
    if ((result & 1) != 0)
      goto LABEL_13;
    v30 = 0;
    v49 += 2;
    ++v50;
    if (v51 == v39)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E6D9F0(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;

  if ((a2 & 1) != 0)
  {
    v2 = *(unsigned __int8 *)(a1
                            + *(int *)(type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary() + 32));
    if (v2 == 2)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v3 = sub_213EF2724();
      __swift_project_value_buffer(v3, (uint64_t)qword_253F08A00);
      v4 = sub_213EF270C();
      v5 = sub_213EF2C94();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v34 = v7;
        *(_DWORD *)v6 = 136315138;
        if (qword_253F06E70 != -1)
          swift_once();
        v8 = qword_253F06E58;
        v9 = unk_253F06E60;
        swift_bridgeObjectRetain();
        sub_213DB0570(v8, v9, &v34);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v4, v5, "%s Message was sent in session, but we don't know whether the suggestion was in recipients list. Marking outcome as unknown", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v7, -1, -1);
        MEMORY[0x2199C53C4](v6, -1, -1);
      }

      return 0;
    }
    else if ((v2 & 1) != 0)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v26 = sub_213EF2724();
      __swift_project_value_buffer(v26, (uint64_t)qword_253F08A00);
      v27 = sub_213EF270C();
      v28 = sub_213EF2C94();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v34 = v30;
        *(_DWORD *)v29 = 136315138;
        if (qword_253F06E70 != -1)
          swift_once();
        v31 = qword_253F06E58;
        v32 = unk_253F06E60;
        swift_bridgeObjectRetain();
        sub_213DB0570(v31, v32, &v34);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v27, v28, "%s Suggestion was chosen by model without prompt, the user did not abandon and messages were sent to the suggestion. Marking outcome as successful execution.", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v30, -1, -1);
        MEMORY[0x2199C53C4](v29, -1, -1);
      }

      return 11;
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v18 = sub_213EF2724();
      __swift_project_value_buffer(v18, (uint64_t)qword_253F08A00);
      v19 = sub_213EF270C();
      v20 = sub_213EF2C94();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v34 = v22;
        *(_DWORD *)v21 = 136315138;
        if (qword_253F06E70 != -1)
          swift_once();
        v23 = qword_253F06E58;
        v24 = unk_253F06E60;
        swift_bridgeObjectRetain();
        sub_213DB0570(v23, v24, &v34);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v25 = v20;
        v10 = 12;
        _os_log_impl(&dword_213DAB000, v19, v25, "%s Suggestion was chosen by model without prompt, but was not included in the final recipients. Marking outcome as removed.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v22, -1, -1);
        MEMORY[0x2199C53C4](v21, -1, -1);

      }
      else
      {

        return 12;
      }
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v11 = sub_213EF2724();
    __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
    v12 = sub_213EF270C();
    v13 = sub_213EF2C94();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v34 = v15;
      *(_DWORD *)v14 = 136315138;
      if (qword_253F06E70 != -1)
        swift_once();
      v16 = qword_253F06E58;
      v17 = unk_253F06E60;
      swift_bridgeObjectRetain();
      sub_213DB0570(v16, v17, &v34);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v12, v13, "%s Suggestion was chosen by model without prompt, the user abandoned, and messages were not sent in session. Marking outcome as abandoned.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v15, -1, -1);
      MEMORY[0x2199C53C4](v14, -1, -1);
    }

    return 13;
  }
  return v10;
}

uint64_t sub_213E6DFFC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    v17 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    sub_213DCA7E4(v17, (uint64_t)&v43 - v15, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
    v18 = sub_213E6D9F0((uint64_t)v16, a2 & 1);
    v19 = sub_213EF1D64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v16, v19);
    sub_213DCC3D8((uint64_t)&v16[v10[5]], (uint64_t)&v9[v7[5]], &qword_253F04828);
    v20 = v16[v10[7]];
    v9[v7[6]] = v16[v10[6]];
    v9[v7[7]] = v20;
    v21 = type metadata accessor for EntityPromptClassification();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
    v22 = sub_213E346C0((uint64_t)v9, (uint64_t)v6);
    sub_213DAFEC4((uint64_t)v6, &qword_253F06C68);
    sub_213DCA828((uint64_t)v9, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    v44 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_213DCA7E4(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95778]), sel_init);
    if (v23)
    {
      v24 = v23;
      v25 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v26 = (void *)sub_213EF1D1C();
      v27 = objc_msgSend(v25, sel_initWithNSUUID_, v26);

      objc_msgSend(v24, sel_setSuggestionId_, v27);
      objc_msgSend(v24, sel_setContactSuggestionOutcome_, v18);
      objc_msgSend(v24, sel_setContactSuggestionRedundancyState_, v22);
      v28 = sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
      MEMORY[0x2199C44C4](v28);
      if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v38 = sub_213EF2724();
      __swift_project_value_buffer(v38, (uint64_t)qword_253F08A00);
      v39 = sub_213EF270C();
      v40 = sub_213EF2CA0();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_213DAB000, v39, v40, "Failed to create SELF template for PLUSSchemaPLUSContactSuggestionOutcomeReported", v41, 2u);
        MEMORY[0x2199C53C4](v41, -1, -1);
      }

      sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
    }
    swift_bridgeObjectRelease();
    v37 = v44;
    sub_213DCA828((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v29 = sub_213EF2724();
    __swift_project_value_buffer(v29, (uint64_t)qword_253F08A00);
    v30 = sub_213EF270C();
    v31 = sub_213EF2C94();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v44 = v33;
      *(_DWORD *)v32 = 136315138;
      if (qword_253F06E70 != -1)
        swift_once();
      v34 = qword_253F06E58;
      v35 = unk_253F06E60;
      swift_bridgeObjectRetain();
      v43 = sub_213DB0570(v34, v35, &v44);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v30, v31, "%s Either found zero suggestions, or multiple suggestions included in the model output but no detected prompt. Marking all suggestions as unknown outcomes.", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v33, -1, -1);
      MEMORY[0x2199C53C4](v32, -1, -1);
    }

    v36 = sub_213E6A914(a1);
    v37 = sub_213E34CE4(v36, 8u);
    swift_bridgeObjectRelease();
  }
  return v37;
}

uint64_t sub_213E6E578(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, char a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return MEMORY[0x24BEE4AF8];
  v8 = *(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8);
  v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v35 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  v10 = MEMORY[0x24BEE4AF8];
  v11 = a5 & 1;
  while (1)
  {
    v12 = sub_213E6BB00(v9, a3, a4, v11);
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v10 + 16);
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      break;
    v16 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= *(_QWORD *)(v10 + 24) >> 1)
    {
      if (*(_QWORD *)(v16 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v14 <= v15)
        v18 = v14 + v13;
      else
        v18 = v14;
      v10 = sub_213DB7028(isUniquelyReferenced_nonNull_native, v18, 1, v10);
      if (*(_QWORD *)(v16 + 16))
      {
LABEL_14:
        v19 = *(_QWORD *)(v10 + 16);
        v20 = (*(_QWORD *)(v10 + 24) >> 1) - v19;
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06920);
        if (v20 < v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v21 - 8);
        v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        v24 = *(_QWORD *)(v22 + 72);
        v25 = v10 + v23 + v24 * v19;
        v26 = v16 + v23;
        v27 = v24 * v13;
        v28 = v25 + v27;
        v29 = v26 + v27;
        if (v26 < v28 && v25 < v29)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v31 = *(_QWORD *)(v10 + 16);
          v32 = __OFADD__(v31, v13);
          v33 = v31 + v13;
          if (v32)
            goto LABEL_29;
          *(_QWORD *)(v10 + 16) = v33;
        }
        goto LABEL_4;
      }
    }
    if (v13)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    v9 += v35;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MessagesSuggestionOutcomeExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessagesSuggestionOutcomeExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesSuggestionOutcomeExtractor.__allocating_init(picsStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MessagesSuggestionOutcomeExtractor.extractSessionSuggestionOutcomes(session:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary()
{
  uint64_t result;

  result = qword_254D3EAE0;
  if (!qword_254D3EAE0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_213E6E820@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213E6D344(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_213E6E83C(uint64_t a1)
{
  uint64_t v1;

  return sub_213E6CE08(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

char *sub_213E6E844(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v15] = a2[v15];
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

char *sub_213E6E964(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v13] = a2[v13];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_213E6EA58(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_213E6EB9C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v13] = a2[v13];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_213E6EC90(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v16] = a2[v16];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_213E6EDD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E6EDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_213E6EE98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E6EEA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_213E6EF4C()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DBF3D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

id sub_213E6EFE4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213E6E820(a1, a2);
}

uint64_t sub_213E6EFF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  os_log_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  char *v80;
  uint64_t *v81;
  char *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  _QWORD *v101;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EB28);
  MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_213EF2070();
  v6 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E610);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_213EF1FA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v96 = (char *)&v75 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v75 - v19;
  v21 = sub_213EF1E18();
  v23 = v21;
  if (!v21)
  {
    result = sub_213EF1ECC();
    v60 = 0;
    v61 = 0;
    v56 = 0;
    v57 = 0;
    v55 = 0;
    v62 = 0;
    v63 = 0;
    if (v59)
      v64 = result;
    else
      v64 = 0;
    if (v59 <= 1)
      v65 = 1;
    else
      v65 = v59;
    goto LABEL_61;
  }
  if (v21 >> 62)
    result = sub_213EF306C();
  else
    result = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v84 = v6;
  v85 = a1;
  v82 = v8;
  if (!result)
  {
    swift_bridgeObjectRelease();
    v23 = 0;
    v55 = 0;
    v56 = 0;
    v57 = 0;
    v90 = 0;
    v93 = 0;
    v58 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_52:
    v66 = sub_213EF1EC0();
    v67 = (uint64_t)v89;
    if (v66)
    {
      v91 = v23;
      v100 = v58;
      sub_213EF1F8C();
      v68 = v84;
      v69 = v86;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v67, 1, v86) == 1)
      {
        swift_release();
        sub_213DAFEC4(v67, &qword_254D3EB28);
        v62 = 0;
        v63 = 0;
      }
      else
      {
        v70 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
        v92 = v56;
        v71 = v82;
        v70(v82, v67, v69);
        v62 = sub_213EF2064();
        v63 = v72;
        swift_release();
        v73 = v71;
        v56 = v92;
        (*(void (**)(char *, uint64_t))(v68 + 8))(v73, v69);
      }
      v58 = v100;
      v23 = v91;
      if (v100[2])
        goto LABEL_59;
    }
    else
    {
      v62 = 0;
      v63 = 0;
      if (v58[2])
      {
LABEL_59:
        v101 = v58;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B030);
        sub_213DDE1D4();
        v64 = sub_213EF2820();
        v65 = v74;
        result = swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    result = swift_bridgeObjectRelease();
    v64 = 0;
    v65 = 0;
LABEL_60:
    v61 = v93;
    v60 = v90;
LABEL_61:
    *a2 = v64;
    a2[1] = v65;
    a2[2] = v60;
    a2[3] = v61;
    a2[4] = v56;
    a2[5] = v57;
    a2[6] = v23;
    a2[7] = v55;
    a2[8] = v62;
    a2[9] = v63;
    return result;
  }
  v98 = result;
  if (result >= 1)
  {
    v80 = v16;
    v81 = a2;
    v91 = 0;
    v92 = 0;
    v87 = 0;
    v95 = 0;
    v90 = 0;
    v93 = 0;
    v25 = 0;
    v99 = v23 & 0xC000000000000001;
    v94 = *MEMORY[0x24BEA16B0];
    v88 = *MEMORY[0x24BEA1680];
    v83 = *MEMORY[0x24BEA1688];
    v100 = (_QWORD *)MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v22 = 136315138;
    v79 = v22;
    v78 = MEMORY[0x24BEE4AD8] + 8;
    v97 = v20;
    v26 = v98;
    while (1)
    {
      if (v99)
        MEMORY[0x2199C49B0](v25, v23);
      else
        swift_retain();
      sub_213EF1DAC();
      if (!v101 || (v27 = sub_213EF1EB4(), swift_release(), !v27))
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_20:
        v32 = v23;
        sub_213DAFEC4((uint64_t)v11, &qword_254D3E610);
        sub_213EF1DAC();
        if (v101 && (v33 = sub_213EF1ECC(), v35 = v34, swift_release(), v35))
        {
          v36 = v100;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v36 = sub_213DB553C(0, v36[2] + 1, 1, v36);
          v38 = v36[2];
          v37 = v36[3];
          v100 = v36;
          if (v38 >= v37 >> 1)
            v100 = sub_213DB553C((_QWORD *)(v37 > 1), v38 + 1, 1, v100);
          v39 = v100;
          v100[2] = v38 + 1;
          v40 = &v39[2 * v38];
          v40[4] = v33;
          v40[5] = v35;
          swift_release();
          v20 = v97;
        }
        else
        {
          swift_release();
        }
        v23 = v32;
        v26 = v98;
        goto LABEL_9;
      }
      sub_213EF1F8C();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        goto LABEL_20;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v11, v12);
      v28 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v29 = v96;
      v28(v96, v20, v12);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v29, v12);
      if (v30 == v94)
      {
        swift_bridgeObjectRelease();
        sub_213EF1DAC();
        if (!v101)
        {
          (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
          swift_release();
          v92 = 0;
          v95 = 0;
          goto LABEL_9;
        }
        v92 = sub_213EF1ECC();
        v95 = v31;
        swift_release();
      }
      else
      {
        if (v30 == v88)
        {
          swift_bridgeObjectRelease();
          sub_213EF1DAC();
          if (!v101)
          {
            (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
            swift_release();
            v90 = 0;
            v93 = 0;
            goto LABEL_9;
          }
          v90 = sub_213EF1ECC();
          v93 = v41;
        }
        else
        {
          if (v30 != v83)
          {
            if (qword_253F04A88 != -1)
              swift_once();
            v43 = sub_213EF2724();
            __swift_project_value_buffer(v43, (uint64_t)qword_253F08A00);
            v44 = v80;
            v28(v80, v97, v12);
            v45 = sub_213EF270C();
            v46 = sub_213EF2C94();
            if (os_log_type_enabled(v45, v46))
            {
              v47 = swift_slowAlloc();
              v77 = v23;
              v48 = v47;
              v49 = swift_slowAlloc();
              v101 = (_QWORD *)v49;
              *(_DWORD *)v48 = v79;
              v76 = v45;
              v50 = sub_213EF1F98();
              *(_QWORD *)(v48 + 4) = sub_213DB0570(v50, v51, (uint64_t *)&v101);
              swift_bridgeObjectRelease();
              v52 = *(void (**)(char *, uint64_t))(v13 + 8);
              v52(v44, v12);
              v53 = v76;
              _os_log_impl(&dword_213DAB000, v76, v46, "Unknown type detected in MediaItem USO: %s", (uint8_t *)v48, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v49, -1, -1);
              v54 = v48;
              v23 = v77;
              v26 = v98;
              MEMORY[0x2199C53C4](v54, -1, -1);

              swift_release();
            }
            else
            {

              swift_release();
              v52 = *(void (**)(char *, uint64_t))(v13 + 8);
              v52(v44, v12);
            }
            v20 = v97;
            v52(v97, v12);
            v52(v96, v12);
            goto LABEL_9;
          }
          swift_bridgeObjectRelease();
          sub_213EF1DAC();
          if (!v101)
          {
            (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
            swift_release();
            v91 = 0;
            v87 = 0;
            goto LABEL_9;
          }
          v91 = sub_213EF1ECC();
          v87 = v42;
        }
        swift_release();
      }
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_9:
      if (v26 == ++v25)
      {
        swift_bridgeObjectRelease();
        a2 = v81;
        v55 = v87;
        v23 = v91;
        v56 = v92;
        v57 = v95;
        v58 = v100;
        goto LABEL_52;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.findEvent(eventId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _OWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v35 = a4;
  v7 = type metadata accessor for FeaturisedTurn(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)&v35 - v12;
  v42 = a3;
  result = swift_bridgeObjectRetain_n();
  v41 = 0;
  while (1)
  {
    v23 = v41;
    v24 = *(_QWORD *)(v42 + 16);
    if (v41 == v24)
    {
      v25 = 1;
      v27 = v39;
      v26 = v40;
      v29 = v37;
      v28 = (uint64_t)v38;
      goto LABEL_15;
    }
    v27 = v39;
    v26 = v40;
    v29 = v37;
    v28 = (uint64_t)v38;
    if (v41 >= v24)
      break;
    sub_213DAFDB8(v42+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v41, v37);
    v25 = 0;
    ++v23;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v25, 1, v26);
    sub_213E6D464(v29, v28);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) == 1)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      v34 = v35;
      v35[4] = 0;
      *v34 = 0u;
      v34[1] = 0u;
      return result;
    }
    v41 = v23;
    v30 = v36;
    sub_213DB0B5C(v28, v36);
    v31 = *(_QWORD *)(v30 + *(int *)(v26 + 28));
    swift_bridgeObjectRetain();
    sub_213DAFE88(v30);
    result = swift_bridgeObjectRelease();
    v32 = v31;
    if (v31)
    {
      v14 = 0;
      v15 = (uint64_t *)(v31 + 64);
      while (1)
      {
        v16 = *(_QWORD *)(v32 + 16);
        if (v14 == v16)
          break;
        if (v14 >= v16)
        {
          __break(1u);
          goto LABEL_22;
        }
        v18 = *(v15 - 4);
        v17 = *(v15 - 3);
        v20 = *(v15 - 2);
        v19 = *(v15 - 1);
        v21 = *v15;
        if (v18 == a1 && v17 == a2)
        {
          v18 = a1;
          v17 = a2;
LABEL_19:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease_n();
          v33 = v35;
          *v35 = v18;
          v33[1] = v17;
          v33[2] = v20;
          v33[3] = v19;
          v33[4] = v21;
          return result;
        }
        v15 += 5;
        ++v14;
        result = sub_213EF3234();
        if ((result & 1) != 0)
          goto LABEL_19;
      }
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_213E6FB5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v40;
  uint64_t v41;

  v0 = sub_213EF1E24();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    if (qword_253F04A88 != -1)
      swift_once();
    v4 = sub_213EF2724();
    __swift_project_value_buffer(v4, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    v5 = sub_213EF270C();
    v6 = sub_213EF2C94();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v41 = v8;
      *(_DWORD *)v7 = 136315138;
      swift_bridgeObjectRetain();
      sub_213DB0570(v2, v3, &v41);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v5, v6, "Regular name was: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v8, -1, -1);
      MEMORY[0x2199C53C4](v7, -1, -1);

      return v2;
    }
LABEL_40:

    swift_bridgeObjectRelease_n();
    return v2;
  }
  if (!sub_213EF1E0C())
    return 0;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACA0]), sel_init);
  sub_213EF1DF4();
  if (v10)
  {
    v11 = sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = (void *)sub_213EF2844();
  objc_msgSend(v9, sel_setValue_forKeyPath_, v11, v12);
  swift_unknownObjectRelease();

  sub_213EF1EFC();
  if (v13)
  {
    v14 = sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = (void *)sub_213EF2844();
  objc_msgSend(v9, sel_setValue_forKeyPath_, v14, v15);
  swift_unknownObjectRelease();

  sub_213EF1E24();
  if (v16)
  {
    v17 = sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v18 = (void *)sub_213EF2844();
  objc_msgSend(v9, sel_setValue_forKeyPath_, v17, v18);
  swift_unknownObjectRelease();

  sub_213EF1F08();
  if (v19)
  {
    v20 = sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v21 = (void *)sub_213EF2844();
  objc_msgSend(v9, sel_setValue_forKeyPath_, v20, v21);
  swift_unknownObjectRelease();

  sub_213EF1F2C();
  if (v22)
  {
    v23 = sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = (void *)sub_213EF2844();
  objc_msgSend(v9, sel_setValue_forKeyPath_, v23, v24);
  swift_unknownObjectRelease();

  sub_213EF1EF0();
  if (v25)
  {
    v26 = sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  v27 = (void *)sub_213EF2844();
  objc_msgSend(v9, sel_setValue_forKeyPath_, v26, v27);
  swift_unknownObjectRelease();

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACC0]), sel_init);
  v28 = -[NSObject stringFromContact:](v5, sel_stringFromContact_, v9);
  if (v28)
  {
    v29 = v28;
    v2 = sub_213EF2850();
    v31 = v30;

  }
  else
  {
    v2 = 0;
    v31 = 0;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v32 = sub_213EF2724();
  __swift_project_value_buffer(v32, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  v33 = sub_213EF270C();
  v34 = sub_213EF2C94();
  if (!os_log_type_enabled(v33, v34))
  {

    swift_release();
    goto LABEL_40;
  }
  v40 = v9;
  v35 = (uint8_t *)swift_slowAlloc();
  v36 = swift_slowAlloc();
  v41 = v36;
  *(_DWORD *)v35 = 136315138;
  if (v31)
    v37 = v2;
  else
    v37 = 7104878;
  if (v31)
    v38 = v31;
  else
    v38 = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_213DB0570(v37, v38, &v41);
  sub_213EF2D9C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, v33, v34, "Formatted name for USO was: %s", v35, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v36, -1, -1);
  MEMORY[0x2199C53C4](v35, -1, -1);

  swift_release();
  return v2;
}

uint64_t MediaSuggestionStoreCandidateAdapter.__allocating_init(store:requiredTags:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 64) = sub_213DCBA9C(MEMORY[0x24BEE4AF8]);
  sub_213DB0BF0(a1, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  return v4;
}

uint64_t MediaSuggestionStoreCandidateAdapter.init(store:requiredTags:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = sub_213DCBA9C(MEMORY[0x24BEE4AF8]);
  sub_213DB0BF0(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  return v2;
}

uint64_t sub_213E70258(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v2 = v1;
  swift_beginAccess();
  v4 = v1[8];
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_5;
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = sub_213DFA3F0(a1);
  if ((v6 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    v8 = v2[5];
    v9 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, v8, v9);
    swift_retain();
    v7 = sub_213E70934(v10, (uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = v2[8];
    v2[8] = 0x8000000000000000;
    sub_213E244FC(v7, a1, isUniquelyReferenced_nonNull_native);
    v2[8] = v13;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v7;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_213E703D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = 0x8000000000000000;
  sub_213E244FC(a2, a1, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 64) = v7;
  swift_release();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_213E7047C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;

  v1 = v0;
  v2 = type metadata accessor for PlusMediaSuggestion();
  v35 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v34 - v6;
  swift_beginAccess();
  v8 = v0[8];
  v9 = *(_QWORD *)(v8 + 64);
  v34 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v36 = (unint64_t)(v10 + 63) >> 6;
  v37 = v8;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_23:
    result = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v16);
    v20 = *(_QWORD *)(result + 16);
    if (v20)
    {
      v39 = v12;
      v40 = v14;
      v21 = v35;
      v22 = result + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      v38 = result;
      swift_bridgeObjectRetain();
      v23 = *(_QWORD *)(v21 + 72);
      do
      {
        sub_213DE6348(v22, (uint64_t)v7);
        v24 = v1[5];
        v25 = v1[6];
        __swift_project_boxed_opaque_existential_1(v1 + 2, v24);
        v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 24))(v7, v24, v25);
        sub_213DE6348((uint64_t)v7, (uint64_t)v5);
        if ((v26 & 1) != 0)
        {
          sub_213DEA4CC((uint64_t)v5);
        }
        else
        {
          v27 = v1[5];
          v28 = v1[6];
          __swift_project_boxed_opaque_existential_1(v1 + 2, v27);
          v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 8))(v5, v27, v28);
          sub_213DEA4CC((uint64_t)v5);
          if ((v29 & 1) == 0)
          {
            if (qword_253F04A88 != -1)
              swift_once();
            v30 = sub_213EF2724();
            __swift_project_value_buffer(v30, (uint64_t)qword_253F08A00);
            v31 = sub_213EF270C();
            v32 = sub_213EF2CA0();
            if (os_log_type_enabled(v31, v32))
            {
              v33 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v33 = 0;
              _os_log_impl(&dword_213DAB000, v31, v32, "Failed to write updated candiates to the suggestion store", v33, 2u);
              MEMORY[0x2199C53C4](v33, -1, -1);
            }

          }
        }
        sub_213DEA4CC((uint64_t)v7);
        v22 += v23;
        --v20;
      }
      while (v20);
      result = swift_bridgeObjectRelease();
      v12 = v39;
      v14 = v40;
    }
  }
  v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v17 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v17);
  ++v14;
  if (v18)
    goto LABEL_22;
  v14 = v17 + 1;
  if (v17 + 1 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v14);
  if (v18)
    goto LABEL_22;
  v14 = v17 + 2;
  if (v17 + 2 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v14);
  if (v18)
    goto LABEL_22;
  v14 = v17 + 3;
  if (v17 + 3 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v14);
  if (v18)
  {
LABEL_22:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_23;
  }
  v19 = v17 + 4;
  if (v19 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v36)
      return swift_release();
    v18 = *(_QWORD *)(v34 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t MediaSuggestionStoreCandidateAdapter.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MediaSuggestionStoreCandidateAdapter.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E70868(uint64_t *a1)
{
  return sub_213E70258(*a1);
}

uint64_t sub_213E7088C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v4 = *a1;
  v5 = *v2;
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v5 + 64) = 0x8000000000000000;
  sub_213E244FC(a2, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 64) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_213E70934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v5 = type metadata accessor for PlusMediaSuggestion();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v20 - v10;
  result = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v20[1] = v2;
    v14 = *(_QWORD *)(v9 + 72);
    v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = a1 + v22;
    v16 = MEMORY[0x24BEE4AF8];
    v21 = v5;
    do
    {
      sub_213DE6348(v15, (uint64_t)v11);
      if ((sub_213EA78A8(*(_QWORD *)&v11[*(int *)(v5 + 44)], *(_QWORD *)(a2 + 56)) & 1) != 0)
      {
        v17 = a2;
        sub_213DEA488((uint64_t)v11, (uint64_t)v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD284(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v23;
        v19 = *(_QWORD *)(v23 + 16);
        v18 = *(_QWORD *)(v23 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_213DCD284(v18 > 1, v19 + 1, 1);
          v16 = v23;
        }
        *(_QWORD *)(v16 + 16) = v19 + 1;
        sub_213DEA488((uint64_t)v8, v16 + v22 + v19 * v14);
        a2 = v17;
        v5 = v21;
      }
      else
      {
        sub_213DEA4CC((uint64_t)v11);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v23;
  }
  return result;
}

unint64_t sub_213E70AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3BCF0;
  if (!qword_254D3BCF0)
  {
    v1 = type metadata accessor for PlusMediaSuggestion();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PlusMediaSuggestion, v1);
    atomic_store(result, (unint64_t *)&qword_254D3BCF0);
  }
  return result;
}

uint64_t type metadata accessor for MediaSuggestionStoreCandidateAdapter()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaSuggestionStoreCandidateAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaSuggestionStoreCandidateAdapter.__allocating_init(store:requiredTags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MediaSuggestionStoreCandidateAdapter.search(query:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MediaSuggestionStoreCandidateAdapter.update(query:candidates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MediaSuggestionStoreCandidateAdapter.persist()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_213E70B8C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_12:
    swift_retain();
    swift_bridgeObjectRetain();
    v2 = sub_213EF306C();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = 4;
      while (1)
      {
        v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x2199C49B0](v3 - 4, a1);
          v6 = v3 - 3;
          if (__OFADD__(v4, 1))
            goto LABEL_11;
        }
        else
        {
          v5 = *(_QWORD *)(a1 + 8 * v3);
          swift_retain();
          v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        v7 = sub_213E718DC(v5);
        swift_release();
        sub_213DB4EE8(v7);
        ++v3;
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          v8 = v10;
          goto LABEL_14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_release_n();
  return v8;
}

uint64_t sub_213E70CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  if (qword_253F04A88 != -1)
    swift_once();
  v4 = sub_213EF2724();
  __swift_project_value_buffer(v4, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v5 = sub_213EF270C();
  v6 = sub_213EF2C94();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v5, v6, "Reviewing %ld candidates for nomination.", v7, 0xCu);
    MEMORY[0x2199C53C4](v7, -1, -1);

  }
  else
  {

    v8 = swift_bridgeObjectRelease();
  }
  v9 = *(_QWORD *)(v2 + 24);
  MEMORY[0x24BDAC7A8](v8);
  v45 = type metadata accessor for PlusMediaSuggestion();
  sub_213DB0DB4((unint64_t *)&qword_254D3BCF0, (uint64_t (*)(uint64_t))type metadata accessor for PlusMediaSuggestion, (uint64_t)&protocol conformance descriptor for PlusMediaSuggestion);
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = sub_213E7543C(a1);
  swift_release_n();
  v11 = sub_213DDDC48(v10);
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(v9 + 16);
  if (v40)
  {
    v37 = v2;
    v39 = v9 + 32;
    swift_bridgeObjectRetain();
    v12 = 0;
    v38 = a1;
    do
    {
      v13 = (_QWORD *)(v39 + 40 * v12);
      v14 = v13[3];
      v15 = v13[4];
      __swift_project_boxed_opaque_existential_1(v13, v14);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(a1, v14, v15);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v41 = v12;
        v42 = v11;
        v49 = MEMORY[0x24BEE4AF8];
        sub_213DCD398(0, v17, 0);
        v18 = v49;
        v19 = *(_QWORD *)(v45 - 8);
        v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        v43 = *(_QWORD *)(v19 + 72);
        v44 = v16;
        do
        {
          v21 = v16 + v20 + *(int *)(v45 + 24);
          v22 = *(_QWORD *)(v21 + 8);
          v48 = *(_QWORD *)v21;
          v23 = *(_QWORD *)(v21 + 16);
          v24 = *(_QWORD *)(v21 + 24);
          v25 = *(_QWORD *)(v21 + 32);
          v26 = *(_QWORD *)(v21 + 40);
          v46 = *(_BYTE *)(v21 + 49);
          v47 = *(_BYTE *)(v21 + 48);
          swift_bridgeObjectRetain();
          sub_213DB8518(v23, v24);
          v28 = *(_QWORD *)(v49 + 16);
          v27 = *(_QWORD *)(v49 + 24);
          if (v28 >= v27 >> 1)
            sub_213DCD398(v27 > 1, v28 + 1, 1);
          v20 += v43;
          *(_QWORD *)(v49 + 16) = v28 + 1;
          v29 = v49 + 56 * v28;
          *(_QWORD *)(v29 + 32) = v48;
          *(_QWORD *)(v29 + 40) = v22;
          *(_QWORD *)(v29 + 48) = v23;
          *(_QWORD *)(v29 + 56) = v24;
          *(_QWORD *)(v29 + 64) = v25;
          *(_QWORD *)(v29 + 72) = v26;
          *(_BYTE *)(v29 + 80) = v47;
          *(_BYTE *)(v29 + 81) = v46;
          --v17;
          v16 = v44;
        }
        while (v17);
        swift_bridgeObjectRelease();
        a1 = v38;
        v12 = v41;
        v11 = v42;
      }
      else
      {
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x24BEE4AF8];
      }
      ++v12;
      v11 = sub_213E727B8(v18, v11, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213E72944);
      swift_bridgeObjectRelease();
    }
    while (v12 != v40);
    swift_bridgeObjectRelease_n();
    v2 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v30 = swift_bridgeObjectRetain();
  v31 = sub_213E745EC(v30, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v32 = sub_213E74EBC(v31, v2, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion, (void (*)(BOOL, uint64_t, uint64_t))sub_213DCD284);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  v33 = sub_213EF270C();
  v34 = sub_213EF2C94();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v35 = 134217984;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v33, v34, "%ld candidates marked as nominated", v35, 0xCu);
    MEMORY[0x2199C53C4](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v32;
}

uint64_t sub_213E711E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  if (qword_253F04A88 != -1)
    swift_once();
  v4 = sub_213EF2724();
  __swift_project_value_buffer(v4, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v5 = sub_213EF270C();
  v6 = sub_213EF2C94();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v5, v6, "Reviewing %ld candidates for nomination.", v7, 0xCu);
    MEMORY[0x2199C53C4](v7, -1, -1);

  }
  else
  {

    v8 = swift_bridgeObjectRelease();
  }
  v9 = *(_QWORD *)(v2 + 24);
  MEMORY[0x24BDAC7A8](v8);
  v43 = type metadata accessor for PlusContactSuggestion();
  sub_213DB0DB4((unint64_t *)&qword_254D3CC30, (uint64_t (*)(uint64_t))type metadata accessor for PlusContactSuggestion, (uint64_t)&protocol conformance descriptor for PlusContactSuggestion);
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = sub_213E75570(a1);
  swift_release_n();
  v11 = sub_213DDF70C(v10);
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v9 + 16);
  if (v39)
  {
    v36 = v2;
    v38 = v9 + 32;
    swift_bridgeObjectRetain();
    v12 = 0;
    v37 = a1;
    do
    {
      v13 = (_QWORD *)(v38 + 40 * v12);
      v14 = v13[3];
      v15 = v13[4];
      __swift_project_boxed_opaque_existential_1(v13, v14);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(a1, v14, v15);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v40 = v12;
        v41 = v11;
        v44 = MEMORY[0x24BEE4AF8];
        sub_213DCD5E0(0, v17, 0);
        v18 = v44;
        v19 = *(_QWORD *)(v43 - 8);
        v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        v42 = *(_QWORD *)(v19 + 72);
        do
        {
          v21 = (uint64_t *)(v20 + *(int *)(v43 + 24));
          v23 = *v21;
          v22 = v21[1];
          v24 = v21[2];
          v25 = v21[3];
          v26 = *(_QWORD *)(v44 + 16);
          v27 = *(_QWORD *)(v44 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v26 >= v27 >> 1)
            sub_213DCD5E0(v27 > 1, v26 + 1, 1);
          v20 += v42;
          *(_QWORD *)(v44 + 16) = v26 + 1;
          v28 = (_QWORD *)(v44 + 32 * v26);
          v28[4] = v23;
          v28[5] = v22;
          v28[6] = v24;
          v28[7] = v25;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
        a1 = v37;
        v12 = v40;
        v11 = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x24BEE4AF8];
      }
      ++v12;
      v11 = sub_213E727B8(v18, v11, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213E72FA8);
      swift_bridgeObjectRelease();
    }
    while (v12 != v39);
    swift_bridgeObjectRelease_n();
    v2 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = swift_bridgeObjectRetain();
  v30 = sub_213E74B90(v29, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v31 = sub_213E74EBC(v30, v2, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion, (void (*)(BOOL, uint64_t, uint64_t))sub_213DCD300);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  v32 = sub_213EF270C();
  v33 = sub_213EF2C94();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v34 = 134217984;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v32, v33, "%ld candidates marked as nominated", v34, 0xCu);
    MEMORY[0x2199C53C4](v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v31;
}

uint64_t sub_213E716A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_213E71708(a1, a2, a3, a4);
  return v8;
}

_QWORD *sub_213E71708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_1;

  type metadata accessor for AdaptiveContactSuggestionNominator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ECF8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  v4[2] = 91;
  v4[3] = 0xE100000000000000;
  v4[8] = a3;
  v4[9] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v4[4] = a2;
  return v4;
}

uint64_t AdaptiveContactSuggestionNominator.__allocating_init<A>(candidateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  v9 = sub_213E26348();
  v10 = swift_allocObject();
  sub_213E71708((uint64_t)v8, v9, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  return v10;
}

uint64_t sub_213E71898(unint64_t a1)
{
  swift_retain();
  return sub_213E70B8C(a1);
}

uint64_t sub_213E718DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t countAndFlagsBits;
  Swift::String_optional v18;
  void *object;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v2 = (uint64_t)v1;
  v4 = *v1;
  v5 = v1 + 5;
  v6 = v1[8];
  v7 = v1[9];
  __swift_project_boxed_opaque_existential_1(v1 + 5, v6);
  v29 = a1;
  v8 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 24))(&v29, v6, v7);
  v9 = sub_213E711E4(v8);
  if (qword_253F04A88 != -1)
    swift_once();
  v10 = sub_213EF2724();
  __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
  swift_retain_n();
  swift_retain();
  v11 = sub_213EF270C();
  v12 = sub_213EF2C94();
  if (os_log_type_enabled(v11, v12))
  {
    v28 = v1 + 5;
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v29 = v14;
    *(_DWORD *)v13 = 136315394;
    v26 = v9;
    v27 = v4;
    v15 = v1[2];
    v16 = v1[3];
    swift_bridgeObjectRetain();
    sub_213DB0570(v15, v16, &v29);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v18 = UsoEntity_common_Person.convertUSOPersonToString()();
    countAndFlagsBits = v18.value._countAndFlagsBits;
    if (v18.value._object)
    {
      object = v18.value._object;
    }
    else
    {
      countAndFlagsBits = 0x3E726F7272453CLL;
      object = (void *)0xE700000000000000;
    }
    sub_213DB0570(countAndFlagsBits, (unint64_t)object, &v29);
    v9 = v26;
    v4 = v27;
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v11, v12, "%s Updating nomination status for candidates with query=%s:", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v14, -1, -1);
    v20 = v13;
    v5 = v28;
    MEMORY[0x2199C53C4](v20, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release();
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v21 = sub_213E75684(v8, v9, v2, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  v23 = *(_QWORD *)(v2 + 64);
  v22 = *(_QWORD *)(v2 + 72);
  __swift_project_boxed_opaque_existential_1(v5, v23);
  v29 = a1;
  (*(void (**)(uint64_t *, unint64_t, uint64_t, uint64_t))(v22 + 32))(&v29, v21, v23, v22);
  v24 = sub_213E750F0(v21);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_213E71BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v52;
  int v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)();
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;

  v58 = a3;
  v60 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t (*)())((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = type metadata accessor for PlusContactSuggestion();
  v11 = *(_QWORD *)(v64 - 8);
  v12 = MEMORY[0x24BDAC7A8](v64);
  v59 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v63 = (char *)&v52 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = ((char *)&v52 - v17);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v57 = (uint64_t)&v52 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v52 - v21;
  v23 = *(_QWORD *)(a2 + 16);
  v61 = v4;
  v62 = v10;
  v65 = a1;
  if (!v23)
  {
    LODWORD(v56) = 0;
    v5 = (uint64_t)v63;
    goto LABEL_16;
  }
  v54 = v18;
  v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v10 = type metadata accessor for PlusContactSuggestion;
  sub_213DCA7E4(a2 + v24, (uint64_t)&v52 - v21, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  swift_bridgeObjectRetain();
  v25 = _s28SiriPrivateLearningInference21PlusContactSuggestionV2eeoiySbAC_ACtFZ_0((uint64_t)v22, a1);
  sub_213DCA828((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if ((v25 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v10 = v62;
    a1 = v65;
    LODWORD(v56) = 1;
LABEL_15:
    v5 = (uint64_t)v63;
    v18 = v54;
LABEL_16:
    if (qword_253F04A88 == -1)
      goto LABEL_17;
    goto LABEL_30;
  }
  v56 = a2;
  if (v23 == 1)
  {
    swift_bridgeObjectRelease();
    LODWORD(v56) = 0;
LABEL_14:
    v10 = v62;
    a1 = v65;
    goto LABEL_15;
  }
  v55 = v11;
  a1 = *(_QWORD *)(v11 + 72);
  v18 = (v56 + a1 + v24);
  v26 = 1;
  while (1)
  {
    sub_213DCA7E4((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    v5 = _s28SiriPrivateLearningInference21PlusContactSuggestionV2eeoiySbAC_ACtFZ_0((uint64_t)v22, v65);
    sub_213DCA828((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    if ((v5 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      LODWORD(v56) = 1;
      goto LABEL_13;
    }
    ++v26;
    v18 = ((char *)v18 + a1);
    if (v11 == v23)
    {
      swift_bridgeObjectRelease();
      LODWORD(v56) = 0;
LABEL_13:
      v11 = v55;
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_17:
  v27 = sub_213EF2724();
  __swift_project_value_buffer(v27, (uint64_t)qword_253F08A00);
  v28 = v57;
  sub_213DCA7E4(a1, v57, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(a1, v5, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v29 = v58;
  swift_retain();
  v30 = sub_213EF270C();
  v31 = sub_213EF2C94();
  if (os_log_type_enabled(v30, (os_log_type_t)v31))
  {
    v53 = v31;
    v54 = v30;
    v55 = v11;
    v32 = (uint64_t)v18;
    v33 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v69 = v52;
    *(_DWORD *)v33 = 136316162;
    v34 = *(_QWORD *)(v29 + 16);
    v35 = *(_QWORD *)(v29 + 24);
    swift_bridgeObjectRetain();
    v66 = sub_213DB0570(v34, v35, &v69);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    v36 = v64;
    v37 = v28 + *(int *)(v64 + 24);
    v38 = *(_QWORD *)(v37 + 8);
    v66 = *(_QWORD *)v37;
    v67 = v38;
    v68 = *(_OWORD *)(v37 + 16);
    v39 = ContactReference.description.getter();
    v66 = sub_213DB0570(v39, v40, &v69);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DCA828(v28, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    *(_WORD *)(v33 + 22) = 2048;
    v66 = *(_QWORD *)(v32 + *(int *)(v36 + 40));
    sub_213EF2D9C();
    sub_213DCA828(v32, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    *(_WORD *)(v33 + 32) = 1024;
    v41 = *(_QWORD *)(v5 + *(int *)(v36 + 36));
    if (*(_QWORD *)(v41 + 16))
    {
      sub_213EF32F4();
      sub_213EF28BC();
      v42 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v41 + 32));
      if (((*(_QWORD *)(v41 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFF8)) >> v42) & 1) != 0)
        __asm { BR              X9 }
      v11 = v55;
      v10 = v62;
      v43 = (uint64_t)v63;
    }
    else
    {
      v43 = v5;
      v11 = v55;
      v10 = v62;
    }
    LODWORD(v5) = v56;
    v44 = v52;
    sub_213DCA828(v43, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    LODWORD(v66) = 0;
    sub_213EF2D9C();
    *(_WORD *)(v33 + 38) = 1024;
    LODWORD(v66) = v5;
    sub_213EF2D9C();
    v45 = v54;
    _os_log_impl(&dword_213DAB000, v54, (os_log_type_t)v53, "%s    Candidate %s, Score: %f, Nominated: %{BOOL}d -> %{BOOL}d", (uint8_t *)v33, 0x2Cu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v44, -1, -1);
    MEMORY[0x2199C53C4](v33, -1, -1);

    a1 = v65;
  }
  else
  {
    sub_213DCA828(v5, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    swift_release();
    sub_213DCA828(v28, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DCA828((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);

    LOBYTE(v5) = v56;
  }
  sub_213E723C8(v5, a1, (uint64_t)v10);
  v46 = a1;
  v47 = v59;
  sub_213DCA7E4(v46, v59, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v48 = v64;
  v49 = (*(uint64_t (**)(uint64_t (*)(), uint64_t, uint64_t))(v11 + 48))(v10, 1, v64);
  v50 = v60;
  if (v49 == 1)
  {
    sub_213DBB430(v47, v60, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DAFEC4((uint64_t)v10, &qword_253F06B28);
  }
  else
  {
    sub_213DCA828(v47, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DBB430((uint64_t)v10, v50, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v50, 0, 1, v48);
}

uint64_t sub_213E723C8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _OWORD v16[5];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlusContactSuggestion();
  v10 = *(_QWORD *)(a2 + *(int *)(v9 + 36));
  if (*(_QWORD *)(v10 + 16))
  {
    v15[1] = a2;
    sub_213EF32F4();
    sub_213EF28BC();
    v11 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v15[0] = a3;
      __asm { BR              X9 }
    }
  }
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
  v12 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  memset(v16, 0, 32);
  swift_bridgeObjectRetain();
  v13 = sub_213ECE3E0((uint64_t)&unk_24D0FFBE8, v10);
  sub_213E7BA00((uint64_t)v8, 0, (uint64_t *)v16, 0, 0, 1, v13, 0, a3, 1, 0);
  swift_bridgeObjectRelease();
  sub_213DAFEC4((uint64_t)v8, &qword_253F04828);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 0, 1, v9);
}

uint64_t AdaptiveContactSuggestionNominator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t AdaptiveContactSuggestionNominator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t sub_213E727B8(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a2 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5, a2);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = a3((char *)v10, v7, v5, a2);
    swift_release();
    MEMORY[0x2199C53C4](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_213E72944(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  unint64_t v30;
  char v32;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = a4;
  v42 = *(_QWORD *)(a3 + 16);
  if (!v42)
  {
    v37 = 0;
LABEL_67:
    swift_retain();
    return sub_213DF4F3C(a1, a2, v37, v4);
  }
  v54 = a4 + 56;
  v41 = a3 + 32;
  swift_bridgeObjectRetain();
  v39 = 0;
  v5 = 0;
  v52 = v4;
  while (2)
  {
    v45 = v5;
    v6 = (uint64_t *)(v41 + 56 * v5);
    v7 = *v6;
    v8 = v6[1];
    v9 = v6[2];
    v10 = v6[3];
    v11 = v6[4];
    v12 = v6[5];
    v46 = *((unsigned __int8 *)v6 + 48);
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    v49 = v9;
    v55 = v10;
    v48 = v11;
    v50 = v12;
    sub_213DB8518(v9, v10);
    sub_213EF28BC();
    v13 = sub_213EF3330();
    v14 = v7;
    v15 = -1 << *(_BYTE *)(v4 + 32);
    v16 = v13 & ~v15;
    if (((*(_QWORD *)(v54 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      sub_213DB859C(v49, v55);
      goto LABEL_4;
    }
    v53 = ~v15;
    if ((v46 & 1) != 0)
      v17 = 0x656E696665646E75;
    else
      v17 = 0x6C7070612E6D6F63;
    v18 = 0xEF636973754D2E65;
    if ((v46 & 1) != 0)
      v18 = 0xE900000000000064;
    v43 = v17;
    v44 = v18;
    v47 = v8;
    while (1)
    {
      v20 = *(_QWORD *)(v4 + 48) + 56 * v16;
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      v23 = *(_QWORD *)(v20 + 32);
      v24 = *(_QWORD *)(v20 + 40);
      v25 = *(unsigned __int8 *)(v20 + 48);
      v26 = *(_QWORD *)v20 == v14 && *(_QWORD *)(v20 + 8) == v8;
      if (!v26 && (sub_213EF3234() & 1) == 0)
        goto LABEL_15;
      if (v21 == 1)
      {
        swift_bridgeObjectRetain();
        v19 = v22;
        sub_213DB8518(v22, 1);
        if (v55 != 1)
          goto LABEL_13;
        goto LABEL_23;
      }
      if (v55 == 1)
      {
        v19 = v22;
        sub_213DB8518(v22, v21);
        sub_213DB8518(v22, v21);
        swift_bridgeObjectRetain();
        sub_213DB8518(v22, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        sub_213DB8518(v49, v55);
        sub_213DB859C(v19, v21);
        v8 = v47;
        sub_213DB859C(v49, v55);
LABEL_14:
        swift_bridgeObjectRelease();
        sub_213DB859C(v19, v21);
        goto LABEL_15;
      }
      if (v21)
      {
        if (!v55 || (v22 == v49 ? (v28 = v21 == v55) : (v28 = 0), !v28 && (sub_213EF3234() & 1) == 0))
        {
LABEL_58:
          v19 = v22;
          sub_213DB8518(v22, v21);
          swift_bridgeObjectRetain();
          sub_213DB8518(v22, v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      else if (v55)
      {
        goto LABEL_58;
      }
      if (!v24)
      {
        if (v50)
          goto LABEL_58;
LABEL_59:
        v19 = v22;
        sub_213DB8518(v22, v21);
        swift_bridgeObjectRetain();
        sub_213DB8518(v22, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      if (!v50)
        goto LABEL_58;
      if (v23 == v48 && v24 == v50)
        goto LABEL_59;
      v19 = v22;
      v51 = sub_213EF3234();
      sub_213DB8518(v22, v21);
      swift_bridgeObjectRetain();
      sub_213DB8518(v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0)
        goto LABEL_14;
LABEL_23:
      v27 = v19;
      if (v25 == 2)
      {
        swift_bridgeObjectRelease();
        sub_213DB859C(v19, v21);
        if (v46 == 2)
          goto LABEL_61;
        goto LABEL_15;
      }
      if (v46 == 2)
        goto LABEL_14;
      v29 = (v25 & 1) != 0 ? 0x656E696665646E75 : 0x6C7070612E6D6F63;
      v30 = (v25 & 1) != 0 ? 0xE900000000000064 : 0xEF636973754D2E65;
      if (v29 == v43 && v30 == v44)
        break;
      v32 = sub_213EF3234();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_213DB859C(v27, v21);
      if ((v32 & 1) != 0)
        goto LABEL_61;
LABEL_15:
      v4 = v52;
      v16 = (v16 + 1) & v53;
      if (((*(_QWORD *)(v54 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_213DB859C(v19, v21);
LABEL_61:
    swift_bridgeObjectRelease();
    result = sub_213DB859C(v49, v55);
    v35 = (v16 >> 3) & 0x1FFFFFFFFFFFFFF8;
    v36 = *(unint64_t *)((char *)a1 + v35);
    *(unint64_t *)((char *)a1 + v35) = v36 | (1 << v16);
    if ((v36 & (1 << v16)) != 0)
    {
      v4 = v52;
      goto LABEL_4;
    }
    v4 = v52;
    if (!__OFADD__(v39, 1))
    {
      ++v39;
LABEL_4:
      v5 = v45 + 1;
      if (v45 + 1 == v42)
      {
        swift_bridgeObjectRelease();
        v37 = v39;
        goto LABEL_67;
      }
      continue;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E72FA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = a4;
  v5 = a2;
  v32 = *(_QWORD *)(a3 + 16);
  if (!v32)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v6 = a4 + 56;
  v31 = a3 + 32;
  swift_bridgeObjectRetain();
  v29 = 0;
  v7 = 0;
  v33 = v4;
  while (2)
  {
    v34 = v7;
    v9 = (uint64_t *)(v31 + 32 * v7);
    v10 = *v9;
    v11 = v9[1];
    v12 = v9[3];
    v35 = v9[2];
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    v13 = sub_213EF3330();
    v14 = -1 << *(_BYTE *)(v4 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v33;
      v8 = v34;
      goto LABEL_4;
    }
    v16 = ~v14;
    v17 = *(_QWORD *)(v33 + 48);
    while (1)
    {
      v18 = (_QWORD *)(v17 + 32 * v15);
      v20 = v18[2];
      v19 = v18[3];
      v21 = *v18 == v10 && v18[1] == v11;
      if (!v21 && (sub_213EF3234() & 1) == 0)
        goto LABEL_8;
      if (v19)
        break;
      if (!v12)
        goto LABEL_21;
LABEL_8:
      v15 = (v15 + 1) & v16;
      if (((*(_QWORD *)(v6 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_3;
    }
    if (!v12)
      goto LABEL_8;
    v22 = v20 == v35 && v19 == v12;
    if (!v22 && (sub_213EF3234() & 1) == 0)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease();
    v4 = v33;
    v8 = v34;
    swift_bridgeObjectRelease();
    v23 = (v15 >> 3) & 0x1FFFFFFFFFFFFFF8;
    v24 = *(unint64_t *)((char *)a1 + v23);
    *(unint64_t *)((char *)a1 + v23) = v24 | (1 << v15);
    if ((v24 & (1 << v15)) != 0 || (v25 = __OFADD__(v29, 1), ++v29, !v25))
    {
LABEL_4:
      v7 = v8 + 1;
      if (v7 == v32)
        goto LABEL_25;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_25:
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v29;
LABEL_27:
  swift_retain();
  return sub_213DF5238(a1, v5, v26, v4);
}

uint64_t sub_213E731DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v3 = (unsigned __int8 *)(a1 + 32);
      swift_bridgeObjectRetain();
      v4 = *v3;
      sub_213EF32F4();
      __asm { BR              X8 }
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_213E73788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v3 = (unsigned __int8 *)(a1 + 32);
      swift_bridgeObjectRetain();
      v4 = *v3;
      sub_213EF32F4();
      __asm { BR              X8 }
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_213E73C78(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v8 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  v14 = v7;
  if (v8 != v9)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < v9)
    {
      v11 = *(unsigned __int8 *)(*a5 + v8 + 32);
      a5[1] = v8 + 1;
      sub_213EF32F4();
      __asm { BR              X8 }
    }
    __break(1u);
    JUMPOUT(0x213E74140);
  }
  swift_retain();
  return sub_213DF4884(a1, a2, v14, a3);
}

uint64_t sub_213E741A4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v8 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  v14 = v7;
  if (v8 != v9)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < v9)
    {
      v11 = *(unsigned __int8 *)(*a5 + v8 + 32);
      a5[1] = v8 + 1;
      sub_213EF32F4();
      __asm { BR              X8 }
    }
    __break(1u);
    JUMPOUT(0x213E745ACLL);
  }
  swift_retain();
  return sub_213DF4C14(a1, a2, v14, a3);
}

uint64_t sub_213E745EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  BOOL v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  char v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE v43[16];
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v48 = type metadata accessor for PlusMediaSuggestion();
  v4 = MEMORY[0x24BDAC7A8](v48);
  v46 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v43[-v7];
  result = MEMORY[0x24BEE4AF8];
  v64 = MEMORY[0x24BEE4AF8];
  v52 = *(_QWORD *)(a1 + 16);
  if (v52)
  {
    v10 = 0;
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v53 = *(_QWORD *)(v6 + 72);
    v44 = v11;
    v51 = a1 + v11;
    v63 = a2 + 56;
    v45 = MEMORY[0x24BEE4AF8];
    v47 = &v43[-v7];
    v61 = a2;
    while (1)
    {
      sub_213DCA7E4(v51 + v53 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_57;
      v54 = v10;
      v12 = &v8[*(int *)(v48 + 24)];
      v13 = *(_QWORD *)v12;
      v14 = *((_QWORD *)v12 + 1);
      v16 = *((_QWORD *)v12 + 2);
      v15 = *((_QWORD *)v12 + 3);
      v17 = *((_QWORD *)v12 + 4);
      v18 = *((_QWORD *)v12 + 5);
      v55 = v12[48];
      sub_213EF32F4();
      swift_bridgeObjectRetain();
      v58 = v17;
      v59 = v16;
      v60 = v18;
      v19 = v13;
      sub_213DB8518(v16, v15);
      sub_213EF28BC();
      v20 = sub_213EF3330();
      v21 = -1 << *(_BYTE *)(a2 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v63 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      {
LABEL_56:
        swift_bridgeObjectRelease();
        sub_213DB859C(v59, v15);
        v8 = v47;
        v10 = v54;
LABEL_57:
        sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
        goto LABEL_58;
      }
      v62 = ~v21;
      v23 = 0x6C7070612E6D6F63;
      if ((v55 & 1) != 0)
        v23 = 0x656E696665646E75;
      v49 = v23;
      v24 = 0xEF636973754D2E65;
      if ((v55 & 1) != 0)
        v24 = 0xE900000000000064;
      v50 = v24;
      v56 = v14;
      v57 = v13;
      while (1)
      {
        v26 = *(_QWORD *)(a2 + 48) + 56 * v22;
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        v30 = *(_QWORD *)(v26 + 32);
        v29 = *(_QWORD *)(v26 + 40);
        v31 = *(unsigned __int8 *)(v26 + 48);
        v32 = *(_QWORD *)v26 == v19 && *(_QWORD *)(v26 + 8) == v14;
        if (!v32 && (sub_213EF3234() & 1) == 0)
          goto LABEL_12;
        if (v27 == 1)
        {
          if (v15 != 1)
            goto LABEL_11;
        }
        else
        {
          if (v15 == 1)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_11:
            v25 = v59;
            sub_213DB8518(v59, v15);
            sub_213DB859C(v28, v27);
            v14 = v56;
            v19 = v57;
            sub_213DB859C(v25, v15);
            goto LABEL_12;
          }
          if (v27)
          {
            if (!v15)
              goto LABEL_12;
            v33 = v28 == v59 && v27 == v15;
            if (!v33 && (sub_213EF3234() & 1) == 0)
              goto LABEL_12;
          }
          else if (v15)
          {
            goto LABEL_12;
          }
          if (v29)
          {
            if (!v60)
              goto LABEL_12;
            v38 = v30 == v58 && v29 == v60;
            if (!v38 && (sub_213EF3234() & 1) == 0)
              goto LABEL_12;
          }
          else
          {
            swift_bridgeObjectRelease();
            if (v60)
              goto LABEL_12;
          }
        }
        if (v31 == 2)
        {
          if (v55 == 2)
            goto LABEL_60;
          goto LABEL_12;
        }
        if (v55 == 2)
          goto LABEL_12;
        v34 = (v31 & 1) != 0 ? 0x656E696665646E75 : 0x6C7070612E6D6F63;
        v35 = (v31 & 1) != 0 ? 0xE900000000000064 : 0xEF636973754D2E65;
        if (v34 == v49 && v35 == v50)
          break;
        v37 = sub_213EF3234();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v37 & 1) != 0)
        {
LABEL_60:
          swift_bridgeObjectRelease();
          goto LABEL_62;
        }
LABEL_12:
        a2 = v61;
        v22 = (v22 + 1) & v62;
        if (((*(_QWORD *)(v63 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          goto LABEL_56;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_62:
      a2 = v61;
      v8 = v47;
      v10 = v54;
      sub_213DB859C(v59, v15);
      sub_213DBB430((uint64_t)v8, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      v39 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_213DCD284(0, *(_QWORD *)(v39 + 16) + 1, 1);
      v40 = v64;
      v42 = *(_QWORD *)(v64 + 16);
      v41 = *(_QWORD *)(v64 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_213DCD284(v41 > 1, v42 + 1, 1);
        v40 = v64;
      }
      *(_QWORD *)(v40 + 16) = v42 + 1;
      v45 = v40;
      sub_213DBB430((uint64_t)v46, v40 + v44 + v42 * v53, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
LABEL_58:
      if (++v10 == v52)
        return v64;
    }
  }
  return result;
}

uint64_t sub_213E74B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v36 = type metadata accessor for PlusContactSuggestion();
  v4 = MEMORY[0x24BDAC7A8](v36);
  v34 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v31 - v7;
  result = MEMORY[0x24BEE4AF8];
  v43 = MEMORY[0x24BEE4AF8];
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v10 = 0;
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v40 = *(_QWORD *)(v6 + 72);
    v32 = v11;
    v37 = a1 + v11;
    v42 = a2 + 56;
    v33 = MEMORY[0x24BEE4AF8];
    v38 = a2;
    v35 = (char *)&v31 - v7;
    while (1)
    {
      sub_213DCA7E4(v37 + v40 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_4;
      v41 = v10;
      v12 = &v8[*(int *)(v36 + 24)];
      v13 = *(_QWORD *)v12;
      v14 = *((_QWORD *)v12 + 1);
      v16 = *((_QWORD *)v12 + 2);
      v15 = *((_QWORD *)v12 + 3);
      sub_213EF32F4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213EF28BC();
      v17 = sub_213EF3330();
      v18 = -1 << *(_BYTE *)(a2 + 32);
      v19 = v17 & ~v18;
      if (((*(_QWORD *)(v42 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v38;
        v8 = v35;
        v10 = v41;
LABEL_4:
        sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
        goto LABEL_5;
      }
      v20 = ~v18;
      v21 = *(_QWORD *)(v38 + 48);
      while (1)
      {
        v22 = (_QWORD *)(v21 + 32 * v19);
        v24 = v22[2];
        v23 = v22[3];
        v25 = *v22 == v13 && v22[1] == v14;
        if (!v25 && (sub_213EF3234() & 1) == 0)
          goto LABEL_10;
        if (v23)
          break;
        if (!v15)
          goto LABEL_23;
LABEL_10:
        v19 = (v19 + 1) & v20;
        if (((*(_QWORD *)(v42 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          goto LABEL_3;
      }
      if (!v15)
        goto LABEL_10;
      v26 = v24 == v16 && v23 == v15;
      if (!v26 && (sub_213EF3234() & 1) == 0)
        goto LABEL_10;
LABEL_23:
      swift_bridgeObjectRelease();
      a2 = v38;
      v8 = v35;
      v10 = v41;
      swift_bridgeObjectRelease();
      sub_213DBB430((uint64_t)v8, v34, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      v27 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_213DCD300(0, *(_QWORD *)(v27 + 16) + 1, 1);
      v28 = v43;
      v30 = *(_QWORD *)(v43 + 16);
      v29 = *(_QWORD *)(v43 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_213DCD300(v29 > 1, v30 + 1, 1);
        v28 = v43;
      }
      *(_QWORD *)(v28 + 16) = v30 + 1;
      v33 = v28;
      sub_213DBB430(v34, v28 + v32 + v30 * v40, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
LABEL_5:
      if (++v10 == v39)
        return v43;
    }
  }
  return result;
}

uint64_t sub_213E74EBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  void (*v25)(BOOL, uint64_t, uint64_t);
  uint64_t (*v26)(_QWORD);
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25 = a4;
  v5 = a3;
  v30 = a2;
  v7 = a3(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v31 = (uint64_t)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v24 - v11;
  result = MEMORY[0x24BEE4AF8];
  v33 = MEMORY[0x24BEE4AF8];
  v29 = *(_QWORD *)(a1 + 16);
  if (v29)
  {
    v24[1] = v4;
    v14 = 0;
    v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v32 = *(_QWORD *)(v10 + 72);
    v27 = v15;
    v28 = a1 + v15;
    v16 = MEMORY[0x24BEE4AF8];
    v26 = v5;
    do
    {
      sub_213DCA7E4(v28 + v32 * v14, (uint64_t)v12, v5);
      v17 = *(_QWORD *)(v30 + 16);
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v19 = (_QWORD *)(v17 + 32);
        swift_bridgeObjectRetain();
        do
        {
          v20 = v19[3];
          v21 = v19[4];
          __swift_project_boxed_opaque_existential_1(v19, v20);
          if (((*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 24))(v12, v20, v21) & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v5 = v26;
            sub_213DCA828((uint64_t)v12, v26);
            goto LABEL_4;
          }
          v19 += 5;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        v5 = v26;
      }
      sub_213DBB430((uint64_t)v12, v31, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v16 = v33;
      v23 = *(_QWORD *)(v33 + 16);
      v22 = *(_QWORD *)(v33 + 24);
      if (v23 >= v22 >> 1)
      {
        v25(v22 > 1, v23 + 1, 1);
        v16 = v33;
      }
      *(_QWORD *)(v16 + 16) = v23 + 1;
      sub_213DBB430(v31, v16 + v27 + v23 * v32, v5);
LABEL_4:
      ++v14;
    }
    while (v14 != v29);
    return v33;
  }
  return result;
}

uint64_t sub_213E750F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)();
  uint64_t (*v12)();
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = type metadata accessor for PlusContactSuggestion();
  v3 = MEMORY[0x24BDAC7A8](v18);
  v15[4] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v15 - v6;
  result = MEMORY[0x24BEE4AF8];
  v20 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v15[1] = v1;
    v9 = 0;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v19 = *(_QWORD *)(v5 + 72);
    v15[2] = v10;
    v15[3] = MEMORY[0x24BEE4AF8];
    v16 = a1 + v10;
    v11 = type metadata accessor for PlusContactSuggestion;
    do
    {
      v12 = v11;
      sub_213DCA7E4(v16 + v19 * v9, (uint64_t)v7, (uint64_t (*)(_QWORD))v11);
      v13 = *(_QWORD *)&v7[*(int *)(v18 + 36)];
      if (*(_QWORD *)(v13 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v14 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v13 + 32));
        if (((*(_QWORD *)(v13 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
      }
      v11 = v12;
      sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))v12);
      ++v9;
    }
    while (v9 != v17);
    return v20;
  }
  return result;
}

uint64_t sub_213E7543C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  char v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_213DCD398(0, v1, 0);
    v2 = v19;
    v4 = *(_QWORD *)(type metadata accessor for PlusMediaSuggestion() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v12 = *(_QWORD *)(v4 + 72);
    do
    {
      swift_getAtKeyPath();
      v6 = v15;
      v7 = v16;
      v9 = *(_QWORD *)(v19 + 16);
      v8 = *(_QWORD *)(v19 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_213DCD398(v8 > 1, v9 + 1, 1);
        v7 = v16;
        v6 = v15;
      }
      *(_QWORD *)(v19 + 16) = v9 + 1;
      v10 = v19 + 56 * v9;
      *(_QWORD *)(v10 + 32) = v13;
      *(_QWORD *)(v10 + 40) = v14;
      *(_OWORD *)(v10 + 48) = v6;
      *(_OWORD *)(v10 + 64) = v7;
      *(_BYTE *)(v10 + 80) = v17;
      *(_BYTE *)(v10 + 81) = v18;
      v5 += v12;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_213E75570(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_213DCD5E0(0, v1, 0);
    v2 = v15;
    v4 = *(_QWORD *)(type metadata accessor for PlusContactSuggestion() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      swift_getAtKeyPath();
      v7 = v14;
      v9 = *(_QWORD *)(v15 + 16);
      v8 = *(_QWORD *)(v15 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_213DCD5E0(v8 > 1, v9 + 1, 1);
        v7 = v14;
      }
      *(_QWORD *)(v15 + 16) = v9 + 1;
      v10 = v15 + 32 * v9;
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v13;
      *(_OWORD *)(v10 + 48) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_213E75684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for PlusContactSuggestion();
  v11 = *(_QWORD *)(v30 - 8);
  v12 = MEMORY[0x24BDAC7A8](v30);
  v29 = (uint64_t)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v28 = (uint64_t)v24 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x24BEE4AF8];
  v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24[1] = a1;
  v25 = v16;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v26 = a3;
  v27 = a4;
  do
  {
    sub_213E71BE4(v17, v31, a3, (uint64_t)v10);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v30) == 1)
    {
      sub_213DAFEC4((uint64_t)v10, &qword_253F06B28);
    }
    else
    {
      v20 = v28;
      sub_213DBB430((uint64_t)v10, v28, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      sub_213DBB430(v20, v29, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_213DB6968(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = sub_213DB6968(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_213DBB430(v29, v19 + v25 + v22 * v18, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      a3 = v26;
    }
    v17 += v18;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t type metadata accessor for AdaptiveContactSuggestionNominator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdaptiveContactSuggestionNominator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdaptiveContactSuggestionNominator.nominate(queries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_213E75918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a3 + a2 - 8) + 88))(*(_QWORD *)(a3 + a2 - 16));
}

uint64_t sub_213E75948()
{
  return 16;
}

__n128 sub_213E75954(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t CommonContactFeature.RecipientContactReferences.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t CommonContactFeature.RecipientContactReferences.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t CommonContactFeature.RecipientContactReferences.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E75A50()
{
  type metadata accessor for CommonContactFeature.RecipientContactReferences();
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E75A98()
{
  type metadata accessor for CommonContactFeature.RecipientContactReferences();
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t CommonContactReference.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommonContactReference.contactIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommonContactReference.handleLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s28SiriPrivateLearningInference22CommonContactReferenceV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_213EF3234(), result = 0, (v10 & 1) != 0))
  {
    if (v4)
    {
      if (!v6)
        return 0;
      if (v2 != v7 || v4 != v6)
      {
        v12 = sub_213EF3234();
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v5)
    {
      if (v8 && (v3 == v9 && v5 == v8 || (sub_213EF3234() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonContactFeature()
{
  return &type metadata for CommonContactFeature;
}

uint64_t type metadata accessor for CommonContactFeature.RecipientContactReferences()
{
  uint64_t result;

  result = qword_254D3ED00;
  if (!qword_254D3ED00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E75CB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E75CF4()
{
  return type metadata accessor for CommonContactFeature.RecipientContactReferences();
}

uint64_t getEnumTagSinglePayload for CommonContactReference(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonContactReference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonContactReference()
{
  return &type metadata for CommonContactReference;
}

uint64_t sub_213E75DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EE28);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_213EF44B0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EE30);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0x3FB999999999999ALL;
  v16 = v2;
  v4 = sub_213DCA20C(&qword_254D3EE38, &qword_254D3EE30, (uint64_t)&unk_213EF78C8);
  v17 = v4;
  *(_QWORD *)&v15 = v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0x3FD999999999999ALL;
  v13 = v2;
  v14 = v4;
  *(_QWORD *)&v12 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EE40);
  v7 = swift_allocObject();
  sub_213DB0BF0(&v15, v7 + 16);
  sub_213DB0BF0(&v12, v7 + 56);
  *(_QWORD *)(v7 + 96) = sub_213E75FC0;
  *(_QWORD *)(v7 + 104) = 0;
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 64) = sub_213DCA20C(&qword_254D3EE48, &qword_254D3EE40, (uint64_t)&unk_213F016B0);
  *(_QWORD *)(v1 + 32) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EE50);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = &unk_24D100428;
  *(_QWORD *)(v1 + 96) = v8;
  *(_QWORD *)(v1 + 104) = sub_213DCA20C(&qword_254D3EE58, &qword_254D3EE50, (uint64_t)&unk_213EF5E50);
  *(_QWORD *)(v1 + 72) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EE60);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_213EF44B0;
  *(_QWORD *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EE68);
  *(_QWORD *)(v10 + 64) = sub_213DCA20C(&qword_254D3EE70, &qword_254D3EE68, (uint64_t)&unk_213EFB348);
  *(_QWORD *)(v10 + 32) = 0x3FC999999999999ALL;
  *(_QWORD *)(v10 + 96) = &type metadata for OneMediaNominationGlobalFilter;
  *(_QWORD *)(v10 + 104) = sub_213E76020();
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v10;
  return v0;
}

uint64_t sub_213E75FC0()
{
  return PlusMediaSuggestion.isNominated.getter() & 1;
}

uint64_t type metadata accessor for MediaSuggestionCandidateNominator()
{
  uint64_t result;

  result = qword_254D3ED78;
  if (!qword_254D3ED78)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_213E76020()
{
  unint64_t result;

  result = qword_254D3EE78;
  if (!qword_254D3EE78)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00ED0, &type metadata for OneMediaNominationGlobalFilter);
    atomic_store(result, (unint64_t *)&qword_254D3EE78);
  }
  return result;
}

uint64_t SessionGroundTruths.init(sessionId:groundTruth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for SessionGroundTruths();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for SessionGroundTruths()
{
  uint64_t result;

  result = qword_253F04B88;
  if (!qword_253F04B88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SessionGroundTruths.sessionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SessionGroundTruths.groundTruth.getter()
{
  type metadata accessor for SessionGroundTruths();
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionGroundTruths(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionGroundTruths(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionGroundTruths(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionGroundTruths(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionGroundTruths(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SessionGroundTruths(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionGroundTruths()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E763BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionGroundTruths()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E76444(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_213E764BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213E76530(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_213EF3234();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_213EF3234() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E765F4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E76658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int16 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  __int128 v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  __int128 v46;
  __int128 v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[10];
  uint64_t v68[10];
  _QWORD v69[10];
  char v70[8];
  uint64_t v71;
  char v72[8];
  uint64_t v73;

  v44 = a1;
  v42 = (int *)type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v42);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
    return 0;
  v7 = a2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v43 = *(_QWORD *)(v3 + 72);
  v27 = a2;
  swift_bridgeObjectRetain();
  do
  {
    sub_213DE6348(v7, (uint64_t)v5);
    if ((sub_213EF1D28() & 1) == 0)
      goto LABEL_4;
    v8 = v42[5];
    v9 = *(_QWORD *)(v44 + v8);
    sub_213E6EFF8(*(_QWORD *)&v5[v8], v67);
    v11 = v67[0];
    v10 = v67[1];
    v35 = v67[4];
    v40 = v67[5];
    v41 = v67[3];
    v30 = v67[6];
    v37 = v67[7];
    v38 = v67[2];
    v28 = v67[8];
    v33 = v67[9];
    sub_213E6EFF8(v9, v68);
    v12 = v68[0];
    v13 = v68[1];
    v14 = v68[2];
    v15 = v68[3];
    v34 = v68[4];
    v39 = v68[5];
    v36 = v68[7];
    v29 = v68[8];
    v31 = v68[6];
    v32 = v68[9];
    sub_213E033BC((uint64_t)v67, (uint64_t)v72);
    if (v73 == 1)
    {
      sub_213E033BC((uint64_t)v68, (uint64_t)v70);
      if (v71 != 1)
        goto LABEL_3;
    }
    else
    {
      sub_213E033BC((uint64_t)v68, (uint64_t)v69);
      if (v69[1] == 1)
      {
LABEL_3:
        v49 = v11;
        v50 = v10;
        *(_QWORD *)&v51 = v38;
        *((_QWORD *)&v51 + 1) = v41;
        *(_QWORD *)&v52 = v35;
        *((_QWORD *)&v52 + 1) = v40;
        v53 = v30;
        v54 = v37;
        v55 = v28;
        v56 = v33;
        v57 = v12;
        v58 = v13;
        v59 = v14;
        v60 = v15;
        v61 = v34;
        v62 = v39;
        v63 = v31;
        v64 = v36;
        v65 = v29;
        v66 = v32;
        sub_213DC0674(&v49);
        goto LABEL_4;
      }
      if (v10)
      {
        if (!v13 || (v11 != v12 || v10 != v13) && (sub_213EF3234() & 1) == 0)
        {
LABEL_49:
          sub_213DC077C(v68);
          sub_213DC077C(v67);
          goto LABEL_4;
        }
      }
      else if (v13)
      {
        goto LABEL_49;
      }
      if (v41)
      {
        if (!v15 || (v38 != v14 || v41 != v15) && (sub_213EF3234() & 1) == 0)
          goto LABEL_49;
      }
      else if (v15)
      {
        goto LABEL_49;
      }
      if (v40)
      {
        if (!v39 || (v35 != v34 || v40 != v39) && (sub_213EF3234() & 1) == 0)
          goto LABEL_49;
      }
      else if (v39)
      {
        goto LABEL_49;
      }
      if (v37)
      {
        if (!v36 || (v30 != v31 || v37 != v36) && (sub_213EF3234() & 1) == 0)
          goto LABEL_49;
      }
      else if (v36)
      {
        goto LABEL_49;
      }
      if (v33)
      {
        if (!v32)
          goto LABEL_49;
        if (v28 == v29 && v33 == v32)
        {
          sub_213DC077C(v68);
          sub_213DC077C(v67);
        }
        else
        {
          v24 = sub_213EF3234();
          sub_213DC077C(v68);
          sub_213DC077C(v67);
          if ((v24 & 1) == 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_213DC077C(v68);
        sub_213DC077C(v67);
        if (v32)
          goto LABEL_4;
      }
    }
    v16 = &v5[v42[6]];
    v17 = *((_QWORD *)v16 + 1);
    v18 = *((_WORD *)v16 + 24);
    v49 = *(_QWORD *)v16;
    v50 = v17;
    v19 = *((_OWORD *)v16 + 2);
    v51 = *((_OWORD *)v16 + 1);
    v52 = v19;
    LOWORD(v53) = v18;
    v20 = v44 + v42[6];
    v21 = *(_QWORD *)(v20 + 8);
    v22 = *(_WORD *)(v20 + 48);
    v45[0] = *(_QWORD *)v20;
    v45[1] = v21;
    v23 = *(_OWORD *)(v20 + 32);
    v46 = *(_OWORD *)(v20 + 16);
    v47 = v23;
    v48 = v22;
    if (_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)&v49, (uint64_t)v45)
      && (sub_213E292F8(*(_QWORD *)&v5[v42[7]], *(_QWORD *)(v44 + v42[7])) & 1) != 0
      && *(double *)&v5[v42[8]] == *(double *)(v44 + v42[8])
      && (sub_213E294D0(*(_QWORD *)&v5[v42[9]], *(_QWORD *)(v44 + v42[9])) & 1) != 0
      && *(double *)&v5[v42[10]] == *(double *)(v44 + v42[10])
      && (sub_213E77120(*(_QWORD *)&v5[v42[11]], *(_QWORD *)(v44 + v42[11])) & 1) != 0)
    {
      sub_213DEA4CC((uint64_t)v5);
      v26 = 1;
      goto LABEL_55;
    }
LABEL_4:
    sub_213DEA4CC((uint64_t)v5);
    v7 += v43;
    --v6;
  }
  while (v6);
  v26 = 0;
LABEL_55:
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t isMediaPlayIntentEvent(_:)(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) == 0xD000000000000011 && *(_QWORD *)(a1 + 32) == 0x8000000213F048A0)
    return 1;
  else
    return sub_213EF3234();
}

BOOL isSiriPlayMedia(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_213DDDEB8((uint64_t)&unk_24D0FFCC8);
  swift_arrayDestroy();
  type metadata accessor for FeaturisedTurn(0);
  v1 = swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_213DAE9A8(v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    if ((sub_213E76530(0xD000000000000024, 0x8000000213F04730, v2) & 1) != 0)
    {
      v3 = sub_213DDDEB8((uint64_t)v2);
      swift_bridgeObjectRelease();
      v4 = sub_213DF2984(v3, v0);
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v4 + 16);
      swift_release();
      return v5 == 1;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_213E76C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v11;

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v2 = *(_QWORD *)(a1 + 56);
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v11 = (unint64_t)(v3 + 63) >> 6;
    if ((v4 & v2) != 0)
    {
      v5 = __clz(__rbit64(v4 & v2));
      goto LABEL_21;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v6 = *(_QWORD *)(a1 + 64);
      v7 = 1;
      if (v6)
        goto LABEL_20;
      v7 = 2;
      if ((unint64_t)(v3 + 63) >> 6 > 2)
      {
        v6 = *(_QWORD *)(a1 + 72);
        if (v6)
          goto LABEL_20;
        v7 = 3;
        if ((unint64_t)(v3 + 63) >> 6 > 3)
        {
          v6 = *(_QWORD *)(a1 + 80);
          if (!v6)
          {
            v8 = 4;
            if (v11 > 4)
            {
              v6 = *(_QWORD *)(a1 + 88);
              if (v6)
              {
                v7 = 4;
                goto LABEL_20;
              }
              while (1)
              {
                v7 = v8 + 1;
                if (__OFADD__(v8, 1))
                {
                  __break(1u);
                  JUMPOUT(0x213E770E4);
                }
                if (v7 >= v11)
                  break;
                v6 = *(_QWORD *)(a1 + 56 + 8 * v7);
                ++v8;
                if (v6)
                  goto LABEL_20;
              }
            }
            return 1;
          }
LABEL_20:
          v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_21:
          v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v5);
          sub_213EF32F4();
          __asm { BR              X8 }
        }
      }
    }
  }
  return 1;
}

uint64_t sub_213E77120(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v13 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_23;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_22;
      v8 = 2;
      if (v13 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_22;
      v8 = 3;
      if (v13 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_22;
      v8 = 4;
      if (v13 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_22:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_23:
        sub_213E2B4BC(*(_QWORD *)(a2 + 40), *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6));
        v11 = v10 & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 5;
      if (v13 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x213E77570);
          }
          if (v8 >= v13)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_22;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_213E775B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  __int128 v20;
  uint64_t v21[5];
  __int128 v22;
  unsigned __int8 v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for FeaturisedTurn(0) + 28)) + 16);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain();
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v4 = (uint64_t *)(v2 + 64);
    do
    {
      v8 = *(v4 - 4);
      v20 = *(_OWORD *)(v4 - 3);
      v9 = *(v4 - 1);
      v10 = *v4;
      if (v9 == 0xD000000000000011 && v10 == 0x8000000213F048A0 || (sub_213EF3234() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        *(_QWORD *)&v25[0] = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_213DCD02C(0, v3[2] + 1, 1);
          v3 = *(_QWORD **)&v25[0];
        }
        v6 = v3[2];
        v5 = v3[3];
        if (v6 >= v5 >> 1)
        {
          sub_213DCD02C(v5 > 1, v6 + 1, 1);
          v3 = *(_QWORD **)&v25[0];
        }
        v3[2] = v6 + 1;
        v7 = &v3[5 * v6];
        v7[4] = v8;
        *(_OWORD *)(v7 + 5) = v20;
        v7[7] = v9;
        v7[8] = v10;
      }
      v4 += 5;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    v11 = v3[2];
    if (v11)
      goto LABEL_13;
LABEL_35:
    swift_release();
    return 0;
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v11)
    goto LABEL_35;
LABEL_13:
  v12 = v3 + 6;
  swift_retain();
  v13 = 1;
  do
  {
    v14 = *v12;
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v14 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v16, (uint64_t)&v22);
        sub_213DAFDFC((uint64_t)&v22, (uint64_t)v21);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
        v16 += 40;
        if (!--v15)
        {
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v22, (uint64_t)v25);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
LABEL_20:
      v26 = 0;
      memset(v25, 0, sizeof(v25));
    }
    sub_213DAFE40((uint64_t)v25, (uint64_t)&v22);
    if (!v24)
    {
      sub_213DB848C((uint64_t)&v22);
LABEL_28:
      sub_213DB848C((uint64_t)v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_29;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_28;
    swift_retain();
    sub_213EF23D0();
    swift_release_n();
    v17 = v23;
    sub_213DB848C((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v17 != 2 && (v17 & 1) != 0)
    {
      swift_release_n();
      return 1;
    }
LABEL_29:
    if (v13 == v11)
      goto LABEL_33;
    v12 = &v3[5 * v13 + 6];
  }
  while (!__OFADD__(v13++, 1));
  __break(1u);
LABEL_33:
  swift_release_n();
  return 0;
}

uint64_t isMediaNowPlayingEvent(_:)(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) == 0xD000000000000011 && *(_QWORD *)(a1 + 32) == 0x8000000213F048C0)
    return 1;
  else
    return sub_213EF3234();
}

uint64_t sub_213E779E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v5 = a5 >> 1;
  if (a5 >> 1 == a4)
    return 0;
  if ((uint64_t)(a5 >> 1) > a4)
  {
    v9 = result;
    v10 = (_QWORD *)(a3 + 16 * a4);
    if (*v10 == result && v10[1] == a2)
      return 1;
    result = sub_213EF3234();
    if ((result & 1) != 0)
      return 1;
    v12 = a4 + 1;
    if (a4 + 1 == v5)
      return 0;
    v13 = (_QWORD *)(a3 + 16 * a4 + 24);
    while (v12 < v5)
    {
      v14 = *(v13 - 1) == v9 && *v13 == a2;
      if (v14 || (sub_213EF3234() & 1) != 0)
        return 1;
      result = 0;
      ++v12;
      v13 += 2;
      if (v5 == v12)
        return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_213E77ABC()
{
  uint64_t result;

  type metadata accessor for QuickHangupClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B50);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06B30 = 91;
  unk_253F06B38 = 0xE100000000000000;
  return result;
}

uint64_t sub_213E77B3C@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v31);
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213EF1CF8();
  v27 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = a1[1];
  v29 = *a1;
  v30 = v11;
  type metadata accessor for FeaturisedTurn(0);
  v12 = swift_bridgeObjectRetain();
  sub_213DAF3F8(v12);
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRetain();
  sub_213DAE808(v15);
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0 && (v17 & 1) != 0)
  {
    sub_213EF25C8();
  }
  else
  {
    v18 = swift_bridgeObjectRetain();
    sub_213DAF404(v18);
    v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      sub_213EF1CC8();
      sub_213EF1CC8();
      sub_213EF1C80();
      v21 = *(void (**)(char *, uint64_t))(v27 + 8);
      v21(v8, v5);
      v21(v10, v5);
      v22 = (uint64_t)v28;
      swift_storeEnumTagMultiPayload();
      return sub_213DBB430(v22, (uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
    }
    type metadata accessor for PhoneCallEventFeature.CallEndTimestamp(0);
  }
  *a2 = sub_213EF23AC();
  a2[1] = v24;
  v25 = v30;
  a2[2] = v29;
  a2[3] = v25;
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E77D88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v48 = a1;
  v3 = type metadata accessor for RuleResult();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v42 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - v8;
  v11 = *a2;
  v10 = a2[1];
  v13 = a2[2];
  v12 = a2[3];
  v45 = a2[4];
  v46 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07018);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v51 = *(_QWORD *)(v15 + 72);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_213EF5FF0;
  v49 = v17;
  v18 = (_QWORD *)(v17 + v16);
  v52 = v14;
  v19 = (uint64_t *)(v17 + v16 + *(int *)(v14 + 48));
  *v18 = 0xD000000000000011;
  v18[1] = 0x8000000213F08CE0;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_213DAF1F8(v20);
  swift_bridgeObjectRelease();
  v47 = v11;
  if (v21 == 2)
  {
    type metadata accessor for CommonFeature.DonatedBySiri(0);
    *v19 = sub_213EF23AC();
    v19[1] = v22;
    v19[2] = v11;
    v19[3] = v10;
    v23 = v3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = v3;
    swift_storeEnumTagMultiPayload();
    sub_213DBB430((uint64_t)v9, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
  }
  v24 = (_QWORD *)((char *)v18 + v51);
  v25 = (_QWORD *)((char *)v18 + v51 + *(int *)(v52 + 48));
  v53 = 0;
  v54 = 0xE000000000000000;
  sub_213EF2EB0();
  sub_213EF2904();
  sub_213EF2B8C();
  v26 = v54;
  *v24 = v53;
  v24[1] = v26;
  v27 = swift_bridgeObjectRetain();
  sub_213DAF3EC(v27);
  v29 = v28;
  swift_bridgeObjectRelease();
  v44 = v23;
  if ((v29 & 1) != 0)
  {
    type metadata accessor for PhoneCallEventFeature.CallDuration(0);
    *v25 = sub_213EF23AC();
    v25[1] = v32;
    v31 = v47;
    v25[2] = v47;
    v25[3] = v10;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = (uint64_t)v43;
    swift_storeEnumTagMultiPayload();
    sub_213DBB430(v30, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
    v31 = v47;
  }
  v33 = v51;
  v34 = (_QWORD *)((char *)v18 + 2 * v51);
  v35 = (_QWORD *)((char *)v34 + *(int *)(v52 + 48));
  v53 = 0;
  v54 = 0xE000000000000000;
  sub_213EF2EB0();
  sub_213EF2904();
  sub_213EF2B8C();
  v36 = v54;
  *v34 = v53;
  v34[1] = v36;
  v53 = v31;
  v54 = v10;
  v55 = v13;
  v56 = v46;
  v57 = v45;
  sub_213E77B3C(&v53, v35);
  v37 = (_QWORD *)((char *)v18 + 3 * v33);
  *v37 = 0xD000000000000011;
  v37[1] = 0x8000000213F08D40;
  type metadata accessor for FeaturisedTurn(0);
  v38 = swift_bridgeObjectRetain();
  v39 = sub_213DAF3C8(v38);
  swift_bridgeObjectRelease();
  if (v39)
  {
    if (v39 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_213EF306C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v40 = (uint64_t)v50;
  swift_storeEnumTagMultiPayload();
  sub_213DBB430(v40, (uint64_t)v37 + *(int *)(v52 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
  return v49;
}

uint64_t QuickHangupClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t QuickHangupClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E781F8(uint64_t a1)
{
  return sub_213E78218(a1);
}

uint64_t sub_213E78218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  int v45;
  _BOOL4 v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  int *v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  _QWORD v83[2];
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *boxed_opaque_existential_1;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  __int128 v98;
  uint64_t v99[5];
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  void (*v104)(char *, char *, uint64_t);

  v85 = type metadata accessor for QuickHangupClassification();
  MEMORY[0x24BDAC7A8](v85);
  v84 = (char *)v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_213EF1D64();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v86 = (char *)v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v94);
  v93 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeaturisedTurn(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v88 = (uint64_t)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v83 - v9;
  if (qword_253F04A88 != -1)
    swift_once();
  v11 = sub_213EF2724();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v92 = v12;
  v13 = sub_213EF270C();
  v14 = sub_213EF2C94();
  if (os_log_type_enabled(v13, v14))
  {
    v91 = v5;
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)&v102 = v16;
    *(_DWORD *)v15 = 136315394;
    if (qword_253F06B48 != -1)
      swift_once();
    v17 = qword_253F06B30;
    v18 = unk_253F06B38;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v100 = sub_213DB0570(v17, v18, (uint64_t *)&v102);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2048;
    *(_QWORD *)&v100 = *(_QWORD *)(a1 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v13, v14, "%s Identifying quick hangups in %ld turn(s)", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v16, -1, -1);
    MEMORY[0x2199C53C4](v15, -1, -1);

    v5 = v91;
    v19 = *(_QWORD *)(a1 + 16);
    if (v19)
      goto LABEL_7;
    return MEMORY[0x24BEE4AF8];
  }

  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  sub_213DAFDB8(a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * (v19 - 1), (uint64_t)v10);
  v20 = *(int *)(v5 + 28);
  v90 = v10;
  v21 = *(_QWORD *)&v10[v20];
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
LABEL_30:
    v33 = sub_213EF270C();
    v34 = sub_213EF2C94();
    if (!os_log_type_enabled(v33, v34))
    {

      goto LABEL_35;
    }
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    *(_QWORD *)&v102 = v36;
    *(_DWORD *)v35 = 136315138;
    v37 = (uint64_t)v90;
    if (qword_253F06B48 != -1)
      swift_once();
    v38 = qword_253F06B30;
    v39 = unk_253F06B38;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v100 = sub_213DB0570(v38, v39, (uint64_t *)&v102);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v33, v34, "%s No attached phone call events - skipping quick hangup detection", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v36, -1, -1);
    MEMORY[0x2199C53C4](v35, -1, -1);

    v32 = MEMORY[0x24BEE4AF8];
    goto LABEL_37;
  }
  v91 = v5;
  *(_QWORD *)&v98 = v21 + 32;
  v83[1] = v21;
  swift_bridgeObjectRetain_n();
  v23 = 0;
  boxed_opaque_existential_1 = "nerationTriggered";
  v96 = (void (*)(char *, char *, uint64_t))0x8000000213F04860;
  while (1)
  {
    v24 = (uint64_t *)(v98 + 40 * v23);
    v25 = v24[1];
    v97 = *v24;
    v27 = v24[2];
    v26 = v24[3];
    v28 = (void (*)(char *, char *, uint64_t))v24[4];
    v29 = *(_QWORD *)(v27 + 16);
    if (v29)
    {
      v30 = v27 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v30, (uint64_t)&v100);
        sub_213DAFDFC((uint64_t)&v100, (uint64_t)v99);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for CommonFeature.InteractionDirection(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v100);
        v30 += 40;
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v100, (uint64_t)&v102);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
LABEL_18:
      v104 = 0;
      v102 = 0u;
      v103 = 0u;
    }
    sub_213DAFE40((uint64_t)&v102, (uint64_t)&v100);
    if (v101)
      break;
    sub_213DB848C((uint64_t)&v100);
LABEL_10:
    sub_213DB848C((uint64_t)&v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_11:
    if (++v23 == v22)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_30;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  type metadata accessor for CommonFeature.InteractionDirection(0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_10;
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v31 = v100;
  sub_213DB848C((uint64_t)&v102);
  swift_bridgeObjectRelease();
  if ((v26 != 0xD000000000000011 || v28 != v96) && (sub_213EF3234() & 1) == 0 || v31 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease_n();
  *(_QWORD *)&v102 = v97;
  *((_QWORD *)&v102 + 1) = v25;
  *(_QWORD *)&v103 = v27;
  *((_QWORD *)&v103 + 1) = v26;
  v104 = v28;
  v41 = (uint64_t)v90;
  v42 = sub_213E77D88((uint64_t)v90, (uint64_t *)&v102);
  v43 = v88;
  sub_213DAFDB8(v41, v88);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v44 = sub_213EF270C();
  v45 = sub_213EF2C94();
  v46 = os_log_type_enabled(v44, (os_log_type_t)v45);
  *(_QWORD *)&v98 = v42;
  if (v46)
  {
    LODWORD(v96) = v45;
    v47 = swift_slowAlloc();
    boxed_opaque_existential_1 = (char *)swift_slowAlloc();
    *(_QWORD *)&v102 = boxed_opaque_existential_1;
    *(_DWORD *)v47 = 136315650;
    if (qword_253F06B48 != -1)
      swift_once();
    v49 = qword_253F06B30;
    v48 = unk_253F06B38;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v100 = sub_213DB0570(v49, v48, (uint64_t *)&v102);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    v50 = v88;
    v51 = FeaturisedTurn.friendlyName.getter();
    *(_QWORD *)&v100 = sub_213DB0570(v51, v52, (uint64_t *)&v102);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DCA828(v50, type metadata accessor for FeaturisedTurn);
    *(_WORD *)(v47 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v100 = sub_213DB0570(v97, v25, (uint64_t *)&v102);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213DAB000, v44, (os_log_type_t)v96, "%s Rule matrix for [Turn ID: %s, Event ID: %s]:", (uint8_t *)v47, 0x20u);
    v53 = boxed_opaque_existential_1;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v53, -1, -1);
    MEMORY[0x2199C53C4](v47, -1, -1);

    v42 = v98;
  }
  else
  {
    sub_213DCA828(v43, type metadata accessor for FeaturisedTurn);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_213EE84EC(8224, 0xE200000000000000, v42);
  v54 = *(_QWORD *)(v42 + 16);
  if (!v54)
  {
    swift_bridgeObjectRelease();
LABEL_50:
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A650);
    v32 = swift_allocObject();
    v98 = xmmword_213EF53E0;
    *(_OWORD *)(v32 + 16) = xmmword_213EF53E0;
    v62 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
    v62(v86, v41, v89);
    swift_bridgeObjectRetain();
    v63 = swift_bridgeObjectRetain();
    v64 = sub_213DAF3C8(v63);
    result = swift_bridgeObjectRelease();
    v96 = (void (*)(char *, char *, uint64_t))v62;
    if (v64)
    {
      if (v64 >> 62)
      {
        swift_bridgeObjectRetain();
        v66 = sub_213EF306C();
        result = swift_bridgeObjectRelease();
        if (v66)
          goto LABEL_53;
      }
      else if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_53:
        if ((v64 & 0xC000000000000001) != 0)
        {
          v65 = MEMORY[0x2199C49B0](0, v64);
        }
        else
        {
          if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v65 = *(_QWORD *)(v64 + 32);
          swift_retain();
        }
        v94 = v65;
        swift_bridgeObjectRelease();
LABEL_61:
        v67 = swift_bridgeObjectRetain();
        v68 = sub_213DAF404(v67);
        v70 = v69;
        swift_bridgeObjectRelease();
        v71 = (int *)v85;
        *(_QWORD *)(v32 + 56) = v85;
        *(_QWORD *)(v32 + 64) = &protocol witness table for QuickHangupClassification;
        boxed_opaque_existential_1 = (char *)__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v32 + 32));
        v72 = (uint64_t)v84;
        v73 = v86;
        v96(v84, v86, v89);
        v74 = (_QWORD *)(v72 + v71[5]);
        *v74 = v97;
        v74[1] = v25;
        v75 = v72 + v71[7];
        *(_QWORD *)v75 = v68;
        *(_BYTE *)(v75 + 8) = v70 & 1;
        *(_QWORD *)(v72 + v71[6]) = v94;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
        v76 = v87;
        v77 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
        v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = v98;
        v79 = v78 + v77;
        v80 = v89;
        v96((char *)v79, v73, v89);
        *(_QWORD *)(v72 + v71[8]) = v78;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
        v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = v98;
        *(_QWORD *)(v81 + 32) = v97;
        *(_QWORD *)(v81 + 40) = v25;
        v82 = *(void (**)(char *, uint64_t))(v76 + 8);
        swift_bridgeObjectRetain();
        v82(v73, v80);
        *(_QWORD *)(v72 + v71[9]) = v81;
        sub_213DBB430(v72, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for QuickHangupClassification);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
    }
    v94 = 0;
    goto LABEL_61;
  }
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = v42 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
  v58 = *(_QWORD *)(v56 + 72);
  swift_bridgeObjectRetain();
  v59 = (uint64_t)v93;
  while (1)
  {
    v60 = v57 + *(int *)(v55 + 48);
    swift_storeEnumTagMultiPayload();
    sub_213E81FE0(v60, v59);
    LOBYTE(v60) = v61;
    sub_213DCA828(v59, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
    if ((v60 & 1) == 0)
      break;
    v57 += v58;
    if (!--v54)
    {
      swift_bridgeObjectRelease_n();
      v41 = (uint64_t)v90;
      goto LABEL_50;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_35:
  v32 = MEMORY[0x24BEE4AF8];
LABEL_36:
  v37 = (uint64_t)v90;
LABEL_37:
  sub_213DCA828(v37, type metadata accessor for FeaturisedTurn);
  return v32;
}

uint64_t type metadata accessor for QuickHangupClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for QuickHangupClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QuickHangupClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

ValueMetadata *type metadata accessor for AlwaysNegativeScoreModifier()
{
  return &type metadata for AlwaysNegativeScoreModifier;
}

double sub_213E78FF4(double a1, double a2)
{
  uint64_t v2;

  if (*(double *)v2 >= a2)
    return a2;
  else
    return *(double *)v2;
}

uint64_t PlayMediaSELFFeatures.MediaItemResults.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t PlayMediaSELFFeatures.MediaItemResults.init(value:)()
{
  return sub_213EF23C4();
}

uint64_t sub_213E7908C()
{
  type metadata accessor for PlayMediaSELFFeatures.MediaItemResults(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E790D4(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaSELFFeatures.MediaItemResults);
}

uint64_t PlayMediaSELFFeatures.RequestedMediaItem.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t PlayMediaSELFFeatures.RequestedMediaItem.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t PlayMediaSELFFeatures.RequestedMediaItem.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E79190()
{
  type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E791D8(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem);
}

uint64_t FlowMediaItem.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowMediaItem.artist.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowMediaItem.mediaType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowMediaItem.entityId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowMediaItem.isAlternative.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

void __swiftcall FlowMediaItem.init(title:artist:mediaType:entityId:isAlternative:)(SiriPrivateLearningInference::FlowMediaItem *__return_ptr retstr, Swift::String_optional title, Swift::String_optional artist, Swift::String_optional mediaType, Swift::String_optional entityId, Swift::Bool isAlternative)
{
  retstr->title = title;
  retstr->artist = artist;
  retstr->mediaType = mediaType;
  retstr->entityId = entityId;
  retstr->isAlternative = isAlternative;
}

uint64_t _s28SiriPrivateLearningInference13FlowMediaItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t result;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  int v35;
  char v36;
  char v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v18 = *(unsigned __int8 *)(a2 + 64);
  if (!v3)
  {
    if (v11)
      return 0;
    goto LABEL_8;
  }
  if (!v11)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v11)
    goto LABEL_8;
  v43 = *(_QWORD *)(a2 + 48);
  v44 = *(_QWORD *)(a1 + 32);
  v41 = *(_QWORD *)(a1 + 56);
  v42 = *(_QWORD *)(a2 + 56);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(unsigned __int8 *)(a2 + 64);
  v21 = *(unsigned __int8 *)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a2 + 40);
  v24 = *(_QWORD *)(a2 + 32);
  v25 = *(_QWORD *)(a1 + 16);
  v26 = sub_213EF3234();
  v4 = v25;
  v13 = v24;
  v15 = v23;
  v7 = v22;
  v10 = v21;
  v18 = v20;
  v8 = v19;
  v9 = v41;
  v17 = v42;
  v16 = v43;
  v5 = v44;
  v27 = v26;
  result = 0;
  if ((v27 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v14)
        return 0;
      if (v4 != v12 || v6 != v14)
      {
        v29 = v10;
        v30 = v7;
        v31 = v15;
        v32 = v13;
        v33 = sub_213EF3234();
        v13 = v32;
        v15 = v31;
        v7 = v30;
        v10 = v29;
        v34 = v33;
        result = 0;
        if ((v34 & 1) == 0)
          return result;
      }
    }
    else if (v14)
    {
      return 0;
    }
    if (v7)
    {
      if (!v15)
        return 0;
      if (v5 != v13 || v7 != v15)
      {
        v35 = v10;
        v36 = sub_213EF3234();
        v10 = v35;
        v37 = v36;
        result = 0;
        if ((v37 & 1) == 0)
          return result;
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v9)
    {
      if (v17)
      {
        if (v8 != v16 || v9 != v17)
        {
          v38 = v10;
          v39 = sub_213EF3234();
          v10 = v38;
          v40 = v39;
          result = 0;
          if ((v40 & 1) == 0)
            return result;
        }
        return v10 ^ v18 ^ 1u;
      }
    }
    else if (!v17)
    {
      return v10 ^ v18 ^ 1u;
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayMediaSELFFeatures()
{
  return &type metadata for PlayMediaSELFFeatures;
}

uint64_t type metadata accessor for PlayMediaSELFFeatures.MediaItemResults(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3EE80);
}

uint64_t sub_213E794E0()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E794EC()
{
  return type metadata accessor for PlayMediaSELFFeatures.MediaItemResults(0);
}

uint64_t type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3EED0);
}

uint64_t sub_213E79508()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E79514()
{
  return type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
}

uint64_t initializeWithCopy for FlowMediaItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FlowMediaItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FlowMediaItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowMediaItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowMediaItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowMediaItem()
{
  return &type metadata for FlowMediaItem;
}

uint64_t ThresholdedTurnComparison.deinit()
{
  uint64_t v0;

  return v0;
}

BOOL sub_213E797B8()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  if (*(_BYTE *)(v0 + 32) == 1)
    return v2 <= v1;
  if (v2 <= v1)
    return v1 < 1.0;
  return 0;
}

uint64_t sub_213E797F4()
{
  sub_213EF3324();
  return sub_213EF3324();
}

double ThresholdedTurnComparison.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ThresholdedTurnComparison.threshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t ThresholdedTurnComparison.allowsIdenticalUtterances.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ThresholdedTurnComparison.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL sub_213E7985C()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(*(_QWORD *)v0 + 16);
  v2 = *(double *)(*(_QWORD *)v0 + 24);
  if (*(_BYTE *)(*(_QWORD *)v0 + 32) == 1)
    return v2 <= v1;
  if (v2 <= v1)
    return v1 < 1.0;
  return 0;
}

uint64_t sub_213E7989C(uint64_t *a1, uint64_t *a2)
{
  return _s28SiriPrivateLearningInference25ThresholdedTurnComparisonC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s28SiriPrivateLearningInference25ThresholdedTurnComparisonC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24))
    return (*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32) ^ 1) & 1;
  else
    return 0;
}

unint64_t sub_213E798E8(uint64_t a1)
{
  unint64_t result;

  result = sub_213E7990C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_213E7990C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3EF20;
  if (!qword_254D3EF20)
  {
    v1 = type metadata accessor for ThresholdedTurnComparison();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ThresholdedTurnComparison, v1);
    atomic_store(result, (unint64_t *)&qword_254D3EF20);
  }
  return result;
}

uint64_t type metadata accessor for ThresholdedTurnComparison()
{
  return objc_opt_self();
}

uint64_t method lookup function for ThresholdedTurnComparison()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ThresholdedTurnComparison.isMatch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ThresholdedTurnComparison.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t *sub_213E79994(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (char *)a1 + v12;
    v17 = (char *)a2 + v12;
    v18 = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    if (v18)
    {
      v20 = *((_QWORD *)v17 + 1);
      v19 = *((_QWORD *)v17 + 2);
      *(_QWORD *)v16 = v18;
      *((_QWORD *)v16 + 1) = v20;
      v22 = *((_QWORD *)v17 + 3);
      v21 = *((_QWORD *)v17 + 4);
      *((_QWORD *)v16 + 2) = v19;
      *((_QWORD *)v16 + 3) = v22;
      v23 = *((_QWORD *)v17 + 5);
      *((_QWORD *)v16 + 4) = v21;
      *((_QWORD *)v16 + 5) = v23;
      v16[48] = v17[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v24;
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      v16[48] = v17[48];
    }
    v25 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_213E79B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

char *sub_213E79BCC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *(_QWORD *)&a2[v10];
  swift_bridgeObjectRetain();
  if (v16)
  {
    v18 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v18;
    v20 = *((_QWORD *)v15 + 3);
    v19 = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 2) = v17;
    *((_QWORD *)v14 + 3) = v20;
    v21 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = v19;
    *((_QWORD *)v14 + 5) = v21;
    v14[48] = v15[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v22;
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    v14[48] = v15[48];
  }
  v23 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v23] = a2[v23];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_213E79D34(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)&a2[v15];
  if (*(_QWORD *)&a1[v15])
  {
    if (v18)
    {
      *(_QWORD *)v16 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
      *((_QWORD *)v16 + 3) = *((_QWORD *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
      *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16[48] = v17[48];
    }
    else
    {
      sub_213E79FB4((uint64_t)&a1[v15]);
      v20 = *((_OWORD *)v17 + 1);
      v19 = *((_OWORD *)v17 + 2);
      v21 = *(_OWORD *)v17;
      v16[48] = v17[48];
      *((_OWORD *)v16 + 1) = v20;
      *((_OWORD *)v16 + 2) = v19;
      *(_OWORD *)v16 = v21;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    *((_QWORD *)v16 + 3) = *((_QWORD *)v17 + 3);
    *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
    *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
    v16[48] = v17[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)v17;
    v23 = *((_OWORD *)v17 + 1);
    v24 = *((_OWORD *)v17 + 2);
    v16[48] = v17[48];
    *((_OWORD *)v16 + 1) = v23;
    *((_OWORD *)v16 + 2) = v24;
    *(_OWORD *)v16 = v22;
  }
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213E79FB4(uint64_t a1)
{
  destroy for MediaSuggestionEvaluation();
  return a1;
}

char *sub_213E79FE8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  v10[48] = v11[48];
  v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v13] = a2[v13];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *sub_213E7A0E4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = (uint64_t)&a1[v17];
  v19 = &a2[v17];
  if (!*(_QWORD *)&a1[v17])
  {
LABEL_11:
    v22 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *((_OWORD *)v19 + 2);
    goto LABEL_12;
  }
  if (!*(_QWORD *)v19)
  {
    sub_213E79FB4(v18);
    goto LABEL_11;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v19 + 3);
  *(_QWORD *)(v18 + 16) = *((_QWORD *)v19 + 2);
  *(_QWORD *)(v18 + 24) = v20;
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v19 + 5);
  *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
  *(_QWORD *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_12:
  *(_BYTE *)(v18 + 48) = v19[48];
  v23 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v23] = a2[v23];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213E7A29C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E7A2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_213E7A328()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E7A334(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MediaEvaluationSummary()
{
  uint64_t result;

  result = qword_253F04BF0;
  if (!qword_253F04BF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_213E7A3EC()
{
  unint64_t v0;

  sub_213DBF3D4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_213E7A488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_213DBDD88(v1, a1);
}

uint64_t FullEntityUtteranceComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:useTrimmedUtterance:)(uint64_t a1, char a2, char a3, double a4)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 32) = a1;
  *(double *)(result + 16) = a4;
  *(_BYTE *)(result + 24) = a2;
  *(_BYTE *)(result + 25) = a3;
  return result;
}

uint64_t FullEntityUtteranceComparator.init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:useTrimmedUtterance:)(uint64_t a1, char a2, char a3, double a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a1;
  *(double *)(v4 + 16) = a4;
  *(_BYTE *)(v4 + 24) = a2;
  *(_BYTE *)(v4 + 25) = a3;
  return v4;
}

uint64_t sub_213E7A504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213E1CB94(a1, a2, *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 24), *(_BYTE *)(v3 + 25), a3, *(double *)(v3 + 16));
}

uint64_t FullEntityUtteranceComparator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FullEntityUtteranceComparator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E7A558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213E1CB94(a1, a2, *(_QWORD *)(*(_QWORD *)v3 + 32), *(_BYTE *)(*(_QWORD *)v3 + 24), *(_BYTE *)(*(_QWORD *)v3 + 25), a3, *(double *)(*(_QWORD *)v3 + 16));
}

uint64_t type metadata accessor for FullEntityUtteranceComparator()
{
  return objc_opt_self();
}

uint64_t method lookup function for FullEntityUtteranceComparator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FullEntityUtteranceComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:useTrimmedUtterance:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FullEntityUtteranceComparator.compareTurns(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_213E7A5C8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v42;
  uint64_t v43;
  Swift::Double_optional v44;

  v6 = type metadata accessor for FeaturisedTurn(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v42 - v10;
  sub_213DAFDB8(a1, (uint64_t)&v42 - v10);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_213DAEB3C(v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = swift_bridgeObjectRetain();
    v15 = sub_213DAEB48(v14);
    sub_213DAFE88((uint64_t)v11);
    swift_bridgeObjectRelease();
    sub_213DAFDB8(a2, (uint64_t)v9);
    v16 = swift_bridgeObjectRetain();
    v17 = sub_213DAEB3C(v16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      v18 = swift_bridgeObjectRetain();
      v19 = sub_213DAEB48(v18);
      sub_213DAFE88((uint64_t)v9);
      swift_bridgeObjectRelease();
      if ((a3 & 1) != 0 && v15)
      {
        v43 = v15;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B030);
        sub_213DDE1D4();
        v20 = sub_213EF2820();
        v22 = v21;
        swift_bridgeObjectRelease();
        if (v19)
        {
          v43 = v19;
          swift_bridgeObjectRetain();
          v23 = sub_213EF2820();
          v25 = v24;
          swift_bridgeObjectRelease();
          v26 = HIBYTE(v22) & 0xF;
          if ((v22 & 0x2000000000000000) == 0)
            v26 = v20 & 0xFFFFFFFFFFFFLL;
          if (v26)
          {
            v27 = HIBYTE(v25) & 0xF;
            if ((v25 & 0x2000000000000000) == 0)
              v27 = v23 & 0xFFFFFFFFFFFFLL;
            if (v27)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_253F04A88 != -1)
                swift_once();
              v28 = sub_213EF2724();
              __swift_project_value_buffer(v28, (uint64_t)qword_253F08A00);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              v29 = sub_213EF270C();
              v30 = sub_213EF2C94();
              if (os_log_type_enabled(v29, v30))
              {
                v31 = swift_slowAlloc();
                v32 = swift_slowAlloc();
                v43 = v32;
                *(_DWORD *)v31 = 136315394;
                swift_bridgeObjectRetain();
                v42 = sub_213DB0570(v20, v22, &v43);
                sub_213EF2D9C();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v31 + 12) = 2080;
                swift_bridgeObjectRetain();
                v42 = sub_213DB0570(v23, v25, &v43);
                sub_213EF2D9C();
                swift_bridgeObjectRelease_n();
                v33 = "Calculating restatement score between %s and %s. Using trimmed utterance? true";
LABEL_25:
                _os_log_impl(&dword_213DAB000, v29, v30, v33, (uint8_t *)v31, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x2199C53C4](v32, -1, -1);
                MEMORY[0x2199C53C4](v31, -1, -1);

LABEL_27:
                v40._countAndFlagsBits = v23;
                v40._object = (void *)v25;
                v44 = String.scoreRatcliffObershelp(between:)(v40);
                v34 = *(_QWORD *)&v44.is_nil;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v34;
              }
              goto LABEL_26;
            }
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      v43 = v13;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B030);
      sub_213DDE1D4();
      v35 = sub_213EF2820();
      v37 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v43 = v17;
      swift_bridgeObjectRetain();
      v23 = sub_213EF2820();
      v25 = v38;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (qword_253F04A88 != -1)
        swift_once();
      v39 = sub_213EF2724();
      __swift_project_value_buffer(v39, (uint64_t)qword_253F08A00);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v29 = sub_213EF270C();
      v30 = sub_213EF2C94();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        v43 = v32;
        *(_DWORD *)v31 = 136315394;
        swift_bridgeObjectRetain();
        v42 = sub_213DB0570(v35, v37, &v43);
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v31 + 12) = 2080;
        swift_bridgeObjectRetain();
        v42 = sub_213DB0570(v23, v25, &v43);
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        v33 = "Calculating restatement score between %s and %s. Using trimmed utterance? false";
        goto LABEL_25;
      }
LABEL_26:

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_27;
    }
    sub_213DAFE88((uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213DAFE88((uint64_t)v11);
  }
  return 0;
}

uint64_t PlusContactSuggestion.tags.getter()
{
  type metadata accessor for PlusContactSuggestion();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PlusContactSuggestion()
{
  uint64_t result;

  result = qword_253F06B18;
  if (!qword_253F06B18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PlusContactSuggestion.init(id:leftHandKey:rightHandValue:fromGroundTruth:timestamp:tags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a2;
  v34 = a5;
  v32 = a1;
  v35 = a6;
  v10 = (int *)type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213EF1D64();
  v36 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - v16;
  v19 = *a3;
  v18 = a3[1];
  v21 = a3[2];
  v20 = a3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_213E7E3DC(a4, v19, v18, v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  v23 = v17;
  v24 = v32;
  v22(v17, v32, v13);
  v25 = v30;
  v22(v30, (uint64_t)v23, v13);
  v22(v12, (uint64_t)v25, v13);
  *(_QWORD *)&v12[v10[5]] = v33;
  swift_retain();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)&v12[v10[6]];
  *v26 = v19;
  v26[1] = v18;
  v26[2] = 0;
  v26[3] = 0;
  *(_QWORD *)&v12[v10[7]] = sub_213E7B218(50, v31, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth, (void (*)(void))sub_213DCD350, &qword_254D3E8D0);
  *(double *)&v12[v10[8]] = a7;
  *(_QWORD *)&v12[v10[9]] = v34;
  *(_QWORD *)&v12[v10[10]] = 0;
  v27 = sub_213E7B500(50, MEMORY[0x24BEE4AF8]);
  swift_release();
  v28 = *(void (**)(char *, uint64_t))(v36 + 8);
  v28(v25, v13);
  *(_QWORD *)&v12[v10[11]] = v27;
  sub_213DBB430((uint64_t)v12, v35, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v28(v23, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v24, v13);
}

uint64_t sub_213E7AEA8(int64_t a1, uint64_t a2)
{
  return sub_213E7B218(a1, a2, type metadata accessor for FeaturisedTurn, (void (*)(void))sub_213DCD09C, &qword_253F069B0);
}

uint64_t sub_213E7AEC4(int64_t a1, uint64_t a2)
{
  return sub_213E7B218(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth, (void (*)(void))sub_213DCD2D4, &qword_254D3B718);
}

uint64_t sub_213E7AEE0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = result;
  if (!result)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(a2 + 16) >= result)
    v4 = result;
  else
    v4 = *(_QWORD *)(a2 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  sub_213DCD2B0(0, v4, 0);
  v5 = v30;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    return v5;
  }
  result = swift_bridgeObjectRetain();
  v7 = a2 + 32;
  v8 = 0;
  v9 = 0;
  v10 = a2 + 89;
  do
  {
    while (1)
    {
LABEL_8:
      if (v9 >= *(_QWORD *)(a2 + 16))
        goto LABEL_39;
      v11 = (uint64_t *)(v7 + 32 * v9);
      v13 = *v11;
      v12 = v11[1];
      v14 = v11[2];
      v15 = *((_BYTE *)v11 + 24);
      v16 = *((_BYTE *)v11 + 25);
      v17 = v9 + 1;
      v18 = *(_QWORD *)(v30 + 16);
      if ((uint64_t)v18 < v3)
        break;
      if (v8 >= v18)
        goto LABEL_40;
      v19 = v30 + 32 + 32 * v8;
      *(_QWORD *)v19 = v13;
      *(_QWORD *)(v19 + 8) = v12;
      *(_QWORD *)(v19 + 16) = v14;
      *(_BYTE *)(v19 + 24) = v15;
      *(_BYTE *)(v19 + 25) = v16;
      if ((uint64_t)++v8 >= v3)
      {
        if (v17 == v6)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        v20 = (char *)(v10 + 32 * v9);
        v9 += 2;
        while (v9 - 1 < *(_QWORD *)(a2 + 16))
        {
          v13 = *(_QWORD *)(v20 - 25);
          v12 = *(_QWORD *)(v20 - 17);
          v14 = *(_QWORD *)(v20 - 9);
          v15 = *(v20 - 1);
          v16 = *v20;
          v18 = *(_QWORD *)(v30 + 16);
          if ((uint64_t)v18 < v3)
          {
            v8 = 0;
            goto LABEL_22;
          }
          *(_QWORD *)(v30 + 32) = v13;
          *(_QWORD *)(v30 + 40) = v12;
          *(_QWORD *)(v30 + 48) = v14;
          *(_BYTE *)(v30 + 56) = v15;
          *(_BYTE *)(v30 + 57) = v16;
          if (v3 > 1)
          {
            v8 = 1;
            if (v9 != v6)
              goto LABEL_8;
            swift_bridgeObjectRelease();
            v8 = 1;
            goto LABEL_34;
          }
          ++v9;
          v20 += 32;
          if (v9 - v6 == 1)
            goto LABEL_30;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      ++v9;
      if (v17 == v6)
        goto LABEL_33;
    }
    ++v9;
LABEL_22:
    v21 = *(_QWORD *)(v30 + 24);
    v22 = v18 + 1;
    if (v18 >= v21 >> 1)
    {
      v28 = v10;
      v27 = v7;
      result = sub_213DCD2B0(v21 > 1, v18 + 1, 1);
      v22 = v18 + 1;
      v7 = v27;
      v10 = v28;
    }
    *(_QWORD *)(v30 + 16) = v22;
    v23 = v30 + 32 * v18;
    *(_QWORD *)(v23 + 32) = v13;
    *(_QWORD *)(v23 + 40) = v12;
    *(_QWORD *)(v23 + 48) = v14;
    *(_BYTE *)(v23 + 56) = v15;
    *(_BYTE *)(v23 + 57) = v16;
  }
  while (v9 != v6);
LABEL_33:
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_31;
LABEL_34:
  v24 = *(_QWORD *)(v30 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  result = sub_213DCD2B0(0, v24, 0);
  if (v24 >= (uint64_t)v8)
  {
    if ((v8 & 0x8000000000000000) != 0)
      goto LABEL_43;
    v25 = *(_QWORD *)(v30 + 16);
    if (v25 >= v8 && v25 >= v24)
    {
      v26 = swift_retain();
      sub_213E7E018(v26, v30 + 32, v8, (2 * v24) | 1, (void (*)(void))sub_213DCD2B0);
      swift_bridgeObjectRelease();
      sub_213E7E018(v30, v30 + 32, 0, (2 * v8) | 1, (void (*)(void))sub_213DCD2B0);
      return v29;
    }
    goto LABEL_44;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_213E7B1FC(int64_t a1, uint64_t a2)
{
  return sub_213E7B218(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth, (void (*)(void))sub_213DCD350, &qword_254D3E8D0);
}

uint64_t sub_213E7B218(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(void), uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(_QWORD);
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  void (*v26)(void);
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t *v32;
  uint64_t *v33;
  void (*v34)(void);
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a2;
  v9 = a3(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  if (a1 < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (!a1)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v35 = a3;
  v14 = v36;
  if (*(_QWORD *)(v36 + 16) >= a1)
    v15 = a1;
  else
    v15 = *(_QWORD *)(v36 + 16);
  v40 = MEMORY[0x24BEE4AF8];
  ((void (*)(_QWORD, int64_t, _QWORD))a4)(0, v15, 0);
  v16 = v40;
  v17 = *(_QWORD *)(v14 + 16);
  if (!v17)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v16;
  }
  v33 = a5;
  v34 = a4;
  v38 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = v14 + v38;
  v19 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = 0;
  v37 = v17 - 1;
  v22 = v35;
  while (1)
  {
    result = sub_213DCA7E4(v18, (uint64_t)v13, v22);
    v24 = *(_QWORD *)(v16 + 16);
    v40 = v16;
    if ((uint64_t)v24 < a1)
    {
      v23 = *(_QWORD *)(v16 + 24);
      if (v24 >= v23 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v34)(v23 > 1, v24 + 1, 1);
        v22 = v35;
        v16 = v40;
      }
      *(_QWORD *)(v16 + 16) = v24 + 1;
      result = sub_213DBB430((uint64_t)v13, v16 + v38 + v24 * v19, v22);
      v14 = v36;
    }
    else
    {
      if (v21 >= v24)
        goto LABEL_29;
      result = sub_213E7F5C8((uint64_t)v13, v16 + v38 + v19 * v21, v22);
      v16 = v40;
      if ((uint64_t)++v21 >= a1)
      {
        if (v37 == v20)
        {
          swift_bridgeObjectRelease_n();
          return v16;
        }
        v21 = 0;
        goto LABEL_12;
      }
    }
    if (v37 == v20)
      break;
LABEL_12:
    ++v20;
    v18 += v19;
    if (v20 >= *(_QWORD *)(v14 + 16))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_25;
  v25 = *(_QWORD *)(v16 + 16);
  v39 = MEMORY[0x24BEE4AF8];
  v26 = v34;
  result = ((uint64_t (*)(_QWORD, int64_t, _QWORD))v34)(0, v25, 0);
  if (v25 < (uint64_t)v21)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v21 & 0x8000000000000000) != 0)
    goto LABEL_32;
  v27 = *(_QWORD *)(v16 + 16);
  if (v27 >= v21 && v27 >= v25)
  {
    v28 = v16 + v38;
    v29 = swift_retain();
    v30 = (2 * v25) | 1;
    v31 = v35;
    v32 = v33;
    sub_213E7DAD8(v29, v28, v21, v30, v35, v33, v26);
    swift_bridgeObjectRelease();
    sub_213E7DAD8(v16, v28, 0, (2 * v21) | 1, v31, v32, v26);
    return v39;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_213E7B500(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int16 *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v3 = result;
  if (!result)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(a2 + 16) >= result)
    v4 = result;
  else
    v4 = *(_QWORD *)(a2 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  sub_213DCD32C(0, v4, 0);
  v5 = v30;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    return v5;
  }
  result = swift_bridgeObjectRetain();
  v7 = a2 + 32;
  v8 = 0;
  v9 = 0;
  v10 = a2 + 89;
  do
  {
    while (1)
    {
LABEL_8:
      if (v9 >= *(_QWORD *)(a2 + 16))
        goto LABEL_39;
      v11 = (uint64_t *)(v7 + 32 * v9);
      v13 = *v11;
      v12 = v11[1];
      v14 = v11[2];
      v15 = *((_BYTE *)v11 + 24);
      v16 = *(unsigned __int16 *)((char *)v11 + 25) | (*((unsigned __int8 *)v11 + 27) << 16);
      v17 = v9 + 1;
      v18 = *(_QWORD *)(v30 + 16);
      if ((uint64_t)v18 < v3)
        break;
      if (v8 >= v18)
        goto LABEL_40;
      v19 = v30 + 32 + 32 * v8;
      *(_QWORD *)v19 = v13;
      *(_QWORD *)(v19 + 8) = v12;
      *(_QWORD *)(v19 + 16) = v14;
      *(_BYTE *)(v19 + 24) = v15;
      *(_BYTE *)(v19 + 27) = BYTE2(v16);
      *(_WORD *)(v19 + 25) = v16;
      if ((uint64_t)++v8 >= v3)
      {
        if (v17 == v6)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        v20 = (unsigned __int16 *)(v10 + 32 * v9);
        v9 += 2;
        while (v9 - 1 < *(_QWORD *)(a2 + 16))
        {
          v13 = *(_QWORD *)((char *)v20 - 25);
          v12 = *(_QWORD *)((char *)v20 - 17);
          v14 = *(_QWORD *)((char *)v20 - 9);
          v15 = *((_BYTE *)v20 - 1);
          v16 = *v20 | (*((unsigned __int8 *)v20 + 2) << 16);
          v18 = *(_QWORD *)(v30 + 16);
          if ((uint64_t)v18 < v3)
          {
            v8 = 0;
            goto LABEL_22;
          }
          *(_QWORD *)(v30 + 32) = v13;
          *(_QWORD *)(v30 + 40) = v12;
          *(_QWORD *)(v30 + 48) = v14;
          *(_BYTE *)(v30 + 56) = v15;
          *(_WORD *)(v30 + 57) = v16;
          *(_BYTE *)(v30 + 59) = BYTE2(v16);
          if (v3 > 1)
          {
            v8 = 1;
            if (v9 != v6)
              goto LABEL_8;
            swift_bridgeObjectRelease();
            v8 = 1;
            goto LABEL_34;
          }
          ++v9;
          v20 += 16;
          if (v9 - v6 == 1)
            goto LABEL_30;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      ++v9;
      if (v17 == v6)
        goto LABEL_33;
    }
    ++v9;
LABEL_22:
    v21 = *(_QWORD *)(v30 + 24);
    v22 = v18 + 1;
    if (v18 >= v21 >> 1)
    {
      v28 = v10;
      v27 = v7;
      result = sub_213DCD32C(v21 > 1, v18 + 1, 1);
      v22 = v18 + 1;
      v7 = v27;
      v10 = v28;
    }
    *(_QWORD *)(v30 + 16) = v22;
    v23 = v30 + 32 * v18;
    *(_QWORD *)(v23 + 32) = v13;
    *(_QWORD *)(v23 + 40) = v12;
    *(_QWORD *)(v23 + 48) = v14;
    *(_BYTE *)(v23 + 56) = v15;
    *(_BYTE *)(v23 + 59) = BYTE2(v16);
    *(_WORD *)(v23 + 57) = v16;
  }
  while (v9 != v6);
LABEL_33:
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_31;
LABEL_34:
  v24 = *(_QWORD *)(v30 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  result = sub_213DCD32C(0, v24, 0);
  if (v24 >= (uint64_t)v8)
  {
    if ((v8 & 0x8000000000000000) != 0)
      goto LABEL_43;
    v25 = *(_QWORD *)(v30 + 16);
    if (v25 >= v8 && v25 >= v24)
    {
      v26 = swift_retain();
      sub_213E7E018(v26, v30 + 32, v8, (2 * v24) | 1, (void (*)(void))sub_213DCD32C);
      swift_bridgeObjectRelease();
      sub_213E7E018(v30, v30 + 32, 0, (2 * v8) | 1, (void (*)(void))sub_213DCD32C);
      return v29;
    }
    goto LABEL_44;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t PlusContactSuggestion.isNominated.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestion() + 36));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
    if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_213E7B9EC()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x213E7B9CCLL);
}

uint64_t sub_213E7BA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t result;
  _QWORD v68[2];
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v12 = v11;
  v83 = a5;
  v84 = a8;
  v82 = a7;
  v77 = a6;
  v76 = a4;
  v68[0] = a2;
  v74 = a1;
  v72 = a9;
  v14 = (int *)type metadata accessor for PlusContactSuggestion();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v81 = (uint64_t)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v78 = (uint64_t)v68 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v71 = (char *)v68 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v75 = (char *)v68 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v73 = (char *)v68 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v70 = (char *)v68 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v68 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v68 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_213EF1D64();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)v68 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *a3;
  v40 = a3[1];
  v41 = a3[2];
  v42 = (char *)a3[3];
  v68[1] = v41;
  v69 = v39;
  v44 = v43;
  sub_213DCC3D8(v74, (uint64_t)v34, &qword_253F04828);
  sub_213DCA7E4(v12, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v44);
  v79 = v38;
  v80 = v36;
  if (v45 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v38, v31, v44);
    sub_213DCA828((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DAFEC4((uint64_t)v34, &qword_253F04828);
  }
  else
  {
    sub_213DCA828((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v34, v44);
  }
  v47 = (uint64_t)v71;
  v46 = v72;
  v48 = (uint64_t)v70;
  v49 = v68[0];
  sub_213DCA7E4(v12, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if (v49)
  {
    v74 = v49;
  }
  else
  {
    v74 = *(_QWORD *)&v29[v14[5]];
    swift_retain();
  }
  swift_retain();
  sub_213DCA828((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(v12, v48, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if (v40)
  {
    v50 = v69;
    v71 = (char *)v40;
    v72 = v69;
    v70 = v42;
    v51 = (uint64_t)v73;
  }
  else
  {
    v52 = (uint64_t *)(v48 + v14[6]);
    v53 = (char *)v52[1];
    v72 = *v52;
    v70 = (char *)v52[3];
    swift_bridgeObjectRetain();
    v71 = v53;
    swift_bridgeObjectRetain();
    v51 = (uint64_t)v73;
    v50 = v69;
  }
  sub_213E05FBC(v50, v40);
  sub_213DCA828(v48, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(v12, v51, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if (v76)
  {
    v54 = v76;
  }
  else
  {
    v54 = *(_QWORD *)(v51 + v14[7]);
    swift_bridgeObjectRetain();
  }
  v55 = (uint64_t)v75;
  swift_bridgeObjectRetain();
  sub_213DCA828(v51, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(v12, v55, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if ((v77 & 1) != 0)
    v83 = *(_QWORD *)(v55 + v14[8]);
  sub_213DCA828(v55, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(v12, v47, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v56 = v44;
  if (v82)
  {
    v57 = v82;
  }
  else
  {
    v57 = *(_QWORD *)(v47 + v14[9]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_213DCA828(v47, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v58 = v78;
  sub_213DCA7E4(v12, v78, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if ((a10 & 1) != 0)
    v84 = *(_QWORD *)(v58 + v14[10]);
  sub_213DCA828(v58, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v59 = v12;
  v60 = v81;
  sub_213DCA7E4(v59, v81, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if (a11)
  {
    v61 = a11;
  }
  else
  {
    v61 = *(_QWORD *)(v60 + v14[11]);
    swift_bridgeObjectRetain();
  }
  v62 = v80;
  swift_bridgeObjectRetain();
  sub_213DCA828(v60, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v63 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v46, v79, v56);
  *(_QWORD *)(v46 + v14[5]) = v74;
  swift_retain();
  swift_bridgeObjectRelease();
  v64 = (uint64_t *)(v46 + v14[6]);
  v65 = v71;
  *v64 = v72;
  v64[1] = (uint64_t)v65;
  v64[2] = 0;
  v64[3] = 0;
  *(_QWORD *)(v46 + v14[7]) = sub_213E7B218(50, v54, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth, (void (*)(void))sub_213DCD350, &qword_254D3E8D0);
  *(_QWORD *)(v46 + v14[8]) = v83;
  *(_QWORD *)(v46 + v14[9]) = v57;
  *(_QWORD *)(v46 + v14[10]) = v84;
  v66 = sub_213E7B500(50, v61);
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v56);
  *(_QWORD *)(v46 + v14[11]) = v66;
  return result;
}

uint64_t PlusContactSuggestion.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s28SiriPrivateLearningInference21PlusContactSuggestionV6entityAA0F9ReferenceVvg_0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PlusContactSuggestion() + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PlusContactSuggestion.contributingGroundTruth.getter()
{
  type metadata accessor for PlusContactSuggestion();
  return swift_bridgeObjectRetain();
}

double PlusContactSuggestion.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestion() + 32));
}

double PlusContactSuggestion.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestion() + 40));
}

uint64_t PlusContactSuggestion.scoreHistory.getter()
{
  type metadata accessor for PlusContactSuggestion();
  return swift_bridgeObjectRetain();
}

uint64_t PlusContactSuggestion.init(id:leftHandKey:rightHandValue:fromThinGroundTruth:timestamp:tags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a4;
  v26 = a5;
  v24 = a2;
  v27 = a6;
  v10 = (int *)type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213EF1D64();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a3;
  v18 = a3[1];
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19(v16, a1, v13);
  v19(v12, (uint64_t)v16, v13);
  *(_QWORD *)&v12[v10[5]] = v24;
  swift_retain();
  swift_bridgeObjectRelease();
  v20 = &v12[v10[6]];
  *(_QWORD *)v20 = v17;
  *((_QWORD *)v20 + 1) = v18;
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  *(_QWORD *)&v12[v10[7]] = sub_213E7B218(50, v25, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth, (void (*)(void))sub_213DCD350, &qword_254D3E8D0);
  *(double *)&v12[v10[8]] = a7;
  *(_QWORD *)&v12[v10[9]] = v26;
  *(_QWORD *)&v12[v10[10]] = 0;
  v21 = sub_213E7B500(50, MEMORY[0x24BEE4AF8]);
  swift_release();
  v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v16, v13);
  *(_QWORD *)&v12[v10[11]] = v21;
  sub_213DBB430((uint64_t)v12, v27, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  return ((uint64_t (*)(uint64_t, uint64_t))v22)(a1, v13);
}

uint64_t PlusContactSuggestion.hasSameContent(as:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  BOOL v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for PlusContactSuggestion();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v30 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v30 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  v16 = _s12SiriOntology23UsoEntity_common_PersonC0A24PrivateLearningInferenceE2eeoiySbAC_ACtFZ_0();
  sub_213DCA7E4(v2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if (!v16)
    goto LABEL_16;
  v17 = *(int *)(v4 + 24);
  v18 = *(_QWORD *)&v15[v17];
  v19 = *(_QWORD *)&v15[v17 + 8];
  v20 = *(_QWORD *)&v15[v17 + 16];
  v21 = *(_QWORD *)&v15[v17 + 24];
  v22 = &v13[v17];
  v23 = *((_QWORD *)v22 + 2);
  v24 = *((_QWORD *)v22 + 3);
  if (v18 != *(_QWORD *)v22 || v19 != *((_QWORD *)v22 + 1))
  {
    v31 = v20;
    v26 = sub_213EF3234();
    v20 = v31;
    if ((v26 & 1) == 0)
      goto LABEL_16;
  }
  if (v21)
  {
    if (v24)
    {
      v27 = v20 == v23 && v21 == v24;
      if (v27 || (sub_213EF3234() & 1) != 0)
        goto LABEL_14;
    }
LABEL_16:
    sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DCA828((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DCA7E4(v2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213DCA7E4(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    v28 = 0;
    goto LABEL_17;
  }
  if (v24)
    goto LABEL_16;
LABEL_14:
  sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA828((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(v2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v28 = sub_213E28894(*(_QWORD *)&v10[*(int *)(v4 + 28)], *(_QWORD *)&v7[*(int *)(v4 + 28)]);
LABEL_17:
  sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  return v28 & 1;
}

uint64_t PlusContactSuggestion.hasSameMapping(as:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for PlusContactSuggestion();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - v8;
  v10 = _s12SiriOntology23UsoEntity_common_PersonC0A24PrivateLearningInferenceE2eeoiySbAC_ACtFZ_0();
  sub_213DCA7E4(v2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA7E4(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  if (!v10)
    goto LABEL_16;
  v11 = *(int *)(v4 + 24);
  v12 = *(_QWORD *)&v9[v11];
  v13 = *(_QWORD *)&v9[v11 + 8];
  v15 = *(_QWORD *)&v9[v11 + 16];
  v14 = *(_QWORD *)&v9[v11 + 24];
  v16 = &v7[v11];
  v18 = *((_QWORD *)v16 + 2);
  v17 = *((_QWORD *)v16 + 3);
  v19 = v12 == *(_QWORD *)v16 && v13 == *((_QWORD *)v16 + 1);
  if (v19 || (v20 = 0, (sub_213EF3234() & 1) != 0))
  {
    if (v14)
    {
      if (v17)
      {
        v21 = v15 == v18 && v14 == v17;
        if (v21 || (sub_213EF3234() & 1) != 0)
          goto LABEL_14;
      }
    }
    else if (!v17)
    {
LABEL_14:
      v20 = 1;
      goto LABEL_17;
    }
LABEL_16:
    v20 = 0;
  }
LABEL_17:
  sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  sub_213DCA828((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  return v20;
}

uint64_t PlusContactSuggestion.updateWith(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v33 = a2;
  v5 = (int *)type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_213EF1D64();
  v32 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v31 = (char *)&v28 - v12;
  v15((char *)&v28 - v12, v3, v8);
  v16 = (uint64_t *)(a1 + v5[6]);
  v17 = v5[8];
  v18 = *(_QWORD *)(a1 + v5[7]);
  v29 = *(_QWORD *)(a1 + v5[5]);
  v30 = v18;
  v19 = *v16;
  v20 = v16[1];
  v21 = *(_QWORD *)(v3 + v17);
  v22 = *(_QWORD *)(a1 + v5[9]);
  v15(v11, (uint64_t)v13, v8);
  v15(v7, (uint64_t)v11, v8);
  *(_QWORD *)&v7[v5[5]] = v29;
  v23 = &v7[v5[6]];
  *(_QWORD *)v23 = v19;
  *((_QWORD *)v23 + 1) = v20;
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  swift_retain_n();
  v24 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)&v7[v5[7]] = sub_213E7B218(50, v24, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth, (void (*)(void))sub_213DCD350, &qword_254D3E8D0);
  *(_QWORD *)&v7[v5[8]] = v21;
  *(_QWORD *)&v7[v5[9]] = v22;
  *(_QWORD *)&v7[v5[10]] = 0;
  v25 = sub_213E7B500(50, MEMORY[0x24BEE4AF8]);
  swift_release();
  v26 = *(void (**)(char *, uint64_t))(v32 + 8);
  v26(v11, v8);
  *(_QWORD *)&v7[v5[11]] = v25;
  sub_213DBB430((uint64_t)v7, v33, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  return ((uint64_t (*)(char *, uint64_t))v26)(v31, v8);
}

uint64_t sub_213E7C834(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E7C85C + 4 * byte_213EFD745[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_213E7C85C()
{
  return 0x646E61487466656CLL;
}

uint64_t sub_213E7C87C()
{
  return 0x6E61487468676972;
}

unint64_t sub_213E7C8A0()
{
  return 0xD000000000000017;
}

uint64_t sub_213E7C8BC()
{
  return 0x6D617473656D6974;
}

uint64_t sub_213E7C8D8()
{
  return 1936154996;
}

uint64_t sub_213E7C8E8()
{
  return 0x65726F6373;
}

uint64_t sub_213E7C8FC()
{
  return 0x73694865726F6373;
}

uint64_t sub_213E7C91C()
{
  unsigned __int8 *v0;

  return sub_213E7C834(*v0);
}

uint64_t sub_213E7C924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E7F258(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E7C948()
{
  sub_213E7E63C();
  return sub_213EF3354();
}

uint64_t sub_213E7C970()
{
  sub_213E7E63C();
  return sub_213EF3360();
}

uint64_t PlusContactSuggestion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EFE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E7E63C();
  sub_213EF3348();
  LOBYTE(v14) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for PlusContactSuggestion();
    v14 = *(_QWORD *)(v3 + v9[5]);
    v17 = 1;
    sub_213EF1E30();
    sub_213DB0DB4(&qword_254D3BBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    v10 = (uint64_t *)(v3 + v9[6]);
    v11 = v10[1];
    v14 = *v10;
    v15 = v11;
    v16 = *((_OWORD *)v10 + 1);
    v17 = 2;
    sub_213E626B0();
    sub_213EF31BC();
    v14 = *(_QWORD *)(v3 + v9[7]);
    v17 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EFF8);
    sub_213E7E7A8(&qword_254D3F000, &qword_254D3F008, (uint64_t)&protocol conformance descriptor for ThinContactGroundTruth, MEMORY[0x24BEE12A0]);
    sub_213EF31BC();
    LOBYTE(v14) = 4;
    sub_213EF31A4();
    v14 = *(_QWORD *)(v3 + v9[9]);
    v17 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A688);
    sub_213E7E680(&qword_254D3F010, (uint64_t (*)(void))sub_213E7E6E8, MEMORY[0x24BEE1700]);
    sub_213EF31BC();
    LOBYTE(v14) = 6;
    sub_213EF31A4();
    v14 = *(_QWORD *)(v3 + v9[11]);
    v17 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E758);
    sub_213E7E72C(&qword_254D3F020, &qword_254D3F028, (uint64_t)&protocol conformance descriptor for ScoreStep<A>, MEMORY[0x24BEE12A0]);
    sub_213EF31BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PlusContactSuggestion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;

  v21 = a2;
  v4 = sub_213EF1D64();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F030);
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_213E7E63C();
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  LOBYTE(v27) = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v12 = v9;
  sub_213EF3144();
  v13 = (uint64_t)v26;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v6, v4);
  sub_213EF1E30();
  v30 = 1;
  sub_213DB0DB4(&qword_254D3E8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  v14 = (int *)v25;
  *(_QWORD *)(v13 + *(int *)(v25 + 20)) = v27;
  v30 = 2;
  sub_213E62738();
  sub_213EF3144();
  v15 = v28;
  v16 = v13 + v14[6];
  *(_QWORD *)v16 = v27;
  *(_QWORD *)(v16 + 8) = v15;
  *(_OWORD *)(v16 + 16) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3EFF8);
  v30 = 3;
  sub_213E7E7A8(&qword_254D3F038, &qword_254D3F040, (uint64_t)&protocol conformance descriptor for ThinContactGroundTruth, MEMORY[0x24BEE12D0]);
  sub_213EF3144();
  v17 = (uint64_t)v24;
  *(_QWORD *)(v13 + v14[7]) = v27;
  LOBYTE(v27) = 4;
  sub_213EF312C();
  *(_QWORD *)(v13 + v14[8]) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A688);
  v30 = 5;
  sub_213E7E680(&qword_254D3F048, (uint64_t (*)(void))sub_213E7E82C, MEMORY[0x24BEE1720]);
  sub_213EF3144();
  *(_QWORD *)(v13 + v14[9]) = v27;
  LOBYTE(v27) = 6;
  sub_213EF312C();
  *(_QWORD *)(v13 + v14[10]) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E758);
  v30 = 7;
  sub_213E7E72C(&qword_254D3E760, &qword_254D3E768, (uint64_t)&protocol conformance descriptor for ScoreStep<A>, MEMORY[0x24BEE12D0]);
  sub_213EF3144();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v22);
  *(_QWORD *)(v13 + v14[11]) = v27;
  sub_213DCA7E4(v13, v21, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  __swift_destroy_boxed_opaque_existential_1Tm(v17);
  return sub_213DCA828(v13, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
}

uint64_t sub_213E7D2EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PlusContactSuggestion.init(from:)(a1, a2);
}

uint64_t sub_213E7D300(_QWORD *a1)
{
  return PlusContactSuggestion.encode(to:)(a1);
}

uint64_t ContactReference.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t ContactReference.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF28BC();
  return sub_213EF3330();
}

uint64_t _s28SiriPrivateLearningInference21PlusContactSuggestionV11leftHandKey0A8Ontology23UsoEntity_common_PersonCvg_0()
{
  type metadata accessor for PlusContactSuggestion();
  return swift_retain();
}

uint64_t PlusContactSuggestion.init(query:entity:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v31 = a3;
  v4 = (int *)type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1CF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213EF1D64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v18 = *a2;
  v28 = a2[1];
  v29 = v18;
  sub_213EF1D58();
  sub_213EF1CEC();
  sub_213EF1CD4();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v15, v17, v11);
  v21(v6, v15, v11);
  *(_QWORD *)&v6[v4[5]] = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v22 = &v6[v4[6]];
  v23 = v28;
  *(_QWORD *)v22 = v29;
  *((_QWORD *)v22 + 1) = v23;
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  v24 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v6[v4[7]] = sub_213E7B218(50, MEMORY[0x24BEE4AF8], (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth, (void (*)(void))sub_213DCD350, &qword_254D3E8D0);
  *(_QWORD *)&v6[v4[8]] = v20;
  *(_QWORD *)&v6[v4[9]] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v6[v4[10]] = 0;
  v25 = sub_213E7B500(50, v24);
  swift_release();
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v15, v11);
  *(_QWORD *)&v6[v4[11]] = v25;
  sub_213DBB430((uint64_t)v6, v31, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v11);
}

uint64_t PlusContactSuggestion.updateScore(with:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD v19[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v11 = *((_BYTE *)a1 + 24);
  v12 = *(unsigned __int16 *)((char *)a1 + 25) | (*((unsigned __int8 *)a1 + 27) << 16);
  v13 = *(_QWORD **)(v2 + *(int *)(type metadata accessor for PlusContactSuggestion() + 44));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_213DB6358(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_213DB6358((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[4 * v15];
  v16[4] = v9;
  v16[5] = v8;
  v16[6] = v10;
  *((_BYTE *)v16 + 56) = v11;
  *((_BYTE *)v16 + 59) = BYTE2(v12);
  *(_WORD *)((char *)v16 + 57) = v12;
  v17 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  memset(v19, 0, sizeof(v19));
  sub_213E7BA00((uint64_t)v7, 0, (uint64_t *)v19, 0, 0, 1, 0, v8, a2, 0, (uint64_t)v13);
  swift_bridgeObjectRelease();
  return sub_213DAFEC4((uint64_t)v7, &qword_253F04828);
}

uint64_t PlusContactSuggestion.isCorrection.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestion() + 36));
  if (*(_QWORD *)(v1 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
    if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_213E7D954()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x213E7D934);
}

uint64_t sub_213E7D968@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_213E7D9A0(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_213E7D9AC@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_213EF1CF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_213EF1D64();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v19 = *a2;
  v15 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  sub_213EF1D58();
  v20 = v19;
  v21 = v15;
  v22 = v14;
  sub_213EF1CEC();
  sub_213EF1CD4();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return PlusContactSuggestion.init(id:leftHandKey:rightHandValue:fromThinGroundTruth:timestamp:tags:)((uint64_t)v12, v13, (uint64_t *)&v20, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4B08], a3, v17);
}

uint64_t sub_213E7DAD8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(void))
{
  uint64_t *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t result;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  void (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;

  v54 = a7;
  v56 = a2;
  v63 = a5(0);
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v59 = (char *)v53 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v55 = (uint64_t)v53 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v53 - v20;
  v22 = a4 >> 1;
  v57 = a3;
  v23 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v24 = *v7;
  v25 = *(_QWORD *)(*v7 + 16);
  if (__OFADD__(v25, v23))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v61 = v22;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v24;
  if (!isUniquelyReferenced_nonNull_native || (v27 = *(_QWORD *)(v24 + 24) >> 1, v27 < v25 + v23))
  {
    v54();
    v24 = *v7;
    v27 = *(_QWORD *)(*v7 + 24) >> 1;
  }
  v28 = *(_QWORD *)(v24 + 16);
  v29 = v27 - v28;
  if (v61 == v57)
  {
    if (v23 <= 0)
    {
      v30 = v57;
      if (v29)
        return swift_unknownObjectRelease();
      goto LABEL_20;
    }
    goto LABEL_43;
  }
  if (v29 < v23)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v23 < 0)
    goto LABEL_46;
  v31 = *(_QWORD *)(v60 + 72);
  v32 = v24 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80)) + v31 * v28;
  v33 = v56 + v31 * v57;
  if (v33 < v32 + v31 * v23 && v32 < v33 + v31 * v23)
    goto LABEL_46;
  swift_arrayInitWithCopy();
  if (!v23)
  {
    v30 = v61;
    if (!v29)
      goto LABEL_20;
    return swift_unknownObjectRelease();
  }
  v35 = *(_QWORD *)(v24 + 16);
  v36 = __OFADD__(v35, v23);
  v37 = v35 + v23;
  v30 = v61;
  if (v36)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    result = sub_213EF30A8();
    __break(1u);
    return result;
  }
  *(_QWORD *)(v24 + 16) = v37;
  if (v23 != v29)
    return swift_unknownObjectRelease();
LABEL_20:
  v53[1] = a1;
  v38 = *(_QWORD *)(v24 + 16);
  v39 = v60;
  v40 = v63;
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
  v58(v21, 1, 1, v63);
  v41 = v55;
  sub_213DCC3D8((uint64_t)v21, v55, a6);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  v42 = v62(v41, 1, v40);
  v43 = (uint64_t)v59;
  if (v42 != 1)
  {
    do
    {
      sub_213DAFEC4(v41, a6);
      v46 = *v7;
      v47 = *(_QWORD *)(*v7 + 24);
      v45 = v47 >> 1;
      if ((uint64_t)(v47 >> 1) < v38 + 1)
      {
        ((void (*)(BOOL))v54)(v47 > 1);
        v46 = *v7;
        v45 = *(_QWORD *)(*v7 + 24) >> 1;
      }
      swift_retain();
      sub_213DCC3D8((uint64_t)v21, (uint64_t)v17, a6);
      if (v62((uint64_t)v17, 1, v63) != 1)
      {
        if (v38 > v45)
          v45 = v38;
        do
        {
          sub_213DBB430((uint64_t)v17, v43, a5);
          if (v45 == v38)
          {
            sub_213DCA828(v43, a5);
            swift_release();
            v38 = v45;
            goto LABEL_23;
          }
          sub_213DAFEC4((uint64_t)v21, a6);
          v51 = v43;
          v52 = *(_QWORD *)(v60 + 72);
          sub_213DBB430(v51, v46+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ v52 * v38, a5);
          if (v30 == v61)
          {
            v48 = 1;
            v30 = v61;
          }
          else
          {
            if (v30 < v57 || v30 >= v61)
            {
              __break(1u);
              goto LABEL_41;
            }
            sub_213DCA7E4(v56 + v52 * v30, (uint64_t)v21, a5);
            v48 = 0;
            ++v30;
          }
          v49 = v63;
          v58(v21, v48, 1, v63);
          sub_213DCC3D8((uint64_t)v21, (uint64_t)v17, a6);
          v50 = v62((uint64_t)v17, 1, v49);
          ++v38;
          v43 = (uint64_t)v59;
        }
        while (v50 != 1);
      }
      swift_release();
      sub_213DAFEC4((uint64_t)v17, a6);
      v45 = v38;
LABEL_23:
      *(_QWORD *)(*v7 + 16) = v45;
      v41 = v55;
      sub_213DCC3D8((uint64_t)v21, v55, a6);
    }
    while (v62(v41, 1, v63) != 1);
  }
  sub_213DAFEC4((uint64_t)v21, a6);
  swift_unknownObjectRelease();
  return sub_213DAFEC4(v41, a6);
}

uint64_t sub_213E7E018(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_21;
  }
  v8 = *v5;
  v9 = *(_QWORD *)(*v5 + 16);
  if (__OFADD__(v9, v7))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v8;
  if (!isUniquelyReferenced_nonNull_native)
    goto LABEL_8;
  v14 = *(_QWORD *)(v8 + 24) >> 1;
  if (v14 < v9 + v7)
    goto LABEL_8;
  if (v6 == a3)
  {
    while (v7 > 0)
    {
      __break(1u);
LABEL_8:
      a5();
      v8 = *v5;
      v14 = *(_QWORD *)(*v5 + 24) >> 1;
      if (v6 != a3)
        goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_9:
  v15 = *(_QWORD *)(v8 + 16);
  if (v14 - v15 < v7)
    goto LABEL_22;
  if (v7 < 0)
    goto LABEL_24;
  v16 = (char *)(v8 + 32 * v15 + 32);
  v17 = (char *)(a2 + 32 * a3);
  if (v17 < &v16[32 * v7] && v16 < &v17[32 * v7])
    goto LABEL_24;
  memcpy(v16, v17, 32 * v7);
  if (!v7)
  {
LABEL_19:
    result = swift_unknownObjectRelease();
    *v5 = v8;
    return result;
  }
  v19 = *(_QWORD *)(v8 + 16);
  v20 = __OFADD__(v19, v7);
  v21 = v19 + v7;
  if (!v20)
  {
    *(_QWORD *)(v8 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t _s28SiriPrivateLearningInference21PlusContactSuggestionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for PlusContactSuggestion();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v5 = sub_213EF3330();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  if (v5 != sub_213EF3330())
    return 0;
  v6 = v4[6];
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v10 = *(_QWORD *)(a1 + v6 + 16);
  v9 = *(_QWORD *)(a1 + v6 + 24);
  v11 = (_QWORD *)(a2 + v6);
  v13 = v11[2];
  v12 = v11[3];
  if ((v7 != *v11 || v8 != v11[1]) && (sub_213EF3234() & 1) == 0)
    return 0;
  if (v9)
  {
    if (!v12 || (v10 != v13 || v9 != v12) && (sub_213EF3234() & 1) == 0)
      return 0;
  }
  else if (v12)
  {
    return 0;
  }
  if ((sub_213E28894(*(_QWORD *)(a1 + v4[7]), *(_QWORD *)(a2 + v4[7])) & 1) != 0
    && *(double *)(a1 + v4[8]) == *(double *)(a2 + v4[8])
    && (sub_213E76C74(*(_QWORD *)(a1 + v4[9]), *(_QWORD *)(a2 + v4[9])) & 1) != 0
    && *(double *)(a1 + v4[10]) == *(double *)(a2 + v4[10]))
  {
    return sub_213E28DF4(*(_QWORD *)(a1 + v4[11]), *(_QWORD *)(a2 + v4[11]));
  }
  return 0;
}

unint64_t sub_213E7E3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[4];
  _QWORD v30[5];
  uint64_t v31;

  v31 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E8D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for ThinContactGroundTruth();
  v13 = *(_QWORD *)(v28 - 8);
  v14 = MEMORY[0x24BDAC7A8](v28);
  v27 = (uint64_t)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v26 = (uint64_t)v24 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  v24[1] = a1;
  v24[2] = v5;
  v18 = a1 + 32;
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v25 = a4;
  do
  {
    sub_213DAFDFC(v18, (uint64_t)v30);
    v29[0] = v31;
    v29[1] = a3;
    v29[2] = a4;
    v29[3] = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ThinContactGroundTruth.init(completeGroundTruth:rightHandContext:)(v30, v29, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v28) == 1)
    {
      sub_213DAFEC4((uint64_t)v12, &qword_254D3E8D0);
    }
    else
    {
      v20 = v26;
      sub_213DBB430((uint64_t)v12, v26, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
      sub_213DBB430(v20, v27, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_213DB646C(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = sub_213DB646C(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_213DBB430(v27, v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
      a4 = v25;
    }
    v18 += 40;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_213E7E63C()
{
  unint64_t result;

  result = qword_254D3EFF0;
  if (!qword_254D3EFF0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFD9A4, &type metadata for PlusContactSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3EFF0);
  }
  return result;
}

uint64_t sub_213E7E680(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3A688);
    v8 = a2();
    result = MEMORY[0x2199C52D4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213E7E6E8()
{
  unint64_t result;

  result = qword_254D3F018;
  if (!qword_254D3F018)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionTag, &type metadata for ContactSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3F018);
  }
  return result;
}

uint64_t sub_213E7E72C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3E758);
    v10 = sub_213E7E870(a2, a3);
    result = MEMORY[0x2199C52D4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213E7E7A8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3EFF8);
    v10 = sub_213DB0DB4(a2, (uint64_t (*)(uint64_t))type metadata accessor for ThinContactGroundTruth, a3);
    result = MEMORY[0x2199C52D4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213E7E82C()
{
  unint64_t result;

  result = qword_254D3F050;
  if (!qword_254D3F050)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionTag, &type metadata for ContactSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3F050);
  }
  return result;
}

uint64_t sub_213E7E870(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3E770);
    result = MEMORY[0x2199C52D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213E7E8B4(uint64_t a1)
{
  unint64_t result;

  result = sub_213DDF7C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_213E7E8DC()
{
  unint64_t result;

  result = qword_254D3F058;
  if (!qword_254D3F058)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactReference, &type metadata for ContactReference);
    atomic_store(result, (unint64_t *)&qword_254D3F058);
  }
  return result;
}

unint64_t sub_213E7E924()
{
  unint64_t result;

  result = qword_254D3F060;
  if (!qword_254D3F060)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactReference, &type metadata for ContactReference);
    atomic_store(result, (unint64_t *)&qword_254D3F060);
  }
  return result;
}

uint64_t sub_213E7E968()
{
  return sub_213DB0DB4(&qword_254D3B268, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], (uint64_t)&protocol conformance descriptor for UsoEntity_common_Person);
}

uint64_t sub_213E7E9A0(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(&qword_254D3F0E8, (uint64_t (*)(uint64_t))type metadata accessor for PlusContactSuggestion, (uint64_t)&protocol conformance descriptor for PlusContactSuggestion);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlusContactSuggestion(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlusContactSuggestion(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlusContactSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlusContactSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlusContactSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for PlusContactSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlusContactSuggestion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E7EF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PlusContactSuggestion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E7EF9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_213E7F014()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlusContactSuggestion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_213E7F100 + 4 * byte_213EFD757[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_213E7F134 + 4 * byte_213EFD752[v4]))();
}

uint64_t sub_213E7F134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E7F13C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E7F144);
  return result;
}

uint64_t sub_213E7F150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E7F158);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_213E7F15C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E7F164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlusContactSuggestion.CodingKeys()
{
  return &type metadata for PlusContactSuggestion.CodingKeys;
}

unint64_t sub_213E7F184()
{
  unint64_t result;

  result = qword_254D3F0F0;
  if (!qword_254D3F0F0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFD97C, &type metadata for PlusContactSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F0F0);
  }
  return result;
}

unint64_t sub_213E7F1CC()
{
  unint64_t result;

  result = qword_254D3F0F8;
  if (!qword_254D3F0F8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFD8EC, &type metadata for PlusContactSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F0F8);
  }
  return result;
}

unint64_t sub_213E7F214()
{
  unint64_t result;

  result = qword_254D3F100;
  if (!qword_254D3F100)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFD914, &type metadata for PlusContactSuggestion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F100);
  }
  return result;
}

uint64_t sub_213E7F258(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E61487466656CLL && a2 == 0xEB0000000079654BLL || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E61487468676972 && a2 == 0xEE0065756C615664 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000213F07440 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73694865726F6373 && a2 == 0xEC00000079726F74)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_213E7F5C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_213E7F60C()
{
  uint64_t v0;
  unsigned __int8 v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char isUniquelyReferenced_nonNull_native;

  v1 = sub_213E7F6C8();
  v2 = sub_213DCAE7C(MEMORY[0x24BEE4AF8]);
  v3 = type metadata accessor for PhoneCallGroundTruth();
  v4 = (uint64_t *)(v0 + *(int *)(v3 + 32));
  v5 = *v4;
  v6 = v4[1];
  v7 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_213E24394(v1 | (v7 << 8), v5, v6, 0, 0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_213E7F6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;

  v1 = type metadata accessor for PhoneCallGroundTruth();
  v2 = v1;
  v3 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  v4 = v3[1];
  if (!v4
    || ((v5 = (_QWORD *)(v0 + *(int *)(v1 + 32)), *v5 == *v3) ? (v6 = v4 == v5[1]) : (v6 = 0),
        !v6 && (sub_213EF3234() & 1) == 0))
  {
    __asm { BR              X11 }
  }
  return 4;
}

unint64_t sub_213E7F7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;

  v1 = type metadata accessor for PhoneCallGroundTruth();
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 32));
  v4 = *v2;
  v3 = v2[1];
  v5 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  v6 = v5[1];
  if (!v6 || (v4 == *v5 ? (v7 = v6 == v3) : (v7 = 0), !v7 && (sub_213EF3234() & 1) == 0))
    __asm { BR              X11 }
  return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_213E7F968(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(qword_254D3F108, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&unk_213EFDA24);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_213E7F9A4()
{
  return sub_213DB0DB4((unint64_t *)&qword_254D3CC30, (uint64_t (*)(uint64_t))type metadata accessor for PlusContactSuggestion, (uint64_t)&protocol conformance descriptor for PlusContactSuggestion);
}

uint64_t sub_213E7F9D4()
{
  return sub_213E1B218((uint64_t)&unk_24D0FF940);
}

unint64_t sub_213E7F9E0()
{
  uint64_t v0;
  int *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t inited;

  v1 = (int *)type metadata accessor for MessagesGroundTruth();
  v2 = (uint64_t *)(v0 + v1[8]);
  v4 = *v2;
  v3 = v2[1];
  v5 = (_QWORD *)(v0 + v1[7]);
  v6 = v5[1];
  if (v6)
  {
    v7 = v4 == *v5 && v6 == v3;
    if (v7 || (sub_213EF3234() & 1) != 0)
      return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
  }
  if (*(_BYTE *)(v0 + v1[5]) && (*(_BYTE *)(v0 + v1[5]) != 1 || 0x8000000213F05560 == 0x8000000213F05580))
  {
    swift_bridgeObjectRelease();
    return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
  }
  v8 = sub_213EF3234();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F1E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 64) = sub_213E1B218((uint64_t)&unk_24D0FFAA8);
  return sub_213DCAFE0(inited);
}

unint64_t sub_213E7FB4C()
{
  uint64_t v0;
  unsigned __int8 v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char isUniquelyReferenced_nonNull_native;

  v1 = sub_213E7FC0C();
  v2 = sub_213DCAE7C(MEMORY[0x24BEE4AF8]);
  v3 = type metadata accessor for MessagesGroundTruth();
  v4 = (uint64_t *)(v0 + *(int *)(v3 + 32));
  v5 = *v4;
  v6 = v4[1];
  v7 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_213E24394(v1 | (v7 << 8) | 0x1000000, v5, v6, 0, 0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_213E7FC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;
  char v8;

  v1 = type metadata accessor for MessagesGroundTruth();
  v2 = v1;
  v3 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  v4 = v3[1];
  if (v4)
  {
    v5 = (_QWORD *)(v0 + *(int *)(v1 + 32));
    v6 = *v5 == *v3 && v4 == v5[1];
    if (v6 || (sub_213EF3234() & 1) != 0)
      return 4;
  }
  if (*(_BYTE *)(v0 + *(int *)(v2 + 20))
    && (*(_BYTE *)(v0 + *(int *)(v2 + 20)) != 1 || 0x8000000213F05560 == 0x8000000213F05580))
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  v8 = sub_213EF3234();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return 4;
  else
    return 3;
}

uint64_t sub_213E7FD14(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(qword_254D3F140, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&unk_213EFDA6C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_213E7FD54()
{
  return sub_213E1B218((uint64_t)&unk_24D0FF918);
}

uint64_t sub_213E7FD60()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  char v6;

  v1 = (unint64_t *)(v0 + *(int *)(type metadata accessor for ContactPromptGroundTruth() + 48));
  if (v1[1])
  {
    v2 = *v1;
    v3 = v1[1];
    if (*v1 != 0xD000000000000023)
      goto LABEL_6;
  }
  else
  {
    v3 = 0x8000000213F046D0;
    v2 = 0xD000000000000023;
  }
  if (v3 == 0x8000000213F046D0)
  {
LABEL_7:
    v4 = &unk_24D0FF968;
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return sub_213E1B218((uint64_t)v4);
  }
LABEL_6:
  if ((sub_213EF3234() & 1) != 0)
    goto LABEL_7;
  if (v2 == 0xD000000000000029 && v3 == 0x8000000213F04700)
  {
    v4 = &unk_24D0FF990;
    goto LABEL_8;
  }
  v6 = sub_213EF3234();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    v4 = &unk_24D0FF990;
    return sub_213E1B218((uint64_t)v4);
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_213E7FEA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ContactPromptGroundTruth() + 32));
  v2 = v1[1];
  if (!v2)
    return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F1E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 64) = sub_213E1B218((uint64_t)&unk_24D0FFAF8);
  return sub_213DCAFE0(inited);
}

uint64_t sub_213E7FF4C()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  unsigned __int8 v38;

  v1 = (_QWORD *)sub_213DCAE7C(MEMORY[0x24BEE4AF8]);
  if ((sub_213E8020C() & 1) != 0)
    v2 = 6;
  else
    v2 = 5;
  v34 = v2;
  v3 = type metadata accessor for ContactPromptGroundTruth();
  v4 = *(_QWORD *)(v0 + *(int *)(v3 + 28));
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v32 = v3;
    swift_bridgeObjectRetain();
    v6 = (_OWORD *)(v4 + 48);
    v33 = v0;
    while (1)
    {
      v8 = *((_QWORD *)v6 - 1);
      v35 = (_QWORD *)*((_QWORD *)v6 - 2);
      v9 = (uint64_t)v35;
      v36 = v8;
      v37 = *v6;
      sub_213E8EE70((uint64_t *)&v35, (char *)&v38);
      v10 = v38;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35 = v1;
      v13 = sub_213DFA374(v9, v8, 0, 0);
      v14 = v1[2];
      v15 = (v12 & 1) == 0;
      v16 = v14 + v15;
      if (__OFADD__(v14, v15))
        break;
      v17 = v12;
      if (v1[3] >= v16)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_213E006A0();
      }
      else
      {
        sub_213DFBBD4(v16, isUniquelyReferenced_nonNull_native);
        v18 = sub_213DFA374(v9, v8, 0, 0);
        if ((v17 & 1) != (v19 & 1))
          goto LABEL_23;
        v13 = v18;
      }
      v20 = BYTE2(v10) | 2;
      v1 = v35;
      if ((v17 & 1) != 0)
      {
        v7 = v35[7] + 4 * v13;
        *(_BYTE *)v7 = v34;
        *(_BYTE *)(v7 + 3) = v20;
        *(_WORD *)(v7 + 1) = v10;
      }
      else
      {
        v35[(v13 >> 6) + 8] |= 1 << v13;
        v21 = (uint64_t *)(v1[6] + 32 * v13);
        *v21 = v9;
        v21[1] = v8;
        v21[2] = 0;
        v21[3] = 0;
        v22 = v1[7] + 4 * v13;
        *(_BYTE *)v22 = v34;
        *(_BYTE *)(v22 + 3) = v20;
        *(_WORD *)(v22 + 1) = v10;
        v23 = v1[2];
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
          goto LABEL_22;
        v1[2] = v25;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 2;
      --v5;
      v0 = v33;
      if (!v5)
      {
        swift_bridgeObjectRelease();
        v3 = v32;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
LABEL_18:
    v26 = v0 + *(int *)(v3 + 32);
    v27 = *(_QWORD *)(v26 + 8);
    if (v27)
    {
      v35 = *(_QWORD **)v26;
      v28 = (uint64_t)v35;
      v36 = v27;
      v37 = *(_OWORD *)(v26 + 16);
      sub_213E8EE70((uint64_t *)&v35, (char *)&v38);
      v29 = v38;
      swift_bridgeObjectRetain();
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v35 = v1;
      sub_213E24394((v29 << 8) | 0x2000004, v28, v27, 0, 0, v30);
      v1 = v35;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_213E8020C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for ContactPromptGroundTruth();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 36));
  if (v5 == 2)
  {
    sub_213E32A28(v0, (uint64_t)v4);
    goto LABEL_7;
  }
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_213E32A28(v0, (uint64_t)v4);
LABEL_6:
    sub_213E32A6C((uint64_t)v4);
    return 1;
  }
  v6 = sub_213EF3234();
  swift_bridgeObjectRelease();
  sub_213E32A28(v0, (uint64_t)v4);
  if ((v6 & 1) != 0)
    goto LABEL_6;
LABEL_7:
  v7 = (uint64_t *)&v4[*(int *)(v1 + 32)];
  v8 = *v7;
  v9 = v7[1];
  sub_213E05FBC(*v7, v9);
  sub_213E32A6C((uint64_t)v4);
  if (v9)
  {
    sub_213DB1874(v8, v9);
    return 1;
  }
  return 0;
}

uint64_t sub_213E80388(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(qword_254D3F178, (uint64_t (*)(uint64_t))type metadata accessor for ContactPromptGroundTruth, (uint64_t)&unk_213EFDAB4);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_213E803CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  if (!*(_BYTE *)(v0 + *(int *)(v1 + 36)))
    return sub_213E1B218((uint64_t)&unk_24D0FF9B8);
  if (*(_BYTE *)(v0 + *(int *)(v1 + 36)) == 1)
    return sub_213E1B218((uint64_t)&unk_24D0FF9E0);
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_213E80420()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  char v3;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;

  v1 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  v2 = *(unsigned __int16 *)(v0 + *(int *)(v1 + 32));
  if ((v2 - 2) >= 6u)
    v3 = 0x6050603u >> ((v2 >> 5) & 0xF8);
  else
    v3 = 0x60505030505uLL >> (8 * (v2 - 2));
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F1F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  v5 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  v6 = v5[1];
  *(_QWORD *)(inited + 32) = *v5;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0;
  *(_BYTE *)(inited + 67) = 3;
  *(_WORD *)(inited + 65) = v2;
  *(_BYTE *)(inited + 64) = v3;
  swift_bridgeObjectRetain();
  return sub_213DCAE7C(inited);
}

unint64_t sub_213E804F4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;

  v1 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  v2 = *(_WORD *)(v0 + *(int *)(v1 + 32));
  if (v2 > 7)
    goto LABEL_5;
  if (((1 << v2) & 0xEC) != 0)
    return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
  if (v2 != 4)
  {
LABEL_5:
    if (*(unsigned __int16 *)(v0 + *(int *)(v1 + 32)) > 0xFFu)
      return sub_213DCAFE0(MEMORY[0x24BEE4AF8]);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F1E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  v5 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  v6 = v5[1];
  *(_QWORD *)(inited + 32) = *v5;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 64) = sub_213E1B218((uint64_t)&unk_24D0FFB20);
  return sub_213DCAFE0(inited);
}

uint64_t sub_213E805D4(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(qword_254D3F1B0, (uint64_t (*)(uint64_t))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t)&unk_213EFDAFC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_213E80618(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PhoneCallGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

SiriPrivateLearningInference::PhoneCallGroundTruthSource_optional __swiftcall PhoneCallGroundTruthSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::PhoneCallGroundTruthSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static PhoneCallGroundTruthSource.allCases.getter()
{
  return &unk_24D100A40;
}

uint64_t PhoneCallGroundTruthSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213E806FC + 4 * byte_213EFDB80[*v0]))(0xD00000000000001BLL, 0x8000000213F055A0);
}

uint64_t sub_213E806FC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8;
}

unint64_t sub_213E80724()
{
  return 0xD000000000000011;
}

void sub_213E80740()
{
  char *v0;

  sub_213ED6818(*v0);
}

void sub_213E80748(uint64_t a1)
{
  char *v1;

  sub_213E2AADC(a1, *v1);
}

void sub_213E80750(uint64_t a1)
{
  char *v1;

  sub_213E2B130(a1, *v1);
}

SiriPrivateLearningInference::PhoneCallGroundTruthSource_optional sub_213E80758(Swift::String *a1)
{
  return PhoneCallGroundTruthSource.init(rawValue:)(*a1);
}

uint64_t sub_213E80764@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PhoneCallGroundTruthSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213E80788()
{
  sub_213E8196C();
  return sub_213EF2A18();
}

uint64_t sub_213E807E4()
{
  sub_213E8196C();
  return sub_213EF2A0C();
}

void sub_213E80830(char *a1)
{
  sub_213E2991C(*a1);
}

void sub_213E8083C(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D100A68;
}

uint64_t PhoneCallGroundTruth.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PhoneCallGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for PhoneCallGroundTruth()
{
  uint64_t result;

  result = qword_253F04BD8;
  if (!qword_253F04BD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PhoneCallGroundTruth.contactUSOPerson.getter()
{
  type metadata accessor for PhoneCallGroundTruth();
  return swift_retain();
}

uint64_t PhoneCallGroundTruth.originalContactReference.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PhoneCallGroundTruth() + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_213E05FBC(v4, v5);
}

uint64_t PhoneCallGroundTruth.correctedContactReference.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for PhoneCallGroundTruth() + 32));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E8095C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E80984 + 4 * byte_213EFDB84[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_213E80984()
{
  return 0x656372756F73;
}

unint64_t sub_213E80998()
{
  return 0xD000000000000010;
}

unint64_t sub_213E809B4()
{
  return 0xD000000000000018;
}

uint64_t sub_213E809F0()
{
  unsigned __int8 *v0;

  return sub_213E8095C(*v0);
}

uint64_t sub_213E809F8()
{
  sub_213E813A4();
  return sub_213EF3354();
}

uint64_t sub_213E80A20()
{
  sub_213E813A4();
  return sub_213EF3360();
}

uint64_t PhoneCallGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F1F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E813A4();
  sub_213EF3348();
  LOBYTE(v15) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for PhoneCallGroundTruth();
    LOBYTE(v15) = *(_BYTE *)(v3 + v9[5]);
    v17 = 1;
    sub_213E278BC();
    sub_213EF31BC();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + v9[6]);
    v17 = 2;
    sub_213EF1E30();
    sub_213DB0DB4(&qword_254D3BBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    v10 = (__int128 *)(v3 + v9[7]);
    v11 = v10[1];
    v15 = *v10;
    v16 = v11;
    v17 = 3;
    sub_213E626B0();
    sub_213EF3180();
    v12 = v3 + v9[8];
    v13 = *(_QWORD *)(v12 + 8);
    *(_QWORD *)&v15 = *(_QWORD *)v12;
    *((_QWORD *)&v15 + 1) = v13;
    v16 = *(_OWORD *)(v12 + 16);
    v17 = 4;
    sub_213EF31BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PhoneCallGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v20 = a2;
  v21 = sub_213EF1D64();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F208);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for PhoneCallGroundTruth();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E813A4();
  v24 = v7;
  v11 = (uint64_t)v25;
  sub_213EF333C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v25 = a1;
  v12 = (uint64_t)v10;
  LOBYTE(v26) = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v22;
  v14 = v21;
  sub_213EF3144();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v23, v14);
  v28 = 1;
  sub_213E279CC();
  sub_213EF3144();
  *(_BYTE *)(v12 + v8[5]) = v26;
  sub_213EF1E30();
  v28 = 2;
  sub_213DB0DB4(&qword_254D3E8D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  *(_QWORD *)(v12 + v8[6]) = v26;
  v28 = 3;
  sub_213E62738();
  sub_213EF3108();
  v15 = (_OWORD *)(v12 + v8[7]);
  v16 = v27;
  *v15 = v26;
  v15[1] = v16;
  v28 = 4;
  sub_213EF3144();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v13);
  v17 = *((_QWORD *)&v26 + 1);
  v18 = v12 + v8[8];
  *(_QWORD *)v18 = v26;
  *(_QWORD *)(v18 + 8) = v17;
  *(_OWORD *)(v18 + 16) = v27;
  sub_213E813E8(v12, v20);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  return sub_213E8142C(v12);
}

uint64_t sub_213E810C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PhoneCallGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213E810DC(_QWORD *a1)
{
  return PhoneCallGroundTruth.encode(to:)(a1);
}

uint64_t _s28SiriPrivateLearningInference20PhoneCallGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for PhoneCallGroundTruth();
  sub_213E2991C(*(_BYTE *)(a1 + v4[5]));
  if ((v5 & 1) == 0)
    return 0;
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v6 = sub_213EF3330();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  if (v6 != sub_213EF3330())
    return 0;
  v7 = v4[7];
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  v10 = *(_QWORD *)(a1 + v7 + 24);
  v28 = *(_QWORD *)(a1 + v7 + 16);
  v11 = (uint64_t *)(a2 + v7);
  v13 = *v11;
  v12 = v11[1];
  v15 = v11[2];
  v14 = v11[3];
  if (!v9)
  {
    if (!v12)
      goto LABEL_28;
    goto LABEL_24;
  }
  if (!v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_24:
    sub_213E05FBC(v13, v12);
    sub_213DB1874(v8, v9);
    sub_213DB1874(v13, v12);
    return 0;
  }
  if (v8 != v13 || v9 != v12)
  {
    v16 = sub_213EF3234();
    result = 0;
    if ((v16 & 1) == 0)
      return result;
  }
  if (!v10)
  {
    if (!v14)
      goto LABEL_28;
    return 0;
  }
  if (!v14)
    return 0;
  if (v28 == v15 && v10 == v14 || (v18 = sub_213EF3234(), result = 0, (v18 & 1) != 0))
  {
LABEL_28:
    v19 = v4[8];
    v20 = a1 + v19;
    v21 = *(_QWORD *)(a1 + v19);
    v22 = *(_QWORD *)(a1 + v19 + 8);
    v24 = *(_QWORD *)(a1 + v19 + 16);
    v23 = *(_QWORD *)(v20 + 24);
    v25 = (_QWORD *)(a2 + v19);
    v27 = v25[2];
    v26 = v25[3];
    if (v21 == *v25 && v22 == v25[1] || (sub_213EF3234() & 1) != 0)
    {
      if (v23)
      {
        if (v26 && (v24 == v27 && v23 == v26 || (sub_213EF3234() & 1) != 0))
          return 1;
      }
      else if (!v26)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_213E813A4()
{
  unint64_t result;

  result = qword_254D3F200;
  if (!qword_254D3F200)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFDF04, &type metadata for PhoneCallGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F200);
  }
  return result;
}

uint64_t sub_213E813E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhoneCallGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E8142C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhoneCallGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213E8146C()
{
  unint64_t result;

  result = qword_254D3F210;
  if (!qword_254D3F210)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PhoneCallGroundTruthSource, &type metadata for PhoneCallGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3F210);
  }
  return result;
}

unint64_t sub_213E814B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3F218;
  if (!qword_254D3F218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3F220);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3F218);
  }
  return result;
}

uint64_t sub_213E81500(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213DB0DB4((unint64_t *)&unk_253F04BC0, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&protocol conformance descriptor for PhoneCallGroundTruth);
  result = sub_213DB0DB4(&qword_253F04BB8, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&protocol conformance descriptor for PhoneCallGroundTruth);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallGroundTruthSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213E815A8 + 4 * byte_213EFDB8E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213E815DC + 4 * byte_213EFDB89[v4]))();
}

uint64_t sub_213E815DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E815E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E815ECLL);
  return result;
}

uint64_t sub_213E815F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E81600);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213E81604(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E8160C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallGroundTruthSource()
{
  return &type metadata for PhoneCallGroundTruthSource;
}

uint64_t getEnumTagSinglePayload for PhoneCallGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E81634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E816BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_213E81734()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213E81814 + 4 * byte_213EFDB98[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213E81848 + 4 * byte_213EFDB93[v4]))();
}

uint64_t sub_213E81848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E81850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E81858);
  return result;
}

uint64_t sub_213E81864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E8186CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213E81870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E81878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallGroundTruth.CodingKeys()
{
  return &type metadata for PhoneCallGroundTruth.CodingKeys;
}

unint64_t sub_213E81898()
{
  unint64_t result;

  result = qword_254D3F228;
  if (!qword_254D3F228)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFDEDC, &type metadata for PhoneCallGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F228);
  }
  return result;
}

unint64_t sub_213E818E0()
{
  unint64_t result;

  result = qword_254D3F230;
  if (!qword_254D3F230)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFDE4C, &type metadata for PhoneCallGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F230);
  }
  return result;
}

unint64_t sub_213E81928()
{
  unint64_t result;

  result = qword_254D3F238;
  if (!qword_254D3F238)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFDE74, &type metadata for PhoneCallGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F238);
  }
  return result;
}

unint64_t sub_213E8196C()
{
  unint64_t result;

  result = qword_254D3F240;
  if (!qword_254D3F240)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PhoneCallGroundTruthSource, &type metadata for PhoneCallGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3F240);
  }
  return result;
}

uint64_t SessionClassifier.asFeaturisedSessionClassifier()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_213E81A18(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeaturisedSessionClassifierAdapter, (uint64_t)&off_24D106F78, a3);
}

uint64_t SessionClassifier.classify(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a3 + 8))(a1, MEMORY[0x24BEE4AF8], a2);
}

uint64_t FeaturisedSessionClassifier.classify(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a3 + 8))(a1, MEMORY[0x24BEE4AF8], a2);
}

uint64_t type metadata accessor for FeaturisedSessionClassifierAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeaturisedSessionClassifierAdapter);
}

uint64_t FeaturisedSessionClassifier.asSessionClassifier()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_213E81A18(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for SessionClassifierAdapter, (uint64_t)&off_24D106F68, a3);
}

uint64_t sub_213E81A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v5, a1);
  a5[3] = a3(0, a1, a2);
  a5[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v11 + 32))(boxed_opaque_existential_1, v13, a1);
}

uint64_t type metadata accessor for SessionClassifierAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionClassifierAdapter);
}

uint64_t dispatch thunk of SessionClassifier.classify(_:classifications:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FeaturisedSessionClassifier.classify(_:classifications:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_213E81AF8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_213E81BA8 + 4 * byte_213EFDF60[(v7 - 1)]))();
}

void sub_213E81BF8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_213E81DA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(a3 + 24) + 8))(*a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_213E81DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeaturisedSession(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_bridgeObjectRetain();
  FeaturisedSession.init(_:)(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_213DAFEC4((uint64_t)v7, &qword_253F06AF0);
    if (qword_253F04A88 != -1)
      swift_once();
    v13 = sub_213EF2724();
    __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
    v14 = sub_213EF270C();
    v15 = sub_213EF2CA0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_213DAB000, v14, v15, "Error classifying empty session", v16, 2u);
      MEMORY[0x2199C53C4](v16, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_213E81F9C((uint64_t)v7, (uint64_t)v11);
    v17 = (*(uint64_t (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(a3 + 24) + 8))(v11, a2, *(_QWORD *)(a3 + 16));
    sub_213DCA828((uint64_t)v11, type metadata accessor for FeaturisedSession);
  }
  return v17;
}

uint64_t sub_213E81F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeaturisedSession(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_213E81FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v15[0] = v4;
  v15[1] = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for RuleResult();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06988);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213E8248C(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_213E8248C(a2, (uint64_t)v13);
  v14 = (char *)sub_213E8214C + 4 * byte_213EFDF6E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_213E8214C()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  char v13;

  sub_213E8248C(v0, (uint64_t)v1);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (!swift_getEnumCaseMultiPayload())
  {
    v9 = v2[2];
    v8 = v2[3];
    if (v4 == *v2 && v3 == v2[1])
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v11 = sub_213EF3234();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_16:
        sub_213DCA828(v0, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
        goto LABEL_3;
      }
    }
    if (v6 == v9 && v5 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v13 = sub_213EF3234();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
        goto LABEL_16;
    }
    sub_213DCA828(v0, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
    v7 = 1;
    return v7 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213DAFEC4(v0, &qword_253F06988);
LABEL_3:
  v7 = 0;
  return v7 & 1;
}

uint64_t type metadata accessor for RuleResult()
{
  uint64_t result;

  result = qword_253F06978;
  if (!qword_253F06978)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E8248C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RuleResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_213E824D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_213EF1D64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = a2[2];
      v10 = a2[3];
      a1[2] = v9;
      a1[3] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_213E82604(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248) + 48);
  v4 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_QWORD *sub_213E82698(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain();
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_213EF1D64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[2];
    v9 = a2[3];
    a1[2] = v8;
    a1[3] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_213E827A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_213DCA828((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_213EF1D64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *sub_213E828E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_213EF1D64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_213E82994(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_213DCA828((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_213EF1D64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_213E82A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_213E82A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_213E82A74()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_213E82A84()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  const char *v3;
  char *v4;
  void *v5;

  v3 = " ";
  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v2;
    v5 = &unk_213EFE090;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t PhoneCallEventCoalescer.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t PhoneCallEventCoalescer.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_213E82B58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  if ((v7 != 0xD000000000000011 || v8 != 0x8000000213F04860) && (sub_213EF3234() & 1) == 0
    || (v9 = swift_bridgeObjectRetain(), v10 = sub_213DAF1F8(v9), result = swift_bridgeObjectRelease(), v10 == 2))
  {
LABEL_8:
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v6;
    a2[3] = v7;
    a2[4] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v12 = *(_QWORD *)(v2 + 16);
  if ((v10 & 1) == 0)
  {
    if (v12 == 2)
    {
      *(_QWORD *)(v2 + 16) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
      v14 = type metadata accessor for CommonFeature.DonatedBySiri(0);
      swift_allocObject();
      LOBYTE(v20) = 1;
      v15 = sub_213EF23C4();
      *(_QWORD *)(inited + 56) = v14;
      *(_QWORD *)(inited + 64) = sub_213E82D68();
      *(_QWORD *)(inited + 32) = v15;
      CoreDuetEvent.with(eventId:removedFeatures:newFeatures:eventType:)(0, 0, MEMORY[0x24BEE4AF8], inited, 0, 0, &v20);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      result = swift_arrayDestroy();
      v16 = v22;
      v17 = v23;
      *a2 = v20;
      *(_OWORD *)(a2 + 1) = v21;
      a2[3] = v16;
      a2[4] = v17;
      return result;
    }
    goto LABEL_8;
  }
  v18 = __OFADD__(v12, 1);
  v19 = v12 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v19;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
    a2[4] = 0;
  }
  return result;
}

unint64_t sub_213E82D68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3F250;
  if (!qword_254D3F250)
  {
    v1 = type metadata accessor for CommonFeature.DonatedBySiri(255);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEA4F80], v1);
    atomic_store(result, (unint64_t *)&qword_254D3F250);
  }
  return result;
}

uint64_t PhoneCallEventCoalescer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallEventCoalescer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhoneCallEventCoalescer()
{
  return objc_opt_self();
}

uint64_t method lookup function for PhoneCallEventCoalescer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_213E82DF4(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  _QWORD v26[2];
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a2;
  v28 = a1;
  v26[1] = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - v10;
  v12 = sub_213EF2D6C();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v26 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v26 - v20;
  v32 = sub_213EF2A90();
  v31 = sub_213EF2A90();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v30, a3);
  sub_213EF29A0();
  swift_getAssociatedConformanceWitness();
  v30 = v21;
  v22 = v19;
  sub_213EF2D90();
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v23(v15, 1, AssociatedTypeWitness) != 1)
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    do
    {
      v24(v11, v15, AssociatedTypeWitness);
      v28(v11);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, AssociatedTypeWitness);
      sub_213EF2AE4();
      sub_213EF2ACC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, AssociatedTypeWitness);
      sub_213EF2D90();
    }
    while (v23(v15, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v22);
  return v32;
}

ValueMetadata *type metadata accessor for FixedNegativeSignalScoreModifier()
{
  return &type metadata for FixedNegativeSignalScoreModifier;
}

double sub_213E830C8(double a1, double a2)
{
  double *v2;
  double result;

  result = *v2;
  if (*v2 >= a2)
    return a2;
  return result;
}

void sub_213E830EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  if (v5)
    goto LABEL_26;
LABEL_6:
  v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v8 < v6)
    {
      v9 = *(_QWORD *)(v2 + 8 * v8);
      ++v7;
      if (v9)
        goto LABEL_21;
      v7 = v8 + 1;
      if (v8 + 1 >= v6)
        goto LABEL_31;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (v9)
        goto LABEL_21;
      v7 = v8 + 2;
      if (v8 + 2 >= v6)
        goto LABEL_31;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (v9)
        goto LABEL_21;
      v7 = v8 + 3;
      if (v8 + 3 >= v6)
        goto LABEL_31;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (v9)
      {
LABEL_21:
        v5 = (v9 - 1) & v9;
        for (i = __clz(__rbit64(v9)) + (v7 << 6); ; i = v16 | (v7 << 6))
        {
          v12 = *(unsigned int *)(*(_QWORD *)(a1 + 48) + 4 * i);
          v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95730]), sel_init);
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v14, sel_setSource_, v12);
            MEMORY[0x2199C44C4](objc_msgSend(v15, sel_setCount_, v13));
            if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_213EF2A78();
            sub_213EF2AB4();
            sub_213EF2A54();
            if (!v5)
              goto LABEL_6;
          }
          else
          {
            if (qword_253F04A88 != -1)
              swift_once();
            v17 = sub_213EF2724();
            __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
            v18 = sub_213EF270C();
            v19 = sub_213EF2CA0();
            if (os_log_type_enabled(v18, v19))
            {
              v20 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v20 = 0;
              _os_log_impl(&dword_213DAB000, v18, v19, "Failed to create ground truth summary", v20, 2u);
              MEMORY[0x2199C53C4](v20, -1, -1);
            }

            if (!v5)
              goto LABEL_6;
          }
LABEL_26:
          v16 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v10 = v8 + 4;
      if (v10 < v6)
      {
        v9 = *(_QWORD *)(v2 + 8 * v10);
        if (v9)
        {
          v7 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          v7 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_33;
          if (v7 >= v6)
            break;
          v9 = *(_QWORD *)(v2 + 8 * v7);
          ++v10;
          if (v9)
            goto LABEL_21;
        }
      }
    }
LABEL_31:
    swift_release();
    return;
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t ThinContactGroundTruth.init(id:groundTruthType:groundTruthSource:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X8>)
{
  __int16 v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;

  v9 = *a4;
  v10 = *((_BYTE *)a4 + 2);
  v11 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
  result = type metadata accessor for ThinContactGroundTruth();
  v13 = (_QWORD *)(a5 + *(int *)(result + 20));
  *v13 = a2;
  v13[1] = a3;
  v14 = a5 + *(int *)(result + 24);
  *(_WORD *)v14 = v9;
  *(_BYTE *)(v14 + 2) = v10;
  return result;
}

uint64_t type metadata accessor for ThinContactGroundTruth()
{
  uint64_t result;

  result = qword_254D3F2D0;
  if (!qword_254D3F2D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ThinContactGroundTruth.init(completeGroundTruth:rightHandContext:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  __int16 v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[4];
  unsigned __int8 v67;
  _BYTE v68[48];

  v65 = a3;
  v57 = type metadata accessor for ContactSuggestionOutcomeGroundTruth();
  v5 = MEMORY[0x24BDAC7A8](v57);
  v52 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v51 - v7;
  v60 = type metadata accessor for ContactPromptGroundTruth();
  v8 = MEMORY[0x24BDAC7A8](v60);
  v55 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v51 - v10;
  v62 = type metadata accessor for MessagesGroundTruth();
  v11 = MEMORY[0x24BDAC7A8](v62);
  v58 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v51 - v13;
  v14 = type metadata accessor for PhoneCallGroundTruth();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - v18;
  v20 = type metadata accessor for ThinContactGroundTruth();
  v64 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2[1];
  v54 = *a2;
  v53 = a2[2];
  v63 = a2[3];
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 40);
  v29 = v27;
  v30 = v20;
  v31 = v28(v26, v29);
  v32 = (uint64_t *)&v22[*(int *)(v20 + 20)];
  *v32 = v31;
  v32[1] = v33;
  sub_213DAFDFC((uint64_t)a1, (uint64_t)v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213DBB430((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PhoneCallGroundTruth);
    v34 = v17[*(int *)(v14 + 20)];
    sub_213DCA828((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PhoneCallGroundTruth);
    v35 = 0;
    v36 = &v22[*(int *)(v20 + 24)];
    *(_WORD *)v36 = v34;
  }
  else
  {
    v37 = v62;
    v38 = v63;
    v39 = (uint64_t)v61;
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v58;
      sub_213DBB430(v39, v58, (uint64_t (*)(_QWORD))type metadata accessor for MessagesGroundTruth);
      v41 = *(unsigned __int8 *)(v40 + *(int *)(v37 + 20));
      sub_213DCA828(v40, (uint64_t (*)(_QWORD))type metadata accessor for MessagesGroundTruth);
      v36 = &v22[*(int *)(v30 + 24)];
      *(_WORD *)v36 = v41;
      v35 = 1;
    }
    else
    {
      v42 = (uint64_t)v59;
      if (swift_dynamicCast())
      {
        v43 = v55;
        sub_213DBB430(v42, v55, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
        v66[0] = v54;
        v66[1] = v23;
        v66[2] = v53;
        v66[3] = v38;
        sub_213E8EE70(v66, (char *)&v67);
        sub_213DCA828(v43, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = &v22[*(int *)(v30 + 24)];
        *(_WORD *)v36 = v67;
        v35 = 2;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = (uint64_t)v56;
        v45 = v57;
        if (!swift_dynamicCast())
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
          v50 = sub_213EF1D64();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v22, v50);
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v65, 1, 1, v30);
        }
        v46 = v52;
        sub_213DBB430(v44, v52, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionOutcomeGroundTruth);
        v47 = *(_WORD *)(v46 + *(int *)(v45 + 32));
        sub_213DCA828(v46, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionOutcomeGroundTruth);
        v36 = &v22[*(int *)(v30 + 24)];
        *(_WORD *)v36 = v47;
        v35 = 3;
      }
    }
  }
  v36[2] = v35;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
  v48 = v65;
  sub_213E619B0((uint64_t)v22, v65);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v48, 0, 1, v30);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_213DCA828((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
}

uint64_t ThinContactGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ThinContactGroundTruth.groundTruthType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ThinContactGroundTruth() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ThinContactGroundTruth.groundTruthSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int16 *v4;
  __int16 v5;

  result = type metadata accessor for ThinContactGroundTruth();
  v4 = (__int16 *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 2);
  *(_WORD *)a1 = v5;
  *(_BYTE *)(a1 + 2) = (_BYTE)v4;
  return result;
}

void ThinContactGroundTruth.hash(into:)()
{
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  type metadata accessor for ThinContactGroundTruth();
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  GroundTruthSource.hash(into:)();
}

uint64_t sub_213E83AFC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7254646E756F7267;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_213E83B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E84CEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E83B80()
{
  sub_213E84688();
  return sub_213EF3354();
}

uint64_t sub_213E83BA8()
{
  sub_213E84688();
  return sub_213EF3360();
}

uint64_t ThinContactGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int16 *v10;
  __int16 v11;
  _BYTE v13[10];
  __int16 v14;
  char v15;
  char v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F258);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E84688();
  sub_213EF3348();
  v17 = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = type metadata accessor for ThinContactGroundTruth();
    v16 = 1;
    sub_213EF318C();
    v10 = (__int16 *)(v3 + *(int *)(v9 + 24));
    v11 = *v10;
    LOBYTE(v10) = *((_BYTE *)v10 + 2);
    v14 = v11;
    v15 = (char)v10;
    v13[9] = 2;
    sub_213E6196C();
    sub_213EF31BC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ThinContactGroundTruth.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  type metadata accessor for ThinContactGroundTruth();
  sub_213EF28BC();
  GroundTruthSource.hash(into:)();
  return sub_213EF3330();
}

uint64_t ThinContactGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  char *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v22 = a2;
  v23 = sub_213EF1D64();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F268);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ThinContactGroundTruth();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E84688();
  v25 = v7;
  v11 = v27;
  sub_213EF333C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v27 = v5;
  v32 = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v12 = v23;
  v13 = v24;
  v14 = v25;
  sub_213EF3144();
  v21[1] = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v13, v12);
  v31 = 1;
  v15 = sub_213EF3114();
  v16 = (uint64_t *)&v10[*(int *)(v8 + 20)];
  *v16 = v15;
  v16[1] = v17;
  v30 = 2;
  sub_213E61928();
  sub_213EF3144();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v26);
  v18 = v29;
  v19 = &v10[*(int *)(v8 + 24)];
  *(_WORD *)v19 = v28;
  v19[2] = v18;
  sub_213E619B0((uint64_t)v10, v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
}

uint64_t sub_213E84110@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ThinContactGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213E84124(_QWORD *a1)
{
  return ThinContactGroundTruth.encode(to:)(a1);
}

uint64_t sub_213E8413C()
{
  sub_213EF32F4();
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  sub_213EF28BC();
  GroundTruthSource.hash(into:)();
  return sub_213EF3330();
}

void sub_213E841EC()
{
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  sub_213EF28BC();
  GroundTruthSource.hash(into:)();
}

uint64_t sub_213E8428C()
{
  sub_213EF32F4();
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  sub_213EF28BC();
  GroundTruthSource.hash(into:)();
  return sub_213EF3330();
}

uint64_t sub_213E84338(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = type metadata accessor for ThinContactGroundTruth();
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10[1] = a1;
    swift_bridgeObjectRetain();
    sub_213E619B0(v6, (uint64_t)v5);
    __asm { BR              X10 }
  }
  sub_213E830EC(MEMORY[0x24BEE4B00]);
  v8 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t _s28SiriPrivateLearningInference22ThinContactGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  __int16 v15;
  char v16;

  if ((sub_213EF1D28() & 1) != 0)
  {
    v4 = type metadata accessor for ThinContactGroundTruth();
    v5 = *(int *)(v4 + 20);
    v6 = *(_QWORD *)(a1 + v5);
    v7 = *(_QWORD *)(a1 + v5 + 8);
    v8 = (_QWORD *)(a2 + v5);
    v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (v10 = sub_213EF3234(), v11 = 0, (v10 & 1) != 0))
    {
      v12 = *(int *)(v4 + 24);
      v13 = *(_BYTE *)(a1 + v12 + 2);
      v15 = *(_WORD *)(a1 + v12);
      v16 = v13;
      _s28SiriPrivateLearningInference17GroundTruthSourceO2eeoiySbAC_ACtFZ_0((uint64_t)&v15);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_213E84688()
{
  unint64_t result;

  result = qword_254D3F260;
  if (!qword_254D3F260)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFE39C, &type metadata for ThinContactGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F260);
  }
  return result;
}

uint64_t sub_213E846CC()
{
  return sub_213DB0DB4(&qword_254D3F270, (uint64_t (*)(uint64_t))type metadata accessor for ThinContactGroundTruth, (uint64_t)&protocol conformance descriptor for ThinContactGroundTruth);
}

uint64_t *initializeBufferWithCopyOfBuffer for ThinContactGroundTruth(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v13[2] = v14[2];
    *(_WORD *)v13 = *(_WORD *)v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for ThinContactGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
  *(_WORD *)v12 = *(_WORD *)v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ThinContactGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 *v12;
  __int16 v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = (__int16 *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 2) = *((_BYTE *)v12 + 2);
  *(_WORD *)v11 = v13;
  return a1;
}

uint64_t initializeWithTake for ThinContactGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 2) = *(_BYTE *)(v9 + 2);
  *(_WORD *)v8 = *(_WORD *)v9;
  return a1;
}

uint64_t assignWithTake for ThinContactGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_WORD *)v13 = *(_WORD *)v14;
  *(_BYTE *)(v13 + 2) = *(_BYTE *)(v14 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThinContactGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E849C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ThinContactGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E84A50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_213E84ACC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ThinContactGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E84B94 + 4 * byte_213EFE195[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E84BC8 + 4 * byte_213EFE190[v4]))();
}

uint64_t sub_213E84BC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E84BD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E84BD8);
  return result;
}

uint64_t sub_213E84BE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E84BECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E84BF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E84BF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThinContactGroundTruth.CodingKeys()
{
  return &type metadata for ThinContactGroundTruth.CodingKeys;
}

unint64_t sub_213E84C18()
{
  unint64_t result;

  result = qword_254D3F310;
  if (!qword_254D3F310)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFE374, &type metadata for ThinContactGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F310);
  }
  return result;
}

unint64_t sub_213E84C60()
{
  unint64_t result;

  result = qword_254D3F318;
  if (!qword_254D3F318)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFE2E4, &type metadata for ThinContactGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F318);
  }
  return result;
}

unint64_t sub_213E84CA8()
{
  unint64_t result;

  result = qword_254D3F320;
  if (!qword_254D3F320)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFE30C, &type metadata for ThinContactGroundTruth.CodingKeys);
    atomic_store(result, &qword_254D3F320);
  }
  return result;
}

uint64_t sub_213E84CEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7254646E756F7267 && a2 == 0xEF65707954687475 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000213F06320)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ScoreLimitModifier(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScoreLimitModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoreLimitModifier()
{
  return &type metadata for ScoreLimitModifier;
}

double sub_213E84EBC(double a1, double a2)
{
  uint64_t v2;
  double result;
  double v4;

  result = *(double *)v2;
  v4 = *(double *)(v2 + 16);
  if (*(double *)v2 >= a2)
    result = a2;
  if (*(_BYTE *)(v2 + 8))
    result = a2;
  if (result > v4)
    v4 = result;
  if (!*(_BYTE *)(v2 + 24))
    return v4;
  return result;
}

uint64_t PhoneCallClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PhoneCallClassifier.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E84F34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN **v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20[3];
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  v2 = type metadata accessor for PhoneCallAbandonmentClassifier();
  v19[3] = v2;
  v19[4] = &protocol witness table for PhoneCallAbandonmentClassifier;
  v19[0] = swift_allocObject();
  v3 = type metadata accessor for QuickHangupClassifier();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EFE470;
  v21 = v3;
  v22 = &protocol witness table for QuickHangupClassifier;
  v20[0] = v4;
  v24 = type metadata accessor for PhoneCallInAppFollowupClassifier();
  v25 = &protocol witness table for PhoneCallInAppFollowupClassifier;
  v23[0] = swift_allocObject();
  v5 = type metadata accessor for SuccessfulPhoneCallClassifier();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0x4014000000000000;
  v27 = v5;
  v28 = &protocol witness table for SuccessfulPhoneCallClassifier;
  v26[0] = v6;
  v18 = MEMORY[0x24BEE4AF8];
  __swift_project_boxed_opaque_existential_1(v19, v2);
  v7 = sub_213EE9154(a1);
  sub_213DB4AF8(v7);
  v8 = v21;
  v9 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v10 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v9[1])(a1, v18, v8, v9);
  sub_213DB4AF8(v10);
  v11 = v24;
  v12 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v12[1])(a1, v18, v11, v12);
  sub_213DB4AF8(v13);
  v14 = v27;
  v15 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v16 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v15[1])(a1, v18, v14, v15);
  sub_213DB4AF8(v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B08);
  swift_arrayDestroy();
  return v18;
}

uint64_t type metadata accessor for PhoneCallClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for PhoneCallClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoneCallClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PhoneCallClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

id sub_213E85184()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id result;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
LABEL_6:
    v11 = v1;
    return v2;
  }
  v3 = (void *)objc_opt_self();
  result = objc_msgSend(v3, sel_bagSubProfile);
  if (result)
  {
    v5 = result;
    sub_213EF2850();

    result = objc_msgSend(v3, sel_bagSubProfileVersion);
    if (result)
    {
      v6 = result;
      sub_213EF2850();

      v7 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
      v8 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v7, v8);

      v10 = *(void **)(v0 + 16);
      *(_QWORD *)(v0 + 16) = v9;
      v2 = v9;

      v1 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_213E852B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_213E852CC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_perform);
  *(_QWORD *)(v0 + 32) = v1;
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  sub_213E86234();
  *v3 = v0;
  v3[1] = sub_213E85390;
  return sub_213EF3264();
}

uint64_t sub_213E85390()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213E853FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_213E85438()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_213E85470(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;

  v3 = sub_213E85184();
  v4 = objc_allocWithZone(MEMORY[0x24BE08238]);
  v5 = (void *)sub_213EF2844();
  v6 = (void *)sub_213EF2844();
  v7 = objc_msgSend(v4, sel_initWithType_clientIdentifier_clientVersion_bag_, a2, v5, v6, v3);

  v8 = (void *)sub_213EF2A30();
  objc_msgSend(v7, sel_setItemIdentifiers_, v8);

  return v7;
}

uint64_t sub_213E85548()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

_QWORD *sub_213E8556C()
{
  void *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v2 = objc_msgSend(v0, sel_responseDataItems);
  if (v2)
  {
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4C0);
    v4 = sub_213EF2A3C();

    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = 0;
      v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v22 = *(_QWORD *)(v4 + 8 * v6 + 32);
        sub_213E85748(&v22, (uint64_t)&v17);
        v8 = v18;
        if (v18)
        {
          v9 = v17;
          v15 = v20;
          v16 = v19;
          v14 = v21;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v1 = sub_213DB6F1C(0, v1[2] + 1, 1, v1);
          v11 = v1[2];
          v10 = v1[3];
          if (v11 >= v10 >> 1)
            v1 = sub_213DB6F1C((_QWORD *)(v10 > 1), v11 + 1, 1, v1);
          v1[2] = v11 + 1;
          v7 = &v1[8 * v11];
          v7[4] = v9;
          v7[5] = v8;
          *((_OWORD *)v7 + 3) = v16;
          *((_OWORD *)v7 + 4) = v15;
          *((_OWORD *)v7 + 5) = v14;
        }
        ++v6;
      }
      while (v5 != v6);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    sub_213E85EE8();
    swift_allocError();
    *v12 = 0xD000000000000027;
    v12[1] = 0x8000000213F09000;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_213E85748@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BYTE v24[40];
  __int128 v25;
  __int128 v26;
  unint64_t v27;

  v3 = *a1;
  sub_213EF2E74();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_213DFA7D4((uint64_t)v24), (v5 & 1) != 0))
  {
    sub_213DB0CCC(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_213E03454((uint64_t)v24);
  if (!*((_QWORD *)&v26 + 1))
    goto LABEL_17;
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_18:
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_213EF2E74();
  if (*(_QWORD *)(v3 + 16) && (v7 = sub_213DFA7D4((uint64_t)v24), (v8 & 1) != 0))
  {
    sub_213DB0CCC(*(_QWORD *)(v3 + 56) + 32 * v7, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_213E03454((uint64_t)v24);
  if (!*((_QWORD *)&v26 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    result = sub_213E43920((uint64_t)&v25);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  *(_QWORD *)&v25 = 1701667182;
  *((_QWORD *)&v25 + 1) = 0xE400000000000000;
  sub_213EF2E74();
  if (MEMORY[0x7475626972747471] && (v9 = sub_213DFA7D4((uint64_t)v24), (v10 & 1) != 0))
  {
    sub_213DB0CCC(MEMORY[0x7475626972747499] + 32 * v9, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_213E03454((uint64_t)v24);
  if (*((_QWORD *)&v26 + 1))
  {
    v11 = swift_dynamicCast();
    if (v11)
      v12 = 0x7475626972747461;
    else
      v12 = 0;
    if (v11)
      v13 = 0xEA00000000007365;
    else
      v13 = 0;
    v27 = v13;
  }
  else
  {
    sub_213E43920((uint64_t)&v25);
    v12 = 0;
    v27 = 0;
  }
  *(_QWORD *)&v25 = 0x614E747369747261;
  *((_QWORD *)&v25 + 1) = 0xEA0000000000656DLL;
  sub_213EF2E74();
  if (MEMORY[0x7475626972747471] && (v14 = sub_213DFA7D4((uint64_t)v24), (v15 & 1) != 0))
  {
    sub_213DB0CCC(MEMORY[0x7475626972747499] + 32 * v14, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_213E03454((uint64_t)v24);
  if (*((_QWORD *)&v26 + 1))
  {
    v16 = swift_dynamicCast();
    if (v16)
      v17 = 0x7475626972747461;
    else
      v17 = 0;
    if (v16)
      v18 = 0xEA00000000007365;
    else
      v18 = 0;
  }
  else
  {
    sub_213E43920((uint64_t)&v25);
    v17 = 0;
    v18 = 0;
  }
  *(_QWORD *)&v25 = 0x6D614E6D75626C61;
  *((_QWORD *)&v25 + 1) = 0xE900000000000065;
  sub_213EF2E74();
  if (MEMORY[0x7475626972747471] && (v19 = sub_213DFA7D4((uint64_t)v24), (v20 & 1) != 0))
  {
    sub_213DB0CCC(MEMORY[0x7475626972747499] + 32 * v19, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_213E03454((uint64_t)v24);
  if (*((_QWORD *)&v26 + 1))
  {
    result = swift_dynamicCast();
    v21 = 0x7475626972747461;
    v22 = 0xEA00000000007365;
    if (!(_DWORD)result)
    {
      v21 = 0;
      v22 = 0;
    }
  }
  else
  {
    result = sub_213E43920((uint64_t)&v25);
    v21 = 0;
    v22 = 0;
  }
  v23 = v27;
  *(_QWORD *)a2 = 25705;
  *(_QWORD *)(a2 + 8) = 0xE200000000000000;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 56) = v22;
  return result;
}

uint64_t AMSSongMetadataClient.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for AMSClient();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t AMSSongMetadataClient.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for AMSClient();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t type metadata accessor for AMSClient()
{
  return objc_opt_self();
}

uint64_t sub_213E85BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_213E85BE0()
{
  uint64_t *v0;
  id v1;
  _QWORD *v2;

  v1 = sub_213E85470(v0[2], 203);
  v0[4] = (uint64_t)v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_213E85C54;
  v2[3] = v1;
  return swift_task_switch();
}

uint64_t sub_213E85C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_213E85CC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(void **)(v0 + 56);

  v3 = sub_213E8556C();
  if (!v2)
    v4 = v3;
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v4);
}

uint64_t sub_213E85D24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AMSSongMetadataClient.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AMSSongMetadataClient.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_213E85D98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213E85DFC;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_213E85DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t type metadata accessor for AMSSongMetadataClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for AMSSongMetadataClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AMSSongMetadataClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AMSSongMetadataClient.searchSongs(identifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 96) + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213E65B1C;
  return v6(a1);
}

unint64_t sub_213E85EE8()
{
  unint64_t result;

  result = qword_254D3F4B8;
  if (!qword_254D3F4B8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFE564, &type metadata for AMSError);
    atomic_store(result, (unint64_t *)&qword_254D3F4B8);
  }
  return result;
}

void sub_213E85F2C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, char *, uint64_t);
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t aBlock;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4D0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  v11 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v11(v10 + v9, v7, v4);
  v19 = sub_213E86274;
  v20 = v10;
  aBlock = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_213E86150;
  v18 = &block_descriptor_1;
  v12 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a2, sel_addSuccessBlock_, v12);
  _Block_release(v12);
  v8(v7, a1, v4);
  v13 = swift_allocObject();
  v11(v13 + v9, v7, v4);
  v19 = sub_213E86300;
  v20 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_213E861DC;
  v18 = &block_descriptor_13;
  v14 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a2, sel_addErrorBlock_, v14);
  _Block_release(v14);
}

uint64_t sub_213E8610C(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4D0);
  return sub_213EF2B08();
}

uint64_t sub_213E86150(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_213E86198(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4D0);
  return sub_213EF2AFC();
}

void sub_213E861DC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_213E8622C(uint64_t a1)
{
  uint64_t v1;

  sub_213E85F2C(a1, *(void **)(v1 + 16));
}

unint64_t sub_213E86234()
{
  unint64_t result;

  result = qword_254D3F4C8;
  if (!qword_254D3F4C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3F4C8);
  }
  return result;
}

uint64_t sub_213E86274(uint64_t a1)
{
  return sub_213E8630C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_213E8610C);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4D0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_213E86300(uint64_t a1)
{
  return sub_213E8630C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_213E86198);
}

uint64_t sub_213E8630C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4D0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

ValueMetadata *type metadata accessor for AMSError()
{
  return &type metadata for AMSError;
}

uint64_t sub_213E86374()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F548);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3F4D8 = 91;
  unk_254D3F4E0 = 0xE100000000000000;
  return result;
}

SiriPrivateLearningInference::MediaInAppFollowupGroundTruthGenerator __swiftcall MediaInAppFollowupGroundTruthGenerator.init(timeToFollowup:)(Swift::Double timeToFollowup)
{
  uint64_t v1;
  SiriPrivateLearningInference::MediaInAppFollowupGroundTruthGenerator result;

  *(_QWORD *)v1 = 0x3FE3333333333333;
  *(Swift::Double *)(v1 + 8) = timeToFollowup;
  result.componentSimilarityThreshold = timeToFollowup;
  return result;
}

uint64_t MediaInAppFollowupGroundTruthGenerator.generate(session:classifications:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  os_log_type_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  _BYTE *v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _OWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  _BYTE *v98;
  _OWORD *v99;
  _BYTE *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t inited;
  uint64_t v113;
  _QWORD *v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  __int16 v118;
  _QWORD *v119;
  _BYTE *v120;
  int *v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  unint64_t v125;
  _BYTE v126[4];
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  _OWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  _BYTE *v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  char v151;
  unsigned __int8 v152;
  _OWORD v153[2];
  uint64_t v154;

  v145 = a2;
  v4 = sub_213EF1D64();
  v137 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v138 = &v126[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v136 = type metadata accessor for MediaGroundTruth();
  v6 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v8 = &v126[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v135 = type metadata accessor for MediaPlayClassification();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v132 = &v126[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v10);
  v133 = &v126[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4E8);
  MEMORY[0x24BDAC7A8](v12);
  v141 = &v126[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4F0);
  MEMORY[0x24BDAC7A8](v140);
  v139 = &v126[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v15);
  v142 = &v126[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F4F8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v144 = &v126[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v126[-v20];
  v22 = type metadata accessor for MediaInAppFollowupClassification();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v143 = &v126[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = &v126[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v30 = &v126[-v29];
  v146 = a1;
  v31 = *(_QWORD *)(a1 + 16);
  if (v31 != 1)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v40 = sub_213EF2724();
    __swift_project_value_buffer(v40, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain();
    v41 = sub_213EF270C();
    v42 = sub_213EF2C94();
    if (!os_log_type_enabled(v41, v42))
    {

      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    v43 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    *(_QWORD *)&v147 = v44;
    *(_DWORD *)v43 = 136315394;
    if (qword_254D3A040 != -1)
      swift_once();
    v45 = qword_254D3F4D8;
    v46 = unk_254D3F4E0;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v153[0] = sub_213DB0570(v45, v46, (uint64_t *)&v147);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2048;
    *(_QWORD *)&v153[0] = v31;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v41, v42, "%s Session has %ld turns. Only single turn sessions are currently supported due to malformed SELF. Skipping GT generation.", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    v47 = v44;
    goto LABEL_39;
  }
  v129 = v4;
  v130 = v6;
  v131 = v8;
  v32 = *v2;
  v33 = v2[1];
  v34 = *(_QWORD *)(v145 + 16);
  if (v34)
  {
    v35 = v145 + 32;
    swift_bridgeObjectRetain();
    v36 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v35, (uint64_t)&v147);
      sub_213DAFDFC((uint64_t)&v147, (uint64_t)v153);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v37 = swift_dynamicCast();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, v37 ^ 1u, 1, v22);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v147);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_213DAFEC4((uint64_t)v21, &qword_254D3F4F8);
      }
      else
      {
        sub_213DBB430((uint64_t)v21, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
        sub_213DBB430((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = sub_213DB7050(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
        v39 = *(_QWORD *)(v36 + 16);
        v38 = *(_QWORD *)(v36 + 24);
        if (v39 >= v38 >> 1)
          v36 = sub_213DB7050(v38 > 1, v39 + 1, 1, v36);
        *(_QWORD *)(v36 + 16) = v39 + 1;
        sub_213DBB430((uint64_t)v28, v36+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v39, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
      }
      v35 += 40;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = MEMORY[0x24BEE4AF8];
  }
  v48 = *(_QWORD *)(v36 + 16);
  v49 = v146;
  v50 = v144;
  if (v48 > 1)
  {
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v51 = sub_213EF2724();
    __swift_project_value_buffer(v51, (uint64_t)qword_253F08A00);
    v41 = sub_213EF270C();
    v52 = sub_213EF2C94();
    if (!os_log_type_enabled(v41, v52))
      goto LABEL_40;
    v43 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    *(_QWORD *)&v147 = v53;
    *(_DWORD *)v43 = 136315138;
    if (qword_254D3A040 != -1)
      swift_once();
    v54 = qword_254D3F4D8;
    v55 = unk_254D3F4E0;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v153[0] = sub_213DB0570(v54, v55, (uint64_t *)&v147);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v56 = v52;
    v57 = "%s Multiple In App Follows detected where only one should be present. Skipping Ground Truth Generation";
    goto LABEL_38;
  }
  if (v48)
  {
    sub_213DCA7E4(v36 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), (uint64_t)v144, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
    v58 = 0;
  }
  else
  {
    v58 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v50, v58, 1, v22);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v50, 1, v22) == 1)
  {
    sub_213DAFEC4((uint64_t)v50, &qword_254D3F4F8);
    if (qword_253F04A88 != -1)
      swift_once();
    v59 = sub_213EF2724();
    __swift_project_value_buffer(v59, (uint64_t)qword_253F08A00);
    v41 = sub_213EF270C();
    v60 = sub_213EF2C94();
    if (!os_log_type_enabled(v41, v60))
      goto LABEL_40;
    v43 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    *(_QWORD *)&v147 = v53;
    *(_DWORD *)v43 = 136315138;
    if (qword_254D3A040 != -1)
      swift_once();
    v61 = qword_254D3F4D8;
    v62 = unk_254D3F4E0;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v153[0] = sub_213DB0570(v61, v62, (uint64_t *)&v147);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v56 = v60;
    v57 = "%s No in app followup classification found. Skipping.";
LABEL_38:
    _os_log_impl(&dword_213DAB000, v41, v56, v57, (uint8_t *)v43, 0xCu);
    swift_arrayDestroy();
    v47 = v53;
LABEL_39:
    MEMORY[0x2199C53C4](v47, -1, -1);
    MEMORY[0x2199C53C4](v43, -1, -1);
LABEL_40:

    return MEMORY[0x24BEE4AF8];
  }
  v65 = v143;
  sub_213DBB430((uint64_t)v50, (uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
  if (qword_253F04A88 != -1)
    swift_once();
  v66 = sub_213EF2724();
  __swift_project_value_buffer(v66, (uint64_t)qword_253F08A00);
  v67 = sub_213EF270C();
  v68 = sub_213EF2C94();
  v69 = os_log_type_enabled(v67, v68);
  v70 = v142;
  if (v69)
  {
    v71 = (uint8_t *)swift_slowAlloc();
    v72 = swift_slowAlloc();
    *(_QWORD *)&v147 = v72;
    *(_DWORD *)v71 = 136315138;
    if (qword_254D3A040 != -1)
      swift_once();
    v73 = qword_254D3F4D8;
    v74 = unk_254D3F4E0;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v153[0] = sub_213DB0570(v73, v74, (uint64_t *)&v147);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v67, v68, "%s Found 1 Media In App Followup Classification. Reviewing for ground truth generation", v71, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v72, -1, -1);
    MEMORY[0x2199C53C4](v71, -1, -1);

    v65 = v143;
  }
  else
  {

  }
  *(_QWORD *)&v147 = v32;
  *((_QWORD *)&v147 + 1) = v33;
  v75 = sub_213E8749C((uint64_t)v65);
  v76 = v141;
  if ((v75 & 1) == 0)
  {
LABEL_56:
    sub_213DCA828((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
    return MEMORY[0x24BEE4AF8];
  }
  sub_213E8789C(v49, (uint64_t)v65, v141);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F500);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77) == 1)
  {
    v78 = &qword_254D3F4E8;
    v79 = v76;
LABEL_55:
    sub_213DAFEC4((uint64_t)v79, v78);
    goto LABEL_56;
  }
  v80 = v76[2];
  v81 = v76[5];
  v82 = *((_BYTE *)v76 + 64);
  v83 = *(int *)(v77 + 64);
  v84 = *((_BYTE *)v76 + *(int *)(v77 + 80));
  v85 = v140;
  v86 = v139;
  v87 = (uint64_t)v139 + *(int *)(v140 + 64);
  v88 = *(int *)(v140 + 80);
  *v139 = *(_OWORD *)v76;
  *((_QWORD *)v86 + 2) = v80;
  *(_OWORD *)((char *)v86 + 24) = *(_OWORD *)(v76 + 3);
  *((_QWORD *)v86 + 5) = v81;
  v86[3] = *((_OWORD *)v76 + 3);
  *((_BYTE *)v86 + 64) = v82;
  sub_213DE7F6C((uint64_t)v76 + v83, v87);
  *((_BYTE *)v86 + v88) = v84;
  v89 = (_QWORD *)*((_QWORD *)v86 + 1);
  v145 = *(_QWORD *)v86;
  v90 = (_BYTE *)*((_QWORD *)v86 + 2);
  v91 = *((_QWORD *)v86 + 3);
  v144 = (_BYTE *)*((_QWORD *)v86 + 4);
  v92 = (uint64_t)v70;
  v94 = (_OWORD *)*((_QWORD *)v86 + 5);
  v93 = *((_QWORD *)v86 + 6);
  v95 = *((_QWORD *)v86 + 7);
  v96 = *((_BYTE *)v86 + 64);
  v97 = (uint64_t)v86 + *(int *)(v85 + 64);
  LODWORD(v140) = *((unsigned __int8 *)v86 + *(int *)(v85 + 80));
  v98 = v90;
  sub_213DE7F6C(v97, v92);
  *(_QWORD *)&v153[0] = v32;
  *((_QWORD *)&v153[0] + 1) = v33;
  v141 = v89;
  *(_QWORD *)&v147 = v89;
  *((_QWORD *)&v147 + 1) = v98;
  *(_QWORD *)&v148 = v91;
  *((_QWORD *)&v148 + 1) = v144;
  v99 = v94;
  *(_QWORD *)&v149 = v94;
  *((_QWORD *)&v149 + 1) = v93;
  v150 = v95;
  v151 = v96;
  sub_213E881C4(&v147, (char *)&v152);
  if (v152 == 5)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = &qword_253F04828;
    v79 = v142;
    goto LABEL_55;
  }
  v144 = v98;
  v127 = v152;
  v100 = v133;
  sub_213DCC3D8((uint64_t)v65, (uint64_t)v133, &qword_254D3B568);
  v101 = (*(uint64_t (**)(_BYTE *, uint64_t, _QWORD))(v134 + 48))(v100, 1, v135);
  v128 = v95;
  if (v101 == 1)
  {
    v102 = 0;
    v103 = 0;
    v104 = 0;
    v105 = 0;
    v106 = 0;
    v107 = 0;
    v108 = 0;
  }
  else
  {
    v109 = v132;
    sub_213DBB430((uint64_t)v100, (uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    Array<A>.findEvent(eventId:)(*((_QWORD *)v109 + 2), *((_QWORD *)v109 + 3), v49, &v147);
    v110 = *((_QWORD *)&v147 + 1);
    if (*((_QWORD *)&v147 + 1))
    {
      v111 = v147;
      v153[0] = v147;
      v153[1] = v148;
      v154 = v149;
      extractMediaReference(event:)((uint64_t)&v147);
      sub_213DC7B60(v111, v110);
      v107 = *((_QWORD *)&v147 + 1);
      v146 = v147;
      v105 = *((_QWORD *)&v148 + 1);
      v106 = v148;
      v103 = *((_QWORD *)&v149 + 1);
      v104 = v149;
      v102 = (unsigned __int16)v150;
    }
    else
    {
      v102 = 0;
      v103 = 0;
      v104 = 0;
      v105 = 0;
      v106 = 0;
      v107 = 0;
      v146 = 0;
      v147 = 0u;
      v148 = 0u;
      v149 = 0u;
      LOWORD(v150) = 0;
    }
    sub_213DCA828((uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    v108 = v146;
  }
  v139 = v99;
  sub_213EF1D58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F508);
  inited = swift_initStackObject();
  v135 = xmmword_213EF53E0;
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = v108;
  *(_QWORD *)(inited + 40) = v107;
  *(_QWORD *)(inited + 48) = v106;
  *(_QWORD *)(inited + 56) = v105;
  *(_QWORD *)(inited + 64) = v104;
  *(_QWORD *)(inited + 72) = v103;
  *(_WORD *)(inited + 80) = v102;
  if (v107)
  {
    v146 = v108;
    LODWORD(v134) = v102;
    swift_bridgeObjectRetain();
    v113 = v103;
    sub_213DB8518(v106, v105);
    v114 = sub_213DB64A8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v116 = v114[2];
    v115 = v114[3];
    if (v116 >= v115 >> 1)
      v114 = sub_213DB64A8((_QWORD *)(v115 > 1), v116 + 1, 1, v114);
    v117 = v145;
    v118 = v134;
    v114[2] = v116 + 1;
    v119 = &v114[7 * v116];
    v119[4] = v146;
    v119[5] = v107;
    v119[6] = v106;
    v119[7] = v105;
    v119[8] = v104;
    v119[9] = v113;
    *((_WORD *)v119 + 40) = v118;
  }
  else
  {
    v117 = v145;
    v114 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v120 = v144;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v121 = (int *)v136;
  v122 = (uint64_t)v131;
  v123 = v142;
  sub_213DCC3D8((uint64_t)v142, (uint64_t)&v131[*(int *)(v136 + 36)], &qword_253F04828);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v137 + 32))(v122, v138, v129);
  *(_BYTE *)(v122 + v121[5]) = v127;
  *(_QWORD *)(v122 + v121[6]) = v117;
  *(_QWORD *)(v122 + v121[7]) = v114;
  v124 = v122 + v121[8];
  *(_QWORD *)v124 = v141;
  *(_QWORD *)(v124 + 8) = v120;
  *(_OWORD *)(v124 + 16) = xmmword_213EF7580;
  *(_QWORD *)(v124 + 32) = 0;
  *(_QWORD *)(v124 + 40) = 0;
  *(_BYTE *)(v124 + 48) = 2;
  *(_BYTE *)(v124 + 49) = v140;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A628);
  v125 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v135;
  sub_213DBB430(v122, v63 + v125, (uint64_t (*)(_QWORD))type metadata accessor for MediaGroundTruth);
  sub_213DAFEC4((uint64_t)v123, &qword_253F04828);
  sub_213DCA828((uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
  return v63;
}

uint64_t sub_213E8749C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for MediaInAppFollowupClassification();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)(v1 + 8);
  if ((sub_213E37098() & 1) != 0)
  {
    if (*(double *)(a1 + *(int *)(v3 + 24)) <= v6)
      return 1;
    if (qword_253F04A88 != -1)
      swift_once();
    v14 = sub_213EF2724();
    __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
    sub_213DCA7E4(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
    v15 = sub_213EF270C();
    v16 = sub_213EF2C94();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136315650;
      if (qword_254D3A040 != -1)
        swift_once();
      v19 = qword_254D3F4D8;
      v20 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      v22 = sub_213DB0570(v19, v20, &v23);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      v22 = *(_QWORD *)&v5[*(int *)(v3 + 24)];
      sub_213EF2D9C();
      sub_213DCA828((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
      *(_WORD *)(v17 + 22) = 2048;
      v22 = *(_QWORD *)&v6;
      sub_213EF2D9C();
      _os_log_impl(&dword_213DAB000, v15, v16, "%s Follow-up took of %f longer than the maximum time of %f. Not generating ground truth.", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v18, -1, -1);
      MEMORY[0x2199C53C4](v17, -1, -1);
    }
    else
    {
      sub_213DCA828((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
    }

  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v7 = sub_213EF2724();
    __swift_project_value_buffer(v7, (uint64_t)qword_253F08A00);
    v8 = sub_213EF270C();
    v9 = sub_213EF2C94();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v23 = v11;
      *(_DWORD *)v10 = 136315138;
      if (qword_254D3A040 != -1)
        swift_once();
      v12 = qword_254D3F4D8;
      v13 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      v22 = sub_213DB0570(v12, v13, &v23);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v8, v9, "%s Followup play was not considered successful. Skipping.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v11, -1, -1);
      MEMORY[0x2199C53C4](v10, -1, -1);
    }

  }
  return 0;
}

uint64_t sub_213E8789C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  os_log_type_t v61;
  const char *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  __int128 v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;

  v6 = type metadata accessor for MediaInAppFollowupClassification();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeaturisedTurn(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v72 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
  {
LABEL_6:
    if (qword_253F04A88 != -1)
      swift_once();
    v22 = sub_213EF2724();
    __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
    sub_213DCA7E4(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
    v23 = sub_213EF270C();
    v24 = sub_213EF2CA0();
    if (os_log_type_enabled(v23, v24))
    {
      v78 = (_QWORD *)v6;
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v79 = v26;
      *(_DWORD *)v25 = 136315394;
      if (qword_254D3A040 != -1)
        swift_once();
      v27 = qword_254D3F4D8;
      v28 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      v86 = sub_213DB0570(v27, v28, (uint64_t *)&v79);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v29 = sub_213EF1D10();
      v86 = sub_213DB0570(v29, v30, (uint64_t *)&v79);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
      _os_log_impl(&dword_213DAB000, v23, v24, "%s Connected turn to the followup was not found. Turn ID=%s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v26, -1, -1);
      MEMORY[0x2199C53C4](v25, -1, -1);
    }
    else
    {
      sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
    }

    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F500);
    v32 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
    v33 = a3;
    return v32(v33, 1, 1, v31);
  }
  v75 = v16;
  v76 = v8;
  v77 = (uint64_t)&v72 - v18;
  v78 = a3;
  v20 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v21 = *(_QWORD *)(v17 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_213DCA7E4(v20, (uint64_t)v12, type metadata accessor for FeaturisedTurn);
    if ((sub_213EF1D28() & 1) != 0)
      break;
    sub_213DCA828((uint64_t)v12, type metadata accessor for FeaturisedTurn);
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      a3 = v78;
      v8 = v76;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  sub_213DBB430((uint64_t)v12, (uint64_t)v15, type metadata accessor for FeaturisedTurn);
  v34 = v77;
  sub_213DBB430((uint64_t)v15, v77, type metadata accessor for FeaturisedTurn);
  Array<A>.findEvent(eventId:)(*(_QWORD *)(a2 + *(int *)(v6 + 20) + 16), *(_QWORD *)(a2 + *(int *)(v6 + 20) + 24), a1, &v79);
  v35 = *((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v36 = v79;
    v37 = swift_bridgeObjectRetain();
    sub_213DAEB60(v37, &v79);
    sub_213DC7B60(v36, v35);
    swift_bridgeObjectRelease();
    v38 = *((_QWORD *)&v79 + 1);
    if (*((_QWORD *)&v79 + 1))
    {
      v74 = v79;
      v39 = v81;
      v76 = v80;
      v41 = v82;
      v40 = v83;
      v42 = v84;
      v43 = v85;
      v44 = sub_213E775B0(v34);
      v45 = *(_QWORD *)(v34 + *(int *)(v75 + 24));
      v46 = swift_bridgeObjectRetain();
      v47 = sub_213DAEE7C(v46);
      swift_bridgeObjectRelease();
      if (v47)
      {
        LODWORD(v75) = v44 & 1;
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F500);
        v49 = v40;
        v50 = v78;
        v72 = (uint64_t)v78 + *(int *)(v48 + 64);
        v73 = *(int *)(v48 + 80);
        v51 = v74;
        *v78 = v47;
        v50[1] = v51;
        v52 = v76;
        v50[2] = v38;
        v50[3] = v52;
        v50[4] = v39;
        v50[5] = v41;
        v50[6] = v49;
        v50[7] = v42;
        *((_BYTE *)v50 + 64) = v43 & 1;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_213DAEFF4(v45, v72);
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DCA828(v34, type metadata accessor for FeaturisedTurn);
        *((_BYTE *)v50 + v73) = v75;
        return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v50, 0, 1, v48);
      }
      sub_213DB8408(v74, v38);
      if (qword_253F04A88 != -1)
        swift_once();
      v67 = sub_213EF2724();
      __swift_project_value_buffer(v67, (uint64_t)qword_253F08A00);
      v55 = sub_213EF270C();
      v68 = sub_213EF2C94();
      v69 = os_log_type_enabled(v55, v68);
      v34 = v77;
      if (!v69)
        goto LABEL_37;
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      *(_QWORD *)&v79 = v58;
      *(_DWORD *)v57 = 136315138;
      if (qword_254D3A040 != -1)
        swift_once();
      v70 = qword_254D3F4D8;
      v71 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      v86 = sub_213DB0570(v70, v71, (uint64_t *)&v79);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v61 = v68;
      v62 = "%s USO Media Query was not found in turn related to followup. Session not valid for ground truth.";
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v63 = sub_213EF2724();
      __swift_project_value_buffer(v63, (uint64_t)qword_253F08A00);
      v55 = sub_213EF270C();
      v64 = sub_213EF2C94();
      if (!os_log_type_enabled(v55, v64))
        goto LABEL_37;
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      *(_QWORD *)&v79 = v58;
      *(_DWORD *)v57 = 136315138;
      if (qword_254D3A040 != -1)
        swift_once();
      v65 = qword_254D3F4D8;
      v66 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      v86 = sub_213DB0570(v65, v66, (uint64_t *)&v79);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v61 = v64;
      v62 = "%s Followup event was missing a played media item. Skipping.";
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v54 = sub_213EF2724();
    __swift_project_value_buffer(v54, (uint64_t)qword_253F08A00);
    v55 = sub_213EF270C();
    v56 = sub_213EF2CA0();
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_37;
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    *(_QWORD *)&v79 = v58;
    *(_DWORD *)v57 = 136315138;
    if (qword_254D3A040 != -1)
      swift_once();
    v59 = qword_254D3F4D8;
    v60 = unk_254D3F4E0;
    swift_bridgeObjectRetain();
    v86 = sub_213DB0570(v59, v60, (uint64_t *)&v79);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v61 = v56;
    v62 = "%s Invalid event id in classification. Could not find followup event.";
  }
  _os_log_impl(&dword_213DAB000, v55, v61, v62, v57, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v58, -1, -1);
  MEMORY[0x2199C53C4](v57, -1, -1);
LABEL_37:

  sub_213DCA828(v34, type metadata accessor for FeaturisedTurn);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F500);
  v32 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v78;
  return v32(v33, 1, 1, v31);
}

void sub_213E881C4(_QWORD *a1@<X1>, char *a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74[2];

  v4 = a1[2];
  v5 = a1[4];
  v6 = a1[6];
  if (v4 != 1)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v25 = sub_213EF2724();
    __swift_project_value_buffer(v25, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v26 = sub_213EF270C();
    v27 = sub_213EF2C94();
    if (os_log_type_enabled(v26, v27))
    {
      v60 = a2;
      v28 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      *(_QWORD *)&v68 = v66;
      *(_DWORD *)v28 = 136315394;
      if (qword_254D3A040 != -1)
        swift_once();
      v29 = qword_254D3F4D8;
      v30 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      v74[0] = sub_213DB0570(v29, v30, (uint64_t *)&v68);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v74[0] = v4;
      type metadata accessor for INMediaItemType(0);
      v31 = sub_213EF288C();
      v74[0] = sub_213DB0570(v31, v32, (uint64_t *)&v68);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v26, v27, "%s Followup was to a non song media type %s. Only songs are currently supported for followups.", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v66, -1, -1);
      MEMORY[0x2199C53C4](v28, -1, -1);

      a2 = v60;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_36;
  }
  v59 = *v2;
  v7 = a1[5];
  v8 = a1[3];
  v9 = sub_213E99D6C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F538);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF9F30;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 48) = v5;
  *(_BYTE *)(inited + 56) = 2;
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v6;
  *(_BYTE *)(inited + 80) = 1;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = 0;
  v11 = sub_213DCC2CC(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F540);
  swift_arrayDestroy();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_213DD2778(v12);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_213ECD1B0(v14, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_213E88F70(v15, v9, v11, (uint64_t (*)(void))sub_213E88AAC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (qword_253F04A88 != -1)
    swift_once();
  v17 = sub_213EF2724();
  __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
  v18 = sub_213EF270C();
  v19 = sub_213EF2C94();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    *(_QWORD *)&v68 = v21;
    *(_DWORD *)v20 = 136315138;
    if (qword_254D3A040 != -1)
      swift_once();
    v22 = qword_254D3F4D8;
    v23 = unk_254D3F4E0;
    swift_bridgeObjectRetain();
    v74[0] = sub_213DB0570(v22, v23, (uint64_t *)&v68);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v18, v19, "%s User query to played media item comparison for in App Followup:", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v21, -1, -1);
    MEMORY[0x2199C53C4](v20, -1, -1);

    v24 = *(_QWORD *)(v16 + 16);
    if (!v24)
      goto LABEL_30;
  }
  else
  {

    v24 = *(_QWORD *)(v16 + 16);
    if (!v24)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      v50 = sub_213EF270C();
      v51 = sub_213EF2C94();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        *(_QWORD *)&v68 = v53;
        *(_DWORD *)v52 = 136315138;
        if (qword_254D3A040 != -1)
          swift_once();
        v54 = qword_254D3F4D8;
        v55 = unk_254D3F4E0;
        swift_bridgeObjectRetain();
        v74[0] = sub_213DB0570(v54, v55, (uint64_t *)&v68);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v50, v51, "%s User did not specify a song name in the query. Skipping.", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v53, -1, -1);
        MEMORY[0x2199C53C4](v52, -1, -1);
      }

LABEL_36:
      v56 = 5;
      goto LABEL_37;
    }
  }
  v61 = a2;
  swift_bridgeObjectRetain();
  v58 = v16;
  v33 = (_BYTE *)(v16 + 80);
  v57 = v24;
  do
  {
    v34 = *(v33 - 48);
    v35 = *((_QWORD *)v33 - 5);
    v36 = *((_QWORD *)v33 - 4);
    v37 = *((_QWORD *)v33 - 3);
    v38 = *((_QWORD *)v33 - 2);
    v67 = *((_QWORD *)v33 - 1);
    v65 = *v33;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v39 = sub_213EF270C();
    v40 = sub_213EF2C94();
    if (os_log_type_enabled(v39, v40))
    {
      v62 = v37;
      v63 = v35;
      v64 = v34;
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v74[0] = v42;
      *(_DWORD *)v41 = 136315394;
      if (qword_254D3A040 != -1)
        swift_once();
      v43 = qword_254D3F4D8;
      v44 = unk_254D3F4E0;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v41 + 4) = sub_213DB0570(v43, v44, v74);
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      LOBYTE(v68) = v64;
      *((_QWORD *)&v68 + 1) = v63;
      v69 = v36;
      v70 = v62;
      v71 = v38;
      v72 = v67;
      v73 = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_213EF288C();
      *(_QWORD *)(v41 + 14) = sub_213DB0570(v45, v46, v74);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v39, v40, "%s    %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v42, -1, -1);
      MEMORY[0x2199C53C4](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v33 += 56;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  v47 = (_QWORD *)(v58 + 48);
  a2 = v61;
  v48 = v57;
  while (*((_BYTE *)v47 - 16) || *v47 == 0)
  {
    v47 += 7;
    if (!--v48)
      goto LABEL_30;
  }
  v68 = v59;
  sub_213E88B8C(v58, (char *)v74);
  swift_bridgeObjectRelease();
  v56 = v74[0];
LABEL_37:
  *a2 = v56;
}

uint64_t sub_213E88AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::Double_optional v11;

  v5 = 0;
  if (a3 && a5)
  {
    sub_213DE52C8();
    swift_bridgeObjectRetain();
    sub_213EF2DC0();
    v6 = sub_213EF2DC0();
    v8 = v7;
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = v6;
    v9._object = v8;
    v11 = String.scoreRatcliffObershelp(between:)(v9);
    v5 = *(_QWORD *)&v11.is_nil;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_213E88B8C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  double *v2;
  char *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  double *v16;
  char v17;
  uint64_t result;
  __int128 v20;
  __int128 v21;

  v3 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = swift_bridgeObjectRetain() + 40;
    v7 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(v6 + 8))
      {
        v21 = *(_OWORD *)(v6 + 8);
        v12 = *(_BYTE *)(v6 - 8);
        v13 = *(_QWORD *)v6;
        v14 = *(_BYTE *)(v6 + 40);
        v20 = *(_OWORD *)(v6 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD710(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v9 = *(_QWORD *)(v7 + 16);
        v8 = *(_QWORD *)(v7 + 24);
        v10 = v21;
        if (v9 >= v8 >> 1)
        {
          sub_213DCD710(v8 > 1, v9 + 1, 1);
          v10 = v21;
        }
        *(_QWORD *)(v7 + 16) = v9 + 1;
        v11 = v7 + 56 * v9;
        *(_BYTE *)(v11 + 32) = v12;
        *(_QWORD *)(v11 + 40) = v13;
        *(_OWORD *)(v11 + 48) = v10;
        *(_OWORD *)(v11 + 64) = v20;
        *(_BYTE *)(v11 + 80) = v14;
      }
      v6 += 56;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v3 = a2;
    v15 = *(_QWORD *)(v7 + 16);
    if (!v15)
      goto LABEL_19;
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v15)
    {
LABEL_19:
      v17 = 4;
      goto LABEL_20;
    }
  }
  v16 = (double *)(v7 + 80);
  while (*(_BYTE *)v16 != 1)
  {
    if (v4 > *(v16 - 1))
      goto LABEL_18;
LABEL_15:
    v16 += 7;
    if (!--v15)
      goto LABEL_19;
  }
  if (v4 <= 0.0)
    goto LABEL_15;
LABEL_18:
  v17 = 3;
LABEL_20:
  result = swift_release();
  *v3 = v17;
  return result;
}

unint64_t sub_213E88D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3F510;
  if (!qword_254D3F510)
  {
    v1 = type metadata accessor for MediaGroundTruth();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaGroundTruth, v1);
    atomic_store(result, (unint64_t *)&qword_254D3F510);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MediaInAppFollowupGroundTruthGenerator(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MediaInAppFollowupGroundTruthGenerator(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MediaInAppFollowupGroundTruthGenerator()
{
  return &type metadata for MediaInAppFollowupGroundTruthGenerator;
}

uint64_t sub_213E88DEC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_213E88E8C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_213E88F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  int v11;
  int v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v8 = a1;
  v47 = MEMORY[0x24BEE4AF8];
  sub_213DCD710(0, v4, 0);
  v5 = v47;
  result = sub_213E88DEC(v8);
  v10 = result;
  v12 = v11;
  v14 = v13 & 1;
  v39 = a3;
  v40 = v8 + 56;
  v37 = v8;
  v38 = a2;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(v8 + 32))
  {
    if (((*(_QWORD *)(v40 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v8 + 36) != v12)
      goto LABEL_26;
    v42 = v5;
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 48) + v10);
    if (*(_QWORD *)(a2 + 16))
    {
      v16 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 48) + v10);
      v17 = sub_213DFA578(v15);
      if ((v18 & 1) != 0)
      {
        v19 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v17);
        v21 = *v19;
        v20 = v19[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = 0;
        v20 = 0;
      }
      v15 = v16;
    }
    else
    {
      v21 = 0;
      v20 = 0;
    }
    v45 = v4;
    v44 = v14;
    v46 = v20;
    if (*(_QWORD *)(a3 + 16))
    {
      v22 = v15;
      v23 = sub_213DFA578(v15);
      if ((v24 & 1) != 0)
      {
        v25 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v23);
        v26 = *v25;
        v27 = v25[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        v26 = 0;
        v27 = 0;
      }
      LOBYTE(v15) = v22;
    }
    else
    {
      v26 = 0;
      v27 = 0;
    }
    v28 = v15;
    v29 = a4();
    v31 = v30;
    v5 = v42;
    v48 = v42;
    v33 = *(_QWORD *)(v42 + 16);
    v32 = *(_QWORD *)(v42 + 24);
    if (v33 >= v32 >> 1)
    {
      v43 = v29;
      sub_213DCD710(v32 > 1, v33 + 1, 1);
      v29 = v43;
      v5 = v48;
    }
    *(_QWORD *)(v5 + 16) = v33 + 1;
    v34 = v5 + 56 * v33;
    *(_BYTE *)(v34 + 32) = v28;
    *(_QWORD *)(v34 + 40) = v21;
    *(_QWORD *)(v34 + 48) = v46;
    *(_QWORD *)(v34 + 56) = v26;
    *(_QWORD *)(v34 + 64) = v27;
    *(_QWORD *)(v34 + 72) = v29;
    *(_BYTE *)(v34 + 80) = v31 & 1;
    v8 = v37;
    result = sub_213E88E8C(v10, v12, v44 & 1, v37);
    v10 = result;
    v12 = v35;
    v14 = v36 & 1;
    v4 = v45 - 1;
    a2 = v38;
    a3 = v39;
    if (v45 == 1)
    {
      sub_213E891EC(result, v35, v36 & 1);
      return v5;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_213E891EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_213E891F8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v15;
    v4 = type metadata accessor for PlusMediaSuggestion();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = (uint64_t *)(v6 + *(int *)(v4 + 24));
      v10 = *v8;
      v9 = v8[1];
      v11 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
        sub_213DCD0C8(v12 > 1, v11 + 1, 1);
      v6 += v7;
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v13 = v15 + 16 * v11;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_213E892FC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v3;
  v11 = v3[1];
  v13 = *(_QWORD *)(*v3 + 16);
  if (v11 == v13)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  if (v11 >= v13)
  {
    __break(1u);
  }
  else
  {
    v14 = a2(0);
    v15 = v12
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v11;
    v3[1] = v11 + 1;
    v16 = (uint64_t)&v10[*(int *)(v6 + 48)];
    v17 = v3[2];
    result = sub_213DCA7E4(v15, v16, a2);
    if (!__OFADD__(v17, 1))
    {
      v3[2] = v17 + 1;
      v18 = (uint64_t)a3 + *(int *)(v6 + 48);
      *a3 = v17;
      sub_213DBB430(v16, v18, a2);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
    }
  }
  __break(1u);
  return result;
}

uint64_t DiagnosticLoggingHelper.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __int128 v15;
  __int128 v16;
  _UNKNOWN **v17;
  __int128 v18;
  __int128 v19;
  _UNKNOWN **v20;

  v2 = sub_213EF26C4();
  v4 = v3;
  v5 = type metadata accessor for PIMSStoreCoreData();
  v6 = swift_allocObject();
  v7 = sub_213ED47F0(v2, v4, 0);
  swift_bridgeObjectRelease();
  if (v7)
  {
    *(_QWORD *)(v6 + 16) = v7;
    *(_QWORD *)(v6 + 24) = objc_msgSend(v7, sel_newBackgroundContext);
    *((_QWORD *)&v19 + 1) = v5;
    v20 = &protocol witness table for PIMSStoreCoreData;
    *(_QWORD *)&v18 = v6;
  }
  else
  {
    swift_deallocPartialClassInstance();
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
  }
  v8 = sub_213EF26B8();
  v10 = v9;
  v11 = type metadata accessor for PICSStoreCoreData();
  v12 = swift_allocObject();
  v13 = sub_213E4B790(v8, v10, 0);
  swift_bridgeObjectRelease();
  if (v13)
  {
    *(_QWORD *)(v12 + 16) = v13;
    *(_QWORD *)(v12 + 24) = objc_msgSend(v13, sel_newBackgroundContext);
    *((_QWORD *)&v16 + 1) = v11;
    v17 = &protocol witness table for PICSStoreCoreData;
    *(_QWORD *)&v15 = v12;
  }
  else
  {
    swift_deallocPartialClassInstance();
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  sub_213DC0630((uint64_t)&v18, a1, &qword_254D3F550);
  return sub_213DC0630((uint64_t)&v15, a1 + 40, &qword_254D3C988);
}

uint64_t DiagnosticLoggingHelper.init(pimsStore:picsStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_213DC0630(a1, a3, &qword_254D3F550);
  return sub_213DC0630(a2, a3 + 40, &qword_254D3C988);
}

uint64_t DiagnosticLoggingHelper.generateMediaSuggestionStoreDebugString(verbose:withMediaTitles:)(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 232) = v2;
  *(_BYTE *)(v3 + 321) = a2;
  *(_BYTE *)(v3 + 320) = a1;
  *(_QWORD *)(v3 + 240) = type metadata accessor for PlusMediaSuggestion();
  *(_QWORD *)(v3 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F560);
  *(_QWORD *)(v3 + 256) = swift_task_alloc();
  *(_QWORD *)(v3 + 264) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213E89694()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *inited;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];

  *(_QWORD *)(v0 + 152) = 0;
  v1 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 160) = 0xE000000000000000;
  sub_213DCC3D8(v1, v0 + 112, &qword_254D3F550);
  if (!*(_QWORD *)(v0 + 136))
  {
    sub_213DAFEC4(v0 + 112, &qword_254D3F550);
    sub_213EF2904();
    v8 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 160);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v8, v7);
  }
  v2 = *(_BYTE *)(v0 + 320);
  sub_213DB0BF0((__int128 *)(v0 + 112), v0 + 72);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  v6 = v5;
  if ((v2 & 1) == 0)
  {
    v9 = sub_213E8B4F8(v5);
    swift_bridgeObjectRelease();
    v6 = v9;
  }
  *(_QWORD *)(v0 + 272) = v6;
  if (*(_BYTE *)(v0 + 321) == 1)
  {
    v10 = type metadata accessor for AMSSongMetadataClient();
    v11 = swift_allocObject();
    type metadata accessor for AMSClient();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v11 + 16) = v12;
    type metadata accessor for AMPMetadataHelper();
    inited = (_QWORD *)swift_initStackObject();
    *(_QWORD *)(v0 + 280) = inited;
    inited[5] = v10;
    inited[6] = &protocol witness table for AMSSongMetadataClient;
    inited[2] = v11;
    v14 = swift_bridgeObjectRetain();
    v15 = sub_213E891F8(v14);
    *(_QWORD *)(v0 + 288) = v15;
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v16;
    *v16 = v0;
    v16[1] = sub_213E8A080;
    return sub_213E6494C(v15);
  }
  v19 = *(_QWORD **)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 264);
  sub_213EF2EB0();
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v0 + 216) = v34;
  sub_213EF31F8();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_213E892FC(&qword_254D3F568, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion, v19);
  sub_213DC0630((uint64_t)v19, v18, &qword_254D3F560);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v18, 1, v20) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 160);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
    goto LABEL_10;
  }
  v21 = *(_QWORD *)(v0 + 240);
  while (1)
  {
    v29 = *(uint64_t **)(v0 + 264);
    v30 = *v29;
    sub_213DBB430((uint64_t)v29 + *(int *)(v20 + 48), *(_QWORD *)(v0 + 248), (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    v35[0] = 0;
    v35[1] = 0xE000000000000000;
    sub_213EF2EB0();
    result = swift_bridgeObjectRelease();
    v35[0] = 0xD000000000000018;
    v35[1] = 0x8000000213F090C0;
    v31 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    v32 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 208) = v31;
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    *(_QWORD *)(v0 + 200) = v34;
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v35[0] = 0x909093A4449;
    v35[1] = 0xE600000000000000;
    sub_213EF1D64();
    sub_213E0B898();
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    strcpy((char *)v35, "Media ID:\t\t");
    HIDWORD(v35[1]) = -352321536;
    v33 = v32 + *(int *)(v21 + 24);
    swift_bridgeObjectRetain();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v35[0] = 0;
    v35[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    strcpy((char *)v35, "Storefront:\t\t");
    HIWORD(v35[1]) = -4864;
    if (*(_QWORD *)(v33 + 24) != 1)
    {
      if (*(_QWORD *)(v33 + 40))
        swift_bridgeObjectRetain();
    }
    v22 = *(_QWORD **)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 248);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 184) = 0;
    *(_QWORD *)(v0 + 192) = 0xE000000000000000;
    sub_213EF2904();
    sub_213EF2B8C();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_retain();
    UsoEntity_common_MediaItem.convertUSOMediaItemToString()();
    swift_release();
    strcpy((char *)v35, "USO key:\t\t");
    BYTE3(v35[1]) = 0;
    HIDWORD(v35[1]) = -369098752;
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v35[0] = 0;
    v35[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    v35[0] = 0xD000000000000011;
    v35[1] = 0x8000000213F09100;
    v25 = type metadata accessor for ThinMediaGroundTruth();
    v26 = swift_bridgeObjectRetain();
    MEMORY[0x2199C44E8](v26, v25);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    strcpy((char *)v35, "Tags:\t\t\t");
    BYTE1(v35[1]) = 0;
    WORD1(v35[1]) = 0;
    HIDWORD(v35[1]) = -402653184;
    sub_213DD09E0();
    swift_bridgeObjectRetain();
    sub_213EF2BA4();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 168) = 0;
    *(_QWORD *)(v0 + 176) = 0xE000000000000000;
    sub_213EF2904();
    sub_213EF2B8C();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v35[0] = 0;
    v35[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    v35[0] = 0x73694865726F6353;
    v35[1] = 0xEF09093A79726F74;
    v27 = *(_QWORD *)(v24 + *(int *)(v21 + 36));
    swift_bridgeObjectRetain();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D018);
    MEMORY[0x2199C44E8](v27, v28);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213DCA828(v24, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    sub_213E892FC(&qword_254D3F568, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion, v22);
    sub_213DC0630((uint64_t)v22, v23, &qword_254D3F560);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F568);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v23, 1, v20) == 1)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E8A080(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 304) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 312) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_213E8A114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[9];

  v1 = *(_QWORD *)(v0 + 280) + 16;
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD **)(v0 + 256);
  v37[0] = 0;
  v37[1] = 0xE000000000000000;
  sub_213EF2EB0();
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 216) = v32;
  v37[0] = 0xD000000000000018;
  v37[1] = 0x8000000213F090A0;
  sub_213EF31F8();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_213E892FC(&qword_254D3F568, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion, v5);
  sub_213DC0630((uint64_t)v5, v3, &qword_254D3F560);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) == 1)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 160);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v7, v8);
  }
  v36 = *(_QWORD *)(v0 + 240);
  v33 = v2;
  while (1)
  {
    v16 = *(uint64_t **)(v0 + 264);
    v17 = *v16;
    sub_213DBB430((uint64_t)v16 + *(int *)(v6 + 48), *(_QWORD *)(v0 + 248), (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    sub_213EF2EB0();
    result = swift_bridgeObjectRelease();
    v37[0] = 0xD000000000000018;
    v37[1] = 0x8000000213F090C0;
    if (__OFADD__(v17, 1))
      break;
    v18 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 208) = v17 + 1;
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    *(_QWORD *)(v0 + 200) = v32;
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v37[0] = 0x909093A4449;
    v37[1] = 0xE600000000000000;
    sub_213EF1D64();
    sub_213E0B898();
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    strcpy((char *)v37, "Media ID:\t\t");
    HIDWORD(v37[1]) = -352321536;
    v19 = (uint64_t *)(v18 + *(int *)(v36 + 24));
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    if (v2)
    {
      v37[0] = 0;
      v37[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_213EF2EB0();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v2 + 16))
      {
        swift_bridgeObjectRetain();
        v22 = sub_213DFA220(v21, v20);
        if ((v23 & 1) != 0)
        {
          v24 = (uint64_t *)(*(_QWORD *)(v2 + 56) + (v22 << 6));
          v25 = *v24;
          v26 = v24[1];
          v27 = v24[2];
          v28 = v24[3];
          v29 = v24[5];
          v35 = v24[4];
          v30 = v24[7];
          v31 = v24[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v37[0] = v25;
          v37[1] = v26;
          v37[2] = v27;
          v37[3] = v28;
          v37[4] = v35;
          v37[5] = v29;
          v37[6] = v31;
          v37[7] = v30;
          AMPSongMetadata.title.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_13:
          sub_213EF2904();
          swift_bridgeObjectRelease();
          sub_213EF2904();
          sub_213EF2904();
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
LABEL_14:
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    strcpy((char *)v37, "Storefront:\t\t");
    HIWORD(v37[1]) = -4864;
    if (v19[3] != 1)
    {
      if (v19[5])
        swift_bridgeObjectRetain();
    }
    v10 = *(_QWORD **)(v0 + 256);
    v34 = *(_QWORD *)(v0 + 264);
    v11 = *(_QWORD *)(v0 + 248);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 184) = 0;
    *(_QWORD *)(v0 + 192) = 0xE000000000000000;
    sub_213EF2904();
    sub_213EF2B8C();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_retain();
    UsoEntity_common_MediaItem.convertUSOMediaItemToString()();
    swift_release();
    strcpy((char *)v37, "USO key:\t\t");
    BYTE3(v37[1]) = 0;
    HIDWORD(v37[1]) = -369098752;
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    v37[0] = 0xD000000000000011;
    v37[1] = 0x8000000213F09100;
    v12 = type metadata accessor for ThinMediaGroundTruth();
    v13 = swift_bridgeObjectRetain();
    MEMORY[0x2199C44E8](v13, v12);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    strcpy((char *)v37, "Tags:\t\t\t");
    BYTE1(v37[1]) = 0;
    WORD1(v37[1]) = 0;
    HIDWORD(v37[1]) = -402653184;
    sub_213DD09E0();
    swift_bridgeObjectRetain();
    sub_213EF2BA4();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 168) = 0;
    *(_QWORD *)(v0 + 176) = 0xE000000000000000;
    sub_213EF2904();
    sub_213EF2B8C();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    v37[0] = 0x73694865726F6353;
    v37[1] = 0xEF09093A79726F74;
    v14 = *(_QWORD *)(v11 + *(int *)(v36 + 36));
    swift_bridgeObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D018);
    MEMORY[0x2199C44E8](v14, v15);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213DCA828(v11, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    sub_213E892FC(&qword_254D3F568, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion, v10);
    sub_213DC0630((uint64_t)v10, v34, &qword_254D3F560);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F568);
    v2 = v33;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v34, 1, v6) == 1)
      goto LABEL_2;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E8AB28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 280) + 16;
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::String __swiftcall DiagnosticLoggingHelper.generateContactSuggestionStoreDebugString()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String result;
  _QWORD v22[2];
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v29 = type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v29);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F570);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (_QWORD *)((char *)v22 - v7);
  v38 = 0;
  v39 = 0xE000000000000000;
  sub_213DCC3D8(v0 + 40, (uint64_t)&v32, &qword_254D3C988);
  if (!v34)
  {
    sub_213DAFEC4((uint64_t)&v32, &qword_254D3C988);
    sub_213EF2904();
    v19 = v38;
    v20 = (void *)v39;
    goto LABEL_8;
  }
  sub_213DB0BF0(&v32, (uint64_t)v35);
  v9 = v36;
  v10 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
  v12 = sub_213E8B8A4(v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v32 = 0;
  *((_QWORD *)&v32 + 1) = 0xE000000000000000;
  sub_213EF2EB0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v32 = 0xD000000000000018;
  *((_QWORD *)&v32 + 1) = 0x8000000213F091B0;
  v28 = *(_QWORD *)(v12 + 16);
  v31[0] = v28;
  sub_213EF31F8();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  v33 = 0;
  v32 = (unint64_t)v12;
  v22[0] = v12;
  swift_bridgeObjectRetain();
  sub_213E892FC(&qword_254D3F578, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion, v6);
  sub_213DC0630((uint64_t)v6, (uint64_t)v8, &qword_254D3F570);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F578);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13) == 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v38;
    v20 = (void *)v39;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
LABEL_8:
    v15 = v19;
    v16 = v20;
    goto LABEL_10;
  }
  v26 = 0xD000000000000012;
  v27 = 0x8000000213F090C0;
  v25 = 0x8000000213F090E0;
  v24 = 0x8000000213F091D0;
  v23 = 0x8000000213F09100;
  v22[1] = 0x8000000213F09120;
  while (1)
  {
    v14 = *v8;
    sub_213DBB430((uint64_t)v8 + *(int *)(v13 + 48), (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_213EF2EB0();
    v15 = swift_bridgeObjectRelease();
    v31[0] = 0xD000000000000018;
    v31[1] = v27;
    if (__OFADD__(v14, 1))
      break;
    v30 = v14 + 1;
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    v30 = v28;
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v31[0] = 0x909093A4449;
    v31[1] = 0xE600000000000000;
    sub_213EF1D64();
    sub_213E0B898();
    sub_213EF31F8();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    strcpy((char *)v31, "Contact ID:\t\t");
    HIWORD(v31[1]) = -4864;
    swift_bridgeObjectRetain();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    v31[0] = 0xD000000000000010;
    v31[1] = v24;
    swift_bridgeObjectRetain();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_213EF2904();
    sub_213EF2B8C();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_retain();
    UsoEntity_common_Person.convertUSOPersonToString()();
    swift_release();
    strcpy((char *)v31, "USO key:\t\t");
    BYTE3(v31[1]) = 0;
    HIDWORD(v31[1]) = -369098752;
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_213EF2EB0();
    swift_bridgeObjectRelease();
    v31[0] = 0xD000000000000011;
    v31[1] = v23;
    v17 = type metadata accessor for ThinContactGroundTruth();
    v18 = swift_bridgeObjectRetain();
    MEMORY[0x2199C44E8](v18, v17);
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    strcpy((char *)v31, "Tags:\t\t\t");
    BYTE1(v31[1]) = 0;
    WORD1(v31[1]) = 0;
    HIDWORD(v31[1]) = -402653184;
    sub_213DD0A28();
    swift_bridgeObjectRetain();
    sub_213EF2BA4();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    sub_213DCA828((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    sub_213E892FC(&qword_254D3F578, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion, v6);
    sub_213DC0630((uint64_t)v6, (uint64_t)v8, &qword_254D3F570);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F578);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13) == 1)
      goto LABEL_6;
  }
  __break(1u);
LABEL_10:
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

_QWORD *sub_213E8B3CC(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_213EF2910();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213E8B484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F588);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_213E8B4F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t (*v11)();
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[2];
  unint64_t v15;
  uint64_t v16;
  char *v17;
  const char *v18;
  const char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = type metadata accessor for PlusMediaSuggestion();
  v3 = MEMORY[0x24BDAC7A8](v23);
  v17 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v14 - v6;
  result = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v14[1] = v1;
    v9 = 0;
    v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21 = a1 + v15;
    v16 = MEMORY[0x24BEE4AF8];
    v10 = type metadata accessor for PlusMediaSuggestion;
    v24 = *(_QWORD *)(v5 + 72);
    v19 = "nominationBlocked";
    v20 = "Type_Song";
    v18 = "previouslyNominated";
    do
    {
      v11 = v10;
      sub_213DCA7E4(v21 + v24 * v9, (uint64_t)v7, (uint64_t (*)(_QWORD))v10);
      v12 = *(_QWORD *)&v7[*(int *)(v23 + 44)];
      if (*(_QWORD *)(v12 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v13 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v12 + 32));
        if (((*(_QWORD *)(v12 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
          __asm { BR              X9 }
      }
      v10 = v11;
      sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))v11);
      ++v9;
    }
    while (v9 != v22);
    return v25;
  }
  return result;
}

uint64_t sub_213E8B8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)();
  uint64_t (*v12)();
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = type metadata accessor for PlusContactSuggestion();
  v3 = MEMORY[0x24BDAC7A8](v18);
  v15[4] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v15 - v6;
  result = MEMORY[0x24BEE4AF8];
  v20 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v15[1] = v1;
    v9 = 0;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v19 = *(_QWORD *)(v5 + 72);
    v15[2] = v10;
    v15[3] = MEMORY[0x24BEE4AF8];
    v16 = a1 + v10;
    v11 = type metadata accessor for PlusContactSuggestion;
    do
    {
      v12 = v11;
      sub_213DCA7E4(v16 + v19 * v9, (uint64_t)v7, (uint64_t (*)(_QWORD))v11);
      v13 = *(_QWORD *)&v7[*(int *)(v18 + 36)];
      if (*(_QWORD *)(v13 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v14 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v13 + 32));
        if (((*(_QWORD *)(v13 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
      }
      v11 = v12;
      sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))v12);
      ++v9;
    }
    while (v9 != v17);
    return v20;
  }
  return result;
}

uint64_t destroy for DiagnosticLoggingHelper(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  if (*(_QWORD *)(result + 24))
    result = __swift_destroy_boxed_opaque_existential_1Tm(result);
  if (*(_QWORD *)(v1 + 64))
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  return result;
}

uint64_t initializeWithCopy for DiagnosticLoggingHelper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for DiagnosticLoggingHelper(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  v7 = *((_QWORD *)a2 + 8);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      return a1;
    }
LABEL_14:
    v8 = *(__int128 *)((char *)a2 + 40);
    v9 = *(__int128 *)((char *)a2 + 56);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  return a1;
}

uint64_t assignWithTake for DiagnosticLoggingHelper(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiagnosticLoggingHelper(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiagnosticLoggingHelper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticLoggingHelper()
{
  return &type metadata for DiagnosticLoggingHelper;
}

uint64_t sub_213E8BF00(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t result;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;

  swift_bridgeObjectRetain();
  v4 = sub_213EF28C8();
  if (v4)
  {
    v5 = v4;
    v6 = sub_213E8B484(v4, 0);
    swift_bridgeObjectRetain();
    v7 = sub_213E8B3CC(&v63, v6 + 4, v5, a1, a2);
    swift_bridgeObjectRelease();
    if (v7 != (_QWORD *)v5)
      goto LABEL_100;
    swift_bridgeObjectRelease();
    v8 = v6[2];
    if (v8)
      goto LABEL_4;
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v8 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v8)
    {
LABEL_4:
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        v12 = __OFADD__(v10, 900);
        v10 += 900;
        if (v12)
          v10 = 0x7FFFFFFFFFFFFFFFLL;
        ++v9;
        if (v10 >= v8)
          goto LABEL_12;
      }
      __break(1u);
      goto LABEL_91;
    }
  }
  v11 = 0;
LABEL_12:
  v63 = MEMORY[0x24BEE4AF8];
  sub_213DCD670(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
    goto LABEL_99;
  v13 = v63;
  v61 = v8;
  v62 = v6;
  if (!v11)
  {
    if (!v8)
    {
LABEL_80:
      swift_release();
      v47 = *(_QWORD *)(v13 + 16);
      if (v47)
      {
        v48 = v13;
        swift_retain();
        v49 = 0;
        v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          v63 = *(_QWORD *)(v48 + 8 * v49 + 32);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFE8);
          sub_213E8C5A8();
          v51 = sub_213EF2970();
          v53 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v50 = sub_213DB553C(0, v50[2] + 1, 1, v50);
          v55 = v50[2];
          v54 = v50[3];
          if (v55 >= v54 >> 1)
            v50 = sub_213DB553C((_QWORD *)(v54 > 1), v55 + 1, 1, v50);
          ++v49;
          v50[2] = v55 + 1;
          v56 = &v50[2 * v55];
          v56[4] = v51;
          v56[5] = v53;
        }
        while (v47 != v49);
        swift_release_n();
      }
      else
      {
        swift_release();
        return MEMORY[0x24BEE4AF8];
      }
      return (uint64_t)v50;
    }
    v15 = 0;
LABEL_48:
    v30 = v15 + 900;
    v31 = -(uint64_t)v15;
    v58 = v6 + 4;
    v32 = (unint64_t)&v6[2 * v15 + 4];
    v33 = v15;
    while (1)
    {
      v60 = v13;
      v34 = v8 >= v30 ? v30 : v8;
      v35 = v33 + 900;
      if (__OFADD__(v33, 900))
        goto LABEL_95;
      if (v8 >= v35)
        v36 = v33 + 900;
      else
        v36 = v8;
      if (v36 < (uint64_t)v33)
        goto LABEL_96;
      if ((v15 & 0x8000000000000000) != 0)
        goto LABEL_97;
      v37 = v6[2];
      if (v37 < v33 || v37 < v36)
        goto LABEL_98;
      sub_213EF3240();
      swift_retain_n();
      v39 = swift_dynamicCastClass();
      if (!v39)
      {
        swift_release();
        v39 = MEMORY[0x24BEE4AF8];
      }
      v40 = v34 + v31;
      v41 = *(_QWORD *)(v39 + 16);
      swift_release();
      if (v40 == v41)
      {
        v42 = (_QWORD *)swift_dynamicCastClass();
        if (!v42)
        {
          swift_release();
          v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        swift_release();
        v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
        if (v33 != v36)
        {
          if (v40 < 1)
          {
            if (v40 < 0)
              goto LABEL_101;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F588);
            v42 = (_QWORD *)swift_allocObject();
            v45 = _swift_stdlib_malloc_size(v42);
            v46 = v45 - 32;
            if (v45 < 32)
              v46 = v45 - 17;
            v42[2] = v40;
            v42[3] = 2 * (v46 >> 4);
          }
          if (v32 < (unint64_t)&v42[2 * v40 + 4] && v42 + 4 < &v58[2 * v36])
            goto LABEL_101;
          swift_arrayInitWithCopy();
        }
      }
      swift_release();
      v13 = v60;
      v63 = v60;
      v44 = *(_QWORD *)(v60 + 16);
      v43 = *(_QWORD *)(v60 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_213DCD670(v43 > 1, v44 + 1, 1);
        v13 = v63;
      }
      v33 += 900;
      *(_QWORD *)(v13 + 16) = v44 + 1;
      *(_QWORD *)(v13 + 8 * v44 + 32) = v42;
      v30 += 900;
      v31 -= 900;
      v32 += 14400;
      v8 = v61;
      v6 = v62;
      if (v35 >= v61)
        goto LABEL_80;
    }
  }
  v14 = 0;
  v15 = 0;
  v16 = (unint64_t)(v6 + 4);
  v17 = 900;
  v59 = v6 + 4;
  while (1)
  {
    v18 = v13;
    v19 = v8 >= v17 ? v17 : v8;
    if (v15 >= v8)
      break;
    if (v15 == 0x7FFFFFFFFFFFFFF8)
      goto LABEL_92;
    if (v8 >= (uint64_t)(v15 + 900))
      v20 = v15 + 900;
    else
      v20 = v8;
    if (v20 < (uint64_t)v15)
      goto LABEL_93;
    v21 = v6[2];
    if (v21 < v15 || (uint64_t)v21 < v20)
      goto LABEL_94;
    sub_213EF3240();
    swift_retain_n();
    v22 = swift_dynamicCastClass();
    if (!v22)
    {
      swift_release();
      v22 = MEMORY[0x24BEE4AF8];
    }
    v23 = v19 + v14;
    v24 = *(_QWORD *)(v22 + 16);
    swift_release();
    if (v23 == v24)
    {
      v6 = v62;
      v25 = (_QWORD *)swift_dynamicCastClass();
      if (!v25)
      {
        swift_release();
        v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      v6 = v62;
      swift_release();
      v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v15 != v20)
      {
        if (v23 < 1)
        {
          if (v23 < 0)
            goto LABEL_101;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F588);
          v25 = (_QWORD *)swift_allocObject();
          v28 = _swift_stdlib_malloc_size(v25);
          v29 = v28 - 32;
          if (v28 < 32)
            v29 = v28 - 17;
          v25[2] = v23;
          v25[3] = 2 * (v29 >> 4);
        }
        if (v16 < (unint64_t)&v25[2 * v23 + 4] && v25 + 4 < &v59[2 * v20])
          goto LABEL_101;
        swift_arrayInitWithCopy();
      }
    }
    swift_release();
    v13 = v18;
    v63 = v18;
    v26 = *(_QWORD *)(v18 + 16);
    v27 = *(_QWORD *)(v13 + 24);
    if (v26 >= v27 >> 1)
    {
      sub_213DCD670(v27 > 1, v26 + 1, 1);
      v13 = v63;
    }
    v17 += 900;
    *(_QWORD *)(v13 + 16) = v26 + 1;
    *(_QWORD *)(v13 + 8 * v26 + 32) = v25;
    v14 -= 900;
    v16 += 14400;
    v15 += 900;
    --v11;
    v8 = v61;
    if (!v11)
    {
      if ((uint64_t)v15 < v61)
        goto LABEL_48;
      goto LABEL_80;
    }
  }
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

unint64_t sub_213E8C5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3F580;
  if (!qword_254D3F580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3AFE8);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254D3F580);
  }
  return result;
}

uint64_t PlusContactSuggestionStoreRuntimeQuerying.queryWithLogging(query:plusId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 8))(a1, 0, a2, a3);
}

uint64_t PlusContactSuggestionStoreRuntimeQuerying.queryWithLogging(picsIds:contactQuery:plusId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a5 + 16))(a1, a2, 0, a3, a4);
}

double getPlusContactSuggestionStoreRuntimeQueryWrapper()@<D0>(uint64_t a1@<X8>)
{
  _QWORD *WrapperCACSgycfC_0;
  _QWORD *v3;
  double result;

  WrapperCACSgycfC_0 = _s28SiriPrivateLearningInference45PlusContactSuggestionStoreRuntimeQueryWrapperCACSgycfC_0();
  if (WrapperCACSgycfC_0)
  {
    v3 = WrapperCACSgycfC_0;
    *(_QWORD *)(a1 + 24) = type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper();
    *(_QWORD *)(a1 + 32) = &protocol witness table for PlusContactSuggestionStoreRuntimeQueryWrapper;
    *(_QWORD *)a1 = v3;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t makeTestablePlusContactSuggestionStoreRuntimeQueryWrapper(store:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t Wrapper;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;
  uint64_t v18;

  Wrapper = type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper();
  sub_213DAFDFC(a1, (uint64_t)v16);
  v14 = sub_213EF2574();
  v15 = MEMORY[0x24BEA5168];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  sub_213EF2568();
  v5 = v17;
  v6 = v18;
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_213E8D7E8((uint64_t)v9, &v13, Wrapper, v5, v6);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  a2[3] = Wrapper;
  a2[4] = &protocol witness table for PlusContactSuggestionStoreRuntimeQueryWrapper;
  *a2 = v11;
  return result;
}

uint64_t PlusContactSuggestionStoreRuntimeQueryWrapper.__allocating_init(store:logTarget:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PlusContactSuggestionStoreRuntimeQueryWrapper.init(store:logTarget:)(a1, a2);
  return v4;
}

_QWORD *PlusContactSuggestionStoreRuntimeQueryWrapper.init(store:logTarget:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_213EF2574();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[8] = 0xD000000000000030;
  v2[9] = 0x8000000213F06FB0;
  sub_213DAFDFC(a1, (uint64_t)(v2 + 2));
  sub_213EF2568();
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
  v9 = swift_allocObject();
  v15 = v5;
  v16 = MEMORY[0x24BEA5168];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(boxed_opaque_existential_1, v8, v5);
  type metadata accessor for SELFEventLogEmitters();
  v11 = swift_allocObject();
  sub_213DB0BF0(&v14, v11 + 16);
  *(_QWORD *)(v9 + 16) = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v2[7] = v9;
  return v2;
}

uint64_t sub_213E8C8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;

  sub_213E44CE4(a1, a2, a3);
  v8 = v3[5];
  v7 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v8, v7);
  if (a2)
    v9 = a2;
  else
    v9 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_213E8D8C0(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213E44FA8(v11, a3);
  if (qword_253F04A88 != -1)
    swift_once();
  v12 = sub_213EF2724();
  __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v13 = sub_213EF270C();
  v14 = sub_213EF2C94();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    *(_DWORD *)v15 = 134218240;
    swift_bridgeObjectRelease();
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v13, v14, "[PlusContactSuggestionStoreRuntimeQueryWrapper]: Found %ld results and %ld with matching tags.", (uint8_t *)v15, 0x16u);
    MEMORY[0x2199C53C4](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_213E8CB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for PlusContactSuggestion();
  v76 = *(_QWORD *)(v74 - 8);
  v12 = MEMORY[0x24BDAC7A8](v74);
  v73 = (uint64_t)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)&v64 - v14;
  v15 = sub_213EF1D64();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v4 + 56);
  v66 = a2;
  v65 = a3;
  v68 = a4;
  v67 = v22;
  sub_213E44CE4(a2, a3, a4);
  v69 = v5;
  sub_213DAFDFC(v5 + 16, (uint64_t)v81);
  v23 = *(_QWORD *)(a1 + 16);
  v64 = a1;
  if (v23)
  {
    v24 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v71 = *(_QWORD *)(v16 + 72);
    v72 = v25;
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v72(v21, v24, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v21, v15);
      v28 = v82;
      v27 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      v29 = v28;
      v30 = (uint64_t)v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 64))(v18, v29, v27);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v30, 1, v74) == 1)
      {
        sub_213E8E328(v30);
      }
      else
      {
        v31 = v70;
        sub_213DF8B18(v30, v70);
        sub_213DF8B18(v31, v73);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_213DB6968(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
        v33 = *(_QWORD *)(v26 + 16);
        v32 = *(_QWORD *)(v26 + 24);
        if (v33 >= v32 >> 1)
          v26 = sub_213DB6968(v32 > 1, v33 + 1, 1, v26);
        *(_QWORD *)(v26 + 16) = v33 + 1;
        sub_213DF8B18(v73, v26+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v33);
      }
      v24 += v71;
      if (!--v23)
        goto LABEL_13;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
  }
  else
  {
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x24BEE4AF8];
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  v34 = v69;
  if (qword_253F04A88 != -1)
    swift_once();
  v35 = sub_213EF2724();
  __swift_project_value_buffer(v35, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  swift_retain();
  v36 = sub_213EF270C();
  v37 = sub_213EF2C94();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v81[0] = v39;
    *(_DWORD *)v38 = 136315394;
    v40 = v26;
    v41 = *(_QWORD *)(v34 + 64);
    v42 = *(_QWORD *)(v34 + 72);
    swift_bridgeObjectRetain();
    v77 = sub_213DB0570(v41, v42, v81);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2048;
    v77 = *(_QWORD *)(v40 + 16);
    v26 = v40;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v36, v37, "%s Number of suggestions found: %ld", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v39, -1, -1);
    MEMORY[0x2199C53C4](v38, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  v43 = v65;
  swift_bridgeObjectRetain();
  v44 = sub_213E8DC34(v26, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v80 = v44;
  swift_retain();
  v45 = sub_213EF270C();
  v46 = sub_213EF2C94();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v81[0] = v48;
    *(_DWORD *)v47 = 136315394;
    v49 = *(_QWORD *)(v69 + 64);
    v50 = *(_QWORD *)(v69 + 72);
    swift_bridgeObjectRetain();
    v51 = v49;
    v34 = v69;
    v77 = sub_213DB0570(v51, v50, v81);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2048;
    swift_beginAccess();
    v79 = *(_QWORD *)(v80 + 16);
    sub_213EF2D9C();
    _os_log_impl(&dword_213DAB000, v45, v46, "%s Number of nominated suggestions with matching tags: %ld", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v48, -1, -1);
    MEMORY[0x2199C53C4](v47, -1, -1);

  }
  else
  {

    swift_release();
  }
  swift_beginAccess();
  swift_retain();
  v52 = v66;
  swift_retain();
  v53 = swift_bridgeObjectRetain();
  v54 = sub_213E8DFD8(v53, v52, v34);
  swift_release();
  swift_release();
  v80 = v54;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v55 = sub_213EF270C();
  v56 = sub_213EF2C94();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v79 = v58;
    *(_DWORD *)v57 = 136315394;
    v59 = *(_QWORD *)(v34 + 64);
    v60 = *(_QWORD *)(v34 + 72);
    swift_bridgeObjectRetain();
    v78 = sub_213DB0570(v59, v60, &v79);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2048;
    v78 = *(_QWORD *)(v54 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v55, v56, "%s Number of suggestions with matching names: %ld", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v58, -1, -1);
    MEMORY[0x2199C53C4](v57, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  v61 = v80;
  v62 = swift_bridgeObjectRetain();
  sub_213E44FA8(v62, v68);
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_213E8D3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  type metadata accessor for PlusContactSuggestion();
  swift_retain();
  v22 = sub_213E6FB5C();
  v5 = v4;
  swift_release();
  v21 = sub_213E6FB5C();
  v7 = v6;
  if (qword_253F04A88 != -1)
    swift_once();
  v8 = sub_213EF2724();
  __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_213EF270C();
  v10 = sub_213EF2C94();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v23 = v20;
    *(_DWORD *)v11 = 136315650;
    v13 = *(_QWORD *)(a3 + 64);
    v12 = *(_QWORD *)(a3 + 72);
    swift_bridgeObjectRetain();
    sub_213DB0570(v13, v12, &v23);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    if (v5)
      v14 = v22;
    else
      v14 = 7104878;
    if (v5)
      v15 = v5;
    else
      v15 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_213DB0570(v14, v15, &v23);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    if (v7)
      v16 = v21;
    else
      v16 = 7104878;
    if (v7)
      v17 = v7;
    else
      v17 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_213DB0570(v16, v17, &v23);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v9, v10, "%s Comparing names: '%s' (stored suggestion) to '%s' (query)", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v20, -1, -1);
    MEMORY[0x2199C53C4](v11, -1, -1);

    if (v5)
    {
LABEL_17:
      if (v7)
      {
        if (v22 == v21 && v5 == v7)
          v18 = 1;
        else
          v18 = sub_213EF3234();
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = 0;
      }
      goto LABEL_27;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    if (v5)
      goto LABEL_17;
  }
  if (!v7)
  {
    v18 = 1;
    return v18 & 1;
  }
  v18 = 0;
LABEL_27:
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t PlusContactSuggestionStoreRuntimeQueryWrapper.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlusContactSuggestionStoreRuntimeQueryWrapper.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E8D7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_213E8C8E0(a1, a2, a3);
}

uint64_t sub_213E8D7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213E8CB0C(a1, a2, a3, a4);
}

_QWORD *sub_213E8D7E8(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a4;
  v15 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper();
  v9 = (_QWORD *)swift_allocObject();
  v9[8] = 0xD000000000000030;
  v9[9] = 0x8000000213F06FB0;
  sub_213DB0BF0(&v13, (uint64_t)(v9 + 2));
  type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
  v10 = swift_allocObject();
  type metadata accessor for SELFEventLogEmitters();
  v11 = swift_allocObject();
  sub_213DB0BF0(a2, v11 + 16);
  *(_QWORD *)(v10 + 16) = v11;
  v9[7] = v10;
  return v9;
}

uint64_t sub_213E8D8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a2;
  v23 = type metadata accessor for PlusContactSuggestion();
  v4 = MEMORY[0x24BDAC7A8](v23);
  v18[3] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v18 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v18 - v10;
  result = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v13 = 0;
    v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v22 = *(_QWORD *)(v9 + 72);
    v18[0] = v2;
    v18[1] = v14;
    v19 = a1 + v14;
    v18[2] = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213E25084(v19 + v22 * v13, (uint64_t)v11);
      v15 = sub_213EA7D8C(*(_QWORD *)&v11[*(int *)(v23 + 36)], v21);
      sub_213E25084((uint64_t)v11, (uint64_t)v8);
      if ((v15 & 1) != 0)
      {
        v16 = *(_QWORD *)&v8[*(int *)(v23 + 36)];
        if (*(_QWORD *)(v16 + 16))
        {
          sub_213EF32F4();
          sub_213EF28BC();
          v17 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v16 + 32));
          if (((*(_QWORD *)(v16 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
            __asm { BR              X9 }
        }
      }
      sub_213E250C8((uint64_t)v8);
      sub_213E250C8((uint64_t)v11);
      ++v13;
    }
    while (v13 != v20);
    return v24;
  }
  return result;
}

uint64_t sub_213E8DC34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = type metadata accessor for PlusContactSuggestion();
  v5 = MEMORY[0x24BDAC7A8](v27);
  v21[4] = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v21 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v21 - v11;
  result = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a1 + 16);
  if (v25)
  {
    v14 = 0;
    v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v26 = *(_QWORD *)(v10 + 72);
    v21[1] = v2;
    v21[2] = v15;
    v23 = a1 + v15;
    v16 = MEMORY[0x24BEE4B08];
    if (a2)
      v16 = a2;
    v22 = v16;
    v21[3] = MEMORY[0x24BEE4AF8];
    v24 = a2;
    do
    {
      sub_213E25084(v23 + v26 * v14, (uint64_t)v12);
      v17 = *(_QWORD *)&v12[*(int *)(v27 + 36)];
      swift_bridgeObjectRetain();
      v18 = sub_213EA7D8C(v17, v22);
      swift_bridgeObjectRelease();
      sub_213E25084((uint64_t)v12, (uint64_t)v9);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)&v9[*(int *)(v27 + 36)];
        if (*(_QWORD *)(v19 + 16))
        {
          sub_213EF32F4();
          sub_213EF28BC();
          v20 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v19 + 32));
          if (((*(_QWORD *)(v19 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
            __asm { BR              X9 }
        }
      }
      sub_213E250C8((uint64_t)v9);
      sub_213E250C8((uint64_t)v12);
      ++v14;
    }
    while (v14 != v25);
    return v28;
  }
  return result;
}

uint64_t sub_213E8DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v6 = type metadata accessor for PlusContactSuggestion();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v24 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v14 = 0;
    v21 = a3;
    v22 = a1;
    while (v14 < *(_QWORD *)(a1 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v16 = *(_QWORD *)(v7 + 72);
      sub_213E25084(a1 + v15 + v16 * v14, (uint64_t)v12);
      v17 = sub_213E8D3D4((uint64_t)v12, v25, a3);
      if (v3)
      {
        sub_213E250C8((uint64_t)v12);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_213DF8B18((uint64_t)v12, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD300(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v26;
        v19 = *(_QWORD *)(v26 + 16);
        v18 = *(_QWORD *)(v26 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_213DCD300(v18 > 1, v19 + 1, 1);
          v13 = v26;
        }
        *(_QWORD *)(v13 + 16) = v19 + 1;
        result = sub_213DF8B18(v24, v13 + v15 + v19 * v16);
        a3 = v21;
        a1 = v22;
      }
      else
      {
        result = sub_213E250C8((uint64_t)v12);
      }
      if (v23 == ++v14)
      {
        v13 = v26;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

_QWORD *_s28SiriPrivateLearningInference45PlusContactSuggestionStoreRuntimeQueryWrapperCACSgycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;
  __int128 v13;

  v0 = sub_213EF26B8();
  v2 = v1;
  v3 = type metadata accessor for PICSStoreCoreData();
  v4 = swift_allocObject();
  v5 = sub_213E4B790(v0, v2, 0);
  swift_bridgeObjectRelease();
  if (v5)
  {
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
    swift_retain();
    sub_213EF24CC();
    v11 = v3;
    v12 = &protocol witness table for PICSStoreCoreData;
    *(_QWORD *)&v10 = v4;
    type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper();
    v6 = (_QWORD *)swift_allocObject();
    v6[8] = 0xD000000000000030;
    v6[9] = 0x8000000213F06FB0;
    sub_213DB0BF0(&v10, (uint64_t)(v6 + 2));
    type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
    v7 = swift_allocObject();
    type metadata accessor for SELFEventLogEmitters();
    v8 = swift_allocObject();
    sub_213DB0BF0(&v13, v8 + 16);
    swift_release();
    *(_QWORD *)(v7 + 16) = v8;
    v6[7] = v7;
  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v6;
}

uint64_t type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper()
{
  return objc_opt_self();
}

uint64_t sub_213E8E328(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of PlusContactSuggestionStoreRuntimeQuerying.queryWithLogging(query:suggestionTags:plusId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PlusContactSuggestionStoreRuntimeQuerying.queryWithLogging(picsIds:contactQuery:suggestionTags:plusId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t method lookup function for PlusContactSuggestionStoreRuntimeQueryWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlusContactSuggestionStoreRuntimeQueryWrapper.__allocating_init(store:logTarget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PlusContactSuggestionStoreRuntimeQueryWrapper.queryWithLogging(query:suggestionTags:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PlusContactSuggestionStoreRuntimeQueryWrapper.queryWithLogging(picsIds:contactQuery:suggestionTags:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t SlotBasedTurnComparator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  SlotBasedTurnComparator.init(_:)(a1, v3, v4, v5);
  return v2;
}

char *SlotBasedTurnComparator.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  type metadata accessor for SlotBasedTurnComparator(0, v6, *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  *((_QWORD *)v4 + 2) = static InferenceLogUtils.loggerTag<A>(_:)();
  *((_QWORD *)v4 + 3) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 104)], a1, v6);
  return v4;
}

uint64_t type metadata accessor for SlotBasedTurnComparator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlotBasedTurnComparator);
}

void sub_213E8E454(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  Swift::OpaquePointer v13;
  Swift::OpaquePointer v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  SiriPrivateLearningInference::SlotsClassification v37;

  v4 = v3;
  v9 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 88);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
  if (!*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v23 = sub_213EF2724();
    __swift_project_value_buffer(v23, (uint64_t)qword_253F08A00);
    swift_retain();
    v24 = sub_213EF270C();
    v25 = sub_213EF2CA0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v37.initialTurn._rawValue = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = *(_QWORD *)(v4 + 16);
      v29 = *(_QWORD *)(v4 + 24);
      swift_bridgeObjectRetain();
      v36 = sub_213DB0570(v28, v29, (uint64_t *)&v37);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      v30 = "%s No FollowUpTurnClassifyings provided by definition";
LABEL_17:
      _os_log_impl(&dword_213DAB000, v24, v25, v30, v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v27, -1, -1);
      MEMORY[0x2199C53C4](v26, -1, -1);

LABEL_19:
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
LABEL_18:

    swift_release();
    goto LABEL_19;
  }
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v12 = v11(a1, v9, v8);
  if (!v12)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v31 = sub_213EF2724();
    __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
    swift_retain();
    v24 = sub_213EF270C();
    v25 = sub_213EF2C94();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v37.initialTurn._rawValue = v27;
      *(_DWORD *)v26 = 136315138;
      v32 = *(_QWORD *)(v4 + 16);
      v33 = *(_QWORD *)(v4 + 24);
      swift_bridgeObjectRetain();
      v36 = sub_213DB0570(v32, v33, (uint64_t *)&v37);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      v30 = "%s Could not get slots required for reformulation detection";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  v13._rawValue = (void *)v12;
  v14._rawValue = (void *)v11(a2, v9, v8);
  if (!v14._rawValue)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  SlotsClassification.init(_:_:)(&v37, v13, v14);
  sub_213E8EC10((uint64_t)&v37);
  v15 = sub_213E8EA98(v10, (uint64_t)&v37);
  sub_213E8ECA8((uint64_t)&v37);
  sub_213E8ECA8((uint64_t)&v37);
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
    swift_once();
  v16 = sub_213EF2724();
  __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  swift_retain();
  v17 = sub_213EF270C();
  v18 = sub_213EF2C94();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v36 = v20;
    *(_DWORD *)v19 = 136315394;
    v21 = *(_QWORD *)(v4 + 16);
    v22 = *(_QWORD *)(v4 + 24);
    swift_bridgeObjectRetain();
    sub_213DB0570(v21, v22, &v36);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v17, v18, "%s identified %ld slot based matches", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v20, -1, -1);
    MEMORY[0x2199C53C4](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  v34 = type metadata accessor for SlotBasedTurnComparison();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v15;
  *(_QWORD *)(a3 + 24) = v34;
  *(_QWORD *)(a3 + 32) = sub_213E8ED40();
  *(_QWORD *)a3 = v35;
}

uint64_t sub_213E8E98C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 88) + 8))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80)) & 1;
}

uint64_t *SlotBasedTurnComparator.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return v0;
}

uint64_t SlotBasedTurnComparator.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return swift_deallocClassInstance();
}

void sub_213E8EA54(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_213E8E454(a1, a2, a3);
}

uint64_t sub_213E8EA74(uint64_t a1)
{
  return sub_213E8E98C(a1) & 1;
}

_QWORD *sub_213E8EA98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[4];
  uint64_t v20;
  _OWORD v21[3];
  uint64_t v22;
  unsigned __int8 v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v7 = v4[3];
    v8 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v7);
    v9 = *(_OWORD *)(a2 + 48);
    v19[2] = *(_OWORD *)(a2 + 32);
    v19[3] = v9;
    v20 = *(_QWORD *)(a2 + 64);
    v10 = *(_OWORD *)(a2 + 16);
    v19[0] = *(_OWORD *)a2;
    v19[1] = v10;
    (*(void (**)(_OWORD *__return_ptr, _OWORD *, uint64_t, uint64_t))(v8 + 8))(v21, v19, v7, v8);
    v11 = v23;
    if (v23 != 255)
    {
      v17 = v21[1];
      v18 = v21[0];
      v16 = v21[2];
      v12 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_213DB7064(0, v5[2] + 1, 1, v5);
      v14 = v5[2];
      v13 = v5[3];
      if (v14 >= v13 >> 1)
        v5 = sub_213DB7064((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
      v5[2] = v14 + 1;
      v6 = &v5[8 * v14];
      *((_OWORD *)v6 + 2) = v18;
      *((_OWORD *)v6 + 3) = v17;
      *((_OWORD *)v6 + 4) = v16;
      v6[10] = v12;
      *((_BYTE *)v6 + 88) = v11;
    }
    v4 += 5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_213E8EC10(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213E8ECA8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_213E8ED40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3F658;
  if (!qword_254D3F658)
  {
    v1 = type metadata accessor for SlotBasedTurnComparison();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SlotBasedTurnComparison, v1);
    atomic_store(result, (unint64_t *)&qword_254D3F658);
  }
  return result;
}

uint64_t dispatch thunk of SlotBasedTurnComparisonDefinition.turnMeetsFeatureFilterCriteria(turn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SlotBasedTurnComparisonDefinition.getClassifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SlotBasedTurnComparisonDefinition.collectSlots(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_213E8EDA0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SlotBasedTurnComparator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SlotBasedTurnComparator.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SlotBasedTurnComparator.compareTurns(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SlotBasedTurnComparator.turnMeetsFeatureFilterCriteria(turn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_213E8EE48(char *a1)
{
  return dword_213EFE7E0[*a1];
}

uint64_t sub_213E8EE5C(char *a1)
{
  return dword_213EFE814[*a1];
}

uint64_t sub_213E8EE70@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char *v27;
  char v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v3 = v2;
  v33 = a2;
  v5 = type metadata accessor for ContactPromptGroundTruth();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v11 = a1[3];
  v13 = *(unsigned __int8 *)(v3 + *(int *)(v6 + 20));
  v14 = *(unsigned __int8 *)(v3 + *(int *)(v6 + 36));
  if (v14 != 2)
  {
    if ((v14 & 1) != 0)
    {
      v15 = sub_213EF3234();
      swift_bridgeObjectRelease();
      sub_213DCA7E4(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
      if ((v15 & 1) == 0)
        goto LABEL_7;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_213DCA7E4(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
    }
    result = sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
    goto LABEL_9;
  }
  sub_213DCA7E4(v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
LABEL_7:
  v31 = v10;
  v32 = v9;
  v17 = v12;
  v18 = (uint64_t *)&v8[*(int *)(v5 + 32)];
  v19 = *v18;
  v20 = v18[1];
  sub_213E05FBC(*v18, v20);
  result = sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
  if (!v20)
  {
    if (v13)
      v28 = 5;
    else
      v28 = 2;
    goto LABEL_39;
  }
  result = sub_213DB1874(v19, v20);
  v12 = v17;
  v10 = v31;
  v9 = v32;
LABEL_9:
  v21 = (uint64_t *)(v3 + *(int *)(v5 + 32));
  v23 = *v21;
  v22 = v21[1];
  v25 = v21[2];
  v24 = v21[3];
  if ((v13 & 1) == 0)
  {
    if (!v22)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213DB1874(v9, v10);
      result = sub_213DB1874(v23, 0);
      v28 = 1;
      goto LABEL_39;
    }
    v29 = v9 == v23 && v22 == v10;
    v27 = v33;
    if (v29 || (result = sub_213EF3234(), (result & 1) != 0))
    {
      if (v11)
      {
        if (!v24)
          goto LABEL_43;
        if (v12 != v25 || v11 != v24)
        {
          result = sub_213EF3234();
          v28 = 0;
          if ((result & 1) != 0)
            goto LABEL_45;
          goto LABEL_43;
        }
      }
      else if (v24)
      {
        goto LABEL_43;
      }
      v28 = 0;
      goto LABEL_45;
    }
LABEL_43:
    v28 = 1;
    goto LABEL_45;
  }
  if (!v22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213DB1874(v9, v10);
    result = sub_213DB1874(v23, 0);
    v28 = 4;
LABEL_39:
    v27 = v33;
    goto LABEL_45;
  }
  v26 = v9 == v23 && v22 == v10;
  v27 = v33;
  if (!v26)
  {
    result = sub_213EF3234();
    if ((result & 1) == 0)
      goto LABEL_41;
  }
  if (v11)
  {
    if (v24)
    {
      if (v12 == v25 && v11 == v24)
        goto LABEL_21;
      result = sub_213EF3234();
      if ((result & 1) != 0)
        goto LABEL_21;
    }
LABEL_41:
    v28 = 4;
    goto LABEL_45;
  }
  if (v24)
    goto LABEL_41;
LABEL_21:
  v28 = 3;
LABEL_45:
  *v27 = v28;
  return result;
}

void sub_213E8F1E8(uint64_t a1, void *a2, void *a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *oslog;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95EF0]), sel_init);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(a2, sel_nodes);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, sel_lastObject);

      if (v10)
      {
        sub_213EF2DF0();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v21, 0, sizeof(v21));
      }
      sub_213DC0630((uint64_t)v21, (uint64_t)&v22, &qword_254D3DF38);
      if (*((_QWORD *)&v23 + 1))
      {
        sub_213DB9CDC(0, &qword_254D3F678);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v14 = *(void **)&v21[0];
          v15 = objc_msgSend((id)objc_opt_self(), sel_convertUsoNodeDataTier1_index_, *(_QWORD *)&v21[0], a1);
          objc_msgSend(v7, sel_setLinkedUsoNodeData_, v15);

          objc_msgSend(a3, sel_addLinkedUsoGraphNodeData_, v7);
          return;
        }
        goto LABEL_17;
      }
    }
    else
    {
      v22 = 0u;
      v23 = 0u;
    }
    sub_213DAFEC4((uint64_t)&v22, &qword_254D3DF38);
LABEL_17:
    if (qword_253F04A88 != -1)
      swift_once();
    v16 = sub_213EF2724();
    __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
    v17 = sub_213EF270C();
    v18 = sub_213EF2C94();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v19 = 134217984;
      *(_QWORD *)&v22 = a1;
      sub_213EF2D9C();
      _os_log_impl(&dword_213DAB000, v17, v18, "No valid USO node in redaction at index=%lld", v19, 0xCu);
      MEMORY[0x2199C53C4](v19, -1, -1);
    }

    return;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v11 = sub_213EF2724();
  __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
  oslog = sub_213EF270C();
  v12 = sub_213EF2CA0();
  if (os_log_type_enabled(oslog, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 134217984;
    *(_QWORD *)&v22 = a1;
    sub_213EF2D9C();
    _os_log_impl(&dword_213DAB000, oslog, v12, "Failed to create SELF USO node data for redaction at index=%lld", v13, 0xCu);
    MEMORY[0x2199C53C4](v13, -1, -1);
  }

}

uint64_t sub_213E8F550@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DCC3D8(a1, (uint64_t)v15, &qword_253F04828);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  v17 = 0;
  v18 = 0;
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    v19 = a2[3];
    v20 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 64))(v12, v19, v20);
    v21 = type metadata accessor for PlusContactSuggestion();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v8, 1, v21) == 1)
    {
      sub_213DAFEC4((uint64_t)v8, &qword_253F06B28);
      v17 = 0;
      v18 = 0;
    }
    else
    {
      v22 = &v8[*(int *)(v21 + 24)];
      v17 = *(_QWORD *)v22;
      v18 = *((_QWORD *)v22 + 1);
      swift_bridgeObjectRetain();
      sub_213DCA828((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *a3 = v17;
  a3[1] = v18;
  return result;
}

void *MediaCandidateEntity.convertToSchemaCandidateEntity()()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = *(unsigned __int8 *)(v0 + 50);
  v2 = *(double *)(v0 + 56);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957A8]), sel_init);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_213EF2844();
    objc_msgSend(v4, sel_setEntityAdamId_, v5);

    objc_msgSend(v4, sel_setConfidence_, v2);
    objc_msgSend(v4, sel_setNominated_, v1);
    v6 = swift_bridgeObjectRetain();
    sub_213E8FF5C(v6);
    swift_bridgeObjectRelease();
    sub_213DB9CDC(0, &qword_254D3F660);
    v7 = sub_213EF2A30();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setEntityFeedbackHistorys_, v7);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v8 = sub_213EF2724();
    __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
    v7 = sub_213EF270C();
    v9 = sub_213EF2C94();
    if (os_log_type_enabled(v7, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_213DAB000, v7, v9, "Failed to create SELF message for media candidate entities", v10, 2u);
      MEMORY[0x2199C53C4](v10, -1, -1);
    }
    v4 = 0;
  }

  return v4;
}

uint64_t sub_213E8F910(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_213E8FA6C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_213E8FA6C((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x2199C53C4](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_213E8FA6C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v14) <= 1u)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_213DF4C14(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_213E8FBE0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + result);
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_213E8FC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for ThinMediaGroundTruth();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213E92B04();
  v2 = sub_213EF1A28();
  swift_release();
  return v2;
}

uint64_t sub_213E8FF5C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  result = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = type metadata accessor for ThinMediaGroundTruth();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v23 = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      v8 = sub_213E8FC38();
      if (v9 >> 60 == 15)
        goto LABEL_10;
      v10 = v8;
      v11 = v9;
      v12 = objc_allocWithZone(MEMORY[0x24BE957B8]);
      v13 = (void *)sub_213EF1C44();
      v14 = objc_msgSend(v12, sel_initWithJSON_, v13);

      if (!v14)
        break;
      v15 = *(char *)(v6 + *(int *)(v4 + 24));
      if (v15 < 0)
      {
        if ((v15 & 0x7F) - 1 < 2)
          v21 = 1;
        else
          v21 = 5;
        objc_msgSend(v14, sel_setSource_, v21, v23);
        if ((_DWORD)v15 == -127)
          v16 = 2;
        else
          v16 = 1;
      }
      else
      {
        objc_msgSend(v14, sel_setSource_, dword_213EFE860[v15]);
        v16 = 1;
      }
      objc_msgSend(v14, sel_setEntityFeedbackType_, v16, v23);
      v22 = sub_213E36528(v10, v11);
      MEMORY[0x2199C44C4](v22);
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
LABEL_4:
      v6 += v7;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v24;
      }
    }
    sub_213E36528(v10, v11);
LABEL_10:
    if (qword_253F04A88 != -1)
      swift_once();
    v17 = sub_213EF2724();
    __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
    v18 = sub_213EF270C();
    v19 = sub_213EF2CA0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213DAB000, v18, v19, "Failed to create ground truth summary", v20, 2u);
      MEMORY[0x2199C53C4](v20, -1, -1);
    }

    goto LABEL_4;
  }
  return result;
}

_QWORD *sub_213E901F4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = swift_bridgeObjectRetain() + 40;
  v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = *(_QWORD *)(v4 - 8);
    swift_retain();
    v6 = sub_213EF1D88();
    if (v2)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v7 = sub_213EF2724();
      __swift_project_value_buffer(v7, (uint64_t)qword_253F08A00);
      v8 = v2;
      v9 = v2;
      v10 = sub_213EF270C();
      v11 = sub_213EF2CA0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        v13 = swift_slowAlloc();
        v24 = v13;
        *(_DWORD *)v12 = 136315138;
        v14 = v2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
        v15 = sub_213EF288C();
        *(_QWORD *)(v12 + 4) = sub_213DB0570(v15, v16, &v24);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_213DAB000, v10, v11, "Failed to convert redaction to protobuf. error=%s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v13, -1, -1);
        MEMORY[0x2199C53C4](v12, -1, -1);

        swift_release();
      }
      else
      {

        swift_release();
      }
      v2 = 0;
    }
    else
    {
      v17 = v6;
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v18 = v23;
      else
        v18 = sub_213DB6BD0(0, v23[2] + 1, 1, v23);
      v20 = v18[2];
      v19 = v18[3];
      if (v20 >= v19 >> 1)
        v18 = sub_213DB6BD0((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
      v18[2] = v20 + 1;
      v23 = v18;
      v21 = &v18[2 * v20];
      v21[4] = v5;
      v21[5] = v17;
    }
    v4 += 16;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v23;
}

id sub_213E904C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id result;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;

  v0 = sub_213EF1D64();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EF1DB8();
  sub_213EF1DDC();
  swift_allocObject();
  sub_213EF1DD0();
  v4 = sub_213EF1E00();
  v6 = v5;
  swift_retain();
  v7 = (void *)sub_213EF1D88();
  swift_release();
  v8 = objc_msgSend((id)objc_opt_self(), sel_convertNonTier1UsoGraph_, v7);
  if (!v8)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v25 = sub_213EF2724();
    __swift_project_value_buffer(v25, (uint64_t)qword_253F08A00);
    v26 = sub_213EF270C();
    v27 = sub_213EF2CA0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_213DAB000, v26, v27, "Failed to convert ObjC USO graph to SELF", v28, 2u);
      MEMORY[0x2199C53C4](v28, -1, -1);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
    }
    return 0;
  }
  v9 = v8;
  v33 = v7;
  v34 = v4;
  v10 = v6;
  v11 = v8;
  sub_213EF1D58();
  v12 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  v13 = (void *)sub_213EF1D1C();
  v14 = objc_msgSend(v12, sel_initWithNSUUID_, v13);

  v15 = v3;
  v16 = v14;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v15, v0);
  v32 = v11;
  objc_msgSend(v11, sel_setLinkId_, v14);
  swift_retain();
  v17 = sub_213E901F4(v10);
  swift_release();
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95EF8]), sel_init);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setLinkId_, v14);
    v20 = v17[2];
    if (v20)
    {
      v31 = v14;
      swift_bridgeObjectRetain();
      v21 = (id *)(v17 + 5);
      do
      {
        v22 = (uint64_t)*(v21 - 1);
        v23 = *v21;
        sub_213E8F1E8(v22, v23, v19);

        v21 += 2;
        --v20;
      }
      while (v20);

      swift_release();
      swift_bridgeObjectRelease();
      v24 = v33;
      v16 = v31;
      goto LABEL_14;
    }
LABEL_13:

    swift_release();
    v24 = v33;
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

    return v9;
  }
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95EF8]), sel_init);
  if (result)
    goto LABEL_13;
  __break(1u);
  return result;
}

uint64_t sub_213E90950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  char v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE v8[9];

  v0 = swift_bridgeObjectRetain();
  v1 = sub_213E8F910(v0);
  result = sub_213E88DE8();
  if ((v4 & 1) != 0)
    goto LABEL_12;
  if (*(_DWORD *)(v1 + 36) != v3)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(v1 + 32))
  {
    swift_release();
    return 1;
  }
  else
  {
    sub_213E8FBE0(result, v3, v1, v8);
    v5 = v8[0];
    v6 = *(_QWORD *)(v1 + 16);
    swift_release();
    v7 = 2 * (v5 == 1);
    if (!v5)
      v7 = 3;
    if (v6 == 1)
      return v7;
    else
      return 1;
  }
}

NSObject *sub_213E90A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  char *v46;
  uint64_t v47;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v46 - v7;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v46 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v46 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v46 - v20;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95768]), sel_init);
  if (v22)
  {
    v23 = v22;
    v46 = v21;
    v24 = a1;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v25(v19, v47, v9);
    v47 = v24;
    v25(v16, v24, v9);
    v25(v13, (uint64_t)v19, v9);
    sub_213EF1D10();
    sub_213EA372C((uint64_t)v13, (uint64_t)v6);
    v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v16, v9);
    v26(v19, v9);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v27(v6, 1, v9))
    {
      sub_213DAFEC4((uint64_t)v6, &qword_253F04828);
      v28 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v6, v9);
      v28 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v28, 1, v9);
    v32 = v27(v8, 1, v9);
    v33 = v47;
    if (v32 != 1)
    {
      v38 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v39 = v46;
      v38(v46, v8, v9);
      -[NSObject setSource:](v23, sel_setSource_, 1);
      v40 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v41 = (void *)sub_213EF1D1C();
      v42 = objc_msgSend(v40, sel_initWithNSUUID_, v41);

      -[NSObject setSuggestionId:](v23, sel_setSuggestionId_, v42);
      v43 = type metadata accessor for PlusContactSuggestion();
      sub_213E84338(*(_QWORD *)(v33 + *(int *)(v43 + 28)));
      sub_213DB9CDC(0, (unint64_t *)&qword_254D3F670);
      v44 = (void *)sub_213EF2A30();
      swift_bridgeObjectRelease();
      -[NSObject setContributingGroundTruths:](v23, sel_setContributingGroundTruths_, v44);

      -[NSObject setConfidence:](v23, sel_setConfidence_, *(double *)(v33 + *(int *)(v43 + 40)));
      v26(v39, v9);
      return v23;
    }
    sub_213DAFEC4((uint64_t)v8, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v34 = sub_213EF2724();
    __swift_project_value_buffer(v34, (uint64_t)qword_253F08A00);
    v35 = sub_213EF270C();
    v36 = sub_213EF2C94();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_213DAB000, v35, v36, "Failed to create a combined UUID for the suggestionId and plusId", v37, 2u);
      MEMORY[0x2199C53C4](v37, -1, -1);
    }

  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v29 = sub_213EF2724();
    __swift_project_value_buffer(v29, (uint64_t)qword_253F08A00);
    v23 = sub_213EF270C();
    v30 = sub_213EF2C94();
    if (os_log_type_enabled(v23, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_213DAB000, v23, v30, "Failed to create SELF message for inferred suggestion", v31, 2u);
      MEMORY[0x2199C53C4](v31, -1, -1);
    }
  }

  return 0;
}

void *sub_213E90EC8(uint64_t a1)
{
  id v2;
  void *v3;
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95720]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = (int *)type metadata accessor for PhoneCallGroundTruth();
    objc_msgSend(v3, sel_setGroundTruthSource_, dword_213EFE410[*(char *)(a1 + v4[5])]);
    v5 = (uint64_t *)(a1 + v4[7]);
    v6 = *v5;
    v7 = v5[1];
    v8 = v5[2];
    v9 = v5[3];
    objc_msgSend(v3, sel_setHasSiriResolvedContactForEntity_, v7 != 0);
    if (v7)
    {
      v22 = v6;
      v23 = v7;
      v24 = v8;
      v25 = v9;
      v10 = a1 + v4[8];
      v11 = *(_QWORD *)(v10 + 8);
      v20[0] = *(_QWORD *)v10;
      v20[1] = v11;
      v21 = *(_OWORD *)(v10 + 16);
      v12 = sub_213E9F038(v20);
    }
    else
    {
      v12 = 1;
    }
    objc_msgSend(v3, sel_setSiriResolvedAndPlusInferredContactComparison_, v12);
    v17 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v18 = (void *)sub_213EF1D1C();
    v14 = objc_msgSend(v17, sel_initWithNSUUID_, v18);

    objc_msgSend(v3, sel_setGroundTruthId_, v14);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v13 = sub_213EF2724();
    __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
    v14 = sub_213EF270C();
    v15 = sub_213EF2C94();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_213DAB000, v14, v15, "Failed to create SELF message for inferred ground truth", v16, 2u);
      MEMORY[0x2199C53C4](v16, -1, -1);
    }
    v3 = 0;
  }

  return v3;
}

void *sub_213E910CC(uint64_t a1)
{
  id v2;
  void *v3;
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95720]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = (int *)type metadata accessor for MessagesGroundTruth();
    objc_msgSend(v3, sel_setGroundTruthSource_, 12 - *(unsigned __int8 *)(a1 + v4[5]));
    v5 = (uint64_t *)(a1 + v4[7]);
    v6 = *v5;
    v7 = v5[1];
    v8 = v5[2];
    v9 = v5[3];
    objc_msgSend(v3, sel_setHasSiriResolvedContactForEntity_, v7 != 0);
    if (v7)
    {
      v22 = v6;
      v23 = v7;
      v24 = v8;
      v25 = v9;
      v10 = a1 + v4[8];
      v11 = *(_QWORD *)(v10 + 8);
      v20[0] = *(_QWORD *)v10;
      v20[1] = v11;
      v21 = *(_OWORD *)(v10 + 16);
      v12 = sub_213E9F038(v20);
    }
    else
    {
      v12 = 1;
    }
    objc_msgSend(v3, sel_setSiriResolvedAndPlusInferredContactComparison_, v12);
    v17 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v18 = (void *)sub_213EF1D1C();
    v14 = objc_msgSend(v17, sel_initWithNSUUID_, v18);

    objc_msgSend(v3, sel_setGroundTruthId_, v14);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v13 = sub_213EF2724();
    __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
    v14 = sub_213EF270C();
    v15 = sub_213EF2C94();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_213DAB000, v14, v15, "Failed to create SELF message for inferred ground truth", v16, 2u);
      MEMORY[0x2199C53C4](v16, -1, -1);
    }
    v3 = 0;
  }

  return v3;
}

void *sub_213E912CC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957C8]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v5 = (void *)sub_213EF1D1C();
    v6 = objc_msgSend(v4, sel_initWithNSUUID_, v5);

    objc_msgSend(v3, sel_setGroundTruthId_, v6);
    v7 = (int *)type metadata accessor for MediaGroundTruth();
    objc_msgSend(v3, sel_setGroundTruthSource_, dword_213EFE860[*(char *)(a1 + v7[5])]);
    v8 = *(_QWORD *)(a1 + v7[7]);
    if (*(_QWORD *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      v9 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(v3, sel_setSelectedMediaEntityAdamId_, v9);

    v14 = a1 + v7[8];
    v15 = (void *)sub_213EF2844();
    objc_msgSend(v3, sel_setInferredMediaEntityAdamId_, v15);

    if (*(_QWORD *)(v8 + 16))
      v16 = dword_213EFE850[*(char *)(v8 + 81)];
    else
      v16 = 0;
    objc_msgSend(v3, sel_setSelectedMediaEntitylocality_, v16);
    objc_msgSend(v3, sel_setInferredMediaEntitylocality_, dword_213EFE850[*(char *)(v14 + 49)]);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v10 = sub_213EF2724();
    __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
    v11 = sub_213EF270C();
    v12 = sub_213EF2C94();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_213DAB000, v11, v12, "Failed to create SELF message for inferred ground truth", v13, 2u);
      MEMORY[0x2199C53C4](v13, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_213E91514(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957C8]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v5 = (void *)sub_213EF1D1C();
    v6 = objc_msgSend(v4, sel_initWithNSUUID_, v5);

    objc_msgSend(v3, sel_setGroundTruthId_, v6);
    v7 = type metadata accessor for MediaFeedbackGroundTruth();
    if (*(unsigned __int8 *)(a1 + *(int *)(v7 + 20)) - 1 < 2)
      v8 = 1;
    else
      v8 = 5;
    objc_msgSend(v3, sel_setGroundTruthSource_, v8);
    v9 = a1 + *(int *)(v7 + 28);
    v10 = (void *)sub_213EF2844();
    objc_msgSend(v3, sel_setSelectedMediaEntityAdamId_, v10);

    objc_msgSend(v3, sel_setInferredMediaEntityAdamId_, 0);
    objc_msgSend(v3, sel_setSelectedMediaEntitylocality_, dword_213EFE850[*(char *)(v9 + 49)]);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v11 = sub_213EF2724();
    __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
    v12 = sub_213EF270C();
    v13 = sub_213EF2C94();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_213DAB000, v12, v13, "Failed to create SELF message for inferred ground truth", v14, 2u);
      MEMORY[0x2199C53C4](v14, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_213E916F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void **p_weak_ivar_lyt;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _BYTE v43[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95720]), sel_init);
  if (v8)
  {
    v9 = v8;
    v10 = (int *)type metadata accessor for ContactPromptGroundTruth();
    v11 = (uint64_t *)(a1 + v10[8]);
    v13 = *v11;
    v12 = v11[1];
    if (v12)
      v14 = 8;
    else
      v14 = 9;
    if (v12)
      v15 = 6;
    else
      v15 = 7;
    if (*(_BYTE *)(a1 + v10[5]))
      v16 = v14;
    else
      v16 = v15;
    objc_msgSend(v9, sel_setGroundTruthSource_, v16);
    objc_msgSend(v9, sel_setHasSiriResolvedContactForEntity_, 0);
    objc_msgSend(v9, sel_setSiriResolvedAndPlusInferredContactComparison_, 1);
    v17 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v18 = (void *)sub_213EF1D1C();
    v19 = objc_msgSend(v17, sel_initWithNSUUID_, v18);

    objc_msgSend(v9, sel_setGroundTruthId_, v19);
    v20 = *(_QWORD *)(a1 + v10[10]);
    if (*(_QWORD *)(v20 + 16))
    {
      sub_213DCC3D8(a2, (uint64_t)&v41, &qword_254D3C988);
      if (v42)
      {
        sub_213DB0BF0(&v41, (uint64_t)v43);
        p_weak_ivar_lyt = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
        objc_msgSend(v9, sel_setContactSuggestionUsedBySiri_, 2);
        if (v12)
        {
          v22 = *(_QWORD *)(v20 + 16);
          if (v22)
          {
            v40 = v13;
            *(_QWORD *)&v41 = MEMORY[0x24BEE4AF8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_213DCD768(0, v22, 0);
            v23 = v41;
            v39 = v20;
            v24 = v20 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_213EF1D04();
              swift_bridgeObjectRelease();
              *(_QWORD *)&v41 = v23;
              v26 = *(_QWORD *)(v23 + 16);
              v25 = *(_QWORD *)(v23 + 24);
              if (v26 >= v25 >> 1)
              {
                sub_213DCD768(v25 > 1, v26 + 1, 1);
                v23 = v41;
              }
              v24 += 16;
              *(_QWORD *)(v23 + 16) = v26 + 1;
              sub_213DC0630((uint64_t)v7, v23+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26, &qword_253F04828);
              --v22;
            }
            while (v22);
            v31 = swift_bridgeObjectRelease();
            v13 = v40;
            p_weak_ivar_lyt = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
          }
          else
          {
            v31 = swift_bridgeObjectRetain();
            v23 = MEMORY[0x24BEE4AF8];
          }
          MEMORY[0x24BDAC7A8](v31);
          *(&v39 - 2) = (uint64_t)v43;
          v32 = sub_213EC2944((void (*)(__int128 *__return_ptr, uint64_t))sub_213E92B4C, (uint64_t)(&v39 - 4), v23);
          swift_bridgeObjectRelease();
          v33 = *(_QWORD *)(v32 + 16);
          if (v33)
          {
            v34 = (_QWORD *)(v32 + 40);
            v35 = *(_QWORD *)(v32 + 16);
            do
            {
              if (*v34)
              {
                v36 = *(v34 - 1) == v13 && *v34 == v12;
                if (v36 || (sub_213EF3234() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v9, (SEL)p_weak_ivar_lyt[351], 3, v39);
                  goto LABEL_44;
                }
              }
              v34 += 2;
              --v35;
            }
            while (v35);
            swift_bridgeObjectRelease();
            v37 = 40;
            while (*(_QWORD *)(v32 + v37))
            {
              v37 += 16;
              if (!--v33)
              {
                swift_bridgeObjectRelease();
                goto LABEL_44;
              }
            }
            swift_bridgeObjectRelease();
            objc_msgSend(v9, (SEL)p_weak_ivar_lyt[351], 0, v39);
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
LABEL_44:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v41, &qword_254D3C988);
        objc_msgSend(v9, sel_setContactSuggestionUsedBySiri_, 0);
      }
    }
    else
    {
      objc_msgSend(v9, sel_setContactSuggestionUsedBySiri_, 1);
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v27 = sub_213EF2724();
    __swift_project_value_buffer(v27, (uint64_t)qword_253F08A00);
    v28 = sub_213EF270C();
    v29 = sub_213EF2C94();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_213DAB000, v28, v29, "Failed to create SELF message for inferred ground truth", v30, 2u);
      MEMORY[0x2199C53C4](v30, -1, -1);
    }

    return 0;
  }
  return v9;
}

id sub_213E91BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  id v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  void *v91;
  _QWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  char *v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for ThinMediaGroundTruth();
  v100 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v113 = (char *)v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v93 - v7;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957C0]), sel_init);
  if (!v9)
  {
LABEL_50:
    if (qword_253F04A88 != -1)
      goto LABEL_92;
    goto LABEL_51;
  }
  v10 = v9;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957E8]), sel_init);
  if (!v11)
  {
    v12 = v10;
LABEL_49:

    goto LABEL_50;
  }
  v12 = v11;
  v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957B0]), sel_init);
  if (!v98)
  {

    goto LABEL_49;
  }
  v96 = v4;
  v99 = v12;
  v97 = v10;
  v13 = 0;
  v94 = type metadata accessor for MediaEvaluationSummary();
  v14 = *(int *)(v94 + 24);
  v95 = a1;
  v15 = a1 + v14;
  v16 = *(_QWORD **)v15;
  v17 = *(_QWORD *)(v15 + 24);
  v18 = *(_QWORD *)(v15 + 40);
  v19 = *(_BYTE *)(v15 + 48);
  if (*(_QWORD *)v15 && *(_QWORD *)(v15 + 8))
  {
    swift_bridgeObjectRetain();
    v13 = (void *)sub_213EF2A30();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v99, sel_setPommesAlternativeEntityIds_, v13);

  v20 = 0;
  if (v16 && v17)
  {
    swift_bridgeObjectRetain();
    v20 = (void *)sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v99, sel_setPommesSelectedMediaEntityAdamId_, v20);

  v21 = 0;
  if (v16 && v18)
  {
    swift_bridgeObjectRetain();
    v21 = (void *)sub_213EF2844();
    swift_bridgeObjectRelease();
  }
  v22 = v99;
  objc_msgSend(v99, sel_setInferredMediaEntityAdamId_, v21);

  v23 = v22;
  objc_msgSend(v22, sel_setHasInferredMediaEntityAdamId_, (v16 != 0) & v19);
  v24 = v16;
  v25 = MEMORY[0x24BEE4AF8];
  if (v16)
  {
    v118 = MEMORY[0x24BEE4AF8];
    v105 = v16[2];
    if (v105)
    {
      v104 = v16 + 4;
      v93[1] = v16;
      swift_bridgeObjectRetain_n();
      v26 = 0;
      *(_QWORD *)&v27 = 136315394;
      v112 = v27;
      v111 = MEMORY[0x24BEE4AD8] + 8;
      v114 = v8;
      do
      {
        v110 = v26;
        v29 = (double *)&v104[9 * v26];
        v30 = *((_QWORD *)v29 + 1);
        v31 = *((_QWORD *)v29 + 2);
        v32 = *((_QWORD *)v29 + 3);
        v34 = *((_QWORD *)v29 + 4);
        v33 = *((_QWORD *)v29 + 5);
        LODWORD(v115) = *((unsigned __int8 *)v29 + 50);
        v35 = v29[7];
        v36 = *((_QWORD *)v29 + 8);
        v37 = objc_allocWithZone(MEMORY[0x24BE957A8]);
        swift_bridgeObjectRetain();
        v106 = v31;
        v107 = v32;
        v108 = v34;
        v109 = v33;
        sub_213DB8518(v31, v32);
        swift_bridgeObjectRetain();
        v38 = objc_msgSend(v37, sel_init);
        if (v38)
        {
          v39 = v38;
          v40 = (void *)sub_213EF2844();
          objc_msgSend(v39, sel_setEntityAdamId_, v40);

          objc_msgSend(v39, sel_setConfidence_, v35);
          objc_msgSend(v39, sel_setNominated_, v115);
          v117 = MEMORY[0x24BEE4AF8];
          v41 = *(_QWORD *)(v36 + 16);
          if (v41)
          {
            v101 = v39;
            v102 = v30;
            v42 = v36 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
            v115 = *(_QWORD *)(v100 + 72);
            sub_213EF1A40();
            v103 = v36;
            swift_bridgeObjectRetain();
            do
            {
              swift_allocObject();
              sub_213EF1A34();
              sub_213E92B04();
              v43 = sub_213EF1A28();
              v45 = v44;
              swift_release();
              v46 = objc_allocWithZone(MEMORY[0x24BE957B8]);
              v47 = (void *)sub_213EF1C44();
              v48 = objc_msgSend(v46, sel_initWithJSON_, v47);

              if (v48)
              {
                v49 = *(char *)(v42 + *(int *)(v116 + 24));
                if (v49 < 0)
                {
                  if ((v49 & 0x7F) - 1 < 2)
                    v55 = 1;
                  else
                    v55 = 5;
                  objc_msgSend(v48, sel_setSource_, v55);
                  if ((_DWORD)v49 == -127)
                    v50 = 2;
                  else
                    v50 = 1;
                }
                else
                {
                  objc_msgSend(v48, sel_setSource_, dword_213EFE860[v49]);
                  v50 = 1;
                }
                objc_msgSend(v48, sel_setEntityFeedbackType_, v50);
                v56 = sub_213DF8A28(v43, v45);
                MEMORY[0x2199C44C4](v56);
                if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_213EF2A78();
                sub_213EF2AB4();
                sub_213EF2A54();
              }
              else
              {
                sub_213DF8A28(v43, v45);
                if (qword_253F04A88 != -1)
                  swift_once();
                v51 = sub_213EF2724();
                __swift_project_value_buffer(v51, (uint64_t)qword_253F08A00);
                v52 = sub_213EF270C();
                v53 = sub_213EF2CA0();
                if (os_log_type_enabled(v52, v53))
                {
                  v54 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v54 = 0;
                  _os_log_impl(&dword_213DAB000, v52, v53, "Failed to create ground truth summary", v54, 2u);
                  MEMORY[0x2199C53C4](v54, -1, -1);
                }

              }
              v42 += v115;
              --v41;
            }
            while (v41);
            swift_bridgeObjectRelease();
            v39 = v101;
          }
          sub_213DB9CDC(0, &qword_254D3F660);
          v57 = (void *)sub_213EF2A30();
          swift_bridgeObjectRelease();
          objc_msgSend(v39, sel_setEntityFeedbackHistorys_, v57);
          swift_bridgeObjectRelease();

          sub_213DB859C(v106, v107);
          v58 = swift_bridgeObjectRelease();
          MEMORY[0x2199C44C4](v58);
          v28 = v110;
          if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_213EF2A78();
          sub_213EF2AB4();
          sub_213EF2A54();
        }
        else
        {
          if (qword_253F04A88 != -1)
            swift_once();
          v59 = sub_213EF2724();
          __swift_project_value_buffer(v59, (uint64_t)qword_253F08A00);
          v60 = sub_213EF270C();
          v61 = sub_213EF2C94();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v62 = 0;
            _os_log_impl(&dword_213DAB000, v60, v61, "Failed to create SELF message for media candidate entities", v62, 2u);
            MEMORY[0x2199C53C4](v62, -1, -1);
          }
          swift_bridgeObjectRelease();

          sub_213DB859C(v106, v107);
          swift_bridgeObjectRelease();
          v28 = v110;
        }
        v26 = v28 + 1;
      }
      while (v26 != v105);
      swift_bridgeObjectRelease();
      v23 = v99;
      v25 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_213DB9CDC(0, &qword_254D3F668);
    v24 = (void *)sub_213EF2A30();
    swift_bridgeObjectRelease();
  }
  v68 = v95;
  v69 = (int *)v94;
  objc_msgSend(v23, sel_setEntitySummaries_, v24);

  objc_msgSend(v98, sel_setShadowLogging_, *(unsigned __int8 *)(v68 + v69[7]) == 1);
  v70 = (uint64_t)v96;
  sub_213DCC3D8(v68, (uint64_t)v96, &qword_253F04828);
  v71 = sub_213EF1D64();
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) == 1)
  {
    sub_213DAFEC4(v70, &qword_253F04828);
    v73 = 0;
  }
  else
  {
    v74 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v75 = v25;
    v76 = (void *)sub_213EF1D1C();
    v73 = objc_msgSend(v74, sel_initWithNSUUID_, v76);

    v25 = v75;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
  }
  v67 = v97;
  objc_msgSend(v97, sel_setOriginalRequestId_, v73);

  if (*(_QWORD *)(v68 + v69[5] + 8))
    v77 = (void *)sub_213EF2844();
  else
    v77 = 0;
  objc_msgSend(v67, sel_setResultCandidateId_, v77);

  objc_msgSend(v67, sel_setSuggestionEvaluation_, v99);
  objc_msgSend(v67, sel_setConfiguredState_, v98);
  objc_msgSend(v67, sel_setPlayUserFeedback_, *(unsigned __int8 *)(v68 + v69[8]));
  v78 = *(_QWORD *)(v68 + v69[9]);
  v118 = v25;
  v79 = *(_QWORD *)(v78 + 16);
  if (!v79)
  {
    swift_bridgeObjectRetain();
LABEL_86:
    swift_bridgeObjectRelease();
    sub_213DB9CDC(0, qword_254D3C1A8);
    v91 = (void *)sub_213EF2A30();
    swift_bridgeObjectRelease();
    objc_msgSend(v67, sel_setGroundTruthSummaries_, v91);

    return v67;
  }
  v116 = swift_bridgeObjectRetain();
  v80 = (uint64_t *)(v116 + 48);
  while (1)
  {
    v81 = *((char *)v80 - 16);
    v83 = *(v80 - 1);
    v82 = *v80;
    v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957D8]), sel_init);
    if (!v84)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v87 = sub_213EF2724();
      __swift_project_value_buffer(v87, (uint64_t)qword_253F08A00);
      v88 = sub_213EF270C();
      v89 = sub_213EF2CA0();
      if (os_log_type_enabled(v88, v89))
      {
        v90 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v90 = 0;
        _os_log_impl(&dword_213DAB000, v88, v89, "MediaGroundTruthSummary: Failed to create PLUSSchemaPLUSMediaGroundTruthSummary", v90, 2u);
        MEMORY[0x2199C53C4](v90, -1, -1);
      }

      goto LABEL_66;
    }
    v85 = v84;
    if ((v81 & 0x80000000) != 0)
      v86 = (v81 & 0x7F) - 1 < 2 ? 1 : 5;
    else
      v86 = dword_213EFE860[v81];
    objc_msgSend(v84, sel_setSource_, v86);
    if (v83 < (uint64_t)0xFFFFFFFF80000000)
      break;
    if (v83 > 0x7FFFFFFF)
      goto LABEL_89;
    objc_msgSend(v85, sel_setGroundTruthCount_, v83);
    if (v82 < (uint64_t)0xFFFFFFFF80000000)
      goto LABEL_90;
    if (v82 > 0x7FFFFFFF)
      goto LABEL_91;
    MEMORY[0x2199C44C4](objc_msgSend(v85, sel_setMediaEntityCount_, v82));
    if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_213EF2A78();
    sub_213EF2AB4();
    sub_213EF2A54();
LABEL_66:
    v80 += 3;
    if (!--v79)
    {
      v67 = v97;
      goto LABEL_86;
    }
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  swift_once();
LABEL_51:
  v63 = sub_213EF2724();
  __swift_project_value_buffer(v63, (uint64_t)qword_253F08A00);
  v64 = sub_213EF270C();
  v65 = sub_213EF2CA0();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v66 = 0;
    _os_log_impl(&dword_213DAB000, v64, v65, "Failed to create SELF message for evaluation summary", v66, 2u);
    MEMORY[0x2199C53C4](v66, -1, -1);
  }

  return 0;
}

unint64_t sub_213E92B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3CFF8;
  if (!qword_254D3CFF8)
  {
    v1 = type metadata accessor for ThinMediaGroundTruth();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ThinMediaGroundTruth, v1);
    atomic_store(result, (unint64_t *)&qword_254D3CFF8);
  }
  return result;
}

uint64_t sub_213E92B4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_213E8F550(a1, *(_QWORD **)(v2 + 16), a2);
}

BOOL static PromptType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static PromptOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SuggestionOutcome.hash(into:)()
{
  _WORD *v0;

  if ((*v0 - 2) >= 6u)
  {
    sub_213EF3300();
    sub_213EF3300();
  }
  return sub_213EF3300();
}

uint64_t sub_213E92C04(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E92C38 + 4 * byte_213EFE880[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_213E92C38()
{
  return 0xD000000000000018;
}

uint64_t sub_213E92C54()
{
  return 0x706D6F436B736174;
}

uint64_t sub_213E92C78()
{
  return 0x6E6162416B736174;
}

uint64_t sub_213E92C9C()
{
  return 0x6C6961466B736174;
}

uint64_t sub_213E92CB8()
{
  return 0x6D6F725072657375;
}

unint64_t sub_213E92CD8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_213E92CF8()
{
  unsigned __int8 *v0;

  return sub_213E92C04(*v0);
}

uint64_t sub_213E92D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E968D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_213E92D24(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_213E92D30()
{
  sub_213E952E0();
  return sub_213EF3354();
}

uint64_t sub_213E92D58()
{
  sub_213E952E0();
  return sub_213EF3360();
}

uint64_t sub_213E92D80()
{
  sub_213E95478();
  return sub_213EF3354();
}

uint64_t sub_213E92DA8()
{
  sub_213E95478();
  return sub_213EF3360();
}

uint64_t sub_213E92DD0()
{
  sub_213E954BC();
  return sub_213EF3354();
}

uint64_t sub_213E92DF8()
{
  sub_213E954BC();
  return sub_213EF3360();
}

uint64_t sub_213E92E20()
{
  sub_213E95324();
  return sub_213EF3354();
}

uint64_t sub_213E92E48()
{
  sub_213E95324();
  return sub_213EF3360();
}

uint64_t sub_213E92E70()
{
  sub_213E95434();
  return sub_213EF3354();
}

uint64_t sub_213E92E98()
{
  sub_213E95434();
  return sub_213EF3360();
}

uint64_t sub_213E92EC0()
{
  sub_213E95544();
  return sub_213EF3354();
}

uint64_t sub_213E92EE8()
{
  sub_213E95544();
  return sub_213EF3360();
}

uint64_t sub_213E92F10()
{
  sub_213E95500();
  return sub_213EF3354();
}

uint64_t sub_213E92F38()
{
  sub_213E95500();
  return sub_213EF3360();
}

uint64_t sub_213E92F60()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D6F6374756FLL;
  else
    return 0x795474706D6F7270;
}

uint64_t sub_213E92FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E96C14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E92FC4()
{
  sub_213E95368();
  return sub_213EF3354();
}

uint64_t sub_213E92FEC()
{
  sub_213E95368();
  return sub_213EF3360();
}

uint64_t SuggestionOutcome.encode(to:)(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __int16 v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F680);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v48 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F688);
  v44 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v51 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F690);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F698);
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F6A0);
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F6A8);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F6B0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F6B8);
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E952E0();
  v54 = v19;
  sub_213EF3348();
  switch((char)v20)
  {
    case 2:
      v57 = 0;
      sub_213E95544();
      v21 = v54;
      v22 = v55;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v21, v22);
    case 3:
      v58 = 1;
      sub_213E95500();
      v31 = v54;
      v30 = v55;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v37);
      goto LABEL_12;
    case 4:
      v59 = 2;
      sub_213E954BC();
      v32 = v38;
      v31 = v54;
      v30 = v55;
      sub_213EF3168();
      v34 = v39;
      v33 = v40;
      goto LABEL_11;
    case 5:
      v60 = 3;
      sub_213E95478();
      v32 = v41;
      v31 = v54;
      v30 = v55;
      sub_213EF3168();
      v34 = v42;
      v33 = v43;
      goto LABEL_11;
    case 6:
      v61 = 4;
      sub_213E95434();
      v32 = v45;
      v31 = v54;
      v30 = v55;
      sub_213EF3168();
      v34 = v46;
      v33 = v47;
      goto LABEL_11;
    case 7:
      v67 = 6;
      sub_213E95324();
      v32 = v48;
      v31 = v54;
      v30 = v55;
      sub_213EF3168();
      v34 = v49;
      v33 = v50;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
LABEL_12:
      result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v31, v30);
      break;
    default:
      v24 = v44;
      v66 = 5;
      sub_213E95368();
      v25 = v51;
      v27 = v54;
      v26 = v55;
      sub_213EF3168();
      v65 = v20 & 1;
      v64 = 0;
      sub_213E953AC();
      v28 = v52;
      v29 = v56;
      sub_213EF31BC();
      if (!v29)
      {
        v63 = HIBYTE(v20);
        v62 = 1;
        sub_213E953F0();
        sub_213EF31BC();
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v28);
      result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v27, v26);
      break;
  }
  return result;
}

uint64_t SuggestionOutcome.hashValue.getter()
{
  __int16 *v0;
  __int16 v1;

  v1 = *v0;
  sub_213EF32F4();
  if ((v1 - 2) >= 6u)
  {
    sub_213EF3300();
    sub_213EF3300();
  }
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t SuggestionOutcome.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F710);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F718);
  v38 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v43 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F720);
  v31 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v42 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F728);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F730);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F738);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F740);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F748);
  v15 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_213E952E0();
  v19 = v47;
  sub_213EF333C();
  if (!v19)
  {
    v26[0] = v14;
    v26[1] = v13;
    v26[2] = v12;
    v47 = v15;
    v20 = sub_213EF3150();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_213EF2F34();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v23 = &type metadata for SuggestionOutcome;
    v24 = v45;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
}

uint64_t sub_213E93E38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SuggestionOutcome.init(from:)(a1, a2);
}

uint64_t sub_213E93E4C(_QWORD *a1)
{
  return SuggestionOutcome.encode(to:)(a1);
}

uint64_t sub_213E93E6C()
{
  __int16 *v0;
  __int16 v1;

  v1 = *v0;
  sub_213EF32F4();
  if ((v1 - 2) >= 6u)
  {
    sub_213EF3300();
    sub_213EF3300();
  }
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t PromptType.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t sub_213E93F1C()
{
  _BYTE *v0;

  if (*v0)
    return 0x616D7269666E6F63;
  else
    return 0x6769626D61736964;
}

uint64_t sub_213E93F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E96D10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E93F90()
{
  sub_213E95610();
  return sub_213EF3354();
}

uint64_t sub_213E93FB8()
{
  sub_213E95610();
  return sub_213EF3360();
}

uint64_t sub_213E93FE0()
{
  sub_213E95654();
  return sub_213EF3354();
}

uint64_t sub_213E94008()
{
  sub_213E95654();
  return sub_213EF3360();
}

uint64_t sub_213E94030()
{
  sub_213E95698();
  return sub_213EF3354();
}

uint64_t sub_213E94058()
{
  sub_213E95698();
  return sub_213EF3360();
}

uint64_t PromptType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F760);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F768);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F770);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E95610();
  sub_213EF3348();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_213E95654();
    sub_213EF3168();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_213E95698();
    sub_213EF3168();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t PromptType.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t PromptType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F790);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F798);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7A0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E95610();
  v11 = v33;
  sub_213EF333C();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_213EF3150();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_213EF2F34();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v21 = &type metadata for PromptType;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_213E95654();
    sub_213EF30E4();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_213E95698();
    v22 = v6;
    sub_213EF30E4();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1Tm(v24);
}

uint64_t sub_213E945F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PromptType.init(from:)(a1, a2);
}

uint64_t sub_213E94604(_QWORD *a1)
{
  return PromptType.encode(to:)(a1);
}

uint64_t sub_213E94618@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;

  v4 = sub_213EF21CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EntityPromptClassification();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 48);
  sub_213DC7A5C(a1, (uint64_t)v10);
  if (v11)
  {
    result = sub_213DC7AA0((uint64_t)v10);
  }
  else
  {
    v15 = *((_QWORD *)v10 + 7);
    v14 = *((_QWORD *)v10 + 8);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEA4CB8], v4);
    swift_bridgeObjectRetain();
    v16 = sub_213EF21C0();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (!v14)
    {
      sub_213DC7AA0((uint64_t)v10);
      result = swift_bridgeObjectRelease();
      v13 = 1;
      goto LABEL_4;
    }
    if (v15 == v16 && v14 == v18)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_213DC7AA0((uint64_t)v10);
      result = swift_bridgeObjectRelease_n();
    }
    else
    {
      v20 = sub_213EF3234();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_213DC7AA0((uint64_t)v10);
      result = swift_bridgeObjectRelease_n();
      if ((v20 & 1) == 0)
      {
        v13 = 1;
        goto LABEL_4;
      }
    }
  }
  v13 = 0;
LABEL_4:
  *a2 = v13;
  return result;
}

uint64_t PromptOutcome.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t sub_213E947F4()
{
  sub_213E95764();
  return sub_213EF3354();
}

uint64_t sub_213E9481C()
{
  sub_213E95764();
  return sub_213EF3360();
}

uint64_t sub_213E94844()
{
  sub_213E957A8();
  return sub_213EF3354();
}

uint64_t sub_213E9486C()
{
  sub_213E957A8();
  return sub_213EF3360();
}

uint64_t sub_213E94894()
{
  sub_213E95720();
  return sub_213EF3354();
}

uint64_t sub_213E948BC()
{
  sub_213E95720();
  return sub_213EF3360();
}

uint64_t sub_213E948E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E94920 + 4 * byte_213EFE894[*v0]))(0x6553797469746E65, 0xEE0064657463656CLL);
}

unint64_t sub_213E94920()
{
  return 0xD000000000000017;
}

uint64_t sub_213E9493C()
{
  return 0x656E6F646E616261;
}

uint64_t sub_213E9496C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E96E3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E94990()
{
  sub_213E956DC();
  return sub_213EF3354();
}

uint64_t sub_213E949B8()
{
  sub_213E956DC();
  return sub_213EF3360();
}

uint64_t sub_213E949E0()
{
  sub_213E957EC();
  return sub_213EF3354();
}

uint64_t sub_213E94A08()
{
  sub_213E957EC();
  return sub_213EF3360();
}

void PromptOutcome.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7A8);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7B0);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7B8);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7C0);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7C8);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E956DC();
  sub_213EF3348();
  __asm { BR              X9 }
}

uint64_t sub_213E94BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_213E957EC();
  sub_213EF3168();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t PromptOutcome.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t PromptOutcome.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F7F8);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F800);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F808);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F810);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F818);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_213E956DC();
  v15 = v28;
  sub_213EF333C();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_213EF3150();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_213EF2F34();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v19 = &type metadata for PromptOutcome;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
}

uint64_t sub_213E951E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromptOutcome.init(from:)(a1, a2);
}

void sub_213E951F8(_QWORD *a1)
{
  PromptOutcome.encode(to:)(a1);
}

BOOL _s28SiriPrivateLearningInference17SuggestionOutcomeO2eeoiySbAC_ACtFZ_0(_WORD *a1, _WORD *a2)
{
  _BOOL8 result;

  switch(*a1)
  {
    case 2u:
      if (*a2 != 2)
        goto LABEL_15;
      result = 1;
      break;
    case 3u:
      if (*a2 != 3)
        goto LABEL_15;
      result = 1;
      break;
    case 4u:
      if (*a2 != 4)
        goto LABEL_15;
      result = 1;
      break;
    case 5u:
      if (*a2 != 5)
        goto LABEL_15;
      result = 1;
      break;
    case 6u:
      if (*a2 != 6)
        goto LABEL_15;
      result = 1;
      break;
    case 7u:
      if (*a2 != 7)
        goto LABEL_15;
      result = 1;
      break;
    default:
      if (*a2 - 2 >= 6)
        result = ((*a2 ^ *a1) & 0xFF01) == 0;
      else
LABEL_15:
        result = 0;
      break;
  }
  return result;
}

unint64_t sub_213E952E0()
{
  unint64_t result;

  result = qword_254D3F6C0;
  if (!qword_254D3F6C0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF8AC, &type metadata for SuggestionOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F6C0);
  }
  return result;
}

unint64_t sub_213E95324()
{
  unint64_t result;

  result = qword_254D3F6C8;
  if (!qword_254D3F6C8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF85C, &type metadata for SuggestionOutcome.TaskCompletedWithoutSuggestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F6C8);
  }
  return result;
}

unint64_t sub_213E95368()
{
  unint64_t result;

  result = qword_254D3F6D0;
  if (!qword_254D3F6D0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF80C, &type metadata for SuggestionOutcome.UserPromptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F6D0);
  }
  return result;
}

unint64_t sub_213E953AC()
{
  unint64_t result;

  result = qword_254D3F6D8;
  if (!qword_254D3F6D8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PromptType, &type metadata for PromptType);
    atomic_store(result, (unint64_t *)&qword_254D3F6D8);
  }
  return result;
}

unint64_t sub_213E953F0()
{
  unint64_t result;

  result = qword_254D3F6E0;
  if (!qword_254D3F6E0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PromptOutcome, &type metadata for PromptOutcome);
    atomic_store(result, (unint64_t *)&qword_254D3F6E0);
  }
  return result;
}

unint64_t sub_213E95434()
{
  unint64_t result;

  result = qword_254D3F6E8;
  if (!qword_254D3F6E8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF7BC, &type metadata for SuggestionOutcome.TaskFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F6E8);
  }
  return result;
}

unint64_t sub_213E95478()
{
  unint64_t result;

  result = qword_254D3F6F0;
  if (!qword_254D3F6F0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF76C, &type metadata for SuggestionOutcome.TaskAbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F6F0);
  }
  return result;
}

unint64_t sub_213E954BC()
{
  unint64_t result;

  result = qword_254D3F6F8;
  if (!qword_254D3F6F8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF71C, &type metadata for SuggestionOutcome.TaskCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F6F8);
  }
  return result;
}

unint64_t sub_213E95500()
{
  unint64_t result;

  result = qword_254D3F700;
  if (!qword_254D3F700)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF6CC, &type metadata for SuggestionOutcome.UnknownContradictingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F700);
  }
  return result;
}

unint64_t sub_213E95544()
{
  unint64_t result;

  result = qword_254D3F708;
  if (!qword_254D3F708)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF67C, &type metadata for SuggestionOutcome.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F708);
  }
  return result;
}

unint64_t sub_213E95588()
{
  unint64_t result;

  result = qword_254D3F750;
  if (!qword_254D3F750)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PromptType, &type metadata for PromptType);
    atomic_store(result, (unint64_t *)&qword_254D3F750);
  }
  return result;
}

unint64_t sub_213E955CC()
{
  unint64_t result;

  result = qword_254D3F758;
  if (!qword_254D3F758)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PromptOutcome, &type metadata for PromptOutcome);
    atomic_store(result, (unint64_t *)&qword_254D3F758);
  }
  return result;
}

unint64_t sub_213E95610()
{
  unint64_t result;

  result = qword_254D3F778;
  if (!qword_254D3F778)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF62C, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F778);
  }
  return result;
}

unint64_t sub_213E95654()
{
  unint64_t result;

  result = qword_254D3F780;
  if (!qword_254D3F780)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF5DC, &type metadata for PromptType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F780);
  }
  return result;
}

unint64_t sub_213E95698()
{
  unint64_t result;

  result = qword_254D3F788;
  if (!qword_254D3F788)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF58C, &type metadata for PromptType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F788);
  }
  return result;
}

unint64_t sub_213E956DC()
{
  unint64_t result;

  result = qword_254D3F7D0;
  if (!qword_254D3F7D0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF53C, &type metadata for PromptOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F7D0);
  }
  return result;
}

unint64_t sub_213E95720()
{
  unint64_t result;

  result = qword_254D3F7D8;
  if (!qword_254D3F7D8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF4EC, &type metadata for PromptOutcome.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F7D8);
  }
  return result;
}

unint64_t sub_213E95764()
{
  unint64_t result;

  result = qword_254D3F7E0;
  if (!qword_254D3F7E0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF49C, &type metadata for PromptOutcome.AbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F7E0);
  }
  return result;
}

unint64_t sub_213E957A8()
{
  unint64_t result;

  result = qword_254D3F7E8;
  if (!qword_254D3F7E8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF44C, &type metadata for PromptOutcome.AlternateEntitySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F7E8);
  }
  return result;
}

unint64_t sub_213E957EC()
{
  unint64_t result;

  result = qword_254D3F7F0;
  if (!qword_254D3F7F0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF3FC, &type metadata for PromptOutcome.EntitySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F7F0);
  }
  return result;
}

unint64_t sub_213E95834()
{
  unint64_t result;

  result = qword_254D3F820;
  if (!qword_254D3F820)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SuggestionOutcome, &type metadata for SuggestionOutcome);
    atomic_store(result, (unint64_t *)&qword_254D3F820);
  }
  return result;
}

unint64_t sub_213E9587C()
{
  unint64_t result;

  result = qword_254D3F828;
  if (!qword_254D3F828)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PromptType, &type metadata for PromptType);
    atomic_store(result, (unint64_t *)&qword_254D3F828);
  }
  return result;
}

unint64_t sub_213E958C4()
{
  unint64_t result;

  result = qword_254D3F830;
  if (!qword_254D3F830)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PromptOutcome, &type metadata for PromptOutcome);
    atomic_store(result, (unint64_t *)&qword_254D3F830);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SuggestionOutcome(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = v6 - 1;
    else
      v7 = 0;
    if (v7 >= 7)
      return v7 - 6;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65287;
    if (a2 + 65287 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_213E95958 + 4 * byte_213EFE8A6[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SuggestionOutcome(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65287;
  if (a3 + 65287 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF9)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_213E95A08 + 4 * byte_213EFE8B0[v5]))();
  *a1 = a2 - 249;
  return ((uint64_t (*)(void))((char *)sub_213E95A3C + 4 * byte_213EFE8AB[v5]))();
}

uint64_t sub_213E95A3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_213E95A44(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x213E95A4CLL);
  return result;
}

uint64_t sub_213E95A58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x213E95A60);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_213E95A64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_213E95A6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_213E95A78(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_WORD *sub_213E95A8C(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionOutcome()
{
  return &type metadata for SuggestionOutcome;
}

ValueMetadata *type metadata accessor for PromptType()
{
  return &type metadata for PromptType;
}

ValueMetadata *type metadata accessor for PromptOutcome()
{
  return &type metadata for PromptOutcome;
}

uint64_t _s28SiriPrivateLearningInference13PromptOutcomeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213E95B38 + 4 * byte_213EFE8BA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213E95B6C + 4 * byte_213EFE8B5[v4]))();
}

uint64_t sub_213E95B6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E95B74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E95B7CLL);
  return result;
}

uint64_t sub_213E95B88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E95B90);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213E95B94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E95B9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromptOutcome.CodingKeys()
{
  return &type metadata for PromptOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for PromptOutcome.EntitySelectedCodingKeys()
{
  return &type metadata for PromptOutcome.EntitySelectedCodingKeys;
}

ValueMetadata *type metadata accessor for PromptOutcome.AlternateEntitySelectedCodingKeys()
{
  return &type metadata for PromptOutcome.AlternateEntitySelectedCodingKeys;
}

ValueMetadata *type metadata accessor for PromptOutcome.AbandonedCodingKeys()
{
  return &type metadata for PromptOutcome.AbandonedCodingKeys;
}

ValueMetadata *type metadata accessor for PromptOutcome.CancelledCodingKeys()
{
  return &type metadata for PromptOutcome.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for PromptType.CodingKeys()
{
  return &type metadata for PromptType.CodingKeys;
}

ValueMetadata *type metadata accessor for PromptType.DisambiguationCodingKeys()
{
  return &type metadata for PromptType.DisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for PromptType.ConfirmationCodingKeys()
{
  return &type metadata for PromptType.ConfirmationCodingKeys;
}

uint64_t getEnumTagSinglePayload for SuggestionOutcome.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SuggestionOutcome.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_213E95D04 + 4 * byte_213EFE8C4[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_213E95D38 + 4 * byte_213EFE8BF[v4]))();
}

uint64_t sub_213E95D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E95D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E95D48);
  return result;
}

uint64_t sub_213E95D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E95D5CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_213E95D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E95D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.CodingKeys()
{
  return &type metadata for SuggestionOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.UnknownCodingKeys()
{
  return &type metadata for SuggestionOutcome.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.UnknownContradictingDataCodingKeys()
{
  return &type metadata for SuggestionOutcome.UnknownContradictingDataCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.TaskCompletedCodingKeys()
{
  return &type metadata for SuggestionOutcome.TaskCompletedCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.TaskAbandonedCodingKeys()
{
  return &type metadata for SuggestionOutcome.TaskAbandonedCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.TaskFailedCodingKeys()
{
  return &type metadata for SuggestionOutcome.TaskFailedCodingKeys;
}

uint64_t _s28SiriPrivateLearningInference10PromptTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E95E20 + 4 * byte_213EFE8CE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E95E54 + 4 * byte_213EFE8C9[v4]))();
}

uint64_t sub_213E95E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E95E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E95E64);
  return result;
}

uint64_t sub_213E95E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E95E78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E95E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E95E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.UserPromptedCodingKeys()
{
  return &type metadata for SuggestionOutcome.UserPromptedCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionOutcome.TaskCompletedWithoutSuggestionCodingKeys()
{
  return &type metadata for SuggestionOutcome.TaskCompletedWithoutSuggestionCodingKeys;
}

unint64_t sub_213E95EB4()
{
  unint64_t result;

  result = qword_254D3F838;
  if (!qword_254D3F838)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEE3C, &type metadata for SuggestionOutcome.UserPromptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F838);
  }
  return result;
}

unint64_t sub_213E95EFC()
{
  unint64_t result;

  result = qword_254D3F840;
  if (!qword_254D3F840)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF084, &type metadata for SuggestionOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F840);
  }
  return result;
}

unint64_t sub_213E95F44()
{
  unint64_t result;

  result = qword_254D3F848;
  if (!qword_254D3F848)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF1DC, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F848);
  }
  return result;
}

unint64_t sub_213E95F8C()
{
  unint64_t result;

  result = qword_254D3F850;
  if (!qword_254D3F850)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF3D4, &type metadata for PromptOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F850);
  }
  return result;
}

unint64_t sub_213E95FD4()
{
  unint64_t result;

  result = qword_254D3F858;
  if (!qword_254D3F858)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF2F4, &type metadata for PromptOutcome.EntitySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F858);
  }
  return result;
}

unint64_t sub_213E9601C()
{
  unint64_t result;

  result = qword_254D3F860;
  if (!qword_254D3F860)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF31C, &type metadata for PromptOutcome.EntitySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F860);
  }
  return result;
}

unint64_t sub_213E96064()
{
  unint64_t result;

  result = qword_254D3F868;
  if (!qword_254D3F868)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF2A4, &type metadata for PromptOutcome.AlternateEntitySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F868);
  }
  return result;
}

unint64_t sub_213E960AC()
{
  unint64_t result;

  result = qword_254D3F870;
  if (!qword_254D3F870)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF2CC, &type metadata for PromptOutcome.AlternateEntitySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F870);
  }
  return result;
}

unint64_t sub_213E960F4()
{
  unint64_t result;

  result = qword_254D3F878;
  if (!qword_254D3F878)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF254, &type metadata for PromptOutcome.AbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F878);
  }
  return result;
}

unint64_t sub_213E9613C()
{
  unint64_t result;

  result = qword_254D3F880;
  if (!qword_254D3F880)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF27C, &type metadata for PromptOutcome.AbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F880);
  }
  return result;
}

unint64_t sub_213E96184()
{
  unint64_t result;

  result = qword_254D3F888;
  if (!qword_254D3F888)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF204, &type metadata for PromptOutcome.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F888);
  }
  return result;
}

unint64_t sub_213E961CC()
{
  unint64_t result;

  result = qword_254D3F890;
  if (!qword_254D3F890)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF22C, &type metadata for PromptOutcome.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F890);
  }
  return result;
}

unint64_t sub_213E96214()
{
  unint64_t result;

  result = qword_254D3F898;
  if (!qword_254D3F898)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF344, &type metadata for PromptOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F898);
  }
  return result;
}

unint64_t sub_213E9625C()
{
  unint64_t result;

  result = qword_254D3F8A0;
  if (!qword_254D3F8A0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF36C, &type metadata for PromptOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8A0);
  }
  return result;
}

unint64_t sub_213E962A4()
{
  unint64_t result;

  result = qword_254D3F8A8;
  if (!qword_254D3F8A8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF0FC, &type metadata for PromptType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8A8);
  }
  return result;
}

unint64_t sub_213E962EC()
{
  unint64_t result;

  result = qword_254D3F8B0;
  if (!qword_254D3F8B0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF124, &type metadata for PromptType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8B0);
  }
  return result;
}

unint64_t sub_213E96334()
{
  unint64_t result;

  result = qword_254D3F8B8;
  if (!qword_254D3F8B8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF0AC, &type metadata for PromptType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8B8);
  }
  return result;
}

unint64_t sub_213E9637C()
{
  unint64_t result;

  result = qword_254D3F8C0;
  if (!qword_254D3F8C0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF0D4, &type metadata for PromptType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8C0);
  }
  return result;
}

unint64_t sub_213E963C4()
{
  unint64_t result;

  result = qword_254D3F8C8;
  if (!qword_254D3F8C8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF14C, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8C8);
  }
  return result;
}

unint64_t sub_213E9640C()
{
  unint64_t result;

  result = qword_254D3F8D0;
  if (!qword_254D3F8D0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF174, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8D0);
  }
  return result;
}

unint64_t sub_213E96454()
{
  unint64_t result;

  result = qword_254D3F8D8;
  if (!qword_254D3F8D8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEFA4, &type metadata for SuggestionOutcome.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8D8);
  }
  return result;
}

unint64_t sub_213E9649C()
{
  unint64_t result;

  result = qword_254D3F8E0;
  if (!qword_254D3F8E0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEFCC, &type metadata for SuggestionOutcome.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8E0);
  }
  return result;
}

unint64_t sub_213E964E4()
{
  unint64_t result;

  result = qword_254D3F8E8;
  if (!qword_254D3F8E8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEF54, &type metadata for SuggestionOutcome.UnknownContradictingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8E8);
  }
  return result;
}

unint64_t sub_213E9652C()
{
  unint64_t result;

  result = qword_254D3F8F0;
  if (!qword_254D3F8F0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEF7C, &type metadata for SuggestionOutcome.UnknownContradictingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8F0);
  }
  return result;
}

unint64_t sub_213E96574()
{
  unint64_t result;

  result = qword_254D3F8F8;
  if (!qword_254D3F8F8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEF04, &type metadata for SuggestionOutcome.TaskCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F8F8);
  }
  return result;
}

unint64_t sub_213E965BC()
{
  unint64_t result;

  result = qword_254D3F900;
  if (!qword_254D3F900)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEF2C, &type metadata for SuggestionOutcome.TaskCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F900);
  }
  return result;
}

unint64_t sub_213E96604()
{
  unint64_t result;

  result = qword_254D3F908;
  if (!qword_254D3F908)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEEB4, &type metadata for SuggestionOutcome.TaskAbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F908);
  }
  return result;
}

unint64_t sub_213E9664C()
{
  unint64_t result;

  result = qword_254D3F910;
  if (!qword_254D3F910)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEEDC, &type metadata for SuggestionOutcome.TaskAbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F910);
  }
  return result;
}

unint64_t sub_213E96694()
{
  unint64_t result;

  result = qword_254D3F918;
  if (!qword_254D3F918)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEE64, &type metadata for SuggestionOutcome.TaskFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F918);
  }
  return result;
}

unint64_t sub_213E966DC()
{
  unint64_t result;

  result = qword_254D3F920;
  if (!qword_254D3F920)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEE8C, &type metadata for SuggestionOutcome.TaskFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F920);
  }
  return result;
}

unint64_t sub_213E96724()
{
  unint64_t result;

  result = qword_254D3F928;
  if (!qword_254D3F928)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEDAC, &type metadata for SuggestionOutcome.UserPromptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F928);
  }
  return result;
}

unint64_t sub_213E9676C()
{
  unint64_t result;

  result = qword_254D3F930;
  if (!qword_254D3F930)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEDD4, &type metadata for SuggestionOutcome.UserPromptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F930);
  }
  return result;
}

unint64_t sub_213E967B4()
{
  unint64_t result;

  result = qword_254D3F938;
  if (!qword_254D3F938)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFED5C, &type metadata for SuggestionOutcome.TaskCompletedWithoutSuggestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F938);
  }
  return result;
}

unint64_t sub_213E967FC()
{
  unint64_t result;

  result = qword_254D3F940;
  if (!qword_254D3F940)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFED84, &type metadata for SuggestionOutcome.TaskCompletedWithoutSuggestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F940);
  }
  return result;
}

unint64_t sub_213E96844()
{
  unint64_t result;

  result = qword_254D3F948;
  if (!qword_254D3F948)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFEFF4, &type metadata for SuggestionOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F948);
  }
  return result;
}

unint64_t sub_213E9688C()
{
  unint64_t result;

  result = qword_254D3F950;
  if (!qword_254D3F950)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFF01C, &type metadata for SuggestionOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3F950);
  }
  return result;
}

uint64_t sub_213E968D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000213F09260 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x706D6F436B736174 && a2 == 0xED0000646574656CLL || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6162416B736174 && a2 == 0xED000064656E6F64 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6961466B736174 && a2 == 0xEA00000000006465 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6F725072657375 && a2 == 0xEC00000064657470 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000213F09280)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_213E96C14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x795474706D6F7270 && a2 == 0xEA00000000006570;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213E96D10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213E96E3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6553797469746E65 && a2 == 0xEE0064657463656CLL;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000213F092A0 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_213E97030(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_213E979C8(*a2, a1);
  return sub_213E42DF8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_213E9706C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DE30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3F958 = 91;
  unk_254D3F960 = 0xE100000000000000;
  return result;
}

uint64_t INPlayMediaIntentStreamDefinition.init(eventReader:)@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0x403E000000000000;
  return sub_213DB0BF0(a1, (uint64_t)(a2 + 1));
}

uint64_t INPlayMediaIntentStreamDefinition.events(since:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DCC0);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F970);
  v3[9] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F978);
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F980);
  v3[14] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD78);
  v3[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[16] = v7;
  v3[17] = *(_QWORD *)(v7 + 64);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F988);
  v3[21] = v8;
  v3[22] = *(_QWORD *)(v8 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v9 = sub_213EF1CF8();
  v3[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[26] = v10;
  v3[27] = *(_QWORD *)(v10 + 64);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213E972A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 32);
  sub_213EF1CBC();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 32));
  sub_213E56B24();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v2 + 32) = sub_213E98138();
  sub_213EF2394();
  v36 = *(_QWORD *)(v0 + 232);
  v41 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v40 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v42 = *(_QWORD *)(v0 + 184);
  v38 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 152);
  v31 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v28 = *(_QWORD *)(v0 + 160);
  v29 = *(_QWORD *)(v0 + 128);
  v37 = *(_QWORD *)(v0 + 112);
  v39 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 88);
  v34 = *(_QWORD *)(v0 + 48);
  v35 = *(_QWORD *)(v0 + 40);
  v26 = *(_QWORD *)(v0 + 24);
  v32 = *(_QWORD *)(v0 + 56);
  v33 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F998);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_213EF44B0;
  v8 = type metadata accessor for CommonInteractionFeatureExtractor();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = sub_213DB0DB4(&qword_254D3F9A0, (uint64_t (*)(uint64_t))type metadata accessor for CommonInteractionFeatureExtractor, (uint64_t)&protocol conformance descriptor for CommonInteractionFeatureExtractor);
  *(_QWORD *)(v7 + 32) = v9;
  v10 = type metadata accessor for INPlayMediaIntentFeatureExtractor();
  v11 = (_QWORD *)swift_allocObject();
  v12 = type metadata accessor for AdamIdExtractor();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 1;
  v11[5] = v12;
  v11[6] = &off_24D108490;
  v11[2] = v13;
  *(_QWORD *)(v7 + 96) = v10;
  *(_QWORD *)(v7 + 104) = sub_213DB0DB4(&qword_254D3A508, (uint64_t (*)(uint64_t))type metadata accessor for INPlayMediaIntentFeatureExtractor, (uint64_t)&protocol conformance descriptor for INPlayMediaIntentFeatureExtractor);
  *(_QWORD *)(v7 + 72) = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v42, v3, v38);
  *(_QWORD *)(swift_allocObject() + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD08);
  sub_213DCA20C(&qword_254D3F9B8, &qword_254D3F988, MEMORY[0x24BEA4E90]);
  sub_213EF300C();
  sub_213DCA20C(&qword_254D3F9C8, &qword_254D3F970, MEMORY[0x24BEE6F08]);
  sub_213EF31EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v37, v39, v6);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v39, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v41, v26, v40);
  v14 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v15 + v14, v41, v40);
  sub_213DCA20C(&qword_254D3F9E0, &qword_254D3F980, (uint64_t)&unk_213F02FF8);
  sub_213EF30B4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v16(v30, v28, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD80);
  v17 = swift_allocBox();
  v19 = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v16(v31, v30, v5);
  v21 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32))(v22 + v21, v31, v5);
  sub_213EF2B74();
  v23 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v23(v30, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v33, v32, v35);
  v23(v28, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v38);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213E978E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213E97900()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = (void *)MEMORY[0x2199C4E6C]();
  v3 = MEMORY[0x24BEE4AF8];
  v9 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(*(_QWORD *)(v0 + 32) + 32);
    swift_bridgeObjectRetain();
    do
    {
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      v6 = sub_213EF25E0();
      sub_213DB43C8(v6);
      v5 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v9;
  }
  v7 = *(_QWORD **)(v0 + 16);
  objc_autoreleasePoolPop(v2);
  *v7 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_213E979C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DynamicType;
  unint64_t v18;
  unint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26[2];
  uint64_t v27;
  uint64_t v28;

  v4 = swift_bridgeObjectRetain();
  v5 = sub_213DAF448(v4);
  if (!v6)
    goto LABEL_17;
  v7 = v5;
  v8 = v6;
  v9 = sub_213DAF454(a1);
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v11 = v9;
  v12 = v10;
  v28 = MEMORY[0x24BEE4B08];
  v13 = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v14)
  {
    v21 = v11;
    v22 = v7;
    v23 = v8;
    v15 = MEMORY[0x24BEE4AF8];
    v16 = a1 + 32;
    do
    {
      sub_213DAFDFC(v16, (uint64_t)v26);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      *(_QWORD *)&v24 = swift_allocObject();
      sub_213DAFDFC((uint64_t)v26, v24 + 16);
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      DynamicType = swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
      if ((sub_213DD5E5C((uint64_t *)&v24, DynamicType) & 1) != 0)
      {
        sub_213DB0BF0(v26, (uint64_t)&v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD234(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v27;
        v19 = *(_QWORD *)(v27 + 16);
        v18 = *(_QWORD *)(v27 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_213DCD234(v18 > 1, v19 + 1, 1);
          v15 = v27;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        sub_213DB0BF0(&v24, v15 + 40 * v19 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      }
      v16 += 40;
      --v14;
    }
    while (v14);
    v13 = v27;
    v7 = v22;
    v8 = v23;
    v11 = v21;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_213E97BE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 72) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  v4 = sub_213EF1CF8();
  *(_QWORD *)(v2 + 96) = v4;
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *a1;
  *(_QWORD *)(v2 + 112) = v5;
  *(_QWORD *)(v2 + 120) = v6;
  *(_OWORD *)(v2 + 128) = *(_OWORD *)(a1 + 1);
  v7 = a1[4];
  *(_QWORD *)(v2 + 144) = a1[3];
  *(_QWORD *)(v2 + 152) = v7;
  return swift_task_switch();
}

uint64_t sub_213E97C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  NSObject *log;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = swift_bridgeObjectRetain();
  sub_213DAF008(v4, v3);
  swift_bridgeObjectRelease();
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v5(v3, 1, v1) == 1)
  {
    v6 = swift_bridgeObjectRetain();
    sub_213DAF1EC(v6);
    v8 = v7;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      sub_213EF1CC8();
      v9 = 0;
    }
    v13 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(*(_QWORD *)(v0 + 88), v9, 1, *(_QWORD *)(v0 + 96));
    sub_213DC3ED8(v13);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 32))(v12, *(_QWORD *)(v0 + 80), v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  }
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  if (v5(v14, 1, v15) == 1)
  {
    sub_213DC3ED8(v14);
    if (qword_253F04A88 != -1)
      swift_once();
    v16 = sub_213EF2724();
    __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v17 = sub_213EF270C();
    v18 = sub_213EF2CA0();
    if (os_log_type_enabled(v17, v18))
    {
      log = v17;
      v19 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v35 = v33;
      *(_DWORD *)v19 = 136315394;
      if (qword_254D3A048 != -1)
        swift_once();
      v20 = *(_QWORD *)(v0 + 144);
      v21 = *(_QWORD *)(v0 + 152);
      v23 = *(_QWORD *)(v0 + 128);
      v22 = *(_QWORD *)(v0 + 136);
      v24 = *(_QWORD *)(v0 + 120);
      v26 = qword_254D3F958;
      v25 = unk_254D3F960;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 56) = sub_213DB0570(v26, v25, &v35);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      *(_QWORD *)(v0 + 16) = v24;
      *(_QWORD *)(v0 + 24) = v23;
      *(_QWORD *)(v0 + 32) = v22;
      *(_QWORD *)(v0 + 40) = v20;
      *(_QWORD *)(v0 + 48) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = sub_213EF288C();
      *(_QWORD *)(v0 + 64) = sub_213DB0570(v27, v28, &v35);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v17 = log;
      _os_log_impl(&dword_213DAB000, log, v18, "%s event without timestamp encountered %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v33, -1, -1);
      MEMORY[0x2199C53C4](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v31 = 0;
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 104);
    v29 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v14, v15);
    sub_213DB0DB4((unint64_t *)&qword_254D3BAA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v31 = sub_213EF282C() ^ 1;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v31 & 1);
}

uint64_t sub_213E980D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213E4141C;
  return INPlayMediaIntentStreamDefinition.events(since:)(a1, a2);
}

unint64_t sub_213E98138()
{
  unint64_t result;

  result = qword_254D3F990;
  if (!qword_254D3F990)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3F990);
  }
  return result;
}

uint64_t sub_213E98174()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213E98198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213E4141C;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213E9820C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_213EF1CF8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_213E9826C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_213EF1CF8() - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213E982D8;
  return sub_213E97BE8(a1, v5);
}

uint64_t sub_213E982D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_213E98328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD78);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_213E983A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3DD78) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_213E4141C;
  return sub_213E41D74(a1, v5, v6);
}

uint64_t destroy for INPlayMediaIntentStreamDefinition(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
}

uint64_t initializeWithCopy for INPlayMediaIntentStreamDefinition(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

_QWORD *assignWithCopy for INPlayMediaIntentStreamDefinition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for INPlayMediaIntentStreamDefinition(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for INPlayMediaIntentStreamDefinition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for INPlayMediaIntentStreamDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for INPlayMediaIntentStreamDefinition()
{
  return &type metadata for INPlayMediaIntentStreamDefinition;
}

uint64_t sub_213E9859C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t ContactSuggestionProvidedClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t sub_213E985D0()
{
  uint64_t result;

  type metadata accessor for ContactSuggestionProvidedClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FA20);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3FA10 = 91;
  *(_QWORD *)algn_254D3FA18 = 0xE100000000000000;
  return result;
}

uint64_t ContactSuggestionProvidedClassifier.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E9865C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v9 = type metadata accessor for EntityPromptClassification();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  v13 = MEMORY[0x24BDAC7A8](a2);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v13 + 16);
  if (v16)
  {
    v34 = v9;
    v35 = a3;
    v36 = a4;
    v37 = v4;
    v17 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v32 = v13;
    v33 = v10;
    v18 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    v19 = 0;
    v30 = v18;
    v31 = v17;
    while (1)
    {
      sub_213DCA7E4(v17 + v18 * v19, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
      v20 = *((_QWORD *)v12 + 9);
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
        break;
LABEL_3:
      ++v19;
      sub_213DC7AA0((uint64_t)v12);
      if (v19 == v16)
      {
        swift_bridgeObjectRelease();
        v25 = 1;
        goto LABEL_10;
      }
    }
    v22 = *(_QWORD *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) - 8);
    v23 = v20 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v24 = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain_n();
    while ((sub_213EF1D28() & 1) == 0)
    {
      v23 += v24;
      if (!--v21)
      {
        swift_bridgeObjectRelease_n();
        v18 = v30;
        v17 = v31;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_213DC79FC((uint64_t)v12, (uint64_t)v15);
    v25 = 0;
LABEL_10:
    a3 = v35;
    a4 = v36;
    v10 = v33;
    v9 = v34;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, v25, 1, v9);
  v26 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a4, a3, v26);
  v27 = (int *)type metadata accessor for ContactSuggestionProvidedClassification();
  sub_213DCA7E4(a1, a4 + v27[5], type metadata accessor for PlusContactSuggestionRuntimeSummary);
  sub_213DF0F28((uint64_t)v15, a4 + v27[6]);
  *(_QWORD *)(a4 + v27[7]) = MEMORY[0x24BEE4AF8];
  return sub_213E34CA4((uint64_t)v15);
}

uint64_t ContactSuggestionProvidedClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ContactSuggestionProvidedClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E988D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = type metadata accessor for EntityPromptClassification();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v41 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v41 - v12;
  type metadata accessor for FeaturisedTurn(0);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_213DAFB94(v14);
  swift_bridgeObjectRelease();
  if (v15 != 2 && (v15 & 1) == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v31 = sub_213EF2724();
    __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
    v32 = sub_213EF270C();
    v33 = sub_213EF2C94();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v46 = v35;
      *(_DWORD *)v34 = 136315138;
      if (qword_254D3A050 != -1)
        swift_once();
      v36 = qword_254D3FA10;
      v37 = *(_QWORD *)algn_254D3FA18;
      swift_bridgeObjectRetain();
      v45 = sub_213DB0570(v36, v37, &v46);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v32, v33, "%s Runtime suggestions is not enabled for the request, no contact suggestion classification will be generated", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v35, -1, -1);
      MEMORY[0x2199C53C4](v34, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v43 = a2;
    v17 = swift_bridgeObjectRetain();
    v18 = sub_213DAF658(v17);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
    if (v18)
    {
      v42 = v18;
      v46 = MEMORY[0x24BEE4AF8];
      v20 = *(_QWORD *)(v43 + 16);
      v21 = swift_bridgeObjectRetain();
      if (v20)
      {
        v41 = a1;
        v22 = *(unsigned __int8 *)(v5 + 80);
        v23 = *(_QWORD *)(v5 + 72);
        v44 = (v22 + 32) & ~v22;
        v24 = v21 + v44;
        v25 = MEMORY[0x24BEE4AF8];
        while (1)
        {
          sub_213DCA7E4(v24, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          if (*((_QWORD *)v13 + 2) == 0x73746361746E6F63 && *((_QWORD *)v13 + 3) == 0xE800000000000000)
            break;
          v27 = sub_213EF3234();
          sub_213DCA7E4((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          if ((v27 & 1) != 0
            || *((_QWORD *)v11 + 2) == 0x6E65697069636572 && *((_QWORD *)v11 + 3) == 0xE900000000000074)
          {
            goto LABEL_18;
          }
          v28 = sub_213EF3234();
          sub_213DC7AA0((uint64_t)v11);
          if ((v28 & 1) != 0)
            goto LABEL_19;
          sub_213DC7AA0((uint64_t)v13);
LABEL_24:
          v24 += v23;
          if (!--v20)
          {
            v38 = v46;
            a1 = v41;
            goto LABEL_34;
          }
        }
        sub_213DCA7E4((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
LABEL_18:
        sub_213DC7AA0((uint64_t)v11);
LABEL_19:
        sub_213DC79FC((uint64_t)v13, (uint64_t)v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD000(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v46;
        v30 = *(_QWORD *)(v46 + 16);
        v29 = *(_QWORD *)(v46 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_213DCD000(v29 > 1, v30 + 1, 1);
          v25 = v46;
        }
        *(_QWORD *)(v25 + 16) = v30 + 1;
        sub_213DC79FC((uint64_t)v8, v25 + v44 + v30 * v23);
        goto LABEL_24;
      }
      v38 = v19;
LABEL_34:
      v39 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v39);
      *(&v41 - 2) = v38;
      *(&v41 - 1) = a1;
      v19 = sub_213EC2A70((void (*)(uint64_t))sub_213E990A0, (uint64_t)(&v41 - 4), v42);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return v19;
}

uint64_t sub_213E98D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[40];
  uint64_t v31[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EntityPromptClassification();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(a2 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v28 = a2;
    v29 = a1;
    v16 = a2 + 32;
    swift_bridgeObjectRetain();
    v17 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v16, (uint64_t)v31);
      sub_213DAFDFC((uint64_t)v31, (uint64_t)v30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v18 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v18 ^ 1u, 1, v7);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_213E34CA4((uint64_t)v6);
      }
      else
      {
        sub_213DC79FC((uint64_t)v6, (uint64_t)v13);
        sub_213DC79FC((uint64_t)v13, (uint64_t)v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_213DB5648(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v20 = *(_QWORD *)(v17 + 16);
        v19 = *(_QWORD *)(v17 + 24);
        if (v20 >= v19 >> 1)
          v17 = sub_213DB5648(v19 > 1, v20 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v20 + 1;
        sub_213DC79FC((uint64_t)v11, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20);
      }
      v16 += 40;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    a1 = v29;
    v15 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v17 = MEMORY[0x24BEE4AF8];
  }
  v31[0] = v15;
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v22 = *(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8);
    v23 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v24 = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v25 = sub_213E988D4(v23, v17);
      sub_213DB46D0(v25);
      v23 += v24;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v26 = sub_213EC5E10(v31[0]);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t type metadata accessor for ContactSuggestionProvidedClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContactSuggestionProvidedClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactSuggestionProvidedClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ContactSuggestionProvidedClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213E990A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213E9865C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t SuccessfulMessageClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t sub_213E990CC()
{
  uint64_t result;

  type metadata accessor for SuccessfulMessageClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06D00);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06CE0 = 91;
  unk_253F06CE8 = 0xE100000000000000;
  return result;
}

uint64_t SuccessfulMessageClassifier.init()()
{
  uint64_t v0;

  return v0;
}

double sub_213E99158@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  double result;
  _OWORD *v52;
  uint64_t v53;
  int v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[6];
  uint64_t v69;

  v62 = a3;
  v66 = a2;
  v65 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v65);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07018);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v67 = *(_QWORD *)(v14 + 72);
  v16 = swift_allocObject();
  v59 = xmmword_213EF53E0;
  *(_OWORD *)(v16 + 16) = xmmword_213EF53E0;
  v17 = (_QWORD *)(v16 + v15);
  v18 = v8;
  v64 = v13;
  v19 = (_QWORD *)((char *)v17 + *(int *)(v13 + 48));
  *v17 = 0xD00000000000001DLL;
  v17[1] = 0x8000000213F09350;
  v60 = v9;
  v61 = v17;
  v68[0] = v9;
  v68[1] = v8;
  v68[2] = v11;
  v68[3] = v10;
  v68[4] = v12;
  sub_213E99828(v68, v19);
  if (qword_253F04A88 != -1)
    swift_once();
  v20 = sub_213EF2724();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
  v22 = v63;
  sub_213DAFDB8(v66, v63);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v23 = sub_213EF270C();
  v24 = sub_213EF2C94();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    v54 = v24;
    v55 = v23;
    v56 = v12;
    v57 = v21;
    v58 = v18;
    v66 = v16;
    v25 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v68[0] = v53;
    *(_DWORD *)v25 = 136315650;
    if (qword_253F06CF8 != -1)
      swift_once();
    v26 = qword_253F06CE0;
    v27 = unk_253F06CE8;
    swift_bridgeObjectRetain();
    v69 = sub_213DB0570(v26, v27, v68);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v28 = FeaturisedTurn.friendlyName.getter();
    v69 = sub_213DB0570(v28, v29, v68);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DCA828(v22, type metadata accessor for FeaturisedTurn);
    *(_WORD *)(v25 + 22) = 2080;
    v30 = v58;
    swift_bridgeObjectRetain();
    v69 = sub_213DB0570(v60, v30, v68);
    v18 = v30;
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v31 = v55;
    _os_log_impl(&dword_213DAB000, v55, (os_log_type_t)v54, "%s Rule matrix for [Turn ID: %s, Event ID: %s]:", (uint8_t *)v25, 0x20u);
    v32 = v53;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v32, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);

    v16 = v66;
  }
  else
  {
    sub_213DCA828(v22, type metadata accessor for FeaturisedTurn);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_213EE84EC(8224, 0xE200000000000000, v16);
  v33 = swift_bridgeObjectRetain();
  v34 = sub_213DAF1F8(v33);
  swift_bridgeObjectRelease();
  v35 = v16;
  if (v34 == 2)
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v36 = sub_213EF270C();
    v37 = sub_213EF2C94();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v68[0] = v39;
      *(_DWORD *)v38 = 136315138;
      if (qword_253F06CF8 != -1)
        swift_once();
      v40 = qword_253F06CE0;
      v41 = unk_253F06CE8;
      swift_bridgeObjectRetain();
      v69 = sub_213DB0570(v40, v41, v68);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v36, v37, "%s Sent message missing DonatedBySiri feature", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v39, -1, -1);
      MEMORY[0x2199C53C4](v38, -1, -1);
    }

LABEL_22:
    v52 = v62;
    v62[4] = 0;
    result = 0.0;
    *v52 = 0u;
    v52[1] = 0u;
    return result;
  }
  v42 = *(_QWORD *)(v16 + 16);
  v43 = v64;
  if (v42)
  {
    v66 = v35;
    swift_bridgeObjectRetain();
    v44 = v61;
    while (1)
    {
      v45 = (uint64_t)v44 + *(int *)(v43 + 48);
      swift_storeEnumTagMultiPayload();
      sub_213E81FE0(v45, (uint64_t)v5);
      LOBYTE(v45) = v46;
      sub_213DCA828((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
      if ((v45 & 1) == 0)
        break;
      v44 = (_QWORD *)((char *)v44 + v67);
      if (!--v42)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
LABEL_20:
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v59;
  v48 = v60;
  *(_QWORD *)(v47 + 32) = v60;
  *(_QWORD *)(v47 + 40) = v18;
  v49 = v62;
  *v62 = v34 & 1;
  v49[1] = v48;
  v50 = MEMORY[0x24BEE4AF8];
  v49[2] = v18;
  v49[3] = v50;
  v49[4] = v47;
  swift_bridgeObjectRetain_n();
  return result;
}

uint64_t sub_213E99828@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v7 = a1[1];
  v9 = a1[3];
  v10 = a1[4];
  v11 = swift_bridgeObjectRetain();
  sub_213DAFBA0(v11);
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    type metadata accessor for CommonFeature.IntentHandlingStatus(0);
    *a2 = sub_213EF23AC();
    a2[1] = v17;
    a2[2] = v8;
    a2[3] = v7;
    swift_storeEnumTagMultiPayload();
    return swift_bridgeObjectRetain();
  }
  else
  {
    v14 = swift_bridgeObjectRetain();
    sub_213DAF3E0(v14);
    v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0 && (v9 != 0xD000000000000013 || v10 != 0x8000000213F04880))
      sub_213EF3234();
    swift_storeEnumTagMultiPayload();
    return sub_213E07238((uint64_t)v6, (uint64_t)a2);
  }
}

uint64_t SuccessfulMessageClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SuccessfulMessageClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E999E8(uint64_t a1)
{
  return sub_213E99A08(a1);
}

uint64_t sub_213E99A08(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v20[7];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if (qword_253F04A88 != -1)
    swift_once();
  v5 = sub_213EF2724();
  __swift_project_value_buffer(v5, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v6 = sub_213EF270C();
  v7 = sub_213EF2C94();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v22 = v9;
    *(_DWORD *)v8 = 136315394;
    if (qword_253F06CF8 != -1)
      swift_once();
    v10 = qword_253F06CE0;
    v11 = unk_253F06CE8;
    swift_bridgeObjectRetain();
    v21 = sub_213DB0570(v10, v11, &v22);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    v21 = *(_QWORD *)(a1 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v6, v7, "%s Identifying successful sent messages in %ld turn(s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v9, -1, -1);
    MEMORY[0x2199C53C4](v8, -1, -1);

    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_7;
    return MEMORY[0x24BEE4AF8];
  }

  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x24BEE4AF8];
LABEL_7:
  v13 = v12 - 1;
  v14 = type metadata accessor for FeaturisedTurn(0);
  v15 = *(_QWORD *)(a1
                  + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
                  + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v13
                  + *(int *)(v14 + 28));
  MEMORY[0x24BDAC7A8](v14);
  v20[2] = v2;
  v20[3] = v16;
  v20[4] = v4;
  swift_bridgeObjectRetain();
  v17 = sub_213E43D14((void (*)(_QWORD *__return_ptr, _QWORD *))sub_213E99CF8, (uint64_t)v20, v15);
  swift_bridgeObjectRelease();
  v18 = sub_213EC5CD4((uint64_t)v17);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t type metadata accessor for SuccessfulMessageClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for SuccessfulMessageClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuccessfulMessageClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SuccessfulMessageClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

double sub_213E99CF8@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_213E99158(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_213E99D14(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  char v6;
  _OWORD v7[3];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 48);
  return sub_213E99F60((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

unint64_t sub_213E99D6C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v5[10];
  _OWORD v6[5];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  _BYTE v11[16];
  _BYTE v12[16];
  _BYTE v13[16];
  _BYTE v14[16];
  _BYTE v15[8];
  uint64_t v16;

  sub_213E6EFF8(v0, v5);
  sub_213DC0630((uint64_t)v5, (uint64_t)v6, &qword_254D3AB00);
  if (*((_QWORD *)&v6[0] + 1) == 1)
    return sub_213DCC2CC(MEMORY[0x24BEE4AF8]);
  v9 = v6[2];
  v10[0] = v6[3];
  v10[1] = v6[4];
  v7 = v6[0];
  v8 = v6[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F538);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF9F30;
  *(_BYTE *)(inited + 32) = 0;
  v3 = inited + 40;
  sub_213DC0630((uint64_t)&v8, (uint64_t)v11, &qword_254D3AFC8);
  sub_213DC0630((uint64_t)v11, (uint64_t)v15, &qword_254D3AFC8);
  if (v16)
  {
    sub_213DC0630((uint64_t)v11, v3, &qword_254D3AFC8);
  }
  else
  {
    sub_213DC0630((uint64_t)&v7, (uint64_t)v12, &qword_254D3AFC8);
    sub_213DC0630((uint64_t)v12, v3, &qword_254D3AFC8);
    sub_213E1C89C((uint64_t)v12);
  }
  *(_BYTE *)(inited + 56) = 1;
  sub_213DC0630((uint64_t)v10, (uint64_t)v13, &qword_254D3AFC8);
  sub_213DC0630((uint64_t)v13, inited + 64, &qword_254D3AFC8);
  *(_BYTE *)(inited + 80) = 2;
  sub_213DC0630((uint64_t)&v9, (uint64_t)v14, &qword_254D3AFC8);
  sub_213DC0630((uint64_t)v14, inited + 88, &qword_254D3AFC8);
  sub_213E1C89C((uint64_t)v11);
  sub_213E1C89C((uint64_t)v13);
  sub_213E1C89C((uint64_t)v14);
  sub_213DC077C(v5);
  v1 = sub_213DCC2CC(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F540);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_213E99F60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  if (*a1 != *a2)
    return 0;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a2 + 2);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_11;
  }
  if (!v5)
    return 0;
  v6 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && v4 == v5;
  if (v6 || (v7 = sub_213EF3234(), result = 0, (v7 & 1) != 0))
  {
LABEL_11:
    v9 = *((_QWORD *)a1 + 4);
    v10 = *((_QWORD *)a2 + 4);
    if (v9)
    {
      if (v10)
      {
        if (*((_QWORD *)a1 + 3) != *((_QWORD *)a2 + 3) || v9 != v10)
        {
          v11 = sub_213EF3234();
          result = 0;
          if ((v11 & 1) == 0)
            return result;
        }
LABEL_18:
        v12 = a2[48];
        if ((a1[48] & 1) != 0)
        {
          if ((a2[48] & 1) == 0)
            return 0;
        }
        else
        {
          if (*((double *)a1 + 5) != *((double *)a2 + 5))
            v12 = 1;
          if ((v12 & 1) != 0)
            return 0;
        }
        return 1;
      }
    }
    else if (!v10)
    {
      goto LABEL_18;
    }
    return 0;
  }
  return result;
}

uint64_t destroy for MediaEntityFieldComparison()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaEntityFieldComparison(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaEntityFieldComparison(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaEntityFieldComparison(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEntityFieldComparison(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEntityFieldComparison(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEntityFieldComparison()
{
  return &type metadata for MediaEntityFieldComparison;
}

uint64_t storeEnumTagSinglePayload for MediaEntityField(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E9A2D8 + 4 * byte_213EFFA65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E9A30C + 4 * byte_213EFFA60[v4]))();
}

uint64_t sub_213E9A30C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9A314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E9A31CLL);
  return result;
}

uint64_t sub_213E9A328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E9A330);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E9A334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9A33C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaEntityField()
{
  return &type metadata for MediaEntityField;
}

unint64_t sub_213E9A35C()
{
  unint64_t result;

  result = qword_254D3FA28;
  if (!qword_254D3FA28)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFFB04, &type metadata for MediaEntityField);
    atomic_store(result, (unint64_t *)&qword_254D3FA28);
  }
  return result;
}

uint64_t MessagesInAppFollowupClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MessagesInAppFollowupClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E9A3B8(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];

  sub_213DAFDFC(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  v1 = swift_dynamicCast();
  if ((_DWORD)v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v1;
}

uint64_t type metadata accessor for MessagesInAppFollowupClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessagesInAppFollowupClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t static DomainSuggestionSignal.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = a5;
  v23 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v20[1] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EF2D6C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v16 = *a1;
  v17 = *a2;
  v22 = v18;
  switch(v16)
  {
    case 3:
      if (v17 != 3)
        goto LABEL_17;
      goto LABEL_16;
    case 4:
      if (v17 != 4)
        goto LABEL_17;
      goto LABEL_16;
    case 5:
      if (v17 != 5)
        goto LABEL_17;
      goto LABEL_16;
    case 6:
      if (v17 != 6)
        goto LABEL_17;
      goto LABEL_16;
    case 7:
      if (v17 != 7)
        goto LABEL_17;
      goto LABEL_16;
    case 8:
      if (v17 == 8)
        goto LABEL_16;
LABEL_17:
      result = 0;
      break;
    default:
      result = 0;
      if (v16 == v17 && (v17 - 9) <= 0xFFFFFFF9)
      {
LABEL_16:
        v20[0] = v15;
        v25 = a3;
        v26 = a4;
        v27 = v21;
        v28 = a6;
        v21 = a6;
        type metadata accessor for DomainSuggestionSignal();
      }
      return result;
  }
  return result;
}

void type metadata accessor for DomainSuggestionSignal()
{
  JUMPOUT(0x2199C5244);
}

void sub_213E9A818(char a1@<W0>, _BYTE *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for DomainSuggestionSignal();
}

uint64_t sub_213E9A850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 52);
  v4 = sub_213EF2D6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
}

uint64_t sub_213E9A890(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E9A8D4 + 4 * byte_213EFFC16[a1]))(0x6F50676E6F727473, 0xEE00657669746973);
}

uint64_t sub_213E9A8D4()
{
  return 0x6576697469736F70;
}

uint64_t sub_213E9A914()
{
  return 0x654E676E6F727473;
}

uint64_t sub_213E9A938()
{
  return 0x6572656665526F6ELL;
}

unint64_t sub_213E9A958()
{
  return 0xD000000000000018;
}

uint64_t sub_213E9A974(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v50 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FB70);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FB78);
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FB80);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FB88);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FB90);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FB98);
  v13 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FBA0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FBA8);
  v51 = *(_QWORD *)(v20 - 8);
  v52 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E9DA48();
  v23 = v50;
  sub_213EF3348();
  switch(v23)
  {
    case 3:
      v53 = 0;
      sub_213E9DC68();
      v24 = v52;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v22, v24);
    case 4:
      v54 = 1;
      sub_213E9DC24();
      v29 = v52;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v34);
      goto LABEL_10;
    case 5:
      v55 = 2;
      sub_213E9DBE0();
      v30 = v35;
      v29 = v52;
      sub_213EF3168();
      v32 = v36;
      v31 = v37;
      goto LABEL_9;
    case 6:
      v56 = 3;
      sub_213E9DB9C();
      v30 = v38;
      v29 = v52;
      sub_213EF3168();
      v32 = v39;
      v31 = v40;
      goto LABEL_9;
    case 7:
      v57 = 4;
      sub_213E9DB58();
      v30 = v41;
      v29 = v52;
      sub_213EF3168();
      v32 = v42;
      v31 = v43;
      goto LABEL_9;
    case 8:
      v58 = 5;
      sub_213E9DB14();
      v30 = v44;
      v29 = v52;
      sub_213EF3168();
      v32 = v45;
      v31 = v46;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
LABEL_10:
      result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v22, v29);
      break;
    default:
      v60 = 6;
      sub_213E9DA8C();
      v26 = v47;
      v27 = v52;
      sub_213EF3168();
      v59 = v23;
      sub_213E9DAD0();
      v28 = v49;
      sub_213EF31BC();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v28);
      result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v22, v27);
      break;
  }
  return result;
}

uint64_t sub_213E9AE68(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FCD8);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FCE0);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FCE8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FCF0);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E9E424();
  sub_213EF3348();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_213E9E4AC();
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_213E9E468();
      v15 = v20;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_213E9E4F0();
    sub_213EF3168();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

uint64_t sub_213E9B0CC()
{
  unsigned __int8 *v0;

  return sub_213E9A890(*v0);
}

uint64_t sub_213E9B0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E9CA4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E9B0F8()
{
  sub_213E9DA48();
  return sub_213EF3354();
}

uint64_t sub_213E9B120()
{
  sub_213E9DA48();
  return sub_213EF3360();
}

uint64_t sub_213E9B148()
{
  sub_213E9DB9C();
  return sub_213EF3354();
}

uint64_t sub_213E9B170()
{
  sub_213E9DB9C();
  return sub_213EF3360();
}

uint64_t sub_213E9B198()
{
  sub_213E9DBE0();
  return sub_213EF3354();
}

uint64_t sub_213E9B1C0()
{
  sub_213E9DBE0();
  return sub_213EF3360();
}

uint64_t sub_213E9B1E8()
{
  sub_213E9DB14();
  return sub_213EF3354();
}

uint64_t sub_213E9B210()
{
  sub_213E9DB14();
  return sub_213EF3360();
}

uint64_t sub_213E9B238()
{
  sub_213E9DA8C();
  return sub_213EF3354();
}

uint64_t sub_213E9B260()
{
  sub_213E9DA8C();
  return sub_213EF3360();
}

uint64_t sub_213E9B288()
{
  sub_213E9DC24();
  return sub_213EF3354();
}

uint64_t sub_213E9B2B0()
{
  sub_213E9DC24();
  return sub_213EF3360();
}

uint64_t sub_213E9B2D8()
{
  sub_213E9DB58();
  return sub_213EF3354();
}

uint64_t sub_213E9B300()
{
  sub_213E9DB58();
  return sub_213EF3360();
}

uint64_t sub_213E9B328()
{
  sub_213E9DC68();
  return sub_213EF3354();
}

uint64_t sub_213E9B350()
{
  sub_213E9DC68();
  return sub_213EF3360();
}

BOOL sub_213E9B378(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213E9C9A0(*a1, *a2);
}

char *sub_213E9B384@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_213E9CD70(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_213E9B3AC(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_213E9A974(a1, *v1);
}

uint64_t sub_213E9B3C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C61727475656ELL;
  if (*v0 != 1)
    v1 = 0x657669746167656ELL;
  if (*v0)
    return v1;
  else
    return 0x6576697469736F70;
}

uint64_t sub_213E9B420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E9D51C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E9B444()
{
  sub_213E9E424();
  return sub_213EF3354();
}

uint64_t sub_213E9B46C()
{
  sub_213E9E424();
  return sub_213EF3360();
}

uint64_t sub_213E9B494()
{
  sub_213E9E468();
  return sub_213EF3354();
}

uint64_t sub_213E9B4BC()
{
  sub_213E9E468();
  return sub_213EF3360();
}

uint64_t sub_213E9B4E4()
{
  sub_213E9E4AC();
  return sub_213EF3354();
}

uint64_t sub_213E9B50C()
{
  sub_213E9E4AC();
  return sub_213EF3360();
}

uint64_t sub_213E9B534()
{
  sub_213E9E4F0();
  return sub_213EF3354();
}

uint64_t sub_213E9B55C()
{
  sub_213E9E4F0();
  return sub_213EF3360();
}

_QWORD *sub_213E9B584@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_213E9D670(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_213E9B5AC(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_213E9AE68(a1, *v1);
}

uint64_t DomainSuggestionSignal.description.getter(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];
  uint64_t v9;
  unint64_t v10;

  v3 = sub_213EF2D6C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-v5];
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_213EF2EB0();
  sub_213EF2904();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, &v1[*(int *)(a1 + 52)], v3);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  v8[15] = *v1;
  sub_213EF3000();
  return v9;
}

uint64_t sub_213E9B6F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C616E676973 && a2 == 0xE600000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F536C616E676973 && a2 == 0xEC00000065637275)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213E9B7F4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F536C616E676973;
  else
    return 0x6C616E676973;
}

uint64_t sub_213E9B830()
{
  char *v0;

  return sub_213E9B7F4(*v0);
}

uint64_t sub_213E9B844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E9B6F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E9B874(uint64_t a1)
{
  MEMORY[0x2199C52D4](&unk_213EFFEE4, a1);
  return sub_213EF3354();
}

uint64_t sub_213E9B8A8(uint64_t a1)
{
  MEMORY[0x2199C52D4](&unk_213EFFEE4, a1);
  return sub_213EF3360();
}

void DomainSuggestionSignal.encode(to:)()
{
  type metadata accessor for DomainSuggestionSignal.CodingKeys();
}

uint64_t sub_213E9B920(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x2199C52D4](&unk_213EFFEE4, a1);
  v3 = sub_213EF31C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v7 = *(_BYTE **)(v2 - 128);
  sub_213EF3348();
  *(_BYTE *)(v2 - 112) = *v7;
  *(_BYTE *)(v2 - 65) = 0;
  sub_213E9BA5C();
  v8 = *(_QWORD *)(v2 - 120);
  sub_213EF31BC();
  if (!v8)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_213EF3180();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void type metadata accessor for DomainSuggestionSignal.CodingKeys()
{
  JUMPOUT(0x2199C5244);
}

unint64_t sub_213E9BA5C()
{
  unint64_t result;

  result = qword_254D3FA60;
  if (!qword_254D3FA60)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFFEBC, &type metadata for SuggestionSignal);
    atomic_store(result, (unint64_t *)&qword_254D3FA60);
  }
  return result;
}

void DomainSuggestionSignal.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[16];

  v11[3] = a5;
  v9 = sub_213EF2D6C();
  v11[1] = *(_QWORD *)(v9 - 8);
  v11[2] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11[6] = (char *)v11 - v10;
  v11[12] = a1;
  v11[13] = a2;
  v11[14] = a3;
  v11[15] = a4;
  type metadata accessor for DomainSuggestionSignal.CodingKeys();
}

void sub_213E9BB28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x2199C52D4](&unk_213EFFEE4, a1);
  v6 = sub_213EF315C();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 144) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for DomainSuggestionSignal();
}

uint64_t sub_213E9BB98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v3 - 176) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v12 - v5;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v3 - 136) = v1;
  v7 = *(_QWORD *)(v3 - 120);
  sub_213EF333C();
  if (!v7)
  {
    *(_QWORD *)(v3 - 120) = v4;
    v9 = *(_QWORD *)(v3 - 176);
    v8 = *(_QWORD *)(v3 - 168);
    v10 = *(_QWORD *)(v3 - 160);
    *(_BYTE *)(v3 - 65) = 0;
    sub_213E9BCFC();
    sub_213EF3144();
    *v6 = *(_BYTE *)(v3 - 112);
    *(_BYTE *)(v3 - 112) = 1;
    sub_213EF3108();
    (*(void (**)(_QWORD, _QWORD))(v8 + 8))(*(_QWORD *)(v3 - 136), *(_QWORD *)(v3 - 128));
    (*(void (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(v3 - 200) + 32))(&v6[*(int *)(v9 + 52)], v10, *(_QWORD *)(v3 - 192));
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v3 - 120) + 32))(*(_QWORD *)(v3 - 184), v6, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

unint64_t sub_213E9BCFC()
{
  unint64_t result;

  result = qword_254D3FA68[0];
  if (!qword_254D3FA68[0])
  {
    result = MEMORY[0x2199C52D4](&unk_213EFFE94, &type metadata for SuggestionSignal);
    atomic_store(result, qword_254D3FA68);
  }
  return result;
}

void sub_213E9BD40(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  DomainSuggestionSignal.init(from:)(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_213E9BD60()
{
  DomainSuggestionSignal.encode(to:)();
}

uint64_t sub_213E9BD74(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t *a3)
{
  return static DomainSuggestionSignal.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_213E9BD88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF2D6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_213E9BE00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  int v10;
  uint64_t v13;
  void *v14;
  const void *v15;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = ~(unint64_t)v6;
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  v10 = v6 & 0x100000;
  if (v7 > 7 || v10 != 0 || ((v7 + 1) & ~v7) + v9 > 0x18)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v14 = (void *)(((unint64_t)a1 + v7 + 1) & v8);
    v15 = (const void *)(((unint64_t)a2 + v7 + 1) & v8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4))
    {
      memcpy(v14, v15, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v14, v15, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_213E9BF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  return result;
}

_BYTE *sub_213E9BF70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)((unint64_t)&a1[v6 + 1] & ~v6);
  v8 = (const void *)((unint64_t)&a2[v6 + 1] & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
  }
  return a1;
}

_BYTE *sub_213E9C02C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)((unint64_t)&a1[v6 + 1] & ~v6);
  v8 = (void *)((unint64_t)&a2[v6 + 1] & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
  return a1;
}

_BYTE *sub_213E9C134(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)((unint64_t)&a1[v6 + 1] & ~v6);
  v8 = (const void *)((unint64_t)&a2[v6 + 1] & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
  }
  return a1;
}

_BYTE *sub_213E9C1F0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)((unint64_t)&a1[v6 + 1] & ~v6);
  v8 = (void *)((unint64_t)&a2[v6 + 1] & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
  return a1;
}

uint64_t sub_213E9C2F8(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0xF7)
    v7 = 247;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 1) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)&a1[v11];
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)&a1[v11];
      if (!*(_WORD *)&a1[v11])
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if (v6 > 0xF7)
      {
        v19 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v9 + 1] & ~v9);
        if (v19 >= 2)
          return v19 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *a1;
        if (v17 >= 3)
          v18 = v17 - 2;
        else
          v18 = 0;
        if (v18 >= 7)
          return v18 - 6;
        else
          return 0;
      }
    }
  }
  v13 = a1[v11];
  if (!a1[v11])
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_213E9C480(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xF7)
    v10 = 247;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_213E9C6C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_213E9C6D0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_213E9C6F0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_213E9C700()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_213E9C708()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_213E9C714(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E9C760 + 4 * byte_213EFFC3A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213E9C794 + 4 * byte_213EFFC35[v4]))();
}

uint64_t sub_213E9C794(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9C79C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E9C7A4);
  return result;
}

uint64_t sub_213E9C7B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E9C7B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E9C7BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9C7C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for SuggestionSignal(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 7)
      return v7 - 6;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_213E9C820 + 4 * byte_213EFFC3F[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SuggestionSignal(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF8)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_213E9C8CC + 4 * byte_213EFFC49[v5]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_213E9C900 + 4 * byte_213EFFC44[v5]))();
}

uint64_t sub_213E9C900(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9C908(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E9C910);
  return result;
}

uint64_t sub_213E9C91C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E9C924);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_213E9C928(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9C930(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9C93C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_213E9C950(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionSignal()
{
  return &type metadata for SuggestionSignal;
}

void sub_213E9C970()
{
  JUMPOUT(0x2199C52D4);
}

void sub_213E9C980()
{
  JUMPOUT(0x2199C52D4);
}

void sub_213E9C990()
{
  JUMPOUT(0x2199C52D4);
}

BOOL sub_213E9C9A0(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL8 result;

  switch(a1)
  {
    case 3u:
      if (a2 != 3)
        goto LABEL_15;
      result = 1;
      break;
    case 4u:
      if (a2 != 4)
        goto LABEL_15;
      result = 1;
      break;
    case 5u:
      if (a2 != 5)
        goto LABEL_15;
      result = 1;
      break;
    case 6u:
      if (a2 != 6)
        goto LABEL_15;
      result = 1;
      break;
    case 7u:
      if (a2 != 7)
        goto LABEL_15;
      result = 1;
      break;
    case 8u:
      if (a2 != 8)
        goto LABEL_15;
      result = 1;
      break;
    default:
      if (a2 - 3 >= 6)
        result = a1 == a2;
      else
LABEL_15:
        result = 0;
      break;
  }
  return result;
}

uint64_t sub_213E9CA4C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6F50676E6F727473 && a2 == 0xEE00657669746973 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576697469736F70 && a2 == 0xE800000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61727475656ELL && a2 == 0xE700000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657669746167656ELL && a2 == 0xE800000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x654E676E6F727473 && a2 == 0xEE00657669746167 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6572656665526F6ELL && a2 == 0xEB0000000065636ELL || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000213F093C0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

char *sub_213E9CD70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v28[20];
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FBF8);
  v3 = *(_QWORD *)(v2 - 8);
  v28[12] = v2;
  v28[13] = v3;
  MEMORY[0x24BDAC7A8](v2);
  v28[16] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC00);
  v28[9] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28[19] = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC08);
  v28[10] = *(_QWORD *)(v6 - 8);
  v28[11] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28[18] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC10);
  v28[7] = *(_QWORD *)(v8 - 8);
  v28[8] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28[17] = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC18);
  v28[5] = *(_QWORD *)(v10 - 8);
  v28[6] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v28[15] = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC20);
  v28[3] = *(_QWORD *)(v12 - 8);
  v28[4] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v28[14] = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC28);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FC30);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_213E9DA48();
  v23 = v31;
  sub_213EF333C();
  if (!v23)
  {
    v28[2] = v17;
    v28[0] = v15;
    v28[1] = v14;
    v31 = v19;
    v24 = sub_213EF3150();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X10 }
    v17 = (char *)sub_213EF2F34();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v26 = &type metadata for SuggestionSignal;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v17 - 1) + 104))(v26, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v18);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  return v17;
}

uint64_t sub_213E9D51C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6576697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61727475656ELL && a2 == 0xE700000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657669746167656ELL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_213E9D670(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FD18);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FD20);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FD28);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FD30);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E9E424();
  v11 = (uint64_t)v30;
  sub_213EF333C();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_213EF3150();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_213EF2F34();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v10 = &type metadata for SignalSentiment;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_213E9E4AC();
      v16 = v28;
      sub_213EF30E4();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_213E9E468();
      sub_213EF30E4();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_213E9E4F0();
    sub_213EF30E4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  return v10;
}

unint64_t sub_213E9DA48()
{
  unint64_t result;

  result = qword_254D3FBB0;
  if (!qword_254D3FBB0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0066C, &type metadata for SuggestionSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBB0);
  }
  return result;
}

unint64_t sub_213E9DA8C()
{
  unint64_t result;

  result = qword_254D3FBB8;
  if (!qword_254D3FBB8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0061C, &type metadata for SuggestionSignal.NoReferenceWithSentimentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBB8);
  }
  return result;
}

unint64_t sub_213E9DAD0()
{
  unint64_t result;

  result = qword_254D3FBC0;
  if (!qword_254D3FBC0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F005F4, &type metadata for SignalSentiment);
    atomic_store(result, (unint64_t *)&qword_254D3FBC0);
  }
  return result;
}

unint64_t sub_213E9DB14()
{
  unint64_t result;

  result = qword_254D3FBC8;
  if (!qword_254D3FBC8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F005A4, &type metadata for SuggestionSignal.NoReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBC8);
  }
  return result;
}

unint64_t sub_213E9DB58()
{
  unint64_t result;

  result = qword_254D3FBD0;
  if (!qword_254D3FBD0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00554, &type metadata for SuggestionSignal.StrongNegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBD0);
  }
  return result;
}

unint64_t sub_213E9DB9C()
{
  unint64_t result;

  result = qword_254D3FBD8;
  if (!qword_254D3FBD8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00504, &type metadata for SuggestionSignal.NegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBD8);
  }
  return result;
}

unint64_t sub_213E9DBE0()
{
  unint64_t result;

  result = qword_254D3FBE0;
  if (!qword_254D3FBE0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F004B4, &type metadata for SuggestionSignal.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBE0);
  }
  return result;
}

unint64_t sub_213E9DC24()
{
  unint64_t result;

  result = qword_254D3FBE8;
  if (!qword_254D3FBE8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00464, &type metadata for SuggestionSignal.PositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBE8);
  }
  return result;
}

unint64_t sub_213E9DC68()
{
  unint64_t result;

  result = qword_254D3FBF0;
  if (!qword_254D3FBF0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00414, &type metadata for SuggestionSignal.StrongPositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FBF0);
  }
  return result;
}

unint64_t sub_213E9DCAC()
{
  unint64_t result;

  result = qword_254D3FC38;
  if (!qword_254D3FC38)
  {
    result = MEMORY[0x2199C52D4](&unk_213F003EC, &type metadata for SignalSentiment);
    atomic_store(result, (unint64_t *)&qword_254D3FC38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SuggestionSignal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_213E9DD3C + 4 * byte_213EFFC60[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_213E9DD70 + 4 * byte_213EFFC5B[v4]))();
}

uint64_t sub_213E9DD70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9DD78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E9DD80);
  return result;
}

uint64_t sub_213E9DD8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E9DD94);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_213E9DD98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9DDA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionSignal.CodingKeys()
{
  return &type metadata for SuggestionSignal.CodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionSignal.StrongPositiveCodingKeys()
{
  return &type metadata for SuggestionSignal.StrongPositiveCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionSignal.PositiveCodingKeys()
{
  return &type metadata for SuggestionSignal.PositiveCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionSignal.NeutralCodingKeys()
{
  return &type metadata for SuggestionSignal.NeutralCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionSignal.NegativeCodingKeys()
{
  return &type metadata for SuggestionSignal.NegativeCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionSignal.StrongNegativeCodingKeys()
{
  return &type metadata for SuggestionSignal.StrongNegativeCodingKeys;
}

ValueMetadata *type metadata accessor for SuggestionSignal.NoReferenceCodingKeys()
{
  return &type metadata for SuggestionSignal.NoReferenceCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SuggestionSignal.NoReferenceWithSentimentCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213E9DE5C + 4 * byte_213EFFC65[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213E9DE7C + 4 * byte_213EFFC6A[v4]))();
}

_BYTE *sub_213E9DE5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213E9DE7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213E9DE84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213E9DE8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213E9DE94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213E9DE9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionSignal.NoReferenceWithSentimentCodingKeys()
{
  return &type metadata for SuggestionSignal.NoReferenceWithSentimentCodingKeys;
}

ValueMetadata *type metadata accessor for SignalSentiment()
{
  return &type metadata for SignalSentiment;
}

unint64_t sub_213E9DED0()
{
  unint64_t result;

  result = qword_254D3FC40;
  if (!qword_254D3FC40)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00034, &type metadata for SignalSentiment);
    atomic_store(result, (unint64_t *)&qword_254D3FC40);
  }
  return result;
}

unint64_t sub_213E9DF18()
{
  unint64_t result;

  result = qword_254D3FC48;
  if (!qword_254D3FC48)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0012C, &type metadata for SuggestionSignal.NoReferenceWithSentimentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC48);
  }
  return result;
}

unint64_t sub_213E9DF60()
{
  unint64_t result;

  result = qword_254D3FC50;
  if (!qword_254D3FC50)
  {
    result = MEMORY[0x2199C52D4](&unk_213F003C4, &type metadata for SuggestionSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC50);
  }
  return result;
}

unint64_t sub_213E9DFA8()
{
  unint64_t result;

  result = qword_254D3FC58;
  if (!qword_254D3FC58)
  {
    result = MEMORY[0x2199C52D4](&unk_213F002E4, &type metadata for SuggestionSignal.StrongPositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC58);
  }
  return result;
}

unint64_t sub_213E9DFF0()
{
  unint64_t result;

  result = qword_254D3FC60;
  if (!qword_254D3FC60)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0030C, &type metadata for SuggestionSignal.StrongPositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC60);
  }
  return result;
}

unint64_t sub_213E9E038()
{
  unint64_t result;

  result = qword_254D3FC68;
  if (!qword_254D3FC68)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00294, &type metadata for SuggestionSignal.PositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC68);
  }
  return result;
}

unint64_t sub_213E9E080()
{
  unint64_t result;

  result = qword_254D3FC70;
  if (!qword_254D3FC70)
  {
    result = MEMORY[0x2199C52D4](&unk_213F002BC, &type metadata for SuggestionSignal.PositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC70);
  }
  return result;
}

unint64_t sub_213E9E0C8()
{
  unint64_t result;

  result = qword_254D3FC78;
  if (!qword_254D3FC78)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00244, &type metadata for SuggestionSignal.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC78);
  }
  return result;
}

unint64_t sub_213E9E110()
{
  unint64_t result;

  result = qword_254D3FC80;
  if (!qword_254D3FC80)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0026C, &type metadata for SuggestionSignal.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC80);
  }
  return result;
}

unint64_t sub_213E9E158()
{
  unint64_t result;

  result = qword_254D3FC88;
  if (!qword_254D3FC88)
  {
    result = MEMORY[0x2199C52D4](&unk_213F001F4, &type metadata for SuggestionSignal.NegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC88);
  }
  return result;
}

unint64_t sub_213E9E1A0()
{
  unint64_t result;

  result = qword_254D3FC90;
  if (!qword_254D3FC90)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0021C, &type metadata for SuggestionSignal.NegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC90);
  }
  return result;
}

unint64_t sub_213E9E1E8()
{
  unint64_t result;

  result = qword_254D3FC98;
  if (!qword_254D3FC98)
  {
    result = MEMORY[0x2199C52D4](&unk_213F001A4, &type metadata for SuggestionSignal.StrongNegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FC98);
  }
  return result;
}

unint64_t sub_213E9E230()
{
  unint64_t result;

  result = qword_254D3FCA0;
  if (!qword_254D3FCA0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F001CC, &type metadata for SuggestionSignal.StrongNegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCA0);
  }
  return result;
}

unint64_t sub_213E9E278()
{
  unint64_t result;

  result = qword_254D3FCA8;
  if (!qword_254D3FCA8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00154, &type metadata for SuggestionSignal.NoReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCA8);
  }
  return result;
}

unint64_t sub_213E9E2C0()
{
  unint64_t result;

  result = qword_254D3FCB0;
  if (!qword_254D3FCB0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0017C, &type metadata for SuggestionSignal.NoReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCB0);
  }
  return result;
}

unint64_t sub_213E9E308()
{
  unint64_t result;

  result = qword_254D3FCB8;
  if (!qword_254D3FCB8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0009C, &type metadata for SuggestionSignal.NoReferenceWithSentimentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCB8);
  }
  return result;
}

unint64_t sub_213E9E350()
{
  unint64_t result;

  result = qword_254D3FCC0;
  if (!qword_254D3FCC0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F000C4, &type metadata for SuggestionSignal.NoReferenceWithSentimentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCC0);
  }
  return result;
}

unint64_t sub_213E9E398()
{
  unint64_t result;

  result = qword_254D3FCC8;
  if (!qword_254D3FCC8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00334, &type metadata for SuggestionSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCC8);
  }
  return result;
}

unint64_t sub_213E9E3E0()
{
  unint64_t result;

  result = qword_254D3FCD0;
  if (!qword_254D3FCD0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0035C, &type metadata for SuggestionSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCD0);
  }
  return result;
}

unint64_t sub_213E9E424()
{
  unint64_t result;

  result = qword_254D3FCF8;
  if (!qword_254D3FCF8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00954, &type metadata for SignalSentiment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FCF8);
  }
  return result;
}

unint64_t sub_213E9E468()
{
  unint64_t result;

  result = qword_254D3FD00;
  if (!qword_254D3FD00)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00904, &type metadata for SignalSentiment.NegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD00);
  }
  return result;
}

unint64_t sub_213E9E4AC()
{
  unint64_t result;

  result = qword_254D3FD08;
  if (!qword_254D3FD08)
  {
    result = MEMORY[0x2199C52D4](&unk_213F008B4, &type metadata for SignalSentiment.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD08);
  }
  return result;
}

unint64_t sub_213E9E4F0()
{
  unint64_t result;

  result = qword_254D3FD10;
  if (!qword_254D3FD10)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00864, &type metadata for SignalSentiment.PositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD10);
  }
  return result;
}

uint64_t _s28SiriPrivateLearningInference15SignalSentimentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E9E580 + 4 * byte_213EFFC74[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E9E5B4 + 4 * byte_213EFFC6F[v4]))();
}

uint64_t sub_213E9E5B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9E5BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E9E5C4);
  return result;
}

uint64_t sub_213E9E5D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E9E5D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E9E5DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E9E5E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignalSentiment.CodingKeys()
{
  return &type metadata for SignalSentiment.CodingKeys;
}

ValueMetadata *type metadata accessor for SignalSentiment.PositiveCodingKeys()
{
  return &type metadata for SignalSentiment.PositiveCodingKeys;
}

ValueMetadata *type metadata accessor for SignalSentiment.NeutralCodingKeys()
{
  return &type metadata for SignalSentiment.NeutralCodingKeys;
}

ValueMetadata *type metadata accessor for SignalSentiment.NegativeCodingKeys()
{
  return &type metadata for SignalSentiment.NegativeCodingKeys;
}

unint64_t sub_213E9E634()
{
  unint64_t result;

  result = qword_254D3FD38;
  if (!qword_254D3FD38)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0083C, &type metadata for SignalSentiment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD38);
  }
  return result;
}

unint64_t sub_213E9E67C()
{
  unint64_t result;

  result = qword_254D3FD40;
  if (!qword_254D3FD40)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0075C, &type metadata for SignalSentiment.PositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD40);
  }
  return result;
}

unint64_t sub_213E9E6C4()
{
  unint64_t result;

  result = qword_254D3FD48;
  if (!qword_254D3FD48)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00784, &type metadata for SignalSentiment.PositiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD48);
  }
  return result;
}

unint64_t sub_213E9E70C()
{
  unint64_t result;

  result = qword_254D3FD50;
  if (!qword_254D3FD50)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0070C, &type metadata for SignalSentiment.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD50);
  }
  return result;
}

unint64_t sub_213E9E754()
{
  unint64_t result;

  result = qword_254D3FD58;
  if (!qword_254D3FD58)
  {
    result = MEMORY[0x2199C52D4](&unk_213F00734, &type metadata for SignalSentiment.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD58);
  }
  return result;
}

unint64_t sub_213E9E79C()
{
  unint64_t result;

  result = qword_254D3FD60;
  if (!qword_254D3FD60)
  {
    result = MEMORY[0x2199C52D4](&unk_213F006BC, &type metadata for SignalSentiment.NegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD60);
  }
  return result;
}

unint64_t sub_213E9E7E4()
{
  unint64_t result;

  result = qword_254D3FD68;
  if (!qword_254D3FD68)
  {
    result = MEMORY[0x2199C52D4](&unk_213F006E4, &type metadata for SignalSentiment.NegativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD68);
  }
  return result;
}

unint64_t sub_213E9E82C()
{
  unint64_t result;

  result = qword_254D3FD70;
  if (!qword_254D3FD70)
  {
    result = MEMORY[0x2199C52D4](&unk_213F007AC, &type metadata for SignalSentiment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD70);
  }
  return result;
}

unint64_t sub_213E9E874()
{
  unint64_t result;

  result = qword_254D3FD78;
  if (!qword_254D3FD78)
  {
    result = MEMORY[0x2199C52D4](&unk_213F007D4, &type metadata for SignalSentiment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3FD78);
  }
  return result;
}

uint64_t destroy for MediaCandidateEntity(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaCandidateEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaCandidateEntity(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_213DBEEB0(a1 + 16);
    v8 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MediaCandidateEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_213DBEEB0(a1 + 16);
  }
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
LABEL_6:
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaCandidateEntity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaCandidateEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaCandidateEntity()
{
  return &type metadata for MediaCandidateEntity;
}

uint64_t sub_213E9EC28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  const char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34[5];
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;

  v4 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeaturisedTurn(0) + 28));
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return swift_storeEnumTagMultiPayload();
  v26 = v6;
  v27 = a1;
  v28 = v4;
  v29 = a2;
  v30 = v7;
  v33 = v7 + 32;
  swift_bridgeObjectRetain_n();
  v9 = 0;
  v31 = "INStartCallIntent";
  v32 = 0x8000000213F04880;
  while (1)
  {
    v10 = (_QWORD *)(v33 + 40 * v9);
    v11 = v10[2];
    v12 = v10[3];
    v13 = v10[4];
    v14 = *(_QWORD *)(v11 + 16);
    if (v14)
    {
      v15 = v11 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v15, (uint64_t)&v35);
        sub_213DAFDFC((uint64_t)&v35, (uint64_t)v34);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for CommonFeature.InteractionDirection(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
        v15 += 40;
        if (!--v14)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v35, (uint64_t)v37);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
LABEL_12:
      v38 = 0;
      memset(v37, 0, sizeof(v37));
    }
    sub_213DAFE40((uint64_t)v37, (uint64_t)&v35);
    if (v36)
      break;
    sub_213DB848C((uint64_t)&v35);
LABEL_4:
    sub_213DB848C((uint64_t)v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_5:
    if (++v9 == v8)
    {
      swift_bridgeObjectRelease_n();
      return swift_storeEnumTagMultiPayload();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  type metadata accessor for CommonFeature.InteractionDirection(0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_4;
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v16 = v35;
  sub_213DB848C((uint64_t)v37);
  swift_bridgeObjectRelease();
  if ((v12 != 0xD000000000000013 || v13 != v32) && (sub_213EF3234() & 1) == 0 || v16 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease_n();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_213DAF1F8(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v19 == 2)
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3F248);
    v21 = v29;
    v22 = (char *)v29 + *(int *)(v20 + 48);
    *v29 = 0xD00000000000001CLL;
    v21[1] = 0x8000000213F093E0;
    v23 = sub_213EF1D64();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v22, v27, v23);
    return swift_storeEnumTagMultiPayload();
  }
  v24 = (uint64_t)v26;
  swift_storeEnumTagMultiPayload();
  return sub_213E07238(v24, (uint64_t)v29);
}

ValueMetadata *type metadata accessor for PhoneCallMetadataExtractor()
{
  return &type metadata for PhoneCallMetadataExtractor;
}

uint64_t sub_213E9F038(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v9;

  v3 = a1[2];
  v2 = a1[3];
  v5 = v1[2];
  v4 = v1[3];
  if (*v1 != *a1 || v1[1] != a1[1])
  {
    v7 = sub_213EF3234();
    if (v4)
      goto LABEL_6;
LABEL_15:
    if (!v2)
      goto LABEL_18;
LABEL_16:
    if ((v7 & 1) != 0)
      return 3;
    return 2;
  }
  v7 = 1;
  if (!v4)
    goto LABEL_15;
LABEL_6:
  if (!v2)
    goto LABEL_16;
  if (v5 == v3 && v4 == v2)
  {
LABEL_18:
    if ((v7 & 1) != 0)
      return 5;
    return 4;
  }
  v9 = sub_213EF3234();
  if ((v7 & 1) != 0)
  {
    if ((v9 & 1) != 0)
      return 5;
    return 3;
  }
  if ((v9 & 1) != 0)
    return 4;
  return 2;
}

void *sub_213E9F0F4(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  double v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  double v25;
  char v26;
  char v27;
  double v28;
  uint64_t v29;
  void **p_weak_ivar_lyt;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  double v41;
  char v42;
  char v43;
  uint64_t v44;
  void **v45;
  uint64_t v46;
  double v47;
  char v48;
  char v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  Swift::String v77;
  double v78;
  char v79;
  char v80;
  _QWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  Swift::Double_optional v98;

  v6 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_14;
  sub_213DAFDB8(a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * (v10 - 1), (uint64_t)v9);
  if ((sub_213E9FFB8(a1) & 1) == 0)
  {
    sub_213DAFE88((uint64_t)v9);
LABEL_14:
    if (qword_253F04A88 != -1)
      swift_once();
    v31 = sub_213EF2724();
    __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
    v32 = sub_213EF270C();
    v33 = sub_213EF2C94();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_213DAB000, v32, v33, "Skipping metadata extraction from session - Does not meet relevance criteria", v34, 2u);
      MEMORY[0x2199C53C4](v34, -1, -1);
    }

    return 0;
  }
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95800]), sel_init);
  if (!v11)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v36 = sub_213EF2724();
    __swift_project_value_buffer(v36, (uint64_t)qword_253F08A00);
    v37 = sub_213EF270C();
    v38 = sub_213EF2CA0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_213DAB000, v37, v38, "Failed to generate PhoneCallMetadata SELF container", v39, 2u);
      MEMORY[0x2199C53C4](v39, -1, -1);
    }

    sub_213DAFE88((uint64_t)v9);
    return 0;
  }
  v12 = v11;
  objc_msgSend(v11, sel_setHasUserMadeFollowupCallWithinDetectionWindow_, 0);
  objc_msgSend(v12, sel_setHasUserMadeFollowupCallWithinEvaluationWindow_, 0);
  objc_msgSend(v12, sel_setFollowupNameSimilarity_, 1);
  objc_msgSend(v12, sel_setSiriAndFollowupContactComparison_, 1);
  objc_msgSend(v12, sel_setSiriCallDuration_, 1);
  objc_msgSend(v12, sel_setSiriCallTimeToHangup_, 1);
  objc_msgSend(v12, sel_setUserTimeToFollowup_, 1);
  objc_msgSend(v12, sel_setFollowupNameSimilarity_, 1);
  sub_213E9FA40((uint64_t)&v94, &v89, (uint64_t)v9);
  v88 = v96;
  v82 = v94;
  v83 = *((_QWORD *)&v96 + 1);
  v81[1] = v97;
  v13 = v90;
  v14 = v91;
  v85 = v89;
  v86 = v93;
  v87 = v95;
  objc_msgSend(v12, sel_setHasSiriInitiatedCall_, v95 != 0);
  objc_msgSend(v12, sel_setHasSiriResolvedContact_, objc_msgSend(v12, sel_hasSiriInitiatedCall));
  v84 = v9;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_213DAF3F8(v15);
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = swift_bridgeObjectRetain();
  v20 = COERCE_DOUBLE(sub_213DAE808(v19));
  v22 = v21;
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
    v20 = *(double *)&v16;
  v23 = v18 & v22;
  v24 = v85;
  if (v13)
  {
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_213DC7B24(v24, v13);
      v25 = COERCE_DOUBLE(sub_213DAFBAC(v14));
      v27 = v26;
      sub_213DC7B60(v24, v13);
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        v28 = v25 - v20;
        if (v25 - v20 <= a2)
        {
          objc_msgSend(v12, sel_setHasUserMadeFollowupCallWithinDetectionWindow_, 1);
          if (v28 <= a3)
          {
            objc_msgSend(v12, sel_setHasUserMadeFollowupCallWithinEvaluationWindow_, 1);
            if (v28 >= 0.0)
            {
              p_weak_ivar_lyt = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
              if (v28 <= 10.0)
              {
                v29 = 2;
              }
              else if (v28 <= 20.0)
              {
                v29 = 3;
              }
              else
              {
                v29 = 4 * (v28 <= 30.0);
              }
            }
            else
            {
              v29 = 0;
              p_weak_ivar_lyt = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
            }
            objc_msgSend(v12, (SEL)p_weak_ivar_lyt[368], v29);
          }
        }
      }
    }
  }
  if (!v87)
    goto LABEL_81;
  v40 = swift_bridgeObjectRetain();
  v41 = COERCE_DOUBLE(sub_213DAF3EC(v40));
  v43 = v42;
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
  {
    if (v41 >= 0.0)
    {
      v45 = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
      if (v41 == 0.0)
      {
        v44 = 2;
      }
      else if (v41 <= 5.0)
      {
        v44 = 3;
      }
      else if (v41 > 10.0)
      {
        v44 = 5;
      }
      else
      {
        v44 = 4;
      }
    }
    else
    {
      v44 = 0;
      v45 = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
    }
    objc_msgSend(v12, (SEL)v45[366], v44, v41);
  }
  if ((v23 & 1) == 0)
  {
    v46 = swift_bridgeObjectRetain();
    v47 = COERCE_DOUBLE(sub_213DAF404(v46));
    v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
    {
      v50 = v47 - v20;
      if (v47 - v20 >= 0.0)
      {
        if (v50 <= 5.0)
        {
          v51 = 2;
        }
        else if (v50 > 10.0)
        {
          v51 = 4;
        }
        else
        {
          v51 = 3;
        }
      }
      else
      {
        v51 = 0;
      }
      objc_msgSend(v12, sel_setSiriCallTimeToHangup_, v51, v50);
    }
  }
  if (!v13)
  {
    sub_213DAFE88((uint64_t)v84);
LABEL_71:
    sub_213DC7B60(v82, v87);
    return v12;
  }
  if ((objc_msgSend(v12, sel_hasUserMadeFollowupCallWithinEvaluationWindow) & 1) == 0)
  {
    sub_213DAFE88((uint64_t)v84);
    sub_213DC7B60(v24, v13);
    goto LABEL_71;
  }
  v52 = swift_bridgeObjectRetain();
  v53 = sub_213DAE9B4(v52);
  swift_bridgeObjectRelease();
  v54 = swift_bridgeObjectRetain();
  v55 = (_QWORD *)sub_213DAE9B4(v54);
  swift_bridgeObjectRelease();
  if (v53)
  {
    if (*(_QWORD *)(v53 + 16))
    {
      v56 = *(_QWORD *)(v53 + 56);
      if (v56)
      {
        if (v55)
        {
          if (v55[2])
          {
            v57 = v55[7];
            if (v57)
            {
              v58 = *(_OWORD *)(v53 + 64);
              v59 = v55[8];
              v60 = v55[9];
              v61 = v55[6];
              v94 = *(_QWORD *)(v53 + 48);
              v95 = v56;
              v96 = v58;
              v89 = v61;
              v90 = v57;
              v91 = v59;
              v92 = v60;
              v62 = sub_213E9F038(&v89);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              objc_msgSend(v12, sel_setSiriAndFollowupContactComparison_, v62);
            }
          }
        }
      }
      if (*(_QWORD *)(v53 + 16))
      {
        v64 = *(_QWORD *)(v53 + 32);
        v63 = *(void **)(v53 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v55)
          goto LABEL_73;
        if (v55[2])
        {
          v81[0] = v64;
          v66 = v55[4];
          v65 = (void *)v55[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v67 = v81[0];
          swift_bridgeObjectRelease();
          if (v67 == v66 && v63 == v65)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            if ((sub_213EF3234() & 1) == 0)
            {
              v77._countAndFlagsBits = v66;
              v77._object = v65;
              v98 = String.scoreRatcliffObershelp(between:)(v77);
              v78 = *(double *)&v98.is_nil;
              v80 = v79;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v80 & 1) != 0)
              {
                v76 = 2;
              }
              else if (v78 >= 0.6)
              {
                v76 = 3;
              }
              else
              {
                v76 = 2;
              }
              goto LABEL_87;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v76 = 4;
LABEL_87:
          objc_msgSend(v12, sel_setFollowupNameSimilarity_, v76);
          goto LABEL_74;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_73:
  swift_bridgeObjectRelease();
LABEL_74:
  v68 = swift_bridgeObjectRetain();
  v69 = sub_213DAFBB8(v68);
  swift_bridgeObjectRelease();
  if ((v69 & 0x100000000) == 0)
  {
    v70 = swift_bridgeObjectRetain();
    v71 = sub_213DAFBB8(v70);
    swift_bridgeObjectRelease();
    if ((v71 & 0x100000000) == 0)
      objc_msgSend(v12, sel_setIsSameCallRouteForSiriAndFollowup_, (_DWORD)v69 == (_DWORD)v71);
  }
  v72 = swift_bridgeObjectRetain();
  v73 = sub_213DAFD50(v72);
  sub_213DC7B60(v82, v87);
  swift_bridgeObjectRelease();
  if ((v73 & 0x100000000) != 0)
  {
LABEL_81:
    sub_213DAFE88((uint64_t)v84);
    sub_213DC7B60(v24, v13);
    return v12;
  }
  v74 = swift_bridgeObjectRetain();
  v75 = sub_213DAFD50(v74);
  sub_213DC7B60(v24, v13);
  swift_bridgeObjectRelease();
  if ((v75 & 0x100000000) == 0)
    objc_msgSend(v12, sel_setIsSameCallCapabilityForFollowup_, (_DWORD)v73 == (_DWORD)v75);
  sub_213DAFE88((uint64_t)v84);
  return v12;
}

uint64_t sub_213E9FA40(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38[5];
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  _QWORD *v43;

  v3 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for FeaturisedTurn(0) + 28));
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v33 = *(_QWORD *)(v3 + 16);
  if (v33)
  {
    result = swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      if (v6 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      v7 = v3 + 32 + 40 * v6;
      v34 = *(_QWORD *)v7;
      v9 = *(_QWORD *)(v7 + 24);
      v8 = *(_QWORD *)(v7 + 32);
      v10 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      v36 = *(_OWORD *)(v7 + 8);
      if (v11)
      {
        v12 = v10 + 32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_213DAFDFC(v12, (uint64_t)&v39);
          sub_213DAFDFC((uint64_t)&v39, (uint64_t)v38);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          type metadata accessor for CommonFeature.InteractionDirection(0);
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
          v12 += 40;
          if (!--v11)
          {
            swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v39, (uint64_t)v41);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
LABEL_13:
        v42 = 0;
        memset(v41, 0, sizeof(v41));
      }
      sub_213DAFE40((uint64_t)v41, (uint64_t)&v39);
      if (v40)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for CommonFeature.InteractionDirection(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          v13 = v39;
          sub_213DAFEC4((uint64_t)v41, &qword_253F06970);
          swift_bridgeObjectRelease();
          if ((v9 == 0xD000000000000011 && v8 == 0x8000000213F04860 || (sub_213EF3234() & 1) != 0) && v13 == 1)
          {
            v14 = v43;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = sub_213DCD02C(0, v14[2] + 1, 1);
              v14 = v43;
            }
            v15 = v36;
            v17 = v14[2];
            v16 = v14[3];
            if (v17 >= v16 >> 1)
            {
              result = sub_213DCD02C(v16 > 1, v17 + 1, 1);
              v15 = v36;
              v14 = v43;
            }
            v14[2] = v17 + 1;
            v18 = &v14[5 * v17];
            v18[4] = v34;
            *(_OWORD *)(v18 + 5) = v15;
            v18[7] = v9;
            v18[8] = v8;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
          }
          goto LABEL_5;
        }
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v39, &qword_253F06970);
      }
      sub_213DAFEC4((uint64_t)v41, &qword_253F06970);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
LABEL_5:
      if (++v6 == v33)
      {
        swift_bridgeObjectRelease();
        v4 = v43;
        break;
      }
    }
  }
  if (v4[2])
  {
    v19 = v4[4];
    v20 = v4[5];
    v22 = v4[6];
    v21 = v4[7];
    v23 = v4[8];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_213DAF1F8(v22);
    result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      result = swift_release();
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *a2 = v19;
      a2[1] = v20;
      a2[2] = v22;
      a2[3] = v21;
      a2[4] = v23;
      return result;
    }
    v26 = v4[2];
    if (v26 == 1)
    {
      result = swift_release();
    }
    else
    {
      if (!v26)
        goto LABEL_42;
      v27 = v4[10];
      v28 = v4[11];
      v35 = v4[12];
      v37 = v4[9];
      v29 = v4[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_release();
      v30 = sub_213DAF1F8(v28);
      result = swift_bridgeObjectRelease();
      if (v30 != 2 && (v30 & 1) == 0)
      {
        *(_QWORD *)a1 = v19;
        *(_QWORD *)(a1 + 8) = v20;
        *(_QWORD *)(a1 + 16) = v22;
        *(_QWORD *)(a1 + 24) = v21;
        *(_QWORD *)(a1 + 32) = v23;
        *a2 = v37;
        a2[1] = v27;
        a2[2] = v28;
        a2[3] = v35;
        a2[4] = v29;
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    *(_QWORD *)a1 = v19;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 16) = v22;
    *(_QWORD *)(a1 + 24) = v21;
    *(_QWORD *)(a1 + 32) = v23;
    v25 = 0uLL;
  }
  else
  {
    result = swift_release();
    *(_QWORD *)(a1 + 32) = 0;
    v25 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  *(_OWORD *)a2 = v25;
  *((_OWORD *)a2 + 1) = v25;
  a2[4] = 0;
  return result;
}

uint64_t sub_213E9FF38(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for FeaturisedTurn(0);
    return a2;
  }
  return result;
}

uint64_t sub_213E9FFB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeaturisedTurn(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_13;
  v13 = *(_QWORD *)(v6 + 72);
  sub_213DAFDB8(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + v13 * (v12 - 1), (uint64_t)&v24 - v10);
  if ((isSiriPhoneCall(_:)() & 1) != 0)
  {
    sub_213DAFE88((uint64_t)v11);
    v14 = 1;
    return v14 & 1;
  }
  if (v12 < 2)
    goto LABEL_12;
  v15 = 1;
  result = sub_213E9FF38(1, a1);
  v20 = v19 >> 1;
  if (v18 == v19 >> 1)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v15, 1, v5);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_213DAFE88((uint64_t)v11);
      sub_213DAFEC4((uint64_t)v4, &qword_253F069B0);
LABEL_13:
      v14 = 0;
      return v14 & 1;
    }
    sub_213DB0B5C((uint64_t)v4, (uint64_t)v9);
    v21 = swift_bridgeObjectRetain();
    sub_213DAF220(v21);
    v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v23)
    {
      v14 = isSiriPhoneCall(_:)();
      sub_213DAFE88((uint64_t)v9);
      sub_213DAFE88((uint64_t)v11);
      return v14 & 1;
    }
    sub_213DAFE88((uint64_t)v9);
LABEL_12:
    sub_213DAFE88((uint64_t)v11);
    goto LABEL_13;
  }
  if (v20 > v18)
  {
    sub_213DAFDB8(v17 + (v20 - 1) * v13, (uint64_t)v4);
    v15 = 0;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_213EA01E4()
{
  uint64_t v0;

  v0 = sub_213EF1A58();
  __swift_allocate_value_buffer(v0, qword_254D3FD80);
  __swift_project_value_buffer(v0, (uint64_t)qword_254D3FD80);
  return sub_213EF1A4C();
}

uint64_t sub_213EA0234()
{
  uint64_t result;

  type metadata accessor for AdamIdExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3FE80);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3FD98 = 91;
  unk_254D3FDA0 = 0xE100000000000000;
  return result;
}

id sub_213EA02B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_deviceMediaLibrary);
    v3 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v2;
    v4 = v2;
    sub_213EA3344(v3);
  }
  sub_213EA3354(v1);
  return v2;
}

unint64_t sub_213EA0328(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v4 = sub_213EA21D0(a1, a2);
  if (!v5)
    return v4;
  v6 = sub_213EA02B4();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v21 = sub_213EF2724();
    __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
    v7 = sub_213EF270C();
    v22 = sub_213EF2CA0();
    if (os_log_type_enabled(v7, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v37 = v24;
      *(_DWORD *)v23 = 136315138;
      if (qword_254D3A068 != -1)
        swift_once();
      v25 = qword_254D3FD98;
      v26 = unk_254D3FDA0;
      swift_bridgeObjectRetain();
      sub_213DB0570(v25, v26, &v37);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v7, v22, "%s Failed to init MPMediaLibrary", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v24, -1, -1);
      MEMORY[0x2199C53C4](v23, -1, -1);
    }
    goto LABEL_30;
  }
  v7 = v6;
  v8 = (void *)sub_213EF2844();
  swift_bridgeObjectRelease();
  v9 = -[NSObject entityWithSiriSyncIdentifier:](v7, sel_entityWithSiriSyncIdentifier_, v8);

  if (!v9)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v27 = sub_213EF2724();
    __swift_project_value_buffer(v27, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    v28 = sub_213EF270C();
    v29 = sub_213EF2CA0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v37 = v31;
      *(_DWORD *)v30 = 136315394;
      if (qword_254D3A068 != -1)
        swift_once();
      v32 = qword_254D3FD98;
      v33 = unk_254D3FDA0;
      swift_bridgeObjectRetain();
      sub_213DB0570(v32, v33, &v37);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_213DB0570(a1, a2, &v37);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v28, v29, "%s lookupMediaItemAdamId: Failed to get mediaEntity by querying with SiriSyncIds: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v31, -1, -1);
      MEMORY[0x2199C53C4](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_30:

    return 0;
  }
  v10 = v9;
  v4 = sub_213EA2CC0(v10);
  v12 = v11;
  if (qword_253F04A88 != -1)
    swift_once();
  v13 = sub_213EF2724();
  __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = sub_213EF270C();
  v15 = sub_213EF2C94();
  if (os_log_type_enabled(v14, v15))
  {
    v36 = v10;
    v16 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v37 = v35;
    *(_DWORD *)v16 = 136315650;
    if (qword_254D3A068 != -1)
      swift_once();
    v18 = qword_254D3FD98;
    v17 = unk_254D3FDA0;
    swift_bridgeObjectRetain();
    sub_213DB0570(v18, v17, &v37);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_213DB0570(a1, a2, &v37);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 22) = 2080;
    if (v12)
      v19 = v4;
    else
      v19 = 7104878;
    if (v12)
      v20 = v12;
    else
      v20 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_213DB0570(v19, v20, &v37);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v14, v15, "%s lookupMediaItemAdamId: Original SiriSyncId: %s Found AdamId: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v35, -1, -1);
    MEMORY[0x2199C53C4](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  return v4;
}

double sub_213EA09AC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  double result;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __int16 v75;
  unsigned __int8 *v76;
  unsigned int v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  os_log_type_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  os_log_type_t v89;
  NSObject *log;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v11 = sub_213EBCD3C();
  v12 = v10;
  if (!v8)
  {
    v22 = v9;
    if (!v10)
      goto LABEL_99;
    v23 = HIBYTE(v10) & 0xF;
    v24 = v9 & 0xFFFFFFFFFFFFLL;
    if (!((v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v9 & 0xFFFFFFFFFFFFLL))
      goto LABEL_99;
    if ((v10 & 0x1000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v4 = (uint64_t)sub_213EA19B4(v22, v12, 10);
      v80 = v79;
      swift_bridgeObjectRelease();
      if ((v80 & 1) != 0)
        goto LABEL_99;
      goto LABEL_57;
    }
    if ((v10 & 0x2000000000000000) == 0)
    {
      if ((v9 & 0x1000000000000000) != 0)
        v26 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v26 = (unsigned __int8 *)sub_213EF2F40();
      v27 = sub_213EA1A98(v26, v24, 10);
      if ((v28 & 1) == 0)
      {
        v4 = (uint64_t)v27;
        goto LABEL_57;
      }
LABEL_99:
      if (qword_253F04A88 != -1)
        swift_once();
      v81 = sub_213EF2724();
      __swift_project_value_buffer(v81, (uint64_t)qword_253F08A00);
      swift_bridgeObjectRetain();
      v15 = sub_213EF270C();
      v82 = sub_213EF2C94();
      if (!os_log_type_enabled(v15, v82))
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_107;
      }
      v91 = v11;
      v17 = swift_slowAlloc();
      v83 = swift_slowAlloc();
      v96 = v83;
      *(_DWORD *)v17 = 136315394;
      if (qword_254D3A068 != -1)
        swift_once();
      v85 = qword_254D3FD98;
      v84 = unk_254D3FDA0;
      swift_bridgeObjectRetain();
      v92 = sub_213DB0570(v85, v84, &v96);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v92 = v91;
      v93 = 0;
      v94 = v22;
      v95 = v12;
      swift_bridgeObjectRetain();
      v86 = sub_213EF288C();
      v92 = sub_213DB0570(v86, v87, &v96);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v15, v82, "%s Missing / invalid persistent store identifier. MPC Components: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      v21 = v83;
      goto LABEL_105;
    }
    v92 = v9;
    v93 = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v23)
        goto LABEL_111;
      if (v23 == 1)
        goto LABEL_109;
      if ((BYTE1(v9) - 48) > 9u)
        goto LABEL_53;
      v4 = (BYTE1(v9) - 48);
      v41 = v23 - 2;
      if (v23 != 2)
      {
        v42 = (unsigned __int8 *)&v92 + 2;
        while (1)
        {
          v43 = *v42 - 48;
          if (v43 > 9)
            goto LABEL_53;
          v44 = 10 * v4;
          if ((unsigned __int128)(v4 * (__int128)10) >> 64 != (10 * v4) >> 63)
            goto LABEL_53;
          v4 = v44 + v43;
          if (__OFADD__(v44, v43))
            goto LABEL_53;
          LOBYTE(v23) = 0;
          ++v42;
          if (!--v41)
            goto LABEL_56;
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v23)
        {
          if (v23 != 1)
          {
            if ((BYTE1(v9) - 48) <= 9u)
            {
              v4 = -(uint64_t)(BYTE1(v9) - 48);
              v37 = v23 - 2;
              if (v23 != 2)
              {
                v38 = (unsigned __int8 *)&v92 + 2;
                while (1)
                {
                  v39 = *v38 - 48;
                  if (v39 > 9)
                    goto LABEL_53;
                  v40 = 10 * v4;
                  if ((unsigned __int128)(v4 * (__int128)10) >> 64 != (10 * v4) >> 63)
                    goto LABEL_53;
                  v4 = v40 - v39;
                  if (__OFSUB__(v40, v39))
                    goto LABEL_53;
                  LOBYTE(v23) = 0;
                  ++v38;
                  if (!--v37)
                    goto LABEL_56;
                }
              }
              goto LABEL_55;
            }
LABEL_53:
            v4 = 0;
            LOBYTE(v23) = 1;
            goto LABEL_56;
          }
LABEL_109:
          v4 = 0;
LABEL_56:
          if ((v23 & 1) != 0)
            goto LABEL_99;
LABEL_57:
          swift_bridgeObjectRelease();
          v46 = sub_213EA02B4();
          if (!v46)
          {
            if (qword_253F04A88 != -1)
              swift_once();
            v60 = sub_213EF2724();
            __swift_project_value_buffer(v60, (uint64_t)qword_253F08A00);
            v61 = sub_213EF270C();
            v62 = sub_213EF2CA0();
            if (os_log_type_enabled(v61, v62))
            {
              v63 = (uint8_t *)swift_slowAlloc();
              v64 = swift_slowAlloc();
              v92 = v64;
              *(_DWORD *)v63 = 136315138;
              if (qword_254D3A068 != -1)
                swift_once();
              v65 = qword_254D3FD98;
              v66 = unk_254D3FDA0;
              swift_bridgeObjectRetain();
              v96 = sub_213DB0570(v65, v66, &v92);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, v61, v62, "%s Failed to init MPMediaLibrary", v63, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v64, -1, -1);
              MEMORY[0x2199C53C4](v63, -1, -1);
            }

            goto LABEL_107;
          }
          v3 = v46;
          v47 = objc_msgSend(v46, sel_entityWithPersistentID_entityType_, v4, 0);
          if (v47)
          {
            v48 = v47;
            v49 = sub_213EA2CC0(v47);
            v51 = v50;
            if (qword_253F04A88 != -1)
              swift_once();
            v52 = sub_213EF2724();
            __swift_project_value_buffer(v52, (uint64_t)qword_253F08A00);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            v53 = sub_213EF270C();
            v54 = sub_213EF2C94();
            if (os_log_type_enabled(v53, v54))
            {
              v89 = v54;
              log = v53;
              v55 = swift_slowAlloc();
              v88 = swift_slowAlloc();
              v92 = v88;
              *(_DWORD *)v55 = 136315650;
              if (qword_254D3A068 != -1)
                swift_once();
              v57 = qword_254D3FD98;
              v56 = unk_254D3FDA0;
              swift_bridgeObjectRetain();
              v96 = sub_213DB0570(v57, v56, &v92);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 12) = 2080;
              swift_bridgeObjectRetain();
              v96 = sub_213DB0570(a1, a2, &v92);
              sub_213EF2D9C();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v55 + 22) = 2080;
              if (v51)
                v58 = v49;
              else
                v58 = 7104878;
              if (v51)
                v59 = v51;
              else
                v59 = 0xE300000000000000;
              swift_bridgeObjectRetain();
              v96 = sub_213DB0570(v58, v59, &v92);
              sub_213EF2D9C();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, log, v89, "%s lookupMpcIdentifierAdamId: Original mpc-item id: %s Found AdamId: %s", (uint8_t *)v55, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v88, -1, -1);
              MEMORY[0x2199C53C4](v55, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            if (v51)
              v74 = v49;
            else
              v74 = 0;
            *(_QWORD *)a3 = v74;
            *(_QWORD *)(a3 + 8) = v51;
            if (v51)
              v75 = 258;
            else
              v75 = 0;
            *(_QWORD *)(a3 + 16) = 0;
            *(_QWORD *)(a3 + 24) = v51 != 0;
            *(_QWORD *)(a3 + 32) = 0;
            *(_QWORD *)(a3 + 40) = 0;
            *(_WORD *)(a3 + 48) = v75;

            return result;
          }
          if (qword_253F04A88 == -1)
          {
LABEL_79:
            v67 = sub_213EF2724();
            __swift_project_value_buffer(v67, (uint64_t)qword_253F08A00);
            v68 = sub_213EF270C();
            v69 = sub_213EF2CA0();
            if (os_log_type_enabled(v68, v69))
            {
              v70 = swift_slowAlloc();
              v71 = swift_slowAlloc();
              v92 = v71;
              *(_DWORD *)v70 = 136315394;
              if (qword_254D3A068 != -1)
                swift_once();
              v72 = qword_254D3FD98;
              v73 = unk_254D3FDA0;
              swift_bridgeObjectRetain();
              v96 = sub_213DB0570(v72, v73, &v92);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              *(_WORD *)(v70 + 12) = 2048;
              v96 = v4;
              sub_213EF2D9C();
              _os_log_impl(&dword_213DAB000, v68, v69, "%s lookupMpcIdentifierAdamId: Failed to get mediaEntity by querying with persistent store id: %lld", (uint8_t *)v70, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v71, -1, -1);
              MEMORY[0x2199C53C4](v70, -1, -1);
            }

            goto LABEL_107;
          }
LABEL_112:
          swift_once();
          goto LABEL_79;
        }
        __break(1u);
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      if (!v23 || (v9 - 48) > 9u)
        goto LABEL_53;
      v4 = (v9 - 48);
      v45 = v23 - 1;
      if (v23 != 1)
      {
        v76 = (unsigned __int8 *)&v92 + 1;
        while (1)
        {
          v77 = *v76 - 48;
          if (v77 > 9)
            goto LABEL_53;
          v78 = 10 * v4;
          if ((unsigned __int128)(v4 * (__int128)10) >> 64 != (10 * v4) >> 63)
            goto LABEL_53;
          v4 = v78 + v77;
          if (__OFADD__(v78, v77))
            goto LABEL_53;
          LOBYTE(v23) = 0;
          ++v76;
          if (!--v45)
            goto LABEL_56;
        }
      }
    }
LABEL_55:
    LOBYTE(v23) = 0;
    goto LABEL_56;
  }
  v13 = v8;
  if (v8 == 1)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v14 = sub_213EF2724();
    __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    v15 = sub_213EF270C();
    v16 = sub_213EF2C94();
    if (!os_log_type_enabled(v15, v16))
    {

      swift_bridgeObjectRelease_n();
LABEL_107:
      *(_WORD *)(a3 + 48) = 0;
      result = 0.0;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      return result;
    }
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v92 = v18;
    *(_DWORD *)v17 = 136315394;
    if (qword_254D3A068 != -1)
      swift_once();
    v19 = qword_254D3FD98;
    v20 = unk_254D3FDA0;
    swift_bridgeObjectRetain();
    v96 = sub_213DB0570(v19, v20, &v92);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    v96 = sub_213DB0570(a1, a2, &v92);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213DAB000, v15, v16, "%s Identifier is not song mpc-item: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    v21 = v18;
LABEL_105:
    MEMORY[0x2199C53C4](v21, -1, -1);
    MEMORY[0x2199C53C4](v17, -1, -1);

    goto LABEL_107;
  }
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
    swift_once();
  v29 = sub_213EF2724();
  __swift_project_value_buffer(v29, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  v30 = sub_213EF270C();
  v31 = sub_213EF2C94();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v92 = v33;
    *(_DWORD *)v32 = 136315394;
    if (qword_254D3A068 != -1)
      swift_once();
    v34 = qword_254D3FD98;
    v35 = unk_254D3FDA0;
    swift_bridgeObjectRetain();
    v96 = sub_213DB0570(v34, v35, &v92);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    swift_bridgeObjectRetain();
    v96 = sub_213DB0570(v11, v13, &v92);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213DAB000, v30, v31, "%s Adam Id present in MPC identifier (%s. Using identifier directly.", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v33, -1, -1);
    MEMORY[0x2199C53C4](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v13;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_213EF7580;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_WORD *)(a3 + 48) = 2;
  return result;
}

BOOL String.isNumber.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  swift_bridgeObjectRetain();
  do
  {
    sub_213EF2910();
    v1 = v0;
    if (!v0)
      break;
    v2 = sub_213EF27FC();
    swift_bridgeObjectRelease();
  }
  while ((v2 & 1) != 0);
  swift_bridgeObjectRelease();
  return v1 == 0;
}

uint64_t sub_213EA1844()
{
  uint64_t v0;

  sub_213EA3344(*(id *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdamIdExtractor()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of AdamIdExtracting.lookupMediaItemAdamId(siriSyncId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AdamIdExtracting.lookupMpcIdentifierAdamId(mpcIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

unint64_t sub_213EA1898(uint64_t a1, unint64_t a2)
{
  return sub_213EA0328(a1, a2);
}

double sub_213EA18B8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_213EA09AC(a1, a2, a3);
}

_QWORD *sub_213EA18D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07038);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_213EA193C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_213EF2958();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2199C43D4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_213EA19B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_213EF297C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_213EA1D14();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_213EF2F40();
  }
LABEL_7:
  v11 = sub_213EA1A98(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_213EA1A98(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_213EA1D14()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_213EF2988();
  v4 = sub_213EA1D90(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213EA1D90(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_213EA1ED4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_213EA18D8(v9, 0);
      v12 = sub_213EA1FC0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2199C4350](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2199C4350);
LABEL_9:
      sub_213EF2F40();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2199C4350]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_213EA1ED4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_213EA193C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_213EA193C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_213EF2940();
  }
  __break(1u);
  return result;
}

unint64_t sub_213EA1FC0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_213EA193C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_213EF294C();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_213EF2F40();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_213EA193C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_213EF2928();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_213EA21D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];
  uint64_t v65;

  v4 = sub_213EF2880();
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F047F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_213EF1C2C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EF1C20();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_213EA3304((uint64_t)v7);
    if (qword_253F04A88 != -1)
      swift_once();
    v12 = sub_213EF2724();
    __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    v13 = sub_213EF270C();
    v14 = sub_213EF2CA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v64[0] = v16;
      *(_DWORD *)v15 = 136315394;
      if (qword_254D3A068 != -1)
        swift_once();
      v17 = qword_254D3FD98;
      v18 = unk_254D3FDA0;
      swift_bridgeObjectRetain();
      v65 = sub_213DB0570(v17, v18, v64);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = sub_213DB0570(a1, a2, v64);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v13, v14, "%s parseSiriSyncUri: uri:%{public}s not parseable as URL", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v16, -1, -1);
      MEMORY[0x2199C53C4](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  v63 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v64[0] = sub_213EF1C08();
  v64[1] = v19;
  if (qword_254D3A060 != -1)
    swift_once();
  v20 = sub_213EF1A58();
  __swift_project_value_buffer(v20, (uint64_t)qword_254D3FD80);
  sub_213DE52C8();
  v21 = sub_213EF2DCC();
  v23 = v22;
  swift_bridgeObjectRelease();
  v24 = sub_213EF1C14();
  if (v25)
  {
    v26 = v25;
    v62 = v24;
    v27 = sub_213EF1BFC();
    if (v28)
    {
      v29 = v28;
      v30 = HIBYTE(v23) & 0xF;
      if ((v23 & 0x2000000000000000) == 0)
        v30 = v21 & 0xFFFFFFFFFFFFLL;
      if (v30)
      {
        v31 = v27;
        if ((v27 != v21 || v28 != v23) && (sub_213EF3234() & 1) == 0)
        {
          if (v62 == 0x6E776F6E6B6E75 && v26 == 0xE700000000000000 || (sub_213EF3234() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_253F04A88 != -1)
              swift_once();
            v42 = sub_213EF2724();
            __swift_project_value_buffer(v42, (uint64_t)qword_253F08A00);
            swift_bridgeObjectRetain();
            v33 = sub_213EF270C();
            v43 = sub_213EF2CA0();
            if (os_log_type_enabled(v33, v43))
            {
              v44 = swift_slowAlloc();
              v45 = swift_slowAlloc();
              v64[0] = v45;
              *(_DWORD *)v44 = 136315394;
              if (qword_254D3A068 != -1)
                swift_once();
              v46 = qword_254D3FD98;
              v47 = unk_254D3FDA0;
              swift_bridgeObjectRetain();
              v65 = sub_213DB0570(v46, v47, v64);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              *(_WORD *)(v44 + 12) = 2080;
              swift_bridgeObjectRetain();
              v65 = sub_213DB0570(v62, v26, v64);
              sub_213EF2D9C();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_213DAB000, v33, v43, "%s parseSiriSyncUri: Unknown scheme:%s", (uint8_t *)v44, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v45, -1, -1);
              MEMORY[0x2199C53C4](v44, -1, -1);
              goto LABEL_29;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            if (v31 == 0x636E797369726973 && v29 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v48 = sub_213EF3234();
              swift_bridgeObjectRelease();
              if ((v48 & 1) == 0)
              {
                (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v8);
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            v49 = sub_213EF1C38();
            if (v50 >> 60 != 15)
            {
              v51 = v49;
              v52 = v50;
              sub_213EF2874();
              v40 = sub_213EF2868();
              v54 = v53;
              sub_213E36528(v51, v52);
              if (v54)
              {
                (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v8);
                swift_bridgeObjectRelease();
                return v40;
              }
            }
            if (qword_253F04A88 != -1)
              swift_once();
            v55 = sub_213EF2724();
            __swift_project_value_buffer(v55, (uint64_t)qword_253F08A00);
            swift_bridgeObjectRetain();
            v33 = sub_213EF270C();
            v56 = sub_213EF2CA0();
            if (os_log_type_enabled(v33, v56))
            {
              v62 = v8;
              v57 = swift_slowAlloc();
              v58 = swift_slowAlloc();
              v64[0] = v58;
              *(_DWORD *)v57 = 136315394;
              if (qword_254D3A068 != -1)
                swift_once();
              v60 = qword_254D3FD98;
              v59 = unk_254D3FDA0;
              swift_bridgeObjectRetain();
              v65 = sub_213DB0570(v60, v59, v64);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              *(_WORD *)(v57 + 12) = 2080;
              swift_bridgeObjectRetain();
              v65 = sub_213DB0570(v21, v23, v64);
              sub_213EF2D9C();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_213DAB000, v33, v56, "%s parseSiriSyncUri: Could not decode base64 uri component %s", (uint8_t *)v57, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v58, -1, -1);
              v39 = v57;
              goto LABEL_27;
            }
          }
LABEL_28:
          swift_bridgeObjectRelease_n();
LABEL_29:

          (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v8);
          return 0;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
    swift_once();
  v32 = sub_213EF2724();
  __swift_project_value_buffer(v32, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  v33 = sub_213EF270C();
  v34 = sub_213EF2CA0();
  if (!os_log_type_enabled(v33, v34))
    goto LABEL_28;
  v62 = v8;
  v35 = swift_slowAlloc();
  v36 = swift_slowAlloc();
  v64[0] = v36;
  *(_DWORD *)v35 = 136315394;
  if (qword_254D3A068 != -1)
    swift_once();
  v38 = qword_254D3FD98;
  v37 = unk_254D3FDA0;
  swift_bridgeObjectRetain();
  v65 = sub_213DB0570(v38, v37, v64);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 12) = 2080;
  swift_bridgeObjectRetain();
  v65 = sub_213DB0570(a1, a2, v64);
  sub_213EF2D9C();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_213DAB000, v33, v34, "%s parseSiriSyncUri: could not initialize Identifier from uri: %s", (uint8_t *)v35, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v36, -1, -1);
  v39 = v35;
LABEL_27:
  MEMORY[0x2199C53C4](v39, -1, -1);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v62);
  return 0;
}

unint64_t sub_213EA2CC0(void *a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  const char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (!v2)
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v10 = sub_213EF2724();
      __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
      v4 = sub_213EF270C();
      v11 = sub_213EF2C94();
      if (!os_log_type_enabled(v4, v11))
        goto LABEL_36;
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v34 = v13;
      *(_DWORD *)v12 = 136315138;
      if (qword_254D3A068 != -1)
        swift_once();
      v14 = qword_254D3FD98;
      v15 = unk_254D3FDA0;
      swift_bridgeObjectRetain();
      v35 = sub_213DB0570(v14, v15, &v34);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v16 = v11;
      v17 = "%s getAdamIdForMediaEntity: MPMediaEntity is a playlist. Unsupported by PIMS.";
    }
    else
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v25 = sub_213EF2724();
        __swift_project_value_buffer(v25, (uint64_t)qword_253F08A00);
        v4 = sub_213EF270C();
        v26 = sub_213EF2C94();
        if (!os_log_type_enabled(v4, v26))
          goto LABEL_36;
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v34 = v13;
        *(_DWORD *)v12 = 136315138;
        if (qword_254D3A068 != -1)
          swift_once();
        v27 = qword_254D3FD98;
        v28 = unk_254D3FDA0;
        swift_bridgeObjectRetain();
        v35 = sub_213DB0570(v27, v28, &v34);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v16 = v26;
        v17 = "%s getAdamIdForMediaEntity: MPMediaEntity is a MPMediaItemCollection unsupported by PIMS.";
      }
      else
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v29 = sub_213EF2724();
        __swift_project_value_buffer(v29, (uint64_t)qword_253F08A00);
        v4 = sub_213EF270C();
        v30 = sub_213EF2C94();
        if (!os_log_type_enabled(v4, v30))
          goto LABEL_36;
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v34 = v13;
        *(_DWORD *)v12 = 136315138;
        if (qword_254D3A068 != -1)
          swift_once();
        v31 = qword_254D3FD98;
        v32 = unk_254D3FDA0;
        swift_bridgeObjectRetain();
        v35 = sub_213DB0570(v31, v32, &v34);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v16 = v30;
        v17 = "%s getAdamIdForMediaEntity: MPMediaItem not found for mediaEntity - unknown subtype";
      }
    }
    _os_log_impl(&dword_213DAB000, v4, v16, v17, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v13, -1, -1);
    MEMORY[0x2199C53C4](v12, -1, -1);
LABEL_36:

    return 0;
  }
  v3 = (void *)v2;
  v4 = a1;
  v5 = objc_msgSend(v3, sel_playbackStoreID);
  v6 = sub_213EF2850();
  v8 = v7;

  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v18 = sub_213EF2724();
    __swift_project_value_buffer(v18, (uint64_t)qword_253F08A00);
    v19 = sub_213EF270C();
    v20 = sub_213EF2C94();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v34 = v22;
      *(_DWORD *)v21 = 136315138;
      if (qword_254D3A068 != -1)
        swift_once();
      v23 = qword_254D3FD98;
      v24 = unk_254D3FDA0;
      swift_bridgeObjectRetain();
      v35 = sub_213DB0570(v23, v24, &v34);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v19, v20, "%s getAdamIdForMediaEntity: MPMediaEntity has empty string for adamId. SiriSyncId mapping will not run.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v22, -1, -1);
      MEMORY[0x2199C53C4](v21, -1, -1);
    }

    goto LABEL_36;
  }
  if (String.isNumber.getter())
  {
    sub_213EF2904();
    swift_bridgeObjectRelease();

    return 0xD000000000000016;
  }
  else
  {

  }
  return v6;
}

uint64_t sub_213EA3304(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F047F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_213EA3344(id a1)
{
  if (a1 != (id)1)

}

id sub_213EA3354(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_213EA3364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t MediaSuggestionTag.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213EA33A4
                                                            + 4 * asc_213F00B20[*v0]))(0x754D6E69616D6F64, 0xEB00000000636973);
}

uint64_t sub_213EA33A4()
{
  return 0x656D7269666E6F63;
}

uint64_t sub_213EA33D4()
{
  return 0x6974636572726F63;
}

uint64_t sub_213EA33F0()
{
  return 0x7972617262696CLL;
}

unint64_t sub_213EA3408()
{
  return 0xD000000000000011;
}

unint64_t sub_213EA3424()
{
  return 0xD000000000000013;
}

SiriPrivateLearningInference::MediaSuggestionTag_optional __swiftcall MediaSuggestionTag.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::MediaSuggestionTag_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

Swift::Bool __swiftcall MediaSuggestionTag.isDomainTag()()
{
  _BYTE *v0;

  return *v0 == 0;
}

unint64_t sub_213EA34C8()
{
  unint64_t result;

  result = qword_254D3FE88;
  if (!qword_254D3FE88)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaSuggestionTag, &type metadata for MediaSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3FE88);
  }
  return result;
}

void sub_213EA350C()
{
  char *v0;

  sub_213E2B4BC(0, *v0);
}

void sub_213EA3518(uint64_t a1)
{
  char *v1;

  sub_213E2ADD4(a1, *v1);
}

void sub_213EA3520(uint64_t a1)
{
  char *v1;

  sub_213E2B4BC(a1, *v1);
}

SiriPrivateLearningInference::MediaSuggestionTag_optional sub_213EA3528(Swift::String *a1)
{
  return MediaSuggestionTag.init(rawValue:)(*a1);
}

uint64_t sub_213EA3534@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaSuggestionTag.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213EA3558(char *a1)
{
  sub_213E2A314(*a1);
}

uint64_t sub_213EA3564()
{
  sub_213EA36E8();
  return sub_213EF2A18();
}

uint64_t sub_213EA35C0()
{
  sub_213EA36E8();
  return sub_213EF2A0C();
}

BOOL sub_213EA360C()
{
  _BYTE *v0;

  return *v0 == 0;
}

uint64_t storeEnumTagSinglePayload for MediaSuggestionTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_213EA3668 + 4 * byte_213F00B2D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_213EA369C + 4 * byte_213F00B28[v4]))();
}

uint64_t sub_213EA369C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213EA36A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213EA36ACLL);
  return result;
}

uint64_t sub_213EA36B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213EA36C0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_213EA36C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213EA36CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaSuggestionTag()
{
  return &type metadata for MediaSuggestionTag;
}

unint64_t sub_213EA36E8()
{
  unint64_t result;

  result = qword_254D3FE90;
  if (!qword_254D3FE90)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaSuggestionTag, &type metadata for MediaSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3FE90);
  }
  return result;
}

uint64_t sub_213EA372C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  _QWORD v22[5];
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  CC_SHA1_CTX c;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = sub_213EF2880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EF2874();
  sub_213EF285C();
  v9 = v8;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v9 >> 60 != 15)
  {
    v12 = sub_213EF2A9C();
    *(_QWORD *)(v12 + 16) = 20;
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 40) = 0;
    *(_DWORD *)(v12 + 48) = 0;
    v32 = v12;
    memset(&c, 0, sizeof(c));
    CC_SHA1_Init(&c);
    v22[4] = sub_213EF1D4C();
    v23 = v13;
    v24 = v14;
    v25 = v15;
    v26 = v16;
    v27 = v17;
    v28 = v18;
    v29 = v19;
    v30 = v20;
    __asm { BR              X10 }
  }
  v10 = sub_213EF1D64();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
}

uint64_t sub_213EA3C04(const void *a1, uint64_t a2, char **a3, CC_SHA1_CTX *a4, void *a5, uint64_t a6)
{
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;

  v12 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_213DD030C((uint64_t)v12);
    *a3 = v12;
  }
  result = sub_213EA3CB4((unsigned __int8 *)v12 + 32, (int)v12 + 32 + *((_DWORD *)v12 + 4), a4, a5, a6, a1, a2);
  *a3 = v12;
  return result;
}

uint64_t sub_213EA3CB4(unsigned __int8 *a1, int a2, CC_SHA1_CTX *c, void *data, uint64_t a5, const void *a6, uint64_t a7)
{
  CC_LONG v11;
  CC_LONG v12;

  if (data)
  {
    v11 = a5 - (_DWORD)data;
    if (a5 - (uint64_t)data >= 0x100000000)
      goto LABEL_7;
  }
  else
  {
    v11 = 0;
  }
  CC_SHA1_Update(c, data, v11);
  if (!a6)
  {
LABEL_8:
    v12 = 0;
    goto LABEL_9;
  }
  v12 = a7 - (_DWORD)a6;
  if (a7 - (uint64_t)a6 >= 0x100000000)
  {
LABEL_7:
    sub_213EF3048();
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  CC_SHA1_Update(c, a6, v12);
  return CC_SHA1_Final(a1, c);
}

uint64_t sub_213EA3D9C(uint64_t a1, uint64_t a2, uint64_t a3, char **a4, CC_SHA1_CTX *a5, void *a6, uint64_t a7)
{
  uint64_t result;
  char *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  result = sub_213EF1B0C();
  v14 = (char *)result;
  if (result)
  {
    result = sub_213EF1B24();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v14 += a1 - result;
  }
  v15 = __OFSUB__(a2, a1);
  v16 = a2 - a1;
  if (v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  v17 = sub_213EF1B18();
  if (v17 >= v16)
    v18 = v16;
  else
    v18 = v17;
  v19 = &v14[v18];
  if (v14)
    v20 = (uint64_t)v19;
  else
    v20 = 0;
  return sub_213EA3C04(v14, v20, a4, a5, a6, a7);
}

uint64_t sub_213EA3E5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;

  v2 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FeaturisedTurn(0);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_213DAF424(v5);
  swift_bridgeObjectRelease();
  if ((v6 & 0x100000000) != 0)
  {
    sub_213EF2478();
    *a1 = sub_213EF23AC();
    a1[1] = v14;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_213EF255C();
    v7 = sub_213EF2550();
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      v16 = a1;
      v17 = MEMORY[0x24BEE4AF8];
      sub_213DCD184(0, v8, 0);
      v9 = 0;
      v10 = v17;
      v11 = *(_QWORD *)(v17 + 16);
      do
      {
        v12 = *(_DWORD *)(v7 + 4 * v9 + 32);
        v17 = v10;
        v13 = *(_QWORD *)(v10 + 24);
        if (v11 >= v13 >> 1)
        {
          sub_213DCD184(v13 > 1, v11 + 1, 1);
          v10 = v17;
        }
        ++v9;
        *(_QWORD *)(v10 + 16) = v11 + 1;
        *(_DWORD *)(v10 + 4 * v11++ + 32) = v12;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      a1 = v16;
    }
    else
    {
      swift_bridgeObjectRelease();
      v10 = MEMORY[0x24BEE4AF8];
    }
    sub_213E765F4(v6, v10);
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    return sub_213DBB430((uint64_t)v4, (uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
  }
}

uint64_t sub_213EA4050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[5];
  __int128 v64;
  uint64_t v65;
  _OWORD v66[2];
  uint64_t v67;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1D64();
  v60 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for FeaturisedTurn(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v15 = MEMORY[0x24BDAC7A8](v14);
  result = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v50 - v17;
  v22 = *(_QWORD *)(a1 + 16);
  v23 = v22 - 3;
  if (v22 < 3)
    v23 = 0;
  if (v22 == v23)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v18 + 56))(a2, 1, 1, v10);
  v56 = v7;
  v24 = v22 - v23;
  if (v22 <= v23)
  {
    __break(1u);
    return result;
  }
  v53 = v20;
  v54 = v19;
  v55 = v9;
  v58 = v18;
  v59 = a2;
  v25 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v61 = *(_QWORD *)(v18 + 72);
  v62 = v25;
  sub_213DAFDB8(v25 + v61 * (v22 - 1), (uint64_t)&v50 - v17);
  v52 = v10[6];
  swift_bridgeObjectRetain();
  v26 = swift_bridgeObjectRetain();
  v27 = a1;
  v28 = sub_213DAF424(v26);
  swift_bridgeObjectRelease();
  if ((v28 & 0x100000000) != 0)
  {
    swift_bridgeObjectRelease();
    sub_213DAFE88((uint64_t)v21);
    v18 = v58;
    a2 = v59;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v18 + 56))(a2, 1, 1, v10);
  }
  v57 = v27;
  v29 = swift_bridgeObjectRetain();
  sub_213DAF220(v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31 || v24 < 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = v6;
    swift_bridgeObjectRetain();
    v32 = 0;
    do
    {
      sub_213DAFDB8(v62 + v32 * v61, (uint64_t)v13);
      v33 = *(_QWORD *)&v13[v10[6]];
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v35 = v33 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_213DAFDFC(v35, (uint64_t)&v64);
          sub_213DAFDFC((uint64_t)&v64, (uint64_t)v63);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          type metadata accessor for UsoPersonRecipients();
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
          v35 += 40;
          if (!--v34)
          {
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v64, (uint64_t)v66);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_17:
        v67 = 0;
        memset(v66, 0, sizeof(v66));
      }
      sub_213DCC3D8((uint64_t)v66, (uint64_t)&v64, &qword_253F06970);
      if (v65)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for UsoPersonRecipients();
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          sub_213DB848C((uint64_t)v66);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v36 = v53;
          sub_213DBB430((uint64_t)v13, v53, type metadata accessor for FeaturisedTurn);
          v37 = v54;
          sub_213DBB430(v36, v54, type metadata accessor for FeaturisedTurn);
          v38 = v60;
          v39 = v55;
          v40 = v56;
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v55, v37, v56);
          *(_QWORD *)&v66[0] = *(_QWORD *)(v37 + v10[6]);
          swift_bridgeObjectRetain();
          v41 = swift_bridgeObjectRetain();
          sub_213DB43C8(v41);
          v42 = *(_QWORD *)&v66[0];
          *(_QWORD *)&v66[0] = *(_QWORD *)(v37 + v10[7]);
          swift_bridgeObjectRetain();
          v43 = swift_bridgeObjectRetain();
          sub_213DB43F0(v43);
          swift_bridgeObjectRelease();
          v44 = *(_QWORD *)&v66[0];
          sub_213DAFE88((uint64_t)v21);
          v45 = (uint64_t)v51;
          sub_213DCC3D8(v37 + v10[5], (uint64_t)v51, &qword_253F04800);
          sub_213DAFE88(v37);
          v46 = v59;
          (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v59, v39, v40);
          *(_QWORD *)(v46 + v10[6]) = v42;
          *(_QWORD *)(v46 + v10[7]) = v44;
          sub_213E23440(v45, v46 + v10[5]);
          v47 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v58 + 56);
          v48 = v46;
          return v47(v48, 0, 1, v10);
        }
      }
      else
      {
        sub_213DB848C((uint64_t)&v64);
      }
      ++v32;
      sub_213DB848C((uint64_t)v66);
      swift_bridgeObjectRelease();
      sub_213DAFE88((uint64_t)v13);
    }
    while (v32 != v22);
    swift_bridgeObjectRelease_n();
  }
  v49 = v59;
  sub_213DBB430((uint64_t)v21, v59, type metadata accessor for FeaturisedTurn);
  v47 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v58 + 56);
  v48 = v49;
  return v47(v48, 0, 1, v10);
}

uint64_t SuccessfulMessageDefinition.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SuccessfulMessageDefinition.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213EA45F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EC8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF53E0;
  v1 = type metadata accessor for SuccessfulMessageClassifier();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = &protocol witness table for SuccessfulMessageClassifier;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t sub_213EA4660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v20;

  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = *a4;
  v12 = a4[1];
  v14 = a4[3];
  v20 = a4[2];
  v15 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  v16 = (int *)type metadata accessor for MessagesGroundTruth();
  *(_BYTE *)(a5 + v16[5]) = 2;
  *(_QWORD *)(a5 + v16[6]) = a2;
  v17 = (uint64_t *)(a5 + v16[7]);
  *v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  v17[3] = v11;
  v18 = (_QWORD *)(a5 + v16[8]);
  *v18 = v13;
  v18[1] = v12;
  v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_213E05FBC(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SuccessfulMessageDefinition.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SuccessfulMessageDefinition.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213EA477C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_213E05BFC();
  *a1 = result;
  return result;
}

uint64_t sub_213EA47A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v20;

  v7 = *a2;
  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = *a4;
  v12 = a4[1];
  v14 = a4[3];
  v20 = a4[2];
  v15 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  v16 = (int *)type metadata accessor for MessagesGroundTruth();
  *(_BYTE *)(a5 + v16[5]) = 2;
  *(_QWORD *)(a5 + v16[6]) = v7;
  v17 = (uint64_t *)(a5 + v16[7]);
  *v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  v17[3] = v11;
  v18 = (_QWORD *)(a5 + v16[8]);
  *v18 = v13;
  v18[1] = v12;
  v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_213E05FBC(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_213EA48A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F04B48;
  if (!qword_253F04B48)
  {
    v1 = type metadata accessor for MessagesGroundTruth();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MessagesGroundTruth, v1);
    atomic_store(result, (unint64_t *)&qword_253F04B48);
  }
  return result;
}

uint64_t type metadata accessor for SuccessfulMessageDefinition()
{
  return objc_opt_self();
}

uint64_t method lookup function for SuccessfulMessageDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.successClassifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.identifySuccessClassification(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.isInitiatingEvent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.extractReferencedEntity(session:successClassification:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.extractUsoEntityFromSessionSlice(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SuccessfulMessageDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t ContactSuggestionStoreUpdate.init(source:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for ContactSuggestionStoreUpdate() + 20);
  v6 = sub_213EF1CF8();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t type metadata accessor for ContactSuggestionStoreUpdate()
{
  uint64_t result;

  result = qword_253F04CD8;
  if (!qword_253F04CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ContactSuggestionStoreUpdate.source.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactSuggestionStoreUpdate.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContactSuggestionStoreUpdate() + 20);
  v4 = sub_213EF1CF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PlusContactSuggestionStore.readAllNominated()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(void))(a2 + 40))();
  v3 = sub_213EA4AB8(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_213EA4AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[5];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = type metadata accessor for PlusContactSuggestion();
  v3 = MEMORY[0x24BDAC7A8](v16);
  v13[4] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v13 - v6;
  result = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v9 = 0;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v17 = *(_QWORD *)(v5 + 72);
    v13[1] = v1;
    v13[2] = v10;
    v14 = a1 + v10;
    v13[3] = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213E25084(v14 + v17 * v9, (uint64_t)v7);
      v11 = *(_QWORD *)&v7[*(int *)(v16 + 36)];
      if (*(_QWORD *)(v11 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v12 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v11 + 32));
        if (((*(_QWORD *)(v11 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          __asm { BR              X9 }
      }
      sub_213E250C8((uint64_t)v7);
      ++v9;
    }
    while (v9 != v15);
    return v18;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContactSuggestionStoreUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213EA4DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContactSuggestionStoreUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213EA4E68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213EA4EDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1CF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of PlusContactSuggestionStore.insert(pics:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.delete(pics:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.update(pics:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.resetStore()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.readAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.readAllContactReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.find(key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.find(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.delete(contactId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.delete(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.recordStoreUpdate(source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of PlusContactSuggestionStore.mostRecentStoreUpdate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

char *PartialRepetitionInferenceGroundTruthGenerator.__allocating_init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char *v6;

  v6 = sub_213EA70B0(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a1);
  return v6;
}

char *PartialRepetitionInferenceGroundTruthGenerator.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  char *v7;

  v6 = *v4;
  v7 = sub_213EA6FAC(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 8))(a1);
  return v7;
}

void sub_213EA503C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41[3];

  v1 = v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FeaturisedSession(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v39 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v39 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v39 - v17;
  v19 = swift_bridgeObjectRetain();
  FeaturisedSession.init(_:)(v19, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    sub_213DBB430((uint64_t)v5, (uint64_t)v18, type metadata accessor for FeaturisedSession);
    (*(void (**)(char *, _QWORD))(*(_QWORD *)(v2 + 88) + 176))(v18, *(_QWORD *)(v2 + 80));
    if (*(_QWORD *)(*(_QWORD *)v16 + 16))
    {
      swift_beginAccess();
      v27 = v1[5];
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        sub_213DCA7E4(v27+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * (v28 - 1), (uint64_t)v10, type metadata accessor for FeaturisedSession);
        sub_213DBB430((uint64_t)v10, (uint64_t)v13, type metadata accessor for FeaturisedSession);
        v29 = v1[9];
        v30 = v1[10];
        __swift_project_boxed_opaque_existential_1(v1 + 6, v29);
        if (((*(uint64_t (**)(char *, char *, uint64_t, uint64_t))(v30 + 8))(v13, v16, v29, v30) & 1) == 0)
        {
          sub_213EA5B4C();
          sub_213DCA828((uint64_t)v13, type metadata accessor for FeaturisedSession);
          sub_213EA55A0((uint64_t)v1, (uint64_t)v16);
          sub_213DCA828((uint64_t)v16, type metadata accessor for FeaturisedSession);
          v38 = (uint64_t)v18;
LABEL_20:
          sub_213DCA828(v38, type metadata accessor for FeaturisedSession);
          return;
        }
        sub_213DCA828((uint64_t)v13, type metadata accessor for FeaturisedSession);
      }
      sub_213EA55A0((uint64_t)v1, (uint64_t)v16);
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v31 = sub_213EF2724();
      __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
      swift_retain_n();
      v32 = sub_213EF270C();
      v33 = sub_213EF2C94();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v41[0] = v35;
        *(_DWORD *)v34 = 136315138;
        v39[1] = v34 + 4;
        v37 = v1[2];
        v36 = v1[3];
        swift_bridgeObjectRetain();
        v40 = sub_213DB0570(v37, v36, v41);
        sub_213EF2D9C();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v32, v33, "%s Skipping session as no turns of interest", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v35, -1, -1);
        MEMORY[0x2199C53C4](v34, -1, -1);
      }
      else
      {
        swift_release_n();
      }

    }
    sub_213DCA828((uint64_t)v16, type metadata accessor for FeaturisedSession);
    v38 = (uint64_t)v18;
    goto LABEL_20;
  }
  sub_213DAFEC4((uint64_t)v5, &qword_253F06AF0);
  if (qword_253F04A88 != -1)
    swift_once();
  v20 = sub_213EF2724();
  __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
  swift_retain();
  v21 = sub_213EF270C();
  v22 = sub_213EF2CA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v41[0] = v24;
    *(_DWORD *)v23 = 136315138;
    v25 = v1[2];
    v26 = v1[3];
    swift_bridgeObjectRetain();
    v40 = sub_213DB0570(v25, v26, v41);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v21, v22, "%s Could not create FeaturisedSession", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v24, -1, -1);
    MEMORY[0x2199C53C4](v23, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_213EA55A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v4 = type metadata accessor for FeaturisedSession(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DCA7E4(a2, (uint64_t)v7, v8);
  v9 = (unint64_t *)(a1 + 40);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 40);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 40) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_213DB6218(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_213DB6218(v12 > 1, v13 + 1, 1, v10);
    *v9 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  sub_213DBB430((uint64_t)v7, v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, type metadata accessor for FeaturisedSession);
  return swift_endAccess();
}

uint64_t sub_213EA56D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04810);
  v1 = MEMORY[0x24BDAC7A8](v63);
  v62 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v61 = (char *)&v49 - v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v60 = (uint64_t)&v49 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v49 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v49 - v9;
  v10 = type metadata accessor for SessionGroundTruths();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EA5B4C();
  swift_beginAccess();
  v13 = *(_QWORD *)(v0 + 32);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (!v14)
    return v15;
  v66 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_213DCD7C0(0, v14, 0);
  result = sub_213EA6F24(v13);
  v18 = result;
  v19 = 0;
  v20 = v13 + 64;
  v21 = *(_BYTE *)(v13 + 32);
  v50 = v13 + 80;
  v51 = v14;
  v54 = v13;
  v55 = v12;
  v52 = v17;
  v53 = v13 + 64;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << v21)
  {
    v24 = (unint64_t)v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(v13 + 36) != (_DWORD)v17)
      goto LABEL_27;
    v64 = v19;
    v65 = 1 << v18;
    v25 = v63;
    v26 = *(int *)(v63 + 48);
    v27 = *(_QWORD *)(v13 + 48);
    v28 = sub_213EF1D64();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v31 = (uint64_t)v58;
    v30(v58, v27 + *(_QWORD *)(v29 + 72) * v18, v28);
    v32 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v18);
    *(_QWORD *)(v31 + v26) = v32;
    v33 = (uint64_t)v59;
    v30(v59, v31, v28);
    *(_QWORD *)(v33 + *(int *)(v25 + 48)) = v32;
    v34 = v60;
    sub_213EA70F0(v33, v60);
    swift_bridgeObjectRetain_n();
    sub_213DAFEC4(v31, &qword_253F04810);
    v35 = *(int *)(v25 + 48);
    v36 = v61;
    v30(v61, v34, v28);
    v37 = *(_QWORD *)(v34 + v35);
    *(_QWORD *)&v36[v35] = v37;
    v38 = *(int *)(v25 + 48);
    v39 = v62;
    v30(v62, v34, v28);
    v40 = (uint64_t)v55;
    *(_QWORD *)&v39[v38] = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v40, v36, v28);
    *(_QWORD *)(v40 + *(int *)(v57 + 20)) = v37;
    v41 = *(void (**)(char *, uint64_t))(v29 + 8);
    swift_bridgeObjectRetain();
    v41(v39, v28);
    sub_213DAFEC4(v34, &qword_253F04810);
    v15 = v66;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_213DCD7C0(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v66;
    }
    v43 = *(_QWORD *)(v15 + 16);
    v42 = *(_QWORD *)(v15 + 24);
    v13 = v54;
    if (v43 >= v42 >> 1)
    {
      sub_213DCD7C0(v42 > 1, v43 + 1, 1);
      v15 = v66;
    }
    *(_QWORD *)(v15 + 16) = v43 + 1;
    result = sub_213DBB430(v40, v15+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
    v21 = *(_BYTE *)(v13 + 32);
    v22 = 1 << v21;
    if (v18 >= 1 << v21)
      goto LABEL_28;
    v20 = v53;
    v44 = *(_QWORD *)(v53 + 8 * v24);
    if ((v44 & v65) == 0)
      goto LABEL_29;
    LODWORD(v17) = v52;
    if (*(_DWORD *)(v13 + 36) != (_DWORD)v52)
      goto LABEL_30;
    v45 = v44 & (-2 << (v18 & 0x3F));
    if (v45)
    {
      v22 = __clz(__rbit64(v45)) | v18 & 0xFFFFFFFFFFFFFFC0;
      v23 = v51;
    }
    else
    {
      v46 = v24 + 1;
      v47 = (v22 + 63) >> 6;
      v23 = v51;
      if (v24 + 1 < v47)
      {
        v48 = *(_QWORD *)(v53 + 8 * v46);
        if (v48)
        {
LABEL_22:
          v22 = __clz(__rbit64(v48)) + (v46 << 6);
        }
        else
        {
          while (v47 - 2 != v24)
          {
            v48 = *(_QWORD *)(v50 + 8 * v24++);
            if (v48)
            {
              v46 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v19 = v64 + 1;
    v18 = v22;
    if (v64 + 1 == v23)
    {
      swift_bridgeObjectRelease();
      return v15;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_213EA5B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *@<X8>);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  void (*v36)(_QWORD *@<X8>);
  uint64_t result;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;

  v1 = sub_213EF1D64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v44 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SessionGroundTruths();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v0 + 40);
  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_213EA5EBC(v8);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v38 = v9;
    v39 = (_QWORD *)(v0 + 40);
    v11 = 0;
    v12 = *(int *)(v4 + 20);
    v13 = (_QWORD *)(v0 + 32);
    v14 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v40 = *(_QWORD *)(v5 + 72);
    v41 = v12;
    v15 = v44;
    while (1)
    {
      v43 = v10;
      v16 = v42;
      sub_213DCA7E4(v14, v42, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
      v17 = v2;
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      v19 = v1;
      v18(v15, v16, v1);
      v20 = *(_QWORD *)(v16 + v41);
      swift_bridgeObjectRetain();
      sub_213DCA828(v16, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
      swift_beginAccess();
      sub_213E65550((uint64_t)v11);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = (_QWORD *)*v13;
      v22 = v45;
      *v13 = 0x8000000000000000;
      v24 = sub_213DFA284(v15);
      v25 = v22[2];
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
        break;
      v28 = v23;
      if (v22[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_213E01FE0();
          v22 = v45;
        }
      }
      else
      {
        sub_213DFED0C(v27, isUniquelyReferenced_nonNull_native);
        v22 = v45;
        v29 = sub_213DFA284(v44);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_19;
        v24 = v29;
      }
      v1 = v19;
      *v13 = v22;
      swift_bridgeObjectRelease();
      v31 = (_QWORD *)*v13;
      v2 = v17;
      if ((v28 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v31[(v24 >> 6) + 8] |= 1 << v24;
        v32 = v31[6] + *(_QWORD *)(v17 + 72) * v24;
        swift_bridgeObjectRetain();
        v18(v32, v44, v1);
        *(_QWORD *)(v31[7] + 8 * v24) = MEMORY[0x24BEE4AF8];
        v33 = v31[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_18;
        v31[2] = v35;
      }
      swift_bridgeObjectRelease();
      sub_213DB5090(v20);
      v15 = v44;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v44, v1);
      swift_endAccess();
      v14 += v40;
      v11 = sub_213E65260;
      v10 = v43 - 1;
      if (v43 == 1)
      {
        swift_bridgeObjectRelease();
        v36 = sub_213E65260;
        v7 = v39;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v36 = 0;
LABEL_16:
    swift_beginAccess();
    *v7 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    return sub_213E65550((uint64_t)v36);
  }
  return result;
}

unint64_t sub_213EA5EBC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE v33[12];
  int v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39[2];

  v2 = v1;
  v39[1] = *MEMORY[0x24BDAC8D0];
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v37 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + 6;
  v9 = v1[9];
  v10 = v2[10];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v11 = sub_213DCC41C(a1, v9, v10);
  if (qword_253F04A88 != -1)
    swift_once();
  v12 = sub_213EF2724();
  __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_213EF270C();
  v14 = sub_213EF2C94();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v39[0] = v35;
    *(_DWORD *)v16 = 136315650;
    v34 = v15;
    v36 = v4;
    v18 = v2[2];
    v17 = v2[3];
    swift_bridgeObjectRetain();
    v38 = sub_213DB0570(v18, v17, v39);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    v38 = *(_QWORD *)(a1 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2048;
    v4 = v36;
    v38 = *(_QWORD *)(v11 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v13, (os_log_type_t)v34, "%s Grouped %ld sessions into %ld composite sessions based on restatements.", (uint8_t *)v16, 0x20u);
    v19 = v35;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v19, -1, -1);
    MEMORY[0x2199C53C4](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v20 = (char *)v2 + *(_QWORD *)(*v2 + 128);
  v21 = *(_QWORD *)(v4 + 88);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(v5, v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 64))(v5, v21);
  v39[0] = v22;
  sub_213DB507C(v23);
  v24 = v39[0];
  __swift_instantiateConcreteTypeFromMangledName(qword_253F04FB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  sub_213DAFDFC((uint64_t)v2 + *(_QWORD *)(*v2 + 136), inited + 32);
  v39[0] = v24;
  sub_213DB507C(inited);
  v26 = v39[0];
  type metadata accessor for PartialRepetitionGroundTruthGenerator(0, v5, v21, v27);
  v28 = (uint64_t)v37;
  (*(void (**)(_BYTE *, char *, uint64_t))(v6 + 16))(v37, v20, v5);
  v29 = PartialRepetitionGroundTruthGenerator.__allocating_init(_:)(v28);
  v30 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)&v33[-48] = v2;
  *(_QWORD *)&v33[-40] = v26;
  *(_QWORD *)&v33[-32] = a1;
  *(_QWORD *)&v33[-24] = v11;
  *(_QWORD *)&v33[-16] = v30;
  v31 = sub_213E44988((void (*)(uint64_t *))sub_213EA7204, (uint64_t)&v33[-64], v11);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_213EA62C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  size_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  os_log_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int v104;
  NSObject *v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  os_log_t isa;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(void);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;

  v111 = a5;
  v112 = a6;
  v117 = a7;
  v118 = a2;
  v109 = *a2;
  isa = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (size_t *)((char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for FeaturisedSession(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_213EF1D64();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v100 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v100 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v29 = *a1;
  if (!*(_QWORD *)(v29 + 16))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v39 = sub_213EF2724();
    __swift_project_value_buffer(v39, (uint64_t)qword_253F08A00);
    v40 = v118;
    swift_retain();
    v41 = sub_213EF270C();
    v42 = sub_213EF2CA0();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v120 = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = v40[2];
      v46 = v40[3];
      swift_bridgeObjectRetain();
      v119 = sub_213DB0570(v45, v46, &v120);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v41, v42, "%s Couldn't find session id for composite conversation. Skipping GT generation.", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v44, -1, -1);
      MEMORY[0x2199C53C4](v43, -1, -1);

    }
    else
    {

      swift_release();
    }
    goto LABEL_22;
  }
  v108 = v28;
  v30 = *(void (**)(void))(v27 + 16);
  v115 = v26;
  v116 = (char *)&v100 - v25;
  v113 = v27;
  v114 = v30;
  v30();
  v120 = v29;
  CompositeSession.combinedSession.getter(v12);
  if ((*(unsigned int (**)(size_t *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_213DAFEC4((uint64_t)v12, &qword_253F06AF0);
    if (qword_253F04A88 != -1)
      swift_once();
    v31 = sub_213EF2724();
    __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
    v32 = v118;
    swift_retain_n();
    v33 = sub_213EF270C();
    v34 = sub_213EF2CA0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v120 = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = v32[2];
      v38 = v32[3];
      swift_bridgeObjectRetain();
      v119 = sub_213DB0570(v37, v38, &v120);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v33, v34, "%s Couldn't get combinedSession. Skipping GT generation.", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v36, -1, -1);
      MEMORY[0x2199C53C4](v35, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v113 + 8))(v116, v115);
LABEL_22:
    v74 = v117;
    v75 = type metadata accessor for SessionGroundTruths();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 1, 1, v75);
  }
  v107 = v7;
  sub_213DBB430((uint64_t)v12, (uint64_t)v16, type metadata accessor for FeaturisedSession);
  v47 = MEMORY[0x24BEE4AF8];
  v120 = MEMORY[0x24BEE4AF8];
  v48 = *(_QWORD *)(a3 + 16);
  if (v48)
  {
    v49 = (_QWORD *)(a3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v51 = v49[3];
      v50 = v49[4];
      __swift_project_boxed_opaque_existential_1(v49, v51);
      v52 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v50 + 8))(v16, v120, v51, v50);
      sub_213DB4AF8(v52);
      v49 += 5;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    v47 = v120;
  }
  isa = (os_log_t)isa[2].isa;
  v106 = *(NSObject **)(v111 + 16);
  v53 = v21;
  if (qword_253F04A88 != -1)
    swift_once();
  v54 = sub_213EF2724();
  v55 = __swift_project_value_buffer(v54, (uint64_t)qword_253F08A00);
  v56 = v115;
  ((void (*)(char *, char *, uint64_t))v114)(v24, v116, v115);
  v57 = v118;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v58 = sub_213EF270C();
  v59 = sub_213EF2C94();
  v105 = v58;
  v104 = v59;
  if (os_log_type_enabled(v58, v59))
  {
    v60 = swift_slowAlloc();
    v103 = v53;
    v61 = v56;
    v62 = v60;
    v101 = swift_slowAlloc();
    v120 = v101;
    *(_DWORD *)v62 = 136315650;
    v63 = v57[2];
    v64 = v57[3];
    swift_bridgeObjectRetain();
    v119 = sub_213DB0570(v63, v64, &v120);
    v102 = v55;
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    sub_213E0B898();
    v65 = sub_213EF31F8();
    v119 = sub_213DB0570(v65, v66, &v120);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v111 = *(_QWORD *)(v113 + 8);
    ((void (*)(char *, uint64_t))v111)(v24, v61);
    *(_WORD *)(v62 + 22) = 2080;
    swift_bridgeObjectRetain();
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
    v68 = MEMORY[0x2199C44E8](v47, v67);
    v70 = v69;
    swift_bridgeObjectRelease();
    v119 = sub_213DB0570(v68, v70, &v120);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v71 = v105;
    _os_log_impl(&dword_213DAB000, v105, (os_log_type_t)v104, "%s Generated Classifications for composite session %s: %s", (uint8_t *)v62, 0x20u);
    v72 = v101;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v72, -1, -1);
    v73 = v62;
    v56 = v61;
    v53 = v103;
    MEMORY[0x2199C53C4](v73, -1, -1);

  }
  else
  {
    swift_release_n();
    v111 = *(_QWORD *)(v113 + 8);
    ((void (*)(char *, uint64_t))v111)(v24, v56);

    swift_bridgeObjectRelease_n();
  }
  v77 = sub_213DC7CB8(v16, v47, isa != v106);
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v114)(v53, v116, v56);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v78 = sub_213EF270C();
  v79 = sub_213EF2C94();
  v80 = v79;
  if (os_log_type_enabled(v78, v79))
  {
    v81 = swift_slowAlloc();
    v112 = swift_slowAlloc();
    v120 = v112;
    *(_DWORD *)v81 = 136315650;
    isa = v78;
    v82 = v57[2];
    v83 = v57[3];
    swift_bridgeObjectRetain();
    v119 = sub_213DB0570(v82, v83, &v120);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v81 + 12) = 2080;
    sub_213E0B898();
    v84 = sub_213EF31F8();
    v119 = sub_213DB0570(v84, v85, &v120);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    LODWORD(v118) = v80;
    v86 = (void (*)(char *, uint64_t))v111;
    ((void (*)(char *, uint64_t))v111)(v53, v115);
    *(_WORD *)(v81 + 22) = 2080;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v88 = MEMORY[0x2199C44E8](v77, AssociatedTypeWitness);
    v90 = v89;
    swift_bridgeObjectRelease();
    v119 = sub_213DB0570(v88, v90, &v120);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v91 = v86;
    swift_bridgeObjectRelease();
    v92 = isa;
    _os_log_impl(&dword_213DAB000, isa, (os_log_type_t)v118, "%s Generated Ground Truth for composite session %s: %s", (uint8_t *)v81, 0x20u);
    v93 = v112;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v93, -1, -1);
    v94 = v81;
    v56 = v115;
    MEMORY[0x2199C53C4](v94, -1, -1);

  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v91 = (void (*)(char *, uint64_t))v111;
    ((void (*)(char *, uint64_t))v111)(v53, v56);

    swift_bridgeObjectRelease();
  }
  v95 = v108;
  v96 = v116;
  ((void (*)(uint64_t, char *, uint64_t))v114)(v108, v116, v56);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
  v97 = sub_213EF2FF4();
  swift_bridgeObjectRelease();
  v91(v96, v56);
  v98 = v117;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 32))(v117, v95, v56);
  v99 = type metadata accessor for SessionGroundTruths();
  *(_QWORD *)(v98 + *(int *)(v99 + 20)) = v97;
  sub_213DCA828((uint64_t)v16, type metadata accessor for FeaturisedSession);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v98, 0, 1, v99);
}

uint64_t *PartialRepetitionInferenceGroundTruthGenerator.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 6));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  return v0;
}

uint64_t PartialRepetitionInferenceGroundTruthGenerator.__deallocating_deinit()
{
  PartialRepetitionInferenceGroundTruthGenerator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_213EA6EE0()
{
  return sub_213EA56D8();
}

void sub_213EA6F00()
{
  sub_213EA503C();
}

uint64_t sub_213EA6F24(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

char *sub_213EA6FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v15[2];

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  type metadata accessor for PartialRepetitionInferenceGroundTruthGenerator(0, v6, v7, a4);
  *((_QWORD *)v4 + 2) = static InferenceLogUtils.loggerTag<A>(_:)();
  *((_QWORD *)v4 + 3) = v8;
  v9 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v4 + 4) = sub_213DCB66C(MEMORY[0x24BEE4AF8]);
  *((_QWORD *)v4 + 5) = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 128)], a1, v6);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 80))(v6, v7);
  v11 = type metadata accessor for PartialRepetitionClassifier();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  v13 = (uint64_t *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 136)];
  v13[3] = v11;
  v13[4] = (uint64_t)&protocol witness table for PartialRepetitionClassifier;
  *v13 = v12;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v7 + 168))(v15, v6, v7);
  sub_213DB0BF0(v15, (uint64_t)(v4 + 48));
  return v4;
}

char *sub_213EA70B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for PartialRepetitionInferenceGroundTruthGenerator(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject();
  return sub_213EA6FAC(a1, v6, v7, v8);
}

uint64_t sub_213EA70F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213EA7138()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PartialRepetitionInferenceGroundTruthGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PartialRepetitionInferenceGroundTruthGenerator);
}

uint64_t method lookup function for PartialRepetitionInferenceGroundTruthGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PartialRepetitionInferenceGroundTruthGenerator.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of PartialRepetitionInferenceGroundTruthGenerator.reviewSession(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PartialRepetitionInferenceGroundTruthGenerator.reviewedSessionGroundTruth()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_213EA7204@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213EA62C4(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

ValueMetadata *type metadata accessor for OneMediaNominationGlobalFilter()
{
  return &type metadata for OneMediaNominationGlobalFilter;
}

uint64_t sub_213EA7238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = type metadata accessor for PlusMediaSuggestion();
  v3 = MEMORY[0x24BDAC7A8](v16);
  v13[4] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v13 - v6;
  result = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v9 = 0;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v13[1] = v1;
    v13[2] = v10;
    v14 = a1 + v10;
    v13[3] = MEMORY[0x24BEE4AF8];
    v17 = *(_QWORD *)(v5 + 72);
    v13[6] = "nominationBlocked";
    v13[7] = "Type_Song";
    v13[5] = "previouslyNominated";
    do
    {
      sub_213DE6348(v14 + v17 * v9, (uint64_t)v7);
      v11 = *(_QWORD *)&v7[*(int *)(v16 + 44)];
      if (*(_QWORD *)(v11 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v12 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v11 + 32));
        if (((*(_QWORD *)(v11 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          __asm { BR              X9 }
      }
      sub_213DEA4CC((uint64_t)v7);
      ++v9;
    }
    while (v9 != v15);
    return v18;
  }
  return result;
}

uint64_t sub_213EA75B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v15);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v13 = *(_QWORD *)(v2 + 72);
    v11[0] = a1;
    swift_bridgeObjectRetain();
    v5 = 0;
    v11[3] = "Type_Song";
    v11[1] = 0x8000000213F05500;
    v11[2] = "previouslyNominated";
    do
    {
      sub_213DE6348(v14 + v13 * v5, (uint64_t)v4);
      v6 = *(_QWORD *)&v4[*(int *)(v15 + 44)];
      if (*(_QWORD *)(v6 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v7 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v6 + 32));
        if (((*(_QWORD *)(v6 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
          __asm { BR              X9 }
      }
      ++v5;
      sub_213DEA4CC((uint64_t)v4);
    }
    while (v5 != v12);
    a1 = v11[0];
    swift_bridgeObjectRelease();
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_213EA7238(v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v9 + 16))
    return v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213EA78A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD *v17;

  if (*(_QWORD *)(a1 + 16) >= *(_QWORD *)(a2 + 16))
  {
    v17 = (_QWORD *)(a2 + 56);
    v5 = -1 << *(_BYTE *)(a2 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a2 + 56);
    v16 = (unint64_t)(63 - v5) >> 6;
    v8 = a1 + 56;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_26;
      goto LABEL_22;
    }
    if (v16 > 1)
    {
      v10 = v17[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (v16 > 2)
      {
        v10 = v17[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (v16 > 3)
        {
          v10 = v17[3];
          if (v10)
            goto LABEL_21;
          v12 = 4;
          if (v16 > 4)
          {
            v10 = v17[4];
            if (v10)
            {
              v11 = 4;
LABEL_21:
              v9 = __clz(__rbit64(v10)) + (v11 << 6);
              if (!*(_QWORD *)(a1 + 16))
              {
LABEL_26:
                v2 = 0;
LABEL_24:
                sub_213DB9C58();
                return v2;
              }
LABEL_22:
              sub_213E2B4BC(*(_QWORD *)(a1 + 40), *(_BYTE *)(*(_QWORD *)(a2 + 48) + v9));
              v14 = v13 & ~(-1 << *(_BYTE *)(a1 + 32));
              if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
                __asm { BR              X9 }
              v2 = 0;
              goto LABEL_24;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x213EA7D4CLL);
              }
              if (v11 >= v16)
                break;
              v10 = v17[v11];
              ++v12;
              if (v10)
                goto LABEL_21;
            }
          }
        }
      }
    }
    v2 = 1;
    goto LABEL_24;
  }
  return 0;
}

uint64_t sub_213EA7D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v14;
  _QWORD *v15;

  if (*(_QWORD *)(a1 + 16) >= *(_QWORD *)(a2 + 16))
  {
    v15 = (_QWORD *)(a2 + 56);
    v5 = -1 << *(_BYTE *)(a2 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a2 + 56);
    v14 = (unint64_t)(63 - v5) >> 6;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_25;
      goto LABEL_22;
    }
    if (v14 > 1)
    {
      v9 = v15[1];
      v10 = 1;
      if (v9)
        goto LABEL_21;
      v10 = 2;
      if (v14 > 2)
      {
        v9 = v15[2];
        if (v9)
          goto LABEL_21;
        v10 = 3;
        if (v14 > 3)
        {
          v9 = v15[3];
          if (v9)
            goto LABEL_21;
          v11 = 4;
          if (v14 > 4)
          {
            v9 = v15[4];
            if (v9)
            {
              v10 = 4;
LABEL_21:
              v8 = __clz(__rbit64(v9)) + (v10 << 6);
              if (!*(_QWORD *)(a1 + 16))
              {
LABEL_25:
                v2 = 0;
LABEL_23:
                sub_213DB9C58();
                return v2;
              }
LABEL_22:
              v12 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v8);
              sub_213EF32F4();
              __asm { BR              X8 }
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x213EA8264);
              }
              if (v10 >= v14)
                break;
              v9 = v15[v10];
              ++v11;
              if (v9)
                goto LABEL_21;
            }
          }
        }
      }
    }
    v2 = 1;
    goto LABEL_23;
  }
  return 0;
}

uint64_t sub_213EA82A0()
{
  uint64_t result;

  type metadata accessor for AdaptiveContactSuggestionGenerator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D40008);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3FF20 = 91;
  *(_QWORD *)algn_254D3FF28 = 0xE100000000000000;
  return result;
}

uint64_t AdaptiveContactSuggestionGenerator.__allocating_init(candidateProvider:domainTags:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  AdaptiveContactSuggestionGenerator.init(candidateProvider:domainTags:)(a1, a2);
  return v4;
}

_QWORD *AdaptiveContactSuggestionGenerator.init(candidateProvider:domainTags:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  type metadata accessor for SuggestionSignalScorerV1();
  v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B7E8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_213EF9F30;
  *(_QWORD *)(v6 + 56) = &type metadata for FixedNegativeSignalScoreModifier;
  *(_QWORD *)(v6 + 64) = &off_24D106FD8;
  *(_QWORD *)(v6 + 32) = 0xBFC999999999999ALL;
  *(_QWORD *)(v6 + 96) = &type metadata for AlwaysNegativeScoreModifier;
  *(_QWORD *)(v6 + 104) = &off_24D106828;
  *(_QWORD *)(v6 + 72) = 0xBFB999999999999ALL;
  *(_QWORD *)(v6 + 136) = &type metadata for ScoreLimitModifier;
  *(_QWORD *)(v6 + 144) = &off_24D1071B0;
  v7 = swift_allocObject();
  *(_QWORD *)(v6 + 112) = v7;
  *(_QWORD *)(v7 + 16) = 0x3FF0000000000000;
  *(_BYTE *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0xBFF0000000000000;
  *(_BYTE *)(v7 + 40) = 0;
  *(_QWORD *)(v5 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 24) = v6;
  type metadata accessor for ContactSuggestionCandidateProcessor();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  v8[5] = a1;
  v2[2] = v8;
  v2[3] = a1;
  v2[4] = a2;
  swift_retain();
  return v2;
}

uint64_t sub_213EA84A4()
{
  return swift_deallocObject();
}

uint64_t sub_213EA84B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12[3];
  _BYTE v13[48];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v2, (uint64_t)v13);
      sub_213DAFDFC((uint64_t)v13, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A748);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v10 = 0u;
        v11 = 0u;
        v9 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      if (*((_QWORD *)&v10 + 1))
      {
        sub_213DE638C(&v9, v12);
        sub_213DE638C(v12, &v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_213DB72A4(0, v3[2] + 1, 1, v3);
        v5 = v3[2];
        v4 = v3[3];
        if (v5 >= v4 >> 1)
          v3 = sub_213DB72A4((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
        v3[2] = v5 + 1;
        sub_213DE638C(&v9, &v3[6 * v5 + 4]);
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v9, &qword_254D3FF30);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_retain();
  v6 = sub_213EA97D4((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_release();
  v7 = sub_213DDDD2C(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_213EA8698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  int v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  int v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59[3];
  uint64_t v60;

  v5 = v4;
  v57 = a4;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v47 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - v20;
  if (sub_213EA9334(a1, v5, a2, a3))
  {
    v52 = a3;
    v55 = v10;
    if (qword_253F04A88 != -1)
      swift_once();
    v22 = sub_213EF2724();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v50(v21, a1, a2);
    v51 = v23;
    v24 = sub_213EF270C();
    v25 = sub_213EF2C94();
    v26 = os_log_type_enabled(v24, (os_log_type_t)v25);
    v53 = v5;
    v54 = a1;
    if (v26)
    {
      v48 = v25;
      v56 = v9;
      v49 = v19;
      v27 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v59[0] = v47;
      *(_DWORD *)v27 = 136315394;
      if (qword_254D3A070 != -1)
        swift_once();
      v28 = qword_254D3FF20;
      v29 = *(_QWORD *)algn_254D3FF28;
      swift_bridgeObjectRetain();
      v60 = sub_213DB0570(v28, v29, v59);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v30 = v58;
      (*(void (**)(uint64_t))(v57 + 24))(a2);
      v31 = sub_213EF1D10();
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v56);
      v60 = sub_213DB0570(v31, v33, v59);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v21, a2);
      _os_log_impl(&dword_213DAB000, v24, (os_log_type_t)v48, "%s Processing ground truth with id=%s", (uint8_t *)v27, 0x16u);
      v34 = v47;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v34, -1, -1);
      MEMORY[0x2199C53C4](v27, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v21, a2);

    }
    sub_213E0BA2C();
  }
  v56 = v9;
  if (qword_253F04A88 != -1)
    swift_once();
  v35 = sub_213EF2724();
  __swift_project_value_buffer(v35, (uint64_t)qword_253F08A00);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, a2);
  v36 = sub_213EF270C();
  v37 = sub_213EF2C94();
  if (os_log_type_enabled(v36, (os_log_type_t)v37))
  {
    LODWORD(v54) = v37;
    v55 = v10;
    v38 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v59[0] = v53;
    *(_DWORD *)v38 = 136315394;
    if (qword_254D3A070 != -1)
      swift_once();
    v39 = qword_254D3FF20;
    v40 = *(_QWORD *)algn_254D3FF28;
    swift_bridgeObjectRetain();
    v60 = sub_213DB0570(v39, v40, v59);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v41 = v58;
    (*(void (**)(uint64_t))(v57 + 24))(a2);
    v42 = sub_213EF1D10();
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v56);
    v60 = sub_213DB0570(v42, v44, v59);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, a2);
    _os_log_impl(&dword_213DAB000, v36, (os_log_type_t)v54, "%s Skipping non applicable ground truth with id=%s", (uint8_t *)v38, 0x16u);
    v45 = v53;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v45, -1, -1);
    MEMORY[0x2199C53C4](v38, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, a2);
  }

  return 0;
}

uint64_t sub_213EA8F18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlusContactSuggestion();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v13 = a1[1];
  if (qword_253F04A88 != -1)
    swift_once();
  v15 = sub_213EF2724();
  __swift_project_value_buffer(v15, (uint64_t)qword_253F08A00);
  sub_213E25084(a2, (uint64_t)v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_213EF270C();
  v17 = sub_213EF2C94();
  if (os_log_type_enabled(v16, v17))
  {
    v34 = a3;
    v35 = a4;
    v36 = a2;
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v38 = v19;
    *(_DWORD *)v18 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v39 = sub_213DB0570(v14, v13, &v38);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    v20 = *(_QWORD *)&v12[*(int *)(v10 + 44)];
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (__int128 *)(v20 + 32 * v21);
      v23 = *v22;
      v24 = *((_QWORD *)v22 + 2);
    }
    else
    {
      v24 = 0;
      v23 = 0uLL;
    }
    v39 = v23;
    *(_QWORD *)&v40 = v24;
    BYTE8(v40) = v21 == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B8C0);
    v25 = sub_213EF288C();
    *(_QWORD *)&v39 = sub_213DB0570(v25, v26, &v38);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213E250C8((uint64_t)v12);
    _os_log_impl(&dword_213DAB000, v16, v17, "    %s: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v19, -1, -1);
    MEMORY[0x2199C53C4](v18, -1, -1);

    a4 = v35;
    a2 = v36;
    a3 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213E250C8((uint64_t)v12);

  }
  v27 = *(_QWORD *)(a2 + *(int *)(v10 + 36));
  if ((sub_213EA7D8C(v27, *(_QWORD *)(a3 + 32)) & 1) != 0)
    return sub_213E25084(a2, a4);
  v29 = sub_213EF1D64();
  v30 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v37, 1, 1, v29);
  v39 = 0u;
  v40 = 0u;
  swift_bridgeObjectRetain();
  v31 = swift_bridgeObjectRetain();
  v32 = sub_213ECD040(v31, v27);
  sub_213E7BA00(v30, 0, (uint64_t *)&v39, 0, 0, 1, v32, 0, a4, 1, 0);
  swift_bridgeObjectRelease();
  return sub_213DAFEC4(v30, &qword_253F04828);
}

uint64_t AdaptiveContactSuggestionGenerator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AdaptiveContactSuggestionGenerator.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL sub_213EA9334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 24))(a3);
    swift_bridgeObjectRetain();
    v12 = sub_213DF2A1C(v11, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    swift_release();
    v14 = v13 != 0;
  }
  else
  {
    v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v14;
}

unint64_t sub_213EA9418(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;

  v53 = a2;
  v54 = a3;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40000);
  v5 = MEMORY[0x24BDAC7A8](v52);
  v51 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v50 = (uint64_t *)((char *)&v42 - v8);
  MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t *)((char *)&v42 - v9);
  v10 = type metadata accessor for PlusContactSuggestion();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (!v14)
    return v15;
  v42 = v3;
  v60 = MEMORY[0x24BEE4AF8];
  sub_213DCD300(0, v14, 0);
  result = sub_213EA6F20(a1);
  v18 = 0;
  v19 = a1 + 64;
  v55 = a1 + 80;
  v47 = v11;
  v48 = a1;
  v45 = a1 + 64;
  v46 = v13;
  v43 = v14;
  v44 = v17;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(a1 + 32))
  {
    v21 = result >> 6;
    if ((*(_QWORD *)(v19 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v56 = v18;
    v57 = 1 << result;
    v22 = v52;
    v23 = v49;
    v24 = (uint64_t)v49 + *(int *)(v52 + 48);
    v25 = *(_QWORD *)(a1 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * result);
    v28 = *v26;
    v27 = v26[1];
    v30 = v26[2];
    v29 = v26[3];
    *v49 = *v26;
    v23[1] = v27;
    v23[2] = v30;
    v23[3] = v29;
    v58 = *(_QWORD *)(v11 + 72);
    v59 = result;
    sub_213E25084(v25 + v58 * result, v24);
    v31 = v50;
    *v50 = v28;
    v31[1] = v27;
    v31[2] = v30;
    v31[3] = v29;
    sub_213E25084(v24, (uint64_t)v31 + *(int *)(v22 + 48));
    v32 = v51;
    sub_213EA9920((uint64_t)v31, v51);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v33 = (uint64_t)v23;
    v34 = (uint64_t)v46;
    sub_213DAFEC4(v33, &qword_254D40000);
    v53(v32, v32 + *(int *)(v22 + 48));
    sub_213DAFEC4(v32, &qword_254D40000);
    v15 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_213DCD300(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v60;
    }
    v36 = *(_QWORD *)(v15 + 16);
    v35 = *(_QWORD *)(v15 + 24);
    v11 = v47;
    if (v36 >= v35 >> 1)
    {
      sub_213DCD300(v35 > 1, v36 + 1, 1);
      v15 = v60;
    }
    *(_QWORD *)(v15 + 16) = v36 + 1;
    result = sub_213DF8B18(v34, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ v36 * v58);
    a1 = v48;
    v20 = 1 << *(_BYTE *)(v48 + 32);
    if (v59 >= v20)
      goto LABEL_27;
    v19 = v45;
    v37 = *(_QWORD *)(v45 + 8 * v21);
    if ((v37 & v57) == 0)
      goto LABEL_28;
    LODWORD(v17) = v44;
    if (*(_DWORD *)(v48 + 36) != (_DWORD)v44)
      goto LABEL_29;
    v38 = v37 & (-2 << (v59 & 0x3F));
    if (v38)
    {
      v20 = __clz(__rbit64(v38)) | v59 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = v21 + 1;
      v40 = (unint64_t)(v20 + 63) >> 6;
      if (v21 + 1 < v40)
      {
        v41 = *(_QWORD *)(v45 + 8 * v39);
        if (v41)
        {
LABEL_22:
          v20 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v21)
          {
            v41 = *(_QWORD *)(v55 + 8 * v21++);
            if (v41)
            {
              v39 = v21 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v18 = v56 + 1;
    result = v20;
    if (v56 + 1 == v43)
      return v15;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_213EA97D4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  result = MEMORY[0x24BEE4AF8];
  v9 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (uint64_t *)(a1 + 72);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v8 = __swift_project_boxed_opaque_existential_1(v4 - 5, v5);
      if (sub_213EA8698((uint64_t)v8, v5, v6, v7))
      {
        MEMORY[0x2199C44C4]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v4 += 6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t type metadata accessor for AdaptiveContactSuggestionGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdaptiveContactSuggestionGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdaptiveContactSuggestionGenerator.__allocating_init(candidateProvider:domainTags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AdaptiveContactSuggestionGenerator.processGroundTruths(groundTruthList:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_213EA9918@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213EA8F18(a1, a2, v3, a3);
}

uint64_t sub_213EA9920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static MediaSuggestionManager.EnablementStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MediaSuggestionManager.EnablementStatus.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t sub_213EA99A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F4C776F64616873;
  if (*v0 != 1)
    v1 = 0x64656C62616E65;
  if (*v0)
    return v1;
  else
    return 0x64656C6261736964;
}

uint64_t sub_213EA9A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213EAAA04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213EA9A30()
{
  sub_213EA9DD4();
  return sub_213EF3354();
}

uint64_t sub_213EA9A58()
{
  sub_213EA9DD4();
  return sub_213EF3360();
}

uint64_t sub_213EA9A80()
{
  sub_213EA9EA0();
  return sub_213EF3354();
}

uint64_t sub_213EA9AA8()
{
  sub_213EA9EA0();
  return sub_213EF3360();
}

uint64_t sub_213EA9AD0()
{
  sub_213EA9E18();
  return sub_213EF3354();
}

uint64_t sub_213EA9AF8()
{
  sub_213EA9E18();
  return sub_213EF3360();
}

uint64_t sub_213EA9B20()
{
  sub_213EA9E5C();
  return sub_213EF3354();
}

uint64_t sub_213EA9B48()
{
  sub_213EA9E5C();
  return sub_213EF3360();
}

uint64_t MediaSuggestionManager.EnablementStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40010);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40018);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40020);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40028);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213EA9DD4();
  sub_213EF3348();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_213EA9E5C();
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_213EA9E18();
      v16 = v21;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_213EA9EA0();
    sub_213EF3168();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_213EA9DD4()
{
  unint64_t result;

  result = qword_254D40030;
  if (!qword_254D40030)
  {
    result = MEMORY[0x2199C52D4](&unk_213F013AC, &type metadata for MediaSuggestionManager.EnablementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40030);
  }
  return result;
}

unint64_t sub_213EA9E18()
{
  unint64_t result;

  result = qword_254D40038;
  if (!qword_254D40038)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0135C, &type metadata for MediaSuggestionManager.EnablementStatus.EnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40038);
  }
  return result;
}

unint64_t sub_213EA9E5C()
{
  unint64_t result;

  result = qword_254D40040;
  if (!qword_254D40040)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0130C, &type metadata for MediaSuggestionManager.EnablementStatus.ShadowLoggingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40040);
  }
  return result;
}

unint64_t sub_213EA9EA0()
{
  unint64_t result;

  result = qword_254D40048;
  if (!qword_254D40048)
  {
    result = MEMORY[0x2199C52D4](&unk_213F012BC, &type metadata for MediaSuggestionManager.EnablementStatus.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40048);
  }
  return result;
}

uint64_t MediaSuggestionManager.EnablementStatus.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t MediaSuggestionManager.EnablementStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40050);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40058);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40060);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40068);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213EA9DD4();
  v13 = v41;
  sub_213EF333C();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_213EF3150();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_213EF2F34();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v25 = &type metadata for MediaSuggestionManager.EnablementStatus;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_213EA9E5C();
      v20 = v9;
      sub_213EF30E4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_213EA9E18();
      v28 = v15;
      sub_213EF30E4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_213EA9EA0();
    sub_213EF30E4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1Tm(v26);
}

uint64_t sub_213EAA36C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MediaSuggestionManager.EnablementStatus.init(from:)(a1, a2);
}

uint64_t sub_213EAA380(_QWORD *a1)
{
  return MediaSuggestionManager.EnablementStatus.encode(to:)(a1);
}

_QWORD *MediaSuggestionManager.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (_QWORD *)swift_allocObject();
  v1 = type metadata accessor for InferenceFeatures.InferenceFeatureManager();
  swift_allocObject();
  v2 = InferenceFeatures.InferenceFeatureManager.init()();
  v3 = MEMORY[0x24BEA4D80];
  v0[5] = v1;
  v0[6] = v3;
  v0[2] = v2;
  return v0;
}

_QWORD *MediaSuggestionManager.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for InferenceFeatures.InferenceFeatureManager();
  swift_allocObject();
  v2 = InferenceFeatures.InferenceFeatureManager.init()();
  v3 = MEMORY[0x24BEA4D80];
  v0[5] = v1;
  v0[6] = v3;
  v0[2] = v2;
  return v0;
}

uint64_t sub_213EAA454@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  char v10;
  char v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = (_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  if (qword_253F04F18 != -1)
    swift_once();
  v5 = qword_253F04F10;
  v6 = sub_213EF2160();
  v7 = MEMORY[0x24BEA4C48];
  v13 = v6;
  v14 = MEMORY[0x24BEA4C48];
  v12[0] = v5;
  swift_retain();
  v8 = sub_213EF2310();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  if ((v8 & 1) != 0)
  {
    v10 = 2;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v4, *(_QWORD *)(v2 + 40));
    if (qword_253F070D0 != -1)
      swift_once();
    v13 = v6;
    v14 = v7;
    v12[0] = qword_253F070C0;
    swift_retain();
    v11 = sub_213EF2310();
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    v10 = v11 & 1;
  }
  *a1 = v10;
  return result;
}

uint64_t MediaSuggestionManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t MediaSuggestionManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

unint64_t sub_213EAA5E8()
{
  unint64_t result;

  result = qword_254D40070;
  if (!qword_254D40070)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaSuggestionManager.EnablementStatus, &type metadata for MediaSuggestionManager.EnablementStatus);
    atomic_store(result, (unint64_t *)&qword_254D40070);
  }
  return result;
}

uint64_t type metadata accessor for MediaSuggestionManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaSuggestionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaSuggestionManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MediaSuggestionManager.fetchStatus()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

ValueMetadata *type metadata accessor for MediaSuggestionManager.EnablementStatus()
{
  return &type metadata for MediaSuggestionManager.EnablementStatus;
}

uint64_t _s28SiriPrivateLearningInference22MediaSuggestionManagerC16EnablementStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213EAA6CC + 4 * byte_213F00F75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213EAA700 + 4 * byte_213F00F70[v4]))();
}

uint64_t sub_213EAA700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213EAA708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213EAA710);
  return result;
}

uint64_t sub_213EAA71C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213EAA724);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213EAA728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213EAA730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaSuggestionManager.EnablementStatus.CodingKeys()
{
  return &type metadata for MediaSuggestionManager.EnablementStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaSuggestionManager.EnablementStatus.DisabledCodingKeys()
{
  return &type metadata for MediaSuggestionManager.EnablementStatus.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for MediaSuggestionManager.EnablementStatus.ShadowLoggingCodingKeys()
{
  return &type metadata for MediaSuggestionManager.EnablementStatus.ShadowLoggingCodingKeys;
}

ValueMetadata *type metadata accessor for MediaSuggestionManager.EnablementStatus.EnabledCodingKeys()
{
  return &type metadata for MediaSuggestionManager.EnablementStatus.EnabledCodingKeys;
}

unint64_t sub_213EAA780()
{
  unint64_t result;

  result = qword_254D40078;
  if (!qword_254D40078)
  {
    result = MEMORY[0x2199C52D4](&unk_213F01294, &type metadata for MediaSuggestionManager.EnablementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40078);
  }
  return result;
}

unint64_t sub_213EAA7C8()
{
  unint64_t result;

  result = qword_254D40080;
  if (!qword_254D40080)
  {
    result = MEMORY[0x2199C52D4](&unk_213F011B4, &type metadata for MediaSuggestionManager.EnablementStatus.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40080);
  }
  return result;
}

unint64_t sub_213EAA810()
{
  unint64_t result;

  result = qword_254D40088;
  if (!qword_254D40088)
  {
    result = MEMORY[0x2199C52D4](&unk_213F011DC, &type metadata for MediaSuggestionManager.EnablementStatus.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40088);
  }
  return result;
}

unint64_t sub_213EAA858()
{
  unint64_t result;

  result = qword_254D40090;
  if (!qword_254D40090)
  {
    result = MEMORY[0x2199C52D4](&unk_213F01164, &type metadata for MediaSuggestionManager.EnablementStatus.ShadowLoggingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40090);
  }
  return result;
}

unint64_t sub_213EAA8A0()
{
  unint64_t result;

  result = qword_254D40098;
  if (!qword_254D40098)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0118C, &type metadata for MediaSuggestionManager.EnablementStatus.ShadowLoggingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D40098);
  }
  return result;
}

unint64_t sub_213EAA8E8()
{
  unint64_t result;

  result = qword_254D400A0;
  if (!qword_254D400A0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F01114, &type metadata for MediaSuggestionManager.EnablementStatus.EnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D400A0);
  }
  return result;
}

unint64_t sub_213EAA930()
{
  unint64_t result;

  result = qword_254D400A8;
  if (!qword_254D400A8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0113C, &type metadata for MediaSuggestionManager.EnablementStatus.EnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D400A8);
  }
  return result;
}

unint64_t sub_213EAA978()
{
  unint64_t result;

  result = qword_254D400B0;
  if (!qword_254D400B0)
  {
    result = MEMORY[0x2199C52D4](&unk_213F01204, &type metadata for MediaSuggestionManager.EnablementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D400B0);
  }
  return result;
}

unint64_t sub_213EAA9C0()
{
  unint64_t result;

  result = qword_254D400B8;
  if (!qword_254D400B8)
  {
    result = MEMORY[0x2199C52D4](&unk_213F0122C, &type metadata for MediaSuggestionManager.EnablementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D400B8);
  }
  return result;
}

uint64_t sub_213EAAA04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F4C776F64616873 && a2 == 0xED0000676E696767 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t dispatch thunk of EventStreamDefinition.events(since:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_213E4141C;
  return v11(a1, a2, a3, a4);
}

Swift::Bool __swiftcall ContactPartialRepetititonDefinition.doesSessionHaveOutOfScopeEntityPromptClassification(classifications:)(Swift::OpaquePointer classifications)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *rawValue;
  char *v28;
  _BYTE v29[40];
  _BYTE v30[40];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&rawValue - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EntityPromptClassification();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&rawValue - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&rawValue - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&rawValue - v13;
  v15 = *((_QWORD *)classifications._rawValue + 2);
  if (!v15)
  {
    v17 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v22)
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v16 = (char *)classifications._rawValue + 32;
  rawValue = classifications._rawValue;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x24BEE4AF8];
  v28 = v12;
  do
  {
    sub_213DAFDFC((uint64_t)v16, (uint64_t)v30);
    sub_213DAFDFC((uint64_t)v30, (uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
    v18 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v18 ^ 1u, 1, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_213E34CA4((uint64_t)v4);
    }
    else
    {
      sub_213DC79FC((uint64_t)v4, (uint64_t)v14);
      sub_213DC79FC((uint64_t)v14, (uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_213DB5648(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_213DB5648(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      v21 = v17
          + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
          + *(_QWORD *)(v6 + 72) * v20;
      v12 = v28;
      sub_213DC79FC((uint64_t)v28, v21);
    }
    v16 += 40;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v17 + 16);
  if (!v22)
    goto LABEL_17;
LABEL_12:
  v23 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v24 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_213DC7A5C(v23, (uint64_t)v9);
    v25 = *((_QWORD *)v9 + 6);
    sub_213DC7AA0((uint64_t)v9);
    if (v25)
      break;
    v23 += v24;
    if (!--v22)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

double *sub_213EAAEE8@<X0>(uint64_t a1@<X0>, double **a2@<X8>)
{
  uint64_t v4;

  v4 = MEMORY[0x2199C52D4](&protocol conformance descriptor for MessagesContactPartialRepetitionDefinition, a1);
  return ContactPartialRepetititonDefinition.getSessionStitcher()(a1, v4, a2);
}

double *ContactPartialRepetititonDefinition.getSessionStitcher()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double **a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double *result;

  v5 = *(_QWORD *)(a2 + 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 80))(a1, v5);
  v7 = type metadata accessor for PartialRepetitionClassifier();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  v9 = (*(double (**)(uint64_t, uint64_t))(v5 + 88))(a1, v5);
  v10 = type metadata accessor for RestatementSessionStitcher();
  result = (double *)swift_allocObject();
  *((_QWORD *)result + 6) = v7;
  *((_QWORD *)result + 7) = &protocol witness table for PartialRepetitionClassifier;
  *((_QWORD *)result + 3) = v8;
  result[2] = v9;
  a3[3] = (double *)v10;
  a3[4] = (double *)&protocol witness table for RestatementSessionStitcher;
  *a3 = result;
  return result;
}

double *sub_213EAAFF0@<X0>(uint64_t a1@<X0>, double **a2@<X8>)
{
  uint64_t v4;

  v4 = MEMORY[0x2199C52D4](&protocol conformance descriptor for PhoneCallContactPartialRepetitionDefinition, a1);
  return ContactPartialRepetititonDefinition.getSessionStitcher()(a1, v4, a2);
}

uint64_t dispatch thunk of ContactPartialRepetititonDefinition.turnLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_213EAB03C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C8E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_213DAFEC4(a1, &qword_254D3C8E0);
    sub_213DC4014(a2, (uint64_t)v8);
    v13 = sub_213EF1D64();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_213DAFEC4((uint64_t)v8, &qword_254D3C8E0);
  }
  else
  {
    sub_213DC4990(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_213E24824((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_213EF1D64();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_213EAB1B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_213DB0BF0((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_213E24AFC(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return sub_213DC497C(a2, a3);
  }
  else
  {
    sub_213DAFEC4(a1, &qword_254D3E810);
    sub_213DC4148(a2, a3, (uint64_t)v9);
    sub_213DC497C(a2, a3);
    return sub_213DAFEC4((uint64_t)v9, &qword_254D3E810);
  }
}

uint64_t StreamRegistry.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_213DCBBC0(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t StreamRegistry.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_213DCBBC0(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t sub_213EAB2F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10[5];

  v6 = *a1;
  v7 = a1[1];
  v10[3] = a3;
  v10[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_beginAccess();
  sub_213E03404(v6, v7);
  sub_213EAB1B4((uint64_t)v10, v6, v7);
  return swift_endAccess();
}

double sub_213EAB388@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  double result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD v32[6];

  v7 = *a1;
  v6 = a1[1];
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v8 + 16))
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
LABEL_9:
    sub_213DAFEC4((uint64_t)&v29, &qword_254D3E810);
    if (qword_253F04A88 != -1)
      swift_once();
    v12 = sub_213EF2724();
    __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
    sub_213E03404(v7, v6);
    sub_213E03404(v7, v6);
    v13 = sub_213EF270C();
    v14 = sub_213EF2C94();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)&v29 = v16;
      *(_DWORD *)v15 = 136315138;
      v32[0] = v7;
      v32[1] = v6;
      sub_213E03404(v7, v6);
      v17 = sub_213EF288C();
      v32[0] = sub_213DB0570(v17, v18, (uint64_t *)&v29);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DC497C(v7, v6);
      sub_213DC497C(v7, v6);
      _os_log_impl(&dword_213DAB000, v13, v14, "No stream  registered for identifier %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v16, -1, -1);
      MEMORY[0x2199C53C4](v15, -1, -1);
    }
    else
    {
      sub_213DC497C(v7, v6);
      sub_213DC497C(v7, v6);
    }

    goto LABEL_21;
  }
  sub_213E03404(v7, v6);
  swift_bridgeObjectRetain();
  v9 = sub_213DFA734(v7, v6);
  if ((v10 & 1) != 0)
  {
    sub_213DAFDFC(*(_QWORD *)(v8 + 56) + 40 * v9, (uint64_t)&v29);
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_213DC497C(v7, v6);
  if (!*((_QWORD *)&v30 + 1))
    goto LABEL_9;
  sub_213DB0BF0(&v29, (uint64_t)v32);
  sub_213DAFDFC((uint64_t)v32, (uint64_t)&v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3E818);
  swift_getExtendedExistentialTypeMetadata();
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    sub_213DB0BF0(v28, a3);
    return result;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v19 = sub_213EF2724();
  __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
  sub_213E03404(v7, v6);
  sub_213E03404(v7, v6);
  v20 = sub_213EF270C();
  v21 = sub_213EF2CA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v28[0] = v27;
    *(_DWORD *)v22 = 136315394;
    *(_QWORD *)&v29 = v7;
    *((_QWORD *)&v29 + 1) = v6;
    sub_213E03404(v7, v6);
    v23 = sub_213EF288C();
    *(_QWORD *)&v29 = sub_213DB0570(v23, v24, (uint64_t *)v28);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DC497C(v7, v6);
    sub_213DC497C(v7, v6);
    *(_WORD *)(v22 + 12) = 2080;
    *(_QWORD *)&v29 = a2;
    swift_getMetatypeMetadata();
    v25 = sub_213EF288C();
    *(_QWORD *)&v29 = sub_213DB0570(v25, v26, (uint64_t *)v28);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v20, v21, "Attempted to retrieve stream %s with incorrect event type of %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v27, -1, -1);
    MEMORY[0x2199C53C4](v22, -1, -1);

  }
  else
  {

    sub_213DC497C(v7, v6);
    sub_213DC497C(v7, v6);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
LABEL_21:
  *(_QWORD *)(a3 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t StreamRegistry.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StreamRegistry.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StreamRegistry()
{
  return objc_opt_self();
}

uint64_t method lookup function for StreamRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StreamRegistry.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of StreamRegistry.registerStream<A>(identifier:stream:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of StreamRegistry.resolveStream<A>(identifier:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t QuickHangupClassification.init(siriCallTurn:hangupEvent:usoQuery:endTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, unint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, uint64_t);
  int *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t result;

  v13 = sub_213EF1D64();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16);
  v15(a7, a1, v13);
  v16 = (int *)type metadata accessor for QuickHangupClassification();
  v17 = (_QWORD *)(a7 + v16[5]);
  *v17 = a2;
  v17[1] = a3;
  v18 = a7 + v16[7];
  *(_QWORD *)v18 = a5;
  *(_BYTE *)(v18 + 8) = a6 & 1;
  *(_QWORD *)(a7 + v16[6]) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
  v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_213EF53E0;
  v15(v20 + v19, a1, v13);
  *(_QWORD *)(a7 + v16[8]) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v21 + 32) = a2;
  *(_QWORD *)(v21 + 40) = a3;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  swift_bridgeObjectRetain();
  result = v22(a1, v13);
  *(_QWORD *)(a7 + v16[9]) = v21;
  return result;
}

uint64_t type metadata accessor for QuickHangupClassification()
{
  uint64_t result;

  result = qword_253F06C48;
  if (!qword_253F06C48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t QuickHangupClassification.siriCallTurn.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t QuickHangupClassification.hangupEvent.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuickHangupClassification() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t QuickHangupClassification.usoQuery.getter()
{
  type metadata accessor for QuickHangupClassification();
  return swift_retain();
}

uint64_t QuickHangupClassification.endTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuickHangupClassification() + 28));
}

uint64_t QuickHangupClassification.callEventId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuickHangupClassification() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t QuickHangupClassification.referencedTurns.getter()
{
  type metadata accessor for QuickHangupClassification();
  return swift_bridgeObjectRetain();
}

uint64_t QuickHangupClassification.referencedEvents.getter()
{
  type metadata accessor for QuickHangupClassification();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213EABBDC(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_213EABBF0()
{
  return swift_retain();
}

uint64_t sub_213EABBFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_213EABC30()
{
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for QuickHangupClassification(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)a1 + v13;
    v16 = (char *)a2 + v13;
    v15[8] = v16[8];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for QuickHangupClassification(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuickHangupClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QuickHangupClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for QuickHangupClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for QuickHangupClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickHangupClassification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213EAC0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for QuickHangupClassification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213EAC12C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_213EAC1A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213EAC23C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213EAC28C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  if (((*(uint64_t (**)(void))(v1 + 96))() & 1) != 0)
  {
    v3 = (_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)(v1 + 40);
    v4 = *(_QWORD *)(v1 + 48);
  }
  else
  {
    v3 = (_QWORD *)(v1 + 56);
    v5 = *(_QWORD *)(v1 + 80);
    v4 = *(_QWORD *)(v1 + 88);
  }
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v5, v4) & 1;
}

uint64_t sub_213EAC2F8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  swift_release();
  return v0;
}

uint64_t sub_213EAC324()
{
  sub_213EAC2F8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FilterBranch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FilterBranch);
}

uint64_t sub_213EAC350(uint64_t a1)
{
  return sub_213EAC28C(a1) & 1;
}

uint64_t RestatementSessionStitcher.__allocating_init(maximumTimeDeltaBetweenTurns:restatementClassifier:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = sub_213EAD944(v7, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v8;
}

uint64_t sub_213EAC3D4()
{
  uint64_t result;

  type metadata accessor for RestatementSessionStitcher();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C90);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06C78 = 91;
  unk_253F06C80 = 0xE100000000000000;
  return result;
}

uint64_t RestatementSessionStitcher.init(maximumTimeDeltaBetweenTurns:restatementClassifier:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_213EAD8E4((uint64_t)v9, v2, v5, v6, a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v11;
}

uint64_t sub_213EAC504(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  os_log_t v56;
  uint64_t *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  os_log_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123[3];

  v5 = sub_213EF1D64();
  v116 = *(_QWORD *)(v5 - 8);
  v117 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v107 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for TurnPairRestatementClassification();
  MEMORY[0x24BDAC7A8](v108);
  v109 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = (os_log_t)type metadata accessor for FeaturisedSession(0);
  MEMORY[0x24BDAC7A8](v112);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_253F069C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B8);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v114 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v115 = (uint64_t)&v102 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v111 = (uint64_t)&v102 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v118 = (uint64_t)&v102 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v119 = (uint64_t)&v102 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v110 = (uint64_t)&v102 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v102 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v102 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v102 - v33;
  v113 = a1;
  sub_213EAD00C(a1, a2, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_213DAFEC4((uint64_t)v12, qword_253F069C0);
    if (qword_253F04A88 != -1)
      swift_once();
    v35 = sub_213EF2724();
    __swift_project_value_buffer(v35, (uint64_t)qword_253F08A00);
    v36 = sub_213EF270C();
    v37 = sub_213EF2C94();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      *(_QWORD *)&v123[0] = v39;
      *(_DWORD *)v38 = 136315138;
      if (qword_253F06C88 != -1)
        swift_once();
      v40 = qword_253F06C78;
      v41 = unk_253F06C80;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v120 = sub_213DB0570(v40, v41, (uint64_t *)v123);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v36, v37, "%s No adjacent turns between sessions", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v39, -1, -1);
      MEMORY[0x2199C53C4](v38, -1, -1);
    }

  }
  else
  {
    v42 = *(int *)(v13 + 48);
    v43 = (uint64_t)&v34[v42];
    v106 = (uint64_t *)v9;
    v44 = (uint64_t)&v12[v42];
    sub_213DB0B5C((uint64_t)v12, (uint64_t)v34);
    sub_213DB0B5C(v44, v43);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FF8);
    v45 = *(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8);
    v46 = *(_QWORD *)(v45 + 72);
    v47 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_213EF44B0;
    v49 = v48 + v47;
    v50 = (uint64_t)&v32[*(int *)(v13 + 48)];
    sub_213DAFDB8((uint64_t)v34, (uint64_t)v32);
    sub_213DAFDB8(v43, v50);
    v102 = v32;
    sub_213DB0B5C((uint64_t)v32, v49);
    v51 = v49 + v46;
    v104 = v13;
    v52 = (uint64_t)&v29[*(int *)(v13 + 48)];
    v105 = v34;
    sub_213DAFDB8((uint64_t)v34, (uint64_t)v29);
    v103 = v43;
    sub_213DAFDB8(v43, v52);
    v53 = v51;
    v54 = v106;
    sub_213DB0B5C(v52, v53);
    sub_213DCA828((uint64_t)v29, type metadata accessor for FeaturisedTurn);
    sub_213DCA828(v50, type metadata accessor for FeaturisedTurn);
    v56 = v112;
    v55 = v113;
    v57 = *(uint64_t **)(v116 + 16);
    ((void (*)(char *, char *, uint64_t))v57)((char *)v54 + SHIDWORD(v112[2].isa), (char *)v113 + SHIDWORD(v112[2].isa), v117);
    sub_213DCC3D8((uint64_t)v55 + SLODWORD(v56[3].isa), (uint64_t)v54 + SLODWORD(v56[3].isa), &qword_253F04828);
    *v54 = v48;
    v58 = v2 + 3;
    v59 = v2[6];
    v60 = v2[7];
    __swift_project_boxed_opaque_existential_1(v58, v59);
    v61 = FeaturisedSessionClassifier.classify(session:)((uint64_t)v54, v59, v60);
    if (*(_QWORD *)(v61 + 16))
    {
      sub_213DAFDFC(v61 + 32, (uint64_t)&v120);
    }
    else
    {
      v122 = 0;
      v120 = 0u;
      v121 = 0u;
    }
    v63 = v118;
    v62 = v119;
    swift_bridgeObjectRelease();
    v64 = (uint64_t)v105;
    v65 = v104;
    if (*((_QWORD *)&v121 + 1))
    {
      sub_213DB0BF0(&v120, (uint64_t)v123);
      sub_213DB0BF0(v123, (uint64_t)&v120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v66 = (uint64_t)v109;
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_213DCA828(v66, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        sub_213DCA828((uint64_t)v54, type metadata accessor for FeaturisedSession);
        sub_213DAFEC4(v64, &qword_253F069B8);
        return 1;
      }
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v120, &qword_253F06998);
    }
    v113 = v57;
    if (qword_253F04A88 != -1)
      swift_once();
    v68 = sub_213EF2724();
    __swift_project_value_buffer(v68, (uint64_t)qword_253F08A00);
    v69 = v110;
    v70 = v110 + *(int *)(v65 + 48);
    sub_213DAFDB8(v64, v110);
    v71 = v103;
    sub_213DAFDB8(v103, v70);
    sub_213DCC3D8(v69, v62, &qword_253F069B8);
    sub_213EADA00(v69, v63);
    v72 = v111;
    v73 = v111 + *(int *)(v65 + 48);
    sub_213DAFDB8(v64, v111);
    sub_213DAFDB8(v71, v73);
    v74 = v115;
    sub_213DCC3D8(v72, v115, &qword_253F069B8);
    v75 = v114;
    sub_213EADA00(v72, v114);
    v76 = sub_213EF270C();
    v77 = sub_213EF2C94();
    if (os_log_type_enabled(v76, (os_log_type_t)v77))
    {
      LODWORD(v111) = v77;
      v112 = v76;
      v78 = swift_slowAlloc();
      v110 = swift_slowAlloc();
      *(_QWORD *)&v123[0] = v110;
      *(_DWORD *)v78 = 136315650;
      if (qword_253F06C88 != -1)
        swift_once();
      v79 = qword_253F06C78;
      v80 = unk_253F06C80;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v120 = sub_213DB0570(v79, v80, (uint64_t *)v123);
      v109 = (char *)&v120 + 8;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2080;
      v108 = v78 + 14;
      v81 = *(int *)(v65 + 48);
      v82 = (uint64_t)v102;
      v83 = (uint64_t)&v102[v81];
      v84 = v62 + v81;
      sub_213DAFDB8(v62, (uint64_t)v102);
      sub_213DAFDB8(v84, v83);
      v85 = v65;
      v86 = v107;
      v87 = v117;
      v88 = v113;
      ((void (*)(char *, uint64_t, uint64_t))v113)(v107, v82, v117);
      sub_213DCA828(v82, type metadata accessor for FeaturisedTurn);
      sub_213DCA828(v83, type metadata accessor for FeaturisedTurn);
      sub_213E0B898();
      v89 = sub_213EF31F8();
      v91 = v90;
      v116 = *(_QWORD *)(v116 + 8);
      ((void (*)(char *, uint64_t))v116)(v86, v87);
      *(_QWORD *)&v120 = sub_213DB0570(v89, v91, (uint64_t *)v123);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DAFEC4(v118, &qword_253F069B8);
      sub_213DAFEC4(v119, &qword_253F069B8);
      *(_WORD *)(v78 + 22) = 2080;
      v119 = v78 + 24;
      v92 = *(int *)(v85 + 48);
      v93 = v82 + v92;
      v94 = v115;
      v95 = v115 + v92;
      sub_213DAFDB8(v115, v82);
      sub_213DAFDB8(v95, v93);
      ((void (*)(char *, uint64_t, uint64_t))v88)(v86, v93, v87);
      sub_213DCA828(v93, type metadata accessor for FeaturisedTurn);
      sub_213DCA828(v82, type metadata accessor for FeaturisedTurn);
      v96 = sub_213EF31F8();
      v98 = v97;
      ((void (*)(char *, uint64_t))v116)(v86, v87);
      *(_QWORD *)&v120 = sub_213DB0570(v96, v98, (uint64_t *)v123);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DAFEC4(v114, &qword_253F069B8);
      sub_213DAFEC4(v94, &qword_253F069B8);
      v99 = v112;
      _os_log_impl(&dword_213DAB000, v112, (os_log_type_t)v111, "%s No restatement detected between adjacent turns. turnId=%s, nextTurnId=%s", (uint8_t *)v78, 0x20u);
      v100 = v110;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v100, -1, -1);
      MEMORY[0x2199C53C4](v78, -1, -1);

      sub_213DCA828((uint64_t)v106, type metadata accessor for FeaturisedSession);
      v101 = (uint64_t)v105;
    }
    else
    {

      sub_213DAFEC4(v75, &qword_253F069B8);
      sub_213DAFEC4(v74, &qword_253F069B8);
      sub_213DAFEC4(v63, &qword_253F069B8);
      sub_213DAFEC4(v62, &qword_253F069B8);
      sub_213DCA828((uint64_t)v54, type metadata accessor for FeaturisedSession);
      v101 = v64;
    }
    sub_213DAFEC4(v101, &qword_253F069B8);
  }
  return 0;
}

uint64_t sub_213EAD00C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  char v20;
  char v21;
  uint64_t v22;
  double v23;
  char v24;
  char v25;
  double v26;
  double v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeaturisedTurn(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v47 - v16;
  sub_213EAD590(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_213DAFEC4((uint64_t)v10, &qword_253F069B0);
LABEL_23:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a3, 1, 1, v43);
  }
  sub_213DB0B5C((uint64_t)v10, (uint64_t)v17);
  if (!*(_QWORD *)(*(_QWORD *)a2 + 16))
  {
    v42 = (uint64_t)v17;
    goto LABEL_22;
  }
  sub_213DAFDB8(*(_QWORD *)a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v15);
  v18 = swift_bridgeObjectRetain();
  v19 = COERCE_DOUBLE(sub_213DAE808(v18));
  v21 = v20;
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0
    || (v22 = swift_bridgeObjectRetain(),
        v23 = COERCE_DOUBLE(sub_213DAE814(v22)),
        v25 = v24,
        swift_bridgeObjectRelease(),
        (v25 & 1) != 0))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v36 = sub_213EF2724();
    __swift_project_value_buffer(v36, (uint64_t)qword_253F08A00);
    v29 = sub_213EF270C();
    v37 = sub_213EF2CA0();
    if (!os_log_type_enabled(v29, v37))
      goto LABEL_20;
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v50 = v39;
    *(_DWORD *)v38 = 136315138;
    if (qword_253F06C88 != -1)
      swift_once();
    v40 = qword_253F06C78;
    v41 = unk_253F06C80;
    swift_bridgeObjectRetain();
    v49 = sub_213DB0570(v40, v41, &v50);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v29, v37, "%s Failed to measure time between turns", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v39, -1, -1);
    v35 = (uint64_t)v38;
    goto LABEL_19;
  }
  v26 = v23 - v19;
  v27 = *(double *)(v4 + 16);
  if (v23 - v19 > v27)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v28 = sub_213EF2724();
    __swift_project_value_buffer(v28, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v29 = sub_213EF270C();
    v30 = sub_213EF2C94();
    if (!os_log_type_enabled(v29, v30))
    {
      swift_release_n();
      goto LABEL_20;
    }
    v31 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v50 = v48;
    *(_DWORD *)v31 = 136315650;
    if (qword_253F06C88 != -1)
      swift_once();
    v33 = qword_253F06C78;
    v32 = unk_253F06C80;
    swift_bridgeObjectRetain();
    v49 = sub_213DB0570(v33, v32, &v50);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2048;
    v49 = *(_QWORD *)&v26;
    sub_213EF2D9C();
    *(_WORD *)(v31 + 22) = 2048;
    v49 = *(_QWORD *)&v27;
    sub_213EF2D9C();
    swift_release_n();
    _os_log_impl(&dword_213DAB000, v29, v30, "%s Turns too far apart for sessions to be stitched (%fs, max: %fs)", (uint8_t *)v31, 0x20u);
    v34 = v48;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v34, -1, -1);
    v35 = v31;
LABEL_19:
    MEMORY[0x2199C53C4](v35, -1, -1);
LABEL_20:

    sub_213DCA828((uint64_t)v15, type metadata accessor for FeaturisedTurn);
    v42 = (uint64_t)v17;
LABEL_22:
    sub_213DCA828(v42, type metadata accessor for FeaturisedTurn);
    goto LABEL_23;
  }
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B8);
  v46 = a3 + *(int *)(v45 + 48);
  sub_213DB0B5C((uint64_t)v17, a3);
  sub_213DB0B5C((uint64_t)v15, v46);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(a3, 0, 1, v45);
}

uint64_t sub_213EAD590@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[5];
  _QWORD v22[5];
  _BYTE v23[40];
  _BYTE v24[48];

  v4 = type metadata accessor for FeaturisedTurn(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 16);
  if (!v9)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = *(_QWORD *)(v5 + 72);
  sub_213DAFDB8(v8 + v10 + v11 * (v9 - 1), (uint64_t)v7);
  v12 = *(_QWORD *)&v7[*(int *)(v4 + 24)];
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v19 = v11;
    v20 = v10;
    v14 = v12 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_213DAFDFC(v14, (uint64_t)v24);
      sub_213DAFDFC((uint64_t)v24, (uint64_t)v23);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      sub_213EF24D8();
      if (swift_dynamicCast())
        break;
      sub_213DAFDFC((uint64_t)v24, (uint64_t)v23);
      sub_213DAFDFC((uint64_t)v23, (uint64_t)v22);
      sub_213EF21FC();
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_release();
        goto LABEL_15;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      sub_213DAFDFC((uint64_t)v24, (uint64_t)v22);
      sub_213DAFDFC((uint64_t)v22, (uint64_t)v21);
      sub_213EF219C();
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_release();
LABEL_17:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        swift_bridgeObjectRelease_n();
        sub_213DB0B5C((uint64_t)v7, a2);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease_n();
        v8 = *a1;
        v10 = v20;
        v11 = v19;
        goto LABEL_9;
      }
    }
    swift_release();
    sub_213DAFDFC((uint64_t)v24, (uint64_t)v23);
LABEL_15:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    sub_213DAFDFC((uint64_t)v24, (uint64_t)v22);
    goto LABEL_17;
  }
LABEL_9:
  v15 = *(_QWORD *)(v8 + 16);
  v16 = v15 >= 2;
  v17 = v15 - 2;
  if (v16)
  {
    sub_213DAFDB8(v8 + v10 + v17 * v11, a2);
    sub_213DCA828((uint64_t)v7, type metadata accessor for FeaturisedTurn);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  sub_213DCA828((uint64_t)v7, type metadata accessor for FeaturisedTurn);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

uint64_t RestatementSessionStitcher.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return v0;
}

uint64_t RestatementSessionStitcher.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_213EAD8C0(uint64_t *a1, uint64_t a2)
{
  return sub_213EAC504(a1, a2) & 1;
}

uint64_t sub_213EAD8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(a2 + 48) = a3;
  *(_QWORD *)(a2 + 56) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a2 + 24));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  *(double *)(a2 + 16) = a5;
  return a2;
}

uint64_t sub_213EAD944(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RestatementSessionStitcher();
  v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  *(_QWORD *)(v12 + 48) = a4;
  *(_QWORD *)(v12 + 56) = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 24));
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_1, v11, a4);
  *(double *)(v12 + 16) = a2;
  return v12;
}

uint64_t sub_213EADA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for RestatementSessionStitcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for RestatementSessionStitcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RestatementSessionStitcher.__allocating_init(maximumTimeDeltaBetweenTurns:restatementClassifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RestatementSessionStitcher.identifyCrossSessionRestatement(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_213EADA88()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213EADACC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  char v9;
  _QWORD v11[2];

  v2 = *(_QWORD *)(*v0 + 80);
  v1 = *(_QWORD *)(*v0 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = (char *)v11 - v5;
  v11[1] = v0[2];
  v7 = *(void (**)(uint64_t, uint64_t))(v1 + 88);
  swift_bridgeObjectRetain();
  v7(v2, v1);
  v8 = sub_213EF2AE4();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v8);
  swift_getAssociatedConformanceWitness();
  v9 = sub_213EF2A00();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t type metadata accessor for EntityDenyListNominationFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EntityDenyListNominationFilter);
}

uint64_t sub_213EADC14()
{
  return sub_213EADACC() & 1;
}

uint64_t sub_213EADC38()
{
  uint64_t result;

  type metadata accessor for MediaEvaluationFramework();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04CD0);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F04E18 = 91;
  unk_253F04E20 = 0xE100000000000000;
  return result;
}

uint64_t MediaSuggestionOutcomeReportedOfflineEmitter.__allocating_init(logTarget:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = MEMORY[0x24BEE4B00];
  type metadata accessor for SELFEventLogEmitters();
  v3 = swift_allocObject();
  sub_213DB0BF0(a1, v3 + 16);
  *(_QWORD *)(v2 + 16) = v3;
  return v2;
}

uint64_t MediaSuggestionOutcomeReportedOfflineEmitter.init(logTarget:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B00];
  type metadata accessor for SELFEventLogEmitters();
  v3 = swift_allocObject();
  sub_213DB0BF0(a1, v3 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_213EADD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17[4];

  v3 = v2;
  v4 = sub_213E3DB64(a1, a2);
  if (qword_253F04A88 != -1)
    swift_once();
  v5 = sub_213EF2724();
  __swift_project_value_buffer(v5, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v6 = sub_213EF270C();
  v7 = sub_213EF2C94();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17[0] = v9;
    *(_DWORD *)v8 = 136315394;
    if (qword_253F04E30 != -1)
      swift_once();
    v10 = qword_253F04E18;
    v11 = unk_253F04E20;
    swift_bridgeObjectRetain();
    v16 = sub_213DB0570(v10, v11, v17);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    v16 = *(_QWORD *)(v4 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v6, v7, "%s Identified %ld outcomes from PLUS contact suggestions made at runtime.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v9, -1, -1);
    MEMORY[0x2199C53C4](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v12 = sub_213EAF9CC(v4);
  swift_bridgeObjectRelease();
  v13 = sub_213EAF5A4(v12);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = 0x8000000000000000;
  sub_213EAF260(v13, (uint64_t)sub_213EAF1EC, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v16);
  *(_QWORD *)(v3 + 24) = v16;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_213EAE010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  void **p_weak_ivar_lyt;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t i;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  unsigned int v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  int v70;
  _BOOL4 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  unsigned int v89;
  char v90;
  void *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint8_t *v100;
  uint64_t v101;
  unint64_t v102;
  void **v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void *v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  void *v114;
  id v115;
  unint64_t v116;
  uint64_t v117;
  int64_t v118;
  unint64_t *v119;
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  __int128 v123;
  NSObject *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  int64_t v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;

  v1 = sub_213EF1D64();
  v139 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v133 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v141 = (char *)&v117 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04818);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v117 - v9;
  swift_beginAccess();
  v126 = v0;
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v21 = sub_213EF2724();
    __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
    v22 = sub_213EF270C();
    v23 = sub_213EF2C94();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v144 = v25;
      *(_DWORD *)v24 = 136315138;
      if (qword_253F04E30 != -1)
        swift_once();
      v26 = qword_253F04E18;
      v27 = unk_253F04E20;
      swift_bridgeObjectRetain();
      v143 = sub_213DB0570(v26, v27, (uint64_t *)&v144);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v22, v23, "%s No PLUSSuggestionOutcomeReported messages to emit to SELF", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v25, -1, -1);
      MEMORY[0x2199C53C4](v24, -1, -1);
    }

    return;
  }
  v134 = v10;
  v119 = (unint64_t *)(v0 + 24);
  if (qword_253F04A88 != -1)
LABEL_133:
    swift_once();
  v11 = sub_213EF2724();
  v132 = __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
  v12 = sub_213EF270C();
  v13 = sub_213EF2C94();
  v14 = os_log_type_enabled(v12, v13);
  v15 = MEMORY[0x24BEE4AD8];
  v138 = v1;
  if (v14)
  {
    v16 = v8;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v144 = v18;
    *(_DWORD *)v17 = 136315138;
    if (qword_253F04E30 != -1)
      swift_once();
    v19 = qword_253F04E18;
    v20 = unk_253F04E20;
    swift_bridgeObjectRetain();
    v143 = sub_213DB0570(v19, v20, (uint64_t *)&v144);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v12, v13, "%s Emitting PLUSSuggestionOutcomeReported messages to SELF", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v18, -1, -1);
    MEMORY[0x2199C53C4](v17, -1, -1);

    v1 = v138;
    v8 = v16;
  }
  else
  {

  }
  v28 = *(_QWORD *)(v126 + 24);
  v29 = *(_QWORD *)(v28 + 64);
  v120 = v28 + 64;
  v30 = 1 << *(_BYTE *)(v28 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v121 = (unint64_t)(v30 + 63) >> 6;
  v118 = v121 - 1;
  v127 = v28;
  swift_bridgeObjectRetain();
  v135 = 0;
  *(_QWORD *)&v33 = 136315650;
  v123 = v33;
  v122 = v15 + 8;
  p_weak_ivar_lyt = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
  v131 = v8;
  while (1)
  {
    v35 = (uint64_t)v134;
    if (v32)
    {
      v137 = (v32 - 1) & v32;
      v36 = __clz(__rbit64(v32)) | (v135 << 6);
LABEL_21:
      v37 = v127;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v139 + 16))(v8, *(_QWORD *)(v127 + 48) + *(_QWORD *)(v139 + 72) * v36, v1);
      v38 = *(_QWORD *)(v37 + 56);
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40208);
      *(_QWORD *)(v8 + *(int *)(v39 + 48)) = *(_QWORD *)(v38 + 8 * v36);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 0, 1, v39);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    }
    v40 = v135 + 1;
    if (__OFADD__(v135, 1))
      goto LABEL_128;
    if (v40 < v121)
    {
      v41 = *(_QWORD *)(v120 + 8 * v40);
      if (v41)
        goto LABEL_25;
      v42 = v135 + 2;
      ++v135;
      if (v40 + 1 < v121)
      {
        v41 = *(_QWORD *)(v120 + 8 * v42);
        if (v41)
          goto LABEL_28;
        v135 = v40 + 1;
        if (v40 + 2 < v121)
        {
          v41 = *(_QWORD *)(v120 + 8 * (v40 + 2));
          if (v41)
          {
            v40 += 2;
            goto LABEL_25;
          }
          v42 = v40 + 3;
          v135 = v40 + 2;
          if (v40 + 3 < v121)
            break;
        }
      }
    }
LABEL_39:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40208);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v8, 1, 1, v43);
    v137 = 0;
LABEL_40:
    sub_213DC0630(v8, v35, &qword_253F04818);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40208);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v35, 1, v44) == 1)
    {
      swift_release();
      v116 = sub_213DCBD00(MEMORY[0x24BEE4AF8]);
      *v119 = v116;
      swift_bridgeObjectRelease();
      return;
    }
    v8 = *(_QWORD *)(v35 + *(int *)(v44 + 48));
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v141, v35, v1);
    v144 = MEMORY[0x24BEE4AF8];
    v45 = (unint64_t)v8 >> 62;
    if ((unint64_t)v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v1 = sub_213EF306C();
      if (v1)
      {
LABEL_43:
        if (v1 < 1)
        {
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        for (i = 0; i != v1; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0)
            v47 = (id)MEMORY[0x2199C49B0](i, v8);
          else
            v47 = *(id *)(v8 + 8 * i + 32);
          v48 = v47;
          v49 = objc_msgSend(v47, (SEL)p_weak_ivar_lyt[379]);
          if (v49
            && (v50 = v49,
                v51 = objc_msgSend(v49, sel_mediaOutcome),
                v50,
                v51)
            && (v52 = objc_msgSend(v51, sel_mediaSuggestionFeedback), v51, !v52))
          {

          }
          else
          {
            sub_213EF2F58();
            sub_213EF2F88();
            sub_213EF2F94();
            sub_213EF2F64();
          }
        }
        swift_bridgeObjectRelease();
        v53 = v144;
        if ((v144 & 0x8000000000000000) != 0)
          goto LABEL_61;
        goto LABEL_58;
      }
    }
    else
    {
      v1 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v1)
        goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    v53 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_61;
LABEL_58:
    if ((v53 & 0x4000000000000000) == 0)
    {
      if (*(_QWORD *)(v53 + 16))
        goto LABEL_60;
      goto LABEL_62;
    }
LABEL_61:
    swift_retain();
    v54 = sub_213EF306C();
    swift_release();
    if (v54)
    {
LABEL_60:
      swift_bridgeObjectRelease();
      goto LABEL_85;
    }
LABEL_62:
    swift_release();
    if (v1 >= 1)
      v55 = 1;
    else
      v55 = v1;
    if (v45)
    {
      swift_bridgeObjectRetain();
      v57 = sub_213EF306C();
      swift_bridgeObjectRelease();
      if (v57 < 0)
        goto LABEL_129;
      swift_bridgeObjectRetain();
      v56 = sub_213EF306C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v56 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v56 < v55)
      goto LABEL_130;
    if ((v8 & 0xC000000000000001) != 0 && v55)
    {
      sub_213EAFD90();
      v58 = 0;
      do
      {
        v59 = v58 + 1;
        sub_213EF2EF8();
        v58 = v59;
      }
      while (v55 != v59);
    }
    if (v45)
    {
      swift_bridgeObjectRetain();
      v61 = sub_213EF3078();
      v1 = v63;
      v60 = v64;
      v62 = v65;
      swift_bridgeObjectRelease_n();
      if ((v62 & 1) == 0)
        goto LABEL_78;
    }
    else
    {
      v60 = 0;
      v61 = v8 & 0xFFFFFFFFFFFFFF8;
      v1 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
      v62 = (2 * v55) | 1;
      if ((v62 & 1) == 0)
        goto LABEL_78;
    }
    v8 = sub_213EF3240();
    swift_unknownObjectRetain_n();
    v66 = swift_dynamicCastClass();
    if (!v66)
    {
      swift_unknownObjectRelease();
      v66 = MEMORY[0x24BEE4AF8];
    }
    v67 = *(_QWORD *)(v66 + 16);
    swift_release();
    if (__OFSUB__(v62 >> 1, v60))
      goto LABEL_132;
    if (v67 != (v62 >> 1) - v60)
    {
      swift_unknownObjectRelease();
LABEL_78:
      v53 = sub_213DF9F7C(v61, v1, v60, v62);
      swift_unknownObjectRelease();
      goto LABEL_85;
    }
    v53 = swift_dynamicCastClass();
    swift_unknownObjectRelease();
    if (!v53)
    {
      swift_unknownObjectRelease();
      v53 = MEMORY[0x24BEE4AF8];
    }
LABEL_85:
    v8 = v138;
    v68 = v139;
    v1 = (uint64_t)v133;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v133, v141, v138);
    swift_bridgeObjectRetain_n();
    v69 = sub_213EF270C();
    v70 = sub_213EF2C94();
    v71 = os_log_type_enabled(v69, (os_log_type_t)v70);
    v72 = v53 >> 62;
    v142 = v53;
    if (!v71)
    {
      v136 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v136(v1, v8);

      swift_bridgeObjectRelease_n();
      goto LABEL_109;
    }
    v129 = v70;
    v73 = swift_slowAlloc();
    v128 = swift_slowAlloc();
    v144 = v128;
    *(_DWORD *)v73 = v123;
    if (qword_253F04E30 != -1)
      swift_once();
    v74 = qword_253F04E18;
    v75 = unk_253F04E20;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v73 + 4) = sub_213DB0570(v74, v75, (uint64_t *)&v144);
    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 12) = 2080;
    sub_213E0B898();
    v76 = sub_213EF31F8();
    *(_QWORD *)(v73 + 14) = sub_213DB0570(v76, v77, (uint64_t *)&v144);
    swift_bridgeObjectRelease();
    v136 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v136(v1, v8);
    v130 = v73;
    *(_WORD *)(v73 + 22) = 2080;
    if (v72)
    {
      v78 = v142;
      swift_bridgeObjectRetain();
      v79 = sub_213EF306C();
      swift_bridgeObjectRelease();
      if (v79)
      {
LABEL_90:
        v143 = MEMORY[0x24BEE4AF8];
        sub_213DCD7EC(0, v79 & ~(v79 >> 63), 0);
        v140 = (_QWORD *)v79;
        if (v79 < 0)
          goto LABEL_131;
        v124 = v69;
        v125 = v72;
        v80 = 0;
        v81 = v143;
        v1 = v78 & 0xC000000000000001;
        v82 = v140;
        do
        {
          if (v1)
            v83 = (id)MEMORY[0x2199C49B0](v80, v78);
          else
            v83 = *(id *)(v78 + 8 * (_QWORD)v80 + 32);
          v84 = v83;
          v85 = objc_msgSend(v84, (SEL)p_weak_ivar_lyt[379]);
          if (v85)
          {
            v86 = v85;
            v87 = objc_msgSend(v86, sel_mediaOutcome);
            if (v87)
            {
              v88 = v87;
              v89 = objc_msgSend(v87, sel_mediaSuggestionFeedback);

              v90 = 0;
              v91 = v86;
            }
            else
            {
              v89 = 0;
              v90 = 1;
              v91 = v84;
              v88 = v86;
            }

            v84 = v88;
            p_weak_ivar_lyt = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
            v82 = v140;
          }
          else
          {
            v89 = 0;
            v90 = 1;
            v86 = v84;
          }

          v143 = v81;
          v93 = *(_QWORD *)(v81 + 16);
          v92 = *(_QWORD *)(v81 + 24);
          if (v93 >= v92 >> 1)
          {
            sub_213DCD7EC(v92 > 1, v93 + 1, 1);
            v81 = v143;
          }
          v80 = (_QWORD *)((char *)v80 + 1);
          *(_QWORD *)(v81 + 16) = v93 + 1;
          v94 = v81 + 8 * v93;
          *(_DWORD *)(v94 + 32) = v89;
          *(_BYTE *)(v94 + 36) = v90;
        }
        while (v82 != v80);
        v72 = v125;
        v69 = v124;
        goto LABEL_108;
      }
    }
    else
    {
      v78 = v142;
      v79 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v79)
        goto LABEL_90;
    }
    v81 = MEMORY[0x24BEE4AF8];
LABEL_108:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40210);
    v96 = MEMORY[0x2199C44E8](v81, v95);
    v98 = v97;
    swift_bridgeObjectRelease();
    v99 = sub_213DB0570(v96, v98, (uint64_t *)&v144);
    v100 = (uint8_t *)v130;
    *(_QWORD *)(v130 + 24) = v99;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v69, (os_log_type_t)v129, "%s Outcomes to be reported for plusId %s: %s", v100, 0x20u);
    v101 = v128;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v101, -1, -1);
    MEMORY[0x2199C53C4](v100, -1, -1);

LABEL_109:
    v102 = 0x24BE95000uLL;
    v103 = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
    if (v72)
    {
      swift_bridgeObjectRetain();
      v103 = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
      v8 = sub_213EF306C();
      swift_bridgeObjectRelease();
      if (!v8)
        goto LABEL_18;
    }
    else
    {
      v8 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v8)
        goto LABEL_18;
    }
    if (v8 < 1)
      goto LABEL_127;
    v104 = 0;
    v105 = *(_QWORD *)(v126 + 16);
    v140 = (_QWORD *)(v105 + 16);
    v106 = v142 & 0xC000000000000001;
    do
    {
      if (v106)
        v108 = (id)MEMORY[0x2199C49B0](v104, v142);
      else
        v108 = *(id *)(v142 + 8 * v104 + 32);
      v109 = v108;
      v110 = objc_msgSend(objc_allocWithZone(*(Class *)(v102 + 1808)), (SEL)v103[115]);
      if (v110)
      {
        v107 = v110;
        v111 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95718]), (SEL)v103[115]);
        if (v111)
        {
          v112 = v111;
          v113 = objc_allocWithZone(MEMORY[0x24BE95C78]);
          v114 = (void *)sub_213EF1D1C();
          v115 = objc_msgSend(v113, sel_initWithNSUUID_, v114);

          objc_msgSend(v112, sel_setPlusId_, v115);
          p_weak_ivar_lyt = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
          objc_msgSend(v107, sel_setEventMetadata_, v112);

          objc_msgSend(v107, sel_setSuggestionOutcomeReported_, v109);
          __swift_project_boxed_opaque_existential_1(v140, *(_QWORD *)(v105 + 40));
          sub_213EF23E8();
          v103 = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
          v102 = 0x24BE95000;
        }

      }
      else
      {
        v107 = v109;
      }
      ++v104;

    }
    while (v8 != v104);
LABEL_18:
    swift_bridgeObjectRelease();
    v1 = v138;
    v136((uint64_t)v141, v138);
    v8 = v131;
    v32 = v137;
  }
  v41 = *(_QWORD *)(v120 + 8 * v42);
  if (v41)
  {
LABEL_28:
    v40 = v42;
LABEL_25:
    v137 = (v41 - 1) & v41;
    v36 = __clz(__rbit64(v41)) + (v40 << 6);
    v135 = v40;
    goto LABEL_21;
  }
  while (1)
  {
    v40 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v40 >= v121)
    {
      v135 = v118;
      goto LABEL_39;
    }
    v41 = *(_QWORD *)(v120 + 8 * v40);
    ++v42;
    if (v41)
      goto LABEL_25;
  }
  __break(1u);
}

uint64_t MediaSuggestionOutcomeReportedOfflineEmitter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = v0;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v2 = sub_213EF2724();
    __swift_project_value_buffer(v2, (uint64_t)qword_253F08A00);
    v3 = sub_213EF270C();
    v4 = sub_213EF2CA0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v10 = v6;
      *(_DWORD *)v5 = 136315138;
      if (qword_253F04E30 != -1)
        swift_once();
      v7 = qword_253F04E18;
      v8 = unk_253F04E20;
      swift_bridgeObjectRetain();
      sub_213DB0570(v7, v8, &v10);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v3, v4, "%s Emitter is being destroyed while there are suggestion outcomes which have not been logged to SELF!", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v6, -1, -1);
      MEMORY[0x2199C53C4](v5, -1, -1);
    }

  }
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MediaSuggestionOutcomeReportedOfflineEmitter.__deallocating_deinit()
{
  MediaSuggestionOutcomeReportedOfflineEmitter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_213EAF1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D40208) + 48);
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEE8) + 48);
  v6 = *(_QWORD *)(a1 + v4);
  v7 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  *(_QWORD *)(a2 + v5) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_213EAF260(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v10 = sub_213EF1D64();
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40218);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v46 = a1;
  v47 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v48 = v17;
  v49 = 0;
  v50 = v20 & v18;
  v51 = a2;
  v52 = a3;
  v43[1] = a1;
  swift_bridgeObjectRetain();
  v43[0] = a3;
  swift_retain();
  sub_213EBA044((uint64_t)v15);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_213DB9C58();
    return swift_release();
  }
  v45 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  while (1)
  {
    v27 = *(int *)(v21 + 48);
    v28 = v10;
    v45(v12, v15, v10);
    v29 = *(_QWORD *)&v15[v27];
    v30 = *(_QWORD **)a5;
    v32 = sub_213DFA284((uint64_t)v12);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v30[3] >= v35)
    {
      if ((a4 & 1) != 0)
      {
        v39 = *(_QWORD **)a5;
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_213E021D8();
        v39 = *(_QWORD **)a5;
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_213DFF078(v35, a4 & 1);
      v37 = sub_213DFA284((uint64_t)v12);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_22;
      v32 = v37;
      v39 = *(_QWORD **)a5;
      if ((v36 & 1) != 0)
      {
LABEL_7:
        v23 = v39[7];
        v24 = 8 * v32;
        v53 = *(_QWORD *)(v23 + 8 * v32);
        swift_bridgeObjectRetain();
        sub_213DB5224(v29);
        v25 = v53;
        v10 = v28;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v28);
        v26 = *(_QWORD *)(*(_QWORD *)a5 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v26 + v24) = v25;
        goto LABEL_8;
      }
    }
    v39[(v32 >> 6) + 8] |= 1 << v32;
    v10 = v28;
    v45((char *)(v39[6] + *(_QWORD *)(v44 + 72) * v32), v12, v28);
    *(_QWORD *)(v39[7] + 8 * v32) = v29;
    v40 = v39[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_21;
    v39[2] = v42;
LABEL_8:
    sub_213EBA044((uint64_t)v15);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEE8);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213EAF5A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, unint64_t, uint64_t);
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A738);
  v49 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v47 - v6;
  v8 = sub_213EF1D64();
  v55 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v47 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEF0);
  result = sub_213EF3084();
  v14 = (_QWORD *)result;
  v15 = 0;
  v56 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v50 = v17;
  v51 = (unint64_t)(v19 + 63) >> 6;
  v52 = result + 64;
  v53 = (_QWORD *)result;
  v48 = v11;
  if (!v21)
    goto LABEL_5;
LABEL_4:
  v22 = v11;
  v58 = (v21 - 1) & v21;
  v59 = v15;
  for (i = __clz(__rbit64(v21)) | (v15 << 6); ; i = __clz(__rbit64(v25)) + (v26 << 6))
  {
    v29 = v55;
    v28 = v56;
    v30 = *(_QWORD *)(v56 + 48);
    v60 = *(_QWORD *)(v55 + 72) * i;
    v31 = v54;
    v63 = *(void (**)(char *, unint64_t, uint64_t))(v55 + 16);
    v63(v54, v30 + v60, v8);
    v32 = *(_QWORD *)(v28 + 56);
    v61 = i;
    v33 = *(_QWORD *)(v32 + 8 * i);
    v11 = v22;
    v34 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v34(v11, v31, v8);
    v35 = *(_QWORD *)(v33 + 16);
    if (v35)
    {
      v65 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_213EF2F7C();
      v36 = *(unsigned __int8 *)(v49 + 80);
      v64 = v34;
      v57 = v33;
      v37 = v33 + ((v36 + 32) & ~v36);
      v62 = *(_QWORD *)(v49 + 72);
      do
      {
        v38 = *(int *)(v2 + 48);
        v63(v7, v37, v8);
        v39 = *(void **)(v37 + v38);
        v40 = *(int *)(v2 + 48);
        v64(v5, v7, v8);
        *(_QWORD *)&v5[v40] = v39;
        v41 = v39;
        sub_213EAFE18((uint64_t)v5);
        sub_213EF2F58();
        sub_213EF2F88();
        sub_213EF2F94();
        sub_213EF2F64();
        v37 += v62;
        --v35;
      }
      while (v35);
      v42 = v65;
      swift_bridgeObjectRelease();
      v11 = v48;
      v14 = v53;
      v34 = v64;
    }
    else
    {
      v42 = MEMORY[0x24BEE4AF8];
      v14 = v53;
    }
    v43 = v61;
    *(_QWORD *)(v52 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v34)(v14[6] + v60, v11, v8);
    *(_QWORD *)(v14[7] + 8 * v43) = v42;
    v44 = v14[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v14[2] = v46;
    v21 = v58;
    v15 = v59;
    if (v58)
      goto LABEL_4;
LABEL_5:
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_29;
    if (v24 >= v51)
      return (uint64_t)v14;
    v25 = *(_QWORD *)(v50 + 8 * v24);
    v26 = v15 + 1;
    if (!v25)
    {
      v26 = v15 + 2;
      if (v15 + 2 >= v51)
        return (uint64_t)v14;
      v25 = *(_QWORD *)(v50 + 8 * v26);
      if (!v25)
      {
        v26 = v15 + 3;
        if (v15 + 3 >= v51)
          return (uint64_t)v14;
        v25 = *(_QWORD *)(v50 + 8 * v26);
        if (!v25)
          break;
      }
    }
LABEL_18:
    v22 = v11;
    v58 = (v25 - 1) & v25;
    v59 = v26;
  }
  v27 = v15 + 4;
  if (v15 + 4 >= v51)
    return (uint64_t)v14;
  v25 = *(_QWORD *)(v50 + 8 * v27);
  if (v25)
  {
    v26 = v15 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v51)
      return (uint64_t)v14;
    v25 = *(_QWORD *)(v50 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_213EAF9CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;

  v2 = sub_213EF1D64();
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v67 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A738);
  v4 = MEMORY[0x24BDAC7A8](v62);
  v59 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v53 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v53 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v53 - v11;
  v13 = (_QWORD *)MEMORY[0x24BEE4B00];
  v68 = (_QWORD *)MEMORY[0x24BEE4B00];
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return (uint64_t)v13;
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v10 + 72);
  v58 = v16;
  v55 = v15 | 7;
  v56 = v18 + v16;
  v54 = xmmword_213EF53E0;
  v57 = v18;
  while (1)
  {
    v63 = v17;
    v64 = v14;
    sub_213EAFE58(v17, (uint64_t)v12);
    v22 = v62;
    v23 = *(int *)(v62 + 48);
    v25 = v65;
    v24 = v66;
    v26 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    v27 = v60;
    v26(v60, v12, v66);
    v28 = (uint64_t)v12;
    v29 = *(void **)&v12[v23];
    v30 = *(int *)(v22 + 48);
    v31 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v32 = (uint64_t)v61;
    v31(v61, v27, v24);
    *(_QWORD *)(v32 + v30) = v29;
    v33 = (uint64_t)v67;
    v26(v67, (char *)v32, v24);
    v34 = v29;
    sub_213EAFE18(v32);
    v36 = sub_213DFA284(v33);
    v37 = v13[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    v12 = (char *)v28;
    if (v13[3] < v39)
    {
      sub_213DFF084(v39, 1);
      v13 = v68;
      v41 = sub_213DFA284((uint64_t)v67);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_19;
      v36 = v41;
    }
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v66);
      v13 = v68;
      v43 = v68[7];
      sub_213DC0630(v28, v59, &qword_254D3A738);
      v44 = *(_QWORD *)(v43 + 8 * v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v43 + 8 * v36) = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v44 = sub_213DB6DE8(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
        *(_QWORD *)(v43 + 8 * v36) = v44;
      }
      v47 = *(_QWORD *)(v44 + 16);
      v46 = *(_QWORD *)(v44 + 24);
      if (v47 >= v46 >> 1)
      {
        v44 = sub_213DB6DE8(v46 > 1, v47 + 1, 1, v44);
        *(_QWORD *)(v43 + 8 * v36) = v44;
      }
      v19 = v63;
      v20 = v64;
      *(_QWORD *)(v44 + 16) = v47 + 1;
      v21 = v57;
      sub_213DC0630(v59, v44 + v58 + v47 * v57, &qword_254D3A738);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A730);
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v54;
      sub_213DC0630(v28, v48 + v58, &qword_254D3A738);
      v13[(v36 >> 6) + 8] |= 1 << v36;
      v31((char *)(v13[6] + *(_QWORD *)(v65 + 72) * v36), v67, v66);
      *(_QWORD *)(v13[7] + 8 * v36) = v48;
      v49 = v13[2];
      v50 = __OFADD__(v49, 1);
      v51 = v49 + 1;
      if (v50)
        goto LABEL_18;
      v13[2] = v51;
      v19 = v63;
      v20 = v64;
      v21 = v57;
    }
    v17 = v19 + v21;
    v14 = v20 - 1;
    if (!v14)
      return (uint64_t)v13;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

unint64_t sub_213EAFD90()
{
  unint64_t result;

  result = qword_254D3A718;
  if (!qword_254D3A718)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3A718);
  }
  return result;
}

uint64_t type metadata accessor for MediaSuggestionOutcomeReportedOfflineEmitter()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaSuggestionOutcomeReportedOfflineEmitter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaSuggestionOutcomeReportedOfflineEmitter.__allocating_init(logTarget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MediaSuggestionOutcomeReportedOfflineEmitter.reviewSessionSuggestionOutcomes(session:classifications:outcomeExtractor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MediaSuggestionOutcomeReportedOfflineEmitter.flush()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_213EAFE18(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213EAFE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213EAFEA0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_213DCD0C8(v7 > 1, v8 + 1, 1);
      v4 += 8;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_213EAFF74()
{
  uint64_t result;

  type metadata accessor for MediaEntityPartialRepetitionDefinition();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04DE8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F04DB8 = 91;
  unk_253F04DC0 = 0xE100000000000000;
  return result;
}

uint64_t sub_213EAFFF4()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_213E1BC20((uint64_t)&unk_24D1004C0);
  result = swift_arrayDestroy();
  qword_253F04DD0 = v0;
  return result;
}

uint64_t MediaEntityPartialRepetitionDefinition.__allocating_init(restatementThreshold:useTrimmedUtterance:wakeWordAndEmptyTurnRemoval:)(uint64_t a1, char a2, char a3, char a4)
{
  char v7;
  uint64_t v8;

  v7 = a2 & 1;
  v8 = swift_allocObject();
  MediaEntityPartialRepetitionDefinition.init(restatementThreshold:useTrimmedUtterance:wakeWordAndEmptyTurnRemoval:)(a1, v7, a3, a4);
  return v8;
}

uint64_t MediaEntityPartialRepetitionDefinition.init(restatementThreshold:useTrimmedUtterance:wakeWordAndEmptyTurnRemoval:)(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30[2];

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F04FB0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_213EF53E0;
  type metadata accessor for MediaPlayClassifier();
  v11 = swift_allocObject();
  v30[0] = 91;
  v30[1] = 0xE100000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  *(_QWORD *)(v11 + 16) = 91;
  *(_QWORD *)(v11 + 24) = 0xE100000000000000;
  *(_QWORD *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40220);
  *(_QWORD *)(v10 + 64) = &off_24D106F78;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v4 + 32) = v10;
  *(_QWORD *)(v4 + 40) = v12;
  *(_QWORD *)(v4 + 48) = 0x403E000000000000;
  v13 = *(double *)&a1;
  if ((a2 & 1) != 0)
    v13 = 0.7;
  *(double *)(v4 + 16) = v13;
  *(_BYTE *)(v4 + 24) = a3 & 1;
  *(_BYTE *)(v4 + 25) = a4 & 1;
  if (qword_253F04A88 != -1)
    swift_once();
  v14 = sub_213EF2724();
  __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
  swift_retain();
  v15 = sub_213EF270C();
  v16 = sub_213EF2C88();
  v17 = &unk_213EF4000;
  v18 = &unk_253F04000;
  if (os_log_type_enabled(v15, v16))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v30[0] = v20;
    *(_DWORD *)v19 = 136315394;
    if (qword_253F04DC8 != -1)
      swift_once();
    v21 = qword_253F04DB8;
    v22 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    sub_213DB0570(v21, v22, v30);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 1024;
    sub_213EF2D9C();
    swift_release();
    _os_log_impl(&dword_213DAB000, v15, v16, "%s Initialized with utterance trimming enabled = %{BOOL}d", (uint8_t *)v19, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v20, -1, -1);
    MEMORY[0x2199C53C4](v19, -1, -1);

    v18 = (_QWORD *)&unk_253F04000;
    v17 = (_QWORD *)&unk_213EF4000;
  }
  else
  {

    swift_release();
  }
  swift_retain();
  v23 = sub_213EF270C();
  v24 = sub_213EF2CA0();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30[0] = v26;
    *(_DWORD *)v25 = v17[136];
    if (v18[441] != -1)
      swift_once();
    v27 = qword_253F04DB8;
    v28 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    sub_213DB0570(v27, v28, v30);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    sub_213EF2D9C();
    swift_release();
    _os_log_impl(&dword_213DAB000, v23, v24, "%s Current restatement detection similarity threshold = %f", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v26, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);

  }
  else
  {

    swift_release();
  }
  return v5;
}

uint64_t sub_213EB04F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EC0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_213EF44B0;
  if (qword_253F04DE0 != -1)
    swift_once();
  v2 = qword_253F04DD0;
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  v5 = type metadata accessor for FullEntityUtteranceComparator();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = 1;
  *(_BYTE *)(v6 + 25) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 64) = &protocol witness table for FullEntityUtteranceComparator;
  *(_QWORD *)(v1 + 32) = v6;
  type metadata accessor for PlayMediaReformulationDefinition();
  v7 = swift_allocObject();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04C90);
  v9 = (_QWORD *)swift_allocObject();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04C98);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  v9[2] = 91;
  v9[3] = 0xE100000000000000;
  v9[4] = v7;
  *(_QWORD *)(v1 + 96) = v8;
  *(_QWORD *)(v1 + 104) = &protocol witness table for SlotBasedTurnComparator<A>;
  *(_QWORD *)(v1 + 72) = v9;
  return v1;
}

uint64_t MediaEntityPartialRepetitionDefinition.successClassifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaEntityPartialRepetitionDefinition.supportingClassifiers.getter()
{
  return swift_bridgeObjectRetain();
}

double MediaEntityPartialRepetitionDefinition.maximumTimeBetweenRestatements.getter()
{
  return 30.0;
}

uint64_t sub_213EB0690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  ValueMetadata *v19;
  unint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MediaPlayClassification();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DAFDFC(a1, (uint64_t)&v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  v11 = swift_dynamicCast();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if ((v11 & 1) == 0)
  {
    v12(v6, 1, 1, v7);
    sub_213DAFEC4((uint64_t)v6, &qword_254D3B568);
    goto LABEL_5;
  }
  v12(v6, 0, 1, v7);
  sub_213DBB430((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  if ((sub_213E37098() & 1) == 0)
  {
    sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
LABEL_5:
    if (qword_253F04BB0 != -1)
      swift_once();
    v19 = &type metadata for PIMSConstraintMismatch;
    v20 = sub_213DE48B4();
    v16 = 0xD000000000000016;
    v17 = 0x8000000213F06090;
    v18 = 11;
    sub_213EF210C();
    goto LABEL_8;
  }
  if (v10[8] == 1)
  {
    sub_213DBB430((uint64_t)v10, a2, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    v13 = 0;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(a2, v13, 1, v7);
  }
  if (qword_253F04BB0 != -1)
    swift_once();
  v19 = &type metadata for PIMSConstraintMismatch;
  v20 = sub_213DE48B4();
  v16 = 0xD000000000000016;
  v17 = 0x8000000213F06090;
  v18 = 12;
  sub_213EF210C();
  sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v16);
  v13 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(a2, v13, 1, v7);
}

uint64_t sub_213EB0918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  char v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_type_t v43;
  const char *v44;
  uint64_t v45;
  os_log_type_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_type_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *boxed_opaque_existential_1;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t countAndFlagsBits;
  Swift::String_optional v83;
  void *object;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  os_log_type_t v112;
  const char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  ValueMetadata *v121;
  _UNKNOWN **v122;
  char *v123;
  uint64_t v124;
  int v125;
  unint64_t v126;
  os_log_t v127;
  uint64_t v128;
  uint64_t v129;
  os_log_type_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  _BOOL4 v137;
  uint64_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  os_log_type_t v143;
  const char *v144;
  uint64_t v145;
  os_log_type_t v146;
  _BOOL4 v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  uint64_t v156;
  os_log_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  os_log_t v168;
  uint64_t v169;
  os_log_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  os_log_type_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  _QWORD v183[3];
  int v184;
  os_log_t v185;
  int v186;
  int v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  _UNKNOWN **v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  os_log_t v198;
  uint64_t v199;
  char *v200;
  _UNKNOWN **v201;
  ValueMetadata *v202;
  uint64_t v203;
  uint64_t v204;
  ValueMetadata *v205;
  char *v206;
  uint64_t v207;
  __int128 v208;
  unint64_t v209;
  uint64_t v210;
  __int128 v211;
  uint64_t v212;
  ValueMetadata *v213;
  _UNKNOWN **v214;
  char *v215;
  uint64_t v216;
  unsigned __int8 v217;
  uint64_t v218[6];
  char v219;
  char v220;
  uint64_t v221;
  unint64_t v222;

  v197 = a1;
  v210 = a6;
  v196 = sub_213EF1D64();
  v195 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v11 = (char *)v183 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v203 = (uint64_t)v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v206 = (char *)v183 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v183 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MediaPlayClassification();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)a3;
  v209 = *(_QWORD *)(a3 + 8);
  v205 = *(ValueMetadata **)(a3 + 16);
  v204 = *(_QWORD *)(a3 + 24);
  v194 = *(_UNKNOWN ***)(a3 + 32);
  v193 = *(char **)(a3 + 40);
  v24 = *(unsigned __int16 *)(a3 + 48);
  v25 = *(_QWORD *)(a4 + 8);
  *(_QWORD *)&v208 = *(_QWORD *)a4;
  *((_QWORD *)&v208 + 1) = v25;
  v199 = *(_QWORD *)(a4 + 16);
  v202 = *(ValueMetadata **)(a4 + 24);
  v201 = *(_UNKNOWN ***)(a4 + 32);
  v200 = *(char **)(a4 + 40);
  LODWORD(v198) = *(unsigned __int8 *)(a4 + 48);
  v26 = *(unsigned __int8 *)(a4 + 49);
  v207 = a5;
  sub_213DAFDFC(a5 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_successClassification, (uint64_t)&v211);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  v27 = swift_dynamicCast();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if ((v27 & 1) == 0)
  {
    v28(v18, 1, 1, v19);
    sub_213DAFEC4((uint64_t)v18, &qword_254D3B568);
    goto LABEL_5;
  }
  v28(v18, 0, 1, v19);
  sub_213DBB430((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  if ((sub_213E37098() & 1) == 0)
  {
    sub_213DCA828((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
LABEL_5:
    if (qword_253F04A88 != -1)
      swift_once();
    v29 = sub_213EF2724();
    __swift_project_value_buffer(v29, (uint64_t)qword_253F08A00);
    v30 = sub_213EF270C();
    v31 = sub_213EF2CA0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      *(_QWORD *)&v211 = v33;
      *(_DWORD *)v32 = 136315138;
      if (qword_253F04DC8 != -1)
        swift_once();
      v34 = qword_253F04DB8;
      v35 = unk_253F04DC0;
      swift_bridgeObjectRetain();
      v218[0] = sub_213DB0570(v34, v35, (uint64_t *)&v211);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v30, v31, "%s No success classification found", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v33, -1, -1);
      MEMORY[0x2199C53C4](v32, -1, -1);
    }

    goto LABEL_30;
  }
  if (!v209)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v45 = sub_213EF2724();
    __swift_project_value_buffer(v45, (uint64_t)qword_253F08A00);
    v37 = sub_213EF270C();
    v46 = sub_213EF2CA0();
    if (!os_log_type_enabled(v37, v46))
      goto LABEL_28;
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v211 = v40;
    *(_DWORD *)v39 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v47 = qword_253F04DB8;
    v48 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v47, v48, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v43 = v46;
    v44 = "%s Could not extract the media id from reference";
    goto LABEL_27;
  }
  if (__PAIR128__(v209, v23) == v208 || (sub_213EF3234() & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v36 = sub_213EF2724();
    __swift_project_value_buffer(v36, (uint64_t)qword_253F08A00);
    v37 = sub_213EF270C();
    v38 = sub_213EF2CA0();
    if (!os_log_type_enabled(v37, v38))
      goto LABEL_28;
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v211 = v40;
    *(_DWORD *)v39 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v41 = qword_253F04DB8;
    v42 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v41, v42, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v43 = v38;
    v44 = "%s Self referential mapping detected, skipping";
LABEL_27:
    _os_log_impl(&dword_213DAB000, v37, v43, v44, v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v40, -1, -1);
    MEMORY[0x2199C53C4](v39, -1, -1);
LABEL_28:

    v49 = (uint64_t)v22;
LABEL_29:
    sub_213DCA828(v49, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
LABEL_30:
    v50 = type metadata accessor for MediaGroundTruth();
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
    v52 = v210;
    return v51(v52, 1, 1, v50);
  }
  v54 = *(_QWORD *)(v207 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_comparisons);
  v55 = *(_QWORD *)(v54 + 16);
  if (!v55)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v65 = sub_213EF2724();
    __swift_project_value_buffer(v65, (uint64_t)qword_253F08A00);
    v37 = sub_213EF270C();
    v66 = sub_213EF2CA0();
    if (!os_log_type_enabled(v37, v66))
      goto LABEL_28;
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v211 = v40;
    *(_DWORD *)v39 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v67 = qword_253F04DB8;
    v68 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v67, v68, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v43 = v66;
    v44 = "%s No comparisons found";
    goto LABEL_27;
  }
  v187 = v26;
  v186 = v24;
  v188 = v23;
  v190 = a2;
  v189 = v22;
  v222 = MEMORY[0x24BEE4AF8];
  v56 = v54 + 32;
  v191 = v54;
  swift_bridgeObjectRetain();
  v57 = v56;
  v58 = v55;
  v192 = v11;
  do
  {
    sub_213DAFDFC(v57, (uint64_t)&v211);
    sub_213DAFDFC((uint64_t)&v211, (uint64_t)v218);
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D40228);
    type metadata accessor for SlotBasedTurnComparison();
    if ((swift_dynamicCast() & 1) == 0)
      v221 = 0;
    v60 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v211);
    if (v221)
    {
      MEMORY[0x2199C44C4](v60);
      if (*(_QWORD *)((v222 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v222 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
      v11 = v192;
    }
    v57 += 40;
    --v58;
  }
  while (v58);
  v61 = v222;
  v222 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  do
  {
    sub_213DAFDFC(v56, (uint64_t)&v211);
    sub_213DAFDFC((uint64_t)&v211, (uint64_t)v218);
    type metadata accessor for EntityUtteranceComparison();
    if ((swift_dynamicCast() & 1) == 0)
      v221 = 0;
    v62 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v211);
    if (v221)
    {
      MEMORY[0x2199C44C4](v62);
      if (*(_QWORD *)((v222 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v222 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
    v56 += 40;
    --v55;
  }
  while (v55);
  swift_bridgeObjectRelease();
  v63 = v222;
  if (v61 >> 62)
  {
    swift_bridgeObjectRetain();
    v117 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v117)
      goto LABEL_51;
  }
  else if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v61 >> 62)
    {
      swift_bridgeObjectRetain();
      v64 = sub_213EF306C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v64 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v64 == 1)
    {
      LODWORD(v191) = 2;
      v69 = v199;
      goto LABEL_62;
    }
    if (qword_253F04BB0 != -1)
      swift_once();
    v213 = &type metadata for PIMSConstraintMismatch;
    v214 = (_UNKNOWN **)sub_213DE48B4();
    *(_QWORD *)&v211 = 0xD000000000000016;
    *((_QWORD *)&v211 + 1) = 0x8000000213F06090;
    LOBYTE(v212) = 15;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v211);
    if (qword_253F04A88 != -1)
      swift_once();
    v105 = sub_213EF2724();
    __swift_project_value_buffer(v105, (uint64_t)qword_253F08A00);
    v106 = sub_213EF270C();
    v107 = sub_213EF2CA0();
    if (!os_log_type_enabled(v106, v107))
    {
LABEL_133:

      v49 = (uint64_t)v189;
      goto LABEL_29;
    }
    v108 = swift_slowAlloc();
    v109 = swift_slowAlloc();
    *(_QWORD *)&v211 = v109;
    *(_DWORD *)v108 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v110 = qword_253F04DB8;
    v111 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v110, v111, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v112 = v107;
    v113 = "%s Too many SlotBasedTurnComparisons found";
    goto LABEL_99;
  }
  swift_bridgeObjectRelease();
  if (!(v63 >> 62))
  {
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRelease();
      v118 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_85;
    }
LABEL_126:
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v174 = sub_213EF2724();
    __swift_project_value_buffer(v174, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain();
    v106 = sub_213EF270C();
    v175 = sub_213EF2CA0();
    if (!os_log_type_enabled(v106, v175))
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_133;
    }
    v108 = swift_slowAlloc();
    v176 = swift_slowAlloc();
    *(_QWORD *)&v211 = v176;
    *(_DWORD *)v108 = 136315394;
    if (qword_253F04DC8 != -1)
      swift_once();
    v177 = qword_253F04DB8;
    v178 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v177, v178, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v108 + 12) = 2080;
    v179 = swift_bridgeObjectRetain();
    v180 = MEMORY[0x2199C44E8](v179, v59);
    v182 = v181;
    swift_bridgeObjectRelease();
    v218[0] = sub_213DB0570(v180, v182, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v106, v175, "%s Unexpected comparison encountered - %s", (uint8_t *)v108, 0x16u);
    swift_arrayDestroy();
    v133 = v176;
    goto LABEL_132;
  }
  swift_bridgeObjectRetain();
  v173 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (!v173)
    goto LABEL_126;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v118 = sub_213EF306C();
  swift_bridgeObjectRelease();
LABEL_85:
  swift_bridgeObjectRelease();
  if (v118 != 1)
  {
    if (qword_253F04BB0 != -1)
      swift_once();
    v213 = &type metadata for PIMSConstraintMismatch;
    v214 = (_UNKNOWN **)sub_213DE48B4();
    *(_QWORD *)&v211 = 0xD000000000000016;
    *((_QWORD *)&v211 + 1) = 0x8000000213F06090;
    LOBYTE(v212) = 16;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v211);
    if (qword_253F04A88 != -1)
      swift_once();
    v129 = sub_213EF2724();
    __swift_project_value_buffer(v129, (uint64_t)qword_253F08A00);
    v106 = sub_213EF270C();
    v130 = sub_213EF2CA0();
    if (!os_log_type_enabled(v106, v130))
      goto LABEL_133;
    v108 = swift_slowAlloc();
    v109 = swift_slowAlloc();
    *(_QWORD *)&v211 = v109;
    *(_DWORD *)v108 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v131 = qword_253F04DB8;
    v132 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v131, v132, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v112 = v130;
    v113 = "%s Too many EntityUtteranceComparisons found";
LABEL_99:
    _os_log_impl(&dword_213DAB000, v106, v112, v113, (uint8_t *)v108, 0xCu);
    swift_arrayDestroy();
    v133 = v109;
LABEL_132:
    MEMORY[0x2199C53C4](v133, -1, -1);
    MEMORY[0x2199C53C4](v108, -1, -1);
    goto LABEL_133;
  }
  v119 = v207;
  sub_213EB2960(v207 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_firstTurn, &v211);
  if (!*((_QWORD *)&v211 + 1))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v134 = sub_213EF2724();
    __swift_project_value_buffer(v134, (uint64_t)qword_253F08A00);
    v135 = sub_213EF270C();
    v136 = sub_213EF2CA0();
    v137 = os_log_type_enabled(v135, v136);
    v138 = v210;
    if (!v137)
      goto LABEL_113;
    v139 = (uint8_t *)swift_slowAlloc();
    v140 = swift_slowAlloc();
    *(_QWORD *)&v211 = v140;
    *(_DWORD *)v139 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v141 = qword_253F04DB8;
    v142 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v141, v142, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v143 = v136;
    v144 = "%s First turn media item missing";
    goto LABEL_112;
  }
  v191 = *((_QWORD *)&v211 + 1);
  v185 = (os_log_t)v211;
  v120 = v212;
  v121 = v213;
  v122 = v214;
  v123 = v215;
  v124 = v216;
  v125 = v217;
  sub_213EB2960(v119 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_secondTurn, &v211);
  if (!*((_QWORD *)&v211 + 1))
  {
    sub_213DB8408((uint64_t)v185, v191);
    if (qword_253F04A88 != -1)
      swift_once();
    v145 = sub_213EF2724();
    __swift_project_value_buffer(v145, (uint64_t)qword_253F08A00);
    v135 = sub_213EF270C();
    v146 = sub_213EF2CA0();
    v147 = os_log_type_enabled(v135, v146);
    v138 = v210;
    if (!v147)
      goto LABEL_113;
    v139 = (uint8_t *)swift_slowAlloc();
    v140 = swift_slowAlloc();
    *(_QWORD *)&v211 = v140;
    *(_DWORD *)v139 = 136315138;
    if (qword_253F04DC8 != -1)
      swift_once();
    v148 = qword_253F04DB8;
    v149 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v148, v149, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v143 = v146;
    v144 = "%s Second turn media item missing";
LABEL_112:
    _os_log_impl(&dword_213DAB000, v135, v143, v144, v139, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v140, -1, -1);
    MEMORY[0x2199C53C4](v139, -1, -1);
LABEL_113:

    sub_213DCA828((uint64_t)v189, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    v50 = type metadata accessor for MediaGroundTruth();
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
    v52 = v138;
    return v51(v52, 1, 1, v50);
  }
  v126 = (unint64_t)v122;
  v183[1] = v124;
  v184 = v125;
  v127 = v185;
  v183[2] = v121;
  v128 = (uint64_t)v214;
  if (v120 != 1 || v212 != 1)
  {
    v203 = v212;
    v204 = v211;
    v205 = v213;
    v206 = v215;
    v207 = *((_QWORD *)&v211 + 1);
    *(_QWORD *)&v208 = v216;
    DWORD2(v208) = v217;
    v209 = v126;
    v150 = v191;
    if (qword_253F04BB0 != -1)
      swift_once();
    v213 = &type metadata for PIMSConstraintMismatch;
    v214 = (_UNKNOWN **)sub_213DE48B4();
    *(_QWORD *)&v211 = 0xD000000000000016;
    *((_QWORD *)&v211 + 1) = 0x8000000213F06090;
    LOBYTE(v212) = 14;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v211);
    v151 = (uint64_t)v123;
    if (qword_253F04A88 != -1)
      swift_once();
    v152 = sub_213EF2724();
    __swift_project_value_buffer(v152, (uint64_t)qword_253F08A00);
    sub_213E05540((uint64_t)v127, v150);
    v201 = (_UNKNOWN **)v120;
    v153 = v204;
    v154 = v207;
    v202 = (ValueMetadata *)v151;
    sub_213E05540(v204, v207);
    v155 = sub_213EF270C();
    LODWORD(v200) = sub_213EF2C94();
    if (os_log_type_enabled(v155, (os_log_type_t)v200))
    {
      v156 = v191;
      v198 = v155;
      v157 = v185;
      v158 = (uint64_t)v201;
      v199 = v128;
      v159 = swift_slowAlloc();
      v197 = swift_slowAlloc();
      *(_QWORD *)&v211 = v197;
      *(_DWORD *)v159 = 136315650;
      if (qword_253F04DC8 != -1)
        swift_once();
      v160 = qword_253F04DB8;
      v161 = unk_253F04DC0;
      swift_bridgeObjectRetain();
      v218[0] = sub_213DB0570(v160, v161, (uint64_t *)&v211);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v159 + 12) = 2080;
      v218[0] = v158;
      type metadata accessor for INMediaItemType(0);
      v162 = sub_213EF288C();
      v218[0] = sub_213DB0570(v162, v163, (uint64_t *)&v211);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DB8408((uint64_t)v157, v156);
      sub_213DB8408((uint64_t)v157, v156);
      *(_WORD *)(v159 + 22) = 2080;
      v218[0] = v203;
      v164 = sub_213EF288C();
      v218[0] = sub_213DB0570(v164, v165, (uint64_t *)&v211);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v166 = v204;
      v167 = v207;
      sub_213DB8408(v204, v207);
      sub_213DB8408(v166, v167);
      v168 = v198;
      _os_log_impl(&dword_213DAB000, v198, (os_log_type_t)v200, "%s Restatement not created for media type %s -> %s (not song)", (uint8_t *)v159, 0x20u);
      v169 = v197;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v169, -1, -1);
      MEMORY[0x2199C53C4](v159, -1, -1);

    }
    else
    {

      sub_213DB8408(v153, v154);
      sub_213DB8408(v153, v154);
      v170 = v185;
      v171 = v191;
      sub_213DB8408((uint64_t)v185, v191);
      sub_213DB8408((uint64_t)v170, v171);
    }
    sub_213DCA828((uint64_t)v189, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
    v172 = v210;
    v50 = type metadata accessor for MediaGroundTruth();
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
    v52 = v172;
    return v51(v52, 1, 1, v50);
  }
  sub_213DB8408(v211, *((uint64_t *)&v211 + 1));
  sub_213DB8408((uint64_t)v127, v191);
  v211 = v208;
  v69 = v199;
  v212 = v199;
  v213 = v202;
  v214 = v201;
  v215 = v200;
  LOBYTE(v216) = (_BYTE)v198;
  BYTE1(v216) = v187;
  sub_213EB2BE4((uint64_t *)&v211, v207, (char *)v218);
  LODWORD(v191) = LOBYTE(v218[0]);
LABEL_62:
  v213 = (ValueMetadata *)v19;
  v214 = &protocol witness table for MediaPlayClassification;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v211);
  sub_213DCA7E4((uint64_t)v189, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  v71 = v206;
  FeaturisedSession.getOriginalRequestID(for:)((uint64_t)&v211, v206);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v211);
  if (qword_253F04A88 != -1)
    swift_once();
  v72 = sub_213EF2724();
  __swift_project_value_buffer(v72, (uint64_t)qword_253F08A00);
  swift_retain();
  swift_bridgeObjectRetain();
  v73 = (uint64_t)v202;
  v74 = (uint64_t)v201;
  v75 = (uint64_t)v200;
  sub_213DB8518(v69, (uint64_t)v202);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_213DB8518(v69, v73);
  v76 = sub_213EF270C();
  v77 = sub_213EF2C94();
  if (os_log_type_enabled(v76, (os_log_type_t)v77))
  {
    v185 = v76;
    LODWORD(v207) = v77;
    v78 = swift_slowAlloc();
    v79 = swift_slowAlloc();
    *(_QWORD *)&v211 = v79;
    *(_DWORD *)v78 = 136315650;
    if (qword_253F04DC8 != -1)
      swift_once();
    v80 = qword_253F04DB8;
    v81 = unk_253F04DC0;
    swift_bridgeObjectRetain();
    v218[0] = sub_213DB0570(v80, v81, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 12) = 2080;
    v83 = UsoEntity_common_MediaItem.convertUSOMediaItemToString()();
    countAndFlagsBits = v83.value._countAndFlagsBits;
    if (v83.value._object)
    {
      object = v83.value._object;
    }
    else
    {
      countAndFlagsBits = 7104878;
      object = (void *)0xE300000000000000;
    }
    v218[0] = sub_213DB0570(countAndFlagsBits, (unint64_t)object, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 22) = 2080;
    v85 = *((_QWORD *)&v208 + 1);
    swift_bridgeObjectRetain();
    v86 = v208;
    v218[0] = sub_213DB0570(v208, v85, (uint64_t *)&v211);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    v87 = v199;
    v88 = (uint64_t)v202;
    v89 = (uint64_t)v201;
    v90 = (uint64_t)v200;
    sub_213DB859C(v199, (uint64_t)v202);
    swift_bridgeObjectRelease();
    v91 = v87;
    v92 = v87;
    v93 = v88;
    v94 = v89;
    v95 = v90;
    sub_213DB859C(v92, v88);
    v96 = v185;
    _os_log_impl(&dword_213DAB000, v185, (os_log_type_t)v207, "%s Generating Media GT with key: %s value: %s", (uint8_t *)v78, 0x20u);
    swift_arrayDestroy();
    v97 = v79;
    v98 = v86;
    MEMORY[0x2199C53C4](v97, -1, -1);
    MEMORY[0x2199C53C4](v78, -1, -1);

    v11 = v192;
    v99 = v206;
    v100 = v197;
    v101 = v196;
    v102 = v195;
    v103 = (uint64_t)v205;
    v104 = v204;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_213DB859C(v69, v73);
    swift_bridgeObjectRelease();
    sub_213DB859C(v69, v73);

    v91 = v69;
    v100 = v197;
    v101 = v196;
    v102 = v195;
    v103 = (uint64_t)v205;
    v93 = v73;
    v94 = v74;
    v95 = v75;
    v104 = v204;
    v98 = v208;
    v99 = v71;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v11, v100, v101);
  LOBYTE(v222) = v191;
  *(_QWORD *)&v211 = v188;
  *((_QWORD *)&v211 + 1) = v209;
  v212 = v103;
  v213 = (ValueMetadata *)v104;
  v214 = v194;
  v215 = v193;
  LOWORD(v216) = v186;
  v218[0] = v98;
  v218[1] = *((_QWORD *)&v208 + 1);
  v218[2] = v91;
  v218[3] = v93;
  v218[4] = v94;
  v218[5] = v95;
  v219 = (char)v198;
  v220 = v187;
  sub_213DBDD88((uint64_t)v99, v203);
  v114 = v190;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_213DB8518(v91, v93);
  sub_213E2FE20(v188, v209, (uint64_t)v205, v204);
  v115 = v210;
  sub_213DBCCF4((uint64_t)v11, (unsigned __int8 *)&v222, v114, (uint64_t *)&v211, v218, v203, v210);
  sub_213DAFEC4((uint64_t)v206, &qword_253F04828);
  sub_213DCA828((uint64_t)v189, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  v116 = type metadata accessor for MediaGroundTruth();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v115, 0, 1, v116);
}

void sub_213EB2960(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeaturisedTurn(0) + 28));
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(v3 + 64);
    while (1)
    {
      v6 = *(v5 - 2);
      if (*(v5 - 1) == 0xD000000000000011 && *v5 == 0x8000000213F048A0)
        break;
      if ((sub_213EF3234() & 1) != 0)
        break;
      v5 += 5;
      if (!--v4)
        goto LABEL_7;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213DAEB60(v6, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_7:
    if (qword_253F04A88 != -1)
      swift_once();
    v7 = sub_213EF2724();
    __swift_project_value_buffer(v7, (uint64_t)qword_253F08A00);
    v8 = sub_213EF270C();
    v9 = sub_213EF2CA0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v14 = v11;
      *(_DWORD *)v10 = 136315138;
      if (qword_253F04DC8 != -1)
        swift_once();
      v12 = qword_253F04DB8;
      v13 = unk_253F04DC0;
      swift_bridgeObjectRetain();
      sub_213DB0570(v12, v13, &v14);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v8, v9, "%s [getPrimaryMediaItem] No INPlayMediaIntent found for the turn", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v11, -1, -1);
      MEMORY[0x2199C53C4](v10, -1, -1);
    }

    *(_OWORD *)((char *)a2 + 41) = 0u;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
}

void sub_213EB2BE4(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v26;
  uint64_t v27;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = sub_213EB4468(a2 + OBJC_IVAR____TtC28SiriPrivateLearningInference25PartialRepetitionMetadata_firstTurn);
  v8 = sub_213EAFEA0(v7);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = (_QWORD *)(v8 + 40);
    while (1)
    {
      v11 = *(v10 - 1) == v4 && *v10 == v3;
      if (v11 || (sub_213EF3234() & 1) != 0)
        break;
      v10 += 2;
      if (!--v9)
        goto LABEL_9;
    }
    v26 = 1;
  }
  else
  {
LABEL_9:
    v26 = 0;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v12 = sub_213EF2724();
  __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  sub_213DB8518(v5, v6);
  v13 = sub_213EF270C();
  v14 = sub_213EF2C94();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v27 = v16;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain();
    sub_213DB0570(v4, v3, &v27);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    sub_213DB859C(v5, v6);
    *(_WORD *)(v15 + 12) = 1024;
    sub_213EF2D9C();
    _os_log_impl(&dword_213DAB000, v13, v14, "Repetition candidate %s is alternate candidate: %{BOOL}d.", (uint8_t *)v15, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v16, -1, -1);
    MEMORY[0x2199C53C4](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_213DB859C(v5, v6);
  }

  swift_bridgeObjectRetain();
  v17 = sub_213EF270C();
  v18 = sub_213EF2C94();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v27 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = swift_bridgeObjectRetain();
    v22 = MEMORY[0x2199C44E8](v21, MEMORY[0x24BEE0D00]);
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_213DB0570(v22, v24, &v27);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v17, v18, "Alternate candidate list: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v20, -1, -1);
    MEMORY[0x2199C53C4](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a3 = v26;
}

double sub_213EB2FB4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;

  Array<A>.findEvent(eventId:)(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *a1, &v7);
  v4 = v8;
  if (v8)
  {
    v5 = v7;
    extractMediaReference(event:)(a3);
    sub_213DC7B60(v5, v4);
  }
  else
  {
    *(_WORD *)(a3 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

void sub_213EB3060(uint64_t a1@<X8>)
{
  extractMediaReference(event:)(a1);
}

uint64_t sub_213EB309C(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _QWORD v17[5];
  _BYTE v18[40];
  _BYTE v19[40];

  v2 = *(unsigned __int8 *)(v1 + 25);
  v3 = *a1;
  if (v2 == 1)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  v6 = v4 - 1;
  v7 = type metadata accessor for FeaturisedTurn(0);
  v8 = *(_QWORD *)(v3
                 + ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))
                 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6
                 + *(int *)(v7 + 24));
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_213DAFDFC(v10, (uint64_t)v19);
      sub_213DAFDFC((uint64_t)v19, (uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      sub_213EF24D8();
      if (swift_dynamicCast())
      {
        swift_release();
        sub_213DAFDFC((uint64_t)v19, (uint64_t)v18);
        goto LABEL_17;
      }
      sub_213DAFDFC((uint64_t)v19, (uint64_t)v18);
      sub_213DAFDFC((uint64_t)v18, (uint64_t)v17);
      type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
      if ((swift_dynamicCast() & 1) != 0)
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      v10 += 40;
      if (!--v9)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_10;
      }
    }
    swift_release();
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    swift_bridgeObjectRelease_n();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_10:
  if (qword_253F04A88 != -1)
    swift_once();
  v11 = sub_213EF2724();
  __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
  v12 = sub_213EF270C();
  v13 = sub_213EF2C94();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_213DAB000, v12, v13, "Last turn of the session does not contain asr or u2 features, dropping the last", v14, 2u);
    MEMORY[0x2199C53C4](v14, -1, -1);
  }

  v15 = *a1;
  swift_bridgeObjectRetain();
  return sub_213EB3304(1, v15);
}

uint64_t sub_213EB3304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v4 = type metadata accessor for FeaturisedTurn(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v30 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v25 - v9;
  if (a1 < 0)
    goto LABEL_29;
  if (!a1)
    return a2;
  v32 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a2 + 16);
  if (!v11)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_release();
    return v32;
  }
  v12 = 0;
  v13 = 0;
  v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = a2 + v14;
  v16 = *(_QWORD *)(v8 + 72);
  v28 = v11 - 1;
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v26 = a2;
  v27 = a1;
  v29 = (char *)&v25 - v9;
  do
  {
    result = sub_213DCA7E4(v15, (uint64_t)v10, type metadata accessor for FeaturisedTurn);
    v20 = v17[2];
    if ((uint64_t)v20 < a1)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v31 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_213DCD09C(0, v20 + 1, 1);
        v17 = v31;
      }
      v19 = v17[2];
      v18 = v17[3];
      if (v19 >= v18 >> 1)
      {
        sub_213DCD09C(v18 > 1, v19 + 1, 1);
        v17 = v31;
      }
      v17[2] = v19 + 1;
      v10 = v29;
      result = sub_213DBB430((uint64_t)v29, (uint64_t)v17 + v14 + v19 * v16, type metadata accessor for FeaturisedTurn);
      a1 = v27;
LABEL_8:
      if (v28 == v12)
        goto LABEL_24;
      goto LABEL_9;
    }
    if (v13 >= v20)
      goto LABEL_27;
    sub_213DCA7E4((uint64_t)v17 + v14 + v16 * v13, v30, type metadata accessor for FeaturisedTurn);
    v22 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_213DCD09C(0, *(_QWORD *)(v22 + 16) + 1, 1);
      v22 = v32;
    }
    v24 = *(_QWORD *)(v22 + 16);
    v23 = *(_QWORD *)(v22 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_213DCD09C(v23 > 1, v24 + 1, 1);
      v22 = v32;
    }
    *(_QWORD *)(v22 + 16) = v24 + 1;
    sub_213DBB430(v30, v22 + v14 + v24 * v16, type metadata accessor for FeaturisedTurn);
    result = swift_isUniquelyReferenced_nonNull_native();
    v31 = v17;
    if ((result & 1) == 0)
    {
      result = sub_213EE1C38(v17);
      v17 = (_QWORD *)result;
      v31 = (_QWORD *)result;
    }
    a2 = v26;
    v10 = v29;
    if (v13 >= v17[2])
      goto LABEL_28;
    result = sub_213EB4424((uint64_t)v29, (uint64_t)v17 + v14 + v16 * v13);
    v17 = v31;
    ++v13;
    a1 = v27;
    if ((uint64_t)v13 < v27)
      goto LABEL_8;
    if (v28 == v12)
      goto LABEL_24;
    v13 = 0;
LABEL_9:
    ++v12;
    v15 += v16;
  }
  while (v12 < *(_QWORD *)(a2 + 16));
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_213EB3600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for TimeBasedPlayMediaStitcher();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x403E000000000000;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for TimeBasedPlayMediaStitcher;
  *a1 = result;
  return result;
}

uint64_t sub_213EB364C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  if (*(_BYTE *)(v2 + 25) != 1)
    return sub_213DCA7E4(a1, (uint64_t)a2, type metadata accessor for FeaturisedSession);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_213EB3F64(v5);
  v7 = type metadata accessor for FeaturisedSession(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  result = sub_213DBDD88(a1 + *(int *)(v7 + 24), (uint64_t)a2 + *(int *)(v7 + 24));
  *a2 = v6;
  return result;
}

uint64_t MediaEntityPartialRepetitionDefinition.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MediaEntityPartialRepetitionDefinition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213EB3758()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213EB3764()
{
  return sub_213EB04F8();
}

uint64_t sub_213EB3784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213EB0690(a1, a2);
}

uint64_t sub_213EB3798@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_213EB0918(a1, *a2, a3, a4, a5, a6);
}

uint64_t sub_213EB37BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_213EB4160();
  *a1 = result;
  return result;
}

uint64_t sub_213EB37E0(uint64_t *a1)
{
  return sub_213EB309C(a1);
}

uint64_t sub_213EB3800@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  if (*(_BYTE *)(*(_QWORD *)v2 + 25) != 1)
    return sub_213DCA7E4(a1, (uint64_t)a2, type metadata accessor for FeaturisedSession);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_213EB3F64(v5);
  v7 = type metadata accessor for FeaturisedSession(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  result = sub_213DBDD88(a1 + *(int *)(v7 + 24), (uint64_t)a2 + *(int *)(v7 + 24));
  *a2 = v6;
  return result;
}

uint64_t sub_213EB38C0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_213EB38E4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_213EB390C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];
  _BYTE v6[40];
  _BYTE v7[40];

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeaturisedTurn(0) + 24));
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 1;
  v3 = v1 + 32;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_213DAFDFC(v3, (uint64_t)v7);
    sub_213DAFDFC((uint64_t)v7, (uint64_t)v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    sub_213EF24D8();
    if (swift_dynamicCast())
    {
      swift_release();
      sub_213DAFDFC((uint64_t)v7, (uint64_t)v6);
      goto LABEL_10;
    }
    sub_213DAFDFC((uint64_t)v7, (uint64_t)v6);
    sub_213DAFDFC((uint64_t)v6, (uint64_t)v5);
    type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
    if ((swift_dynamicCast() & 1) != 0)
      break;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    v3 += 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  swift_release();
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_213EB3A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for FeaturisedTurn(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  if ((sub_213EB390C(a1) & 1) == 0)
  {
    if (!sub_213DB1A54())
      return 1;
    if (qword_253F04A88 != -1)
      swift_once();
    v19 = sub_213EF2724();
    __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
    sub_213DCA7E4(a1, (uint64_t)v8, type metadata accessor for FeaturisedTurn);
    v20 = sub_213EF270C();
    v21 = sub_213EF2C94();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v30 = v28;
      *(_DWORD *)v22 = 136315394;
      if (qword_253F04DC8 != -1)
        swift_once();
      v23 = qword_253F04DB8;
      v24 = unk_253F04DC0;
      swift_bridgeObjectRetain();
      v29 = sub_213DB0570(v23, v24, &v30);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      sub_213EF1D64();
      sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v25 = sub_213EF31F8();
      v29 = sub_213DB0570(v25, v26, &v30);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v8, type metadata accessor for FeaturisedTurn);
      _os_log_impl(&dword_213DAB000, v20, v21, "%s Ignoring turn %s - wake word only", (uint8_t *)v22, 0x16u);
      v27 = v28;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v27, -1, -1);
      MEMORY[0x2199C53C4](v22, -1, -1);
    }
    else
    {
      sub_213DCA828((uint64_t)v8, type metadata accessor for FeaturisedTurn);
    }

    return 0;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v9 = sub_213EF2724();
  __swift_project_value_buffer(v9, (uint64_t)qword_253F08A00);
  sub_213DCA7E4(a1, (uint64_t)v6, type metadata accessor for FeaturisedTurn);
  v10 = sub_213EF270C();
  v11 = sub_213EF2C94();
  if (!os_log_type_enabled(v10, v11))
  {
    sub_213DCA828((uint64_t)v6, type metadata accessor for FeaturisedTurn);

    return 0;
  }
  v28 = v1;
  v12 = swift_slowAlloc();
  v13 = swift_slowAlloc();
  v30 = v13;
  *(_DWORD *)v12 = 136315394;
  if (qword_253F04DC8 != -1)
    swift_once();
  v14 = qword_253F04DB8;
  v15 = unk_253F04DC0;
  swift_bridgeObjectRetain();
  v29 = sub_213DB0570(v14, v15, &v30);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 12) = 2080;
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v16 = sub_213EF31F8();
  v29 = sub_213DB0570(v16, v17, &v30);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  sub_213DCA828((uint64_t)v6, type metadata accessor for FeaturisedTurn);
  _os_log_impl(&dword_213DAB000, v10, v11, "%s Ignoring turn %s - empty turn", (uint8_t *)v12, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v13, -1, -1);
  MEMORY[0x2199C53C4](v12, -1, -1);

  return 0;
}

uint64_t sub_213EB3F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for FeaturisedTurn(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v18 - v9;
  v11 = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v12 = 0;
    v19 = v4;
    v20 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v14 = *(_QWORD *)(v4 + 72);
      sub_213DCA7E4(a1 + v13 + v14 * v12, (uint64_t)v10, type metadata accessor for FeaturisedTurn);
      v15 = sub_213EB3A64((uint64_t)v10);
      if (v1)
      {
        sub_213DCA828((uint64_t)v10, type metadata accessor for FeaturisedTurn);
        swift_release();
        swift_bridgeObjectRelease();
        return v11;
      }
      if ((v15 & 1) != 0)
      {
        sub_213DBB430((uint64_t)v10, (uint64_t)v7, type metadata accessor for FeaturisedTurn);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD09C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v22;
        v17 = *(_QWORD *)(v22 + 16);
        v16 = *(_QWORD *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_213DCD09C(v16 > 1, v17 + 1, 1);
          v11 = v22;
        }
        *(_QWORD *)(v11 + 16) = v17 + 1;
        result = sub_213DBB430((uint64_t)v7, v11 + v13 + v17 * v14, type metadata accessor for FeaturisedTurn);
        v4 = v19;
        a1 = v20;
      }
      else
      {
        result = sub_213DCA828((uint64_t)v10, type metadata accessor for FeaturisedTurn);
      }
      if (v21 == ++v12)
      {
        v11 = v22;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_213EB4160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEE7C(v0);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v2 = sub_213EF2724();
    __swift_project_value_buffer(v2, (uint64_t)qword_253F08A00);
    v3 = sub_213EF270C();
    v4 = sub_213EF2CA0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v10 = v6;
      *(_DWORD *)v5 = 136315138;
      if (qword_253F04DC8 != -1)
        swift_once();
      v7 = qword_253F04DB8;
      v8 = unk_253F04DC0;
      swift_bridgeObjectRetain();
      sub_213DB0570(v7, v8, &v10);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v3, v4, "%s No U2 graph found for the turn", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v6, -1, -1);
      MEMORY[0x2199C53C4](v5, -1, -1);
    }

  }
  return v1;
}

uint64_t sub_213EB4330()
{
  return sub_213DB0DB4((unint64_t *)&qword_254D3F510, (uint64_t (*)(uint64_t))type metadata accessor for MediaGroundTruth, (uint64_t)&protocol conformance descriptor for MediaGroundTruth);
}

uint64_t type metadata accessor for MediaEntityPartialRepetitionDefinition()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaEntityPartialRepetitionDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.__allocating_init(restatementThreshold:useTrimmedUtterance:wakeWordAndEmptyTurnRemoval:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 128))(a1, a2 & 1);
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.turnComparators.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.identifySuccessClassification(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.isInitiatingSiriTurn(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.isInitiatingEvent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.extractReferencedEntity(session:successClassification:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.extractReferencedEntity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.extractUsoEntity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.dropIgnorableTurns(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.isValidSession(session:classifications:isComposite:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.getSessionStitcher()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of MediaEntityPartialRepetitionDefinition.preProcessSession(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t sub_213EB4424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_213EB4468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeaturisedTurn(0) + 28));
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v1 + 64);
    while (1)
    {
      v4 = *(v3 - 2);
      if (*(v3 - 1) == 0xD000000000000011 && *v3 == 0x8000000213F048A0)
        break;
      if ((sub_213EF3234() & 1) != 0)
        break;
      v3 += 5;
      if (!--v2)
        goto LABEL_7;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_213DAF3D4(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v13)
      return v13;
    else
      return MEMORY[0x24BEE4AF8];
  }
  else
  {
LABEL_7:
    if (qword_253F04A88 != -1)
      swift_once();
    v5 = sub_213EF2724();
    __swift_project_value_buffer(v5, (uint64_t)qword_253F08A00);
    v6 = sub_213EF270C();
    v7 = sub_213EF2CA0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v14 = v9;
      *(_DWORD *)v8 = 136315138;
      if (qword_253F04DC8 != -1)
        swift_once();
      v10 = qword_253F04DB8;
      v11 = unk_253F04DC0;
      swift_bridgeObjectRetain();
      sub_213DB0570(v10, v11, &v14);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v6, v7, "%s [getAlternativeMediaItems] No INPlayMediaIntent found for the turn", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v9, -1, -1);
      MEMORY[0x2199C53C4](v8, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
}

uint64_t SuccessfulMessageClassification.init(siriStarted:messageEventId:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v8 + 32) = a2;
  *(_QWORD *)(v8 + 40) = a3;
  *(_BYTE *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + 32) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t SuccessfulMessageClassification.siriStarted.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SuccessfulMessageClassification.messageEventId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SuccessfulMessageClassification.referencedTurns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SuccessfulMessageClassification.referencedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213EB4790()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SuccessfulMessageClassification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SuccessfulMessageClassification(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SuccessfulMessageClassification(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SuccessfulMessageClassification(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SuccessfulMessageClassification(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SuccessfulMessageClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SuccessfulMessageClassification()
{
  return &type metadata for SuccessfulMessageClassification;
}

uint64_t sub_213EB499C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_213EF1D10();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_213DCD0C8(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_213EB4A98(unint64_t a1, uint64_t *a2)
{
  return sub_213EB4AA8(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for MessagesSuggestionOutcomeExtractor);
}

uint64_t sub_213EB4AA8(unint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  int v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  _QWORD *v40;
  __int128 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __CFString *v54;
  __CFString *v55;
  uint64_t v56;
  __CFString *v57;
  __CFString *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t *v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  void *v79;
  void *v80;
  _QWORD *v81;

  v76 = a3;
  v77 = a4;
  v5 = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_46;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v79 = v5;
  v71 = a2;
  if (!v11)
  {
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x24BEE4B00];
    v38 = a2[2];
    if (!v38)
      return swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v12 = 0;
  v78 = MEMORY[0x24BEE4B00];
  while (1)
  {
    v13 = v12;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x2199C49B0](v13, a1);
      else
        v14 = *(id *)(a1 + 8 * v13 + 32);
      v5 = v14;
      v12 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_46:
        swift_bridgeObjectRetain();
        v11 = sub_213EF306C();
        goto LABEL_3;
      }
      v15 = (uint64_t *)objc_msgSend(v14, sel_suggestionId);
      if (v15)
        break;
LABEL_6:

      ++v13;
      if (v12 == v11)
        goto LABEL_25;
    }
    a2 = v15;
    sub_213EF2C7C();

    v16 = sub_213EF1D64();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16) == 1)
    {
      sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
      goto LABEL_6;
    }
    *(_QWORD *)&v74 = sub_213EF1D10();
    v18 = *(void (**)(char *, uint64_t))(v17 + 8);
    v20 = v19;
    v18(v10, v16);
    LODWORD(v73) = objc_msgSend(v5, sel_contactSuggestionOutcome);
    a2 = (uint64_t *)v78;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v81 = a2;
    v75 = v20;
    v23 = sub_213DFA220(v74, v20);
    v24 = a2[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v27 = v22;
    if (a2[3] < v26)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a2 = (uint64_t *)&v81;
      sub_213E004A0();
    }
LABEL_20:
    v30 = v73;
    v31 = v81;
    v78 = (uint64_t)v81;
    if ((v27 & 1) != 0)
    {
      *(_DWORD *)(v81[7] + 4 * v23) = v73;
    }
    else
    {
      v81[(v23 >> 6) + 8] |= 1 << v23;
      v32 = (_QWORD *)(v31[6] + 16 * v23);
      v33 = v75;
      *v32 = v74;
      v32[1] = v33;
      *(_DWORD *)(v31[7] + 4 * v23) = v30;
      v34 = v31[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_48;
      v31[2] = v36;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12 == v11)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      a2 = v71;
      v37 = v78;
      v5 = v79;
      v38 = v71[2];
      if (!v38)
        return swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRetain();
      v39 = (unint64_t *)(a2 + 5);
      v40 = &unk_253F04000;
      *(_QWORD *)&v41 = 136315394;
      v74 = v41;
      v73 = MEMORY[0x24BEE4AD8] + 8;
      *(_QWORD *)&v41 = 136315650;
      v72 = v41;
      v78 = v37;
      while (1)
      {
        v43 = *(v39 - 1);
        v42 = *v39;
        v44 = *(_QWORD *)(v37 + 16);
        swift_bridgeObjectRetain();
        if (v44)
        {
          swift_bridgeObjectRetain();
          v45 = sub_213DFA220(v43, v42);
          if ((v46 & 1) != 0)
          {
            v75 = *(unsigned int *)(*(_QWORD *)(v37 + 56) + 4 * v45);
            swift_bridgeObjectRelease();
            if (v40[337] != -1)
              swift_once();
            v47 = sub_213EF2724();
            __swift_project_value_buffer(v47, (uint64_t)qword_253F08A00);
            swift_retain_n();
            swift_bridgeObjectRetain();
            v48 = sub_213EF270C();
            v49 = sub_213EF2C94();
            if (os_log_type_enabled(v48, v49))
            {
              v50 = swift_slowAlloc();
              v51 = swift_slowAlloc();
              v80 = v5;
              v81 = (_QWORD *)v51;
              *(_DWORD *)v50 = v72;
              v77(v76);
              swift_retain();
              v52 = sub_213EF288C();
              *(_QWORD *)(v50 + 4) = sub_213DB0570(v52, v53, (uint64_t *)&v81);
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v50 + 12) = 2080;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v50 + 14) = sub_213DB0570(v43, v42, (uint64_t *)&v81);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v50 + 22) = 2080;
              v54 = CFSTR("PLUSCONTACTSUGGESTIONOUTCOME_UNKNOWN");
              v55 = CFSTR("PLUSCONTACTSUGGESTIONOUTCOME_UNKNOWN");
              if (v75 <= 0xD)
              {
                v56 = (int)v75;
                v55 = off_24D108C98[v56];
                v54 = off_24D108D08[v56];
              }
              v57 = v55;
              v58 = v54;
              v59 = sub_213EF2850();
              v61 = v60;

              *(_QWORD *)(v50 + 24) = sub_213DB0570(v59, v61, (uint64_t *)&v81);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, v48, v49, "[%s] Suggestion Id=%s, Outcome=%s", (uint8_t *)v50, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v51, -1, -1);
              MEMORY[0x2199C53C4](v50, -1, -1);

              v37 = v78;
              v5 = v79;
              v40 = (_QWORD *)&unk_253F04000;
              goto LABEL_28;
            }
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();
        }
        if (v40[337] != -1)
          swift_once();
        v62 = sub_213EF2724();
        __swift_project_value_buffer(v62, (uint64_t)qword_253F08A00);
        swift_retain_n();
        swift_bridgeObjectRetain();
        v48 = sub_213EF270C();
        v63 = sub_213EF2CA0();
        if (os_log_type_enabled(v48, v63))
        {
          v64 = swift_slowAlloc();
          v65 = swift_slowAlloc();
          v80 = v5;
          v81 = (_QWORD *)v65;
          *(_DWORD *)v64 = v74;
          v77(v76);
          swift_retain();
          v66 = sub_213EF288C();
          *(_QWORD *)(v64 + 4) = sub_213DB0570(v66, v67, (uint64_t *)&v81);
          swift_release_n();
          v5 = v79;
          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v64 + 14) = sub_213DB0570(v43, v42, (uint64_t *)&v81);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_213DAB000, v48, v63, "[%s] Missing outcome for Suggestion Id=%s. SELF messages will not be emitted.", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          v68 = v65;
          v40 = (_QWORD *)&unk_253F04000;
          v37 = v78;
          MEMORY[0x2199C53C4](v68, -1, -1);
          MEMORY[0x2199C53C4](v64, -1, -1);

          goto LABEL_28;
        }
LABEL_27:

        swift_bridgeObjectRelease_n();
        swift_release_n();
LABEL_28:
        v39 += 2;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  sub_213DFB858(v26, isUniquelyReferenced_nonNull_native);
  a2 = v81;
  v28 = sub_213DFA220(v74, v75);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    goto LABEL_20;
  }
LABEL_49:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213EB5218(uint64_t a1, uint64_t a2)
{
  return sub_213EB5230(a1, a2, (uint64_t)sub_213EB80D0, 0, (void (*)(uint64_t))type metadata accessor for MessagesSuggestionOutcomeExtractor);
}

uint64_t sub_213EB5230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;
  _QWORD *(*v7)(uint64_t *__return_ptr, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(*(_QWORD *)(a2 + 72) + 16))
  {
    MEMORY[0x24BDAC7A8](a1);
    v18[2] = &v20;
    v18[3] = v6;
    return sub_213E44048(v7, (uint64_t)v18, a1);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v11 = sub_213EF2724();
    __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v12 = sub_213EF270C();
    v13 = sub_213EF2C94();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      a5(a4);
      swift_retain();
      v16 = sub_213EF288C();
      v18[4] = sub_213DB0570(v16, v17, &v19);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v12, v13, "[%s] No plus suggestions in entity prompt. Marking all candidates as unknown, contradictory.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v15, -1, -1);
      MEMORY[0x2199C53C4](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return sub_213E34CE4(a1, 8u);
  }
}

void *sub_213EB5458(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213EF21CC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v13 = sub_213EB5720(a1, (uint64_t)a3);
  v14 = *(_QWORD *)(a3[4] + 16);
  if (a3[6])
  {
    if (v14 > 1)
    {
      if ((v13 & 1) != 0)
      {
LABEL_4:
        v15 = 4;
        goto LABEL_34;
      }
LABEL_22:
      v15 = 5;
      goto LABEL_34;
    }
    if ((v13 & 1) != 0)
      goto LABEL_17;
    goto LABEL_33;
  }
  v31 = v13;
  v29 = a3[7];
  v30 = v3;
  v16 = a3[8];
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEA4CB8], v9);
  swift_bridgeObjectRetain();
  v17 = sub_213EF21C0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v16)
  {
    if (v29 == v17 && v16 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14 >= 2)
      {
        if ((v31 & 1) != 0)
          goto LABEL_4;
        goto LABEL_22;
      }
      if ((v31 & 1) != 0)
      {
LABEL_17:
        v15 = 2;
        goto LABEL_34;
      }
LABEL_33:
      v15 = 3;
      goto LABEL_34;
    }
    v21 = sub_213EF3234();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14 <= 1)
    {
      if ((v31 & 1) != 0)
        v15 = 2;
      else
        v15 = 6;
      if (((v31 | v21 ^ 1) & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      if ((v31 & 1) != 0)
        v15 = 4;
      else
        v15 = 7;
      if (((v31 | v21 ^ 1) & 1) == 0)
        goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v14 <= 1)
    {
      v22 = 6;
      v23 = 2;
    }
    else
    {
      v22 = 7;
      v23 = 4;
    }
    if ((v31 & 1) != 0)
      v15 = v23;
    else
      v15 = v22;
  }
LABEL_34:
  v24 = v32;
  sub_213DCA7E4((uint64_t)a3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
  v25 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
  v26 = sub_213E346C0(v24, (uint64_t)v8);
  sub_213DAFEC4((uint64_t)v8, &qword_253F06C68);
  return sub_213E34B24(v24, v15, v26);
}

uint64_t sub_213EB5720(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1D64();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlusContactSuggestion();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v26 = (uint64_t)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  sub_213DCC3D8(a1 + *(int *)(v17 + 20), (uint64_t)v6, &qword_253F04828);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_213DAFEC4((uint64_t)v6, &qword_253F04828);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_4:
    sub_213DAFEC4((uint64_t)v13, &qword_253F06B28);
    v20 = 0;
    return v20 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v18 = v2[5];
  v19 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 64))(v10, v18, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_4;
  v21 = v26;
  sub_213DBB430((uint64_t)v13, v26, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v22 = *(_QWORD *)(v27 + 48);
  if (v22)
  {
    v23 = (_QWORD *)(v21 + *(int *)(v14 + 24));
    if (*v23 == *(_QWORD *)(v27 + 40) && v22 == v23[1])
      v20 = 1;
    else
      v20 = sub_213EF3234();
  }
  else
  {
    v20 = 0;
  }
  sub_213DCA828(v21, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  return v20 & 1;
}

uint64_t sub_213EB59A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1D64();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    sub_213DCA7E4(a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    if ((v14[*(int *)(v11 + 24)] & 1) != 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
      v15 = type metadata accessor for EntityPromptClassification();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
      v16 = sub_213E346C0((uint64_t)v14, (uint64_t)v6);
      sub_213DAFEC4((uint64_t)v6, &qword_253F06C68);
      v17 = sub_213E34B24((uint64_t)v10, 11, v16);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v18 = MEMORY[0x24BEE4AF8];
      v29 = MEMORY[0x24BEE4AF8];
      if (v17)
      {
        v19 = v17;
        MEMORY[0x2199C44C4]();
        if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
        v18 = v29;
      }

      sub_213DCA828((uint64_t)v14, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      return v18;
    }
    sub_213DCA828((uint64_t)v14, type metadata accessor for PlusContactSuggestionRuntimeSummary);
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v20 = sub_213EF2724();
  __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
  swift_retain_n();
  v21 = sub_213EF270C();
  v22 = sub_213EF2CA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v28 = v2;
    v29 = v24;
    *(_DWORD *)v23 = 136315138;
    type metadata accessor for PhoneCallSuggestionOutcomeExtractor();
    swift_retain();
    v25 = sub_213EF288C();
    v28 = sub_213DB0570(v25, v26, &v29);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v21, v22, "[%s] Either found zero suggestions, or multiple suggestions included in the model output but no detected prompt. Marking all suggestions as unknown, contradictory outcomes.", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v24, -1, -1);
    MEMORY[0x2199C53C4](v23, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_213E34CE4(a1, 8u);
}

uint64_t sub_213EB5D64(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_213EB5D78(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary, (uint64_t)sub_213DB703C);
}

uint64_t sub_213EB5D78(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *);

  v32 = a1;
  v8 = a4(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v31 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v30 = (uint64_t)v28 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v28 - v14;
  v16 = *(_QWORD *)(a3 + 16);
  if (!v16)
    return MEMORY[0x24BEE4AF8];
  v28[0] = a5;
  v28[1] = a3;
  v29 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = a3 + v29;
  v18 = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v20 = MEMORY[0x24BEE4AF8];
  do
  {
    sub_213DCA7E4(v17, (uint64_t)v15, a4);
    if ((v32(v15) & 1) != 0)
    {
      sub_213DCA7E4((uint64_t)v15, v30, a4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v28[0])(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v24 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        v21 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v28[0])(v23 > 1, v24 + 1, 1, v20);
        v22 = v30;
        v20 = v21;
      }
      else
      {
        v21 = v20;
        v22 = v30;
      }
    }
    else
    {
      sub_213DCA7E4((uint64_t)v15, v31, a4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v28[0])(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v24 = *(_QWORD *)(v19 + 16);
      v26 = *(_QWORD *)(v19 + 24);
      v25 = v24 + 1;
      if (v24 >= v26 >> 1)
      {
        v21 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v28[0])(v26 > 1, v24 + 1, 1, v19);
        v22 = v31;
        v19 = v21;
      }
      else
      {
        v21 = v19;
        v22 = v31;
      }
    }
    *(_QWORD *)(v21 + 16) = v25;
    sub_213DBB430(v22, v21 + v29 + v24 * v18, a4);
    sub_213DCA828((uint64_t)v15, a4);
    v17 += v18;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_213EB5FF4()
{
  uint64_t result;

  type metadata accessor for PhoneCallSuggestionOutcomeExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06EB0);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06E90 = 91;
  qword_253F06E98 = 0xE100000000000000;
  return result;
}

uint64_t PhoneCallSuggestionOutcomeExtractor.__allocating_init(picsStore:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_213DB0BF0(a1, v2 + 16);
  return v2;
}

uint64_t PhoneCallSuggestionOutcomeExtractor.init(picsStore:)(__int128 *a1)
{
  uint64_t v1;

  sub_213DB0BF0(a1, v1 + 16);
  return v1;
}

uint64_t sub_213EB60D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[5];
  __int128 v69;
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;
  uint64_t v73;

  v58 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for EntityPromptClassification();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v66 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v60 = (uint64_t)&v54 - v10;
  v65 = type metadata accessor for FeaturisedTurn(0);
  v11 = *(_QWORD *)(v65 - 8);
  v12 = MEMORY[0x24BDAC7A8](v65);
  v62 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - v14;
  v16 = MEMORY[0x24BEE4AF8];
  v73 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v64 = v17;
  v61 = v7;
  if (v17)
  {
    v55 = v6;
    v18 = 0;
    v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v67 = *(_QWORD *)(v11 + 72);
    v56 = a1;
    v59 = v19;
    v63 = a1 + v19;
    v20 = type metadata accessor for FeaturisedTurn;
    while (1)
    {
      v21 = v20;
      sub_213DCA7E4(v63 + v67 * v18, (uint64_t)v15, v20);
      v22 = *(_QWORD *)&v15[*(int *)(v65 + 24)];
      v23 = *(_QWORD *)(v22 + 16);
      if (v23)
      {
        v24 = v22 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_213DAFDFC(v24, (uint64_t)&v69);
          sub_213DAFDFC((uint64_t)&v69, (uint64_t)v68);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          type metadata accessor for PlusRuntimeContactSuggestions(0);
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
          v24 += 40;
          if (!--v23)
          {
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v69, (uint64_t)v71);
        v20 = v21;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        v20 = v21;
        v72 = 0;
        memset(v71, 0, sizeof(v71));
      }
      sub_213DCC3D8((uint64_t)v71, (uint64_t)&v69, &qword_253F06970);
      if (v70)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for PlusRuntimeContactSuggestions(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          sub_213DAFEC4((uint64_t)v71, &qword_253F06970);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_213DBB430((uint64_t)v15, v62, v20);
          v25 = v73;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_213DCD09C(0, *(_QWORD *)(v25 + 16) + 1, 1);
            v25 = v73;
          }
          v27 = *(_QWORD *)(v25 + 16);
          v26 = *(_QWORD *)(v25 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_213DCD09C(v26 > 1, v27 + 1, 1);
            v25 = v73;
          }
          *(_QWORD *)(v25 + 16) = v27 + 1;
          sub_213DBB430(v62, v25 + v59 + v27 * v67, v20);
          goto LABEL_5;
        }
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v69, &qword_253F06970);
      }
      sub_213DAFEC4((uint64_t)v71, &qword_253F06970);
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v15, v20);
LABEL_5:
      if (++v18 == v64)
      {
        v67 = v73;
        v7 = v61;
        v6 = v55;
        goto LABEL_23;
      }
    }
  }
  v67 = v16;
LABEL_23:
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v58 + 16);
  if (v28)
  {
    v29 = v58 + 32;
    swift_bridgeObjectRetain();
    v30 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v29, (uint64_t)v71);
      sub_213DAFDFC((uint64_t)v71, (uint64_t)&v69);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v31 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v31 ^ 1u, 1, v6);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v71);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_213DAFEC4((uint64_t)v5, &qword_253F06C68);
      }
      else
      {
        v32 = v60;
        sub_213DBB430((uint64_t)v5, v60, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DBB430(v32, v66, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v30 = sub_213DB5648(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
        v34 = *(_QWORD *)(v30 + 16);
        v33 = *(_QWORD *)(v30 + 24);
        if (v34 >= v33 >> 1)
          v30 = sub_213DB5648(v33 > 1, v34 + 1, 1, v30);
        *(_QWORD *)(v30 + 16) = v34 + 1;
        v7 = v61;
        sub_213DBB430(v66, v30+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v61 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
      }
      v29 += 40;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = MEMORY[0x24BEE4AF8];
  }
  v35 = v67;
  if (qword_253F04A88 != -1)
    swift_once();
  v36 = sub_213EF2724();
  __swift_project_value_buffer(v36, (uint64_t)qword_253F08A00);
  swift_retain();
  v37 = sub_213EF270C();
  v38 = sub_213EF2C94();
  v39 = &unk_213EF4000;
  v40 = &unk_253F06000;
  if (os_log_type_enabled(v37, v38))
  {
    v67 = v35;
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    *(_QWORD *)&v71[0] = v42;
    *(_DWORD *)v41 = 136315394;
    if (qword_253F06EA8 != -1)
      swift_once();
    v43 = qword_253F06E90;
    v44 = qword_253F06E98;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v69 = sub_213DB0570(v43, v44, (uint64_t *)v71);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2048;
    *(_QWORD *)&v69 = *(_QWORD *)(v67 + 16);
    v35 = v67;
    sub_213EF2D9C();
    swift_release();
    _os_log_impl(&dword_213DAB000, v37, v38, "%s Found %ld turns with PICS suggestions reported.", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v42, -1, -1);
    MEMORY[0x2199C53C4](v41, -1, -1);

    v40 = (_QWORD *)&unk_253F06000;
    v39 = (_QWORD *)&unk_213EF4000;
  }
  else
  {

    swift_release();
  }
  swift_bridgeObjectRetain();
  v45 = sub_213EF270C();
  v46 = sub_213EF2C94();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    *(_QWORD *)&v71[0] = v48;
    *(_DWORD *)v47 = v39[136];
    if (v40[469] != -1)
      swift_once();
    v49 = qword_253F06E90;
    v50 = qword_253F06E98;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v69 = sub_213DB0570(v49, v50, (uint64_t *)v71);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2048;
    *(_QWORD *)&v69 = *(_QWORD *)(v30 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v45, v46, "%s Found %ld entity prompts in the session.", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v48, -1, -1);
    MEMORY[0x2199C53C4](v47, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v51 = v57;
  swift_retain();
  v52 = sub_213EB7E7C(v35, v51, v30);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  return v52;
}

uint64_t sub_213EB6A44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  char *v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  unint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123[8];
  char v124[16];
  uint64_t v125;
  uint64_t v126[2];

  v119 = a2;
  v112 = *v2;
  v4 = type metadata accessor for FeaturisedTurn(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v118 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v116 = (char *)&v108 - v7;
  v122 = type metadata accessor for EntityPromptClassification();
  v115 = *(_QWORD *)(v122 - 8);
  v8 = MEMORY[0x24BDAC7A8](v122);
  v10 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v108 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v108 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v110 = (uint64_t)&v108 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v111 = (uint64_t)&v108 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_213EF1D64();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v121 = (uint64_t)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v108 - v27;
  FeaturisedTurn.getPlusId()((uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_213DAFEC4((uint64_t)v22, &qword_253F04828);
    if (qword_253F04A88 != -1)
      swift_once();
    v29 = sub_213EF2724();
    __swift_project_value_buffer(v29, (uint64_t)qword_253F08A00);
    v30 = sub_213EF270C();
    v31 = sub_213EF2CA0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v126[0] = v33;
      *(_DWORD *)v32 = 136315138;
      if (qword_253F06EA8 != -1)
        swift_once();
      v34 = qword_253F06E90;
      v35 = qword_253F06E98;
      swift_bridgeObjectRetain();
      v125 = sub_213DB0570(v34, v35, v126);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v30, v31, "%s Missing PLUS Id for turn with PICS suggestions. SELF logs cannot be emitted for these suggestions.", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v33, -1, -1);
      MEMORY[0x2199C53C4](v32, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  v117 = v24;
  v36 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v113 = v28;
  v114 = v23;
  v36(v28, v22, v23);
  v37 = swift_bridgeObjectRetain();
  v38 = sub_213DAFB94(v37);
  swift_bridgeObjectRelease();
  if (v38 != 2 && (v38 & 1) == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v39 = sub_213EF2724();
    __swift_project_value_buffer(v39, (uint64_t)qword_253F08A00);
    v40 = sub_213EF270C();
    v41 = sub_213EF2C94();
    v42 = os_log_type_enabled(v40, v41);
    v44 = v113;
    v43 = v114;
    if (v42)
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v126[0] = v46;
      *(_DWORD *)v45 = 136315138;
      if (qword_253F06EA8 != -1)
        swift_once();
      v47 = qword_253F06E90;
      v48 = qword_253F06E98;
      swift_bridgeObjectRetain();
      v125 = sub_213DB0570(v47, v48, v126);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v40, v41, "%s Runtime suggestions is not enabled for the turn, no outcomes will be extracted", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v46, -1, -1);
      MEMORY[0x2199C53C4](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v44, v43);
    return MEMORY[0x24BEE4AF8];
  }
  v51 = swift_bridgeObjectRetain();
  v52 = sub_213DAF658(v51);
  swift_bridgeObjectRelease();
  if (v52)
    v53 = v52;
  else
    v53 = MEMORY[0x24BEE4AF8];
  v54 = swift_bridgeObjectRetain();
  v55 = (_QWORD *)sub_213DAE9A8(v54);
  swift_bridgeObjectRelease();
  if (v55
    && (v109 = (unint64_t)&unk_213F046D0,
        v56 = sub_213E76530(0xD000000000000023, 0x8000000213F046D0, v55),
        swift_bridgeObjectRelease(),
        (v56 & 1) != 0))
  {
    v57 = *(_QWORD *)(v119 + 16);
    if (v57)
    {
      v58 = a1;
      v108 = v53;
      v59 = v119 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
      v121 = *(_QWORD *)(v115 + 72);
      swift_bridgeObjectRetain();
      v115 = v109 | 0x8000000000000000;
      v60 = (uint64_t)v116;
      while (1)
      {
        sub_213DCA7E4(v59, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if (*v16 == 0xD000000000000023 && v16[1] == v115)
        {
          sub_213DCA7E4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        }
        else
        {
          v61 = sub_213EF3234();
          sub_213DCA7E4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          if ((v61 & 1) == 0)
          {
            sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            sub_213DCA7E4((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            sub_213DCA7E4(v58, v60, type metadata accessor for FeaturisedTurn);
            goto LABEL_28;
          }
        }
        if (*((_QWORD *)v13 + 2) == 0x73746361746E6F63 && *((_QWORD *)v13 + 3) == 0xE800000000000000)
        {
          sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          sub_213DCA7E4((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          sub_213DCA7E4(v58, v60, type metadata accessor for FeaturisedTurn);
LABEL_38:
          v63 = sub_213EF1D28();
          sub_213DCA828(v60, type metadata accessor for FeaturisedTurn);
          sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
          if ((v63 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v64 = v110;
            sub_213DBB430((uint64_t)v16, v110, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            v65 = v111;
            v66 = sub_213DBB430(v64, v111, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            MEMORY[0x24BDAC7A8](v66);
            *(&v108 - 4) = v120;
            *(&v108 - 3) = v65;
            *(&v108 - 2) = v112;
            v53 = v108;
            v67 = sub_213EB5D78((uint64_t (*)(char *))sub_213EB80C4, (uint64_t)(&v108 - 6), v108, type metadata accessor for PlusContactSuggestionRuntimeSummary, (uint64_t)sub_213DB72B8);
            v70 = sub_213EB5230(v68, v65, (uint64_t)sub_213EB80D0, v69, (void (*)(uint64_t))type metadata accessor for PhoneCallSuggestionOutcomeExtractor);
            swift_bridgeObjectRelease();
            v71 = sub_213EB59A8(v67);
            swift_bridgeObjectRelease();
            v126[0] = v70;
            sub_213DB4EDC(v71);
            v72 = v126[0];
            sub_213DCA828(v65, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
            a1 = v58;
            goto LABEL_50;
          }
          goto LABEL_29;
        }
        v62 = sub_213EF3234();
        sub_213DCA828((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DCA7E4((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DCA7E4(v58, v60, type metadata accessor for FeaturisedTurn);
        if ((v62 & 1) != 0)
          goto LABEL_38;
LABEL_28:
        sub_213DCA828(v60, type metadata accessor for FeaturisedTurn);
        sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
LABEL_29:
        sub_213DCA828((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        v59 += v121;
        if (!--v57)
        {
          swift_bridgeObjectRelease();
          v53 = v108;
          a1 = v58;
          break;
        }
      }
    }
    v72 = sub_213EB59A8(v53);
LABEL_50:
    v90 = (uint64_t *)sub_213EB499C(v53);
    v122 = 0;
    swift_bridgeObjectRelease();
    v91 = (uint64_t)v113;
    v92 = v114;
    if (qword_253F04A88 != -1)
      swift_once();
    v93 = sub_213EF2724();
    __swift_project_value_buffer(v93, (uint64_t)qword_253F08A00);
    v94 = v118;
    sub_213DCA7E4(a1, v118, type metadata accessor for FeaturisedTurn);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v95 = sub_213EF270C();
    v96 = sub_213EF2C94();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = swift_slowAlloc();
      v121 = swift_slowAlloc();
      v126[0] = v121;
      *(_DWORD *)v97 = 136315906;
      if (qword_253F06EA8 != -1)
        swift_once();
      v98 = qword_253F06E90;
      v99 = qword_253F06E98;
      swift_bridgeObjectRetain();
      v125 = sub_213DB0570(v98, v99, v126);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v97 + 12) = 2048;
      if (v72 >> 62)
      {
        swift_bridgeObjectRetain();
        v100 = sub_213EF306C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v100 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v125 = v100;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v97 + 22) = 2048;
      v101 = v90[2];
      swift_bridgeObjectRelease();
      v125 = v101;
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v97 + 32) = 2080;
      sub_213E0B898();
      v102 = v118;
      v92 = v114;
      v103 = sub_213EF31F8();
      v125 = sub_213DB0570(v103, v104, v126);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DCA828(v102, type metadata accessor for FeaturisedTurn);
      _os_log_impl(&dword_213DAB000, v95, v96, "%s Generated outcomes for %ld/%ld suggestions in Turn id=%s", (uint8_t *)v97, 0x2Au);
      v105 = v121;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v105, -1, -1);
      MEMORY[0x2199C53C4](v97, -1, -1);

      v91 = (uint64_t)v113;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_213DCA828(v94, type metadata accessor for FeaturisedTurn);

    }
    sub_213EB4AA8(v72, v90, v106, (void (*)(uint64_t))type metadata accessor for PhoneCallSuggestionOutcomeExtractor);
    v107 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v107);
    *(&v108 - 2) = v91;
    v49 = sub_213EC2738((void (*)(id *))sub_213E6E820, (uint64_t)(&v108 - 4), v72, (uint64_t)v123);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v91, v92);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v73 = sub_213EF2724();
    __swift_project_value_buffer(v73, (uint64_t)qword_253F08A00);
    v74 = v117;
    v75 = v121;
    v77 = (uint64_t)v113;
    v76 = v114;
    (*(void (**)(uint64_t, char *, uint64_t))(v117 + 16))(v121, v113, v114);
    v78 = sub_213EF270C();
    v79 = sub_213EF2C94();
    if (os_log_type_enabled(v78, v79))
    {
      v108 = v53;
      v80 = swift_slowAlloc();
      v81 = swift_slowAlloc();
      v126[0] = v81;
      *(_DWORD *)v80 = 136315394;
      if (qword_253F06EA8 != -1)
        swift_once();
      v82 = qword_253F06E90;
      v83 = qword_253F06E98;
      swift_bridgeObjectRetain();
      v125 = sub_213DB0570(v82, v83, v126);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 12) = 2080;
      sub_213E0B898();
      v84 = v121;
      v85 = sub_213EF31F8();
      v125 = sub_213DB0570(v85, v86, v126);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v87 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
      v87(v84, v76);
      _os_log_impl(&dword_213DAB000, v78, v79, "%s Turn with PLUS ID %s does not have a phone call task type. Marking all suggestion outcomes as unknown.", (uint8_t *)v80, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v81, -1, -1);
      MEMORY[0x2199C53C4](v80, -1, -1);

      v53 = v108;
    }
    else
    {
      v87 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
      v87(v75, v76);

    }
    v88 = sub_213E34CE4(v53, 0);
    v89 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v89);
    *(&v108 - 2) = v77;
    v49 = sub_213EC2738((void (*)(id *))sub_213E6EFE4, (uint64_t)(&v108 - 4), v88, (uint64_t)v124);
    swift_bridgeObjectRelease();
    v87(v77, v76);
  }
  return v49;
}

uint64_t sub_213EB7948(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a3;
  v5 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_213EF1D64();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PlusContactSuggestion();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v36 = (uint64_t)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(v5 + 20);
  v38 = a1;
  sub_213DCC3D8(a1 + v20, (uint64_t)v9, &qword_253F04828);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_213DAFEC4((uint64_t)v9, &qword_253F04828);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_4:
    sub_213DAFEC4((uint64_t)v16, &qword_253F06B28);
    v23 = (uint64_t)v39;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v21 = a2[5];
  v22 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 64))(v13, v21, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    goto LABEL_4;
  v34 = v36;
  sub_213DBB430((uint64_t)v16, v36, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v35 = sub_213E76530(*(_QWORD *)(v34 + *(int *)(v17 + 24)), *(_QWORD *)(v34 + *(int *)(v17 + 24) + 8), *(_QWORD **)(v37 + 32));
  sub_213DCA828(v34, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  v23 = (uint64_t)v39;
  if ((v35 & 1) != 0)
    return 1;
LABEL_5:
  if (qword_253F04A88 != -1)
    swift_once();
  v24 = sub_213EF2724();
  __swift_project_value_buffer(v24, (uint64_t)qword_253F08A00);
  sub_213DCA7E4(v38, v23, type metadata accessor for PlusContactSuggestionRuntimeSummary);
  v25 = sub_213EF270C();
  v26 = sub_213EF2CA0();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v41 = v28;
    *(_DWORD *)v27 = 136315394;
    if (qword_253F06EA8 != -1)
      swift_once();
    v29 = qword_253F06E90;
    v30 = qword_253F06E98;
    swift_bridgeObjectRetain();
    v40 = sub_213DB0570(v29, v30, &v41);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    v31 = sub_213EF1D10();
    v40 = sub_213DB0570(v31, v32, &v41);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DCA828(v23, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    _os_log_impl(&dword_213DAB000, v25, v26, "%s Suggestion was not in the prompt entities. Falling back to non-prompt resolution. suggestionId=%s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v28, -1, -1);
    MEMORY[0x2199C53C4](v27, -1, -1);
  }
  else
  {
    sub_213DCA828(v23, type metadata accessor for PlusContactSuggestionRuntimeSummary);
  }

  return 0;
}

